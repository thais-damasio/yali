; ModuleID = 'Project_CodeNet_C++1400/p00747/s291792835.cpp'
source_filename = "Project_CodeNet_C++1400/p00747/s291792835.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::unordered_map" = type { %"class.std::_Hashtable" }
%"class.std::_Hashtable" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Hash_node_base" = type { %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Prime_rehash_policy" = type { float, i64 }
%class.Pos = type { i32, i32, i64 }
%"struct.std::pair" = type <{ %"struct.std::__detail::_Node_iterator", i8, [7 x i8] }>
%"struct.std::__detail::_Node_iterator" = type { %"struct.std::__detail::_Node_iterator_base" }
%"struct.std::__detail::_Node_iterator_base" = type { %"struct.std::__detail::_Hash_node"* }
%"struct.std::__detail::_Hash_node" = type { %"struct.std::__detail::_Hash_node_value_base", i64 }
%"struct.std::__detail::_Hash_node_value_base" = type { %"struct.std::__detail::_Hash_node_base", %"struct.__gnu_cxx::__aligned_buffer" }
%"struct.__gnu_cxx::__aligned_buffer" = type { %"union.std::aligned_storage<16, 8>::type" }
%"union.std::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"class.std::unordered_map.18" = type { %"class.std::_Hashtable.19" }
%"class.std::_Hashtable.19" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl" }
%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl" = type { %class.Pos**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { %class.Pos*, %class.Pos*, %class.Pos*, %class.Pos** }
%"class.std::unordered_set" = type { %"class.std::_Hashtable.4" }
%"class.std::_Hashtable.4" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Map_base" = type { i8 }
%"struct.std::__detail::_Insert.9" = type { i8 }
%"struct.std::__detail::_Insert_base.10" = type { i8 }
%"class.std::allocator.32" = type { i8 }
%"struct.std::__detail::_Map_base.22" = type { i8 }
%"struct.std::__detail::_Hashtable_base" = type { i8 }
%"struct.std::__detail::_Insert" = type { i8 }
%"struct.std::__detail::_Rehash_base" = type { i8 }
%"struct.std::__detail::_Equality" = type { i8 }
%"struct.std::__detail::_Hashtable_alloc" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.3" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"struct.std::__detail::_Hashtable_base.20" = type { i8 }
%"struct.std::__detail::_Insert.23" = type { i8 }
%"struct.std::__detail::_Rehash_base.25" = type { i8 }
%"struct.std::__detail::_Equality.26" = type { i8 }
%"struct.std::__detail::_Hashtable_alloc.27" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.28" = type { i8 }
%"class.std::allocator.29" = type { i8 }
%"class.__gnu_cxx::new_allocator.30" = type { i8 }
%"struct.std::__detail::_Hash_node.35" = type { %"struct.std::__detail::_Hash_node_value_base.36", i64 }
%"struct.std::__detail::_Hash_node_value_base.36" = type { %"struct.std::__detail::_Hash_node_base", %"struct.__gnu_cxx::__aligned_buffer.37" }
%"struct.__gnu_cxx::__aligned_buffer.37" = type { %"union.std::aligned_storage<24, 8>::type" }
%"union.std::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"class.std::allocator.40" = type { i8 }
%"struct.std::pair.43" = type <{ %class.Pos, i32, [4 x i8] }>
%"class.__gnu_cxx::new_allocator.41" = type { i8 }
%"class.std::allocator.45" = type { i8 }
%"class.__gnu_cxx::new_allocator.46" = type { i8 }
%"struct.std::__detail::_Hash_node.48" = type { %"struct.std::__detail::_Hash_node_value_base.49", i64 }
%"struct.std::__detail::_Hash_node_value_base.49" = type { %"struct.std::__detail::_Hash_node_base", %"struct.__gnu_cxx::__aligned_buffer.50" }
%"struct.__gnu_cxx::__aligned_buffer.50" = type { %"union.std::aligned_storage<72, 8>::type" }
%"union.std::aligned_storage<72, 8>::type" = type { [72 x i8] }
%"class.std::allocator.53" = type { i8 }
%"struct.std::pair.56" = type { %class.Pos, %"class.std::unordered_set" }
%"class.__gnu_cxx::new_allocator.54" = type { i8 }
%"struct.std::__detail::_Hashtable_alloc.13" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.14" = type { i8 }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.33" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"struct.std::__detail::_Node_iterator.58" = type { %"struct.std::__detail::_Node_iterator_base.59" }
%"struct.std::__detail::_Node_iterator_base.59" = type { %"struct.std::__detail::_Hash_node.48"* }
%"class.std::tuple.57" = type { i8 }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { %class.Pos* }
%"struct.std::__detail::_Hash_code_base" = type { i8 }
%"struct.std::hash" = type { i8 }
%"struct.std::pair.61" = type { i8, i64 }
%"struct.std::__detail::_Select1st" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.0" = type { i8 }
%"struct.std::__detail::_Mod_range_hashing" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.1" = type { i8 }
%"struct.std::equal_to" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.2" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper" = type { i8 }
%"struct.std::_Index_tuple" = type { i8 }
%"struct.std::_Index_tuple.60" = type { i8 }
%"struct.std::__detail::_Hashtable_base.5" = type { i8 }
%"struct.std::__detail::_Map_base.8" = type { i8 }
%"struct.std::__detail::_Rehash_base.11" = type { i8 }
%"struct.std::__detail::_Equality.12" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.std::__detail::_AllocNode" = type { %"struct.std::__detail::_Hashtable_alloc.13"* }
%"struct.std::__detail::_Hash_code_base.6" = type { i8 }
%"struct.std::__detail::_Identity" = type { i8 }
%"struct.std::__detail::_Hashtable_ebo_helper.7" = type { i8 }
%"class.std::allocator.62" = type { i8 }
%"class.__gnu_cxx::new_allocator.63" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"struct.std::__detail::_Node_iterator.68" = type { %"struct.std::__detail::_Node_iterator_base.69" }
%"struct.std::__detail::_Node_iterator_base.69" = type { %"struct.std::__detail::_Hash_node.35"* }
%"class.std::tuple.65" = type { %"struct.std::_Tuple_impl.66" }
%"struct.std::_Tuple_impl.66" = type { %"struct.std::_Head_base.67" }
%"struct.std::_Head_base.67" = type { %class.Pos* }
%"struct.std::__detail::_Hash_code_base.21" = type { i8 }

$_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEC2Ev = comdat any

$_ZN3PosC2Eii = comdat any

$_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_ = comdat any

$_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE6insertERKS0_ = comdat any

$_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEC2Ev = comdat any

$_ZNSt5dequeI3PosSaIS0_EEC2Ev = comdat any

$_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEEC2EOS3_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EED2Ev = comdat any

$_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE4pushEOS0_ = comdat any

$_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixEOS0_ = comdat any

$_ZNKSt5queueI3PosSt5dequeIS0_SaIS0_EEE5emptyEv = comdat any

$_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE5frontEv = comdat any

$_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE3popEv = comdat any

$_ZNK3PoseqES_ = comdat any

$_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixERS6_ = comdat any

$_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE5beginEv = comdat any

$_ZNSt8__detailneI3PosLb1EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES6_ = comdat any

$_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE3endEv = comdat any

$_ZNKSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEE5countERS6_ = comdat any

$_ZNKSt8__detail14_Node_iteratorI3PosLb1ELb1EEdeEv = comdat any

$_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE4pushERKS0_ = comdat any

$_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEppEv = comdat any

$_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEED2Ev = comdat any

$_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEED2Ev = comdat any

$_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEED2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEEC2Ev = comdat any

$_ZNSt8__detail15_Hash_node_baseC2Ev = comdat any

$_ZNSt8__detail20_Prime_rehash_policyC2Ef = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EEC2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEEC2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEEC2Ev = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EEC2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEC2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE19_M_deallocate_nodesEPS6_ = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv = comdat any

$_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE18_M_deallocate_nodeEPS6_ = comdat any

$_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE10pointer_toERS6_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv = comdat any

$_ZNSaISt4pairIK3PosiEEC2INSt8__detail10_Hash_nodeIS2_Lb1EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE7destroyIS3_EEvRS4_PT_ = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE10deallocateERS7_PS6_m = comdat any

$_ZNSaISt4pairIK3PosiEED2Ev = comdat any

$_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_ = comdat any

$_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EE6_S_getERS8_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE7destroyIS4_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosiEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosiEE7_M_addrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE10deallocateEPS7_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEED2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS5_15_Hash_node_baseEm = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNS5_15_Hash_node_baseE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm = comdat any

$_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_ = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosiELb1EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev = comdat any

$_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ = comdat any

$_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EED2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEED2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEED2Ev = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE19_M_deallocate_nodesEPSD_ = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv = comdat any

$_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE18_M_deallocate_nodeEPSD_ = comdat any

$_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEE10pointer_toERSD_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv = comdat any

$_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEEC2INSt8__detail10_Hash_nodeIS9_Lb1EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaISt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEE7destroyISA_EEvRSB_PT_ = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE10deallocateERSE_PSD_m = comdat any

$_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev = comdat any

$_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_ = comdat any

$_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EE6_S_getERSF_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE7destroyISB_EEvPT_ = comdat any

$_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEED2Ev = comdat any

$_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EED2Ev = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEED2Ev = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5clearEv = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_deallocate_bucketsEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEED2Ev = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE19_M_deallocate_nodesEPS3_ = comdat any

$_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE8_M_beginEv = comdat any

$_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE18_M_deallocate_nodeEPS3_ = comdat any

$_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeI3PosLb1EEEE10pointer_toERS3_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv = comdat any

$_ZNSaI3PosEC2INSt8__detail10_Hash_nodeIS_Lb1EEEEERKSaIT_E = comdat any

$_ZNSt16allocator_traitsISaI3PosEE7destroyIS0_EEvRS1_PT_ = comdat any

$_ZNSt8__detail21_Hash_node_value_baseI3PosE9_M_valptrEv = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE10deallocateERS4_PS3_m = comdat any

$_ZNSaI3PosED2Ev = comdat any

$_ZSt9addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_ = comdat any

$_ZSt11__addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EE6_S_getERS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosE7destroyIS1_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_bufferI3PosE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_bufferI3PosE7_M_addrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE10deallocateEPS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosED2Ev = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_deallocate_bucketsEPPNS2_15_Hash_node_baseEm = comdat any

$_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_uses_single_bucketEPPNS2_15_Hash_node_baseE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeI3PosLb1EEEEERKSaIT_E = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EED2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeI3PosLb1EEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEED2Ev = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE7_M_addrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE10deallocateEPSE_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEED2Ev = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm = comdat any

$_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS6_St4hashIS6_ESt8equal_toIS6_ESaIS6_EEELb1EEEEERKSaIT_E = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EED2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEED2Ev = comdat any

$_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEESaISB_ENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS3_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_ = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESK_IJEEEEEPSD_DpOT_ = comdat any

$_ZNSt5tupleIJRK3PosEEC2ES2_ = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSC_10_Hash_nodeISA_Lb1EEE = comdat any

$_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb0ELb1EEptEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE4_M_vEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev = comdat any

$_ZNKSt4hashI3PosEclERKS0_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashI3PosELb1EE7_S_cgetERKS4_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERS3_mm = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev = comdat any

$_ZNKSt8__detail18_Mod_range_hashingclEmm = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_ = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m = comdat any

$_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeISB_Lb1EEE = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNSC_10_Hash_nodeISA_Lb1EEE = comdat any

$_ZNSt8__detail13_Equal_helperI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_mLb1EE9_S_equalsERKS8_RKSC_RS3_mPNS_10_Hash_nodeISB_Lb1EEE = comdat any

$_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv = comdat any

$_ZNKSt8equal_toI3PosEclERKS0_S3_ = comdat any

$_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOSE_ = comdat any

$_ZSt3getILm0EK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERSD_ = comdat any

$_ZSt7forwardIRSt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEOT_RNSt16remove_referenceISC_E4typeE = comdat any

$_ZNSt10__pair_getILm0EE5__getIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEERT_RSt4pairISB_T0_E = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toI3PosELb1EE7_S_cgetERKS4_ = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeISB_Lb1EEEm = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE8allocateERSE_m = comdat any

$_ZNSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEC2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE8max_sizeEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJRK3PosEEC2EOS3_ = comdat any

$_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEC2IJRS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRK3PosEEC2EOS3_ = comdat any

$_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRK3PosEE7_M_headERS3_ = comdat any

$_ZNSt10_Head_baseILm0ERK3PosLb0EEC2ES2_ = comdat any

$_ZNSt10_Head_baseILm0ERK3PosLb0EE7_M_headERS3_ = comdat any

$_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEC2IJRS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJRK3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_ = comdat any

$_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EEC2Ev = comdat any

$_ZSt12__get_helperILm0ERK3PosJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEEC2Ev = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEEC2Ev = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EEC2Ev = comdat any

$_ZNSaINSt8__detail10_Hash_nodeI3PosLb1EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm0EJRK3PosEEC2ES2_ = comdat any

$_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm = comdat any

$_ZNSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeISB_Lb1EEEm = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSC_10_Hash_nodeISA_Lb1EEE = comdat any

$_ZNSt8__detail14_Node_iteratorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE = comdat any

$_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_ = comdat any

$_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE = comdat any

$_ZNSt8__detail12_Insert_baseI3PosS1_SaIS1_ENS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb1ELb1EEEE6insertERKS1_ = comdat any

$_ZNSt8__detail12_Insert_baseI3PosS1_SaIS1_ENS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb1ELb1EEEE20_M_conjure_hashtableEv = comdat any

$_ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeI3PosLb1EEEEEC2ERNS_16_Hashtable_allocIS4_EE = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_insertIRKS0_NS2_10_AllocNodeISaINS2_10_Hash_nodeIS0_Lb1EEEEEEEESt4pairINS2_14_Node_iteratorIS0_Lb1ELb1EEEbEOT_RKT0_St17integral_constantIbLb1EE = comdat any

$_ZNSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv = comdat any

$_ZNKSt8__detail9_IdentityclIRK3PosEEOT_S6_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERKS1_ = comdat any

$_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexERKS0_m = comdat any

$_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE12_M_find_nodeEmRKS0_m = comdat any

$_ZSt9make_pairINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEbESt4pairINSt17__decay_and_stripIT_E6__typeENS5_IT0_E6__typeEEOS6_OS9_ = comdat any

$_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE = comdat any

$_ZNKSt8__detail10_AllocNodeISaINS_10_Hash_nodeI3PosLb1EEEEEclIRKS2_EEPS3_OT_ = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS2_10_Hash_nodeIS0_Lb1EEE = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE6_S_getERS2_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKS1_mm = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev = comdat any

$_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE19_M_find_before_nodeEmRKS0_m = comdat any

$_ZNKSt8__detail15_Hashtable_baseI3PosS1_NS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_equalsERKS1_mPNS_10_Hash_nodeIS1_Lb1EEE = comdat any

$_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexEPNS2_10_Hash_nodeIS0_Lb1EEE = comdat any

$_ZNSt8__detail13_Equal_helperI3PosS1_NS_9_IdentityESt8equal_toIS1_EmLb1EE9_S_equalsERKS4_RKS2_RKS1_mPNS_10_Hash_nodeIS1_Lb1EEE = comdat any

$_ZNKSt8__detail15_Hashtable_baseI3PosS1_NS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb1ELb1EEEE5_M_eqEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv = comdat any

$_ZNKSt8__detail9_IdentityclIR3PosEEOT_S5_ = comdat any

$_ZNSt8__detail21_Hash_node_value_baseI3PosE4_M_vEv = comdat any

$_ZSt7forwardIR3PosEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE7_S_cgetERKS2_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS1_Lb1EEEm = comdat any

$_ZSt7forwardINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEbEC2IS3_bvEEOT_OT0_ = comdat any

$_ZNSt8__detail19_Node_iterator_baseI3PosLb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE16_M_allocate_nodeIJRKS2_EEEPS3_DpOT_ = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE8allocateERS4_m = comdat any

$_ZNSt8__detail10_Hash_nodeI3PosLb1EEC2Ev = comdat any

$_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE8max_sizeEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseI3PosEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosE9constructIS1_JRKS1_EEEvPT_DpOT0_ = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_rehashEmRKm = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeIS1_Lb1EEEm = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE22_M_insert_bucket_beginEmPNS2_10_Hash_nodeIS0_Lb1EEE = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EEC2Ev = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implD2Ev = comdat any

$_ZNSaI3PosEC2Ev = comdat any

$_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE15_M_create_nodesEPPS0_S4_ = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_deallocate_mapEPPS0_m = comdat any

$_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_ = comdat any

$_ZNKSt11_Deque_baseI3PosSaIS0_EE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIP3PosEE8allocateERS2_m = comdat any

$_ZNSaIP3PosED2Ev = comdat any

$_ZNKSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIP3PosEC2IS_EERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIP3PosEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP3PosE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP3PosE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIP3PosED2Ev = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_destroy_nodesEPPS0_S4_ = comdat any

$_ZNSt16allocator_traitsISaI3PosEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI3PosE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_ = comdat any

$_ZNSt16allocator_traitsISaI3PosEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosE10deallocateEPS1_m = comdat any

$_ZNSt16allocator_traitsISaIP3PosEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP3PosE10deallocateEPS2_m = comdat any

$_ZNSt15_Deque_iteratorI3PosRS0_PS0_E14_S_buffer_sizeEv = comdat any

$_ZNSt5dequeI3PosSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EE5beginEv = comdat any

$_ZNSt5dequeI3PosSaIS0_EE3endEv = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EED2Ev = comdat any

$_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2ERKS3_ = comdat any

$_ZSt4moveIRSt5dequeI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EEC2EOS2_ = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EEC2EOS2_ = comdat any

$_ZSt4moveIRSt11_Deque_baseI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EEC2EOS2_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaI3PosEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2EOS1_ = comdat any

$_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_impl12_M_swap_dataERS3_ = comdat any

$_ZNSaI3PosEC2ERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosEC2ERKS2_ = comdat any

$_ZSt4swapISt15_Deque_iteratorI3PosRS1_PS1_EEvRT_S6_ = comdat any

$_ZSt4swapIPP3PosEvRT_S4_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorI3PosRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZSt4moveIRPP3PosEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EE9push_backEOS0_ = comdat any

$_ZSt4moveIR3PosEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EE12emplace_backIJS0_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt5dequeI3PosSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI3PosE9constructIS1_JS1_EEEvPT_DpOT0_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeI3PosSaIS0_EE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPP3PosS2_ET0_T_S4_S3_ = comdat any

$_ZSt13copy_backwardIPP3PosS2_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPP3PosS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb0EPP3PosS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP3PosEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIPP3PosLb0EE7_S_baseES2_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPP3PosS2_ET1_T0_S4_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPP3PosS2_ET1_T0_S4_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP3PosEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_iESaIS4_ENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixEOS1_ = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_ = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEPS6_DpOT_ = comdat any

$_ZSt16forward_as_tupleIJ3PosEESt5tupleIJDpOT_EES4_ = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS5_10_Hash_nodeIS3_Lb1EEE = comdat any

$_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEptEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE4_M_vEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERS3_mm = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m = comdat any

$_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeIS4_Lb1EEE = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNS5_10_Hash_nodeIS3_Lb1EEE = comdat any

$_ZNSt8__detail13_Equal_helperI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_EmLb1EE9_S_equalsERKS7_RKS5_RS3_mPNS_10_Hash_nodeIS4_Lb1EEE = comdat any

$_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv = comdat any

$_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ = comdat any

$_ZSt3getILm0EK3PosiERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS6_ = comdat any

$_ZSt7forwardIRSt4pairIK3PosiEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt10__pair_getILm0EE5__getIK3PosiEERT_RSt4pairIS4_T0_E = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS4_Lb1EEEm = comdat any

$_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE8allocateERS7_m = comdat any

$_ZNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEC2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOS1_EESA_IJEEEEEvRS4_PT_DpOT0_ = comdat any

$_ZSt7forwardISt5tupleIJO3PosEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE8max_sizeEv = comdat any

$_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOS2_EESA_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJO3PosEEC2EOS2_ = comdat any

$_ZNSt4pairIK3PosiEC2IJOS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJO3PosEEC2EOS2_ = comdat any

$_ZSt7forwardIO3PosEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJO3PosEE7_M_headERS2_ = comdat any

$_ZNSt10_Head_baseILm0EO3PosLb0EEC2IS0_EEOT_ = comdat any

$_ZNSt10_Head_baseILm0EO3PosLb0EE7_M_headERS2_ = comdat any

$_ZNSt4pairIK3PosiEC2IJOS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJO3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ = comdat any

$_ZSt12__get_helperILm0EO3PosJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE = comdat any

$_ZNSt5tupleIJO3PosEEC2IJS0_EvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJO3PosEEC2IS0_EEOT_ = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm = comdat any

$_ZNSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv = comdat any

$_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeIS4_Lb1EEEm = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS5_10_Hash_nodeIS3_Lb1EEE = comdat any

$_ZNSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEC2EPNS_10_Hash_nodeIS4_Lb1EEE = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE = comdat any

$_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE19_M_allocate_bucketsEm = comdat any

$_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosiELb1EEC2EPNS_10_Hash_nodeIS4_Lb1EEE = comdat any

$_ZNKSt5dequeI3PosSaIS0_EE5emptyEv = comdat any

$_ZSteqI3PosRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorI3PosRS0_PS0_EdeEv = comdat any

$_ZNSt5dequeI3PosSaIS0_EE9pop_frontEv = comdat any

$_ZNSt5dequeI3PosSaIS0_EE16_M_pop_front_auxEv = comdat any

$_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_iESaIS4_ENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS3_ = comdat any

$_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESD_IJEEEEEPS6_DpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESA_IJEEEEEvRS4_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESA_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIK3PosiEC2IJRS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE = comdat any

$_ZNSt4pairIK3PosiEC2IJRS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5beginEv = comdat any

$_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE3endEv = comdat any

$_ZNSt8__detail19_Node_iterator_baseI3PosLb1EE7_M_incrEv = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE5countERS2_ = comdat any

$_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_beginEm = comdat any

$_ZNSt5dequeI3PosSaIS0_EE9push_backERKS0_ = comdat any

$_ZNSt5dequeI3PosSaIS0_EE16_M_push_back_auxIJRKS0_EEEvDpOT_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s291792835.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = add i32 %3, 1373388241
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1373388241
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 673108687, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %56
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 673108687, label %17
    i32 -574361200, label %37
    i32 287601522, label %53
    i32 1073851697, label %54
  ]

; <label>:16:                                     ; preds = %14
  br label %56

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -574361200, i32 1073851697
  store i32 %36, i32* %13
  br label %56

; <label>:37:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %38 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 287601522, i32 1073851697
  store i32 %52, i32* %13
  br label %56

; <label>:53:                                     ; preds = %14
  ret void

; <label>:54:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %55 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 -574361200, i32* %13
  br label %56

; <label>:56:                                     ; preds = %54, %37, %17, %16
  br label %14
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.1
  %2 = load i32, i32* @y.2
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = xor i1 %8, true
  %11 = xor i1 %9, true
  %12 = xor i1 true, true
  %13 = and i1 %10, true
  %14 = and i1 %8, %12
  %15 = and i1 %11, true
  %16 = and i1 %9, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 true, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %8, %9
  br i1 %24, label %26, label %1208

; <label>:26:                                     ; preds = %0, %1208
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %"class.std::unordered_map", align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8, align 1
  %34 = alloca i8*
  %35 = alloca i32
  %36 = alloca %class.Pos, align 8
  %37 = alloca %class.Pos, align 8
  %38 = alloca %"struct.std::pair", align 8
  %39 = alloca %"struct.std::pair", align 8
  %40 = alloca i32, align 4
  %41 = alloca i8, align 1
  %42 = alloca %class.Pos, align 8
  %43 = alloca %class.Pos, align 8
  %44 = alloca %"struct.std::pair", align 8
  %45 = alloca %"struct.std::pair", align 8
  %46 = alloca %class.Pos, align 8
  %47 = alloca %"class.std::unordered_map.18", align 8
  %48 = alloca %"class.std::queue", align 8
  %49 = alloca %"class.std::deque", align 8
  %50 = alloca %class.Pos, align 8
  %51 = alloca %class.Pos, align 8
  %52 = alloca i8, align 1
  %53 = alloca %class.Pos, align 8
  %54 = alloca %class.Pos, align 8
  %55 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %56 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store i32 0, i32* %27, align 4
  %57 = load i32, i32* @x.1
  %58 = load i32, i32* @y.2
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %1208

; <label>:70:                                     ; preds = %26
  br label %71

; <label>:71:                                     ; preds = %1170, %70
  %72 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %29)
  %73 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %72, i32* dereferenceable(4) %28)
  %74 = load i32, i32* %29, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %79, label %76

; <label>:76:                                     ; preds = %71
  %77 = load i32, i32* %28, align 4
  %78 = icmp ne i32 %77, 0
  br label %79

; <label>:79:                                     ; preds = %76, %71
  %80 = phi i1 [ true, %71 ], [ %78, %76 ]
  br i1 %80, label %81, label %1173

; <label>:81:                                     ; preds = %79
  call void @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEC2Ev(%"class.std::unordered_map"* %30) #3
  store i32 0, i32* %31, align 4
  br label %82

; <label>:82:                                     ; preds = %484, %81
  %83 = load i32, i32* %31, align 4
  %84 = load i32, i32* %28, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %86, label %485

; <label>:86:                                     ; preds = %82
  store i32 0, i32* %32, align 4
  br label %87

; <label>:87:                                     ; preds = %221, %86
  %88 = load i32, i32* @x.1
  %89 = load i32, i32* @y.2
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %1239

; <label>:101:                                    ; preds = %87, %1239
  %102 = load i32, i32* %32, align 4
  %103 = load i32, i32* %29, align 4
  %104 = sub i32 %103, 1380606820
  %105 = sub i32 %104, 1
  %106 = add i32 %105, 1380606820
  %107 = sub nsw i32 %103, 1
  %108 = icmp slt i32 %102, %106
  %109 = load i32, i32* @x.1
  %110 = load i32, i32* @y.2
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %1239

; <label>:122:                                    ; preds = %101
  br i1 %108, label %123, label %228

; <label>:123:                                    ; preds = %122
  %124 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"* @_ZSt3cin, i8* dereferenceable(1) %33)
          to label %125 unwind label %186

; <label>:125:                                    ; preds = %123
  %126 = load i8, i8* %33, align 1
  %127 = trunc i8 %126 to i1
  br i1 %127, label %190, label %128

; <label>:128:                                    ; preds = %125
  %129 = load i32, i32* %31, align 4
  %130 = load i32, i32* %32, align 4
  invoke void @_ZN3PosC2Eii(%class.Pos* %36, i32 %129, i32 %130)
          to label %131 unwind label %186

; <label>:131:                                    ; preds = %128
  %132 = load i32, i32* %31, align 4
  %133 = load i32, i32* %32, align 4
  %134 = add i32 %133, 1778868751
  %135 = add i32 %134, 1
  %136 = sub i32 %135, 1778868751
  %137 = add nsw i32 %133, 1
  invoke void @_ZN3PosC2Eii(%class.Pos* %37, i32 %132, i32 %136)
          to label %138 unwind label %186

; <label>:138:                                    ; preds = %131
  %139 = invoke dereferenceable(56) %"class.std::unordered_set"* @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_(%"class.std::unordered_map"* %30, %class.Pos* dereferenceable(16) %36)
          to label %140 unwind label %186

; <label>:140:                                    ; preds = %138
  %141 = invoke { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE6insertERKS0_(%"class.std::unordered_set"* %139, %class.Pos* dereferenceable(16) %37)
          to label %142 unwind label %186

; <label>:142:                                    ; preds = %140
  %143 = load i32, i32* @x.1
  %144 = load i32, i32* @y.2
  %145 = add i32 %143, -662161030
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, -662161030
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %1287

; <label>:157:                                    ; preds = %142, %1287
  %158 = bitcast %"struct.std::pair"* %38 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %159 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %158, i32 0, i32 0
  %160 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %141, 0
  store %"struct.std::__detail::_Hash_node"* %160, %"struct.std::__detail::_Hash_node"** %159, align 8
  %161 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %158, i32 0, i32 1
  %162 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %141, 1
  store i8 %162, i8* %161, align 8
  %163 = load i32, i32* @x.1
  %164 = load i32, i32* @y.2
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  br i1 %174, label %176, label %1287

; <label>:176:                                    ; preds = %157
  %177 = invoke dereferenceable(56) %"class.std::unordered_set"* @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_(%"class.std::unordered_map"* %30, %class.Pos* dereferenceable(16) %37)
          to label %178 unwind label %186

; <label>:178:                                    ; preds = %176
  %179 = invoke { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE6insertERKS0_(%"class.std::unordered_set"* %177, %class.Pos* dereferenceable(16) %36)
          to label %180 unwind label %186

; <label>:180:                                    ; preds = %178
  %181 = bitcast %"struct.std::pair"* %39 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %182 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %181, i32 0, i32 0
  %183 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %179, 0
  store %"struct.std::__detail::_Hash_node"* %183, %"struct.std::__detail::_Hash_node"** %182, align 8
  %184 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %181, i32 0, i32 1
  %185 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %179, 1
  store i8 %185, i8* %184, align 8
  br label %190

; <label>:186:                                    ; preds = %548, %306, %299, %297, %295, %289, %286, %281, %178, %176, %140, %138, %131, %128, %123
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %34, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %35, align 4
  br label %1172

; <label>:190:                                    ; preds = %180, %125
  %191 = load i32, i32* @x.1
  %192 = load i32, i32* @y.2
  %193 = sub i32 %191, 1365085401
  %194 = sub i32 %193, 1
  %195 = add i32 %194, 1365085401
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = and i1 %199, %200
  %202 = xor i1 %199, %200
  %203 = or i1 %201, %202
  %204 = or i1 %199, %200
  br i1 %203, label %205, label %1293

; <label>:205:                                    ; preds = %190, %1293
  %206 = load i32, i32* @x.1
  %207 = load i32, i32* @y.2
  %208 = sub i32 %206, -312676832
  %209 = sub i32 %208, 1
  %210 = add i32 %209, -312676832
  %211 = sub i32 %206, 1
  %212 = mul i32 %206, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %207, 10
  %216 = and i1 %214, %215
  %217 = xor i1 %214, %215
  %218 = or i1 %216, %217
  %219 = or i1 %214, %215
  br i1 %218, label %220, label %1293

; <label>:220:                                    ; preds = %205
  br label %221

; <label>:221:                                    ; preds = %220
  %222 = load i32, i32* %32, align 4
  %223 = sub i32 0, %222
  %224 = sub i32 0, 1
  %225 = add i32 %223, %224
  %226 = sub i32 0, %225
  %227 = add nsw i32 %222, 1
  store i32 %226, i32* %32, align 4
  br label %87

; <label>:228:                                    ; preds = %122
  %229 = load i32, i32* %31, align 4
  %230 = load i32, i32* %28, align 4
  %231 = sub i32 0, 1
  %232 = add i32 %230, %231
  %233 = sub nsw i32 %230, 1
  %234 = icmp slt i32 %229, %232
  br i1 %234, label %235, label %418

; <label>:235:                                    ; preds = %228
  %236 = load i32, i32* @x.1
  %237 = load i32, i32* @y.2
  %238 = sub i32 0, 1
  %239 = add i32 %236, %238
  %240 = sub i32 %236, 1
  %241 = mul i32 %236, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %237, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  br i1 %247, label %249, label %1294

; <label>:249:                                    ; preds = %235, %1294
  store i32 0, i32* %40, align 4
  %250 = load i32, i32* @x.1
  %251 = load i32, i32* @y.2
  %252 = sub i32 %250, 360683930
  %253 = sub i32 %252, 1
  %254 = add i32 %253, 360683930
  %255 = sub i32 %250, 1
  %256 = mul i32 %250, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %251, 10
  %260 = xor i1 %258, true
  %261 = xor i1 %259, true
  %262 = xor i1 false, true
  %263 = and i1 %260, false
  %264 = and i1 %258, %262
  %265 = and i1 %261, false
  %266 = and i1 %259, %262
  %267 = or i1 %263, %264
  %268 = or i1 %265, %266
  %269 = xor i1 %267, %268
  %270 = or i1 %260, %261
  %271 = xor i1 %270, true
  %272 = or i1 false, %262
  %273 = and i1 %271, %272
  %274 = or i1 %269, %273
  %275 = or i1 %258, %259
  br i1 %274, label %276, label %1294

; <label>:276:                                    ; preds = %249
  br label %277

; <label>:277:                                    ; preds = %369, %276
  %278 = load i32, i32* %40, align 4
  %279 = load i32, i32* %29, align 4
  %280 = icmp slt i32 %278, %279
  br i1 %280, label %281, label %375

; <label>:281:                                    ; preds = %277
  %282 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"* @_ZSt3cin, i8* dereferenceable(1) %41)
          to label %283 unwind label %186

; <label>:283:                                    ; preds = %281
  %284 = load i8, i8* %41, align 1
  %285 = trunc i8 %284 to i1
  br i1 %285, label %368, label %286

; <label>:286:                                    ; preds = %283
  %287 = load i32, i32* %31, align 4
  %288 = load i32, i32* %40, align 4
  invoke void @_ZN3PosC2Eii(%class.Pos* %42, i32 %287, i32 %288)
          to label %289 unwind label %186

; <label>:289:                                    ; preds = %286
  %290 = load i32, i32* %31, align 4
  %291 = sub i32 0, 1
  %292 = sub i32 %290, %291
  %293 = add nsw i32 %290, 1
  %294 = load i32, i32* %40, align 4
  invoke void @_ZN3PosC2Eii(%class.Pos* %43, i32 %292, i32 %294)
          to label %295 unwind label %186

; <label>:295:                                    ; preds = %289
  %296 = invoke dereferenceable(56) %"class.std::unordered_set"* @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_(%"class.std::unordered_map"* %30, %class.Pos* dereferenceable(16) %42)
          to label %297 unwind label %186

; <label>:297:                                    ; preds = %295
  %298 = invoke { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE6insertERKS0_(%"class.std::unordered_set"* %296, %class.Pos* dereferenceable(16) %43)
          to label %299 unwind label %186

; <label>:299:                                    ; preds = %297
  %300 = bitcast %"struct.std::pair"* %44 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %301 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %300, i32 0, i32 0
  %302 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %298, 0
  store %"struct.std::__detail::_Hash_node"* %302, %"struct.std::__detail::_Hash_node"** %301, align 8
  %303 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %300, i32 0, i32 1
  %304 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %298, 1
  store i8 %304, i8* %303, align 8
  %305 = invoke dereferenceable(56) %"class.std::unordered_set"* @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_(%"class.std::unordered_map"* %30, %class.Pos* dereferenceable(16) %43)
          to label %306 unwind label %186

; <label>:306:                                    ; preds = %299
  %307 = invoke { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE6insertERKS0_(%"class.std::unordered_set"* %305, %class.Pos* dereferenceable(16) %42)
          to label %308 unwind label %186

; <label>:308:                                    ; preds = %306
  %309 = load i32, i32* @x.1
  %310 = load i32, i32* @y.2
  %311 = add i32 %309, -1637910482
  %312 = sub i32 %311, 1
  %313 = sub i32 %312, -1637910482
  %314 = sub i32 %309, 1
  %315 = mul i32 %309, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %310, 10
  %319 = xor i1 %317, true
  %320 = xor i1 %318, true
  %321 = xor i1 true, true
  %322 = and i1 %319, true
  %323 = and i1 %317, %321
  %324 = and i1 %320, true
  %325 = and i1 %318, %321
  %326 = or i1 %322, %323
  %327 = or i1 %324, %325
  %328 = xor i1 %326, %327
  %329 = or i1 %319, %320
  %330 = xor i1 %329, true
  %331 = or i1 true, %321
  %332 = and i1 %330, %331
  %333 = or i1 %328, %332
  %334 = or i1 %317, %318
  br i1 %333, label %335, label %1295

; <label>:335:                                    ; preds = %308, %1295
  %336 = bitcast %"struct.std::pair"* %45 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %337 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %336, i32 0, i32 0
  %338 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %307, 0
  store %"struct.std::__detail::_Hash_node"* %338, %"struct.std::__detail::_Hash_node"** %337, align 8
  %339 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %336, i32 0, i32 1
  %340 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %307, 1
  store i8 %340, i8* %339, align 8
  %341 = load i32, i32* @x.1
  %342 = load i32, i32* @y.2
  %343 = add i32 %341, -1166309904
  %344 = sub i32 %343, 1
  %345 = sub i32 %344, -1166309904
  %346 = sub i32 %341, 1
  %347 = mul i32 %341, %345
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %342, 10
  %351 = xor i1 %349, true
  %352 = xor i1 %350, true
  %353 = xor i1 true, true
  %354 = and i1 %351, true
  %355 = and i1 %349, %353
  %356 = and i1 %352, true
  %357 = and i1 %350, %353
  %358 = or i1 %354, %355
  %359 = or i1 %356, %357
  %360 = xor i1 %358, %359
  %361 = or i1 %351, %352
  %362 = xor i1 %361, true
  %363 = or i1 true, %353
  %364 = and i1 %362, %363
  %365 = or i1 %360, %364
  %366 = or i1 %349, %350
  br i1 %365, label %367, label %1295

; <label>:367:                                    ; preds = %335
  br label %368

; <label>:368:                                    ; preds = %367, %283
  br label %369

; <label>:369:                                    ; preds = %368
  %370 = load i32, i32* %40, align 4
  %371 = add i32 %370, -666697276
  %372 = add i32 %371, 1
  %373 = sub i32 %372, -666697276
  %374 = add nsw i32 %370, 1
  store i32 %373, i32* %40, align 4
  br label %277

; <label>:375:                                    ; preds = %277
  %376 = load i32, i32* @x.1
  %377 = load i32, i32* @y.2
  %378 = add i32 %376, -11055259
  %379 = sub i32 %378, 1
  %380 = sub i32 %379, -11055259
  %381 = sub i32 %376, 1
  %382 = mul i32 %376, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %377, 10
  %386 = and i1 %384, %385
  %387 = xor i1 %384, %385
  %388 = or i1 %386, %387
  %389 = or i1 %384, %385
  br i1 %388, label %390, label %1301

; <label>:390:                                    ; preds = %375, %1301
  %391 = load i32, i32* @x.1
  %392 = load i32, i32* @y.2
  %393 = sub i32 %391, 900632551
  %394 = sub i32 %393, 1
  %395 = add i32 %394, 900632551
  %396 = sub i32 %391, 1
  %397 = mul i32 %391, %395
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %392, 10
  %401 = xor i1 %399, true
  %402 = xor i1 %400, true
  %403 = xor i1 true, true
  %404 = and i1 %401, true
  %405 = and i1 %399, %403
  %406 = and i1 %402, true
  %407 = and i1 %400, %403
  %408 = or i1 %404, %405
  %409 = or i1 %406, %407
  %410 = xor i1 %408, %409
  %411 = or i1 %401, %402
  %412 = xor i1 %411, true
  %413 = or i1 true, %403
  %414 = and i1 %412, %413
  %415 = or i1 %410, %414
  %416 = or i1 %399, %400
  br i1 %415, label %417, label %1301

; <label>:417:                                    ; preds = %390
  br label %418

; <label>:418:                                    ; preds = %417, %228
  %419 = load i32, i32* @x.1
  %420 = load i32, i32* @y.2
  %421 = sub i32 %419, -1554895705
  %422 = sub i32 %421, 1
  %423 = add i32 %422, -1554895705
  %424 = sub i32 %419, 1
  %425 = mul i32 %419, %423
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %420, 10
  %429 = and i1 %427, %428
  %430 = xor i1 %427, %428
  %431 = or i1 %429, %430
  %432 = or i1 %427, %428
  br i1 %431, label %433, label %1302

; <label>:433:                                    ; preds = %418, %1302
  %434 = load i32, i32* @x.1
  %435 = load i32, i32* @y.2
  %436 = sub i32 %434, 202332590
  %437 = sub i32 %436, 1
  %438 = add i32 %437, 202332590
  %439 = sub i32 %434, 1
  %440 = mul i32 %434, %438
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %435, 10
  %444 = and i1 %442, %443
  %445 = xor i1 %442, %443
  %446 = or i1 %444, %445
  %447 = or i1 %442, %443
  br i1 %446, label %448, label %1302

; <label>:448:                                    ; preds = %433
  br label %449

; <label>:449:                                    ; preds = %448
  %450 = load i32, i32* @x.1
  %451 = load i32, i32* @y.2
  %452 = add i32 %450, 1504358161
  %453 = sub i32 %452, 1
  %454 = sub i32 %453, 1504358161
  %455 = sub i32 %450, 1
  %456 = mul i32 %450, %454
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %451, 10
  %460 = and i1 %458, %459
  %461 = xor i1 %458, %459
  %462 = or i1 %460, %461
  %463 = or i1 %458, %459
  br i1 %462, label %464, label %1303

; <label>:464:                                    ; preds = %449, %1303
  %465 = load i32, i32* %31, align 4
  %466 = add i32 %465, 562122317
  %467 = add i32 %466, 1
  %468 = sub i32 %467, 562122317
  %469 = add nsw i32 %465, 1
  store i32 %468, i32* %31, align 4
  %470 = load i32, i32* @x.1
  %471 = load i32, i32* @y.2
  %472 = sub i32 %470, 2113825387
  %473 = sub i32 %472, 1
  %474 = add i32 %473, 2113825387
  %475 = sub i32 %470, 1
  %476 = mul i32 %470, %474
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %471, 10
  %480 = and i1 %478, %479
  %481 = xor i1 %478, %479
  %482 = or i1 %480, %481
  %483 = or i1 %478, %479
  br i1 %482, label %484, label %1303

; <label>:484:                                    ; preds = %464
  br label %82

; <label>:485:                                    ; preds = %82
  %486 = load i32, i32* @x.1
  %487 = load i32, i32* @y.2
  %488 = sub i32 0, 1
  %489 = add i32 %486, %488
  %490 = sub i32 %486, 1
  %491 = mul i32 %486, %489
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %487, 10
  %495 = xor i1 %493, true
  %496 = xor i1 %494, true
  %497 = xor i1 false, true
  %498 = and i1 %495, false
  %499 = and i1 %493, %497
  %500 = and i1 %496, false
  %501 = and i1 %494, %497
  %502 = or i1 %498, %499
  %503 = or i1 %500, %501
  %504 = xor i1 %502, %503
  %505 = or i1 %495, %496
  %506 = xor i1 %505, true
  %507 = or i1 false, %497
  %508 = and i1 %506, %507
  %509 = or i1 %504, %508
  %510 = or i1 %493, %494
  br i1 %509, label %511, label %1321

; <label>:511:                                    ; preds = %485, %1321
  %512 = load i32, i32* %28, align 4
  %513 = sub i32 %512, -1669051792
  %514 = sub i32 %513, 1
  %515 = add i32 %514, -1669051792
  %516 = sub nsw i32 %512, 1
  %517 = load i32, i32* %29, align 4
  %518 = add i32 %517, -619835993
  %519 = sub i32 %518, 1
  %520 = sub i32 %519, -619835993
  %521 = sub nsw i32 %517, 1
  %522 = load i32, i32* @x.1
  %523 = load i32, i32* @y.2
  %524 = sub i32 %522, -1461187297
  %525 = sub i32 %524, 1
  %526 = add i32 %525, -1461187297
  %527 = sub i32 %522, 1
  %528 = mul i32 %522, %526
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %523, 10
  %532 = xor i1 %530, true
  %533 = xor i1 %531, true
  %534 = xor i1 true, true
  %535 = and i1 %532, true
  %536 = and i1 %530, %534
  %537 = and i1 %533, true
  %538 = and i1 %531, %534
  %539 = or i1 %535, %536
  %540 = or i1 %537, %538
  %541 = xor i1 %539, %540
  %542 = or i1 %532, %533
  %543 = xor i1 %542, true
  %544 = or i1 true, %534
  %545 = and i1 %543, %544
  %546 = or i1 %541, %545
  %547 = or i1 %530, %531
  br i1 %546, label %548, label %1321

; <label>:548:                                    ; preds = %511
  invoke void @_ZN3PosC2Eii(%class.Pos* %46, i32 %515, i32 %520)
          to label %549 unwind label %186

; <label>:549:                                    ; preds = %548
  call void @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEC2Ev(%"class.std::unordered_map.18"* %47) #3
  invoke void @_ZNSt5dequeI3PosSaIS0_EEC2Ev(%"class.std::deque"* %49)
          to label %550 unwind label %773

; <label>:550:                                    ; preds = %549
  invoke void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEEC2EOS3_(%"class.std::queue"* %48, %"class.std::deque"* dereferenceable(80) %49)
          to label %551 unwind label %777

; <label>:551:                                    ; preds = %550
  call void @_ZNSt5dequeI3PosSaIS0_EED2Ev(%"class.std::deque"* %49) #3
  invoke void @_ZN3PosC2Eii(%class.Pos* %50, i32 0, i32 0)
          to label %552 unwind label %821

; <label>:552:                                    ; preds = %551
  %553 = load i32, i32* @x.1
  %554 = load i32, i32* @y.2
  %555 = sub i32 %553, 1667802445
  %556 = sub i32 %555, 1
  %557 = add i32 %556, 1667802445
  %558 = sub i32 %553, 1
  %559 = mul i32 %553, %557
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %554, 10
  %563 = and i1 %561, %562
  %564 = xor i1 %561, %562
  %565 = or i1 %563, %564
  %566 = or i1 %561, %562
  br i1 %565, label %567, label %1369

; <label>:567:                                    ; preds = %552, %1369
  %568 = load i32, i32* @x.1
  %569 = load i32, i32* @y.2
  %570 = sub i32 %568, 188165296
  %571 = sub i32 %570, 1
  %572 = add i32 %571, 188165296
  %573 = sub i32 %568, 1
  %574 = mul i32 %568, %572
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %569, 10
  %578 = and i1 %576, %577
  %579 = xor i1 %576, %577
  %580 = or i1 %578, %579
  %581 = or i1 %576, %577
  br i1 %580, label %582, label %1369

; <label>:582:                                    ; preds = %567
  invoke void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE4pushEOS0_(%"class.std::queue"* %48, %class.Pos* dereferenceable(16) %50)
          to label %583 unwind label %821

; <label>:583:                                    ; preds = %582
  invoke void @_ZN3PosC2Eii(%class.Pos* %51, i32 0, i32 0)
          to label %584 unwind label %821

; <label>:584:                                    ; preds = %583
  %585 = invoke dereferenceable(4) i32* @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixEOS0_(%"class.std::unordered_map.18"* %47, %class.Pos* dereferenceable(16) %51)
          to label %586 unwind label %821

; <label>:586:                                    ; preds = %584
  store i32 1, i32* %585, align 4
  store i8 0, i8* %52, align 1
  br label %587

; <label>:587:                                    ; preds = %1103, %586
  %588 = load i32, i32* @x.1
  %589 = load i32, i32* @y.2
  %590 = add i32 %588, -1775766986
  %591 = sub i32 %590, 1
  %592 = sub i32 %591, -1775766986
  %593 = sub i32 %588, 1
  %594 = mul i32 %588, %592
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %589, 10
  %598 = xor i1 %596, true
  %599 = xor i1 %597, true
  %600 = xor i1 false, true
  %601 = and i1 %598, false
  %602 = and i1 %596, %600
  %603 = and i1 %599, false
  %604 = and i1 %597, %600
  %605 = or i1 %601, %602
  %606 = or i1 %603, %604
  %607 = xor i1 %605, %606
  %608 = or i1 %598, %599
  %609 = xor i1 %608, true
  %610 = or i1 false, %600
  %611 = and i1 %609, %610
  %612 = or i1 %607, %611
  %613 = or i1 %596, %597
  br i1 %612, label %614, label %1370

; <label>:614:                                    ; preds = %587, %1370
  %615 = load i32, i32* @x.1
  %616 = load i32, i32* @y.2
  %617 = add i32 %615, 1084081656
  %618 = sub i32 %617, 1
  %619 = sub i32 %618, 1084081656
  %620 = sub i32 %615, 1
  %621 = mul i32 %615, %619
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %616, 10
  %625 = and i1 %623, %624
  %626 = xor i1 %623, %624
  %627 = or i1 %625, %626
  %628 = or i1 %623, %624
  br i1 %627, label %629, label %1370

; <label>:629:                                    ; preds = %614
  %630 = invoke zeroext i1 @_ZNKSt5queueI3PosSt5dequeIS0_SaIS0_EEE5emptyEv(%"class.std::queue"* %48)
          to label %631 unwind label %821

; <label>:631:                                    ; preds = %629
  %632 = xor i1 %630, true
  %633 = and i1 true, %632
  %634 = xor i1 true, true
  %635 = and i1 %630, %634
  %636 = or i1 %633, %635
  %637 = xor i1 %630, true
  br i1 %636, label %638, label %1104

; <label>:638:                                    ; preds = %631
  %639 = load i32, i32* @x.1
  %640 = load i32, i32* @y.2
  %641 = add i32 %639, 196661236
  %642 = sub i32 %641, 1
  %643 = sub i32 %642, 196661236
  %644 = sub i32 %639, 1
  %645 = mul i32 %639, %643
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %640, 10
  %649 = and i1 %647, %648
  %650 = xor i1 %647, %648
  %651 = or i1 %649, %650
  %652 = or i1 %647, %648
  br i1 %651, label %653, label %1371

; <label>:653:                                    ; preds = %638, %1371
  %654 = load i32, i32* @x.1
  %655 = load i32, i32* @y.2
  %656 = add i32 %654, -1189579082
  %657 = sub i32 %656, 1
  %658 = sub i32 %657, -1189579082
  %659 = sub i32 %654, 1
  %660 = mul i32 %654, %658
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %655, 10
  %664 = and i1 %662, %663
  %665 = xor i1 %662, %663
  %666 = or i1 %664, %665
  %667 = or i1 %662, %663
  br i1 %666, label %668, label %1371

; <label>:668:                                    ; preds = %653
  %669 = invoke dereferenceable(16) %class.Pos* @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE5frontEv(%"class.std::queue"* %48)
          to label %670 unwind label %821

; <label>:670:                                    ; preds = %668
  %671 = bitcast %class.Pos* %53 to i8*
  %672 = bitcast %class.Pos* %669 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %671, i8* %672, i64 16, i32 8, i1 false)
  invoke void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE3popEv(%"class.std::queue"* %48)
          to label %673 unwind label %821

; <label>:673:                                    ; preds = %670
  %674 = bitcast %class.Pos* %54 to i8*
  %675 = bitcast %class.Pos* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %674, i8* %675, i64 16, i32 8, i1 false)
  %676 = bitcast %class.Pos* %54 to { i64, i64 }*
  %677 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %676, i32 0, i32 0
  %678 = load i64, i64* %677, align 8
  %679 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %676, i32 0, i32 1
  %680 = load i64, i64* %679, align 8
  %681 = invoke zeroext i1 @_ZNK3PoseqES_(%class.Pos* %53, i64 %678, i64 %680)
          to label %682 unwind label %821

; <label>:682:                                    ; preds = %673
  %683 = load i32, i32* @x.1
  %684 = load i32, i32* @y.2
  %685 = add i32 %683, -838281666
  %686 = sub i32 %685, 1
  %687 = sub i32 %686, -838281666
  %688 = sub i32 %683, 1
  %689 = mul i32 %683, %687
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %684, 10
  %693 = and i1 %691, %692
  %694 = xor i1 %691, %692
  %695 = or i1 %693, %694
  %696 = or i1 %691, %692
  br i1 %695, label %697, label %1372

; <label>:697:                                    ; preds = %682, %1372
  %698 = load i32, i32* @x.1
  %699 = load i32, i32* @y.2
  %700 = sub i32 0, 1
  %701 = add i32 %698, %700
  %702 = sub i32 %698, 1
  %703 = mul i32 %698, %701
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %699, 10
  %707 = and i1 %705, %706
  %708 = xor i1 %705, %706
  %709 = or i1 %707, %708
  %710 = or i1 %705, %706
  br i1 %709, label %711, label %1372

; <label>:711:                                    ; preds = %697
  br i1 %681, label %712, label %867

; <label>:712:                                    ; preds = %711
  store i8 1, i8* %52, align 1
  %713 = invoke dereferenceable(4) i32* @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixERS6_(%"class.std::unordered_map.18"* %47, %class.Pos* dereferenceable(16) %53)
          to label %714 unwind label %821

; <label>:714:                                    ; preds = %712
  %715 = load i32, i32* %713, align 4
  %716 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %715)
          to label %717 unwind label %821

; <label>:717:                                    ; preds = %714
  %718 = load i32, i32* @x.1
  %719 = load i32, i32* @y.2
  %720 = add i32 %718, 1762546274
  %721 = sub i32 %720, 1
  %722 = sub i32 %721, 1762546274
  %723 = sub i32 %718, 1
  %724 = mul i32 %718, %722
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %719, 10
  %728 = xor i1 %726, true
  %729 = xor i1 %727, true
  %730 = xor i1 true, true
  %731 = and i1 %728, true
  %732 = and i1 %726, %730
  %733 = and i1 %729, true
  %734 = and i1 %727, %730
  %735 = or i1 %731, %732
  %736 = or i1 %733, %734
  %737 = xor i1 %735, %736
  %738 = or i1 %728, %729
  %739 = xor i1 %738, true
  %740 = or i1 true, %730
  %741 = and i1 %739, %740
  %742 = or i1 %737, %741
  %743 = or i1 %726, %727
  br i1 %742, label %744, label %1373

; <label>:744:                                    ; preds = %717, %1373
  %745 = load i32, i32* @x.1
  %746 = load i32, i32* @y.2
  %747 = sub i32 0, 1
  %748 = add i32 %745, %747
  %749 = sub i32 %745, 1
  %750 = mul i32 %745, %748
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %746, 10
  %754 = xor i1 %752, true
  %755 = xor i1 %753, true
  %756 = xor i1 true, true
  %757 = and i1 %754, true
  %758 = and i1 %752, %756
  %759 = and i1 %755, true
  %760 = and i1 %753, %756
  %761 = or i1 %757, %758
  %762 = or i1 %759, %760
  %763 = xor i1 %761, %762
  %764 = or i1 %754, %755
  %765 = xor i1 %764, true
  %766 = or i1 true, %756
  %767 = and i1 %765, %766
  %768 = or i1 %763, %767
  %769 = or i1 %752, %753
  br i1 %768, label %770, label %1373

; <label>:770:                                    ; preds = %744
  %771 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %716, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %772 unwind label %821

; <label>:772:                                    ; preds = %770
  br label %1104

; <label>:773:                                    ; preds = %549
  %774 = landingpad { i8*, i32 }
          cleanup
  %775 = extractvalue { i8*, i32 } %774, 0
  store i8* %775, i8** %34, align 8
  %776 = extractvalue { i8*, i32 } %774, 1
  store i32 %776, i32* %35, align 4
  br label %1171

; <label>:777:                                    ; preds = %550
  %778 = load i32, i32* @x.1
  %779 = load i32, i32* @y.2
  %780 = sub i32 0, 1
  %781 = add i32 %778, %780
  %782 = sub i32 %778, 1
  %783 = mul i32 %778, %781
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %779, 10
  %787 = xor i1 %785, true
  %788 = xor i1 %786, true
  %789 = xor i1 false, true
  %790 = and i1 %787, false
  %791 = and i1 %785, %789
  %792 = and i1 %788, false
  %793 = and i1 %786, %789
  %794 = or i1 %790, %791
  %795 = or i1 %792, %793
  %796 = xor i1 %794, %795
  %797 = or i1 %787, %788
  %798 = xor i1 %797, true
  %799 = or i1 false, %789
  %800 = and i1 %798, %799
  %801 = or i1 %796, %800
  %802 = or i1 %785, %786
  br i1 %801, label %803, label %1374

; <label>:803:                                    ; preds = %777, %1374
  %804 = landingpad { i8*, i32 }
          cleanup
  %805 = extractvalue { i8*, i32 } %804, 0
  store i8* %805, i8** %34, align 8
  %806 = extractvalue { i8*, i32 } %804, 1
  store i32 %806, i32* %35, align 4
  call void @_ZNSt5dequeI3PosSaIS0_EED2Ev(%"class.std::deque"* %49) #3
  %807 = load i32, i32* @x.1
  %808 = load i32, i32* @y.2
  %809 = sub i32 0, 1
  %810 = add i32 %807, %809
  %811 = sub i32 %807, 1
  %812 = mul i32 %807, %810
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %808, 10
  %816 = and i1 %814, %815
  %817 = xor i1 %814, %815
  %818 = or i1 %816, %817
  %819 = or i1 %814, %815
  br i1 %818, label %820, label %1374

; <label>:820:                                    ; preds = %803
  br label %1171

; <label>:821:                                    ; preds = %1167, %1136, %991, %989, %939, %934, %925, %919, %770, %714, %712, %673, %670, %668, %629, %584, %583, %582, %551
  %822 = load i32, i32* @x.1
  %823 = load i32, i32* @y.2
  %824 = sub i32 %822, -764386377
  %825 = sub i32 %824, 1
  %826 = add i32 %825, -764386377
  %827 = sub i32 %822, 1
  %828 = mul i32 %822, %826
  %829 = urem i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = icmp slt i32 %823, 10
  %832 = and i1 %830, %831
  %833 = xor i1 %830, %831
  %834 = or i1 %832, %833
  %835 = or i1 %830, %831
  br i1 %834, label %836, label %1378

; <label>:836:                                    ; preds = %821, %1378
  %837 = landingpad { i8*, i32 }
          cleanup
  %838 = extractvalue { i8*, i32 } %837, 0
  store i8* %838, i8** %34, align 8
  %839 = extractvalue { i8*, i32 } %837, 1
  store i32 %839, i32* %35, align 4
  call void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue"* %48) #3
  %840 = load i32, i32* @x.1
  %841 = load i32, i32* @y.2
  %842 = sub i32 %840, -1420236733
  %843 = sub i32 %842, 1
  %844 = add i32 %843, -1420236733
  %845 = sub i32 %840, 1
  %846 = mul i32 %840, %844
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %841, 10
  %850 = xor i1 %848, true
  %851 = xor i1 %849, true
  %852 = xor i1 false, true
  %853 = and i1 %850, false
  %854 = and i1 %848, %852
  %855 = and i1 %851, false
  %856 = and i1 %849, %852
  %857 = or i1 %853, %854
  %858 = or i1 %855, %856
  %859 = xor i1 %857, %858
  %860 = or i1 %850, %851
  %861 = xor i1 %860, true
  %862 = or i1 false, %852
  %863 = and i1 %861, %862
  %864 = or i1 %859, %863
  %865 = or i1 %848, %849
  br i1 %864, label %866, label %1378

; <label>:866:                                    ; preds = %836
  br label %1171

; <label>:867:                                    ; preds = %711
  %868 = load i32, i32* @x.1
  %869 = load i32, i32* @y.2
  %870 = sub i32 0, 1
  %871 = add i32 %868, %870
  %872 = sub i32 %868, 1
  %873 = mul i32 %868, %871
  %874 = urem i32 %873, 2
  %875 = icmp eq i32 %874, 0
  %876 = icmp slt i32 %869, 10
  %877 = xor i1 %875, true
  %878 = xor i1 %876, true
  %879 = xor i1 false, true
  %880 = and i1 %877, false
  %881 = and i1 %875, %879
  %882 = and i1 %878, false
  %883 = and i1 %876, %879
  %884 = or i1 %880, %881
  %885 = or i1 %882, %883
  %886 = xor i1 %884, %885
  %887 = or i1 %877, %878
  %888 = xor i1 %887, true
  %889 = or i1 false, %879
  %890 = and i1 %888, %889
  %891 = or i1 %886, %890
  %892 = or i1 %875, %876
  br i1 %891, label %893, label %1382

; <label>:893:                                    ; preds = %867, %1382
  %894 = load i32, i32* @x.1
  %895 = load i32, i32* @y.2
  %896 = sub i32 0, 1
  %897 = add i32 %894, %896
  %898 = sub i32 %894, 1
  %899 = mul i32 %894, %897
  %900 = urem i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = icmp slt i32 %895, 10
  %903 = xor i1 %901, true
  %904 = xor i1 %902, true
  %905 = xor i1 false, true
  %906 = and i1 %903, false
  %907 = and i1 %901, %905
  %908 = and i1 %904, false
  %909 = and i1 %902, %905
  %910 = or i1 %906, %907
  %911 = or i1 %908, %909
  %912 = xor i1 %910, %911
  %913 = or i1 %903, %904
  %914 = xor i1 %913, true
  %915 = or i1 false, %905
  %916 = and i1 %914, %915
  %917 = or i1 %912, %916
  %918 = or i1 %901, %902
  br i1 %917, label %919, label %1382

; <label>:919:                                    ; preds = %893
  %920 = invoke dereferenceable(56) %"class.std::unordered_set"* @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_(%"class.std::unordered_map"* %30, %class.Pos* dereferenceable(16) %53)
          to label %921 unwind label %821

; <label>:921:                                    ; preds = %919
  %922 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE5beginEv(%"class.std::unordered_set"* %920) #3
  %923 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %55, i32 0, i32 0
  %924 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %923, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %922, %"struct.std::__detail::_Hash_node"** %924, align 8
  br label %925

; <label>:925:                                    ; preds = %1049, %921
  %926 = bitcast %"struct.std::__detail::_Node_iterator"* %55 to %"struct.std::__detail::_Node_iterator_base"*
  %927 = invoke dereferenceable(56) %"class.std::unordered_set"* @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_(%"class.std::unordered_map"* %30, %class.Pos* dereferenceable(16) %53)
          to label %928 unwind label %821

; <label>:928:                                    ; preds = %925
  %929 = call %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE3endEv(%"class.std::unordered_set"* %927) #3
  %930 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %56, i32 0, i32 0
  %931 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %930, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %929, %"struct.std::__detail::_Hash_node"** %931, align 8
  %932 = bitcast %"struct.std::__detail::_Node_iterator"* %56 to %"struct.std::__detail::_Node_iterator_base"*
  %933 = call zeroext i1 @_ZNSt8__detailneI3PosLb1EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES6_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %926, %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8) %932) #3
  br i1 %933, label %934, label %1050

; <label>:934:                                    ; preds = %928
  %935 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail14_Node_iteratorI3PosLb1ELb1EEdeEv(%"struct.std::__detail::_Node_iterator"* %55) #3
  %936 = invoke i64 @_ZNKSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEE5countERS6_(%"class.std::unordered_map.18"* %47, %class.Pos* dereferenceable(16) %935)
          to label %937 unwind label %821

; <label>:937:                                    ; preds = %934
  %938 = icmp eq i64 %936, 0
  br i1 %938, label %939, label %994

; <label>:939:                                    ; preds = %937
  %940 = invoke dereferenceable(4) i32* @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixERS6_(%"class.std::unordered_map.18"* %47, %class.Pos* dereferenceable(16) %53)
          to label %941 unwind label %821

; <label>:941:                                    ; preds = %939
  %942 = load i32, i32* @x.1
  %943 = load i32, i32* @y.2
  %944 = sub i32 %942, 900048204
  %945 = sub i32 %944, 1
  %946 = add i32 %945, 900048204
  %947 = sub i32 %942, 1
  %948 = mul i32 %942, %946
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %943, 10
  %952 = xor i1 %950, true
  %953 = xor i1 %951, true
  %954 = xor i1 false, true
  %955 = and i1 %952, false
  %956 = and i1 %950, %954
  %957 = and i1 %953, false
  %958 = and i1 %951, %954
  %959 = or i1 %955, %956
  %960 = or i1 %957, %958
  %961 = xor i1 %959, %960
  %962 = or i1 %952, %953
  %963 = xor i1 %962, true
  %964 = or i1 false, %954
  %965 = and i1 %963, %964
  %966 = or i1 %961, %965
  %967 = or i1 %950, %951
  br i1 %966, label %968, label %1383

; <label>:968:                                    ; preds = %941, %1383
  %969 = load i32, i32* %940, align 4
  %970 = sub i32 %969, 1297603789
  %971 = add i32 %970, 1
  %972 = add i32 %971, 1297603789
  %973 = add nsw i32 %969, 1
  %974 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail14_Node_iteratorI3PosLb1ELb1EEdeEv(%"struct.std::__detail::_Node_iterator"* %55) #3
  %975 = load i32, i32* @x.1
  %976 = load i32, i32* @y.2
  %977 = sub i32 %975, -543755436
  %978 = sub i32 %977, 1
  %979 = add i32 %978, -543755436
  %980 = sub i32 %975, 1
  %981 = mul i32 %975, %979
  %982 = urem i32 %981, 2
  %983 = icmp eq i32 %982, 0
  %984 = icmp slt i32 %976, 10
  %985 = and i1 %983, %984
  %986 = xor i1 %983, %984
  %987 = or i1 %985, %986
  %988 = or i1 %983, %984
  br i1 %987, label %989, label %1383

; <label>:989:                                    ; preds = %968
  %990 = invoke dereferenceable(4) i32* @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixERS6_(%"class.std::unordered_map.18"* %47, %class.Pos* dereferenceable(16) %974)
          to label %991 unwind label %821

; <label>:991:                                    ; preds = %989
  store i32 %972, i32* %990, align 4
  %992 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail14_Node_iteratorI3PosLb1ELb1EEdeEv(%"struct.std::__detail::_Node_iterator"* %55) #3
  invoke void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE4pushERKS0_(%"class.std::queue"* %48, %class.Pos* dereferenceable(16) %992)
          to label %993 unwind label %821

; <label>:993:                                    ; preds = %991
  br label %994

; <label>:994:                                    ; preds = %993, %937
  br label %995

; <label>:995:                                    ; preds = %994
  %996 = load i32, i32* @x.1
  %997 = load i32, i32* @y.2
  %998 = add i32 %996, 2030353313
  %999 = sub i32 %998, 1
  %1000 = sub i32 %999, 2030353313
  %1001 = sub i32 %996, 1
  %1002 = mul i32 %996, %1000
  %1003 = urem i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = icmp slt i32 %997, 10
  %1006 = xor i1 %1004, true
  %1007 = xor i1 %1005, true
  %1008 = xor i1 true, true
  %1009 = and i1 %1006, true
  %1010 = and i1 %1004, %1008
  %1011 = and i1 %1007, true
  %1012 = and i1 %1005, %1008
  %1013 = or i1 %1009, %1010
  %1014 = or i1 %1011, %1012
  %1015 = xor i1 %1013, %1014
  %1016 = or i1 %1006, %1007
  %1017 = xor i1 %1016, true
  %1018 = or i1 true, %1008
  %1019 = and i1 %1017, %1018
  %1020 = or i1 %1015, %1019
  %1021 = or i1 %1004, %1005
  br i1 %1020, label %1022, label %1399

; <label>:1022:                                   ; preds = %995, %1399
  %1023 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEppEv(%"struct.std::__detail::_Node_iterator"* %55) #3
  %1024 = load i32, i32* @x.1
  %1025 = load i32, i32* @y.2
  %1026 = sub i32 0, 1
  %1027 = add i32 %1024, %1026
  %1028 = sub i32 %1024, 1
  %1029 = mul i32 %1024, %1027
  %1030 = urem i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  %1032 = icmp slt i32 %1025, 10
  %1033 = xor i1 %1031, true
  %1034 = xor i1 %1032, true
  %1035 = xor i1 false, true
  %1036 = and i1 %1033, false
  %1037 = and i1 %1031, %1035
  %1038 = and i1 %1034, false
  %1039 = and i1 %1032, %1035
  %1040 = or i1 %1036, %1037
  %1041 = or i1 %1038, %1039
  %1042 = xor i1 %1040, %1041
  %1043 = or i1 %1033, %1034
  %1044 = xor i1 %1043, true
  %1045 = or i1 false, %1035
  %1046 = and i1 %1044, %1045
  %1047 = or i1 %1042, %1046
  %1048 = or i1 %1031, %1032
  br i1 %1047, label %1049, label %1399

; <label>:1049:                                   ; preds = %1022
  br label %925

; <label>:1050:                                   ; preds = %928
  %1051 = load i32, i32* @x.1
  %1052 = load i32, i32* @y.2
  %1053 = sub i32 %1051, -1132684040
  %1054 = sub i32 %1053, 1
  %1055 = add i32 %1054, -1132684040
  %1056 = sub i32 %1051, 1
  %1057 = mul i32 %1051, %1055
  %1058 = urem i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = icmp slt i32 %1052, 10
  %1061 = xor i1 %1059, true
  %1062 = xor i1 %1060, true
  %1063 = xor i1 true, true
  %1064 = and i1 %1061, true
  %1065 = and i1 %1059, %1063
  %1066 = and i1 %1062, true
  %1067 = and i1 %1060, %1063
  %1068 = or i1 %1064, %1065
  %1069 = or i1 %1066, %1067
  %1070 = xor i1 %1068, %1069
  %1071 = or i1 %1061, %1062
  %1072 = xor i1 %1071, true
  %1073 = or i1 true, %1063
  %1074 = and i1 %1072, %1073
  %1075 = or i1 %1070, %1074
  %1076 = or i1 %1059, %1060
  br i1 %1075, label %1077, label %1401

; <label>:1077:                                   ; preds = %1050, %1401
  %1078 = load i32, i32* @x.1
  %1079 = load i32, i32* @y.2
  %1080 = sub i32 0, 1
  %1081 = add i32 %1078, %1080
  %1082 = sub i32 %1078, 1
  %1083 = mul i32 %1078, %1081
  %1084 = urem i32 %1083, 2
  %1085 = icmp eq i32 %1084, 0
  %1086 = icmp slt i32 %1079, 10
  %1087 = xor i1 %1085, true
  %1088 = xor i1 %1086, true
  %1089 = xor i1 true, true
  %1090 = and i1 %1087, true
  %1091 = and i1 %1085, %1089
  %1092 = and i1 %1088, true
  %1093 = and i1 %1086, %1089
  %1094 = or i1 %1090, %1091
  %1095 = or i1 %1092, %1093
  %1096 = xor i1 %1094, %1095
  %1097 = or i1 %1087, %1088
  %1098 = xor i1 %1097, true
  %1099 = or i1 true, %1089
  %1100 = and i1 %1098, %1099
  %1101 = or i1 %1096, %1100
  %1102 = or i1 %1085, %1086
  br i1 %1101, label %1103, label %1401

; <label>:1103:                                   ; preds = %1077
  br label %587

; <label>:1104:                                   ; preds = %772, %631
  %1105 = load i32, i32* @x.1
  %1106 = load i32, i32* @y.2
  %1107 = sub i32 0, 1
  %1108 = add i32 %1105, %1107
  %1109 = sub i32 %1105, 1
  %1110 = mul i32 %1105, %1108
  %1111 = urem i32 %1110, 2
  %1112 = icmp eq i32 %1111, 0
  %1113 = icmp slt i32 %1106, 10
  %1114 = and i1 %1112, %1113
  %1115 = xor i1 %1112, %1113
  %1116 = or i1 %1114, %1115
  %1117 = or i1 %1112, %1113
  br i1 %1116, label %1118, label %1402

; <label>:1118:                                   ; preds = %1104, %1402
  %1119 = load i8, i8* %52, align 1
  %1120 = trunc i8 %1119 to i1
  %1121 = load i32, i32* @x.1
  %1122 = load i32, i32* @y.2
  %1123 = add i32 %1121, 606884839
  %1124 = sub i32 %1123, 1
  %1125 = sub i32 %1124, 606884839
  %1126 = sub i32 %1121, 1
  %1127 = mul i32 %1121, %1125
  %1128 = urem i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = icmp slt i32 %1122, 10
  %1131 = and i1 %1129, %1130
  %1132 = xor i1 %1129, %1130
  %1133 = or i1 %1131, %1132
  %1134 = or i1 %1129, %1130
  br i1 %1133, label %1135, label %1402

; <label>:1135:                                   ; preds = %1118
  br i1 %1120, label %1170, label %1136

; <label>:1136:                                   ; preds = %1135
  %1137 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 0)
          to label %1138 unwind label %821

; <label>:1138:                                   ; preds = %1136
  %1139 = load i32, i32* @x.1
  %1140 = load i32, i32* @y.2
  %1141 = add i32 %1139, -1666594775
  %1142 = sub i32 %1141, 1
  %1143 = sub i32 %1142, -1666594775
  %1144 = sub i32 %1139, 1
  %1145 = mul i32 %1139, %1143
  %1146 = urem i32 %1145, 2
  %1147 = icmp eq i32 %1146, 0
  %1148 = icmp slt i32 %1140, 10
  %1149 = and i1 %1147, %1148
  %1150 = xor i1 %1147, %1148
  %1151 = or i1 %1149, %1150
  %1152 = or i1 %1147, %1148
  br i1 %1151, label %1153, label %1405

; <label>:1153:                                   ; preds = %1138, %1405
  %1154 = load i32, i32* @x.1
  %1155 = load i32, i32* @y.2
  %1156 = sub i32 0, 1
  %1157 = add i32 %1154, %1156
  %1158 = sub i32 %1154, 1
  %1159 = mul i32 %1154, %1157
  %1160 = urem i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = icmp slt i32 %1155, 10
  %1163 = and i1 %1161, %1162
  %1164 = xor i1 %1161, %1162
  %1165 = or i1 %1163, %1164
  %1166 = or i1 %1161, %1162
  br i1 %1165, label %1167, label %1405

; <label>:1167:                                   ; preds = %1153
  %1168 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1137, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1169 unwind label %821

; <label>:1169:                                   ; preds = %1167
  br label %1170

; <label>:1170:                                   ; preds = %1169, %1135
  call void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue"* %48) #3
  call void @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEED2Ev(%"class.std::unordered_map.18"* %47) #3
  call void @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEED2Ev(%"class.std::unordered_map"* %30) #3
  br label %71

; <label>:1171:                                   ; preds = %866, %820, %773
  call void @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEED2Ev(%"class.std::unordered_map.18"* %47) #3
  br label %1172

; <label>:1172:                                   ; preds = %1171, %186
  call void @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEED2Ev(%"class.std::unordered_map"* %30) #3
  br label %1174

; <label>:1173:                                   ; preds = %79
  ret i32 0

; <label>:1174:                                   ; preds = %1172
  %1175 = load i32, i32* @x.1
  %1176 = load i32, i32* @y.2
  %1177 = sub i32 0, 1
  %1178 = add i32 %1175, %1177
  %1179 = sub i32 %1175, 1
  %1180 = mul i32 %1175, %1178
  %1181 = urem i32 %1180, 2
  %1182 = icmp eq i32 %1181, 0
  %1183 = icmp slt i32 %1176, 10
  %1184 = and i1 %1182, %1183
  %1185 = xor i1 %1182, %1183
  %1186 = or i1 %1184, %1185
  %1187 = or i1 %1182, %1183
  br i1 %1186, label %1188, label %1406

; <label>:1188:                                   ; preds = %1174, %1406
  %1189 = load i8*, i8** %34, align 8
  %1190 = load i32, i32* %35, align 4
  %1191 = insertvalue { i8*, i32 } undef, i8* %1189, 0
  %1192 = insertvalue { i8*, i32 } %1191, i32 %1190, 1
  %1193 = load i32, i32* @x.1
  %1194 = load i32, i32* @y.2
  %1195 = add i32 %1193, 2106770662
  %1196 = sub i32 %1195, 1
  %1197 = sub i32 %1196, 2106770662
  %1198 = sub i32 %1193, 1
  %1199 = mul i32 %1193, %1197
  %1200 = urem i32 %1199, 2
  %1201 = icmp eq i32 %1200, 0
  %1202 = icmp slt i32 %1194, 10
  %1203 = and i1 %1201, %1202
  %1204 = xor i1 %1201, %1202
  %1205 = or i1 %1203, %1204
  %1206 = or i1 %1201, %1202
  br i1 %1205, label %1207, label %1406

; <label>:1207:                                   ; preds = %1188
  resume { i8*, i32 } %1192

; <label>:1208:                                   ; preds = %26, %0
  %1209 = alloca i32, align 4
  %1210 = alloca i32, align 4
  %1211 = alloca i32, align 4
  %1212 = alloca %"class.std::unordered_map", align 8
  %1213 = alloca i32, align 4
  %1214 = alloca i32, align 4
  %1215 = alloca i8, align 1
  %1216 = alloca i8*
  %1217 = alloca i32
  %1218 = alloca %class.Pos, align 8
  %1219 = alloca %class.Pos, align 8
  %1220 = alloca %"struct.std::pair", align 8
  %1221 = alloca %"struct.std::pair", align 8
  %1222 = alloca i32, align 4
  %1223 = alloca i8, align 1
  %1224 = alloca %class.Pos, align 8
  %1225 = alloca %class.Pos, align 8
  %1226 = alloca %"struct.std::pair", align 8
  %1227 = alloca %"struct.std::pair", align 8
  %1228 = alloca %class.Pos, align 8
  %1229 = alloca %"class.std::unordered_map.18", align 8
  %1230 = alloca %"class.std::queue", align 8
  %1231 = alloca %"class.std::deque", align 8
  %1232 = alloca %class.Pos, align 8
  %1233 = alloca %class.Pos, align 8
  %1234 = alloca i8, align 1
  %1235 = alloca %class.Pos, align 8
  %1236 = alloca %class.Pos, align 8
  %1237 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %1238 = alloca %"struct.std::__detail::_Node_iterator", align 8
  store i32 0, i32* %1209, align 4
  br label %26

; <label>:1239:                                   ; preds = %101, %87
  %1240 = load i32, i32* %32, align 4
  %1241 = load i32, i32* %29, align 4
  %1242 = sub i32 %1241, 2023495982
  %1243 = sub i32 %1242, 1
  %1244 = add i32 %1243, 2023495982
  %1245 = sub i32 %1241, 1
  %1246 = mul i32 %1244, 1
  %1247 = shl i32 %1241, 1
  %1248 = add i32 %1241, 625444867
  %1249 = sub i32 %1248, 1
  %1250 = sub i32 %1249, 625444867
  %1251 = sub i32 %1241, 1
  %1252 = mul i32 %1250, 1
  %1253 = sub i32 0, %1241
  %1254 = add i32 0, %1253
  %1255 = sub i32 0, %1241
  %1256 = sub i32 %1254, 174570846
  %1257 = add i32 %1256, 1
  %1258 = add i32 %1257, 174570846
  %1259 = add i32 %1254, 1
  %1260 = sub i32 0, 1
  %1261 = add i32 %1241, %1260
  %1262 = sub i32 %1241, 1
  %1263 = mul i32 %1261, 1
  %1264 = shl i32 %1241, 1
  %1265 = add i32 0, 2077600097
  %1266 = sub i32 %1265, %1241
  %1267 = sub i32 %1266, 2077600097
  %1268 = sub i32 0, %1241
  %1269 = sub i32 0, 1
  %1270 = sub i32 %1267, %1269
  %1271 = add i32 %1267, 1
  %1272 = shl i32 %1241, 1
  %1273 = add i32 %1241, 101015991
  %1274 = sub i32 %1273, 1
  %1275 = sub i32 %1274, 101015991
  %1276 = sub i32 %1241, 1
  %1277 = mul i32 %1275, 1
  %1278 = sub i32 0, 1
  %1279 = add i32 %1241, %1278
  %1280 = sub i32 %1241, 1
  %1281 = mul i32 %1279, 1
  %1282 = sub i32 %1241, 418988278
  %1283 = sub i32 %1282, 1
  %1284 = add i32 %1283, 418988278
  %1285 = sub nsw i32 %1241, 1
  %1286 = icmp slt i32 %1240, %1284
  br label %101

; <label>:1287:                                   ; preds = %157, %142
  %1288 = bitcast %"struct.std::pair"* %38 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %1289 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %1288, i32 0, i32 0
  %1290 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %141, 0
  store %"struct.std::__detail::_Hash_node"* %1290, %"struct.std::__detail::_Hash_node"** %1289, align 8
  %1291 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %1288, i32 0, i32 1
  %1292 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %141, 1
  store i8 %1292, i8* %1291, align 8
  br label %157

; <label>:1293:                                   ; preds = %205, %190
  br label %205

; <label>:1294:                                   ; preds = %249, %235
  store i32 0, i32* %40, align 4
  br label %249

; <label>:1295:                                   ; preds = %335, %308
  %1296 = bitcast %"struct.std::pair"* %45 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %1297 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %1296, i32 0, i32 0
  %1298 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %307, 0
  store %"struct.std::__detail::_Hash_node"* %1298, %"struct.std::__detail::_Hash_node"** %1297, align 8
  %1299 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %1296, i32 0, i32 1
  %1300 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %307, 1
  store i8 %1300, i8* %1299, align 8
  br label %335

; <label>:1301:                                   ; preds = %390, %375
  br label %390

; <label>:1302:                                   ; preds = %433, %418
  br label %433

; <label>:1303:                                   ; preds = %464, %449
  %1304 = load i32, i32* %31, align 4
  %1305 = shl i32 %1304, 1
  %1306 = shl i32 %1304, 1
  %1307 = shl i32 %1304, 1
  %1308 = sub i32 0, 1
  %1309 = add i32 %1304, %1308
  %1310 = sub i32 %1304, 1
  %1311 = mul i32 %1309, 1
  %1312 = sub i32 0, %1304
  %1313 = add i32 0, %1312
  %1314 = sub i32 0, %1304
  %1315 = sub i32 0, 1
  %1316 = sub i32 %1313, %1315
  %1317 = add i32 %1313, 1
  %1318 = sub i32 0, 1
  %1319 = sub i32 %1304, %1318
  %1320 = add nsw i32 %1304, 1
  store i32 %1319, i32* %31, align 4
  br label %464

; <label>:1321:                                   ; preds = %511, %485
  %1322 = load i32, i32* %28, align 4
  %1323 = shl i32 %1322, 1
  %1324 = add i32 0, 811604391
  %1325 = sub i32 %1324, %1322
  %1326 = sub i32 %1325, 811604391
  %1327 = sub i32 0, %1322
  %1328 = sub i32 0, %1326
  %1329 = sub i32 0, 1
  %1330 = add i32 %1328, %1329
  %1331 = sub i32 0, %1330
  %1332 = add i32 %1326, 1
  %1333 = shl i32 %1322, 1
  %1334 = sub i32 0, %1322
  %1335 = add i32 0, %1334
  %1336 = sub i32 0, %1322
  %1337 = sub i32 0, %1335
  %1338 = sub i32 0, 1
  %1339 = add i32 %1337, %1338
  %1340 = sub i32 0, %1339
  %1341 = add i32 %1335, 1
  %1342 = add i32 %1322, -460664253
  %1343 = sub i32 %1342, 1
  %1344 = sub i32 %1343, -460664253
  %1345 = sub i32 %1322, 1
  %1346 = mul i32 %1344, 1
  %1347 = sub i32 0, 1
  %1348 = add i32 %1322, %1347
  %1349 = sub i32 %1322, 1
  %1350 = mul i32 %1348, 1
  %1351 = add i32 %1322, -1770024587
  %1352 = sub i32 %1351, 1
  %1353 = sub i32 %1352, -1770024587
  %1354 = sub nsw i32 %1322, 1
  %1355 = load i32, i32* %29, align 4
  %1356 = sub i32 0, 1
  %1357 = add i32 %1355, %1356
  %1358 = sub i32 %1355, 1
  %1359 = mul i32 %1357, 1
  %1360 = add i32 %1355, 1197133328
  %1361 = sub i32 %1360, 1
  %1362 = sub i32 %1361, 1197133328
  %1363 = sub i32 %1355, 1
  %1364 = mul i32 %1362, 1
  %1365 = sub i32 %1355, 362152839
  %1366 = sub i32 %1365, 1
  %1367 = add i32 %1366, 362152839
  %1368 = sub nsw i32 %1355, 1
  br label %511

; <label>:1369:                                   ; preds = %567, %552
  br label %567

; <label>:1370:                                   ; preds = %614, %587
  br label %614

; <label>:1371:                                   ; preds = %653, %638
  br label %653

; <label>:1372:                                   ; preds = %697, %682
  br label %697

; <label>:1373:                                   ; preds = %744, %717
  br label %744

; <label>:1374:                                   ; preds = %803, %777
  %1375 = landingpad { i8*, i32 }
          cleanup
  %1376 = extractvalue { i8*, i32 } %1375, 0
  store i8* %1376, i8** %34, align 8
  %1377 = extractvalue { i8*, i32 } %1375, 1
  store i32 %1377, i32* %35, align 4
  call void @_ZNSt5dequeI3PosSaIS0_EED2Ev(%"class.std::deque"* %49) #3
  br label %803

; <label>:1378:                                   ; preds = %836, %821
  %1379 = landingpad { i8*, i32 }
          cleanup
  %1380 = extractvalue { i8*, i32 } %1379, 0
  store i8* %1380, i8** %34, align 8
  %1381 = extractvalue { i8*, i32 } %1379, 1
  store i32 %1381, i32* %35, align 4
  call void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue"* %48) #3
  br label %836

; <label>:1382:                                   ; preds = %893, %867
  br label %893

; <label>:1383:                                   ; preds = %968, %941
  %1384 = load i32, i32* %940, align 4
  %1385 = sub i32 %1384, 320447292
  %1386 = sub i32 %1385, 1
  %1387 = add i32 %1386, 320447292
  %1388 = sub i32 %1384, 1
  %1389 = mul i32 %1387, 1
  %1390 = sub i32 0, 1
  %1391 = add i32 %1384, %1390
  %1392 = sub i32 %1384, 1
  %1393 = mul i32 %1391, 1
  %1394 = add i32 %1384, 1223716135
  %1395 = add i32 %1394, 1
  %1396 = sub i32 %1395, 1223716135
  %1397 = add nsw i32 %1384, 1
  %1398 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail14_Node_iteratorI3PosLb1ELb1EEdeEv(%"struct.std::__detail::_Node_iterator"* %55) #3
  br label %968

; <label>:1399:                                   ; preds = %1022, %995
  %1400 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEppEv(%"struct.std::__detail::_Node_iterator"* %55) #3
  br label %1022

; <label>:1401:                                   ; preds = %1077, %1050
  br label %1077

; <label>:1402:                                   ; preds = %1118, %1104
  %1403 = load i8, i8* %52, align 1
  %1404 = trunc i8 %1403 to i1
  br label %1118

; <label>:1405:                                   ; preds = %1153, %1138
  br label %1153

; <label>:1406:                                   ; preds = %1188, %1174
  %1407 = load i8*, i8** %34, align 8
  %1408 = load i32, i32* %35, align 4
  %1409 = insertvalue { i8*, i32 } undef, i8* %1407, 0
  %1410 = insertvalue { i8*, i32 } %1409, i32 %1408, 1
  br label %1188
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEC2Ev(%"class.std::unordered_map"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %2, align 8
  %3 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable"* %4) #3
  ret void
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"*, i8* dereferenceable(1)) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3PosC2Eii(%class.Pos*, i32, i32) unnamed_addr #5 comdat align 2 {
  %4 = alloca %class.Pos*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Pos* %0, %class.Pos** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  %8 = getelementptr inbounds %class.Pos, %class.Pos* %7, i32 0, i32 0
  %9 = load i32, i32* %5, align 4
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %class.Pos, %class.Pos* %7, i32 0, i32 1
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %class.Pos, %class.Pos* %7, i32 0, i32 2
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_set"* @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEEixERS9_(%"class.std::unordered_map"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %5, i32 0, i32 0
  %7 = bitcast %"class.std::_Hashtable"* %6 to %"struct.std::__detail::_Map_base"*
  %8 = load %class.Pos*, %class.Pos** %4, align 8
  %9 = call dereferenceable(56) %"class.std::unordered_set"* @_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEESaISB_ENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS3_(%"struct.std::__detail::_Map_base"* %7, %class.Pos* dereferenceable(16) %8)
  ret %"class.std::unordered_set"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE6insertERKS0_(%"class.std::unordered_set"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca { %"struct.std::__detail::_Hash_node"*, i8 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.9
  %7 = load i32, i32* @y.10
  %8 = add i32 %6, -1579996711
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1579996711
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 770299630, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %91
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 770299630, label %20
    i32 -2008719701, label %28
    i32 1498316652, label %72
    i32 1856624439, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %91

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2008719701, i32 1856624439
  store i32 %27, i32* %16
  br label %91

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair", align 8
  %30 = alloca %"class.std::unordered_set"*, align 8
  %31 = alloca %class.Pos*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %30, align 8
  store %class.Pos* %1, %class.Pos** %31, align 8
  %32 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %30, align 8
  %33 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %32, i32 0, i32 0
  %34 = bitcast %"class.std::_Hashtable.4"* %33 to %"struct.std::__detail::_Insert.9"*
  %35 = bitcast %"struct.std::__detail::_Insert.9"* %34 to %"struct.std::__detail::_Insert_base.10"*
  %36 = load %class.Pos*, %class.Pos** %31, align 8
  %37 = call { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt8__detail12_Insert_baseI3PosS1_SaIS1_ENS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb1ELb1EEEE6insertERKS1_(%"struct.std::__detail::_Insert_base.10"* %35, %class.Pos* dereferenceable(16) %36)
  %38 = bitcast %"struct.std::pair"* %29 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %39 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %38, i32 0, i32 0
  %40 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %37, 0
  store %"struct.std::__detail::_Hash_node"* %40, %"struct.std::__detail::_Hash_node"** %39, align 8
  %41 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %38, i32 0, i32 1
  %42 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %37, 1
  store i8 %42, i8* %41, align 8
  %43 = bitcast %"struct.std::pair"* %29 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %44 = load { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %43, align 8
  store { %"struct.std::__detail::_Hash_node"*, i8 } %44, { %"struct.std::__detail::_Hash_node"*, i8 }* %3
  %45 = load i32, i32* @x.9
  %46 = load i32, i32* @y.10
  %47 = add i32 %45, 615330461
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 615330461
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1498316652, i32 1856624439
  store i32 %71, i32* %16
  br label %91

; <label>:72:                                     ; preds = %17
  %73 = load volatile { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %3
  ret { %"struct.std::__detail::_Hash_node"*, i8 } %73

; <label>:74:                                     ; preds = %17
  %75 = alloca %"struct.std::pair", align 8
  %76 = alloca %"class.std::unordered_set"*, align 8
  %77 = alloca %class.Pos*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %76, align 8
  store %class.Pos* %1, %class.Pos** %77, align 8
  %78 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %76, align 8
  %79 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %78, i32 0, i32 0
  %80 = bitcast %"class.std::_Hashtable.4"* %79 to %"struct.std::__detail::_Insert.9"*
  %81 = bitcast %"struct.std::__detail::_Insert.9"* %80 to %"struct.std::__detail::_Insert_base.10"*
  %82 = load %class.Pos*, %class.Pos** %77, align 8
  %83 = call { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt8__detail12_Insert_baseI3PosS1_SaIS1_ENS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb1ELb1EEEE6insertERKS1_(%"struct.std::__detail::_Insert_base.10"* %81, %class.Pos* dereferenceable(16) %82)
  %84 = bitcast %"struct.std::pair"* %75 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %85 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %84, i32 0, i32 0
  %86 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %83, 0
  store %"struct.std::__detail::_Hash_node"* %86, %"struct.std::__detail::_Hash_node"** %85, align 8
  %87 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %84, i32 0, i32 1
  %88 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %83, 1
  store i8 %88, i8* %87, align 8
  %89 = bitcast %"struct.std::pair"* %75 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %90 = load { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %89, align 8
  store i32 -2008719701, i32* %16
  br label %91

; <label>:91:                                     ; preds = %74, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEC2Ev(%"class.std::unordered_map.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::unordered_map.18"*, align 8
  store %"class.std::unordered_map.18"* %0, %"class.std::unordered_map.18"** %2, align 8
  %3 = load %"class.std::unordered_map.18"*, %"class.std::unordered_map.18"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_map.18", %"class.std::unordered_map.18"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable.19"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.13
  %5 = load i32, i32* @y.14
  %6 = add i32 %4, -831424475
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -831424475
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -723488577, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -723488577, label %18
    i32 -410008907, label %38
    i32 259122421, label %69
    i32 -460798802, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -410008907, i32 -460798802
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %39, align 8
  %40 = load %"class.std::deque"*, %"class.std::deque"** %39, align 8
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2Ev(%"class.std::_Deque_base"* %41)
  %42 = load i32, i32* @x.13
  %43 = load i32, i32* @y.14
  %44 = add i32 %42, 573215348
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 573215348
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 259122421, i32 -460798802
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %71, align 8
  %72 = load %"class.std::deque"*, %"class.std::deque"** %71, align 8
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2Ev(%"class.std::_Deque_base"* %73)
  store i32 -410008907, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEEC2EOS3_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeI3PosSaIS0_EEC2EOS2_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = add i32 %2, 863286547
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 863286547
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %90

; <label>:16:                                     ; preds = %1, %90
  %17 = alloca %"class.std::deque"*, align 8
  %18 = alloca %"struct.std::_Deque_iterator", align 8
  %19 = alloca %"struct.std::_Deque_iterator", align 8
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %17, align 8
  %22 = load %"class.std::deque"*, %"class.std::deque"** %17, align 8
  call void @_ZNSt5dequeI3PosSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %18, %"class.std::deque"* %22) #3
  call void @_ZNSt5dequeI3PosSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %19, %"class.std::deque"* %22) #3
  %23 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  %24 = call dereferenceable(1) %"class.std::allocator.32"* @_ZNSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %23) #3
  %25 = load i32, i32* @x.17
  %26 = load i32, i32* @y.18
  %27 = add i32 %25, 1447076959
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 1447076959
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %90

; <label>:39:                                     ; preds = %16
  invoke void @_ZNSt5dequeI3PosSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque"* %22, %"struct.std::_Deque_iterator"* %18, %"struct.std::_Deque_iterator"* %19, %"class.std::allocator.32"* dereferenceable(1) %24)
          to label %40 unwind label %42

; <label>:40:                                     ; preds = %39
  %41 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EED2Ev(%"class.std::_Deque_base"* %41) #3
  ret void

; <label>:42:                                     ; preds = %39
  %43 = load i32, i32* @x.17
  %44 = load i32, i32* @y.18
  %45 = add i32 %43, -979684694
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -979684694
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %99

; <label>:57:                                     ; preds = %42, %99
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %20, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %21, align 4
  %61 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EED2Ev(%"class.std::_Deque_base"* %61) #3
  %62 = load i32, i32* @x.17
  %63 = load i32, i32* @y.18
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %99

; <label>:87:                                     ; preds = %57
  br label %88

; <label>:88:                                     ; preds = %87
  %89 = load i8*, i8** %20, align 8
  call void @__clang_call_terminate(i8* %89) #9
  unreachable

; <label>:90:                                     ; preds = %16, %1
  %91 = alloca %"class.std::deque"*, align 8
  %92 = alloca %"struct.std::_Deque_iterator", align 8
  %93 = alloca %"struct.std::_Deque_iterator", align 8
  %94 = alloca i8*
  %95 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %91, align 8
  %96 = load %"class.std::deque"*, %"class.std::deque"** %91, align 8
  call void @_ZNSt5dequeI3PosSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %92, %"class.std::deque"* %96) #3
  call void @_ZNSt5dequeI3PosSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %93, %"class.std::deque"* %96) #3
  %97 = bitcast %"class.std::deque"* %96 to %"class.std::_Deque_base"*
  %98 = call dereferenceable(1) %"class.std::allocator.32"* @_ZNSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %97) #3
  br label %16

; <label>:99:                                     ; preds = %57, %42
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %20, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %21, align 4
  %103 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EED2Ev(%"class.std::_Deque_base"* %103) #3
  br label %57
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE4pushEOS0_(%"class.std::queue"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  %8 = call dereferenceable(16) %class.Pos* @_ZSt4moveIR3PosEONSt16remove_referenceIT_E4typeEOS3_(%class.Pos* dereferenceable(16) %7) #3
  call void @_ZNSt5dequeI3PosSaIS0_EE9push_backEOS0_(%"class.std::deque"* %6, %class.Pos* dereferenceable(16) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixEOS0_(%"class.std::unordered_map.18"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map.18"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::unordered_map.18"* %0, %"class.std::unordered_map.18"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::unordered_map.18"*, %"class.std::unordered_map.18"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map.18", %"class.std::unordered_map.18"* %5, i32 0, i32 0
  %7 = bitcast %"class.std::_Hashtable.19"* %6 to %"struct.std::__detail::_Map_base.22"*
  %8 = load %class.Pos*, %class.Pos** %4, align 8
  %9 = call dereferenceable(16) %class.Pos* @_ZSt4moveIR3PosEONSt16remove_referenceIT_E4typeEOS3_(%class.Pos* dereferenceable(16) %8) #3
  %10 = call dereferenceable(4) i32* @_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_iESaIS4_ENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixEOS1_(%"struct.std::__detail::_Map_base.22"* %7, %class.Pos* dereferenceable(16) %9)
  ret i32* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueI3PosSt5dequeIS0_SaIS0_EEE5emptyEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeI3PosSaIS0_EE5emptyEv(%"class.std::deque"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE5frontEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %class.Pos*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.25
  %6 = load i32, i32* @y.26
  %7 = add i32 %5, 2127403931
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2127403931
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -195532251, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -195532251, label %19
    i32 1042810194, label %39
    i32 440884579, label %59
    i32 -60518018, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1042810194, i32 -60518018
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %40, align 8
  %41 = load %"class.std::queue"*, %"class.std::queue"** %40, align 8
  %42 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %41, i32 0, i32 0
  %43 = call dereferenceable(16) %class.Pos* @_ZNSt5dequeI3PosSaIS0_EE5frontEv(%"class.std::deque"* %42) #3
  store %class.Pos* %43, %class.Pos** %2
  %44 = load i32, i32* @x.25
  %45 = load i32, i32* @y.26
  %46 = sub i32 %44, 1690043040
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1690043040
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 440884579, i32 -60518018
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %class.Pos*, %class.Pos** %2
  ret %class.Pos* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %62, align 8
  %63 = load %"class.std::queue"*, %"class.std::queue"** %62, align 8
  %64 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %63, i32 0, i32 0
  %65 = call dereferenceable(16) %class.Pos* @_ZNSt5dequeI3PosSaIS0_EE5frontEv(%"class.std::deque"* %64) #3
  store i32 1042810194, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE3popEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.27
  %5 = load i32, i32* @y.28
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 607218156, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 607218156, label %17
    i32 -1182872896, label %25
    i32 722241107, label %43
    i32 2094493009, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1182872896, i32 2094493009
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %26, align 8
  %27 = load %"class.std::queue"*, %"class.std::queue"** %26, align 8
  %28 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %27, i32 0, i32 0
  call void @_ZNSt5dequeI3PosSaIS0_EE9pop_frontEv(%"class.std::deque"* %28) #3
  %29 = load i32, i32* @x.27
  %30 = load i32, i32* @y.28
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 722241107, i32 2094493009
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %45, align 8
  %46 = load %"class.std::queue"*, %"class.std::queue"** %45, align 8
  %47 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %46, i32 0, i32 0
  call void @_ZNSt5dequeI3PosSaIS0_EE9pop_frontEv(%"class.std::deque"* %47) #3
  store i32 -1182872896, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK3PoseqES_(%class.Pos*, i64, i64) #5 comdat align 2 {
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca %class.Pos*
  %7 = alloca %class.Pos, align 8
  %8 = alloca %class.Pos*, align 8
  %9 = bitcast %class.Pos* %7 to { i64, i64 }*
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %2, i64* %11, align 8
  store %class.Pos* %0, %class.Pos** %8, align 8
  %12 = load %class.Pos*, %class.Pos** %8, align 8
  store %class.Pos* %12, %class.Pos** %6
  %13 = load volatile %class.Pos*, %class.Pos** %6
  %14 = getelementptr inbounds %class.Pos, %class.Pos* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %5
  %16 = getelementptr inbounds %class.Pos, %class.Pos* %7, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %4
  %18 = alloca i32
  store i32 1857628750, i32* %18
  %19 = alloca i1
  br label %20

; <label>:20:                                     ; preds = %3, %37
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 1857628750, label %23
    i32 1364052332, label %28
    i32 -1357861039, label %35
  ]

; <label>:22:                                     ; preds = %20
  br label %37

; <label>:23:                                     ; preds = %20
  %24 = load volatile i32, i32* %5
  %25 = load volatile i32, i32* %4
  %26 = icmp eq i32 %24, %25
  %27 = select i1 %26, i32 1364052332, i32 -1357861039
  store i32 %27, i32* %18
  store i1 false, i1* %19
  br label %37

; <label>:28:                                     ; preds = %20
  %29 = load volatile %class.Pos*, %class.Pos** %6
  %30 = getelementptr inbounds %class.Pos, %class.Pos* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.Pos, %class.Pos* %7, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  store i32 -1357861039, i32* %18
  store i1 %34, i1* %19
  br label %37

; <label>:35:                                     ; preds = %20
  %36 = load i1, i1* %19
  ret i1 %36

; <label>:37:                                     ; preds = %28, %23, %22
  br label %20
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEEixERS6_(%"class.std::unordered_map.18"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map.18"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::unordered_map.18"* %0, %"class.std::unordered_map.18"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::unordered_map.18"*, %"class.std::unordered_map.18"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map.18", %"class.std::unordered_map.18"* %5, i32 0, i32 0
  %7 = bitcast %"class.std::_Hashtable.19"* %6 to %"struct.std::__detail::_Map_base.22"*
  %8 = load %class.Pos*, %class.Pos** %4, align 8
  %9 = call dereferenceable(4) i32* @_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_iESaIS4_ENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS3_(%"struct.std::__detail::_Map_base.22"* %7, %class.Pos* dereferenceable(16) %8)
  ret i32* %9
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE5beginEv(%"class.std::unordered_set"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.33
  %6 = load i32, i32* @y.34
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 378131160, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 378131160, label %18
    i32 -1766283559, label %26
    i32 1769491963, label %63
    i32 -317272006, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1766283559, i32 -317272006
  store i32 %25, i32* %14
  br label %76

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %28 = alloca %"class.std::unordered_set"*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %28, align 8
  %29 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %28, align 8
  %30 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %29, i32 0, i32 0
  %31 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5beginEv(%"class.std::_Hashtable.4"* %30) #3
  %32 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %27, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %32, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %31, %"struct.std::__detail::_Hash_node"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %27, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %34, i32 0, i32 0
  %36 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %35, align 8
  store %"struct.std::__detail::_Hash_node"* %36, %"struct.std::__detail::_Hash_node"** %2
  %37 = load i32, i32* @x.33
  %38 = load i32, i32* @y.34
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1769491963, i32 -317272006
  store i32 %62, i32* %14
  br label %76

; <label>:63:                                     ; preds = %15
  %64 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %64

; <label>:65:                                     ; preds = %15
  %66 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %67 = alloca %"class.std::unordered_set"*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %67, align 8
  %68 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %67, align 8
  %69 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %68, i32 0, i32 0
  %70 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5beginEv(%"class.std::_Hashtable.4"* %69) #3
  %71 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %66, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %71, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %70, %"struct.std::__detail::_Hash_node"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %66, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %73, i32 0, i32 0
  %75 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %74, align 8
  store i32 -1766283559, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detailneI3PosLb1EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES6_(%"struct.std::__detail::_Node_iterator_base"* dereferenceable(8), %"struct.std::__detail::_Node_iterator_base"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %4 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %1, %"struct.std::__detail::_Node_iterator_base"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %6, align 8
  %8 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %8, i32 0, i32 0
  %10 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %11 = icmp ne %"struct.std::__detail::_Hash_node"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EE3endEv(%"class.std::unordered_set"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::unordered_set"*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %3, align 8
  %4 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %4, i32 0, i32 0
  %6 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE3endEv(%"class.std::_Hashtable.4"* %5) #3
  %7 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %7, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %6, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %9, i32 0, i32 0
  %11 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %10, align 8
  ret %"struct.std::__detail::_Hash_node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEE5countERS6_(%"class.std::unordered_map.18"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_map.18"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::unordered_map.18"* %0, %"class.std::unordered_map.18"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::unordered_map.18"*, %"class.std::unordered_map.18"** %3, align 8
  %6 = getelementptr inbounds %"class.std::unordered_map.18", %"class.std::unordered_map.18"* %5, i32 0, i32 0
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  %8 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE5countERS2_(%"class.std::_Hashtable.19"* %6, %class.Pos* dereferenceable(16) %7)
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNKSt8__detail14_Node_iteratorI3PosLb1ELb1EEdeEv(%"struct.std::__detail::_Node_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Node_iterator"* %3 to %"struct.std::__detail::_Node_iterator_base"*
  %5 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node"* %6 to %"struct.std::__detail::_Hash_node_value_base"*
  %8 = call dereferenceable(16) %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %7) #3
  ret %class.Pos* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEE4pushERKS0_(%"class.std::queue"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  call void @_ZNSt5dequeI3PosSaIS0_EE9push_backERKS0_(%"class.std::deque"* %6, %class.Pos* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEppEv(%"struct.std::__detail::_Node_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Node_iterator"* %3 to %"struct.std::__detail::_Node_iterator_base"*
  call void @_ZNSt8__detail19_Node_iterator_baseI3PosLb1EE7_M_incrEv(%"struct.std::__detail::_Node_iterator_base"* %4) #3
  ret %"struct.std::__detail::_Node_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueI3PosSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.47
  %5 = load i32, i32* @y.48
  %6 = sub i32 %4, 2019613665
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2019613665
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1208303213, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1208303213, label %18
    i32 -12546530, label %38
    i32 -1413149787, label %57
    i32 -189293037, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -12546530, i32 -189293037
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %39, align 8
  %40 = load %"class.std::queue"*, %"class.std::queue"** %39, align 8
  %41 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %40, i32 0, i32 0
  call void @_ZNSt5dequeI3PosSaIS0_EED2Ev(%"class.std::deque"* %41) #3
  %42 = load i32, i32* @x.47
  %43 = load i32, i32* @y.48
  %44 = sub i32 %42, 1803200660
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1803200660
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1413149787, i32 -189293037
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %59, align 8
  %60 = load %"class.std::queue"*, %"class.std::queue"** %59, align 8
  %61 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %60, i32 0, i32 0
  call void @_ZNSt5dequeI3PosSaIS0_EED2Ev(%"class.std::deque"* %61) #3
  store i32 -12546530, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapI3PosiSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_iEEED2Ev(%"class.std::unordered_map.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::unordered_map.18"*, align 8
  store %"class.std::unordered_map.18"* %0, %"class.std::unordered_map.18"** %2, align 8
  %3 = load %"class.std::unordered_map.18"*, %"class.std::unordered_map.18"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_map.18", %"class.std::unordered_map.18"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev(%"class.std::_Hashtable.19"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_mapI3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EES3_S5_SaISt4pairIKS0_S7_EEED2Ev(%"class.std::unordered_map"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.51
  %5 = load i32, i32* @y.52
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 933838673, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 933838673, label %17
    i32 2025950156, label %25
    i32 -779146724, label %44
    i32 1626551332, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 2025950156, i32 1626551332
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %26, align 8
  %27 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %26, align 8
  %28 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %27, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev(%"class.std::_Hashtable"* %28) #3
  %29 = load i32, i32* @x.51
  %30 = load i32, i32* @y.52
  %31 = add i32 %29, -546196238
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -546196238
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -779146724, i32 1626551332
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"class.std::unordered_map"*, align 8
  store %"class.std::unordered_map"* %0, %"class.std::unordered_map"** %46, align 8
  %47 = load %"class.std::unordered_map"*, %"class.std::unordered_map"** %46, align 8
  %48 = getelementptr inbounds %"class.std::unordered_map", %"class.std::unordered_map"* %47, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev(%"class.std::_Hashtable"* %48) #3
  store i32 2025950156, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_base"*
  %5 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Map_base"*
  %6 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Insert"*
  %7 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Rehash_base"*
  %8 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Equality"*
  %9 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc"* %9) #3
  %10 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %11, %"struct.std::__detail::_Hash_node_base"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %13) #3
  %14 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 4
  call void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"* %15, float 1.000000e+00) #3
  %16 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.3"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.57
  %5 = load i32, i32* @y.58
  %6 = add i32 %4, 124504590
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 124504590
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1593263612, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1593263612, label %18
    i32 1848555783, label %26
    i32 -945628878, label %57
    i32 -15429940, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1848555783, i32 -15429940
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"struct.std::__detail::_Hash_node_base"* %0, %"struct.std::__detail::_Hash_node_base"** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %28, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %29, align 8
  %30 = load i32, i32* @x.57
  %31 = load i32, i32* @y.58
  %32 = sub i32 %30, 343425486
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 343425486
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -945628878, i32 -15429940
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"struct.std::__detail::_Hash_node_base"* %0, %"struct.std::__detail::_Hash_node_base"** %59, align 8
  %60 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %60, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %61, align 8
  store i32 1848555783, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"*, float) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %4 = alloca float, align 4
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  store float %1, float* %4, align 4
  %5 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %5, i32 0, i32 0
  %7 = load float, float* %4, align 4
  store float %7, float* %6, align 8
  %8 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %5, i32 0, i32 1
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.61
  %5 = load i32, i32* @y.62
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2082611546, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2082611546, label %17
    i32 739823707, label %25
    i32 825888463, label %44
    i32 -1556887668, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 739823707, i32 -1556887668
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.3"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.3"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %26, align 8
  %27 = load %"struct.std::__detail::_Hashtable_ebo_helper.3"*, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %26, align 8
  %28 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.3"* %27 to %"class.std::allocator"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEEEC2Ev(%"class.std::allocator"* %28) #3
  %29 = load i32, i32* @x.61
  %30 = load i32, i32* @y.62
  %31 = add i32 %29, 538906336
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 538906336
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 825888463, i32 -1556887668
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.3"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.3"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %46, align 8
  %47 = load %"struct.std::__detail::_Hashtable_ebo_helper.3"*, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %46, align 8
  %48 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.3"* %47 to %"class.std::allocator"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEEEC2Ev(%"class.std::allocator"* %48) #3
  store i32 739823707, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.65
  %5 = load i32, i32* @y.66
  %6 = sub i32 %4, -942300230
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -942300230
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1871211343, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1871211343, label %18
    i32 571374966, label %26
    i32 1580297922, label %55
    i32 -322712023, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 571374966, i32 -322712023
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.65
  %30 = load i32, i32* @y.66
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1580297922, i32 -322712023
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %57, align 8
  store i32 571374966, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEEC2Ev(%"class.std::_Hashtable.19"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.67
  %5 = load i32, i32* @y.68
  %6 = add i32 %4, 316298342
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 316298342
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -947227970, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -947227970, label %18
    i32 681068058, label %26
    i32 -1071939357, label %57
    i32 609811744, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 681068058, i32 609811744
  store i32 %25, i32* %14
  br label %74

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Hashtable.19"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %27, align 8
  %28 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %27, align 8
  %29 = bitcast %"class.std::_Hashtable.19"* %28 to %"struct.std::__detail::_Hashtable_base.20"*
  %30 = bitcast %"class.std::_Hashtable.19"* %28 to %"struct.std::__detail::_Map_base.22"*
  %31 = bitcast %"class.std::_Hashtable.19"* %28 to %"struct.std::__detail::_Insert.23"*
  %32 = bitcast %"class.std::_Hashtable.19"* %28 to %"struct.std::__detail::_Rehash_base.25"*
  %33 = bitcast %"class.std::_Hashtable.19"* %28 to %"struct.std::__detail::_Equality.26"*
  %34 = bitcast %"class.std::_Hashtable.19"* %28 to %"struct.std::__detail::_Hashtable_alloc.27"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc.27"* %34) #3
  %35 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %28, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %28, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %36, %"struct.std::__detail::_Hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %28, i32 0, i32 1
  store i64 1, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %28, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %38) #3
  %39 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %28, i32 0, i32 3
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %28, i32 0, i32 4
  call void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"* %40, float 1.000000e+00) #3
  %41 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %28, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %41, align 8
  %42 = load i32, i32* @x.67
  %43 = load i32, i32* @y.68
  %44 = sub i32 %42, -1141213307
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1141213307
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1071939357, i32 609811744
  store i32 %56, i32* %14
  br label %74

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::_Hashtable.19"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %59, align 8
  %60 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %59, align 8
  %61 = bitcast %"class.std::_Hashtable.19"* %60 to %"struct.std::__detail::_Hashtable_base.20"*
  %62 = bitcast %"class.std::_Hashtable.19"* %60 to %"struct.std::__detail::_Map_base.22"*
  %63 = bitcast %"class.std::_Hashtable.19"* %60 to %"struct.std::__detail::_Insert.23"*
  %64 = bitcast %"class.std::_Hashtable.19"* %60 to %"struct.std::__detail::_Rehash_base.25"*
  %65 = bitcast %"class.std::_Hashtable.19"* %60 to %"struct.std::__detail::_Equality.26"*
  %66 = bitcast %"class.std::_Hashtable.19"* %60 to %"struct.std::__detail::_Hashtable_alloc.27"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc.27"* %66) #3
  %67 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %68, %"struct.std::__detail::_Hash_node_base"*** %67, align 8
  %69 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 1
  store i64 1, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %70) #3
  %71 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 3
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 4
  call void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"* %72, float 1.000000e+00) #3
  %73 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %73, align 8
  store i32 681068058, i32* %14
  br label %74

; <label>:74:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc.27"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc.27"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.28"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.28"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.28"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.28"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.28"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.28"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.28"*, %"struct.std::__detail::_Hashtable_ebo_helper.28"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.28"* %3 to %"class.std::allocator.29"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEC2Ev(%"class.std::allocator.29"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEC2Ev(%"class.std::allocator.29"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %2, align 8
  %3 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %2, align 8
  %4 = bitcast %"class.std::allocator.29"* %3 to %"class.__gnu_cxx::new_allocator.30"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEC2Ev(%"class.__gnu_cxx::new_allocator.30"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEC2Ev(%"class.__gnu_cxx::new_allocator.30"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev(%"class.std::_Hashtable.19"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.77
  %3 = load i32, i32* @y.78
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %103

; <label>:15:                                     ; preds = %1, %103
  %16 = alloca %"class.std::_Hashtable.19"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %16, align 8
  %19 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %16, align 8
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable.19"* %19) #3
  %20 = load i32, i32* @x.77
  %21 = load i32, i32* @y.78
  %22 = sub i32 %20, -498732023
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -498732023
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %103

; <label>:34:                                     ; preds = %15
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable.19"* %19)
          to label %35 unwind label %37

; <label>:35:                                     ; preds = %34
  %36 = bitcast %"class.std::_Hashtable.19"* %19 to %"struct.std::__detail::_Hashtable_alloc.27"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.27"* %36) #3
  ret void

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* @x.77
  %39 = load i32, i32* @y.78
  %40 = add i32 %38, 1490644134
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1490644134
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %108

; <label>:52:                                     ; preds = %37, %108
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %17, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %18, align 4
  %56 = bitcast %"class.std::_Hashtable.19"* %19 to %"struct.std::__detail::_Hashtable_alloc.27"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.27"* %56) #3
  %57 = load i32, i32* @x.77
  %58 = load i32, i32* @y.78
  %59 = sub i32 %57, -567806958
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -567806958
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %108

; <label>:71:                                     ; preds = %52
  br label %72

; <label>:72:                                     ; preds = %71
  %73 = load i32, i32* @x.77
  %74 = load i32, i32* @y.78
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %113

; <label>:86:                                     ; preds = %72, %113
  %87 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %87) #9
  %88 = load i32, i32* @x.77
  %89 = load i32, i32* @y.78
  %90 = sub i32 %88, -1887374742
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -1887374742
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %113

; <label>:102:                                    ; preds = %86
  unreachable

; <label>:103:                                    ; preds = %15, %1
  %104 = alloca %"class.std::_Hashtable.19"*, align 8
  %105 = alloca i8*
  %106 = alloca i32
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %104, align 8
  %107 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %104, align 8
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable.19"* %107) #3
  br label %15

; <label>:108:                                    ; preds = %52, %37
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %17, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %18, align 4
  %112 = bitcast %"class.std::_Hashtable.19"* %19 to %"struct.std::__detail::_Hashtable_alloc.27"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.27"* %112) #3
  br label %52

; <label>:113:                                    ; preds = %86, %72
  %114 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %114) #9
  br label %86
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable.19"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Hashtable.19"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %2, align 8
  %3 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %2, align 8
  %4 = bitcast %"class.std::_Hashtable.19"* %3 to %"struct.std::__detail::_Hashtable_alloc.27"*
  %5 = invoke %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.19"* %3)
          to label %6 unwind label %17

; <label>:6:                                      ; preds = %1
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE19_M_deallocate_nodesEPS6_(%"struct.std::__detail::_Hashtable_alloc.27"* %4, %"struct.std::__detail::_Hash_node.35"* %5)
          to label %7 unwind label %17

; <label>:7:                                      ; preds = %6
  %8 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %3, i32 0, i32 0
  %9 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %10 = bitcast %"struct.std::__detail::_Hash_node_base"** %9 to i8*
  %11 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %3, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = mul i64 %12, 8
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 %13, i32 8, i1 false)
  %14 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %3, i32 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %3, i32 0, i32 2
  %16 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %15, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %16, align 8
  ret void

; <label>:17:                                     ; preds = %6, %1
  %18 = load i32, i32* @x.79
  %19 = load i32, i32* @y.80
  %20 = sub i32 %18, -361446969
  %21 = sub i32 %20, 1
  %22 = add i32 %21, -361446969
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %62

; <label>:32:                                     ; preds = %17, %62
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #9
  %35 = load i32, i32* @x.79
  %36 = load i32, i32* @y.80
  %37 = add i32 %35, -783746879
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -783746879
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %32
  unreachable

; <label>:62:                                     ; preds = %32, %17
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #9
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable.19"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable.19"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %2, align 8
  %3 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS5_15_Hash_node_baseEm(%"class.std::_Hashtable.19"* %3, %"struct.std::__detail::_Hash_node_base"** %5, i64 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.27"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.83
  %5 = load i32, i32* @y.84
  %6 = sub i32 %4, 1441648513
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1441648513
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 521534432, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 521534432, label %18
    i32 516086774, label %38
    i32 -300246342, label %69
    i32 1253247174, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 516086774, i32 1253247174
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %39, align 8
  %40 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %39, align 8
  %41 = bitcast %"struct.std::__detail::_Hashtable_alloc.27"* %40 to %"struct.std::__detail::_Hashtable_ebo_helper.28"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.28"* %41) #3
  %42 = load i32, i32* @x.83
  %43 = load i32, i32* @y.84
  %44 = sub i32 %42, -1346982570
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1346982570
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -300246342, i32 1253247174
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %71, align 8
  %72 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %71, align 8
  %73 = bitcast %"struct.std::__detail::_Hashtable_alloc.27"* %72 to %"struct.std::__detail::_Hashtable_ebo_helper.28"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.28"* %73) #3
  store i32 516086774, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #9
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE19_M_deallocate_nodesEPS6_(%"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hash_node.35"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*
  %4 = alloca %"struct.std::__detail::_Hash_node.35"**
  %5 = alloca %"struct.std::__detail::_Hash_node.35"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.87
  %9 = load i32, i32* @y.88
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1424293902, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %153
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1424293902, label %21
    i32 1563354572, label %41
    i32 -1079201268, label %74
    i32 2137393107, label %75
    i32 -81894963, label %80
    i32 -898193535, label %91
    i32 1296275850, label %118
    i32 1634549691, label %146
    i32 647848719, label %147
    i32 -810062468, label %152
  ]

; <label>:20:                                     ; preds = %18
  br label %153

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1563354572, i32 647848719
  store i32 %40, i32* %17
  br label %153

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %43 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"** %43, %"struct.std::__detail::_Hash_node.35"*** %5
  %44 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"** %44, %"struct.std::__detail::_Hash_node.35"*** %4
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %42, align 8
  %45 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %5
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %45, align 8
  %46 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %42, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %46, %"struct.std::__detail::_Hashtable_alloc.27"** %3
  %47 = load i32, i32* @x.87
  %48 = load i32, i32* @y.88
  %49 = sub i32 %47, -203745543
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -203745543
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1079201268, i32 647848719
  store i32 %73, i32* %17
  br label %153

; <label>:74:                                     ; preds = %18
  store i32 2137393107, i32* %17
  br label %153

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %5
  %77 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %76, align 8
  %78 = icmp ne %"struct.std::__detail::_Hash_node.35"* %77, null
  %79 = select i1 %78, i32 -81894963, i32 -898193535
  store i32 %79, i32* %17
  br label %153

; <label>:80:                                     ; preds = %18
  %81 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %5
  %82 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %81, align 8
  %83 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %4
  store %"struct.std::__detail::_Hash_node.35"* %82, %"struct.std::__detail::_Hash_node.35"** %83, align 8
  %84 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %5
  %85 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %84, align 8
  %86 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %85) #3
  %87 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %5
  store %"struct.std::__detail::_Hash_node.35"* %86, %"struct.std::__detail::_Hash_node.35"** %87, align 8
  %88 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %4
  %89 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %88, align 8
  %90 = load volatile %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %3
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE18_M_deallocate_nodeEPS6_(%"struct.std::__detail::_Hashtable_alloc.27"* %90, %"struct.std::__detail::_Hash_node.35"* %89)
  store i32 2137393107, i32* %17
  br label %153

; <label>:91:                                     ; preds = %18
  %92 = load i32, i32* @x.87
  %93 = load i32, i32* @y.88
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 1296275850, i32 -810062468
  store i32 %117, i32* %17
  br label %153

; <label>:118:                                    ; preds = %18
  %119 = load i32, i32* @x.87
  %120 = load i32, i32* @y.88
  %121 = add i32 %119, -402429158
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -402429158
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  %145 = select i1 %143, i32 1634549691, i32 -810062468
  store i32 %145, i32* %17
  br label %153

; <label>:146:                                    ; preds = %18
  ret void

; <label>:147:                                    ; preds = %18
  %148 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %149 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %150 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %148, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %149, align 8
  %151 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %148, align 8
  store i32 1563354572, i32* %17
  br label %153

; <label>:152:                                    ; preds = %18
  store i32 1296275850, i32* %17
  br label %153

; <label>:153:                                    ; preds = %152, %147, %118, %91, %80, %75, %74, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.19"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable.19"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %2, align 8
  %3 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %3, i32 0, i32 2
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node_base"* %6 to %"struct.std::__detail::_Hash_node.35"*
  ret %"struct.std::__detail::_Hash_node.35"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"* %0, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node.35"* %3 to %"struct.std::__detail::_Hash_node_base"*
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node_base"* %6 to %"struct.std::__detail::_Hash_node.35"*
  ret %"struct.std::__detail::_Hash_node.35"* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE18_M_deallocate_nodeEPS6_(%"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hash_node.35"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.93
  %4 = load i32, i32* @y.94
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %72

; <label>:16:                                     ; preds = %2, %72
  %17 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %18 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %19 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %20 = alloca %"class.std::allocator.40", align 1
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %17, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %18, align 8
  %23 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %17, align 8
  %24 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %18, align 8
  %25 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE10pointer_toERS6_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40) %24) #3
  store %"struct.std::__detail::_Hash_node.35"* %25, %"struct.std::__detail::_Hash_node.35"** %19, align 8
  %26 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %23)
  call void @_ZNSaISt4pairIK3PosiEEC2INSt8__detail10_Hash_nodeIS2_Lb1EEEEERKSaIT_E(%"class.std::allocator.40"* %20, %"class.std::allocator.29"* dereferenceable(1) %26) #3
  %27 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %18, align 8
  %28 = bitcast %"struct.std::__detail::_Hash_node.35"* %27 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %29 = call %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"* %28) #3
  %30 = load i32, i32* @x.93
  %31 = load i32, i32* @y.94
  %32 = add i32 %30, -943039918
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -943039918
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %72

; <label>:56:                                     ; preds = %16
  invoke void @_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE7destroyIS3_EEvRS4_PT_(%"class.std::allocator.40"* dereferenceable(1) %20, %"struct.std::pair.43"* %29)
          to label %57 unwind label %63

; <label>:57:                                     ; preds = %56
  %58 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %18, align 8
  %59 = invoke dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %23)
          to label %60 unwind label %63

; <label>:60:                                     ; preds = %57
  %61 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %19, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE10deallocateERS7_PS6_m(%"class.std::allocator.29"* dereferenceable(1) %59, %"struct.std::__detail::_Hash_node.35"* %61, i64 1)
          to label %62 unwind label %63

; <label>:62:                                     ; preds = %60
  call void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"* %20) #3
  ret void

; <label>:63:                                     ; preds = %60, %57, %56
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %21, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %22, align 4
  call void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"* %20) #3
  br label %67

; <label>:67:                                     ; preds = %63
  %68 = load i8*, i8** %21, align 8
  %69 = load i32, i32* %22, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  resume { i8*, i32 } %71

; <label>:72:                                     ; preds = %16, %2
  %73 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %74 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %75 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %76 = alloca %"class.std::allocator.40", align 1
  %77 = alloca i8*
  %78 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %73, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %74, align 8
  %79 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %73, align 8
  %80 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %74, align 8
  %81 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE10pointer_toERS6_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40) %80) #3
  store %"struct.std::__detail::_Hash_node.35"* %81, %"struct.std::__detail::_Hash_node.35"** %75, align 8
  %82 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %79)
  call void @_ZNSaISt4pairIK3PosiEEC2INSt8__detail10_Hash_nodeIS2_Lb1EEEEERKSaIT_E(%"class.std::allocator.40"* %76, %"class.std::allocator.29"* dereferenceable(1) %82) #3
  %83 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %74, align 8
  %84 = bitcast %"struct.std::__detail::_Hash_node.35"* %83 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %85 = call %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"* %84) #3
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE10pointer_toERS6_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node.35"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.95
  %6 = load i32, i32* @y.96
  %7 = add i32 %5, -1312624489
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1312624489
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1725878717, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1725878717, label %19
    i32 -1848861048, label %39
    i32 -1127050272, label %58
    i32 -348617945, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1848861048, i32 -348617945
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"* %0, %"struct.std::__detail::_Hash_node.35"** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %40, align 8
  %42 = call %"struct.std::__detail::_Hash_node.35"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40) %41) #3
  store %"struct.std::__detail::_Hash_node.35"* %42, %"struct.std::__detail::_Hash_node.35"** %2
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = add i32 %43, 901227473
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 901227473
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1127050272, i32 -348617945
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %2
  ret %"struct.std::__detail::_Hash_node.35"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"* %0, %"struct.std::__detail::_Hash_node.35"** %61, align 8
  %62 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %61, align 8
  %63 = call %"struct.std::__detail::_Hash_node.35"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40) %62) #3
  store i32 -1848861048, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc.27"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.28"*
  %5 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EE6_S_getERS8_(%"struct.std::__detail::_Hashtable_ebo_helper.28"* dereferenceable(1) %4)
  ret %"class.std::allocator.29"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIK3PosiEEC2INSt8__detail10_Hash_nodeIS2_Lb1EEEEERKSaIT_E(%"class.std::allocator.40"*, %"class.std::allocator.29"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.99
  %6 = load i32, i32* @y.100
  %7 = add i32 %5, 279406409
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 279406409
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -107879785, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -107879785, label %19
    i32 1019454847, label %27
    i32 -2017119987, label %59
    i32 -1699145141, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1019454847, i32 -1699145141
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.40"*, align 8
  %29 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %28, align 8
  store %"class.std::allocator.29"* %1, %"class.std::allocator.29"** %29, align 8
  %30 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %28, align 8
  %31 = bitcast %"class.std::allocator.40"* %30 to %"class.__gnu_cxx::new_allocator.41"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEEC2Ev(%"class.__gnu_cxx::new_allocator.41"* %31) #3
  %32 = load i32, i32* @x.99
  %33 = load i32, i32* @y.100
  %34 = add i32 %32, 203961009
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 203961009
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -2017119987, i32 -1699145141
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::allocator.40"*, align 8
  %62 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %61, align 8
  store %"class.std::allocator.29"* %1, %"class.std::allocator.29"** %62, align 8
  %63 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %61, align 8
  %64 = bitcast %"class.std::allocator.40"* %63 to %"class.__gnu_cxx::new_allocator.41"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEEC2Ev(%"class.__gnu_cxx::new_allocator.41"* %64) #3
  store i32 1019454847, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE7destroyIS3_EEvRS4_PT_(%"class.std::allocator.40"* dereferenceable(1), %"struct.std::pair.43"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.101
  %6 = load i32, i32* @y.102
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -984894948, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -984894948, label %18
    i32 -1715641797, label %26
    i32 -1643782672, label %47
    i32 276167261, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1715641797, i32 276167261
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.40"*, align 8
  %28 = alloca %"struct.std::pair.43"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %27, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %28, align 8
  %29 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %27, align 8
  %30 = bitcast %"class.std::allocator.40"* %29 to %"class.__gnu_cxx::new_allocator.41"*
  %31 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %28, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.41"* %30, %"struct.std::pair.43"* %31)
  %32 = load i32, i32* @x.101
  %33 = load i32, i32* @y.102
  %34 = sub i32 %32, 222342255
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 222342255
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1643782672, i32 276167261
  store i32 %46, i32* %14
  br label %54

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::allocator.40"*, align 8
  %50 = alloca %"struct.std::pair.43"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %49, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %50, align 8
  %51 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %49, align 8
  %52 = bitcast %"class.std::allocator.40"* %51 to %"class.__gnu_cxx::new_allocator.41"*
  %53 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %50, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.41"* %52, %"struct.std::pair.43"* %53)
  store i32 -1715641797, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base.36"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base.36"* %0, %"struct.std::__detail::_Hash_node_value_base.36"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base.36"*, %"struct.std::__detail::_Hash_node_value_base.36"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base.36", %"struct.std::__detail::_Hash_node_value_base.36"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.43"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosiEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer.37"* %4) #3
  ret %"struct.std::pair.43"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE10deallocateERS7_PS6_m(%"class.std::allocator.29"* dereferenceable(1), %"struct.std::__detail::_Hash_node.35"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.29"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %4, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %4, align 8
  %8 = bitcast %"class.std::allocator.29"* %7 to %"class.__gnu_cxx::new_allocator.30"*
  %9 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE10deallocateEPS7_m(%"class.__gnu_cxx::new_allocator.30"* %8, %"struct.std::__detail::_Hash_node.35"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.40"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %2, align 8
  %3 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %2, align 8
  %4 = bitcast %"class.std::allocator.40"* %3 to %"class.__gnu_cxx::new_allocator.41"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEED2Ev(%"class.__gnu_cxx::new_allocator.41"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"* %0, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node.35"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40) %3) #3
  ret %"struct.std::__detail::_Hash_node.35"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"* %0, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node.35"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::__detail::_Hash_node.35"*
  ret %"struct.std::__detail::_Hash_node.35"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EE6_S_getERS8_(%"struct.std::__detail::_Hashtable_ebo_helper.28"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.28"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.28"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.28"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.28"*, %"struct.std::__detail::_Hashtable_ebo_helper.28"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.28"* %3 to %"class.std::allocator.29"*
  ret %"class.std::allocator.29"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEEC2Ev(%"class.__gnu_cxx::new_allocator.41"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.41"*, %"struct.std::pair.43"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  %4 = alloca %"struct.std::pair.43"*, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %3, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %3, align 8
  %6 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.43"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosiEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer.37"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.43"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.119
  %6 = load i32, i32* @y.120
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1733261614, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1733261614, label %18
    i32 -586019073, label %26
    i32 -11816077, label %58
    i32 -938096701, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -586019073, i32 -938096701
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.__gnu_cxx::__aligned_buffer.37"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer.37"* %0, %"struct.__gnu_cxx::__aligned_buffer.37"** %27, align 8
  %28 = load %"struct.__gnu_cxx::__aligned_buffer.37"*, %"struct.__gnu_cxx::__aligned_buffer.37"** %27, align 8
  %29 = call i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosiEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer.37"* %28) #3
  %30 = bitcast i8* %29 to %"struct.std::pair.43"*
  store %"struct.std::pair.43"* %30, %"struct.std::pair.43"** %2
  %31 = load i32, i32* @x.119
  %32 = load i32, i32* @y.120
  %33 = add i32 %31, 1592805656
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1592805656
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -11816077, i32 -938096701
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.std::pair.43"*, %"struct.std::pair.43"** %2
  ret %"struct.std::pair.43"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.__gnu_cxx::__aligned_buffer.37"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer.37"* %0, %"struct.__gnu_cxx::__aligned_buffer.37"** %61, align 8
  %62 = load %"struct.__gnu_cxx::__aligned_buffer.37"*, %"struct.__gnu_cxx::__aligned_buffer.37"** %61, align 8
  %63 = call i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosiEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer.37"* %62) #3
  %64 = bitcast i8* %63 to %"struct.std::pair.43"*
  store i32 -586019073, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosiEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer.37"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer.37"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer.37"* %0, %"struct.__gnu_cxx::__aligned_buffer.37"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer.37"*, %"struct.__gnu_cxx::__aligned_buffer.37"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer.37", %"struct.__gnu_cxx::__aligned_buffer.37"* %3, i32 0, i32 0
  %5 = bitcast %"union.std::aligned_storage<24, 8>::type"* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE10deallocateEPS7_m(%"class.__gnu_cxx::new_allocator.30"*, %"struct.std::__detail::_Hash_node.35"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %4, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %4, align 8
  %8 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  %9 = bitcast %"struct.std::__detail::_Hash_node.35"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEED2Ev(%"class.__gnu_cxx::new_allocator.41"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNS5_15_Hash_node_baseEm(%"class.std::_Hashtable.19"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**
  %5 = alloca %"class.std::_Hashtable.19"*
  %6 = alloca %"class.std::_Hashtable.19"*, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca i64, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %6, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %6, align 8
  store %"class.std::_Hashtable.19"* %9, %"class.std::_Hashtable.19"** %5
  %10 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store %"struct.std::__detail::_Hash_node_base"** %10, %"struct.std::__detail::_Hash_node_base"*** %4
  %11 = alloca i32
  store i32 -1927515529, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %27
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1927515529, label %15
    i32 764982396, label %20
    i32 790752672, label %21
    i32 -1707155776, label %26
  ]

; <label>:14:                                     ; preds = %12
  br label %27

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %17 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4
  %18 = call zeroext i1 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNS5_15_Hash_node_baseE(%"class.std::_Hashtable.19"* %16, %"struct.std::__detail::_Hash_node_base"** %17)
  %19 = select i1 %18, i32 764982396, i32 790752672
  store i32 %19, i32* %11
  br label %27

; <label>:20:                                     ; preds = %12
  store i32 -1707155776, i32* %11
  br label %27

; <label>:21:                                     ; preds = %12
  %22 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %23 = bitcast %"class.std::_Hashtable.19"* %22 to %"struct.std::__detail::_Hashtable_alloc.27"*
  %24 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %25 = load i64, i64* %8, align 8
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc.27"* %23, %"struct.std::__detail::_Hash_node_base"** %24, i64 %25)
  store i32 -1707155776, i32* %11
  br label %27

; <label>:26:                                     ; preds = %12
  ret void

; <label>:27:                                     ; preds = %21, %20, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNS5_15_Hash_node_baseE(%"class.std::_Hashtable.19"*, %"struct.std::__detail::_Hash_node_base"**) #5 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable.19"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %3, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %5 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %3, align 8
  %6 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %7 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %5, i32 0, i32 5
  %8 = icmp eq %"struct.std::__detail::_Hash_node_base"** %6, %7
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"class.std::allocator.45", align 1
  %9 = alloca i8*
  %10 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %4, align 8
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %13 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %12) #3
  store %"struct.std::__detail::_Hash_node_base"** %13, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %14 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %11)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosiELb1EEEEERKSaIT_E(%"class.std::allocator.45"* %8, %"class.std::allocator.29"* dereferenceable(1) %14) #3
  %15 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %16 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.45"* dereferenceable(1) %8, %"struct.std::__detail::_Hash_node_base"** %15, i64 %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %3
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  ret void

; <label>:18:                                     ; preds = %3
  %19 = load i32, i32* @x.131
  %20 = load i32, i32* @y.132
  %21 = add i32 %19, 134249716
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 134249716
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %68

; <label>:33:                                     ; preds = %18, %68
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %9, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  %37 = load i32, i32* @x.131
  %38 = load i32, i32* @y.132
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %68

; <label>:62:                                     ; preds = %33
  br label %63

; <label>:63:                                     ; preds = %62
  %64 = load i8*, i8** %9, align 8
  %65 = load i32, i32* %10, align 4
  %66 = insertvalue { i8*, i32 } undef, i8* %64, 0
  %67 = insertvalue { i8*, i32 } %66, i32 %65, 1
  resume { i8*, i32 } %67

; <label>:68:                                     ; preds = %33, %18
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %9, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %3) #3
  ret %"struct.std::__detail::_Hash_node_base"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosiELb1EEEEERKSaIT_E(%"class.std::allocator.45"*, %"class.std::allocator.29"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.45"*, align 8
  %4 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %3, align 8
  store %"class.std::allocator.29"* %1, %"class.std::allocator.29"** %4, align 8
  %5 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %3, align 8
  %6 = bitcast %"class.std::allocator.45"* %5 to %"class.__gnu_cxx::new_allocator.46"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.46"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.45"* dereferenceable(1), %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.137
  %7 = load i32, i32* @y.138
  %8 = sub i32 %6, -1082350487
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1082350487
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -43904774, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -43904774, label %20
    i32 -1816472038, label %40
    i32 1610734808, label %75
    i32 -674042133, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1816472038, i32 -674042133
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.45"*, align 8
  %42 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %41, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %41, align 8
  %45 = bitcast %"class.std::allocator.45"* %44 to %"class.__gnu_cxx::new_allocator.46"*
  %46 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.46"* %45, %"struct.std::__detail::_Hash_node_base"** %46, i64 %47)
  %48 = load i32, i32* @x.137
  %49 = load i32, i32* @y.138
  %50 = add i32 %48, -279061805
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -279061805
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1610734808, i32 -674042133
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.45"*, align 8
  %78 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %77, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %77, align 8
  %81 = bitcast %"class.std::allocator.45"* %80 to %"class.__gnu_cxx::new_allocator.46"*
  %82 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.46"* %81, %"struct.std::__detail::_Hash_node_base"** %82, i64 %83)
  store i32 -1816472038, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.45"*, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %2, align 8
  %3 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %2, align 8
  %4 = bitcast %"class.std::allocator.45"* %3 to %"class.__gnu_cxx::new_allocator.46"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.__gnu_cxx::new_allocator.46"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.141
  %6 = load i32, i32* @y.142
  %7 = add i32 %5, 317225359
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 317225359
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1711272434, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1711272434, label %19
    i32 1149101763, label %27
    i32 1598198285, label %46
    i32 -1445568465, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1149101763, i32 -1445568465
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %28, align 8
  %30 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %29) #3
  store %"struct.std::__detail::_Hash_node_base"** %30, %"struct.std::__detail::_Hash_node_base"*** %2
  %31 = load i32, i32* @x.141
  %32 = load i32, i32* @y.142
  %33 = add i32 %31, 335444445
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 335444445
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1598198285, i32 -1445568465
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2
  ret %"struct.std::__detail::_Hash_node_base"** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %49, align 8
  %50 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %49, align 8
  %51 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %50) #3
  store i32 1149101763, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.143
  %6 = load i32, i32* @y.144
  %7 = sub i32 %5, 168349618
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 168349618
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1668189529, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1668189529, label %19
    i32 -797569441, label %27
    i32 1547325716, label %59
    i32 -261169542, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -797569441, i32 -261169542
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hash_node_base"** %29 to i8*
  %31 = bitcast i8* %30 to %"struct.std::__detail::_Hash_node_base"**
  store %"struct.std::__detail::_Hash_node_base"** %31, %"struct.std::__detail::_Hash_node_base"*** %2
  %32 = load i32, i32* @x.143
  %33 = load i32, i32* @y.144
  %34 = add i32 %32, 1700105450
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1700105450
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1547325716, i32 -261169542
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %2
  ret %"struct.std::__detail::_Hash_node_base"** %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"** %0, %"struct.std::__detail::_Hash_node_base"*** %62, align 8
  %63 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %62, align 8
  %64 = bitcast %"struct.std::__detail::_Hash_node_base"** %63 to i8*
  %65 = bitcast i8* %64 to %"struct.std::__detail::_Hash_node_base"**
  store i32 -797569441, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.46"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.145
  %5 = load i32, i32* @y.146
  %6 = add i32 %4, 1842459907
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1842459907
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1587038124, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1587038124, label %18
    i32 -1643891024, label %38
    i32 1943388136, label %56
    i32 -987520056, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1643891024, i32 -987520056
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %39, align 8
  %41 = load i32, i32* @x.145
  %42 = load i32, i32* @y.146
  %43 = sub i32 %41, 1284045870
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1284045870
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1943388136, i32 -987520056
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %58, align 8
  store i32 -1643891024, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.46"*, %"struct.std::__detail::_Hash_node_base"**, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.147
  %7 = load i32, i32* @y.148
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1413915082, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1413915082, label %19
    i32 19592660, label %39
    i32 -1065155640, label %60
    i32 392186025, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 19592660, i32 392186025
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  %41 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %40, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %40, align 8
  %44 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %41, align 8
  %45 = bitcast %"struct.std::__detail::_Hash_node_base"** %44 to i8*
  call void @_ZdlPv(i8* %45) #3
  %46 = load i32, i32* @x.147
  %47 = load i32, i32* @y.148
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1065155640, i32 392186025
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  %63 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %64 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %62, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %63, align 8
  store i64 %2, i64* %64, align 8
  %65 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %62, align 8
  %66 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %63, align 8
  %67 = bitcast %"struct.std::__detail::_Hash_node_base"** %66 to i8*
  call void @_ZdlPv(i8* %67) #3
  store i32 19592660, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.__gnu_cxx::new_allocator.46"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.149
  %5 = load i32, i32* @y.150
  %6 = add i32 %4, 1975377321
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1975377321
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 521544983, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 521544983, label %18
    i32 -986371615, label %26
    i32 2102606125, label %56
    i32 101340078, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -986371615, i32 101340078
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %27, align 8
  %29 = load i32, i32* @x.149
  %30 = load i32, i32* @y.150
  %31 = add i32 %29, -1676265551
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1676265551
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 2102606125, i32 101340078
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %58, align 8
  store i32 -986371615, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.28"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.28"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.28"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.28"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.28"*, %"struct.std::__detail::_Hashtable_ebo_helper.28"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.28"* %3 to %"class.std::allocator.29"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEED2Ev(%"class.std::allocator.29"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEED2Ev(%"class.std::allocator.29"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %2, align 8
  %3 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %2, align 8
  %4 = bitcast %"class.std::allocator.29"* %3 to %"class.__gnu_cxx::new_allocator.30"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEED2Ev(%"class.__gnu_cxx::new_allocator.30"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEED2Ev(%"class.__gnu_cxx::new_allocator.30"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev(%"class.std::_Hashtable"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"* %5) #3
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %5)
          to label %6 unwind label %49

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.157
  %8 = load i32, i32* @y.158
  %9 = sub i32 %7, 1127945499
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1127945499
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = xor i1 %15, true
  %18 = xor i1 %16, true
  %19 = xor i1 true, true
  %20 = and i1 %17, true
  %21 = and i1 %15, %19
  %22 = and i1 %18, true
  %23 = and i1 %16, %19
  %24 = or i1 %20, %21
  %25 = or i1 %22, %23
  %26 = xor i1 %24, %25
  %27 = or i1 %17, %18
  %28 = xor i1 %27, true
  %29 = or i1 true, %19
  %30 = and i1 %28, %29
  %31 = or i1 %26, %30
  %32 = or i1 %15, %16
  br i1 %31, label %33, label %56

; <label>:33:                                     ; preds = %6, %56
  %34 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %34) #3
  %35 = load i32, i32* @x.157
  %36 = load i32, i32* @y.158
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %56

; <label>:48:                                     ; preds = %33
  ret void

; <label>:49:                                     ; preds = %1
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %53) #3
  br label %54

; <label>:54:                                     ; preds = %49
  %55 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %55) #9
  unreachable

; <label>:56:                                     ; preds = %33, %6
  %57 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hashtable_alloc"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"* %57) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv(%"class.std::_Hashtable"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = bitcast %"class.std::_Hashtable"* %3 to %"struct.std::__detail::_Hashtable_alloc"*
  %5 = invoke %"struct.std::__detail::_Hash_node.48"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %3)
          to label %6 unwind label %45

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.159
  %8 = load i32, i32* @y.160
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %8, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %48

; <label>:20:                                     ; preds = %6, %48
  %21 = load i32, i32* @x.159
  %22 = load i32, i32* @y.160
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %48

; <label>:34:                                     ; preds = %20
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE19_M_deallocate_nodesEPSD_(%"struct.std::__detail::_Hashtable_alloc"* %4, %"struct.std::__detail::_Hash_node.48"* %5)
          to label %35 unwind label %45

; <label>:35:                                     ; preds = %34
  %36 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %37 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %38 = bitcast %"struct.std::__detail::_Hash_node_base"** %37 to i8*
  %39 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = mul i64 %40, 8
  call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 %41, i32 8, i1 false)
  %42 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 3
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 2
  %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %43, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %44, align 8
  ret void

; <label>:45:                                     ; preds = %34, %1
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  call void @__clang_call_terminate(i8* %47) #9
  unreachable

; <label>:48:                                     ; preds = %20, %6
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %2, align 8
  %3 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm(%"class.std::_Hashtable"* %3, %"struct.std::__detail::_Hash_node_base"** %5, i64 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.3"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE19_M_deallocate_nodesEPSD_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node.48"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %6 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  %7 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %7, %"struct.std::__detail::_Hashtable_alloc"** %3
  %8 = alloca i32
  store i32 -1128832051, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %68
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -1128832051, label %12
    i32 271476147, label %16
    i32 441804455, label %22
    i32 170126376, label %38
    i32 -857844704, label %66
    i32 351102095, label %67
  ]

; <label>:11:                                     ; preds = %9
  br label %68

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  %14 = icmp ne %"struct.std::__detail::_Hash_node.48"* %13, null
  %15 = select i1 %14, i32 271476147, i32 441804455
  store i32 %15, i32* %8
  br label %68

; <label>:16:                                     ; preds = %9
  %17 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  store %"struct.std::__detail::_Hash_node.48"* %17, %"struct.std::__detail::_Hash_node.48"** %6, align 8
  %18 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  %19 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.48"* %18) #3
  store %"struct.std::__detail::_Hash_node.48"* %19, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  %20 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %6, align 8
  %21 = load volatile %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE18_M_deallocate_nodeEPSD_(%"struct.std::__detail::_Hashtable_alloc"* %21, %"struct.std::__detail::_Hash_node.48"* %20)
  store i32 -1128832051, i32* %8
  br label %68

; <label>:22:                                     ; preds = %9
  %23 = load i32, i32* @x.165
  %24 = load i32, i32* @y.166
  %25 = add i32 %23, 47127934
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 47127934
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 170126376, i32 351102095
  store i32 %37, i32* %8
  br label %68

; <label>:38:                                     ; preds = %9
  %39 = load i32, i32* @x.165
  %40 = load i32, i32* @y.166
  %41 = add i32 %39, 918693321
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 918693321
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -857844704, i32 351102095
  store i32 %65, i32* %8
  br label %68

; <label>:66:                                     ; preds = %9
  ret void

; <label>:67:                                     ; preds = %9
  store i32 170126376, i32* %8
  br label %68

; <label>:68:                                     ; preds = %67, %38, %22, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node.48"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.167
  %6 = load i32, i32* @y.168
  %7 = sub i32 %5, -1122293194
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1122293194
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1876270354, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1876270354, label %19
    i32 124095096, label %39
    i32 -1747654040, label %61
    i32 159882140, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 124095096, i32 159882140
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %40, align 8
  %41 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %41, i32 0, i32 2
  %43 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %42, i32 0, i32 0
  %44 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %43, align 8
  %45 = bitcast %"struct.std::__detail::_Hash_node_base"* %44 to %"struct.std::__detail::_Hash_node.48"*
  store %"struct.std::__detail::_Hash_node.48"* %45, %"struct.std::__detail::_Hash_node.48"** %2
  %46 = load i32, i32* @x.167
  %47 = load i32, i32* @y.168
  %48 = sub i32 %46, -856766285
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -856766285
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1747654040, i32 159882140
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %2
  ret %"struct.std::__detail::_Hash_node.48"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %64, align 8
  %65 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %65, i32 0, i32 2
  %67 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %66, i32 0, i32 0
  %68 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %67, align 8
  %69 = bitcast %"struct.std::__detail::_Hash_node_base"* %68 to %"struct.std::__detail::_Hash_node.48"*
  store i32 124095096, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.48"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"* %0, %"struct.std::__detail::_Hash_node.48"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node.48"* %3 to %"struct.std::__detail::_Hash_node_base"*
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node_base"* %6 to %"struct.std::__detail::_Hash_node.48"*
  ret %"struct.std::__detail::_Hash_node.48"* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE18_M_deallocate_nodeEPSD_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node.48"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %6 = alloca %"class.std::allocator.53", align 1
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  %9 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %3, align 8
  %10 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  %11 = call %"struct.std::__detail::_Hash_node.48"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEE10pointer_toERSD_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88) %10) #3
  store %"struct.std::__detail::_Hash_node.48"* %11, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %9)
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEEC2INSt8__detail10_Hash_nodeIS9_Lb1EEEEERKSaIT_E(%"class.std::allocator.53"* %6, %"class.std::allocator"* dereferenceable(1) %12) #3
  %13 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  %14 = bitcast %"struct.std::__detail::_Hash_node.48"* %13 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %15 = call %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.49"* %14) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEE7destroyISA_EEvRSB_PT_(%"class.std::allocator.53"* dereferenceable(1) %6, %"struct.std::pair.56"* %15)
          to label %16 unwind label %51

; <label>:16:                                     ; preds = %2
  %17 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  %18 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %9)
          to label %19 unwind label %51

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* @x.171
  %21 = load i32, i32* @y.172
  %22 = add i32 %20, 1265725762
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1265725762
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %102

; <label>:34:                                     ; preds = %19, %102
  %35 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  %36 = load i32, i32* @x.171
  %37 = load i32, i32* @y.172
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %102

; <label>:49:                                     ; preds = %34
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE10deallocateERSE_PSD_m(%"class.std::allocator"* dereferenceable(1) %18, %"struct.std::__detail::_Hash_node.48"* %35, i64 1)
          to label %50 unwind label %51

; <label>:50:                                     ; preds = %49
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev(%"class.std::allocator.53"* %6) #3
  ret void

; <label>:51:                                     ; preds = %49, %16, %2
  %52 = load i32, i32* @x.171
  %53 = load i32, i32* @y.172
  %54 = sub i32 %52, -1656985440
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1656985440
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %104

; <label>:78:                                     ; preds = %51, %104
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %7, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %8, align 4
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev(%"class.std::allocator.53"* %6) #3
  %82 = load i32, i32* @x.171
  %83 = load i32, i32* @y.172
  %84 = sub i32 %82, 225511338
  %85 = sub i32 %84, 1
  %86 = add i32 %85, 225511338
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %104

; <label>:96:                                     ; preds = %78
  br label %97

; <label>:97:                                     ; preds = %96
  %98 = load i8*, i8** %7, align 8
  %99 = load i32, i32* %8, align 4
  %100 = insertvalue { i8*, i32 } undef, i8* %98, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  resume { i8*, i32 } %101

; <label>:102:                                    ; preds = %34, %19
  %103 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  br label %34

; <label>:104:                                    ; preds = %78, %51
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %7, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %8, align 4
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev(%"class.std::allocator.53"* %6) #3
  br label %78
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEE10pointer_toERSD_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"* %0, %"struct.std::__detail::_Hash_node.48"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node.48"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88) %3) #3
  ret %"struct.std::__detail::_Hash_node.48"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.3"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EE6_S_getERSF_(%"struct.std::__detail::_Hashtable_ebo_helper.3"* dereferenceable(1) %4)
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEEC2INSt8__detail10_Hash_nodeIS9_Lb1EEEEERKSaIT_E(%"class.std::allocator.53"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.177
  %6 = load i32, i32* @y.178
  %7 = sub i32 %5, -706607613
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -706607613
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 739682482, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 739682482, label %19
    i32 -86419459, label %27
    i32 -1272929518, label %59
    i32 1081941207, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -86419459, i32 1081941207
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.53"*, align 8
  %29 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator.53"* %0, %"class.std::allocator.53"** %28, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %29, align 8
  %30 = load %"class.std::allocator.53"*, %"class.std::allocator.53"** %28, align 8
  %31 = bitcast %"class.std::allocator.53"* %30 to %"class.__gnu_cxx::new_allocator.54"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEEC2Ev(%"class.__gnu_cxx::new_allocator.54"* %31) #3
  %32 = load i32, i32* @x.177
  %33 = load i32, i32* @y.178
  %34 = sub i32 %32, -1090378918
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1090378918
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1272929518, i32 1081941207
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::allocator.53"*, align 8
  %62 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator.53"* %0, %"class.std::allocator.53"** %61, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %62, align 8
  %63 = load %"class.std::allocator.53"*, %"class.std::allocator.53"** %61, align 8
  %64 = bitcast %"class.std::allocator.53"* %63 to %"class.__gnu_cxx::new_allocator.54"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEEC2Ev(%"class.__gnu_cxx::new_allocator.54"* %64) #3
  store i32 -86419459, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEE7destroyISA_EEvRSB_PT_(%"class.std::allocator.53"* dereferenceable(1), %"struct.std::pair.56"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.53"*, align 8
  %4 = alloca %"struct.std::pair.56"*, align 8
  store %"class.std::allocator.53"* %0, %"class.std::allocator.53"** %3, align 8
  store %"struct.std::pair.56"* %1, %"struct.std::pair.56"** %4, align 8
  %5 = load %"class.std::allocator.53"*, %"class.std::allocator.53"** %3, align 8
  %6 = bitcast %"class.std::allocator.53"* %5 to %"class.__gnu_cxx::new_allocator.54"*
  %7 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE7destroyISB_EEvPT_(%"class.__gnu_cxx::new_allocator.54"* %6, %"struct.std::pair.56"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.49"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base.49"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base.49"* %0, %"struct.std::__detail::_Hash_node_value_base.49"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base.49"*, %"struct.std::__detail::_Hash_node_value_base.49"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base.49", %"struct.std::__detail::_Hash_node_value_base.49"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.56"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer.50"* %4) #3
  ret %"struct.std::pair.56"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE10deallocateERSE_PSD_m(%"class.std::allocator"* dereferenceable(1), %"struct.std::__detail::_Hash_node.48"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE10deallocateEPSE_m(%"class.__gnu_cxx::new_allocator"* %8, %"struct.std::__detail::_Hash_node.48"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev(%"class.std::allocator.53"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.185
  %5 = load i32, i32* @y.186
  %6 = add i32 %4, 68629940
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 68629940
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1374406912, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1374406912, label %18
    i32 844024936, label %38
    i32 -1021178407, label %69
    i32 1669299335, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 844024936, i32 1669299335
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.53"*, align 8
  store %"class.std::allocator.53"* %0, %"class.std::allocator.53"** %39, align 8
  %40 = load %"class.std::allocator.53"*, %"class.std::allocator.53"** %39, align 8
  %41 = bitcast %"class.std::allocator.53"* %40 to %"class.__gnu_cxx::new_allocator.54"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEED2Ev(%"class.__gnu_cxx::new_allocator.54"* %41) #3
  %42 = load i32, i32* @x.185
  %43 = load i32, i32* @y.186
  %44 = sub i32 %42, -985628491
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -985628491
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1021178407, i32 1669299335
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.53"*, align 8
  store %"class.std::allocator.53"* %0, %"class.std::allocator.53"** %71, align 8
  %72 = load %"class.std::allocator.53"*, %"class.std::allocator.53"** %71, align 8
  %73 = bitcast %"class.std::allocator.53"* %72 to %"class.__gnu_cxx::new_allocator.54"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEED2Ev(%"class.__gnu_cxx::new_allocator.54"* %73) #3
  store i32 844024936, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node.48"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.187
  %6 = load i32, i32* @y.188
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 109287633, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 109287633, label %18
    i32 -1756216842, label %26
    i32 1536135336, label %45
    i32 -1873305619, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1756216842, i32 -1873305619
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"* %0, %"struct.std::__detail::_Hash_node.48"** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %27, align 8
  %29 = call %"struct.std::__detail::_Hash_node.48"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88) %28) #3
  store %"struct.std::__detail::_Hash_node.48"* %29, %"struct.std::__detail::_Hash_node.48"** %2
  %30 = load i32, i32* @x.187
  %31 = load i32, i32* @y.188
  %32 = sub i32 %30, 1464014373
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1464014373
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1536135336, i32 -1873305619
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %2
  ret %"struct.std::__detail::_Hash_node.48"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"* %0, %"struct.std::__detail::_Hash_node.48"** %48, align 8
  %49 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %48, align 8
  %50 = call %"struct.std::__detail::_Hash_node.48"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88) %49) #3
  store i32 -1756216842, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node.48"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.189
  %6 = load i32, i32* @y.190
  %7 = sub i32 %5, 1464053102
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1464053102
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 648239756, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 648239756, label %19
    i32 230644099, label %39
    i32 211288849, label %71
    i32 770454837, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 230644099, i32 770454837
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"* %0, %"struct.std::__detail::_Hash_node.48"** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hash_node.48"* %41 to i8*
  %43 = bitcast i8* %42 to %"struct.std::__detail::_Hash_node.48"*
  store %"struct.std::__detail::_Hash_node.48"* %43, %"struct.std::__detail::_Hash_node.48"** %2
  %44 = load i32, i32* @x.189
  %45 = load i32, i32* @y.190
  %46 = add i32 %44, -1075494744
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1075494744
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 211288849, i32 770454837
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %2
  ret %"struct.std::__detail::_Hash_node.48"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"* %0, %"struct.std::__detail::_Hash_node.48"** %74, align 8
  %75 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %74, align 8
  %76 = bitcast %"struct.std::__detail::_Hash_node.48"* %75 to i8*
  %77 = bitcast i8* %76 to %"struct.std::__detail::_Hash_node.48"*
  store i32 230644099, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EE6_S_getERSF_(%"struct.std::__detail::_Hashtable_ebo_helper.3"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.191
  %6 = load i32, i32* @y.192
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1639047143, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1639047143, label %18
    i32 -1111619088, label %38
    i32 1016570154, label %69
    i32 -903545905, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1111619088, i32 -903545905
  store i32 %37, i32* %14
  br label %75

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.3"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.3"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %39, align 8
  %40 = load %"struct.std::__detail::_Hashtable_ebo_helper.3"*, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %39, align 8
  %41 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.3"* %40 to %"class.std::allocator"*
  store %"class.std::allocator"* %41, %"class.std::allocator"** %2
  %42 = load i32, i32* @x.191
  %43 = load i32, i32* @y.192
  %44 = sub i32 %42, -1244198243
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1244198243
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1016570154, i32 -903545905
  store i32 %68, i32* %14
  br label %75

; <label>:69:                                     ; preds = %15
  %70 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.3"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.3"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %72, align 8
  %73 = load %"struct.std::__detail::_Hashtable_ebo_helper.3"*, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %72, align 8
  %74 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.3"* %73 to %"class.std::allocator"*
  store i32 -1111619088, i32* %14
  br label %75

; <label>:75:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEEC2Ev(%"class.__gnu_cxx::new_allocator.54"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.54"*, align 8
  store %"class.__gnu_cxx::new_allocator.54"* %0, %"class.__gnu_cxx::new_allocator.54"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.54"*, %"class.__gnu_cxx::new_allocator.54"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE7destroyISB_EEvPT_(%"class.__gnu_cxx::new_allocator.54"*, %"struct.std::pair.56"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.54"*, align 8
  %4 = alloca %"struct.std::pair.56"*, align 8
  store %"class.__gnu_cxx::new_allocator.54"* %0, %"class.__gnu_cxx::new_allocator.54"** %3, align 8
  store %"struct.std::pair.56"* %1, %"struct.std::pair.56"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.54"*, %"class.__gnu_cxx::new_allocator.54"** %3, align 8
  %6 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %4, align 8
  call void @_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEED2Ev(%"struct.std::pair.56"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEED2Ev(%"struct.std::pair.56"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.56"*, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %2, align 8
  %3 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %3, i32 0, i32 1
  call void @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EED2Ev(%"class.std::unordered_set"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EED2Ev(%"class.std::unordered_set"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.199
  %5 = load i32, i32* @y.200
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1957583297, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1957583297, label %17
    i32 -1677839020, label %37
    i32 1581200825, label %68
    i32 -1964153890, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1677839020, i32 -1964153890
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::unordered_set"*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %38, align 8
  %39 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %38, align 8
  %40 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %39, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEED2Ev(%"class.std::_Hashtable.4"* %40) #3
  %41 = load i32, i32* @x.199
  %42 = load i32, i32* @y.200
  %43 = add i32 %41, -1645470105
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1645470105
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1581200825, i32 -1964153890
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::unordered_set"*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %70, align 8
  %71 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %70, align 8
  %72 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %71, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEED2Ev(%"class.std::_Hashtable.4"* %72) #3
  store i32 -1677839020, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEED2Ev(%"class.std::_Hashtable.4"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.201
  %3 = load i32, i32* @y.202
  %4 = add i32 %2, 167398148
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 167398148
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %98

; <label>:16:                                     ; preds = %1, %98
  %17 = alloca %"class.std::_Hashtable.4"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %17, align 8
  %20 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %17, align 8
  call void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5clearEv(%"class.std::_Hashtable.4"* %20) #3
  %21 = load i32, i32* @x.201
  %22 = load i32, i32* @y.202
  %23 = add i32 %21, -1048365160
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -1048365160
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %98

; <label>:35:                                     ; preds = %16
  invoke void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable.4"* %20)
          to label %36 unwind label %91

; <label>:36:                                     ; preds = %35
  %37 = load i32, i32* @x.201
  %38 = load i32, i32* @y.202
  %39 = add i32 %37, -1783056990
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1783056990
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %103

; <label>:63:                                     ; preds = %36, %103
  %64 = bitcast %"class.std::_Hashtable.4"* %20 to %"struct.std::__detail::_Hashtable_alloc.13"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.13"* %64) #3
  %65 = load i32, i32* @x.201
  %66 = load i32, i32* @y.202
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %103

; <label>:90:                                     ; preds = %63
  ret void

; <label>:91:                                     ; preds = %35
  %92 = landingpad { i8*, i32 }
          catch i8* null
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %18, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %19, align 4
  %95 = bitcast %"class.std::_Hashtable.4"* %20 to %"struct.std::__detail::_Hashtable_alloc.13"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.13"* %95) #3
  br label %96

; <label>:96:                                     ; preds = %91
  %97 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %97) #9
  unreachable

; <label>:98:                                     ; preds = %16, %1
  %99 = alloca %"class.std::_Hashtable.4"*, align 8
  %100 = alloca i8*
  %101 = alloca i32
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %99, align 8
  %102 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %99, align 8
  call void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5clearEv(%"class.std::_Hashtable.4"* %102) #3
  br label %16

; <label>:103:                                    ; preds = %63, %36
  %104 = bitcast %"class.std::_Hashtable.4"* %20 to %"struct.std::__detail::_Hashtable_alloc.13"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.13"* %104) #3
  br label %63
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5clearEv(%"class.std::_Hashtable.4"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.203
  %3 = load i32, i32* @y.204
  %4 = add i32 %2, -2028496814
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -2028496814
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %114

; <label>:28:                                     ; preds = %1, %114
  %29 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %29, align 8
  %30 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %29, align 8
  %31 = bitcast %"class.std::_Hashtable.4"* %30 to %"struct.std::__detail::_Hashtable_alloc.13"*
  %32 = load i32, i32* @x.203
  %33 = load i32, i32* @y.204
  %34 = sub i32 %32, -1709848971
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1709848971
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %114

; <label>:46:                                     ; preds = %28
  %47 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.4"* %30)
          to label %48 unwind label %111

; <label>:48:                                     ; preds = %46
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE19_M_deallocate_nodesEPS3_(%"struct.std::__detail::_Hashtable_alloc.13"* %31, %"struct.std::__detail::_Hash_node"* %47)
          to label %49 unwind label %111

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* @x.203
  %51 = load i32, i32* @y.204
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %118

; <label>:75:                                     ; preds = %49, %118
  %76 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 0
  %77 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %76, align 8
  %78 = bitcast %"struct.std::__detail::_Hash_node_base"** %77 to i8*
  %79 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = mul i64 %80, 8
  call void @llvm.memset.p0i8.i64(i8* %78, i8 0, i64 %81, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 3
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 2
  %84 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %83, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %84, align 8
  %85 = load i32, i32* @x.203
  %86 = load i32, i32* @y.204
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %118

; <label>:110:                                    ; preds = %75
  ret void

; <label>:111:                                    ; preds = %48, %46
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  call void @__clang_call_terminate(i8* %113) #9
  unreachable

; <label>:114:                                    ; preds = %28, %1
  %115 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %115, align 8
  %116 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %115, align 8
  %117 = bitcast %"class.std::_Hashtable.4"* %116 to %"struct.std::__detail::_Hashtable_alloc.13"*
  br label %28

; <label>:118:                                    ; preds = %75, %49
  %119 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 0
  %120 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %119, align 8
  %121 = bitcast %"struct.std::__detail::_Hash_node_base"** %120 to i8*
  %122 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = shl i64 %123, 8
  %125 = mul i64 %123, 8
  call void @llvm.memset.p0i8.i64(i8* %121, i8 0, i64 %125, i32 8, i1 false)
  %126 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 3
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %30, i32 0, i32 2
  %128 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %127, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %128, align 8
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable.4"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %2, align 8
  %3 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  call void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_deallocate_bucketsEPPNS2_15_Hash_node_baseEm(%"class.std::_Hashtable.4"* %3, %"struct.std::__detail::_Hash_node_base"** %5, i64 %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEED2Ev(%"struct.std::__detail::_Hashtable_alloc.13"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_alloc.13"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.14"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.14"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE19_M_deallocate_nodesEPS3_(%"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*
  %5 = alloca %"struct.std::__detail::_Hash_node"**
  %6 = alloca %"struct.std::__detail::_Hash_node"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.209
  %10 = load i32, i32* @y.210
  %11 = sub i32 %9, -919699935
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -919699935
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1345727484, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %122
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1345727484, label %23
    i32 -1566236633, label %31
    i32 -20261131, label %63
    i32 -2058658090, label %64
    i32 -1841935341, label %79
    i32 -900843282, label %98
    i32 868388612, label %101
    i32 1474895053, label %112
    i32 -2111674459, label %113
    i32 1609849160, label %118
  ]

; <label>:22:                                     ; preds = %20
  br label %122

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1566236633, i32 -2111674459
  store i32 %30, i32* %19
  br label %122

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %33 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %33, %"struct.std::__detail::_Hash_node"*** %6
  %34 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %34, %"struct.std::__detail::_Hash_node"*** %5
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %32, align 8
  %35 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %35, align 8
  %36 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %32, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %36, %"struct.std::__detail::_Hashtable_alloc.13"** %4
  %37 = load i32, i32* @x.209
  %38 = load i32, i32* @y.210
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -20261131, i32 -2111674459
  store i32 %62, i32* %19
  br label %122

; <label>:63:                                     ; preds = %20
  store i32 -2058658090, i32* %19
  br label %122

; <label>:64:                                     ; preds = %20
  %65 = load i32, i32* @x.209
  %66 = load i32, i32* @y.210
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -1841935341, i32 1609849160
  store i32 %78, i32* %19
  br label %122

; <label>:79:                                     ; preds = %20
  %80 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %81 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %80, align 8
  %82 = icmp ne %"struct.std::__detail::_Hash_node"* %81, null
  store i1 %82, i1* %3
  %83 = load i32, i32* @x.209
  %84 = load i32, i32* @y.210
  %85 = sub i32 %83, -722068872
  %86 = sub i32 %85, 1
  %87 = add i32 %86, -722068872
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 -900843282, i32 1609849160
  store i32 %97, i32* %19
  br label %122

; <label>:98:                                     ; preds = %20
  %99 = load volatile i1, i1* %3
  %100 = select i1 %99, i32 868388612, i32 1474895053
  store i32 %100, i32* %19
  br label %122

; <label>:101:                                    ; preds = %20
  %102 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %103 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %102, align 8
  %104 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %5
  store %"struct.std::__detail::_Hash_node"* %103, %"struct.std::__detail::_Hash_node"** %104, align 8
  %105 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %106 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %105, align 8
  %107 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %106) #3
  %108 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  store %"struct.std::__detail::_Hash_node"* %107, %"struct.std::__detail::_Hash_node"** %108, align 8
  %109 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %5
  %110 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %109, align 8
  %111 = load volatile %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %4
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE18_M_deallocate_nodeEPS3_(%"struct.std::__detail::_Hashtable_alloc.13"* %111, %"struct.std::__detail::_Hash_node"* %110)
  store i32 -2058658090, i32* %19
  br label %122

; <label>:112:                                    ; preds = %20
  ret void

; <label>:113:                                    ; preds = %20
  %114 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %115 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %116 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %114, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %115, align 8
  %117 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %114, align 8
  store i32 -1566236633, i32* %19
  br label %122

; <label>:118:                                    ; preds = %20
  %119 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %120 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %119, align 8
  %121 = icmp ne %"struct.std::__detail::_Hash_node"* %120, null
  store i32 -1841935341, i32* %19
  br label %122

; <label>:122:                                    ; preds = %118, %113, %101, %98, %79, %64, %63, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.4"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %2, align 8
  %3 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 2
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node_base"* %6 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.213
  %6 = load i32, i32* @y.214
  %7 = add i32 %5, -27352105
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -27352105
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 364787885, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 364787885, label %19
    i32 1411321857, label %39
    i32 1414465133, label %61
    i32 1201732208, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1411321857, i32 1201732208
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hash_node"* %41 to %"struct.std::__detail::_Hash_node_base"*
  %43 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %42, i32 0, i32 0
  %44 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %43, align 8
  %45 = bitcast %"struct.std::__detail::_Hash_node_base"* %44 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %45, %"struct.std::__detail::_Hash_node"** %2
  %46 = load i32, i32* @x.213
  %47 = load i32, i32* @y.214
  %48 = sub i32 %46, -1340394397
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1340394397
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1414465133, i32 1201732208
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %64, align 8
  %65 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %64, align 8
  %66 = bitcast %"struct.std::__detail::_Hash_node"* %65 to %"struct.std::__detail::_Hash_node_base"*
  %67 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %66, i32 0, i32 0
  %68 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %67, align 8
  %69 = bitcast %"struct.std::__detail::_Hash_node_base"* %68 to %"struct.std::__detail::_Hash_node"*
  store i32 1411321857, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE18_M_deallocate_nodeEPS3_(%"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca %"class.std::allocator.32", align 1
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %9 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %3, align 8
  %10 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %11 = call %"struct.std::__detail::_Hash_node"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeI3PosLb1EEEE10pointer_toERS3_(%"struct.std::__detail::_Hash_node"* dereferenceable(32) %10) #3
  store %"struct.std::__detail::_Hash_node"* %11, %"struct.std::__detail::_Hash_node"** %5, align 8
  %12 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %9)
  call void @_ZNSaI3PosEC2INSt8__detail10_Hash_nodeIS_Lb1EEEEERKSaIT_E(%"class.std::allocator.32"* %6, %"class.std::allocator.15"* dereferenceable(1) %12) #3
  %13 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %14 = bitcast %"struct.std::__detail::_Hash_node"* %13 to %"struct.std::__detail::_Hash_node_value_base"*
  %15 = call %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %14) #3
  invoke void @_ZNSt16allocator_traitsISaI3PosEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.32"* dereferenceable(1) %6, %class.Pos* %15)
          to label %16 unwind label %91

; <label>:16:                                     ; preds = %2
  %17 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  %18 = invoke dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %9)
          to label %19 unwind label %91

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* @x.215
  %21 = load i32, i32* @y.216
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %100

; <label>:33:                                     ; preds = %19, %100
  %34 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %35 = load i32, i32* @x.215
  %36 = load i32, i32* @y.216
  %37 = add i32 %35, -929926553
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -929926553
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %100

; <label>:49:                                     ; preds = %33
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE10deallocateERS4_PS3_m(%"class.std::allocator.15"* dereferenceable(1) %18, %"struct.std::__detail::_Hash_node"* %34, i64 1)
          to label %50 unwind label %91

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.215
  %52 = load i32, i32* @y.216
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %102

; <label>:64:                                     ; preds = %50, %102
  call void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"* %6) #3
  %65 = load i32, i32* @x.215
  %66 = load i32, i32* @y.216
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %102

; <label>:90:                                     ; preds = %64
  ret void

; <label>:91:                                     ; preds = %49, %16, %2
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %7, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %8, align 4
  call void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"* %6) #3
  br label %95

; <label>:95:                                     ; preds = %91
  %96 = load i8*, i8** %7, align 8
  %97 = load i32, i32* %8, align 4
  %98 = insertvalue { i8*, i32 } undef, i8* %96, 0
  %99 = insertvalue { i8*, i32 } %98, i32 %97, 1
  resume { i8*, i32 } %99

; <label>:100:                                    ; preds = %33, %19
  %101 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  br label %33

; <label>:102:                                    ; preds = %64, %50
  call void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"* %6) #3
  br label %64
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeI3PosLb1EEEE10pointer_toERS3_(%"struct.std::__detail::_Hash_node"* dereferenceable(32)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = call %"struct.std::__detail::_Hash_node"* @_ZSt9addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_(%"struct.std::__detail::_Hash_node"* dereferenceable(32) %3) #3
  ret %"struct.std::__detail::_Hash_node"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.219
  %6 = load i32, i32* @y.220
  %7 = sub i32 %5, -1710994792
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1710994792
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -531703294, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -531703294, label %19
    i32 1760659433, label %39
    i32 -349522772, label %70
    i32 912988594, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1760659433, i32 912988594
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %40, align 8
  %41 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hashtable_alloc.13"* %41 to %"struct.std::__detail::_Hashtable_ebo_helper.14"*
  %43 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EE6_S_getERS5_(%"struct.std::__detail::_Hashtable_ebo_helper.14"* dereferenceable(1) %42)
  store %"class.std::allocator.15"* %43, %"class.std::allocator.15"** %2
  %44 = load i32, i32* @x.219
  %45 = load i32, i32* @y.220
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -349522772, i32 912988594
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::allocator.15"*, %"class.std::allocator.15"** %2
  ret %"class.std::allocator.15"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %73, align 8
  %74 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %73, align 8
  %75 = bitcast %"struct.std::__detail::_Hashtable_alloc.13"* %74 to %"struct.std::__detail::_Hashtable_ebo_helper.14"*
  %76 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EE6_S_getERS5_(%"struct.std::__detail::_Hashtable_ebo_helper.14"* dereferenceable(1) %75)
  store i32 1760659433, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3PosEC2INSt8__detail10_Hash_nodeIS_Lb1EEEEERKSaIT_E(%"class.std::allocator.32"*, %"class.std::allocator.15"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.32"*, align 8
  %4 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %3, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %4, align 8
  %5 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %3, align 8
  %6 = bitcast %"class.std::allocator.32"* %5 to %"class.__gnu_cxx::new_allocator.33"*
  call void @_ZN9__gnu_cxx13new_allocatorI3PosEC2Ev(%"class.__gnu_cxx::new_allocator.33"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3PosEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.32"* dereferenceable(1), %class.Pos*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.32"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %3, align 8
  %6 = bitcast %"class.std::allocator.32"* %5 to %"class.__gnu_cxx::new_allocator.33"*
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3PosE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.33"* %6, %class.Pos* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %3, i32 0, i32 1
  %5 = call %class.Pos* @_ZN9__gnu_cxx16__aligned_bufferI3PosE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"* %4) #3
  ret %class.Pos* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE10deallocateERS4_PS3_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::__detail::_Hash_node"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.227
  %7 = load i32, i32* @y.228
  %8 = add i32 %6, -457292964
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -457292964
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 885755507, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 885755507, label %20
    i32 1320383436, label %28
    i32 43575453, label %63
    i32 -732239850, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1320383436, i32 -732239850
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.15"*, align 8
  %30 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %29, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %29, align 8
  %33 = bitcast %"class.std::allocator.15"* %32 to %"class.__gnu_cxx::new_allocator.16"*
  %34 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.16"* %33, %"struct.std::__detail::_Hash_node"* %34, i64 %35)
  %36 = load i32, i32* @x.227
  %37 = load i32, i32* @y.228
  %38 = add i32 %36, -1315020501
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1315020501
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 43575453, i32 -732239850
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.15"*, align 8
  %66 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %65, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %65, align 8
  %69 = bitcast %"class.std::allocator.15"* %68 to %"class.__gnu_cxx::new_allocator.16"*
  %70 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.16"* %69, %"struct.std::__detail::_Hash_node"* %70, i64 %71)
  store i32 1320383436, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %2, align 8
  %3 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %2, align 8
  %4 = bitcast %"class.std::allocator.32"* %3 to %"class.__gnu_cxx::new_allocator.33"*
  call void @_ZN9__gnu_cxx13new_allocatorI3PosED2Ev(%"class.__gnu_cxx::new_allocator.33"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZSt9addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_(%"struct.std::__detail::_Hash_node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.231
  %6 = load i32, i32* @y.232
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1191262395, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1191262395, label %18
    i32 -1024309657, label %26
    i32 -557398878, label %56
    i32 -1988626092, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1024309657, i32 -1988626092
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %27, align 8
  %29 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_(%"struct.std::__detail::_Hash_node"* dereferenceable(32) %28) #3
  store %"struct.std::__detail::_Hash_node"* %29, %"struct.std::__detail::_Hash_node"** %2
  %30 = load i32, i32* @x.231
  %31 = load i32, i32* @y.232
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -557398878, i32 -1988626092
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %59, align 8
  %60 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %59, align 8
  %61 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_(%"struct.std::__detail::_Hash_node"* dereferenceable(32) %60) #3
  store i32 -1024309657, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_(%"struct.std::__detail::_Hash_node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::__detail::_Hash_node"*
  ret %"struct.std::__detail::_Hash_node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EE6_S_getERS5_(%"struct.std::__detail::_Hashtable_ebo_helper.14"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.14"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.14"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.14"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.14"*, %"struct.std::__detail::_Hashtable_ebo_helper.14"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.14"* %3 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3PosEC2Ev(%"class.__gnu_cxx::new_allocator.33"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3PosE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.33"*, %class.Pos*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %3, align 8
  %6 = load %class.Pos*, %class.Pos** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Pos* @_ZN9__gnu_cxx16__aligned_bufferI3PosE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_bufferI3PosE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"* %3) #3
  %5 = bitcast i8* %4 to %class.Pos*
  ret %class.Pos* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_bufferI3PosE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_buffer"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer"* %0, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_buffer"*, %"struct.__gnu_cxx::__aligned_buffer"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer", %"struct.__gnu_cxx::__aligned_buffer"* %3, i32 0, i32 0
  %5 = bitcast %"union.std::aligned_storage<16, 8>::type"* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::__detail::_Hash_node"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.245
  %7 = load i32, i32* @y.246
  %8 = sub i32 %6, 866637608
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 866637608
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1132887507, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %57
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1132887507, label %20
    i32 374161251, label %28
    i32 613651180, label %49
    i32 -1145011470, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %57

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 374161251, i32 -1145011470
  store i32 %27, i32* %16
  br label %57

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %30 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  %33 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %30, align 8
  %34 = bitcast %"struct.std::__detail::_Hash_node"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.245
  %36 = load i32, i32* @y.246
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 613651180, i32 -1145011470
  store i32 %48, i32* %16
  br label %57

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %52 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %53 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %51, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %52, align 8
  store i64 %2, i64* %53, align 8
  %54 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %51, align 8
  %55 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %52, align 8
  %56 = bitcast %"struct.std::__detail::_Hash_node"* %55 to i8*
  call void @_ZdlPv(i8* %56) #3
  store i32 374161251, i32* %16
  br label %57

; <label>:57:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3PosED2Ev(%"class.__gnu_cxx::new_allocator.33"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.247
  %5 = load i32, i32* @y.248
  %6 = sub i32 %4, -897179598
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -897179598
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -432242449, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -432242449, label %18
    i32 1724836468, label %38
    i32 -328888374, label %56
    i32 -1445071981, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1724836468, i32 -1445071981
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %39, align 8
  %41 = load i32, i32* @x.247
  %42 = load i32, i32* @y.248
  %43 = sub i32 %41, 2096327764
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 2096327764
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -328888374, i32 -1445071981
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %58, align 8
  store i32 1724836468, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_deallocate_bucketsEPPNS2_15_Hash_node_baseEm(%"class.std::_Hashtable.4"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**
  %5 = alloca %"class.std::_Hashtable.4"*
  %6 = alloca %"class.std::_Hashtable.4"*, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca i64, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %6, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %6, align 8
  store %"class.std::_Hashtable.4"* %9, %"class.std::_Hashtable.4"** %5
  %10 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store %"struct.std::__detail::_Hash_node_base"** %10, %"struct.std::__detail::_Hash_node_base"*** %4
  %11 = alloca i32
  store i32 2017554337, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %64
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 2017554337, label %15
    i32 -767175120, label %20
    i32 -1992844008, label %21
    i32 902459735, label %37
    i32 114217863, label %57
    i32 -1115077726, label %58
    i32 -1853434321, label %59
  ]

; <label>:14:                                     ; preds = %12
  br label %64

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %17 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4
  %18 = call zeroext i1 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_uses_single_bucketEPPNS2_15_Hash_node_baseE(%"class.std::_Hashtable.4"* %16, %"struct.std::__detail::_Hash_node_base"** %17)
  %19 = select i1 %18, i32 -767175120, i32 -1992844008
  store i32 %19, i32* %11
  br label %64

; <label>:20:                                     ; preds = %12
  store i32 -1115077726, i32* %11
  br label %64

; <label>:21:                                     ; preds = %12
  %22 = load i32, i32* @x.249
  %23 = load i32, i32* @y.250
  %24 = add i32 %22, 1517262347
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1517262347
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 902459735, i32 -1853434321
  store i32 %36, i32* %11
  br label %64

; <label>:37:                                     ; preds = %12
  %38 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %39 = bitcast %"class.std::_Hashtable.4"* %38 to %"struct.std::__detail::_Hashtable_alloc.13"*
  %40 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %41 = load i64, i64* %8, align 8
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc.13"* %39, %"struct.std::__detail::_Hash_node_base"** %40, i64 %41)
  %42 = load i32, i32* @x.249
  %43 = load i32, i32* @y.250
  %44 = sub i32 %42, 1519248076
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1519248076
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 114217863, i32 -1853434321
  store i32 %56, i32* %11
  br label %64

; <label>:57:                                     ; preds = %12
  store i32 -1115077726, i32* %11
  br label %64

; <label>:58:                                     ; preds = %12
  ret void

; <label>:59:                                     ; preds = %12
  %60 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %61 = bitcast %"class.std::_Hashtable.4"* %60 to %"struct.std::__detail::_Hashtable_alloc.13"*
  %62 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %63 = load i64, i64* %8, align 8
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc.13"* %61, %"struct.std::__detail::_Hash_node_base"** %62, i64 %63)
  store i32 902459735, i32* %11
  br label %64

; <label>:64:                                     ; preds = %59, %57, %37, %21, %20, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_uses_single_bucketEPPNS2_15_Hash_node_baseE(%"class.std::_Hashtable.4"*, %"struct.std::__detail::_Hash_node_base"**) #5 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable.4"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %3, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %5 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %3, align 8
  %6 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %7 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %5, i32 0, i32 5
  %8 = icmp eq %"struct.std::__detail::_Hash_node_base"** %6, %7
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"class.std::allocator.45", align 1
  %9 = alloca i8*
  %10 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %4, align 8
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %13 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %12) #3
  store %"struct.std::__detail::_Hash_node_base"** %13, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %14 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %11)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeI3PosLb1EEEEERKSaIT_E(%"class.std::allocator.45"* %8, %"class.std::allocator.15"* dereferenceable(1) %14) #3
  %15 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %16 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.45"* dereferenceable(1) %8, %"struct.std::__detail::_Hash_node_base"** %15, i64 %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %3
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  ret void

; <label>:18:                                     ; preds = %3
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  br label %22

; <label>:22:                                     ; preds = %18
  %23 = load i32, i32* @x.253
  %24 = load i32, i32* @y.254
  %25 = add i32 %23, 2130684092
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 2130684092
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %57

; <label>:37:                                     ; preds = %22, %57
  %38 = load i8*, i8** %9, align 8
  %39 = load i32, i32* %10, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.253
  %43 = load i32, i32* @y.254
  %44 = add i32 %42, -1528483582
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1528483582
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %57

; <label>:56:                                     ; preds = %37
  resume { i8*, i32 } %41

; <label>:57:                                     ; preds = %37, %22
  %58 = load i8*, i8** %9, align 8
  %59 = load i32, i32* %10, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeI3PosLb1EEEEERKSaIT_E(%"class.std::allocator.45"*, %"class.std::allocator.15"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.45"*, align 8
  %4 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %3, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %4, align 8
  %5 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %3, align 8
  %6 = bitcast %"class.std::allocator.45"* %5 to %"class.__gnu_cxx::new_allocator.46"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.46"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.14"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.14"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.14"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.14"*, %"struct.std::__detail::_Hashtable_ebo_helper.14"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.14"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaINSt8__detail10_Hash_nodeI3PosLb1EEEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeI3PosLb1EEEED2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.261
  %5 = load i32, i32* @y.262
  %6 = add i32 %4, -422198884
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -422198884
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -25045802, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -25045802, label %18
    i32 -1333094289, label %38
    i32 2015992824, label %68
    i32 1716922449, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1333094289, i32 1716922449
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %41 = load i32, i32* @x.261
  %42 = load i32, i32* @y.262
  %43 = add i32 %41, -277752256
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -277752256
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 2015992824, i32 1716922449
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %70, align 8
  store i32 -1333094289, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.56"* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_buffer.50"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.56"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.263
  %6 = load i32, i32* @y.264
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2009899848, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2009899848, label %18
    i32 1192910333, label %38
    i32 -1729708972, label %58
    i32 -1812272223, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1192910333, i32 -1812272223
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.__gnu_cxx::__aligned_buffer.50"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer.50"* %0, %"struct.__gnu_cxx::__aligned_buffer.50"** %39, align 8
  %40 = load %"struct.__gnu_cxx::__aligned_buffer.50"*, %"struct.__gnu_cxx::__aligned_buffer.50"** %39, align 8
  %41 = call i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer.50"* %40) #3
  %42 = bitcast i8* %41 to %"struct.std::pair.56"*
  store %"struct.std::pair.56"* %42, %"struct.std::pair.56"** %2
  %43 = load i32, i32* @x.263
  %44 = load i32, i32* @y.264
  %45 = sub i32 %43, 1179499716
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1179499716
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1729708972, i32 -1812272223
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.std::pair.56"*, %"struct.std::pair.56"** %2
  ret %"struct.std::pair.56"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.__gnu_cxx::__aligned_buffer.50"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer.50"* %0, %"struct.__gnu_cxx::__aligned_buffer.50"** %61, align 8
  %62 = load %"struct.__gnu_cxx::__aligned_buffer.50"*, %"struct.__gnu_cxx::__aligned_buffer.50"** %61, align 8
  %63 = call i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer.50"* %62) #3
  %64 = bitcast i8* %63 to %"struct.std::pair.56"*
  store i32 1192910333, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_bufferISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_buffer.50"*) #5 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.265
  %6 = load i32, i32* @y.266
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1415651689, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1415651689, label %18
    i32 -573716848, label %38
    i32 -199969207, label %70
    i32 -1023922548, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -573716848, i32 -1023922548
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.__gnu_cxx::__aligned_buffer.50"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer.50"* %0, %"struct.__gnu_cxx::__aligned_buffer.50"** %39, align 8
  %40 = load %"struct.__gnu_cxx::__aligned_buffer.50"*, %"struct.__gnu_cxx::__aligned_buffer.50"** %39, align 8
  %41 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer.50", %"struct.__gnu_cxx::__aligned_buffer.50"* %40, i32 0, i32 0
  %42 = bitcast %"union.std::aligned_storage<72, 8>::type"* %41 to i8*
  store i8* %42, i8** %2
  %43 = load i32, i32* @x.265
  %44 = load i32, i32* @y.266
  %45 = add i32 %43, -1433014258
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1433014258
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -199969207, i32 -1023922548
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile i8*, i8** %2
  ret i8* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.__gnu_cxx::__aligned_buffer.50"*, align 8
  store %"struct.__gnu_cxx::__aligned_buffer.50"* %0, %"struct.__gnu_cxx::__aligned_buffer.50"** %73, align 8
  %74 = load %"struct.__gnu_cxx::__aligned_buffer.50"*, %"struct.__gnu_cxx::__aligned_buffer.50"** %73, align 8
  %75 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_buffer.50", %"struct.__gnu_cxx::__aligned_buffer.50"* %74, i32 0, i32 0
  %76 = bitcast %"union.std::aligned_storage<72, 8>::type"* %75 to i8*
  store i32 -573716848, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE10deallocateEPSE_m(%"class.__gnu_cxx::new_allocator"*, %"struct.std::__detail::_Hash_node.48"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.267
  %7 = load i32, i32* @y.268
  %8 = sub i32 %6, 2070085763
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2070085763
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1540359940, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1540359940, label %20
    i32 1103077916, label %40
    i32 -131870485, label %74
    i32 -1954117872, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1103077916, i32 -1954117872
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %42 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %41, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %41, align 8
  %45 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %42, align 8
  %46 = bitcast %"struct.std::__detail::_Hash_node.48"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.267
  %48 = load i32, i32* @y.268
  %49 = add i32 %47, 2011162176
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 2011162176
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -131870485, i32 -1954117872
  store i32 %73, i32* %16
  br label %82

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %77 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %78 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %76, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %76, align 8
  %80 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %77, align 8
  %81 = bitcast %"struct.std::__detail::_Hash_node.48"* %80 to i8*
  call void @_ZdlPv(i8* %81) #3
  store i32 1103077916, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEED2Ev(%"class.__gnu_cxx::new_allocator.54"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.54"*, align 8
  store %"class.__gnu_cxx::new_allocator.54"* %0, %"class.__gnu_cxx::new_allocator.54"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.54"*, %"class.__gnu_cxx::new_allocator.54"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**
  %5 = alloca %"class.std::_Hashtable"*
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  store %"class.std::_Hashtable"* %9, %"class.std::_Hashtable"** %5
  %10 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  store %"struct.std::__detail::_Hash_node_base"** %10, %"struct.std::__detail::_Hash_node_base"*** %4
  %11 = alloca i32
  store i32 -1394919829, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %130
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1394919829, label %15
    i32 -2017302521, label %20
    i32 315985943, label %36
    i32 1066128837, label %63
    i32 -1783695948, label %64
    i32 -1675691364, label %91
    i32 619576857, label %122
    i32 -993601779, label %123
    i32 1257452907, label %124
    i32 -1764222323, label %125
  ]

; <label>:14:                                     ; preds = %12
  br label %130

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %17 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4
  %18 = call zeroext i1 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE(%"class.std::_Hashtable"* %16, %"struct.std::__detail::_Hash_node_base"** %17)
  %19 = select i1 %18, i32 -2017302521, i32 -1783695948
  store i32 %19, i32* %11
  br label %130

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* @x.271
  %22 = load i32, i32* @y.272
  %23 = sub i32 %21, -1110160980
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -1110160980
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 315985943, i32 1257452907
  store i32 %35, i32* %11
  br label %130

; <label>:36:                                     ; preds = %12
  %37 = load i32, i32* @x.271
  %38 = load i32, i32* @y.272
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1066128837, i32 1257452907
  store i32 %62, i32* %11
  br label %130

; <label>:63:                                     ; preds = %12
  store i32 -993601779, i32* %11
  br label %130

; <label>:64:                                     ; preds = %12
  %65 = load i32, i32* @x.271
  %66 = load i32, i32* @y.272
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 -1675691364, i32 -1764222323
  store i32 %90, i32* %11
  br label %130

; <label>:91:                                     ; preds = %12
  %92 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %93 = bitcast %"class.std::_Hashtable"* %92 to %"struct.std::__detail::_Hashtable_alloc"*
  %94 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %95 = load i64, i64* %8, align 8
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc"* %93, %"struct.std::__detail::_Hash_node_base"** %94, i64 %95)
  %96 = load i32, i32* @x.271
  %97 = load i32, i32* @y.272
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 619576857, i32 -1764222323
  store i32 %121, i32* %11
  br label %130

; <label>:122:                                    ; preds = %12
  store i32 -993601779, i32* %11
  br label %130

; <label>:123:                                    ; preds = %12
  ret void

; <label>:124:                                    ; preds = %12
  store i32 315985943, i32* %11
  br label %130

; <label>:125:                                    ; preds = %12
  %126 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %5
  %127 = bitcast %"class.std::_Hashtable"* %126 to %"struct.std::__detail::_Hashtable_alloc"*
  %128 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %129 = load i64, i64* %8, align 8
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc"* %127, %"struct.std::__detail::_Hash_node_base"** %128, i64 %129)
  store i32 -1675691364, i32* %11
  br label %130

; <label>:130:                                    ; preds = %125, %124, %122, %91, %64, %63, %36, %20, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node_base"**) #5 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %6 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4, align 8
  %7 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %5, i32 0, i32 5
  %8 = icmp eq %"struct.std::__detail::_Hash_node_base"** %6, %7
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hash_node_base"**, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %8 = alloca %"class.std::allocator.45", align 1
  %9 = alloca i8*
  %10 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  store %"struct.std::__detail::_Hash_node_base"** %1, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %4, align 8
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %13 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %12) #3
  store %"struct.std::__detail::_Hash_node_base"** %13, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %14 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %11)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS6_St4hashIS6_ESt8equal_toIS6_ESaIS6_EEELb1EEEEERKSaIT_E(%"class.std::allocator.45"* %8, %"class.std::allocator"* dereferenceable(1) %14) #3
  %15 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %7, align 8
  %16 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m(%"class.std::allocator.45"* dereferenceable(1) %8, %"struct.std::__detail::_Hash_node_base"** %15, i64 %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %3
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  ret void

; <label>:18:                                     ; preds = %3
  %19 = load i32, i32* @x.275
  %20 = load i32, i32* @y.276
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %56

; <label>:32:                                     ; preds = %18, %56
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %9, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  %36 = load i32, i32* @x.275
  %37 = load i32, i32* @y.276
  %38 = add i32 %36, 869863485
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 869863485
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %56

; <label>:50:                                     ; preds = %32
  br label %51

; <label>:51:                                     ; preds = %50
  %52 = load i8*, i8** %9, align 8
  %53 = load i32, i32* %10, align 4
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  resume { i8*, i32 } %55

; <label>:56:                                     ; preds = %32, %18
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %9, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %10, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %8) #3
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS6_St4hashIS6_ESt8equal_toIS6_ESaIS6_EEELb1EEEEERKSaIT_E(%"class.std::allocator.45"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.45"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %3, align 8
  %6 = bitcast %"class.std::allocator.45"* %5 to %"class.__gnu_cxx::new_allocator.46"*
  call void @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev(%"class.__gnu_cxx::new_allocator.46"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEELb1EED2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.3"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.3"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.3"*, %"struct.std::__detail::_Hashtable_ebo_helper.3"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.3"* %3 to %"class.std::allocator"*
  call void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"class.std::unordered_set"* @_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEESaISB_ENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS3_(%"struct.std::__detail::_Map_base"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::unordered_set"*
  %4 = alloca i1
  %5 = alloca %"struct.std::__detail::_Node_iterator.58"*
  %6 = alloca %"class.std::tuple.57"*
  %7 = alloca %"class.std::tuple"*
  %8 = alloca %"struct.std::__detail::_Hash_node.48"**
  %9 = alloca i64*
  %10 = alloca i64*
  %11 = alloca %"class.std::_Hashtable"**
  %12 = alloca %class.Pos**
  %13 = alloca %"class.std::unordered_set"**
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.285
  %17 = load i32, i32* @y.286
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %15
  %24 = icmp slt i32 %17, 10
  store i1 %24, i1* %14
  %25 = alloca i32
  store i32 224188576, i32* %25
  br label %26

; <label>:26:                                     ; preds = %2, %273
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 224188576, label %29
    i32 -1108587264, label %37
    i32 -1049940853, label %107
    i32 1264161277, label %110
    i32 -1301908654, label %137
    i32 -407455500, label %153
    i32 -207210312, label %175
    i32 2027571276, label %176
    i32 1499585207, label %204
    i32 1143800146, label %233
    i32 -414241577, label %235
    i32 488903322, label %263
    i32 -2097101177, label %270
  ]

; <label>:28:                                     ; preds = %26
  br label %273

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %15
  %31 = load volatile i1, i1* %14
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -1108587264, i32 -414241577
  store i32 %36, i32* %25
  br label %273

; <label>:37:                                     ; preds = %26
  %38 = alloca %"class.std::unordered_set"*, align 8
  store %"class.std::unordered_set"** %38, %"class.std::unordered_set"*** %13
  %39 = alloca %"struct.std::__detail::_Map_base"*, align 8
  %40 = alloca %class.Pos*, align 8
  store %class.Pos** %40, %class.Pos*** %12
  %41 = alloca %"class.std::_Hashtable"*, align 8
  store %"class.std::_Hashtable"** %41, %"class.std::_Hashtable"*** %11
  %42 = alloca i64, align 8
  store i64* %42, i64** %10
  %43 = alloca i64, align 8
  store i64* %43, i64** %9
  %44 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"** %44, %"struct.std::__detail::_Hash_node.48"*** %8
  %45 = alloca %"class.std::tuple", align 8
  store %"class.std::tuple"* %45, %"class.std::tuple"** %7
  %46 = alloca %"class.std::tuple.57", align 1
  store %"class.std::tuple.57"* %46, %"class.std::tuple.57"** %6
  %47 = alloca %"struct.std::__detail::_Node_iterator.58", align 8
  store %"struct.std::__detail::_Node_iterator.58"* %47, %"struct.std::__detail::_Node_iterator.58"** %5
  store %"struct.std::__detail::_Map_base"* %0, %"struct.std::__detail::_Map_base"** %39, align 8
  %48 = load volatile %class.Pos**, %class.Pos*** %12
  store %class.Pos* %1, %class.Pos** %48, align 8
  %49 = load %"struct.std::__detail::_Map_base"*, %"struct.std::__detail::_Map_base"** %39, align 8
  %50 = bitcast %"struct.std::__detail::_Map_base"* %49 to %"class.std::_Hashtable"*
  %51 = load volatile %"class.std::_Hashtable"**, %"class.std::_Hashtable"*** %11
  store %"class.std::_Hashtable"* %50, %"class.std::_Hashtable"** %51, align 8
  %52 = load volatile %"class.std::_Hashtable"**, %"class.std::_Hashtable"*** %11
  %53 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %52, align 8
  %54 = bitcast %"class.std::_Hashtable"* %53 to %"struct.std::__detail::_Hash_code_base"*
  %55 = load volatile %class.Pos**, %class.Pos*** %12
  %56 = load %class.Pos*, %class.Pos** %55, align 8
  %57 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base"* %54, %class.Pos* dereferenceable(16) %56)
  %58 = load volatile i64*, i64** %10
  store i64 %57, i64* %58, align 8
  %59 = load volatile %"class.std::_Hashtable"**, %"class.std::_Hashtable"*** %11
  %60 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %59, align 8
  %61 = load volatile %class.Pos**, %class.Pos*** %12
  %62 = load %class.Pos*, %class.Pos** %61, align 8
  %63 = load volatile i64*, i64** %10
  %64 = load i64, i64* %63, align 8
  %65 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable"* %60, %class.Pos* dereferenceable(16) %62, i64 %64)
  %66 = load volatile i64*, i64** %9
  store i64 %65, i64* %66, align 8
  %67 = load volatile %"class.std::_Hashtable"**, %"class.std::_Hashtable"*** %11
  %68 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %67, align 8
  %69 = load volatile i64*, i64** %9
  %70 = load i64, i64* %69, align 8
  %71 = load volatile %class.Pos**, %class.Pos*** %12
  %72 = load %class.Pos*, %class.Pos** %71, align 8
  %73 = load volatile i64*, i64** %10
  %74 = load i64, i64* %73, align 8
  %75 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m(%"class.std::_Hashtable"* %68, i64 %70, %class.Pos* dereferenceable(16) %72, i64 %74)
  %76 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %8
  store %"struct.std::__detail::_Hash_node.48"* %75, %"struct.std::__detail::_Hash_node.48"** %76, align 8
  %77 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %8
  %78 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %77, align 8
  %79 = icmp ne %"struct.std::__detail::_Hash_node.48"* %78, null
  store i1 %79, i1* %4
  %80 = load i32, i32* @x.285
  %81 = load i32, i32* @y.286
  %82 = sub i32 %80, 234088961
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 234088961
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 -1049940853, i32 -414241577
  store i32 %106, i32* %25
  br label %273

; <label>:107:                                    ; preds = %26
  %108 = load volatile i1, i1* %4
  %109 = select i1 %108, i32 -1301908654, i32 1264161277
  store i32 %109, i32* %25
  br label %273

; <label>:110:                                    ; preds = %26
  %111 = load volatile %"class.std::_Hashtable"**, %"class.std::_Hashtable"*** %11
  %112 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %111, align 8
  %113 = bitcast %"class.std::_Hashtable"* %112 to %"struct.std::__detail::_Hashtable_alloc"*
  %114 = load volatile %class.Pos**, %class.Pos*** %12
  %115 = load %class.Pos*, %class.Pos** %114, align 8
  %116 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  call void @_ZNSt5tupleIJRK3PosEEC2ES2_(%"class.std::tuple"* %116, %class.Pos* dereferenceable(16) %115)
  %117 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  %118 = load volatile %"class.std::tuple.57"*, %"class.std::tuple.57"** %6
  %119 = call %"struct.std::__detail::_Hash_node.48"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESK_IJEEEEEPSD_DpOT_(%"struct.std::__detail::_Hashtable_alloc"* %113, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %117, %"class.std::tuple.57"* dereferenceable(1) %118)
  %120 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %8
  store %"struct.std::__detail::_Hash_node.48"* %119, %"struct.std::__detail::_Hash_node.48"** %120, align 8
  %121 = load volatile %"class.std::_Hashtable"**, %"class.std::_Hashtable"*** %11
  %122 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %121, align 8
  %123 = load volatile i64*, i64** %9
  %124 = load i64, i64* %123, align 8
  %125 = load volatile i64*, i64** %10
  %126 = load i64, i64* %125, align 8
  %127 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %8
  %128 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %127, align 8
  %129 = call %"struct.std::__detail::_Hash_node.48"* @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSC_10_Hash_nodeISA_Lb1EEE(%"class.std::_Hashtable"* %122, i64 %124, i64 %126, %"struct.std::__detail::_Hash_node.48"* %128)
  %130 = load volatile %"struct.std::__detail::_Node_iterator.58"*, %"struct.std::__detail::_Node_iterator.58"** %5
  %131 = getelementptr inbounds %"struct.std::__detail::_Node_iterator.58", %"struct.std::__detail::_Node_iterator.58"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.59", %"struct.std::__detail::_Node_iterator_base.59"* %131, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node.48"* %129, %"struct.std::__detail::_Hash_node.48"** %132, align 8
  %133 = load volatile %"struct.std::__detail::_Node_iterator.58"*, %"struct.std::__detail::_Node_iterator.58"** %5
  %134 = call %"struct.std::pair.56"* @_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb0ELb1EEptEv(%"struct.std::__detail::_Node_iterator.58"* %133) #3
  %135 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %134, i32 0, i32 1
  %136 = load volatile %"class.std::unordered_set"**, %"class.std::unordered_set"*** %13
  store %"class.std::unordered_set"* %135, %"class.std::unordered_set"** %136, align 8
  store i32 2027571276, i32* %25
  br label %273

; <label>:137:                                    ; preds = %26
  %138 = load i32, i32* @x.285
  %139 = load i32, i32* @y.286
  %140 = sub i32 %138, 2074231180
  %141 = sub i32 %140, 1
  %142 = add i32 %141, 2074231180
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  %152 = select i1 %150, i32 -407455500, i32 488903322
  store i32 %152, i32* %25
  br label %273

; <label>:153:                                    ; preds = %26
  %154 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %8
  %155 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %154, align 8
  %156 = bitcast %"struct.std::__detail::_Hash_node.48"* %155 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %157 = call dereferenceable(72) %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.49"* %156) #3
  %158 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %157, i32 0, i32 1
  %159 = load volatile %"class.std::unordered_set"**, %"class.std::unordered_set"*** %13
  store %"class.std::unordered_set"* %158, %"class.std::unordered_set"** %159, align 8
  %160 = load i32, i32* @x.285
  %161 = load i32, i32* @y.286
  %162 = add i32 %160, -1292223515
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, -1292223515
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  %174 = select i1 %172, i32 -207210312, i32 488903322
  store i32 %174, i32* %25
  br label %273

; <label>:175:                                    ; preds = %26
  store i32 2027571276, i32* %25
  br label %273

; <label>:176:                                    ; preds = %26
  %177 = load i32, i32* @x.285
  %178 = load i32, i32* @y.286
  %179 = add i32 %177, 1808929804
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 1808929804
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 true, true
  %190 = and i1 %187, true
  %191 = and i1 %185, %189
  %192 = and i1 %188, true
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 true, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  %203 = select i1 %201, i32 1499585207, i32 -2097101177
  store i32 %203, i32* %25
  br label %273

; <label>:204:                                    ; preds = %26
  %205 = load volatile %"class.std::unordered_set"**, %"class.std::unordered_set"*** %13
  %206 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %205, align 8
  store %"class.std::unordered_set"* %206, %"class.std::unordered_set"** %3
  %207 = load i32, i32* @x.285
  %208 = load i32, i32* @y.286
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 false, true
  %219 = and i1 %216, false
  %220 = and i1 %214, %218
  %221 = and i1 %217, false
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 false, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  %232 = select i1 %230, i32 1143800146, i32 -2097101177
  store i32 %232, i32* %25
  br label %273

; <label>:233:                                    ; preds = %26
  %234 = load volatile %"class.std::unordered_set"*, %"class.std::unordered_set"** %3
  ret %"class.std::unordered_set"* %234

; <label>:235:                                    ; preds = %26
  %236 = alloca %"class.std::unordered_set"*, align 8
  %237 = alloca %"struct.std::__detail::_Map_base"*, align 8
  %238 = alloca %class.Pos*, align 8
  %239 = alloca %"class.std::_Hashtable"*, align 8
  %240 = alloca i64, align 8
  %241 = alloca i64, align 8
  %242 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %243 = alloca %"class.std::tuple", align 8
  %244 = alloca %"class.std::tuple.57", align 1
  %245 = alloca %"struct.std::__detail::_Node_iterator.58", align 8
  store %"struct.std::__detail::_Map_base"* %0, %"struct.std::__detail::_Map_base"** %237, align 8
  store %class.Pos* %1, %class.Pos** %238, align 8
  %246 = load %"struct.std::__detail::_Map_base"*, %"struct.std::__detail::_Map_base"** %237, align 8
  %247 = bitcast %"struct.std::__detail::_Map_base"* %246 to %"class.std::_Hashtable"*
  store %"class.std::_Hashtable"* %247, %"class.std::_Hashtable"** %239, align 8
  %248 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %239, align 8
  %249 = bitcast %"class.std::_Hashtable"* %248 to %"struct.std::__detail::_Hash_code_base"*
  %250 = load %class.Pos*, %class.Pos** %238, align 8
  %251 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base"* %249, %class.Pos* dereferenceable(16) %250)
  store i64 %251, i64* %240, align 8
  %252 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %239, align 8
  %253 = load %class.Pos*, %class.Pos** %238, align 8
  %254 = load i64, i64* %240, align 8
  %255 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable"* %252, %class.Pos* dereferenceable(16) %253, i64 %254)
  store i64 %255, i64* %241, align 8
  %256 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %239, align 8
  %257 = load i64, i64* %241, align 8
  %258 = load %class.Pos*, %class.Pos** %238, align 8
  %259 = load i64, i64* %240, align 8
  %260 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m(%"class.std::_Hashtable"* %256, i64 %257, %class.Pos* dereferenceable(16) %258, i64 %259)
  store %"struct.std::__detail::_Hash_node.48"* %260, %"struct.std::__detail::_Hash_node.48"** %242, align 8
  %261 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %242, align 8
  %262 = icmp ne %"struct.std::__detail::_Hash_node.48"* %261, null
  store i32 -1108587264, i32* %25
  br label %273

; <label>:263:                                    ; preds = %26
  %264 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %8
  %265 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %264, align 8
  %266 = bitcast %"struct.std::__detail::_Hash_node.48"* %265 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %267 = call dereferenceable(72) %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.49"* %266) #3
  %268 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %267, i32 0, i32 1
  %269 = load volatile %"class.std::unordered_set"**, %"class.std::unordered_set"*** %13
  store %"class.std::unordered_set"* %268, %"class.std::unordered_set"** %269, align 8
  store i32 -407455500, i32* %25
  br label %273

; <label>:270:                                    ; preds = %26
  %271 = load volatile %"class.std::unordered_set"**, %"class.std::unordered_set"*** %13
  %272 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %271, align 8
  store i32 1499585207, i32* %25
  br label %273

; <label>:273:                                    ; preds = %270, %263, %235, %204, %176, %175, %153, %137, %110, %107, %37, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %3, align 8
  %6 = call dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"* %5)
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  %8 = call i64 @_ZNKSt4hashI3PosEclERKS0_(%"struct.std::hash"* %6, %class.Pos* dereferenceable(16) %7)
  ret i64 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable"*, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %4 = alloca %"class.std::_Hashtable"*, align 8
  %5 = alloca %class.Pos*, align 8
  %6 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %4, align 8
  store %class.Pos* %1, %class.Pos** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4, align 8
  %8 = bitcast %"class.std::_Hashtable"* %7 to %"struct.std::__detail::_Hash_code_base"*
  %9 = load %class.Pos*, %class.Pos** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERS3_mm(%"struct.std::__detail::_Hash_code_base"* %8, %class.Pos* dereferenceable(16) %9, i64 %10, i64 %12)
  ret i64 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m(%"class.std::_Hashtable"*, i64, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node_base"*
  %6 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %7 = alloca %"class.std::_Hashtable"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %class.Pos*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %7, align 8
  store i64 %1, i64* %8, align 8
  store %class.Pos* %2, %class.Pos** %9, align 8
  store i64 %3, i64* %10, align 8
  %12 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %7, align 8
  %13 = load i64, i64* %8, align 8
  %14 = load %class.Pos*, %class.Pos** %9, align 8
  %15 = load i64, i64* %10, align 8
  %16 = call %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m(%"class.std::_Hashtable"* %12, i64 %13, %class.Pos* dereferenceable(16) %14, i64 %15)
  store %"struct.std::__detail::_Hash_node_base"* %16, %"struct.std::__detail::_Hash_node_base"** %11, align 8
  %17 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %11, align 8
  store %"struct.std::__detail::_Hash_node_base"* %17, %"struct.std::__detail::_Hash_node_base"** %5
  %18 = alloca i32
  store i32 1624218335, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %69
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1624218335, label %22
    i32 203209953, label %26
    i32 -637371232, label %41
    i32 -1630038061, label %60
    i32 -683026363, label %61
    i32 1837220215, label %62
    i32 -378827956, label %64
  ]

; <label>:21:                                     ; preds = %19
  br label %69

; <label>:22:                                     ; preds = %19
  %23 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5
  %24 = icmp ne %"struct.std::__detail::_Hash_node_base"* %23, null
  %25 = select i1 %24, i32 203209953, i32 -683026363
  store i32 %25, i32* %18
  br label %69

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.291
  %28 = load i32, i32* @y.292
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -637371232, i32 -378827956
  store i32 %40, i32* %18
  br label %69

; <label>:41:                                     ; preds = %19
  %42 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %11, align 8
  %43 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %42, i32 0, i32 0
  %44 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %43, align 8
  %45 = bitcast %"struct.std::__detail::_Hash_node_base"* %44 to %"struct.std::__detail::_Hash_node.48"*
  store %"struct.std::__detail::_Hash_node.48"* %45, %"struct.std::__detail::_Hash_node.48"** %6, align 8
  %46 = load i32, i32* @x.291
  %47 = load i32, i32* @y.292
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1630038061, i32 -378827956
  store i32 %59, i32* %18
  br label %69

; <label>:60:                                     ; preds = %19
  store i32 1837220215, i32* %18
  br label %69

; <label>:61:                                     ; preds = %19
  store %"struct.std::__detail::_Hash_node.48"* null, %"struct.std::__detail::_Hash_node.48"** %6, align 8
  store i32 1837220215, i32* %18
  br label %69

; <label>:62:                                     ; preds = %19
  %63 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %6, align 8
  ret %"struct.std::__detail::_Hash_node.48"* %63

; <label>:64:                                     ; preds = %19
  %65 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %11, align 8
  %66 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %65, i32 0, i32 0
  %67 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %66, align 8
  %68 = bitcast %"struct.std::__detail::_Hash_node_base"* %67 to %"struct.std::__detail::_Hash_node.48"*
  store %"struct.std::__detail::_Hash_node.48"* %68, %"struct.std::__detail::_Hash_node.48"** %6, align 8
  store i32 -637371232, i32* %18
  br label %69

; <label>:69:                                     ; preds = %64, %61, %60, %41, %26, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESK_IJEEEEEPSD_DpOT_(%"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.57"*, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %11 = alloca %"class.std::allocator.53", align 1
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.57"* %3, %"class.std::tuple.57"** %8, align 8
  %14 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %5, align 8
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
  %16 = call %"struct.std::__detail::_Hash_node.48"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE8allocateERSE_m(%"class.std::allocator"* dereferenceable(1) %15, i64 1)
  store %"struct.std::__detail::_Hash_node.48"* %16, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %18 = call %"struct.std::__detail::_Hash_node.48"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEPT_RSE_(%"struct.std::__detail::_Hash_node.48"* dereferenceable(88) %17) #3
  store %"struct.std::__detail::_Hash_node.48"* %18, %"struct.std::__detail::_Hash_node.48"** %10, align 8
  %19 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %20 unwind label %35

; <label>:20:                                     ; preds = %4
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEEC2INSt8__detail10_Hash_nodeIS9_Lb1EEEEERKSaIT_E(%"class.std::allocator.53"* %11, %"class.std::allocator"* dereferenceable(1) %19) #3
  %21 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %10, align 8
  %22 = bitcast %"struct.std::__detail::_Hash_node.48"* %21 to i8*
  %23 = bitcast i8* %22 to %"struct.std::__detail::_Hash_node.48"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEC2Ev(%"struct.std::__detail::_Hash_node.48"* %23) #3
  %24 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %10, align 8
  %25 = bitcast %"struct.std::__detail::_Hash_node.48"* %24 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %26 = call %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.49"* %25) #3
  %27 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %28 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %27) #3
  %29 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %30 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::tuple"* dereferenceable(8) %29) #3
  %31 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %8, align 8
  %32 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %31) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_(%"class.std::allocator.53"* dereferenceable(1) %11, %"struct.std::pair.56"* %26, %"struct.std::piecewise_construct_t"* dereferenceable(1) %28, %"class.std::tuple"* dereferenceable(8) %30, %"class.std::tuple.57"* dereferenceable(1) %32)
          to label %33 unwind label %39

; <label>:33:                                     ; preds = %20
  %34 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %10, align 8
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev(%"class.std::allocator.53"* %11) #3
  ret %"struct.std::__detail::_Hash_node.48"* %34

; <label>:35:                                     ; preds = %4
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %12, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %13, align 4
  br label %72

; <label>:39:                                     ; preds = %20
  %40 = load i32, i32* @x.293
  %41 = load i32, i32* @y.294
  %42 = sub i32 %40, -2033891138
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -2033891138
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %190

; <label>:54:                                     ; preds = %39, %190
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %12, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %13, align 4
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev(%"class.std::allocator.53"* %11) #3
  %58 = load i32, i32* @x.293
  %59 = load i32, i32* @y.294
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %190

; <label>:71:                                     ; preds = %54
  br label %72

; <label>:72:                                     ; preds = %71, %35
  %73 = load i8*, i8** %12, align 8
  %74 = call i8* @__cxa_begin_catch(i8* %73) #3
  %75 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %14)
          to label %76 unwind label %121

; <label>:76:                                     ; preds = %72
  %77 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE10deallocateERSE_PSD_m(%"class.std::allocator"* dereferenceable(1) %75, %"struct.std::__detail::_Hash_node.48"* %77, i64 1)
          to label %78 unwind label %121

; <label>:78:                                     ; preds = %76
  %79 = load i32, i32* @x.293
  %80 = load i32, i32* @y.294
  %81 = sub i32 %79, 225481982
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 225481982
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %194

; <label>:105:                                    ; preds = %78, %194
  %106 = load i32, i32* @x.293
  %107 = load i32, i32* @y.294
  %108 = add i32 %106, 115255306
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 115255306
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %194

; <label>:120:                                    ; preds = %105
  invoke void @__cxa_rethrow() #12
          to label %189 unwind label %121

; <label>:121:                                    ; preds = %120, %76, %72
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %12, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %125 unwind label %186

; <label>:125:                                    ; preds = %121
  br label %127
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:127:                                    ; preds = %125
  %128 = load i32, i32* @x.293
  %129 = load i32, i32* @y.294
  %130 = sub i32 %128, 279259482
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 279259482
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 true, true
  %141 = and i1 %138, true
  %142 = and i1 %136, %140
  %143 = and i1 %139, true
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 true, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %195

; <label>:154:                                    ; preds = %127, %195
  %155 = load i8*, i8** %12, align 8
  %156 = load i32, i32* %13, align 4
  %157 = insertvalue { i8*, i32 } undef, i8* %155, 0
  %158 = insertvalue { i8*, i32 } %157, i32 %156, 1
  %159 = load i32, i32* @x.293
  %160 = load i32, i32* @y.294
  %161 = add i32 %159, 1011444229
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 1011444229
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  br i1 %183, label %185, label %195

; <label>:185:                                    ; preds = %154
  resume { i8*, i32 } %158

; <label>:186:                                    ; preds = %121
  %187 = landingpad { i8*, i32 }
          catch i8* null
  %188 = extractvalue { i8*, i32 } %187, 0
  call void @__clang_call_terminate(i8* %188) #9
  unreachable

; <label>:189:                                    ; preds = %120
  unreachable

; <label>:190:                                    ; preds = %54, %39
  %191 = landingpad { i8*, i32 }
          catch i8* null
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %12, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %13, align 4
  call void @_ZNSaISt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEED2Ev(%"class.std::allocator.53"* %11) #3
  br label %54

; <label>:194:                                    ; preds = %105, %78
  br label %105

; <label>:195:                                    ; preds = %154, %127
  %196 = load i8*, i8** %12, align 8
  %197 = load i32, i32* %13, align 4
  %198 = insertvalue { i8*, i32 } undef, i8* %196, 0
  %199 = insertvalue { i8*, i32 } %198, i32 %197, 1
  br label %154
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRK3PosEEC2ES2_(%"class.std::tuple"*, %class.Pos* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.295
  %6 = load i32, i32* @y.296
  %7 = sub i32 %5, 510802077
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 510802077
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1850460200, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1850460200, label %19
    i32 1369238380, label %27
    i32 -605715965, label %59
    i32 -350309421, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1369238380, i32 -350309421
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple"*, align 8
  %29 = alloca %class.Pos*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %28, align 8
  store %class.Pos* %1, %class.Pos** %29, align 8
  %30 = load %"class.std::tuple"*, %"class.std::tuple"** %28, align 8
  %31 = bitcast %"class.std::tuple"* %30 to %"struct.std::_Tuple_impl"*
  %32 = load %class.Pos*, %class.Pos** %29, align 8
  call void @_ZNSt11_Tuple_implILm0EJRK3PosEEC2ES2_(%"struct.std::_Tuple_impl"* %31, %class.Pos* dereferenceable(16) %32)
  %33 = load i32, i32* @x.295
  %34 = load i32, i32* @y.296
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -605715965, i32 -350309421
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::tuple"*, align 8
  %62 = alloca %class.Pos*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %61, align 8
  store %class.Pos* %1, %class.Pos** %62, align 8
  %63 = load %"class.std::tuple"*, %"class.std::tuple"** %61, align 8
  %64 = bitcast %"class.std::tuple"* %63 to %"struct.std::_Tuple_impl"*
  %65 = load %class.Pos*, %class.Pos** %62, align 8
  call void @_ZNSt11_Tuple_implILm0EJRK3PosEEC2ES2_(%"struct.std::_Tuple_impl"* %64, %class.Pos* dereferenceable(16) %65)
  store i32 1369238380, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSC_10_Hash_nodeISA_Lb1EEE(%"class.std::_Hashtable"*, i64, i64, %"struct.std::__detail::_Hash_node.48"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.297
  %6 = load i32, i32* @y.298
  %7 = add i32 %5, -2123888803
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2123888803
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %489

; <label>:19:                                     ; preds = %4, %489
  %20 = alloca %"struct.std::__detail::_Node_iterator.58", align 8
  %21 = alloca %"class.std::_Hashtable"*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %25 = alloca i64*, align 8
  %26 = alloca i64, align 8
  %27 = alloca %"struct.std::pair.61", align 8
  %28 = alloca i8*
  %29 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %21, align 8
  store i64 %1, i64* %22, align 8
  store i64 %2, i64* %23, align 8
  store %"struct.std::__detail::_Hash_node.48"* %3, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  %30 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %21, align 8
  %31 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 4
  %32 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %31)
  store i64 %32, i64* %26, align 8
  store i64* %26, i64** %25, align 8
  %33 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 4
  %34 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = call { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"* %33, i64 %35, i64 %37, i64 1)
  %39 = bitcast %"struct.std::pair.61"* %27 to { i8, i64 }*
  %40 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %39, i32 0, i32 0
  %41 = extractvalue { i8, i64 } %38, 0
  store i8 %41, i8* %40, align 8
  %42 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %39, i32 0, i32 1
  %43 = extractvalue { i8, i64 } %38, 1
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %27, i32 0, i32 0
  %45 = load i8, i8* %44, align 8
  %46 = trunc i8 %45 to i1
  %47 = load i32, i32* @x.297
  %48 = load i32, i32* @y.298
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %489

; <label>:72:                                     ; preds = %19
  br i1 %46, label %73, label %331

; <label>:73:                                     ; preds = %72
  %74 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %27, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = load i64*, i64** %25, align 8
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable"* %30, i64 %75, i64* dereferenceable(8) %76)
          to label %77 unwind label %183

; <label>:77:                                     ; preds = %73
  %78 = bitcast %"class.std::_Hashtable"* %30 to %"struct.std::__detail::_Hash_code_base"*
  %79 = invoke dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %78)
          to label %80 unwind label %183

; <label>:80:                                     ; preds = %77
  %81 = load i32, i32* @x.297
  %82 = load i32, i32* @y.298
  %83 = sub i32 %81, 31096055
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 31096055
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %517

; <label>:107:                                    ; preds = %80, %517
  %108 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  %109 = bitcast %"struct.std::__detail::_Hash_node.48"* %108 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %110 = call dereferenceable(72) %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.49"* %109) #3
  %111 = load i32, i32* @x.297
  %112 = load i32, i32* @y.298
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %517

; <label>:124:                                    ; preds = %107
  %125 = invoke dereferenceable(16) %class.Pos* @_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOSE_(%"struct.std::__detail::_Select1st"* %79, %"struct.std::pair.56"* dereferenceable(72) %110)
          to label %126 unwind label %183

; <label>:126:                                    ; preds = %124
  %127 = load i32, i32* @x.297
  %128 = load i32, i32* @y.298
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %521

; <label>:152:                                    ; preds = %126, %521
  %153 = load i64, i64* %23, align 8
  %154 = load i32, i32* @x.297
  %155 = load i32, i32* @y.298
  %156 = add i32 %154, 1741383683
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, 1741383683
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  br i1 %178, label %180, label %521

; <label>:180:                                    ; preds = %152
  %181 = invoke i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable"* %30, %class.Pos* dereferenceable(16) %125, i64 %153)
          to label %182 unwind label %183

; <label>:182:                                    ; preds = %180
  store i64 %181, i64* %22, align 8
  br label %331

; <label>:183:                                    ; preds = %335, %331, %180, %124, %77, %73
  %184 = load i32, i32* @x.297
  %185 = load i32, i32* @y.298
  %186 = sub i32 %184, -178493269
  %187 = sub i32 %186, 1
  %188 = add i32 %187, -178493269
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 true, true
  %197 = and i1 %194, true
  %198 = and i1 %192, %196
  %199 = and i1 %195, true
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 true, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  br i1 %208, label %210, label %523

; <label>:210:                                    ; preds = %183, %523
  %211 = landingpad { i8*, i32 }
          catch i8* null
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %28, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %29, align 4
  %214 = load i32, i32* @x.297
  %215 = load i32, i32* @y.298
  %216 = add i32 %214, 635250881
  %217 = sub i32 %216, 1
  %218 = sub i32 %217, 635250881
  %219 = sub i32 %214, 1
  %220 = mul i32 %214, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %215, 10
  %224 = xor i1 %222, true
  %225 = xor i1 %223, true
  %226 = xor i1 false, true
  %227 = and i1 %224, false
  %228 = and i1 %222, %226
  %229 = and i1 %225, false
  %230 = and i1 %223, %226
  %231 = or i1 %227, %228
  %232 = or i1 %229, %230
  %233 = xor i1 %231, %232
  %234 = or i1 %224, %225
  %235 = xor i1 %234, true
  %236 = or i1 false, %226
  %237 = and i1 %235, %236
  %238 = or i1 %233, %237
  %239 = or i1 %222, %223
  br i1 %238, label %240, label %523

; <label>:240:                                    ; preds = %210
  br label %241

; <label>:241:                                    ; preds = %240
  %242 = load i32, i32* @x.297
  %243 = load i32, i32* @y.298
  %244 = add i32 %242, -1634878896
  %245 = sub i32 %244, 1
  %246 = sub i32 %245, -1634878896
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = and i1 %250, %251
  %253 = xor i1 %250, %251
  %254 = or i1 %252, %253
  %255 = or i1 %250, %251
  br i1 %254, label %256, label %527

; <label>:256:                                    ; preds = %241, %527
  %257 = load i8*, i8** %28, align 8
  %258 = call i8* @__cxa_begin_catch(i8* %257) #3
  %259 = bitcast %"class.std::_Hashtable"* %30 to %"struct.std::__detail::_Hashtable_alloc"*
  %260 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  %261 = load i32, i32* @x.297
  %262 = load i32, i32* @y.298
  %263 = add i32 %261, 1906018753
  %264 = sub i32 %263, 1
  %265 = sub i32 %264, 1906018753
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %527

; <label>:275:                                    ; preds = %256
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE18_M_deallocate_nodeEPSD_(%"struct.std::__detail::_Hashtable_alloc"* %259, %"struct.std::__detail::_Hash_node.48"* %260)
          to label %276 unwind label %349

; <label>:276:                                    ; preds = %275
  %277 = load i32, i32* @x.297
  %278 = load i32, i32* @y.298
  %279 = sub i32 %277, -226516310
  %280 = sub i32 %279, 1
  %281 = add i32 %280, -226516310
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 false, true
  %290 = and i1 %287, false
  %291 = and i1 %285, %289
  %292 = and i1 %288, false
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 false, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  br i1 %301, label %303, label %532

; <label>:303:                                    ; preds = %276, %532
  %304 = load i32, i32* @x.297
  %305 = load i32, i32* @y.298
  %306 = sub i32 %304, 1918015583
  %307 = sub i32 %306, 1
  %308 = add i32 %307, 1918015583
  %309 = sub i32 %304, 1
  %310 = mul i32 %304, %308
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %305, 10
  %314 = xor i1 %312, true
  %315 = xor i1 %313, true
  %316 = xor i1 false, true
  %317 = and i1 %314, false
  %318 = and i1 %312, %316
  %319 = and i1 %315, false
  %320 = and i1 %313, %316
  %321 = or i1 %317, %318
  %322 = or i1 %319, %320
  %323 = xor i1 %321, %322
  %324 = or i1 %314, %315
  %325 = xor i1 %324, true
  %326 = or i1 false, %316
  %327 = and i1 %325, %326
  %328 = or i1 %323, %327
  %329 = or i1 %312, %313
  br i1 %328, label %330, label %532

; <label>:330:                                    ; preds = %303
  invoke void @__cxa_rethrow() #12
          to label %447 unwind label %349

; <label>:331:                                    ; preds = %182, %72
  %332 = bitcast %"class.std::_Hashtable"* %30 to %"struct.std::__detail::_Hash_code_base"*
  %333 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  %334 = load i64, i64* %23, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeISB_Lb1EEEm(%"struct.std::__detail::_Hash_code_base"* %332, %"struct.std::__detail::_Hash_node.48"* %333, i64 %334)
          to label %335 unwind label %183

; <label>:335:                                    ; preds = %331
  %336 = load i64, i64* %22, align 8
  %337 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSC_10_Hash_nodeISA_Lb1EEE(%"class.std::_Hashtable"* %30, i64 %336, %"struct.std::__detail::_Hash_node.48"* %337)
          to label %338 unwind label %183

; <label>:338:                                    ; preds = %335
  %339 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %30, i32 0, i32 3
  %340 = load i64, i64* %339, align 8
  %341 = sub i64 %340, 1781355485188413577
  %342 = add i64 %341, 1
  %343 = add i64 %342, 1781355485188413577
  %344 = add i64 %340, 1
  store i64 %343, i64* %339, align 8
  %345 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::__detail::_Node_iterator.58"* %20, %"struct.std::__detail::_Hash_node.48"* %345) #3
  %346 = getelementptr inbounds %"struct.std::__detail::_Node_iterator.58", %"struct.std::__detail::_Node_iterator.58"* %20, i32 0, i32 0
  %347 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.59", %"struct.std::__detail::_Node_iterator_base.59"* %346, i32 0, i32 0
  %348 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %347, align 8
  ret %"struct.std::__detail::_Hash_node.48"* %348

; <label>:349:                                    ; preds = %330, %275
  %350 = load i32, i32* @x.297
  %351 = load i32, i32* @y.298
  %352 = add i32 %350, -1029974187
  %353 = sub i32 %352, 1
  %354 = sub i32 %353, -1029974187
  %355 = sub i32 %350, 1
  %356 = mul i32 %350, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %351, 10
  %360 = and i1 %358, %359
  %361 = xor i1 %358, %359
  %362 = or i1 %360, %361
  %363 = or i1 %358, %359
  br i1 %362, label %364, label %533

; <label>:364:                                    ; preds = %349, %533
  %365 = landingpad { i8*, i32 }
          cleanup
  %366 = extractvalue { i8*, i32 } %365, 0
  store i8* %366, i8** %28, align 8
  %367 = extractvalue { i8*, i32 } %365, 1
  store i32 %367, i32* %29, align 4
  %368 = load i32, i32* @x.297
  %369 = load i32, i32* @y.298
  %370 = add i32 %368, 87956187
  %371 = sub i32 %370, 1
  %372 = sub i32 %371, 87956187
  %373 = sub i32 %368, 1
  %374 = mul i32 %368, %372
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %369, 10
  %378 = xor i1 %376, true
  %379 = xor i1 %377, true
  %380 = xor i1 true, true
  %381 = and i1 %378, true
  %382 = and i1 %376, %380
  %383 = and i1 %379, true
  %384 = and i1 %377, %380
  %385 = or i1 %381, %382
  %386 = or i1 %383, %384
  %387 = xor i1 %385, %386
  %388 = or i1 %378, %379
  %389 = xor i1 %388, true
  %390 = or i1 true, %380
  %391 = and i1 %389, %390
  %392 = or i1 %387, %391
  %393 = or i1 %376, %377
  br i1 %392, label %394, label %533

; <label>:394:                                    ; preds = %364
  invoke void @__cxa_end_catch()
          to label %395 unwind label %444

; <label>:395:                                    ; preds = %394
  br label %397
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:397:                                    ; preds = %395
  %398 = load i32, i32* @x.297
  %399 = load i32, i32* @y.298
  %400 = sub i32 %398, -9147988
  %401 = sub i32 %400, 1
  %402 = add i32 %401, -9147988
  %403 = sub i32 %398, 1
  %404 = mul i32 %398, %402
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %399, 10
  %408 = xor i1 %406, true
  %409 = xor i1 %407, true
  %410 = xor i1 true, true
  %411 = and i1 %408, true
  %412 = and i1 %406, %410
  %413 = and i1 %409, true
  %414 = and i1 %407, %410
  %415 = or i1 %411, %412
  %416 = or i1 %413, %414
  %417 = xor i1 %415, %416
  %418 = or i1 %408, %409
  %419 = xor i1 %418, true
  %420 = or i1 true, %410
  %421 = and i1 %419, %420
  %422 = or i1 %417, %421
  %423 = or i1 %406, %407
  br i1 %422, label %424, label %537

; <label>:424:                                    ; preds = %397, %537
  %425 = load i8*, i8** %28, align 8
  %426 = load i32, i32* %29, align 4
  %427 = insertvalue { i8*, i32 } undef, i8* %425, 0
  %428 = insertvalue { i8*, i32 } %427, i32 %426, 1
  %429 = load i32, i32* @x.297
  %430 = load i32, i32* @y.298
  %431 = add i32 %429, -1107627769
  %432 = sub i32 %431, 1
  %433 = sub i32 %432, -1107627769
  %434 = sub i32 %429, 1
  %435 = mul i32 %429, %433
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %430, 10
  %439 = and i1 %437, %438
  %440 = xor i1 %437, %438
  %441 = or i1 %439, %440
  %442 = or i1 %437, %438
  br i1 %441, label %443, label %537

; <label>:443:                                    ; preds = %424
  resume { i8*, i32 } %428

; <label>:444:                                    ; preds = %394
  %445 = landingpad { i8*, i32 }
          catch i8* null
  %446 = extractvalue { i8*, i32 } %445, 0
  call void @__clang_call_terminate(i8* %446) #9
  unreachable

; <label>:447:                                    ; preds = %330
  %448 = load i32, i32* @x.297
  %449 = load i32, i32* @y.298
  %450 = add i32 %448, -938555829
  %451 = sub i32 %450, 1
  %452 = sub i32 %451, -938555829
  %453 = sub i32 %448, 1
  %454 = mul i32 %448, %452
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %449, 10
  %458 = and i1 %456, %457
  %459 = xor i1 %456, %457
  %460 = or i1 %458, %459
  %461 = or i1 %456, %457
  br i1 %460, label %462, label %542

; <label>:462:                                    ; preds = %447, %542
  %463 = load i32, i32* @x.297
  %464 = load i32, i32* @y.298
  %465 = sub i32 0, 1
  %466 = add i32 %463, %465
  %467 = sub i32 %463, 1
  %468 = mul i32 %463, %466
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %464, 10
  %472 = xor i1 %470, true
  %473 = xor i1 %471, true
  %474 = xor i1 false, true
  %475 = and i1 %472, false
  %476 = and i1 %470, %474
  %477 = and i1 %473, false
  %478 = and i1 %471, %474
  %479 = or i1 %475, %476
  %480 = or i1 %477, %478
  %481 = xor i1 %479, %480
  %482 = or i1 %472, %473
  %483 = xor i1 %482, true
  %484 = or i1 false, %474
  %485 = and i1 %483, %484
  %486 = or i1 %481, %485
  %487 = or i1 %470, %471
  br i1 %486, label %488, label %542

; <label>:488:                                    ; preds = %462
  unreachable

; <label>:489:                                    ; preds = %19, %4
  %490 = alloca %"struct.std::__detail::_Node_iterator.58", align 8
  %491 = alloca %"class.std::_Hashtable"*, align 8
  %492 = alloca i64, align 8
  %493 = alloca i64, align 8
  %494 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %495 = alloca i64*, align 8
  %496 = alloca i64, align 8
  %497 = alloca %"struct.std::pair.61", align 8
  %498 = alloca i8*
  %499 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %491, align 8
  store i64 %1, i64* %492, align 8
  store i64 %2, i64* %493, align 8
  store %"struct.std::__detail::_Hash_node.48"* %3, %"struct.std::__detail::_Hash_node.48"** %494, align 8
  %500 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %491, align 8
  %501 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %500, i32 0, i32 4
  %502 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %501)
  store i64 %502, i64* %496, align 8
  store i64* %496, i64** %495, align 8
  %503 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %500, i32 0, i32 4
  %504 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %500, i32 0, i32 1
  %505 = load i64, i64* %504, align 8
  %506 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %500, i32 0, i32 3
  %507 = load i64, i64* %506, align 8
  %508 = call { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"* %503, i64 %505, i64 %507, i64 1)
  %509 = bitcast %"struct.std::pair.61"* %497 to { i8, i64 }*
  %510 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %509, i32 0, i32 0
  %511 = extractvalue { i8, i64 } %508, 0
  store i8 %511, i8* %510, align 8
  %512 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %509, i32 0, i32 1
  %513 = extractvalue { i8, i64 } %508, 1
  store i64 %513, i64* %512, align 8
  %514 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %497, i32 0, i32 0
  %515 = load i8, i8* %514, align 8
  %516 = trunc i8 %515 to i1
  br label %19

; <label>:517:                                    ; preds = %107, %80
  %518 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  %519 = bitcast %"struct.std::__detail::_Hash_node.48"* %518 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %520 = call dereferenceable(72) %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.49"* %519) #3
  br label %107

; <label>:521:                                    ; preds = %152, %126
  %522 = load i64, i64* %23, align 8
  br label %152

; <label>:523:                                    ; preds = %210, %183
  %524 = landingpad { i8*, i32 }
          catch i8* null
  %525 = extractvalue { i8*, i32 } %524, 0
  store i8* %525, i8** %28, align 8
  %526 = extractvalue { i8*, i32 } %524, 1
  store i32 %526, i32* %29, align 4
  br label %210

; <label>:527:                                    ; preds = %256, %241
  %528 = load i8*, i8** %28, align 8
  %529 = call i8* @__cxa_begin_catch(i8* %528) #3
  %530 = bitcast %"class.std::_Hashtable"* %30 to %"struct.std::__detail::_Hashtable_alloc"*
  %531 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %24, align 8
  br label %256

; <label>:532:                                    ; preds = %303, %276
  br label %303

; <label>:533:                                    ; preds = %364, %349
  %534 = landingpad { i8*, i32 }
          cleanup
  %535 = extractvalue { i8*, i32 } %534, 0
  store i8* %535, i8** %28, align 8
  %536 = extractvalue { i8*, i32 } %534, 1
  store i32 %536, i32* %29, align 4
  br label %364

; <label>:537:                                    ; preds = %424, %397
  %538 = load i8*, i8** %28, align 8
  %539 = load i32, i32* %29, align 4
  %540 = insertvalue { i8*, i32 } undef, i8* %538, 0
  %541 = insertvalue { i8*, i32 } %540, i32 %539, 1
  br label %424

; <label>:542:                                    ; preds = %462, %447
  br label %462
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.56"* @_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb0ELb1EEptEv(%"struct.std::__detail::_Node_iterator.58"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.56"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.299
  %6 = load i32, i32* @y.300
  %7 = sub i32 %5, -328946926
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -328946926
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -854327696, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -854327696, label %19
    i32 955800644, label %27
    i32 -323921724, label %62
    i32 521868480, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 955800644, i32 521868480
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Node_iterator.58"*, align 8
  store %"struct.std::__detail::_Node_iterator.58"* %0, %"struct.std::__detail::_Node_iterator.58"** %28, align 8
  %29 = load %"struct.std::__detail::_Node_iterator.58"*, %"struct.std::__detail::_Node_iterator.58"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Node_iterator.58"* %29 to %"struct.std::__detail::_Node_iterator_base.59"*
  %31 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.59", %"struct.std::__detail::_Node_iterator_base.59"* %30, i32 0, i32 0
  %32 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %31, align 8
  %33 = bitcast %"struct.std::__detail::_Hash_node.48"* %32 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %34 = call %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.49"* %33) #3
  store %"struct.std::pair.56"* %34, %"struct.std::pair.56"** %2
  %35 = load i32, i32* @x.299
  %36 = load i32, i32* @y.300
  %37 = add i32 %35, 2038388600
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 2038388600
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -323921724, i32 521868480
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.std::pair.56"*, %"struct.std::pair.56"** %2
  ret %"struct.std::pair.56"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::__detail::_Node_iterator.58"*, align 8
  store %"struct.std::__detail::_Node_iterator.58"* %0, %"struct.std::__detail::_Node_iterator.58"** %65, align 8
  %66 = load %"struct.std::__detail::_Node_iterator.58"*, %"struct.std::__detail::_Node_iterator.58"** %65, align 8
  %67 = bitcast %"struct.std::__detail::_Node_iterator.58"* %66 to %"struct.std::__detail::_Node_iterator_base.59"*
  %68 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.59", %"struct.std::__detail::_Node_iterator_base.59"* %67, i32 0, i32 0
  %69 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %68, align 8
  %70 = bitcast %"struct.std::__detail::_Hash_node.48"* %69 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %71 = call %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.49"* %70) #3
  store i32 955800644, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.49"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.56"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.301
  %6 = load i32, i32* @y.302
  %7 = add i32 %5, -820494184
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -820494184
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -197072112, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -197072112, label %19
    i32 686106827, label %27
    i32 -1102930068, label %46
    i32 -457694675, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 686106827, i32 -457694675
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_node_value_base.49"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base.49"* %0, %"struct.std::__detail::_Hash_node_value_base.49"** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_node_value_base.49"*, %"struct.std::__detail::_Hash_node_value_base.49"** %28, align 8
  %30 = call %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.49"* %29) #3
  store %"struct.std::pair.56"* %30, %"struct.std::pair.56"** %2
  %31 = load i32, i32* @x.301
  %32 = load i32, i32* @y.302
  %33 = sub i32 %31, 2034865085
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 2034865085
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1102930068, i32 -457694675
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::pair.56"*, %"struct.std::pair.56"** %2
  ret %"struct.std::pair.56"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Hash_node_value_base.49"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base.49"* %0, %"struct.std::__detail::_Hash_node_value_base.49"** %49, align 8
  %50 = load %"struct.std::__detail::_Hash_node_value_base.49"*, %"struct.std::__detail::_Hash_node_value_base.49"** %49, align 8
  %51 = call %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.49"* %50) #3
  store i32 686106827, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.0"*
  %5 = call dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.0"* dereferenceable(1) %4)
  ret %"struct.std::hash"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt4hashI3PosEclERKS0_(%"struct.std::hash"*, %class.Pos* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.305
  %7 = load i32, i32* @y.306
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 541206700, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 541206700, label %19
    i32 -1215893661, label %39
    i32 2099596152, label %60
    i32 1095634272, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1215893661, i32 1095634272
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::hash"*, align 8
  %41 = alloca %class.Pos*, align 8
  store %"struct.std::hash"* %0, %"struct.std::hash"** %40, align 8
  store %class.Pos* %1, %class.Pos** %41, align 8
  %42 = load %"struct.std::hash"*, %"struct.std::hash"** %40, align 8
  %43 = load %class.Pos*, %class.Pos** %41, align 8
  %44 = getelementptr inbounds %class.Pos, %class.Pos* %43, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %3
  %46 = load i32, i32* @x.305
  %47 = load i32, i32* @y.306
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 2099596152, i32 1095634272
  store i32 %59, i32* %15
  br label %69

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %3
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::hash"*, align 8
  %64 = alloca %class.Pos*, align 8
  store %"struct.std::hash"* %0, %"struct.std::hash"** %63, align 8
  store %class.Pos* %1, %class.Pos** %64, align 8
  %65 = load %"struct.std::hash"*, %"struct.std::hash"** %63, align 8
  %66 = load %class.Pos*, %class.Pos** %64, align 8
  %67 = getelementptr inbounds %class.Pos, %class.Pos* %66, i32 0, i32 2
  %68 = load i64, i64* %67, align 8
  store i32 -1215893661, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.0"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.0"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.0"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.0"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.0"*, %"struct.std::__detail::_Hashtable_ebo_helper.0"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.0"* %3 to %"struct.std::hash"*
  ret %"struct.std::hash"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERS3_mm(%"struct.std::__detail::_Hash_code_base"*, %class.Pos* dereferenceable(16), i64, i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %6 = alloca %class.Pos*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %5, align 8
  store %class.Pos* %1, %class.Pos** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"* %9)
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %8, align 8
  %13 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %10, i64 %11, i64 %12) #3
  ret i64 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.1"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.1"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Mod_range_hashing"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"*, i64, i64) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.313
  %8 = load i32, i32* @y.314
  %9 = add i32 %7, 887745592
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 887745592
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1840281636, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1840281636, label %21
    i32 1957829608, label %41
    i32 -9618636, label %64
    i32 581152734, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1957829608, i32 581152734
  store i32 %40, i32* %17
  br label %80

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::__detail::_Mod_range_hashing"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  store %"struct.std::__detail::_Mod_range_hashing"* %0, %"struct.std::__detail::_Mod_range_hashing"** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64 %2, i64* %44, align 8
  %45 = load %"struct.std::__detail::_Mod_range_hashing"*, %"struct.std::__detail::_Mod_range_hashing"** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load i64, i64* %44, align 8
  %48 = urem i64 %46, %47
  store i64 %48, i64* %4
  %49 = load i32, i32* @x.313
  %50 = load i32, i32* @y.314
  %51 = add i32 %49, 1778983198
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1778983198
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -9618636, i32 581152734
  store i32 %63, i32* %17
  br label %80

; <label>:64:                                     ; preds = %18
  %65 = load volatile i64, i64* %4
  ret i64 %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.std::__detail::_Mod_range_hashing"*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i64, align 8
  store %"struct.std::__detail::_Mod_range_hashing"* %0, %"struct.std::__detail::_Mod_range_hashing"** %67, align 8
  store i64 %1, i64* %68, align 8
  store i64 %2, i64* %69, align 8
  %70 = load %"struct.std::__detail::_Mod_range_hashing"*, %"struct.std::__detail::_Mod_range_hashing"** %67, align 8
  %71 = load i64, i64* %68, align 8
  %72 = load i64, i64* %69, align 8
  %73 = shl i64 %71, %72
  %74 = sub i64 %71, -9119557909374986742
  %75 = sub i64 %74, %72
  %76 = add i64 %75, -9119557909374986742
  %77 = sub i64 %71, %72
  %78 = mul i64 %76, %72
  %79 = urem i64 %71, %72
  store i32 1957829608, i32* %17
  br label %80

; <label>:80:                                     ; preds = %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.1"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.1"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.1"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.1"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.1"*, %"struct.std::__detail::_Hashtable_ebo_helper.1"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.1"* %3 to %"struct.std::__detail::_Mod_range_hashing"*
  ret %"struct.std::__detail::_Mod_range_hashing"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m(%"class.std::_Hashtable"*, i64, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node_base"*
  %6 = alloca %"class.std::_Hashtable"*
  %7 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %8 = alloca %"class.std::_Hashtable"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %class.Pos*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %13 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %class.Pos* %2, %class.Pos** %10, align 8
  store i64 %3, i64* %11, align 8
  %14 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %8, align 8
  store %"class.std::_Hashtable"* %14, %"class.std::_Hashtable"** %6
  %15 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %16 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %15, i32 0, i32 0
  %17 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %16, align 8
  %18 = load i64, i64* %9, align 8
  %19 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %17, i64 %18
  %20 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %19, align 8
  store %"struct.std::__detail::_Hash_node_base"* %20, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %21 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %21, %"struct.std::__detail::_Hash_node_base"** %5
  %22 = alloca i32
  store i32 548848702, i32* %22
  br label %23

; <label>:23:                                     ; preds = %4, %311
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 548848702, label %26
    i32 1956028842, label %30
    i32 -349328034, label %58
    i32 -1166921560, label %74
    i32 -1648274557, label %75
    i32 -1005694885, label %103
    i32 -1295633124, label %135
    i32 -905778442, label %136
    i32 -280837194, label %144
    i32 -197532606, label %160
    i32 2086049326, label %176
    i32 612821821, label %177
    i32 2140403702, label %184
    i32 -495989947, label %192
    i32 390277149, label %219
    i32 249319036, label %247
    i32 -488308490, label %248
    i32 -2018370511, label %251
    i32 1368396699, label %266
    i32 706236811, label %295
    i32 1027115716, label %296
    i32 900586781, label %297
    i32 -1916240095, label %299
    i32 220933282, label %300
    i32 -1191590002, label %305
    i32 175396266, label %307
    i32 1772022497, label %308
  ]

; <label>:25:                                     ; preds = %23
  br label %311

; <label>:26:                                     ; preds = %23
  %27 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5
  %28 = icmp ne %"struct.std::__detail::_Hash_node_base"* %27, null
  %29 = select i1 %28, i32 -1648274557, i32 1956028842
  store i32 %29, i32* %22
  br label %311

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.317
  %32 = load i32, i32* @y.318
  %33 = add i32 %31, -114884358
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -114884358
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -349328034, i32 -1916240095
  store i32 %57, i32* %22
  br label %311

; <label>:58:                                     ; preds = %23
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  %59 = load i32, i32* @x.317
  %60 = load i32, i32* @y.318
  %61 = add i32 %59, 895316874
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 895316874
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1166921560, i32 -1916240095
  store i32 %73, i32* %22
  br label %311

; <label>:74:                                     ; preds = %23
  store i32 900586781, i32* %22
  br label %311

; <label>:75:                                     ; preds = %23
  %76 = load i32, i32* @x.317
  %77 = load i32, i32* @y.318
  %78 = add i32 %76, -1500866010
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, -1500866010
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 -1005694885, i32 220933282
  store i32 %102, i32* %22
  br label %311

; <label>:103:                                    ; preds = %23
  %104 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %105 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %104, i32 0, i32 0
  %106 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %105, align 8
  %107 = bitcast %"struct.std::__detail::_Hash_node_base"* %106 to %"struct.std::__detail::_Hash_node.48"*
  store %"struct.std::__detail::_Hash_node.48"* %107, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %108 = load i32, i32* @x.317
  %109 = load i32, i32* @y.318
  %110 = sub i32 %108, -1627350351
  %111 = sub i32 %110, 1
  %112 = add i32 %111, -1627350351
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1295633124, i32 220933282
  store i32 %134, i32* %22
  br label %311

; <label>:135:                                    ; preds = %23
  store i32 -905778442, i32* %22
  br label %311

; <label>:136:                                    ; preds = %23
  %137 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %138 = bitcast %"class.std::_Hashtable"* %137 to %"struct.std::__detail::_Hashtable_base"*
  %139 = load %class.Pos*, %class.Pos** %10, align 8
  %140 = load i64, i64* %11, align 8
  %141 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %142 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::__detail::_Hashtable_base"* %138, %class.Pos* dereferenceable(16) %139, i64 %140, %"struct.std::__detail::_Hash_node.48"* %141)
  %143 = select i1 %142, i32 -280837194, i32 612821821
  store i32 %143, i32* %22
  br label %311

; <label>:144:                                    ; preds = %23
  %145 = load i32, i32* @x.317
  %146 = load i32, i32* @y.318
  %147 = add i32 %145, 852162463
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 852162463
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 -197532606, i32 -1191590002
  store i32 %159, i32* %22
  br label %311

; <label>:160:                                    ; preds = %23
  %161 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %161, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  %162 = load i32, i32* @x.317
  %163 = load i32, i32* @y.318
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  %175 = select i1 %173, i32 2086049326, i32 -1191590002
  store i32 %175, i32* %22
  br label %311

; <label>:176:                                    ; preds = %23
  store i32 900586781, i32* %22
  br label %311

; <label>:177:                                    ; preds = %23
  %178 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %179 = bitcast %"struct.std::__detail::_Hash_node.48"* %178 to %"struct.std::__detail::_Hash_node_base"*
  %180 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %179, i32 0, i32 0
  %181 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %180, align 8
  %182 = icmp ne %"struct.std::__detail::_Hash_node_base"* %181, null
  %183 = select i1 %182, i32 2140403702, i32 -495989947
  store i32 %183, i32* %22
  br label %311

; <label>:184:                                    ; preds = %23
  %185 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %186 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.48"* %185) #3
  %187 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %188 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNSC_10_Hash_nodeISA_Lb1EEE(%"class.std::_Hashtable"* %187, %"struct.std::__detail::_Hash_node.48"* %186) #3
  %189 = load i64, i64* %9, align 8
  %190 = icmp ne i64 %188, %189
  %191 = select i1 %190, i32 -495989947, i32 -488308490
  store i32 %191, i32* %22
  br label %311

; <label>:192:                                    ; preds = %23
  %193 = load i32, i32* @x.317
  %194 = load i32, i32* @y.318
  %195 = sub i32 0, 1
  %196 = add i32 %193, %195
  %197 = sub i32 %193, 1
  %198 = mul i32 %193, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %194, 10
  %202 = xor i1 %200, true
  %203 = xor i1 %201, true
  %204 = xor i1 false, true
  %205 = and i1 %202, false
  %206 = and i1 %200, %204
  %207 = and i1 %203, false
  %208 = and i1 %201, %204
  %209 = or i1 %205, %206
  %210 = or i1 %207, %208
  %211 = xor i1 %209, %210
  %212 = or i1 %202, %203
  %213 = xor i1 %212, true
  %214 = or i1 false, %204
  %215 = and i1 %213, %214
  %216 = or i1 %211, %215
  %217 = or i1 %200, %201
  %218 = select i1 %216, i32 390277149, i32 175396266
  store i32 %218, i32* %22
  br label %311

; <label>:219:                                    ; preds = %23
  %220 = load i32, i32* @x.317
  %221 = load i32, i32* @y.318
  %222 = sub i32 %220, 1531240384
  %223 = sub i32 %222, 1
  %224 = add i32 %223, 1531240384
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 false, true
  %233 = and i1 %230, false
  %234 = and i1 %228, %232
  %235 = and i1 %231, false
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 false, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  %246 = select i1 %244, i32 249319036, i32 175396266
  store i32 %246, i32* %22
  br label %311

; <label>:247:                                    ; preds = %23
  store i32 1027115716, i32* %22
  br label %311

; <label>:248:                                    ; preds = %23
  %249 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %250 = bitcast %"struct.std::__detail::_Hash_node.48"* %249 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %250, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store i32 -2018370511, i32* %22
  br label %311

; <label>:251:                                    ; preds = %23
  %252 = load i32, i32* @x.317
  %253 = load i32, i32* @y.318
  %254 = sub i32 0, 1
  %255 = add i32 %252, %254
  %256 = sub i32 %252, 1
  %257 = mul i32 %252, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %253, 10
  %261 = and i1 %259, %260
  %262 = xor i1 %259, %260
  %263 = or i1 %261, %262
  %264 = or i1 %259, %260
  %265 = select i1 %263, i32 1368396699, i32 1772022497
  store i32 %265, i32* %22
  br label %311

; <label>:266:                                    ; preds = %23
  %267 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %268 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.48"* %267) #3
  store %"struct.std::__detail::_Hash_node.48"* %268, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %269 = load i32, i32* @x.317
  %270 = load i32, i32* @y.318
  %271 = sub i32 0, 1
  %272 = add i32 %269, %271
  %273 = sub i32 %269, 1
  %274 = mul i32 %269, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %270, 10
  %278 = xor i1 %276, true
  %279 = xor i1 %277, true
  %280 = xor i1 true, true
  %281 = and i1 %278, true
  %282 = and i1 %276, %280
  %283 = and i1 %279, true
  %284 = and i1 %277, %280
  %285 = or i1 %281, %282
  %286 = or i1 %283, %284
  %287 = xor i1 %285, %286
  %288 = or i1 %278, %279
  %289 = xor i1 %288, true
  %290 = or i1 true, %280
  %291 = and i1 %289, %290
  %292 = or i1 %287, %291
  %293 = or i1 %276, %277
  %294 = select i1 %292, i32 706236811, i32 1772022497
  store i32 %294, i32* %22
  br label %311

; <label>:295:                                    ; preds = %23
  store i32 -905778442, i32* %22
  br label %311

; <label>:296:                                    ; preds = %23
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  store i32 900586781, i32* %22
  br label %311

; <label>:297:                                    ; preds = %23
  %298 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  ret %"struct.std::__detail::_Hash_node_base"* %298

; <label>:299:                                    ; preds = %23
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  store i32 -349328034, i32* %22
  br label %311

; <label>:300:                                    ; preds = %23
  %301 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %302 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %301, i32 0, i32 0
  %303 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %302, align 8
  %304 = bitcast %"struct.std::__detail::_Hash_node_base"* %303 to %"struct.std::__detail::_Hash_node.48"*
  store %"struct.std::__detail::_Hash_node.48"* %304, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  store i32 -1005694885, i32* %22
  br label %311

; <label>:305:                                    ; preds = %23
  %306 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %306, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  store i32 -197532606, i32* %22
  br label %311

; <label>:307:                                    ; preds = %23
  store i32 390277149, i32* %22
  br label %311

; <label>:308:                                    ; preds = %23
  %309 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  %310 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.48"* %309) #3
  store %"struct.std::__detail::_Hash_node.48"* %310, %"struct.std::__detail::_Hash_node.48"** %13, align 8
  store i32 1368396699, i32* %22
  br label %311

; <label>:311:                                    ; preds = %308, %307, %305, %300, %299, %296, %295, %266, %251, %248, %247, %219, %192, %184, %177, %176, %160, %144, %136, %135, %103, %75, %74, %58, %30, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::__detail::_Hashtable_base"*, %class.Pos* dereferenceable(16), i64, %"struct.std::__detail::_Hash_node.48"*) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  %6 = alloca %class.Pos*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %5, align 8
  store %class.Pos* %1, %class.Pos** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"struct.std::__detail::_Hash_node.48"* %3, %"struct.std::__detail::_Hash_node.48"** %8, align 8
  %9 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base"* %9)
  %11 = bitcast %"struct.std::__detail::_Hashtable_base"* %9 to %"struct.std::__detail::_Hash_code_base"*
  %12 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"* %11)
  %13 = load %class.Pos*, %class.Pos** %6, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %8, align 8
  %16 = call zeroext i1 @_ZNSt8__detail13_Equal_helperI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_mLb1EE9_S_equalsERKS8_RKSC_RS3_mPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::equal_to"* dereferenceable(1) %10, %"struct.std::__detail::_Select1st"* dereferenceable(1) %12, %class.Pos* dereferenceable(16) %13, i64 %14, %"struct.std::__detail::_Hash_node.48"* %15)
  ret i1 %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNSC_10_Hash_nodeISA_Lb1EEE(%"class.std::_Hashtable"*, %"struct.std::__detail::_Hash_node.48"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Hashtable"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %3, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  %5 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %3, align 8
  %6 = bitcast %"class.std::_Hashtable"* %5 to %"struct.std::__detail::_Hash_code_base"*
  %7 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  %8 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeISB_Lb1EEEm(%"struct.std::__detail::_Hash_code_base"* %6, %"struct.std::__detail::_Hash_node.48"* %7, i64 %9) #3
  ret i64 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detail13_Equal_helperI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_mLb1EE9_S_equalsERKS8_RKSC_RS3_mPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::equal_to"* dereferenceable(1), %"struct.std::__detail::_Select1st"* dereferenceable(1), %class.Pos* dereferenceable(16), i64, %"struct.std::__detail::_Hash_node.48"*) #0 comdat align 2 {
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"struct.std::equal_to"*, align 8
  %9 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %10 = alloca %class.Pos*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %8, align 8
  store %"struct.std::__detail::_Select1st"* %1, %"struct.std::__detail::_Select1st"** %9, align 8
  store %class.Pos* %2, %class.Pos** %10, align 8
  store i64 %3, i64* %11, align 8
  store %"struct.std::__detail::_Hash_node.48"* %4, %"struct.std::__detail::_Hash_node.48"** %12, align 8
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %7
  %14 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %12, align 8
  %15 = getelementptr inbounds %"struct.std::__detail::_Hash_node.48", %"struct.std::__detail::_Hash_node.48"* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %6
  %17 = alloca i32
  store i32 -2020404669, i32* %17
  %18 = alloca i1
  br label %19

; <label>:19:                                     ; preds = %5, %38
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -2020404669, label %22
    i32 1991460503, label %27
    i32 -1513681025, label %36
  ]

; <label>:21:                                     ; preds = %19
  br label %38

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %7
  %24 = load volatile i64, i64* %6
  %25 = icmp eq i64 %23, %24
  %26 = select i1 %25, i32 1991460503, i32 -1513681025
  store i32 %26, i32* %17
  store i1 false, i1* %18
  br label %38

; <label>:27:                                     ; preds = %19
  %28 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %8, align 8
  %29 = load %class.Pos*, %class.Pos** %10, align 8
  %30 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %9, align 8
  %31 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %12, align 8
  %32 = bitcast %"struct.std::__detail::_Hash_node.48"* %31 to %"struct.std::__detail::_Hash_node_value_base.49"*
  %33 = call dereferenceable(72) %"struct.std::pair.56"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.49"* %32) #3
  %34 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOSE_(%"struct.std::__detail::_Select1st"* %30, %"struct.std::pair.56"* dereferenceable(72) %33)
  %35 = call zeroext i1 @_ZNKSt8equal_toI3PosEclERKS0_S3_(%"struct.std::equal_to"* %28, %class.Pos* dereferenceable(16) %29, %class.Pos* dereferenceable(16) %34)
  store i32 -1513681025, i32* %17
  store i1 %35, i1* %18
  br label %38

; <label>:36:                                     ; preds = %19
  %37 = load i1, i1* %18
  ret i1 %37

; <label>:38:                                     ; preds = %27, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES8_S6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::equal_to"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.325
  %6 = load i32, i32* @y.326
  %7 = sub i32 %5, -142984699
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -142984699
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1654601152, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1654601152, label %19
    i32 1082337710, label %27
    i32 1428778357, label %59
    i32 -89488004, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1082337710, i32 -89488004
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %28, align 8
  %29 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hashtable_base"* %29 to %"struct.std::__detail::_Hashtable_ebo_helper.2"*
  %31 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.2"* dereferenceable(1) %30)
  store %"struct.std::equal_to"* %31, %"struct.std::equal_to"** %2
  %32 = load i32, i32* @x.325
  %33 = load i32, i32* @y.326
  %34 = add i32 %32, 1744709861
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1744709861
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1428778357, i32 -89488004
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::equal_to"*, %"struct.std::equal_to"** %2
  ret %"struct.std::equal_to"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::__detail::_Hashtable_base"*, align 8
  store %"struct.std::__detail::_Hashtable_base"* %0, %"struct.std::__detail::_Hashtable_base"** %62, align 8
  %63 = load %"struct.std::__detail::_Hashtable_base"*, %"struct.std::__detail::_Hashtable_base"** %62, align 8
  %64 = bitcast %"struct.std::__detail::_Hashtable_base"* %63 to %"struct.std::__detail::_Hashtable_ebo_helper.2"*
  %65 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.2"* dereferenceable(1) %64)
  store i32 1082337710, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Select1st"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.327
  %6 = load i32, i32* @y.328
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -371574673, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -371574673, label %18
    i32 1988058154, label %26
    i32 999081455, label %45
    i32 -2072562975, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1988058154, i32 -2072562975
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %27, align 8
  %28 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %27, align 8
  %29 = bitcast %"struct.std::__detail::_Hash_code_base"* %28 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %30 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %29)
  store %"struct.std::__detail::_Select1st"* %30, %"struct.std::__detail::_Select1st"** %2
  %31 = load i32, i32* @x.327
  %32 = load i32, i32* @y.328
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 999081455, i32 -2072562975
  store i32 %44, i32* %14
  br label %52

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %2
  ret %"struct.std::__detail::_Select1st"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %48, align 8
  %49 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %48, align 8
  %50 = bitcast %"struct.std::__detail::_Hash_code_base"* %49 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %51 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %50)
  store i32 1988058154, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt8equal_toI3PosEclERKS0_S3_(%"struct.std::equal_to"*, %class.Pos* dereferenceable(16), %class.Pos* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.329
  %8 = load i32, i32* @y.330
  %9 = sub i32 %7, -664950706
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -664950706
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -625506432, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %78
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -625506432, label %21
    i32 1443123717, label %29
    i32 -446810741, label %60
    i32 819828307, label %62
  ]

; <label>:20:                                     ; preds = %18
  br label %78

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1443123717, i32 819828307
  store i32 %28, i32* %17
  br label %78

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::equal_to"*, align 8
  %31 = alloca %class.Pos*, align 8
  %32 = alloca %class.Pos*, align 8
  %33 = alloca %class.Pos, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %30, align 8
  store %class.Pos* %1, %class.Pos** %31, align 8
  store %class.Pos* %2, %class.Pos** %32, align 8
  %34 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %30, align 8
  %35 = load %class.Pos*, %class.Pos** %31, align 8
  %36 = load %class.Pos*, %class.Pos** %32, align 8
  %37 = bitcast %class.Pos* %33 to i8*
  %38 = bitcast %class.Pos* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 16, i32 8, i1 false)
  %39 = bitcast %class.Pos* %33 to { i64, i64 }*
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = call zeroext i1 @_ZNK3PoseqES_(%class.Pos* %35, i64 %41, i64 %43)
  store i1 %44, i1* %4
  %45 = load i32, i32* @x.329
  %46 = load i32, i32* @y.330
  %47 = add i32 %45, 1348206430
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1348206430
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -446810741, i32 819828307
  store i32 %59, i32* %17
  br label %78

; <label>:60:                                     ; preds = %18
  %61 = load volatile i1, i1* %4
  ret i1 %61

; <label>:62:                                     ; preds = %18
  %63 = alloca %"struct.std::equal_to"*, align 8
  %64 = alloca %class.Pos*, align 8
  %65 = alloca %class.Pos*, align 8
  %66 = alloca %class.Pos, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %63, align 8
  store %class.Pos* %1, %class.Pos** %64, align 8
  store %class.Pos* %2, %class.Pos** %65, align 8
  %67 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %63, align 8
  %68 = load %class.Pos*, %class.Pos** %64, align 8
  %69 = load %class.Pos*, %class.Pos** %65, align 8
  %70 = bitcast %class.Pos* %66 to i8*
  %71 = bitcast %class.Pos* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 16, i32 8, i1 false)
  %72 = bitcast %class.Pos* %66 to { i64, i64 }*
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %72, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %72, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = call zeroext i1 @_ZNK3PoseqES_(%class.Pos* %68, i64 %74, i64 %76)
  store i32 1443123717, i32* %17
  br label %78

; <label>:78:                                     ; preds = %62, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOSE_(%"struct.std::__detail::_Select1st"*, %"struct.std::pair.56"* dereferenceable(72)) #5 comdat align 2 {
  %3 = alloca %class.Pos*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.331
  %7 = load i32, i32* @y.332
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 768639340, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 768639340, label %19
    i32 -1168062689, label %39
    i32 141331625, label %61
    i32 1662318629, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1168062689, i32 1662318629
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %41 = alloca %"struct.std::pair.56"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %40, align 8
  store %"struct.std::pair.56"* %1, %"struct.std::pair.56"** %41, align 8
  %42 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %40, align 8
  %43 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %41, align 8
  %44 = call dereferenceable(72) %"struct.std::pair.56"* @_ZSt7forwardIRSt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEOT_RNSt16remove_referenceISC_E4typeE(%"struct.std::pair.56"* dereferenceable(72) %43) #3
  %45 = call dereferenceable(16) %class.Pos* @_ZSt3getILm0EK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERSD_(%"struct.std::pair.56"* dereferenceable(72) %44) #3
  store %class.Pos* %45, %class.Pos** %3
  %46 = load i32, i32* @x.331
  %47 = load i32, i32* @y.332
  %48 = sub i32 %46, -740814458
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -740814458
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 141331625, i32 1662318629
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %class.Pos*, %class.Pos** %3
  ret %class.Pos* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %65 = alloca %"struct.std::pair.56"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %64, align 8
  store %"struct.std::pair.56"* %1, %"struct.std::pair.56"** %65, align 8
  %66 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %64, align 8
  %67 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %65, align 8
  %68 = call dereferenceable(72) %"struct.std::pair.56"* @_ZSt7forwardIRSt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEOT_RNSt16remove_referenceISC_E4typeE(%"struct.std::pair.56"* dereferenceable(72) %67) #3
  %69 = call dereferenceable(16) %class.Pos* @_ZSt3getILm0EK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERSD_(%"struct.std::pair.56"* dereferenceable(72) %68) #3
  store i32 -1168062689, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt3getILm0EK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERSD_(%"struct.std::pair.56"* dereferenceable(72)) #5 comdat {
  %2 = alloca %"struct.std::pair.56"*, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %2, align 8
  %3 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %2, align 8
  %4 = call dereferenceable(16) %class.Pos* @_ZNSt10__pair_getILm0EE5__getIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEERT_RSt4pairISB_T0_E(%"struct.std::pair.56"* dereferenceable(72) %3) #3
  ret %class.Pos* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %"struct.std::pair.56"* @_ZSt7forwardIRSt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEOT_RNSt16remove_referenceISC_E4typeE(%"struct.std::pair.56"* dereferenceable(72)) #5 comdat {
  %2 = alloca %"struct.std::pair.56"*, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %2, align 8
  %3 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %2, align 8
  ret %"struct.std::pair.56"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt10__pair_getILm0EE5__getIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEERT_RSt4pairISB_T0_E(%"struct.std::pair.56"* dereferenceable(72)) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.56"*, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %2, align 8
  %3 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %3, i32 0, i32 0
  ret %class.Pos* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.2"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::equal_to"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.339
  %6 = load i32, i32* @y.340
  %7 = sub i32 %5, -1727895322
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1727895322
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1839014324, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1839014324, label %19
    i32 -1721135622, label %39
    i32 -1581510344, label %70
    i32 1228558440, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1721135622, i32 1228558440
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.2"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.2"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.2"** %40, align 8
  %41 = load %"struct.std::__detail::_Hashtable_ebo_helper.2"*, %"struct.std::__detail::_Hashtable_ebo_helper.2"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.2"* %41 to %"struct.std::equal_to"*
  store %"struct.std::equal_to"* %42, %"struct.std::equal_to"** %2
  %43 = load i32, i32* @x.339
  %44 = load i32, i32* @y.340
  %45 = sub i32 %43, -269233488
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -269233488
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1581510344, i32 1228558440
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"struct.std::equal_to"*, %"struct.std::equal_to"** %2
  ret %"struct.std::equal_to"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.2"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.2"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.2"** %73, align 8
  %74 = load %"struct.std::__detail::_Hashtable_ebo_helper.2"*, %"struct.std::__detail::_Hashtable_ebo_helper.2"** %73, align 8
  %75 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.2"* %74 to %"struct.std::equal_to"*
  store i32 -1721135622, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Select1st"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.341
  %6 = load i32, i32* @y.342
  %7 = sub i32 %5, 510686050
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 510686050
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1162704080, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1162704080, label %19
    i32 -681355356, label %27
    i32 -786051717, label %46
    i32 -1315408721, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -681355356, i32 -1315408721
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %28, align 8
  %29 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %29 to %"struct.std::__detail::_Select1st"*
  store %"struct.std::__detail::_Select1st"* %30, %"struct.std::__detail::_Select1st"** %2
  %31 = load i32, i32* @x.341
  %32 = load i32, i32* @y.342
  %33 = sub i32 %31, -1772713471
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1772713471
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -786051717, i32 -1315408721
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %2
  ret %"struct.std::__detail::_Select1st"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %49, align 8
  %50 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %49, align 8
  %51 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %50 to %"struct.std::__detail::_Select1st"*
  store i32 -681355356, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeISB_Lb1EEEm(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node.48"*, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.343
  %5 = load i32, i32* @y.344
  %6 = add i32 %4, 1683045403
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1683045403
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %72

; <label>:30:                                     ; preds = %3, %72
  %31 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %32 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %33 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %31, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %32, align 8
  store i64 %2, i64* %33, align 8
  %34 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %31, align 8
  %35 = load i32, i32* @x.343
  %36 = load i32, i32* @y.344
  %37 = add i32 %35, -1575727581
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1575727581
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %72

; <label>:61:                                     ; preds = %30
  %62 = invoke dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base"* %34)
          to label %63 unwind label %69

; <label>:63:                                     ; preds = %61
  %64 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %32, align 8
  %65 = getelementptr inbounds %"struct.std::__detail::_Hash_node.48", %"struct.std::__detail::_Hash_node.48"* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %33, align 8
  %68 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %62, i64 %66, i64 %67) #3
  ret i64 %68

; <label>:69:                                     ; preds = %61
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  call void @__clang_call_terminate(i8* %71) #9
  unreachable

; <label>:72:                                     ; preds = %30, %3
  %73 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %74 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %75 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %73, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %74, align 8
  store i64 %2, i64* %75, align 8
  %76 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %73, align 8
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE8allocateERSE_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::__detail::_Hash_node.48"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"struct.std::__detail::_Hash_node.48"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEC2Ev(%"struct.std::__detail::_Hash_node.48"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"* %0, %"struct.std::__detail::_Hash_node.48"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node.48"* %3 to %"struct.std::__detail::_Hash_node_value_base.49"*
  call void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEEC2Ev(%"struct.std::__detail::_Hash_node_value_base.49"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIK3PosSt13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_(%"class.std::allocator.53"* dereferenceable(1), %"struct.std::pair.56"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.53"*, align 8
  %7 = alloca %"struct.std::pair.56"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.57"*, align 8
  store %"class.std::allocator.53"* %0, %"class.std::allocator.53"** %6, align 8
  store %"struct.std::pair.56"* %1, %"struct.std::pair.56"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.57"* %4, %"class.std::tuple.57"** %10, align 8
  %11 = load %"class.std::allocator.53"*, %"class.std::allocator.53"** %6, align 8
  %12 = bitcast %"class.std::allocator.53"* %11 to %"class.__gnu_cxx::new_allocator.54"*
  %13 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::tuple"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.54"* %12, %"struct.std::pair.56"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple"* dereferenceable(8) %17, %"class.std::tuple.57"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"struct.std::piecewise_construct_t"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.351
  %6 = load i32, i32* @y.352
  %7 = sub i32 %5, -1078595498
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1078595498
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 370336258, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 370336258, label %19
    i32 -531144869, label %39
    i32 399408947, label %56
    i32 1232929872, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -531144869, i32 1232929872
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %40, align 8
  %41 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %40, align 8
  store %"struct.std::piecewise_construct_t"* %41, %"struct.std::piecewise_construct_t"** %2
  %42 = load i32, i32* @x.351
  %43 = load i32, i32* @y.352
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 399408947, i32 1232929872
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %2
  ret %"struct.std::piecewise_construct_t"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %59, align 8
  %60 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %59, align 8
  store i32 -531144869, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::tuple"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.353
  %6 = load i32, i32* @y.354
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1200088801, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1200088801, label %18
    i32 -1330007036, label %26
    i32 901340204, label %43
    i32 -1778683644, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1330007036, i32 -1778683644
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %27, align 8
  %28 = load %"class.std::tuple"*, %"class.std::tuple"** %27, align 8
  store %"class.std::tuple"* %28, %"class.std::tuple"** %2
  %29 = load i32, i32* @x.353
  %30 = load i32, i32* @y.354
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 901340204, i32 -1778683644
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %44

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %46, align 8
  %47 = load %"class.std::tuple"*, %"class.std::tuple"** %46, align 8
  store i32 -1330007036, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::tuple.57"*, align 8
  store %"class.std::tuple.57"* %0, %"class.std::tuple.57"** %2, align 8
  %3 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %2, align 8
  ret %"class.std::tuple.57"* %3
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.48"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 215460529, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 215460529, label %16
    i32 -346265640, label %21
    i32 -185193637, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -346265640, i32 -185193637
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 88
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::__detail::_Hash_node.48"*
  ret %"struct.std::__detail::_Hash_node.48"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS4_St4hashIS4_ESt8equal_toIS4_ESaIS4_EEELb1EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.359
  %5 = load i32, i32* @y.360
  %6 = add i32 %4, -1941435481
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1941435481
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 281159897, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 281159897, label %18
    i32 -373011473, label %26
    i32 94201211, label %44
    i32 -56600411, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -373011473, i32 -56600411
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.359
  %30 = load i32, i32* @y.360
  %31 = sub i32 %29, 123485419
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 123485419
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 94201211, i32 -56600411
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret i64 209622091746699450

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %46, align 8
  store i32 -373011473, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #10

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEEC2Ev(%"struct.std::__detail::_Hash_node_value_base.49"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base.49"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base.49"* %0, %"struct.std::__detail::_Hash_node_value_base.49"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base.49"*, %"struct.std::__detail::_Hash_node_value_base.49"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node_value_base.49"* %3 to %"struct.std::__detail::_Hash_node_base"*
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %4) #3
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base.49", %"struct.std::__detail::_Hash_node_value_base.49"* %3, i32 0, i32 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.54"*, %"struct.std::pair.56"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.54"*, align 8
  %7 = alloca %"struct.std::pair.56"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.57"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple", align 8
  %13 = alloca %"class.std::tuple.57", align 1
  store %"class.__gnu_cxx::new_allocator.54"* %0, %"class.__gnu_cxx::new_allocator.54"** %6, align 8
  store %"struct.std::pair.56"* %1, %"struct.std::pair.56"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.57"* %4, %"class.std::tuple.57"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.54"*, %"class.__gnu_cxx::new_allocator.54"** %6, align 8
  %15 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %7, align 8
  %16 = bitcast %"struct.std::pair.56"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.56"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::tuple"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRK3PosEEC2EOS3_(%"class.std::tuple"* %12, %"class.std::tuple"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %25, i32 0, i32 0
  %27 = load %class.Pos*, %class.Pos** %26, align 8
  call void @_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEC2IJRS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE(%"struct.std::pair.56"* %17, %class.Pos* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJRK3PosEEC2EOS3_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJRK3PosEEC2EOS3_(%"struct.std::_Tuple_impl"* %6, %"struct.std::_Tuple_impl"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEC2IJRS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESD_IJDpT0_EE(%"struct.std::pair.56"*, %class.Pos*) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.367
  %6 = load i32, i32* @y.368
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1650147458, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1650147458, label %18
    i32 1862155020, label %26
    i32 -19680806, label %51
    i32 155709905, label %52
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1862155020, i32 155709905
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::piecewise_construct_t", align 1
  %28 = alloca %"class.std::tuple", align 8
  %29 = alloca %"class.std::tuple.57", align 1
  %30 = alloca %"struct.std::pair.56"*, align 8
  %31 = alloca %"struct.std::_Index_tuple", align 1
  %32 = alloca %"struct.std::_Index_tuple.60", align 1
  %33 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %28, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %34, i32 0, i32 0
  store %class.Pos* %1, %class.Pos** %35, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %30, align 8
  %36 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %30, align 8
  call void @_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEC2IJRS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE(%"struct.std::pair.56"* %36, %"class.std::tuple"* dereferenceable(8) %28, %"class.std::tuple.57"* dereferenceable(1) %29)
  %37 = load i32, i32* @x.367
  %38 = load i32, i32* @y.368
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -19680806, i32 155709905
  store i32 %50, i32* %14
  br label %63

; <label>:51:                                     ; preds = %15
  ret void

; <label>:52:                                     ; preds = %15
  %53 = alloca %"struct.std::piecewise_construct_t", align 1
  %54 = alloca %"class.std::tuple", align 8
  %55 = alloca %"class.std::tuple.57", align 1
  %56 = alloca %"struct.std::pair.56"*, align 8
  %57 = alloca %"struct.std::_Index_tuple", align 1
  %58 = alloca %"struct.std::_Index_tuple.60", align 1
  %59 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %54, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %60, i32 0, i32 0
  store %class.Pos* %1, %class.Pos** %61, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %56, align 8
  %62 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %56, align 8
  call void @_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEC2IJRS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE(%"struct.std::pair.56"* %62, %"class.std::tuple"* dereferenceable(8) %54, %"class.std::tuple.57"* dereferenceable(1) %55)
  store i32 1862155020, i32* %14
  br label %63

; <label>:63:                                     ; preds = %52, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRK3PosEEC2EOS3_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(8)) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.369
  %4 = load i32, i32* @y.370
  %5 = sub i32 %3, 1611377072
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1611377072
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %56

; <label>:29:                                     ; preds = %2, %56
  %30 = alloca %"struct.std::_Tuple_impl"*, align 8
  %31 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %30, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %31, align 8
  %32 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %30, align 8
  %33 = bitcast %"struct.std::_Tuple_impl"* %32 to %"struct.std::_Head_base"*
  %34 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %31, align 8
  %35 = call dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJRK3PosEE7_M_headERS3_(%"struct.std::_Tuple_impl"* dereferenceable(8) %34) #3
  %36 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %35) #3
  %37 = load i32, i32* @x.369
  %38 = load i32, i32* @y.370
  %39 = sub i32 %37, 242174828
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 242174828
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %56

; <label>:51:                                     ; preds = %29
  invoke void @_ZNSt10_Head_baseILm0ERK3PosLb0EEC2ES2_(%"struct.std::_Head_base"* %33, %class.Pos* dereferenceable(16) %36)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %51
  ret void

; <label>:53:                                     ; preds = %51
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #9
  unreachable

; <label>:56:                                     ; preds = %29, %2
  %57 = alloca %"struct.std::_Tuple_impl"*, align 8
  %58 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %57, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %58, align 8
  %59 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %57, align 8
  %60 = bitcast %"struct.std::_Tuple_impl"* %59 to %"struct.std::_Head_base"*
  %61 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %58, align 8
  %62 = call dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJRK3PosEE7_M_headERS3_(%"struct.std::_Tuple_impl"* dereferenceable(8) %61) #3
  %63 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %62) #3
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16)) #5 comdat {
  %2 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %2, align 8
  %3 = load %class.Pos*, %class.Pos** %2, align 8
  ret %class.Pos* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJRK3PosEE7_M_headERS3_(%"struct.std::_Tuple_impl"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Head_base"*
  %5 = call dereferenceable(16) %class.Pos* @_ZNSt10_Head_baseILm0ERK3PosLb0EE7_M_headERS3_(%"struct.std::_Head_base"* dereferenceable(8) %4) #3
  ret %class.Pos* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERK3PosLb0EEC2ES2_(%"struct.std::_Head_base"*, %class.Pos* dereferenceable(16)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  store %class.Pos* %7, %class.Pos** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt10_Head_baseILm0ERK3PosLb0EE7_M_headERS3_(%"struct.std::_Head_base"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  %5 = load %class.Pos*, %class.Pos** %4, align 8
  ret %class.Pos* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIK3PosSt13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEEC2IJRS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERSC_IJDpT1_EESt12_Index_tupleIJXspT0_EEESL_IJXspT2_EEE(%"struct.std::pair.56"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.60", align 1
  %6 = alloca %"struct.std::pair.56"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.57"*, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.57"* %2, %"class.std::tuple.57"** %8, align 8
  %9 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %12 = call dereferenceable(16) %class.Pos* @_ZSt3getILm0EJRK3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_(%"class.std::tuple"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %12) #3
  %14 = bitcast %class.Pos* %10 to i8*
  %15 = bitcast %class.Pos* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false)
  %16 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %9, i32 0, i32 1
  %17 = bitcast %"class.std::unordered_set"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 56, i32 8, i1 false)
  call void @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EEC2Ev(%"class.std::unordered_set"* %16) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt3getILm0EJRK3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_(%"class.std::tuple"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to %"struct.std::_Tuple_impl"*
  %5 = call dereferenceable(16) %class.Pos* @_ZSt12__get_helperILm0ERK3PosJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %4) #3
  ret %class.Pos* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13unordered_setI3PosSt4hashIS0_ESt8equal_toIS0_ESaIS0_EEC2Ev(%"class.std::unordered_set"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::unordered_set"*, align 8
  store %"class.std::unordered_set"* %0, %"class.std::unordered_set"** %2, align 8
  %3 = load %"class.std::unordered_set"*, %"class.std::unordered_set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::unordered_set", %"class.std::unordered_set"* %3, i32 0, i32 0
  call void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEEC2Ev(%"class.std::_Hashtable.4"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt12__get_helperILm0ERK3PosJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8)) #5 comdat {
  %2 = alloca %class.Pos*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.385
  %6 = load i32, i32* @y.386
  %7 = add i32 %5, 1576769051
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1576769051
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1680235026, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1680235026, label %19
    i32 1993132466, label %27
    i32 317729594, label %45
    i32 674973196, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1993132466, i32 674973196
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %28, align 8
  %30 = call dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJRK3PosEE7_M_headERS3_(%"struct.std::_Tuple_impl"* dereferenceable(8) %29) #3
  store %class.Pos* %30, %class.Pos** %2
  %31 = load i32, i32* @x.385
  %32 = load i32, i32* @y.386
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 317729594, i32 674973196
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile %class.Pos*, %class.Pos** %2
  ret %class.Pos* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %48, align 8
  %49 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %48, align 8
  %50 = call dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJRK3PosEE7_M_headERS3_(%"struct.std::_Tuple_impl"* dereferenceable(8) %49) #3
  store i32 1993132466, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEEC2Ev(%"class.std::_Hashtable.4"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %2, align 8
  %3 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %2, align 8
  %4 = bitcast %"class.std::_Hashtable.4"* %3 to %"struct.std::__detail::_Hashtable_base.5"*
  %5 = bitcast %"class.std::_Hashtable.4"* %3 to %"struct.std::__detail::_Map_base.8"*
  %6 = bitcast %"class.std::_Hashtable.4"* %3 to %"struct.std::__detail::_Insert.9"*
  %7 = bitcast %"class.std::_Hashtable.4"* %3 to %"struct.std::__detail::_Rehash_base.11"*
  %8 = bitcast %"class.std::_Hashtable.4"* %3 to %"struct.std::__detail::_Equality.12"*
  %9 = bitcast %"class.std::_Hashtable.4"* %3 to %"struct.std::__detail::_Hashtable_alloc.13"*
  call void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc.13"* %9) #3
  %10 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %11, %"struct.std::__detail::_Hash_node_base"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 1
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 2
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %13) #3
  %14 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 4
  call void @_ZNSt8__detail20_Prime_rehash_policyC2Ef(%"struct.std::__detail::_Prime_rehash_policy"* %15, float 1.000000e+00) #3
  %16 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %3, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEEC2Ev(%"struct.std::__detail::_Hashtable_alloc.13"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.389
  %5 = load i32, i32* @y.390
  %6 = sub i32 %4, -1705952438
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1705952438
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1078269373, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1078269373, label %18
    i32 -32151601, label %38
    i32 862028958, label %56
    i32 2077010953, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -32151601, i32 2077010953
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %39, align 8
  %40 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %39, align 8
  %41 = bitcast %"struct.std::__detail::_Hashtable_alloc.13"* %40 to %"struct.std::__detail::_Hashtable_ebo_helper.14"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.14"* %41) #3
  %42 = load i32, i32* @x.389
  %43 = load i32, i32* @y.390
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 862028958, i32 2077010953
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %58, align 8
  %59 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %58, align 8
  %60 = bitcast %"struct.std::__detail::_Hashtable_alloc.13"* %59 to %"struct.std::__detail::_Hashtable_ebo_helper.14"*
  call void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.14"* %60) #3
  store i32 -32151601, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeI3PosLb1EEEELb1EEC2Ev(%"struct.std::__detail::_Hashtable_ebo_helper.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.14"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.14"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.14"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.14"*, %"struct.std::__detail::_Hashtable_ebo_helper.14"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.14"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaINSt8__detail10_Hash_nodeI3PosLb1EEEEC2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt8__detail10_Hash_nodeI3PosLb1EEEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.395
  %5 = load i32, i32* @y.396
  %6 = sub i32 %4, 888271784
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 888271784
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1637394728, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1637394728, label %18
    i32 518591541, label %38
    i32 1306670312, label %68
    i32 938756303, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 518591541, i32 938756303
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %41 = load i32, i32* @x.395
  %42 = load i32, i32* @y.396
  %43 = sub i32 %41, -2091424674
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -2091424674
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1306670312, i32 938756303
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %70, align 8
  store i32 518591541, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRK3PosEEC2ES2_(%"struct.std::_Tuple_impl"*, %class.Pos* dereferenceable(16)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  call void @_ZNSt10_Head_baseILm0ERK3PosLb0EEC2ES2_(%"struct.std::_Head_base"* %6, %class.Pos* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %2, align 8
  %3 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

declare { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"*, i64, i64, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable"*, i64, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.401
  %5 = load i32, i32* @y.402
  %6 = add i32 %4, -227049253
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -227049253
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %237

; <label>:18:                                     ; preds = %3, %237
  %19 = alloca %"class.std::_Hashtable"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64*, align 8
  %22 = alloca %"struct.std::integral_constant", align 1
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %19, align 8
  store i64 %1, i64* %20, align 8
  store i64* %2, i64** %21, align 8
  %25 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %19, align 8
  %26 = load i64, i64* %20, align 8
  %27 = load i32, i32* @x.401
  %28 = load i32, i32* @y.402
  %29 = sub i32 %27, 969871904
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 969871904
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %237

; <label>:41:                                     ; preds = %18
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable"* %25, i64 %26)
          to label %42 unwind label %43

; <label>:42:                                     ; preds = %41
  br label %155

; <label>:43:                                     ; preds = %41
  %44 = load i32, i32* @x.401
  %45 = load i32, i32* @y.402
  %46 = sub i32 %44, -1857992161
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1857992161
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %246

; <label>:70:                                     ; preds = %43, %246
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %23, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %24, align 4
  %74 = load i32, i32* @x.401
  %75 = load i32, i32* @y.402
  %76 = add i32 %74, -995475158
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -995475158
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %246

; <label>:100:                                    ; preds = %70
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i32, i32* @x.401
  %103 = load i32, i32* @y.402
  %104 = add i32 %102, -687109629
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -687109629
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %250

; <label>:128:                                    ; preds = %101, %250
  %129 = load i8*, i8** %23, align 8
  %130 = call i8* @__cxa_begin_catch(i8* %129) #3
  %131 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %25, i32 0, i32 4
  %132 = load i64*, i64** %21, align 8
  %133 = load i64, i64* %132, align 8
  %134 = load i32, i32* @x.401
  %135 = load i32, i32* @y.402
  %136 = add i32 %134, 1942172695
  %137 = sub i32 %136, 1
  %138 = sub i32 %137, 1942172695
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  br i1 %146, label %148, label %250

; <label>:148:                                    ; preds = %128
  invoke void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"* %131, i64 %133)
          to label %149 unwind label %150

; <label>:149:                                    ; preds = %148
  invoke void @__cxa_rethrow() #12
          to label %206 unwind label %150

; <label>:150:                                    ; preds = %149, %148
  %151 = landingpad { i8*, i32 }
          cleanup
  %152 = extractvalue { i8*, i32 } %151, 0
  store i8* %152, i8** %23, align 8
  %153 = extractvalue { i8*, i32 } %151, 1
  store i32 %153, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %154 unwind label %203

; <label>:154:                                    ; preds = %150
  br label %156

; <label>:155:                                    ; preds = %42
  ret void

; <label>:156:                                    ; preds = %154
  %157 = load i32, i32* @x.401
  %158 = load i32, i32* @y.402
  %159 = add i32 %157, 704028896
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, 704028896
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %256

; <label>:171:                                    ; preds = %156, %256
  %172 = load i8*, i8** %23, align 8
  %173 = load i32, i32* %24, align 4
  %174 = insertvalue { i8*, i32 } undef, i8* %172, 0
  %175 = insertvalue { i8*, i32 } %174, i32 %173, 1
  %176 = load i32, i32* @x.401
  %177 = load i32, i32* @y.402
  %178 = add i32 %176, -894161469
  %179 = sub i32 %178, 1
  %180 = sub i32 %179, -894161469
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 true, true
  %189 = and i1 %186, true
  %190 = and i1 %184, %188
  %191 = and i1 %187, true
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 true, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  br i1 %200, label %202, label %256

; <label>:202:                                    ; preds = %171
  resume { i8*, i32 } %175

; <label>:203:                                    ; preds = %150
  %204 = landingpad { i8*, i32 }
          catch i8* null
  %205 = extractvalue { i8*, i32 } %204, 0
  call void @__clang_call_terminate(i8* %205) #9
  unreachable

; <label>:206:                                    ; preds = %149
  %207 = load i32, i32* @x.401
  %208 = load i32, i32* @y.402
  %209 = sub i32 %207, -1892670582
  %210 = sub i32 %209, 1
  %211 = add i32 %210, -1892670582
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  br i1 %219, label %221, label %261

; <label>:221:                                    ; preds = %206, %261
  %222 = load i32, i32* @x.401
  %223 = load i32, i32* @y.402
  %224 = sub i32 %222, 1123799205
  %225 = sub i32 %224, 1
  %226 = add i32 %225, 1123799205
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %261

; <label>:236:                                    ; preds = %221
  unreachable

; <label>:237:                                    ; preds = %18, %3
  %238 = alloca %"class.std::_Hashtable"*, align 8
  %239 = alloca i64, align 8
  %240 = alloca i64*, align 8
  %241 = alloca %"struct.std::integral_constant", align 1
  %242 = alloca i8*
  %243 = alloca i32
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %238, align 8
  store i64 %1, i64* %239, align 8
  store i64* %2, i64** %240, align 8
  %244 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %238, align 8
  %245 = load i64, i64* %239, align 8
  br label %18

; <label>:246:                                    ; preds = %70, %43
  %247 = landingpad { i8*, i32 }
          catch i8* null
  %248 = extractvalue { i8*, i32 } %247, 0
  store i8* %248, i8** %23, align 8
  %249 = extractvalue { i8*, i32 } %247, 1
  store i32 %249, i32* %24, align 4
  br label %70

; <label>:250:                                    ; preds = %128, %101
  %251 = load i8*, i8** %23, align 8
  %252 = call i8* @__cxa_begin_catch(i8* %251) #3
  %253 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %25, i32 0, i32 4
  %254 = load i64*, i64** %21, align 8
  %255 = load i64, i64* %254, align 8
  br label %128

; <label>:256:                                    ; preds = %171, %156
  %257 = load i8*, i8** %23, align 8
  %258 = load i32, i32* %24, align 4
  %259 = insertvalue { i8*, i32 } undef, i8* %257, 0
  %260 = insertvalue { i8*, i32 } %259, i32 %258, 1
  br label %171

; <label>:261:                                    ; preds = %221, %206
  br label %221
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Select1st"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.403
  %6 = load i32, i32* @y.404
  %7 = sub i32 %5, -65514340
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -65514340
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 687457545, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 687457545, label %19
    i32 1845383548, label %39
    i32 112366973, label %71
    i32 -927510173, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1845383548, i32 -927510173
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hash_code_base"* %41 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %43 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %42)
  store %"struct.std::__detail::_Select1st"* %43, %"struct.std::__detail::_Select1st"** %2
  %44 = load i32, i32* @x.403
  %45 = load i32, i32* @y.404
  %46 = add i32 %44, 1525230198
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1525230198
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 112366973, i32 -927510173
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %2
  ret %"struct.std::__detail::_Select1st"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %74, align 8
  %75 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %74, align 8
  %76 = bitcast %"struct.std::__detail::_Hash_code_base"* %75 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %77 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %76)
  store i32 1845383548, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeISB_Lb1EEEm(%"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_node.48"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.405
  %7 = load i32, i32* @y.406
  %8 = add i32 %6, -392608535
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -392608535
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -826801415, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -826801415, label %20
    i32 -1940406156, label %40
    i32 160459026, label %62
    i32 -521457657, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1940406156, i32 -521457657
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %42 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %43 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %41, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %41, align 8
  %45 = load i64, i64* %43, align 8
  %46 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %42, align 8
  %47 = getelementptr inbounds %"struct.std::__detail::_Hash_node.48", %"struct.std::__detail::_Hash_node.48"* %46, i32 0, i32 1
  store i64 %45, i64* %47, align 8
  %48 = load i32, i32* @x.405
  %49 = load i32, i32* @y.406
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 160459026, i32 -521457657
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"struct.std::__detail::_Hash_code_base"*, align 8
  %65 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %66 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base"* %0, %"struct.std::__detail::_Hash_code_base"** %64, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"struct.std::__detail::_Hash_code_base"*, %"struct.std::__detail::_Hash_code_base"** %64, align 8
  %68 = load i64, i64* %66, align 8
  %69 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %65, align 8
  %70 = getelementptr inbounds %"struct.std::__detail::_Hash_node.48", %"struct.std::__detail::_Hash_node.48"* %69, i32 0, i32 1
  store i64 %68, i64* %70, align 8
  store i32 -1940406156, i32* %16
  br label %71

; <label>:71:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSC_10_Hash_nodeISA_Lb1EEE(%"class.std::_Hashtable"*, i64, %"struct.std::__detail::_Hash_node.48"*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::_Hashtable"*
  %7 = alloca %"struct.std::__detail::_Hash_node.48"**
  %8 = alloca i64*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.407
  %12 = load i32, i32* @y.408
  %13 = add i32 %11, 592436764
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 592436764
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 61942957, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %223
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 61942957, label %25
    i32 -1623490676, label %45
    i32 -1120044055, label %86
    i32 1821107635, label %89
    i32 220957190, label %114
    i32 1186566831, label %129
    i32 1226205503, label %165
    i32 1059034904, label %168
    i32 -1705133423, label %181
    i32 -555555978, label %190
    i32 -1474281271, label %191
    i32 1325325186, label %202
  ]

; <label>:24:                                     ; preds = %22
  br label %223

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -1623490676, i32 -1474281271
  store i32 %44, i32* %21
  br label %223

; <label>:45:                                     ; preds = %22
  %46 = alloca %"class.std::_Hashtable"*, align 8
  %47 = alloca i64, align 8
  store i64* %47, i64** %8
  %48 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Hash_node.48"** %48, %"struct.std::__detail::_Hash_node.48"*** %7
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %46, align 8
  %49 = load volatile i64*, i64** %8
  store i64 %1, i64* %49, align 8
  %50 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  store %"struct.std::__detail::_Hash_node.48"* %2, %"struct.std::__detail::_Hash_node.48"** %50, align 8
  %51 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %46, align 8
  store %"class.std::_Hashtable"* %51, %"class.std::_Hashtable"** %6
  %52 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %53 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %52, i32 0, i32 0
  %54 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %53, align 8
  %55 = load volatile i64*, i64** %8
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %54, i64 %56
  %58 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %57, align 8
  %59 = icmp ne %"struct.std::__detail::_Hash_node_base"* %58, null
  store i1 %59, i1* %5
  %60 = load i32, i32* @x.407
  %61 = load i32, i32* @y.408
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1120044055, i32 -1474281271
  store i32 %85, i32* %21
  br label %223

; <label>:86:                                     ; preds = %22
  %87 = load volatile i1, i1* %5
  %88 = select i1 %87, i32 1821107635, i32 220957190
  store i32 %88, i32* %21
  br label %223

; <label>:89:                                     ; preds = %22
  %90 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %91 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %90, i32 0, i32 0
  %92 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %91, align 8
  %93 = load volatile i64*, i64** %8
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %92, i64 %94
  %96 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %95, align 8
  %97 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %96, i32 0, i32 0
  %98 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %97, align 8
  %99 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %100 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %99, align 8
  %101 = bitcast %"struct.std::__detail::_Hash_node.48"* %100 to %"struct.std::__detail::_Hash_node_base"*
  %102 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %101, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %98, %"struct.std::__detail::_Hash_node_base"** %102, align 8
  %103 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %104 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %103, align 8
  %105 = bitcast %"struct.std::__detail::_Hash_node.48"* %104 to %"struct.std::__detail::_Hash_node_base"*
  %106 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %107 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %106, i32 0, i32 0
  %108 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %107, align 8
  %109 = load volatile i64*, i64** %8
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %108, i64 %110
  %112 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %112, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %105, %"struct.std::__detail::_Hash_node_base"** %113, align 8
  store i32 -555555978, i32* %21
  br label %223

; <label>:114:                                    ; preds = %22
  %115 = load i32, i32* @x.407
  %116 = load i32, i32* @y.408
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 1186566831, i32 1325325186
  store i32 %128, i32* %21
  br label %223

; <label>:129:                                    ; preds = %22
  %130 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %131 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %130, i32 0, i32 2
  %132 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %131, i32 0, i32 0
  %133 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %132, align 8
  %134 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %135 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %134, align 8
  %136 = bitcast %"struct.std::__detail::_Hash_node.48"* %135 to %"struct.std::__detail::_Hash_node_base"*
  %137 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %136, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %133, %"struct.std::__detail::_Hash_node_base"** %137, align 8
  %138 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %139 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %138, align 8
  %140 = bitcast %"struct.std::__detail::_Hash_node.48"* %139 to %"struct.std::__detail::_Hash_node_base"*
  %141 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %142 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %141, i32 0, i32 2
  %143 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %142, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %140, %"struct.std::__detail::_Hash_node_base"** %143, align 8
  %144 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %145 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %144, align 8
  %146 = bitcast %"struct.std::__detail::_Hash_node.48"* %145 to %"struct.std::__detail::_Hash_node_base"*
  %147 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %146, i32 0, i32 0
  %148 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %147, align 8
  %149 = icmp ne %"struct.std::__detail::_Hash_node_base"* %148, null
  store i1 %149, i1* %4
  %150 = load i32, i32* @x.407
  %151 = load i32, i32* @y.408
  %152 = add i32 %150, -1832462597
  %153 = sub i32 %152, 1
  %154 = sub i32 %153, -1832462597
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  %164 = select i1 %162, i32 1226205503, i32 1325325186
  store i32 %164, i32* %21
  br label %223

; <label>:165:                                    ; preds = %22
  %166 = load volatile i1, i1* %4
  %167 = select i1 %166, i32 1059034904, i32 -1705133423
  store i32 %167, i32* %21
  br label %223

; <label>:168:                                    ; preds = %22
  %169 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %170 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %169, align 8
  %171 = bitcast %"struct.std::__detail::_Hash_node.48"* %170 to %"struct.std::__detail::_Hash_node_base"*
  %172 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %173 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %172, i32 0, i32 0
  %174 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %173, align 8
  %175 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %176 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %175, align 8
  %177 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.48"* %176) #3
  %178 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %179 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNSC_10_Hash_nodeISA_Lb1EEE(%"class.std::_Hashtable"* %178, %"struct.std::__detail::_Hash_node.48"* %177) #3
  %180 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %174, i64 %179
  store %"struct.std::__detail::_Hash_node_base"* %171, %"struct.std::__detail::_Hash_node_base"** %180, align 8
  store i32 -1705133423, i32* %21
  br label %223

; <label>:181:                                    ; preds = %22
  %182 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %183 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %182, i32 0, i32 2
  %184 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %185 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %184, i32 0, i32 0
  %186 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %185, align 8
  %187 = load volatile i64*, i64** %8
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %186, i64 %188
  store %"struct.std::__detail::_Hash_node_base"* %183, %"struct.std::__detail::_Hash_node_base"** %189, align 8
  store i32 -555555978, i32* %21
  br label %223

; <label>:190:                                    ; preds = %22
  ret void

; <label>:191:                                    ; preds = %22
  %192 = alloca %"class.std::_Hashtable"*, align 8
  %193 = alloca i64, align 8
  %194 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %192, align 8
  store i64 %1, i64* %193, align 8
  store %"struct.std::__detail::_Hash_node.48"* %2, %"struct.std::__detail::_Hash_node.48"** %194, align 8
  %195 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %192, align 8
  %196 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %195, i32 0, i32 0
  %197 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %196, align 8
  %198 = load i64, i64* %193, align 8
  %199 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %197, i64 %198
  %200 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %199, align 8
  %201 = icmp ne %"struct.std::__detail::_Hash_node_base"* %200, null
  store i32 -1623490676, i32* %21
  br label %223

; <label>:202:                                    ; preds = %22
  %203 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %204 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %203, i32 0, i32 2
  %205 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %204, i32 0, i32 0
  %206 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %205, align 8
  %207 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %208 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %207, align 8
  %209 = bitcast %"struct.std::__detail::_Hash_node.48"* %208 to %"struct.std::__detail::_Hash_node_base"*
  %210 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %209, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %206, %"struct.std::__detail::_Hash_node_base"** %210, align 8
  %211 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %212 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %211, align 8
  %213 = bitcast %"struct.std::__detail::_Hash_node.48"* %212 to %"struct.std::__detail::_Hash_node_base"*
  %214 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6
  %215 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %214, i32 0, i32 2
  %216 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %215, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %213, %"struct.std::__detail::_Hash_node_base"** %216, align 8
  %217 = load volatile %"struct.std::__detail::_Hash_node.48"**, %"struct.std::__detail::_Hash_node.48"*** %7
  %218 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %217, align 8
  %219 = bitcast %"struct.std::__detail::_Hash_node.48"* %218 to %"struct.std::__detail::_Hash_node_base"*
  %220 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %219, i32 0, i32 0
  %221 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %220, align 8
  %222 = icmp ne %"struct.std::__detail::_Hash_node_base"* %221, null
  store i32 1186566831, i32* %21
  br label %223

; <label>:223:                                    ; preds = %202, %191, %181, %168, %165, %129, %114, %89, %86, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail14_Node_iteratorISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::__detail::_Node_iterator.58"*, %"struct.std::__detail::_Hash_node.48"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.409
  %6 = load i32, i32* @y.410
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 828833377, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 828833377, label %18
    i32 -1397823298, label %26
    i32 -442619277, label %59
    i32 1508931947, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1397823298, i32 1508931947
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::__detail::_Node_iterator.58"*, align 8
  %28 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Node_iterator.58"* %0, %"struct.std::__detail::_Node_iterator.58"** %27, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %28, align 8
  %29 = load %"struct.std::__detail::_Node_iterator.58"*, %"struct.std::__detail::_Node_iterator.58"** %27, align 8
  %30 = bitcast %"struct.std::__detail::_Node_iterator.58"* %29 to %"struct.std::__detail::_Node_iterator_base.59"*
  %31 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %28, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::__detail::_Node_iterator_base.59"* %30, %"struct.std::__detail::_Hash_node.48"* %31) #3
  %32 = load i32, i32* @x.409
  %33 = load i32, i32* @y.410
  %34 = add i32 %32, -352145970
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -352145970
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -442619277, i32 1508931947
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::__detail::_Node_iterator.58"*, align 8
  %62 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Node_iterator.58"* %0, %"struct.std::__detail::_Node_iterator.58"** %61, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %62, align 8
  %63 = load %"struct.std::__detail::_Node_iterator.58"*, %"struct.std::__detail::_Node_iterator.58"** %61, align 8
  %64 = bitcast %"struct.std::__detail::_Node_iterator.58"* %63 to %"struct.std::__detail::_Node_iterator_base.59"*
  %65 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %62, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::__detail::_Node_iterator_base.59"* %64, %"struct.std::__detail::_Hash_node.48"* %65) #3
  store i32 -1397823298, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Hashtable"*
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"class.std::_Hashtable"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %6, align 8
  store i64 %1, i64* %7, align 8
  %13 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %6, align 8
  store %"class.std::_Hashtable"* %13, %"class.std::_Hashtable"** %4
  %14 = load i64, i64* %7, align 8
  %15 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %16 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"* %15, i64 %14)
  store %"struct.std::__detail::_Hash_node_base"** %16, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %17 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %18 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable"* %17)
  store %"struct.std::__detail::_Hash_node.48"* %18, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %19 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %20 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %19, i32 0, i32 2
  %21 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %20, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %21, align 8
  store i64 0, i64* %10, align 8
  %22 = alloca i32
  store i32 -237103568, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %241
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -237103568, label %26
    i32 -473104657, label %53
    i32 -656338629, label %83
    i32 -538677961, label %86
    i32 -748776666, label %100
    i32 -1229687559, label %124
    i32 -202880170, label %130
    i32 -328071356, label %146
    i32 -1526112150, label %162
    i32 -1491610125, label %163
    i32 464427345, label %180
    i32 2090643682, label %208
    i32 -203708192, label %225
    i32 -814100029, label %226
    i32 -1269282953, label %234
    i32 -1122647184, label %237
    i32 521897160, label %239
  ]

; <label>:25:                                     ; preds = %23
  br label %241

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.411
  %28 = load i32, i32* @y.412
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -473104657, i32 -1269282953
  store i32 %52, i32* %22
  br label %241

; <label>:53:                                     ; preds = %23
  %54 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %55 = icmp ne %"struct.std::__detail::_Hash_node.48"* %54, null
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.411
  %57 = load i32, i32* @y.412
  %58 = sub i32 %56, -1043991788
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -1043991788
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -656338629, i32 -1269282953
  store i32 %82, i32* %22
  br label %241

; <label>:83:                                     ; preds = %23
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 -538677961, i32 -814100029
  store i32 %85, i32* %22
  br label %241

; <label>:86:                                     ; preds = %23
  %87 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %88 = call %"struct.std::__detail::_Hash_node.48"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.48"* %87) #3
  store %"struct.std::__detail::_Hash_node.48"* %88, %"struct.std::__detail::_Hash_node.48"** %11, align 8
  %89 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %90 = bitcast %"class.std::_Hashtable"* %89 to %"struct.std::__detail::_Hash_code_base"*
  %91 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %92 = load i64, i64* %7, align 8
  %93 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_St13unordered_setIS1_St4hashIS1_ESt8equal_toIS1_ESaIS1_EEENS_10_Select1stES6_NS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeISB_Lb1EEEm(%"struct.std::__detail::_Hash_code_base"* %90, %"struct.std::__detail::_Hash_node.48"* %91, i64 %92) #3
  store i64 %93, i64* %12, align 8
  %94 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %95 = load i64, i64* %12, align 8
  %96 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %94, i64 %95
  %97 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %96, align 8
  %98 = icmp ne %"struct.std::__detail::_Hash_node_base"* %97, null
  %99 = select i1 %98, i32 -1491610125, i32 -748776666
  store i32 %99, i32* %22
  br label %241

; <label>:100:                                    ; preds = %23
  %101 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %102 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %101, i32 0, i32 2
  %103 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %102, i32 0, i32 0
  %104 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %103, align 8
  %105 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %106 = bitcast %"struct.std::__detail::_Hash_node.48"* %105 to %"struct.std::__detail::_Hash_node_base"*
  %107 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %106, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %104, %"struct.std::__detail::_Hash_node_base"** %107, align 8
  %108 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %109 = bitcast %"struct.std::__detail::_Hash_node.48"* %108 to %"struct.std::__detail::_Hash_node_base"*
  %110 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %111 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %110, i32 0, i32 2
  %112 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %111, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %109, %"struct.std::__detail::_Hash_node_base"** %112, align 8
  %113 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %114 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %113, i32 0, i32 2
  %115 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %116 = load i64, i64* %12, align 8
  %117 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %115, i64 %116
  store %"struct.std::__detail::_Hash_node_base"* %114, %"struct.std::__detail::_Hash_node_base"** %117, align 8
  %118 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %119 = bitcast %"struct.std::__detail::_Hash_node.48"* %118 to %"struct.std::__detail::_Hash_node_base"*
  %120 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %119, i32 0, i32 0
  %121 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %120, align 8
  %122 = icmp ne %"struct.std::__detail::_Hash_node_base"* %121, null
  %123 = select i1 %122, i32 -1229687559, i32 -202880170
  store i32 %123, i32* %22
  br label %241

; <label>:124:                                    ; preds = %23
  %125 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %126 = bitcast %"struct.std::__detail::_Hash_node.48"* %125 to %"struct.std::__detail::_Hash_node_base"*
  %127 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %128 = load i64, i64* %10, align 8
  %129 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %127, i64 %128
  store %"struct.std::__detail::_Hash_node_base"* %126, %"struct.std::__detail::_Hash_node_base"** %129, align 8
  store i32 -202880170, i32* %22
  br label %241

; <label>:130:                                    ; preds = %23
  %131 = load i32, i32* @x.411
  %132 = load i32, i32* @y.412
  %133 = sub i32 %131, -595170363
  %134 = sub i32 %133, 1
  %135 = add i32 %134, -595170363
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  %145 = select i1 %143, i32 -328071356, i32 -1122647184
  store i32 %145, i32* %22
  br label %241

; <label>:146:                                    ; preds = %23
  %147 = load i64, i64* %12, align 8
  store i64 %147, i64* %10, align 8
  %148 = load i32, i32* @x.411
  %149 = load i32, i32* @y.412
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  %161 = select i1 %159, i32 -1526112150, i32 -1122647184
  store i32 %161, i32* %22
  br label %241

; <label>:162:                                    ; preds = %23
  store i32 464427345, i32* %22
  br label %241

; <label>:163:                                    ; preds = %23
  %164 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %165 = load i64, i64* %12, align 8
  %166 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %164, i64 %165
  %167 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %166, align 8
  %168 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %167, i32 0, i32 0
  %169 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %168, align 8
  %170 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %171 = bitcast %"struct.std::__detail::_Hash_node.48"* %170 to %"struct.std::__detail::_Hash_node_base"*
  %172 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %171, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %169, %"struct.std::__detail::_Hash_node_base"** %172, align 8
  %173 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %174 = bitcast %"struct.std::__detail::_Hash_node.48"* %173 to %"struct.std::__detail::_Hash_node_base"*
  %175 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %176 = load i64, i64* %12, align 8
  %177 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %175, i64 %176
  %178 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %178, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %174, %"struct.std::__detail::_Hash_node_base"** %179, align 8
  store i32 464427345, i32* %22
  br label %241

; <label>:180:                                    ; preds = %23
  %181 = load i32, i32* @x.411
  %182 = load i32, i32* @y.412
  %183 = add i32 %181, -1684870214
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -1684870214
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 true, true
  %194 = and i1 %191, true
  %195 = and i1 %189, %193
  %196 = and i1 %192, true
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 true, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 2090643682, i32 521897160
  store i32 %207, i32* %22
  br label %241

; <label>:208:                                    ; preds = %23
  %209 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %11, align 8
  store %"struct.std::__detail::_Hash_node.48"* %209, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %210 = load i32, i32* @x.411
  %211 = load i32, i32* @y.412
  %212 = add i32 %210, 501498112
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, 501498112
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  %224 = select i1 %222, i32 -203708192, i32 521897160
  store i32 %224, i32* %22
  br label %241

; <label>:225:                                    ; preds = %23
  store i32 -237103568, i32* %22
  br label %241

; <label>:226:                                    ; preds = %23
  %227 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable"* %227)
  %228 = load i64, i64* %7, align 8
  %229 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %230 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %229, i32 0, i32 1
  store i64 %228, i64* %230, align 8
  %231 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %232 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %233 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %232, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %231, %"struct.std::__detail::_Hash_node_base"*** %233, align 8
  ret void

; <label>:234:                                    ; preds = %23
  %235 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  %236 = icmp ne %"struct.std::__detail::_Hash_node.48"* %235, null
  store i32 -473104657, i32* %22
  br label %241

; <label>:237:                                    ; preds = %23
  %238 = load i64, i64* %12, align 8
  store i64 %238, i64* %10, align 8
  store i32 -328071356, i32* %22
  br label %241

; <label>:239:                                    ; preds = %23
  %240 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %11, align 8
  store %"struct.std::__detail::_Hash_node.48"* %240, %"struct.std::__detail::_Hash_node.48"** %9, align 8
  store i32 2090643682, i32* %22
  br label %241

; <label>:241:                                    ; preds = %239, %237, %234, %225, %208, %180, %163, %162, %146, %130, %124, %100, %86, %83, %53, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Prime_rehash_policy"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::__detail::_Prime_rehash_policy"* %0, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::__detail::_Prime_rehash_policy"*, %"struct.std::__detail::_Prime_rehash_policy"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = getelementptr inbounds %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Prime_rehash_policy"* %5, i32 0, i32 1
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableI3PosSt4pairIKS0_St13unordered_setIS0_St4hashIS0_ESt8equal_toIS0_ESaIS0_EEESaISA_ENSt8__detail10_Select1stES7_S5_NSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Hashtable"*
  %5 = alloca i64*
  %6 = alloca %"struct.std::__detail::_Hash_node_base"***
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.415
  %10 = load i32, i32* @y.416
  %11 = add i32 %9, 1168874114
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 1168874114
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1038054903, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %167
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1038054903, label %23
    i32 1527228613, label %43
    i32 2125065637, label %79
    i32 349253597, label %82
    i32 599873634, label %88
    i32 1028971127, label %115
    i32 -200204419, label %149
    i32 -909299111, label %150
    i32 1631428750, label %153
    i32 2046211688, label %160
  ]

; <label>:22:                                     ; preds = %20
  br label %167

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1527228613, i32 1631428750
  store i32 %42, i32* %19
  br label %167

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"*** %44, %"struct.std::__detail::_Hash_node_base"**** %6
  %45 = alloca %"class.std::_Hashtable"*, align 8
  %46 = alloca i64, align 8
  store i64* %46, i64** %5
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %45, align 8
  %47 = load volatile i64*, i64** %5
  store i64 %1, i64* %47, align 8
  %48 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %45, align 8
  store %"class.std::_Hashtable"* %48, %"class.std::_Hashtable"** %4
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 1
  store i1 %51, i1* %3
  %52 = load i32, i32* @x.415
  %53 = load i32, i32* @y.416
  %54 = add i32 %52, -912058522
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -912058522
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 2125065637, i32 1631428750
  store i32 %78, i32* %19
  br label %167

; <label>:79:                                     ; preds = %20
  %80 = load volatile i1, i1* %3
  %81 = select i1 %80, i32 349253597, i32 599873634
  store i32 %81, i32* %19
  br label %167

; <label>:82:                                     ; preds = %20
  %83 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %84 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %83, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %84, align 8
  %85 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %86 = getelementptr inbounds %"class.std::_Hashtable", %"class.std::_Hashtable"* %85, i32 0, i32 5
  %87 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %6
  store %"struct.std::__detail::_Hash_node_base"** %86, %"struct.std::__detail::_Hash_node_base"*** %87, align 8
  store i32 -909299111, i32* %19
  br label %167

; <label>:88:                                     ; preds = %20
  %89 = load i32, i32* @x.415
  %90 = load i32, i32* @y.416
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 1028971127, i32 2046211688
  store i32 %114, i32* %19
  br label %167

; <label>:115:                                    ; preds = %20
  %116 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %117 = bitcast %"class.std::_Hashtable"* %116 to %"struct.std::__detail::_Hashtable_alloc"*
  %118 = load volatile i64*, i64** %5
  %119 = load i64, i64* %118, align 8
  %120 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"* %117, i64 %119)
  %121 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %6
  store %"struct.std::__detail::_Hash_node_base"** %120, %"struct.std::__detail::_Hash_node_base"*** %121, align 8
  %122 = load i32, i32* @x.415
  %123 = load i32, i32* @y.416
  %124 = add i32 %122, 1586174586
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, 1586174586
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  %148 = select i1 %146, i32 -200204419, i32 2046211688
  store i32 %148, i32* %19
  br label %167

; <label>:149:                                    ; preds = %20
  store i32 -909299111, i32* %19
  br label %167

; <label>:150:                                    ; preds = %20
  %151 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %6
  %152 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %151, align 8
  ret %"struct.std::__detail::_Hash_node_base"** %152

; <label>:153:                                    ; preds = %20
  %154 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %155 = alloca %"class.std::_Hashtable"*, align 8
  %156 = alloca i64, align 8
  store %"class.std::_Hashtable"* %0, %"class.std::_Hashtable"** %155, align 8
  store i64 %1, i64* %156, align 8
  %157 = load %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %155, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %158, 1
  store i32 1527228613, i32* %19
  br label %167

; <label>:160:                                    ; preds = %20
  %161 = load volatile %"class.std::_Hashtable"*, %"class.std::_Hashtable"** %4
  %162 = bitcast %"class.std::_Hashtable"* %161 to %"struct.std::__detail::_Hashtable_alloc"*
  %163 = load volatile i64*, i64** %5
  %164 = load i64, i64* %163, align 8
  %165 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"* %162, i64 %164)
  %166 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %6
  store %"struct.std::__detail::_Hash_node_base"** %165, %"struct.std::__detail::_Hash_node_base"*** %166, align 8
  store i32 1028971127, i32* %19
  br label %167

; <label>:167:                                    ; preds = %160, %153, %149, %115, %88, %82, %79, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.417
  %4 = load i32, i32* @y.418
  %5 = add i32 %3, -1435642983
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1435642983
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %127

; <label>:29:                                     ; preds = %2, %127
  %30 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.45", align 1
  %33 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %34 = alloca i8*
  %35 = alloca i32
  %36 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %30, align 8
  store i64 %1, i64* %31, align 8
  %37 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %30, align 8
  %38 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %37)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS6_St4hashIS6_ESt8equal_toIS6_ESaIS6_EEELb1EEEEERKSaIT_E(%"class.std::allocator.45"* %32, %"class.std::allocator"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %31, align 8
  %40 = load i32, i32* @x.417
  %41 = load i32, i32* @y.418
  %42 = add i32 %40, -838559424
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -838559424
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %127

; <label>:66:                                     ; preds = %29
  %67 = invoke %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.45"* dereferenceable(1) %32, i64 %39)
          to label %68 unwind label %76

; <label>:68:                                     ; preds = %66
  store %"struct.std::__detail::_Hash_node_base"** %67, %"struct.std::__detail::_Hash_node_base"*** %33, align 8
  %69 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %33, align 8
  %70 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %69) #3
  store %"struct.std::__detail::_Hash_node_base"** %70, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %71 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %72 = bitcast %"struct.std::__detail::_Hash_node_base"** %71 to i8*
  %73 = load i64, i64* %31, align 8
  %74 = mul i64 %73, 8
  call void @llvm.memset.p0i8.i64(i8* %72, i8 0, i64 %74, i32 8, i1 false)
  %75 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  ret %"struct.std::__detail::_Hash_node_base"** %75

; <label>:76:                                     ; preds = %66
  %77 = load i32, i32* @x.417
  %78 = load i32, i32* @y.418
  %79 = sub i32 %77, -88146739
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -88146739
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %138

; <label>:103:                                    ; preds = %76, %138
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %34, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %35, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  %107 = load i32, i32* @x.417
  %108 = load i32, i32* @y.418
  %109 = add i32 %107, 17071540
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 17071540
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %138

; <label>:121:                                    ; preds = %103
  br label %122

; <label>:122:                                    ; preds = %121
  %123 = load i8*, i8** %34, align 8
  %124 = load i32, i32* %35, align 4
  %125 = insertvalue { i8*, i32 } undef, i8* %123, 0
  %126 = insertvalue { i8*, i32 } %125, i32 %124, 1
  resume { i8*, i32 } %126

; <label>:127:                                    ; preds = %29, %2
  %128 = alloca %"struct.std::__detail::_Hashtable_alloc"*, align 8
  %129 = alloca i64, align 8
  %130 = alloca %"class.std::allocator.45", align 1
  %131 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %132 = alloca i8*
  %133 = alloca i32
  %134 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc"* %0, %"struct.std::__detail::_Hashtable_alloc"** %128, align 8
  store i64 %1, i64* %129, align 8
  %135 = load %"struct.std::__detail::_Hashtable_alloc"*, %"struct.std::__detail::_Hashtable_alloc"** %128, align 8
  %136 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS3_St4hashIS3_ESt8equal_toIS3_ESaIS3_EEELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc"* %135)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosSt13unordered_setIS6_St4hashIS6_ESt8equal_toIS6_ESaIS6_EEELb1EEEEERKSaIT_E(%"class.std::allocator.45"* %130, %"class.std::allocator"* dereferenceable(1) %136) #3
  %137 = load i64, i64* %129, align 8
  br label %29

; <label>:138:                                    ; preds = %103, %76
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %34, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %35, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  br label %103
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.45"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.45"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %3, align 8
  %6 = bitcast %"class.std::allocator.45"* %5 to %"class.__gnu_cxx::new_allocator.46"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::__detail::_Hash_node_base"** @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.46"* %6, i64 %7, i8* null)
  ret %"struct.std::__detail::_Hash_node_base"** %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.46"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"**
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.46"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -623107673, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %114
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -623107673, label %17
    i32 780650015, label %22
    i32 533092710, label %23
    i32 -552030029, label %51
    i32 -663357834, label %82
    i32 1297639344, label %84
  ]

; <label>:16:                                     ; preds = %14
  br label %114

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 780650015, i32 533092710
  store i32 %21, i32* %13
  br label %114

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.421
  %25 = load i32, i32* @y.422
  %26 = sub i32 %24, 187591804
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 187591804
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -552030029, i32 1297639344
  store i32 %50, i32* %13
  br label %114

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 8
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to %"struct.std::__detail::_Hash_node_base"**
  store %"struct.std::__detail::_Hash_node_base"** %55, %"struct.std::__detail::_Hash_node_base"*** %4
  %56 = load i32, i32* @x.421
  %57 = load i32, i32* @y.422
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -663357834, i32 1297639344
  store i32 %81, i32* %13
  br label %114

; <label>:82:                                     ; preds = %14
  %83 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %4
  ret %"struct.std::__detail::_Hash_node_base"** %83

; <label>:84:                                     ; preds = %14
  %85 = load i64, i64* %8, align 8
  %86 = shl i64 %85, 8
  %87 = sub i64 0, 8
  %88 = add i64 %85, %87
  %89 = sub i64 %85, 8
  %90 = mul i64 %88, 8
  %91 = add i64 %85, 672947337245045312
  %92 = sub i64 %91, 8
  %93 = sub i64 %92, 672947337245045312
  %94 = sub i64 %85, 8
  %95 = mul i64 %93, 8
  %96 = shl i64 %85, 8
  %97 = add i64 0, -4384441822871147988
  %98 = sub i64 %97, %85
  %99 = sub i64 %98, -4384441822871147988
  %100 = sub i64 0, %85
  %101 = sub i64 0, 8
  %102 = sub i64 %99, %101
  %103 = add i64 %99, 8
  %104 = sub i64 %85, -5592601173948060986
  %105 = sub i64 %104, 8
  %106 = add i64 %105, -5592601173948060986
  %107 = sub i64 %85, 8
  %108 = mul i64 %106, 8
  %109 = shl i64 %85, 8
  %110 = shl i64 %85, 8
  %111 = mul i64 %85, 8
  %112 = call i8* @_Znwm(i64 %111)
  %113 = bitcast i8* %112 to %"struct.std::__detail::_Hash_node_base"**
  store i32 -552030029, i32* %13
  br label %114

; <label>:114:                                    ; preds = %84, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.46"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %0, %"class.__gnu_cxx::new_allocator.46"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Select1st"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.425
  %6 = load i32, i32* @y.426
  %7 = sub i32 %5, -1135099551
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1135099551
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 173187592, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 173187592, label %19
    i32 1180155725, label %39
    i32 1660961358, label %69
    i32 -1230867594, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1180155725, i32 -1230867594
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %40, align 8
  %41 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %41 to %"struct.std::__detail::_Select1st"*
  store %"struct.std::__detail::_Select1st"* %42, %"struct.std::__detail::_Select1st"** %2
  %43 = load i32, i32* @x.425
  %44 = load i32, i32* @y.426
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1660961358, i32 -1230867594
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %2
  ret %"struct.std::__detail::_Select1st"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::__detail::_Hashtable_ebo_helper"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper"* %0, %"struct.std::__detail::_Hashtable_ebo_helper"** %72, align 8
  %73 = load %"struct.std::__detail::_Hashtable_ebo_helper"*, %"struct.std::__detail::_Hashtable_ebo_helper"** %72, align 8
  %74 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper"* %73 to %"struct.std::__detail::_Select1st"*
  store i32 1180155725, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosSt13unordered_setIS2_St4hashIS2_ESt8equal_toIS2_ESaIS2_EEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE(%"struct.std::__detail::_Node_iterator_base.59"*, %"struct.std::__detail::_Hash_node.48"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Node_iterator_base.59"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node.48"*, align 8
  store %"struct.std::__detail::_Node_iterator_base.59"* %0, %"struct.std::__detail::_Node_iterator_base.59"** %3, align 8
  store %"struct.std::__detail::_Hash_node.48"* %1, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator_base.59"*, %"struct.std::__detail::_Node_iterator_base.59"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.59", %"struct.std::__detail::_Node_iterator_base.59"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node.48"*, %"struct.std::__detail::_Hash_node.48"** %4, align 8
  store %"struct.std::__detail::_Hash_node.48"* %7, %"struct.std::__detail::_Hash_node.48"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt8__detail12_Insert_baseI3PosS1_SaIS1_ENS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb1ELb1EEEE6insertERKS1_(%"struct.std::__detail::_Insert_base.10"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca %"struct.std::__detail::_Insert_base.10"*, align 8
  %5 = alloca %class.Pos*, align 8
  %6 = alloca %"class.std::_Hashtable.4"*, align 8
  %7 = alloca %"struct.std::__detail::_AllocNode", align 8
  %8 = alloca %"struct.std::integral_constant", align 1
  store %"struct.std::__detail::_Insert_base.10"* %0, %"struct.std::__detail::_Insert_base.10"** %4, align 8
  store %class.Pos* %1, %class.Pos** %5, align 8
  %9 = load %"struct.std::__detail::_Insert_base.10"*, %"struct.std::__detail::_Insert_base.10"** %4, align 8
  %10 = call dereferenceable(56) %"class.std::_Hashtable.4"* @_ZNSt8__detail12_Insert_baseI3PosS1_SaIS1_ENS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb1ELb1EEEE20_M_conjure_hashtableEv(%"struct.std::__detail::_Insert_base.10"* %9)
  store %"class.std::_Hashtable.4"* %10, %"class.std::_Hashtable.4"** %6, align 8
  %11 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %6, align 8
  %12 = bitcast %"class.std::_Hashtable.4"* %11 to %"struct.std::__detail::_Hashtable_alloc.13"*
  call void @_ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeI3PosLb1EEEEEC2ERNS_16_Hashtable_allocIS4_EE(%"struct.std::__detail::_AllocNode"* %7, %"struct.std::__detail::_Hashtable_alloc.13"* dereferenceable(1) %12)
  %13 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %6, align 8
  %14 = load %class.Pos*, %class.Pos** %5, align 8
  %15 = call { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_insertIRKS0_NS2_10_AllocNodeISaINS2_10_Hash_nodeIS0_Lb1EEEEEEEESt4pairINS2_14_Node_iteratorIS0_Lb1ELb1EEEbEOT_RKT0_St17integral_constantIbLb1EE(%"class.std::_Hashtable.4"* %13, %class.Pos* dereferenceable(16) %14, %"struct.std::__detail::_AllocNode"* dereferenceable(8) %7)
  %16 = bitcast %"struct.std::pair"* %3 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %17 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %16, i32 0, i32 0
  %18 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %15, 0
  store %"struct.std::__detail::_Hash_node"* %18, %"struct.std::__detail::_Hash_node"** %17, align 8
  %19 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %16, i32 0, i32 1
  %20 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %15, 1
  store i8 %20, i8* %19, align 8
  %21 = bitcast %"struct.std::pair"* %3 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %22 = load { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %21, align 8
  ret { %"struct.std::__detail::_Hash_node"*, i8 } %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::_Hashtable.4"* @_ZNSt8__detail12_Insert_baseI3PosS1_SaIS1_ENS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb1ELb1EEEE20_M_conjure_hashtableEv(%"struct.std::__detail::_Insert_base.10"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Hashtable.4"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.431
  %6 = load i32, i32* @y.432
  %7 = add i32 %5, -2135722857
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2135722857
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -488233167, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -488233167, label %19
    i32 812550320, label %27
    i32 1155016588, label %45
    i32 -1348426276, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 812550320, i32 -1348426276
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Insert_base.10"*, align 8
  store %"struct.std::__detail::_Insert_base.10"* %0, %"struct.std::__detail::_Insert_base.10"** %28, align 8
  %29 = load %"struct.std::__detail::_Insert_base.10"*, %"struct.std::__detail::_Insert_base.10"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Insert_base.10"* %29 to %"class.std::_Hashtable.4"*
  store %"class.std::_Hashtable.4"* %30, %"class.std::_Hashtable.4"** %2
  %31 = load i32, i32* @x.431
  %32 = load i32, i32* @y.432
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1155016588, i32 -1348426276
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %2
  ret %"class.std::_Hashtable.4"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::__detail::_Insert_base.10"*, align 8
  store %"struct.std::__detail::_Insert_base.10"* %0, %"struct.std::__detail::_Insert_base.10"** %48, align 8
  %49 = load %"struct.std::__detail::_Insert_base.10"*, %"struct.std::__detail::_Insert_base.10"** %48, align 8
  %50 = bitcast %"struct.std::__detail::_Insert_base.10"* %49 to %"class.std::_Hashtable.4"*
  store i32 812550320, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeI3PosLb1EEEEEC2ERNS_16_Hashtable_allocIS4_EE(%"struct.std::__detail::_AllocNode"*, %"struct.std::__detail::_Hashtable_alloc.13"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_AllocNode"*, align 8
  %4 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  store %"struct.std::__detail::_AllocNode"* %0, %"struct.std::__detail::_AllocNode"** %3, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %1, %"struct.std::__detail::_Hashtable_alloc.13"** %4, align 8
  %5 = load %"struct.std::__detail::_AllocNode"*, %"struct.std::__detail::_AllocNode"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_AllocNode", %"struct.std::__detail::_AllocNode"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %4, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %7, %"struct.std::__detail::_Hashtable_alloc.13"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::__detail::_Hash_node"*, i8 } @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_insertIRKS0_NS2_10_AllocNodeISaINS2_10_Hash_nodeIS0_Lb1EEEEEEEESt4pairINS2_14_Node_iteratorIS0_Lb1ELb1EEEbEOT_RKT0_St17integral_constantIbLb1EE(%"class.std::_Hashtable.4"*, %class.Pos* dereferenceable(16), %"struct.std::__detail::_AllocNode"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node"*
  %5 = alloca %"class.std::_Hashtable.4"*
  %6 = alloca %"struct.std::pair", align 8
  %7 = alloca %"struct.std::integral_constant", align 1
  %8 = alloca %"class.std::_Hashtable.4"*, align 8
  %9 = alloca %class.Pos*, align 8
  %10 = alloca %"struct.std::__detail::_AllocNode"*, align 8
  %11 = alloca %class.Pos*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %15 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %16 = alloca i8, align 1
  %17 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %18 = alloca i8, align 1
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %8, align 8
  store %class.Pos* %1, %class.Pos** %9, align 8
  store %"struct.std::__detail::_AllocNode"* %2, %"struct.std::__detail::_AllocNode"** %10, align 8
  %19 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %8, align 8
  store %"class.std::_Hashtable.4"* %19, %"class.std::_Hashtable.4"** %5
  %20 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %21 = bitcast %"class.std::_Hashtable.4"* %20 to %"struct.std::__detail::_Hash_code_base.6"*
  %22 = call dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.6"* %21)
  %23 = load %class.Pos*, %class.Pos** %9, align 8
  %24 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail9_IdentityclIRK3PosEEOT_S6_(%"struct.std::__detail::_Identity"* %22, %class.Pos* dereferenceable(16) %23)
  store %class.Pos* %24, %class.Pos** %11, align 8
  %25 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %26 = bitcast %"class.std::_Hashtable.4"* %25 to %"struct.std::__detail::_Hash_code_base.6"*
  %27 = load %class.Pos*, %class.Pos** %11, align 8
  %28 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERKS1_(%"struct.std::__detail::_Hash_code_base.6"* %26, %class.Pos* dereferenceable(16) %27)
  store i64 %28, i64* %12, align 8
  %29 = load %class.Pos*, %class.Pos** %11, align 8
  %30 = load i64, i64* %12, align 8
  %31 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %32 = call i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexERKS0_m(%"class.std::_Hashtable.4"* %31, %class.Pos* dereferenceable(16) %29, i64 %30)
  store i64 %32, i64* %13, align 8
  %33 = load i64, i64* %13, align 8
  %34 = load %class.Pos*, %class.Pos** %11, align 8
  %35 = load i64, i64* %12, align 8
  %36 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %37 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE12_M_find_nodeEmRKS0_m(%"class.std::_Hashtable.4"* %36, i64 %33, %class.Pos* dereferenceable(16) %34, i64 %35)
  store %"struct.std::__detail::_Hash_node"* %37, %"struct.std::__detail::_Hash_node"** %14, align 8
  %38 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  store %"struct.std::__detail::_Hash_node"* %38, %"struct.std::__detail::_Hash_node"** %4
  %39 = alloca i32
  store i32 -1673829268, i32* %39
  br label %40

; <label>:40:                                     ; preds = %3, %76
  %41 = load i32, i32* %39
  switch i32 %41, label %42 [
    i32 -1673829268, label %43
    i32 1111336777, label %47
    i32 1167897934, label %55
    i32 -1908075432, label %73
  ]

; <label>:42:                                     ; preds = %40
  br label %76

; <label>:43:                                     ; preds = %40
  %44 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4
  %45 = icmp ne %"struct.std::__detail::_Hash_node"* %44, null
  %46 = select i1 %45, i32 1111336777, i32 1167897934
  store i32 %46, i32* %39
  br label %76

; <label>:47:                                     ; preds = %40
  %48 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  call void @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator"* %15, %"struct.std::__detail::_Hash_node"* %48) #3
  store i8 0, i8* %16, align 1
  %49 = call { %"struct.std::__detail::_Hash_node"*, i8 } @_ZSt9make_pairINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEbESt4pairINSt17__decay_and_stripIT_E6__typeENS5_IT0_E6__typeEEOS6_OS9_(%"struct.std::__detail::_Node_iterator"* dereferenceable(8) %15, i8* dereferenceable(1) %16)
  %50 = bitcast %"struct.std::pair"* %6 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %51 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %50, i32 0, i32 0
  %52 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %49, 0
  store %"struct.std::__detail::_Hash_node"* %52, %"struct.std::__detail::_Hash_node"** %51, align 8
  %53 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %50, i32 0, i32 1
  %54 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %49, 1
  store i8 %54, i8* %53, align 8
  store i32 -1908075432, i32* %39
  br label %76

; <label>:55:                                     ; preds = %40
  %56 = load %"struct.std::__detail::_AllocNode"*, %"struct.std::__detail::_AllocNode"** %10, align 8
  %57 = load %class.Pos*, %class.Pos** %9, align 8
  %58 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %57) #3
  %59 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_AllocNodeISaINS_10_Hash_nodeI3PosLb1EEEEEclIRKS2_EEPS3_OT_(%"struct.std::__detail::_AllocNode"* %56, %class.Pos* dereferenceable(16) %58)
  store %"struct.std::__detail::_Hash_node"* %59, %"struct.std::__detail::_Hash_node"** %14, align 8
  %60 = load i64, i64* %13, align 8
  %61 = load i64, i64* %12, align 8
  %62 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %14, align 8
  %63 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %64 = call %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"* %63, i64 %60, i64 %61, %"struct.std::__detail::_Hash_node"* %62)
  %65 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %17, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %65, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %64, %"struct.std::__detail::_Hash_node"** %66, align 8
  store i8 1, i8* %18, align 1
  %67 = call { %"struct.std::__detail::_Hash_node"*, i8 } @_ZSt9make_pairINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEbESt4pairINSt17__decay_and_stripIT_E6__typeENS5_IT0_E6__typeEEOS6_OS9_(%"struct.std::__detail::_Node_iterator"* dereferenceable(8) %17, i8* dereferenceable(1) %18)
  %68 = bitcast %"struct.std::pair"* %6 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %69 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %68, i32 0, i32 0
  %70 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %67, 0
  store %"struct.std::__detail::_Hash_node"* %70, %"struct.std::__detail::_Hash_node"** %69, align 8
  %71 = getelementptr inbounds { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %68, i32 0, i32 1
  %72 = extractvalue { %"struct.std::__detail::_Hash_node"*, i8 } %67, 1
  store i8 %72, i8* %71, align 8
  store i32 -1908075432, i32* %39
  br label %76

; <label>:73:                                     ; preds = %40
  %74 = bitcast %"struct.std::pair"* %6 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %75 = load { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %74, align 8
  ret { %"struct.std::__detail::_Hash_node"*, i8 } %75

; <label>:76:                                     ; preds = %55, %47, %43, %42
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.6"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base.6"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.7"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Identity"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNKSt8__detail9_IdentityclIRK3PosEEOT_S6_(%"struct.std::__detail::_Identity"*, %class.Pos* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Identity"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_Identity"* %0, %"struct.std::__detail::_Identity"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"struct.std::__detail::_Identity"*, %"struct.std::__detail::_Identity"** %3, align 8
  %6 = load %class.Pos*, %class.Pos** %4, align 8
  %7 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %6) #3
  ret %class.Pos* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERKS1_(%"struct.std::__detail::_Hash_code_base.6"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %3, align 8
  %6 = call dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base.6"* %5)
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  %8 = call i64 @_ZNKSt4hashI3PosEclERKS0_(%"struct.std::hash"* %6, %class.Pos* dereferenceable(16) %7)
  ret i64 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexERKS0_m(%"class.std::_Hashtable.4"*, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %4 = alloca %"class.std::_Hashtable.4"*, align 8
  %5 = alloca %class.Pos*, align 8
  %6 = alloca i64, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %4, align 8
  store %class.Pos* %1, %class.Pos** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4, align 8
  %8 = bitcast %"class.std::_Hashtable.4"* %7 to %"struct.std::__detail::_Hash_code_base.6"*
  %9 = load %class.Pos*, %class.Pos** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKS1_mm(%"struct.std::__detail::_Hash_code_base.6"* %8, %class.Pos* dereferenceable(16) %9, i64 %10, i64 %12)
  ret i64 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE12_M_find_nodeEmRKS0_m(%"class.std::_Hashtable.4"*, i64, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node"*
  %6 = alloca %"struct.std::__detail::_Hash_node_base"*
  %7 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %8 = alloca %"class.std::_Hashtable.4"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %class.Pos*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %class.Pos* %2, %class.Pos** %10, align 8
  store i64 %3, i64* %11, align 8
  %13 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %8, align 8
  %14 = load i64, i64* %9, align 8
  %15 = load %class.Pos*, %class.Pos** %10, align 8
  %16 = load i64, i64* %11, align 8
  %17 = call %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE19_M_find_before_nodeEmRKS0_m(%"class.std::_Hashtable.4"* %13, i64 %14, %class.Pos* dereferenceable(16) %15, i64 %16)
  store %"struct.std::__detail::_Hash_node_base"* %17, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %18 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %18, %"struct.std::__detail::_Hash_node_base"** %6
  %19 = alloca i32
  store i32 1644708914, i32* %19
  br label %20

; <label>:20:                                     ; preds = %4, %125
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1644708914, label %23
    i32 1719885716, label %27
    i32 -441474184, label %32
    i32 -1289041211, label %47
    i32 -861970184, label %63
    i32 1402476850, label %64
    i32 469130125, label %92
    i32 1305923151, label %120
    i32 1486141503, label %122
    i32 1226996380, label %123
  ]

; <label>:22:                                     ; preds = %20
  br label %125

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %6
  %25 = icmp ne %"struct.std::__detail::_Hash_node_base"* %24, null
  %26 = select i1 %25, i32 1719885716, i32 -441474184
  store i32 %26, i32* %19
  br label %125

; <label>:27:                                     ; preds = %20
  %28 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %29 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %28, i32 0, i32 0
  %30 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %29, align 8
  %31 = bitcast %"struct.std::__detail::_Hash_node_base"* %30 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %31, %"struct.std::__detail::_Hash_node"** %7, align 8
  store i32 1402476850, i32* %19
  br label %125

; <label>:32:                                     ; preds = %20
  %33 = load i32, i32* @x.445
  %34 = load i32, i32* @y.446
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1289041211, i32 1486141503
  store i32 %46, i32* %19
  br label %125

; <label>:47:                                     ; preds = %20
  store %"struct.std::__detail::_Hash_node"* null, %"struct.std::__detail::_Hash_node"** %7, align 8
  %48 = load i32, i32* @x.445
  %49 = load i32, i32* @y.446
  %50 = sub i32 %48, 901290735
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 901290735
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -861970184, i32 1486141503
  store i32 %62, i32* %19
  br label %125

; <label>:63:                                     ; preds = %20
  store i32 1402476850, i32* %19
  br label %125

; <label>:64:                                     ; preds = %20
  %65 = load i32, i32* @x.445
  %66 = load i32, i32* @y.446
  %67 = sub i32 %65, 20402179
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 20402179
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 469130125, i32 1226996380
  store i32 %91, i32* %19
  br label %125

; <label>:92:                                     ; preds = %20
  %93 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %7, align 8
  store %"struct.std::__detail::_Hash_node"* %93, %"struct.std::__detail::_Hash_node"** %5
  %94 = load i32, i32* @x.445
  %95 = load i32, i32* @y.446
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 1305923151, i32 1226996380
  store i32 %119, i32* %19
  br label %125

; <label>:120:                                    ; preds = %20
  %121 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5
  ret %"struct.std::__detail::_Hash_node"* %121

; <label>:122:                                    ; preds = %20
  store %"struct.std::__detail::_Hash_node"* null, %"struct.std::__detail::_Hash_node"** %7, align 8
  store i32 -1289041211, i32* %19
  br label %125

; <label>:123:                                    ; preds = %20
  %124 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %7, align 8
  store i32 469130125, i32* %19
  br label %125

; <label>:125:                                    ; preds = %123, %122, %92, %64, %63, %47, %32, %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::__detail::_Hash_node"*, i8 } @_ZSt9make_pairINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEbESt4pairINSt17__decay_and_stripIT_E6__typeENS5_IT0_E6__typeEEOS6_OS9_(%"struct.std::__detail::_Node_iterator"* dereferenceable(8), i8* dereferenceable(1)) #0 comdat {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  %5 = alloca i8*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %4, align 8
  %7 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZSt7forwardINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::__detail::_Node_iterator"* dereferenceable(8) %6) #3
  %8 = load i8*, i8** %5, align 8
  %9 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %8) #3
  call void @_ZNSt4pairINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEbEC2IS3_bvEEOT_OT0_(%"struct.std::pair"* %3, %"struct.std::__detail::_Node_iterator"* dereferenceable(8) %7, i8* dereferenceable(1) %9)
  %10 = bitcast %"struct.std::pair"* %3 to { %"struct.std::__detail::_Hash_node"*, i8 }*
  %11 = load { %"struct.std::__detail::_Hash_node"*, i8 }, { %"struct.std::__detail::_Hash_node"*, i8 }* %10, align 8
  ret { %"struct.std::__detail::_Hash_node"*, i8 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Hash_node"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %3, align 8
  %6 = bitcast %"struct.std::__detail::_Node_iterator"* %5 to %"struct.std::__detail::_Node_iterator_base"*
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseI3PosLb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator_base"* %6, %"struct.std::__detail::_Hash_node"* %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_AllocNodeISaINS_10_Hash_nodeI3PosLb1EEEEEclIRKS2_EEPS3_OT_(%"struct.std::__detail::_AllocNode"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_AllocNode"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_AllocNode"* %0, %"struct.std::__detail::_AllocNode"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"struct.std::__detail::_AllocNode"*, %"struct.std::__detail::_AllocNode"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_AllocNode", %"struct.std::__detail::_AllocNode"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %6, align 8
  %8 = load %class.Pos*, %class.Pos** %4, align 8
  %9 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %8) #3
  %10 = call %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE16_M_allocate_nodeIJRKS2_EEEPS3_DpOT_(%"struct.std::__detail::_Hashtable_alloc.13"* %7, %class.Pos* dereferenceable(16) %9)
  ret %"struct.std::__detail::_Hash_node"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"*, i64, i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %6 = alloca %"class.std::_Hashtable.4"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::pair.61", align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store %"struct.std::__detail::_Hash_node"* %3, %"struct.std::__detail::_Hash_node"** %9, align 8
  %15 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %6, align 8
  %16 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %15, i32 0, i32 4
  %17 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %16)
  store i64 %17, i64* %11, align 8
  store i64* %11, i64** %10, align 8
  %18 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %15, i32 0, i32 4
  %19 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %15, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %15, i32 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = call { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"* %18, i64 %20, i64 %22, i64 1)
  %24 = bitcast %"struct.std::pair.61"* %12 to { i8, i64 }*
  %25 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 0
  %26 = extractvalue { i8, i64 } %23, 0
  store i8 %26, i8* %25, align 8
  %27 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 1
  %28 = extractvalue { i8, i64 } %23, 1
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %12, i32 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %58

; <label>:32:                                     ; preds = %4
  %33 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %12, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = load i64*, i64** %10, align 8
  invoke void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable.4"* %15, i64 %34, i64* dereferenceable(8) %35)
          to label %36 unwind label %48

; <label>:36:                                     ; preds = %32
  %37 = bitcast %"class.std::_Hashtable.4"* %15 to %"struct.std::__detail::_Hash_code_base.6"*
  %38 = invoke dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.6"* %37)
          to label %39 unwind label %48

; <label>:39:                                     ; preds = %36
  %40 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %41 = bitcast %"struct.std::__detail::_Hash_node"* %40 to %"struct.std::__detail::_Hash_node_value_base"*
  %42 = call dereferenceable(16) %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %41) #3
  %43 = invoke dereferenceable(16) %class.Pos* @_ZNKSt8__detail9_IdentityclIR3PosEEOT_S5_(%"struct.std::__detail::_Identity"* %38, %class.Pos* dereferenceable(16) %42)
          to label %44 unwind label %48

; <label>:44:                                     ; preds = %39
  %45 = load i64, i64* %8, align 8
  %46 = invoke i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexERKS0_m(%"class.std::_Hashtable.4"* %15, %class.Pos* dereferenceable(16) %43, i64 %45)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %44
  store i64 %46, i64* %7, align 8
  br label %58

; <label>:48:                                     ; preds = %146, %102, %44, %39, %36, %32
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %13, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %14, align 4
  br label %52

; <label>:52:                                     ; preds = %48
  %53 = load i8*, i8** %13, align 8
  %54 = call i8* @__cxa_begin_catch(i8* %53) #3
  %55 = bitcast %"class.std::_Hashtable.4"* %15 to %"struct.std::__detail::_Hashtable_alloc.13"*
  %56 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE18_M_deallocate_nodeEPS3_(%"struct.std::__detail::_Hashtable_alloc.13"* %55, %"struct.std::__detail::_Hash_node"* %56)
          to label %57 unwind label %158

; <label>:57:                                     ; preds = %52
  invoke void @__cxa_rethrow() #12
          to label %172 unwind label %158

; <label>:58:                                     ; preds = %47, %4
  %59 = load i32, i32* @x.453
  %60 = load i32, i32* @y.454
  %61 = sub i32 %59, -1794383853
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1794383853
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %173

; <label>:85:                                     ; preds = %58, %173
  %86 = bitcast %"class.std::_Hashtable.4"* %15 to %"struct.std::__detail::_Hash_code_base.6"*
  %87 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %88 = load i64, i64* %8, align 8
  %89 = load i32, i32* @x.453
  %90 = load i32, i32* @y.454
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %173

; <label>:102:                                    ; preds = %85
  invoke void @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeIS1_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.6"* %86, %"struct.std::__detail::_Hash_node"* %87, i64 %88)
          to label %103 unwind label %48

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* @x.453
  %105 = load i32, i32* @y.454
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %177

; <label>:129:                                    ; preds = %103, %177
  %130 = load i64, i64* %7, align 8
  %131 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %132 = load i32, i32* @x.453
  %133 = load i32, i32* @y.454
  %134 = add i32 %132, 1258981127
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, 1258981127
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %177

; <label>:146:                                    ; preds = %129
  invoke void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE22_M_insert_bucket_beginEmPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"* %15, i64 %130, %"struct.std::__detail::_Hash_node"* %131)
          to label %147 unwind label %48

; <label>:147:                                    ; preds = %146
  %148 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %15, i32 0, i32 3
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %149, 5436857587090736378
  %151 = add i64 %150, 1
  %152 = add i64 %151, 5436857587090736378
  %153 = add i64 %149, 1
  store i64 %152, i64* %148, align 8
  %154 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  call void @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator"* %5, %"struct.std::__detail::_Hash_node"* %154) #3
  %155 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %5, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %155, i32 0, i32 0
  %157 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %156, align 8
  ret %"struct.std::__detail::_Hash_node"* %157

; <label>:158:                                    ; preds = %57, %52
  %159 = landingpad { i8*, i32 }
          cleanup
  %160 = extractvalue { i8*, i32 } %159, 0
  store i8* %160, i8** %13, align 8
  %161 = extractvalue { i8*, i32 } %159, 1
  store i32 %161, i32* %14, align 4
  invoke void @__cxa_end_catch()
          to label %162 unwind label %169

; <label>:162:                                    ; preds = %158
  br label %164
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:164:                                    ; preds = %162
  %165 = load i8*, i8** %13, align 8
  %166 = load i32, i32* %14, align 4
  %167 = insertvalue { i8*, i32 } undef, i8* %165, 0
  %168 = insertvalue { i8*, i32 } %167, i32 %166, 1
  resume { i8*, i32 } %168

; <label>:169:                                    ; preds = %158
  %170 = landingpad { i8*, i32 }
          catch i8* null
  %171 = extractvalue { i8*, i32 } %170, 0
  call void @__clang_call_terminate(i8* %171) #9
  unreachable

; <label>:172:                                    ; preds = %57
  unreachable

; <label>:173:                                    ; preds = %85, %58
  %174 = bitcast %"class.std::_Hashtable.4"* %15 to %"struct.std::__detail::_Hash_code_base.6"*
  %175 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %176 = load i64, i64* %8, align 8
  br label %85

; <label>:177:                                    ; preds = %129, %103
  %178 = load i64, i64* %7, align 8
  %179 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  br label %129
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Identity"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.455
  %6 = load i32, i32* @y.456
  %7 = sub i32 %5, -1626466078
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1626466078
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1539640525, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1539640525, label %19
    i32 -1329343887, label %39
    i32 1779862715, label %58
    i32 1529163777, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1329343887, i32 1529163777
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.7"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.7"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %40, align 8
  %41 = load %"struct.std::__detail::_Hashtable_ebo_helper.7"*, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.7"* %41 to %"struct.std::__detail::_Identity"*
  store %"struct.std::__detail::_Identity"* %42, %"struct.std::__detail::_Identity"** %2
  %43 = load i32, i32* @x.455
  %44 = load i32, i32* @y.456
  %45 = sub i32 %43, 1796495491
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1796495491
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1779862715, i32 1529163777
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::__detail::_Identity"*, %"struct.std::__detail::_Identity"** %2
  ret %"struct.std::__detail::_Identity"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.7"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.7"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %61, align 8
  %62 = load %"struct.std::__detail::_Hashtable_ebo_helper.7"*, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %61, align 8
  %63 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.7"* %62 to %"struct.std::__detail::_Identity"*
  store i32 -1329343887, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base.6"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base.6"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.0"*
  %5 = call dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.0"* dereferenceable(1) %4)
  ret %"struct.std::hash"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKS1_mm(%"struct.std::__detail::_Hash_code_base.6"*, %class.Pos* dereferenceable(16), i64, i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  %6 = alloca %class.Pos*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %5, align 8
  store %class.Pos* %1, %class.Pos** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base.6"* %9)
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %8, align 8
  %13 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %10, i64 %11, i64 %12) #3
  ret i64 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base.6"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Mod_range_hashing"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.461
  %6 = load i32, i32* @y.462
  %7 = add i32 %5, -1944066522
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1944066522
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -520752580, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -520752580, label %19
    i32 -1266313606, label %27
    i32 1346098625, label %58
    i32 -1639452067, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1266313606, i32 -1639452067
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %28, align 8
  %29 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %28, align 8
  %30 = bitcast %"struct.std::__detail::_Hash_code_base.6"* %29 to %"struct.std::__detail::_Hashtable_ebo_helper.1"*
  %31 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.1"* dereferenceable(1) %30)
  store %"struct.std::__detail::_Mod_range_hashing"* %31, %"struct.std::__detail::_Mod_range_hashing"** %2
  %32 = load i32, i32* @x.461
  %33 = load i32, i32* @y.462
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1346098625, i32 -1639452067
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::__detail::_Mod_range_hashing"*, %"struct.std::__detail::_Mod_range_hashing"** %2
  ret %"struct.std::__detail::_Mod_range_hashing"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %61, align 8
  %62 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %61, align 8
  %63 = bitcast %"struct.std::__detail::_Hash_code_base.6"* %62 to %"struct.std::__detail::_Hashtable_ebo_helper.1"*
  %64 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.1"* dereferenceable(1) %63)
  store i32 -1266313606, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE19_M_find_before_nodeEmRKS0_m(%"class.std::_Hashtable.4"*, i64, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node_base"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"class.std::_Hashtable.4"*
  %9 = alloca %"struct.std::__detail::_Hash_node"**
  %10 = alloca %"struct.std::__detail::_Hash_node_base"**
  %11 = alloca i64*
  %12 = alloca %class.Pos**
  %13 = alloca i64*
  %14 = alloca %"struct.std::__detail::_Hash_node_base"**
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.463
  %18 = load i32, i32* @y.464
  %19 = sub i32 %17, -2017772937
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -2017772937
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %16
  %26 = icmp slt i32 %18, 10
  store i1 %26, i1* %15
  %27 = alloca i32
  store i32 2319434, i32* %27
  br label %28

; <label>:28:                                     ; preds = %4, %397
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 2319434, label %31
    i32 1964829302, label %51
    i32 1172010245, label %89
    i32 -206340369, label %92
    i32 -1964142876, label %94
    i32 1204291618, label %122
    i32 -287838695, label %156
    i32 313510583, label %157
    i32 485446208, label %168
    i32 -601303543, label %172
    i32 -1720303187, label %180
    i32 -1224077478, label %208
    i32 -131016179, label %243
    i32 1011527302, label %246
    i32 -746427962, label %273
    i32 -1331865364, label %289
    i32 982858619, label %290
    i32 -2049211215, label %295
    i32 -1970331360, label %300
    i32 -1694674160, label %302
    i32 -1909834761, label %330
    i32 276290965, label %359
    i32 -591905162, label %361
    i32 -1613072077, label %377
    i32 1684581190, label %384
    i32 -2038543810, label %393
    i32 -156455722, label %394
  ]

; <label>:30:                                     ; preds = %28
  br label %397

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %16
  %33 = load volatile i1, i1* %15
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 1964829302, i32 -591905162
  store i32 %50, i32* %27
  br label %397

; <label>:51:                                     ; preds = %28
  %52 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"struct.std::__detail::_Hash_node_base"** %52, %"struct.std::__detail::_Hash_node_base"*** %14
  %53 = alloca %"class.std::_Hashtable.4"*, align 8
  %54 = alloca i64, align 8
  store i64* %54, i64** %13
  %55 = alloca %class.Pos*, align 8
  store %class.Pos** %55, %class.Pos*** %12
  %56 = alloca i64, align 8
  store i64* %56, i64** %11
  %57 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"struct.std::__detail::_Hash_node_base"** %57, %"struct.std::__detail::_Hash_node_base"*** %10
  %58 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %58, %"struct.std::__detail::_Hash_node"*** %9
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %53, align 8
  %59 = load volatile i64*, i64** %13
  store i64 %1, i64* %59, align 8
  %60 = load volatile %class.Pos**, %class.Pos*** %12
  store %class.Pos* %2, %class.Pos** %60, align 8
  %61 = load volatile i64*, i64** %11
  store i64 %3, i64* %61, align 8
  %62 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %53, align 8
  store %"class.std::_Hashtable.4"* %62, %"class.std::_Hashtable.4"** %8
  %63 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %8
  %64 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %63, i32 0, i32 0
  %65 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %64, align 8
  %66 = load volatile i64*, i64** %13
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %65, i64 %67
  %69 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %68, align 8
  %70 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %10
  store %"struct.std::__detail::_Hash_node_base"* %69, %"struct.std::__detail::_Hash_node_base"** %70, align 8
  %71 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %10
  %72 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %71, align 8
  %73 = icmp ne %"struct.std::__detail::_Hash_node_base"* %72, null
  store i1 %73, i1* %7
  %74 = load i32, i32* @x.463
  %75 = load i32, i32* @y.464
  %76 = add i32 %74, -884731793
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -884731793
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 1172010245, i32 -591905162
  store i32 %88, i32* %27
  br label %397

; <label>:89:                                     ; preds = %28
  %90 = load volatile i1, i1* %7
  %91 = select i1 %90, i32 -1964142876, i32 -206340369
  store i32 %91, i32* %27
  br label %397

; <label>:92:                                     ; preds = %28
  %93 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %14
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %93, align 8
  store i32 -1694674160, i32* %27
  br label %397

; <label>:94:                                     ; preds = %28
  %95 = load i32, i32* @x.463
  %96 = load i32, i32* @y.464
  %97 = add i32 %95, 1658726855
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 1658726855
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 1204291618, i32 -1613072077
  store i32 %121, i32* %27
  br label %397

; <label>:122:                                    ; preds = %28
  %123 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %10
  %124 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %124, i32 0, i32 0
  %126 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__detail::_Hash_node_base"* %126 to %"struct.std::__detail::_Hash_node"*
  %128 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  store %"struct.std::__detail::_Hash_node"* %127, %"struct.std::__detail::_Hash_node"** %128, align 8
  %129 = load i32, i32* @x.463
  %130 = load i32, i32* @y.464
  %131 = add i32 %129, 32561949
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 32561949
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  %155 = select i1 %153, i32 -287838695, i32 -1613072077
  store i32 %155, i32* %27
  br label %397

; <label>:156:                                    ; preds = %28
  store i32 313510583, i32* %27
  br label %397

; <label>:157:                                    ; preds = %28
  %158 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %8
  %159 = bitcast %"class.std::_Hashtable.4"* %158 to %"struct.std::__detail::_Hashtable_base.5"*
  %160 = load volatile %class.Pos**, %class.Pos*** %12
  %161 = load %class.Pos*, %class.Pos** %160, align 8
  %162 = load volatile i64*, i64** %11
  %163 = load i64, i64* %162, align 8
  %164 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  %165 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %164, align 8
  %166 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosS1_NS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_equalsERKS1_mPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Hashtable_base.5"* %159, %class.Pos* dereferenceable(16) %161, i64 %163, %"struct.std::__detail::_Hash_node"* %165)
  %167 = select i1 %166, i32 485446208, i32 -601303543
  store i32 %167, i32* %27
  br label %397

; <label>:168:                                    ; preds = %28
  %169 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %10
  %170 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %169, align 8
  %171 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %14
  store %"struct.std::__detail::_Hash_node_base"* %170, %"struct.std::__detail::_Hash_node_base"** %171, align 8
  store i32 -1694674160, i32* %27
  br label %397

; <label>:172:                                    ; preds = %28
  %173 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  %174 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %173, align 8
  %175 = bitcast %"struct.std::__detail::_Hash_node"* %174 to %"struct.std::__detail::_Hash_node_base"*
  %176 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %175, i32 0, i32 0
  %177 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %176, align 8
  %178 = icmp ne %"struct.std::__detail::_Hash_node_base"* %177, null
  %179 = select i1 %178, i32 -1720303187, i32 1011527302
  store i32 %179, i32* %27
  br label %397

; <label>:180:                                    ; preds = %28
  %181 = load i32, i32* @x.463
  %182 = load i32, i32* @y.464
  %183 = sub i32 %181, 1551593411
  %184 = sub i32 %183, 1
  %185 = add i32 %184, 1551593411
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 true, true
  %194 = and i1 %191, true
  %195 = and i1 %189, %193
  %196 = and i1 %192, true
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 true, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 -1224077478, i32 1684581190
  store i32 %207, i32* %27
  br label %397

; <label>:208:                                    ; preds = %28
  %209 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  %210 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %209, align 8
  %211 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %210) #3
  %212 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %8
  %213 = call i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexEPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"* %212, %"struct.std::__detail::_Hash_node"* %211) #3
  %214 = load volatile i64*, i64** %13
  %215 = load i64, i64* %214, align 8
  %216 = icmp ne i64 %213, %215
  store i1 %216, i1* %6
  %217 = load i32, i32* @x.463
  %218 = load i32, i32* @y.464
  %219 = sub i32 0, 1
  %220 = add i32 %217, %219
  %221 = sub i32 %217, 1
  %222 = mul i32 %217, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %218, 10
  %226 = xor i1 %224, true
  %227 = xor i1 %225, true
  %228 = xor i1 false, true
  %229 = and i1 %226, false
  %230 = and i1 %224, %228
  %231 = and i1 %227, false
  %232 = and i1 %225, %228
  %233 = or i1 %229, %230
  %234 = or i1 %231, %232
  %235 = xor i1 %233, %234
  %236 = or i1 %226, %227
  %237 = xor i1 %236, true
  %238 = or i1 false, %228
  %239 = and i1 %237, %238
  %240 = or i1 %235, %239
  %241 = or i1 %224, %225
  %242 = select i1 %240, i32 -131016179, i32 1684581190
  store i32 %242, i32* %27
  br label %397

; <label>:243:                                    ; preds = %28
  %244 = load volatile i1, i1* %6
  %245 = select i1 %244, i32 1011527302, i32 982858619
  store i32 %245, i32* %27
  br label %397

; <label>:246:                                    ; preds = %28
  %247 = load i32, i32* @x.463
  %248 = load i32, i32* @y.464
  %249 = sub i32 0, 1
  %250 = add i32 %247, %249
  %251 = sub i32 %247, 1
  %252 = mul i32 %247, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %248, 10
  %256 = xor i1 %254, true
  %257 = xor i1 %255, true
  %258 = xor i1 false, true
  %259 = and i1 %256, false
  %260 = and i1 %254, %258
  %261 = and i1 %257, false
  %262 = and i1 %255, %258
  %263 = or i1 %259, %260
  %264 = or i1 %261, %262
  %265 = xor i1 %263, %264
  %266 = or i1 %256, %257
  %267 = xor i1 %266, true
  %268 = or i1 false, %258
  %269 = and i1 %267, %268
  %270 = or i1 %265, %269
  %271 = or i1 %254, %255
  %272 = select i1 %270, i32 -746427962, i32 -2038543810
  store i32 %272, i32* %27
  br label %397

; <label>:273:                                    ; preds = %28
  %274 = load i32, i32* @x.463
  %275 = load i32, i32* @y.464
  %276 = add i32 %274, 349152600
  %277 = sub i32 %276, 1
  %278 = sub i32 %277, 349152600
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = and i1 %282, %283
  %285 = xor i1 %282, %283
  %286 = or i1 %284, %285
  %287 = or i1 %282, %283
  %288 = select i1 %286, i32 -1331865364, i32 -2038543810
  store i32 %288, i32* %27
  br label %397

; <label>:289:                                    ; preds = %28
  store i32 -1970331360, i32* %27
  br label %397

; <label>:290:                                    ; preds = %28
  %291 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  %292 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %291, align 8
  %293 = bitcast %"struct.std::__detail::_Hash_node"* %292 to %"struct.std::__detail::_Hash_node_base"*
  %294 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %10
  store %"struct.std::__detail::_Hash_node_base"* %293, %"struct.std::__detail::_Hash_node_base"** %294, align 8
  store i32 -2049211215, i32* %27
  br label %397

; <label>:295:                                    ; preds = %28
  %296 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  %297 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %296, align 8
  %298 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %297) #3
  %299 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  store %"struct.std::__detail::_Hash_node"* %298, %"struct.std::__detail::_Hash_node"** %299, align 8
  store i32 313510583, i32* %27
  br label %397

; <label>:300:                                    ; preds = %28
  %301 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %14
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %301, align 8
  store i32 -1694674160, i32* %27
  br label %397

; <label>:302:                                    ; preds = %28
  %303 = load i32, i32* @x.463
  %304 = load i32, i32* @y.464
  %305 = add i32 %303, 1824174236
  %306 = sub i32 %305, 1
  %307 = sub i32 %306, 1824174236
  %308 = sub i32 %303, 1
  %309 = mul i32 %303, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %304, 10
  %313 = xor i1 %311, true
  %314 = xor i1 %312, true
  %315 = xor i1 true, true
  %316 = and i1 %313, true
  %317 = and i1 %311, %315
  %318 = and i1 %314, true
  %319 = and i1 %312, %315
  %320 = or i1 %316, %317
  %321 = or i1 %318, %319
  %322 = xor i1 %320, %321
  %323 = or i1 %313, %314
  %324 = xor i1 %323, true
  %325 = or i1 true, %315
  %326 = and i1 %324, %325
  %327 = or i1 %322, %326
  %328 = or i1 %311, %312
  %329 = select i1 %327, i32 -1909834761, i32 -156455722
  store i32 %329, i32* %27
  br label %397

; <label>:330:                                    ; preds = %28
  %331 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %14
  %332 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %331, align 8
  store %"struct.std::__detail::_Hash_node_base"* %332, %"struct.std::__detail::_Hash_node_base"** %5
  %333 = load i32, i32* @x.463
  %334 = load i32, i32* @y.464
  %335 = sub i32 0, 1
  %336 = add i32 %333, %335
  %337 = sub i32 %333, 1
  %338 = mul i32 %333, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %334, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 false, true
  %345 = and i1 %342, false
  %346 = and i1 %340, %344
  %347 = and i1 %343, false
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 false, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  %358 = select i1 %356, i32 276290965, i32 -156455722
  store i32 %358, i32* %27
  br label %397

; <label>:359:                                    ; preds = %28
  %360 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5
  ret %"struct.std::__detail::_Hash_node_base"* %360

; <label>:361:                                    ; preds = %28
  %362 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %363 = alloca %"class.std::_Hashtable.4"*, align 8
  %364 = alloca i64, align 8
  %365 = alloca %class.Pos*, align 8
  %366 = alloca i64, align 8
  %367 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %368 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %363, align 8
  store i64 %1, i64* %364, align 8
  store %class.Pos* %2, %class.Pos** %365, align 8
  store i64 %3, i64* %366, align 8
  %369 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %363, align 8
  %370 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %369, i32 0, i32 0
  %371 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %370, align 8
  %372 = load i64, i64* %364, align 8
  %373 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %371, i64 %372
  %374 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %373, align 8
  store %"struct.std::__detail::_Hash_node_base"* %374, %"struct.std::__detail::_Hash_node_base"** %367, align 8
  %375 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %367, align 8
  %376 = icmp ne %"struct.std::__detail::_Hash_node_base"* %375, null
  store i32 1964829302, i32* %27
  br label %397

; <label>:377:                                    ; preds = %28
  %378 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %10
  %379 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %378, align 8
  %380 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %379, i32 0, i32 0
  %381 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %380, align 8
  %382 = bitcast %"struct.std::__detail::_Hash_node_base"* %381 to %"struct.std::__detail::_Hash_node"*
  %383 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  store %"struct.std::__detail::_Hash_node"* %382, %"struct.std::__detail::_Hash_node"** %383, align 8
  store i32 1204291618, i32* %27
  br label %397

; <label>:384:                                    ; preds = %28
  %385 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %9
  %386 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %385, align 8
  %387 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %386) #3
  %388 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %8
  %389 = call i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexEPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"* %388, %"struct.std::__detail::_Hash_node"* %387) #3
  %390 = load volatile i64*, i64** %13
  %391 = load i64, i64* %390, align 8
  %392 = icmp ne i64 %389, %391
  store i32 -1224077478, i32* %27
  br label %397

; <label>:393:                                    ; preds = %28
  store i32 -746427962, i32* %27
  br label %397

; <label>:394:                                    ; preds = %28
  %395 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %14
  %396 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %395, align 8
  store i32 -1909834761, i32* %27
  br label %397

; <label>:397:                                    ; preds = %394, %393, %384, %377, %361, %330, %302, %300, %295, %290, %289, %273, %246, %243, %208, %180, %172, %168, %157, %156, %122, %94, %92, %89, %51, %31, %30
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosS1_NS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_equalsERKS1_mPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Hashtable_base.5"*, %class.Pos* dereferenceable(16), i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hashtable_base.5"*, align 8
  %6 = alloca %class.Pos*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hashtable_base.5"* %0, %"struct.std::__detail::_Hashtable_base.5"** %5, align 8
  store %class.Pos* %1, %class.Pos** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"struct.std::__detail::_Hash_node"* %3, %"struct.std::__detail::_Hash_node"** %8, align 8
  %9 = load %"struct.std::__detail::_Hashtable_base.5"*, %"struct.std::__detail::_Hashtable_base.5"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseI3PosS1_NS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb1ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base.5"* %9)
  %11 = bitcast %"struct.std::__detail::_Hashtable_base.5"* %9 to %"struct.std::__detail::_Hash_code_base.6"*
  %12 = call dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.6"* %11)
  %13 = load %class.Pos*, %class.Pos** %6, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %8, align 8
  %16 = call zeroext i1 @_ZNSt8__detail13_Equal_helperI3PosS1_NS_9_IdentityESt8equal_toIS1_EmLb1EE9_S_equalsERKS4_RKS2_RKS1_mPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::equal_to"* dereferenceable(1) %10, %"struct.std::__detail::_Identity"* dereferenceable(1) %12, %class.Pos* dereferenceable(16) %13, i64 %14, %"struct.std::__detail::_Hash_node"* %15)
  ret i1 %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexEPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"*, %"struct.std::__detail::_Hash_node"*) #5 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.467
  %7 = load i32, i32* @y.468
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 739330847, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 739330847, label %19
    i32 -557690288, label %39
    i32 1284726090, label %63
    i32 716051416, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -557690288, i32 716051416
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Hashtable.4"*, align 8
  %41 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %40, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %41, align 8
  %42 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %40, align 8
  %43 = bitcast %"class.std::_Hashtable.4"* %42 to %"struct.std::__detail::_Hash_code_base.6"*
  %44 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %41, align 8
  %45 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS1_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.6"* %43, %"struct.std::__detail::_Hash_node"* %44, i64 %46) #3
  store i64 %47, i64* %3
  %48 = load i32, i32* @x.467
  %49 = load i32, i32* @y.468
  %50 = sub i32 %48, -1853784153
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1853784153
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1284726090, i32 716051416
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64, i64* %3
  ret i64 %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::_Hashtable.4"*, align 8
  %67 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %66, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %67, align 8
  %68 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %66, align 8
  %69 = bitcast %"class.std::_Hashtable.4"* %68 to %"struct.std::__detail::_Hash_code_base.6"*
  %70 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %67, align 8
  %71 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %68, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS1_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.6"* %69, %"struct.std::__detail::_Hash_node"* %70, i64 %72) #3
  store i32 -557690288, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detail13_Equal_helperI3PosS1_NS_9_IdentityESt8equal_toIS1_EmLb1EE9_S_equalsERKS4_RKS2_RKS1_mPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::equal_to"* dereferenceable(1), %"struct.std::__detail::_Identity"* dereferenceable(1), %class.Pos* dereferenceable(16), i64, %"struct.std::__detail::_Hash_node"*) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"struct.std::__detail::_Hash_node"**
  %9 = alloca %class.Pos**
  %10 = alloca %"struct.std::__detail::_Identity"**
  %11 = alloca %"struct.std::equal_to"**
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.469
  %15 = load i32, i32* @y.470
  %16 = add i32 %14, -735241230
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -735241230
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 364917276, i32* %24
  %25 = alloca i1
  br label %26

; <label>:26:                                     ; preds = %5, %166
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 364917276, label %29
    i32 -1633427184, label %37
    i32 -534846807, label %79
    i32 -794422431, label %82
    i32 -709101167, label %95
    i32 120450347, label %124
    i32 -2119378320, label %152
    i32 627602587, label %154
    i32 -863957902, label %165
  ]

; <label>:28:                                     ; preds = %26
  br label %166

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %13
  %31 = load volatile i1, i1* %12
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -1633427184, i32 627602587
  store i32 %36, i32* %24
  br label %166

; <label>:37:                                     ; preds = %26
  %38 = alloca %"struct.std::equal_to"*, align 8
  store %"struct.std::equal_to"** %38, %"struct.std::equal_to"*** %11
  %39 = alloca %"struct.std::__detail::_Identity"*, align 8
  store %"struct.std::__detail::_Identity"** %39, %"struct.std::__detail::_Identity"*** %10
  %40 = alloca %class.Pos*, align 8
  store %class.Pos** %40, %class.Pos*** %9
  %41 = alloca i64, align 8
  %42 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %42, %"struct.std::__detail::_Hash_node"*** %8
  %43 = load volatile %"struct.std::equal_to"**, %"struct.std::equal_to"*** %11
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %43, align 8
  %44 = load volatile %"struct.std::__detail::_Identity"**, %"struct.std::__detail::_Identity"*** %10
  store %"struct.std::__detail::_Identity"* %1, %"struct.std::__detail::_Identity"** %44, align 8
  %45 = load volatile %class.Pos**, %class.Pos*** %9
  store %class.Pos* %2, %class.Pos** %45, align 8
  store i64 %3, i64* %41, align 8
  %46 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  store %"struct.std::__detail::_Hash_node"* %4, %"struct.std::__detail::_Hash_node"** %46, align 8
  %47 = load i64, i64* %41, align 8
  %48 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %49 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %49, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %47, %51
  store i1 %52, i1* %7
  %53 = load i32, i32* @x.469
  %54 = load i32, i32* @y.470
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -534846807, i32 627602587
  store i32 %78, i32* %24
  br label %166

; <label>:79:                                     ; preds = %26
  %80 = load volatile i1, i1* %7
  %81 = select i1 %80, i32 -794422431, i32 -709101167
  store i32 %81, i32* %24
  store i1 false, i1* %25
  br label %166

; <label>:82:                                     ; preds = %26
  %83 = load volatile %"struct.std::equal_to"**, %"struct.std::equal_to"*** %11
  %84 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %83, align 8
  %85 = load volatile %class.Pos**, %class.Pos*** %9
  %86 = load %class.Pos*, %class.Pos** %85, align 8
  %87 = load volatile %"struct.std::__detail::_Identity"**, %"struct.std::__detail::_Identity"*** %10
  %88 = load %"struct.std::__detail::_Identity"*, %"struct.std::__detail::_Identity"** %87, align 8
  %89 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %8
  %90 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %89, align 8
  %91 = bitcast %"struct.std::__detail::_Hash_node"* %90 to %"struct.std::__detail::_Hash_node_value_base"*
  %92 = call dereferenceable(16) %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"* %91) #3
  %93 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail9_IdentityclIR3PosEEOT_S5_(%"struct.std::__detail::_Identity"* %88, %class.Pos* dereferenceable(16) %92)
  %94 = call zeroext i1 @_ZNKSt8equal_toI3PosEclERKS0_S3_(%"struct.std::equal_to"* %84, %class.Pos* dereferenceable(16) %86, %class.Pos* dereferenceable(16) %93)
  store i32 -709101167, i32* %24
  store i1 %94, i1* %25
  br label %166

; <label>:95:                                     ; preds = %26
  %96 = load i1, i1* %25
  store i1 %96, i1* %6
  %97 = load i32, i32* @x.469
  %98 = load i32, i32* @y.470
  %99 = add i32 %97, 1154579133
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 1154579133
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 120450347, i32 -863957902
  store i32 %123, i32* %24
  br label %166

; <label>:124:                                    ; preds = %26
  %125 = load i32, i32* @x.469
  %126 = load i32, i32* @y.470
  %127 = sub i32 %125, -871609105
  %128 = sub i32 %127, 1
  %129 = add i32 %128, -871609105
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  %151 = select i1 %149, i32 -2119378320, i32 -863957902
  store i32 %151, i32* %24
  br label %166

; <label>:152:                                    ; preds = %26
  %153 = load volatile i1, i1* %6
  ret i1 %153

; <label>:154:                                    ; preds = %26
  %155 = alloca %"struct.std::equal_to"*, align 8
  %156 = alloca %"struct.std::__detail::_Identity"*, align 8
  %157 = alloca %class.Pos*, align 8
  %158 = alloca i64, align 8
  %159 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %155, align 8
  store %"struct.std::__detail::_Identity"* %1, %"struct.std::__detail::_Identity"** %156, align 8
  store %class.Pos* %2, %class.Pos** %157, align 8
  store i64 %3, i64* %158, align 8
  store %"struct.std::__detail::_Hash_node"* %4, %"struct.std::__detail::_Hash_node"** %159, align 8
  %160 = load i64, i64* %158, align 8
  %161 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %159, align 8
  %162 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %161, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %160, %163
  store i32 -1633427184, i32* %24
  br label %166

; <label>:165:                                    ; preds = %26
  store i32 120450347, i32* %24
  br label %166

; <label>:166:                                    ; preds = %165, %154, %124, %95, %82, %79, %37, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseI3PosS1_NS_9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb1ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base.5"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::equal_to"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.471
  %6 = load i32, i32* @y.472
  %7 = add i32 %5, -150524071
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -150524071
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -605903572, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -605903572, label %19
    i32 -1784422265, label %39
    i32 22791335, label %71
    i32 -756596939, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1784422265, i32 -756596939
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hashtable_base.5"*, align 8
  store %"struct.std::__detail::_Hashtable_base.5"* %0, %"struct.std::__detail::_Hashtable_base.5"** %40, align 8
  %41 = load %"struct.std::__detail::_Hashtable_base.5"*, %"struct.std::__detail::_Hashtable_base.5"** %40, align 8
  %42 = bitcast %"struct.std::__detail::_Hashtable_base.5"* %41 to %"struct.std::__detail::_Hashtable_ebo_helper.2"*
  %43 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.2"* dereferenceable(1) %42)
  store %"struct.std::equal_to"* %43, %"struct.std::equal_to"** %2
  %44 = load i32, i32* @x.471
  %45 = load i32, i32* @y.472
  %46 = sub i32 %44, -749478672
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -749478672
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 22791335, i32 -756596939
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::equal_to"*, %"struct.std::equal_to"** %2
  ret %"struct.std::equal_to"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::__detail::_Hashtable_base.5"*, align 8
  store %"struct.std::__detail::_Hashtable_base.5"* %0, %"struct.std::__detail::_Hashtable_base.5"** %74, align 8
  %75 = load %"struct.std::__detail::_Hashtable_base.5"*, %"struct.std::__detail::_Hashtable_base.5"** %74, align 8
  %76 = bitcast %"struct.std::__detail::_Hashtable_base.5"* %75 to %"struct.std::__detail::_Hashtable_ebo_helper.2"*
  %77 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.2"* dereferenceable(1) %76)
  store i32 -1784422265, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.6"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base.6"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.7"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Identity"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNKSt8__detail9_IdentityclIR3PosEEOT_S5_(%"struct.std::__detail::_Identity"*, %class.Pos* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %class.Pos*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.475
  %7 = load i32, i32* @y.476
  %8 = add i32 %6, 68883719
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 68883719
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 41293991, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 41293991, label %20
    i32 553462884, label %28
    i32 1439272406, label %61
    i32 1168274327, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 553462884, i32 1168274327
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::__detail::_Identity"*, align 8
  %30 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_Identity"* %0, %"struct.std::__detail::_Identity"** %29, align 8
  store %class.Pos* %1, %class.Pos** %30, align 8
  %31 = load %"struct.std::__detail::_Identity"*, %"struct.std::__detail::_Identity"** %29, align 8
  %32 = load %class.Pos*, %class.Pos** %30, align 8
  %33 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIR3PosEOT_RNSt16remove_referenceIS2_E4typeE(%class.Pos* dereferenceable(16) %32) #3
  store %class.Pos* %33, %class.Pos** %3
  %34 = load i32, i32* @x.475
  %35 = load i32, i32* @y.476
  %36 = add i32 %34, -120867763
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -120867763
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1439272406, i32 1168274327
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  %62 = load volatile %class.Pos*, %class.Pos** %3
  ret %class.Pos* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"struct.std::__detail::_Identity"*, align 8
  %65 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_Identity"* %0, %"struct.std::__detail::_Identity"** %64, align 8
  store %class.Pos* %1, %class.Pos** %65, align 8
  %66 = load %"struct.std::__detail::_Identity"*, %"struct.std::__detail::_Identity"** %64, align 8
  %67 = load %class.Pos*, %class.Pos** %65, align 8
  %68 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIR3PosEOT_RNSt16remove_referenceIS2_E4typeE(%class.Pos* dereferenceable(16) %67) #3
  store i32 553462884, i32* %16
  br label %69

; <label>:69:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base"*) #5 comdat align 2 {
  %2 = alloca %class.Pos*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.477
  %6 = load i32, i32* @y.478
  %7 = add i32 %5, -1797344197
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1797344197
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2115214399, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2115214399, label %19
    i32 40298602, label %39
    i32 -1699994575, label %58
    i32 -377904356, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 40298602, i32 -377904356
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %40, align 8
  %41 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %40, align 8
  %42 = call %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %41) #3
  store %class.Pos* %42, %class.Pos** %2
  %43 = load i32, i32* @x.477
  %44 = load i32, i32* @y.478
  %45 = add i32 %43, -526793339
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -526793339
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1699994575, i32 -377904356
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %class.Pos*, %class.Pos** %2
  ret %class.Pos* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %61, align 8
  %62 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %61, align 8
  %63 = call %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %62) #3
  store i32 40298602, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt7forwardIR3PosEOT_RNSt16remove_referenceIS2_E4typeE(%class.Pos* dereferenceable(16)) #5 comdat {
  %2 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %2, align 8
  %3 = load %class.Pos*, %class.Pos** %2, align 8
  ret %class.Pos* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Identity"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.7"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_ebo_helper.7"*, align 8
  store %"struct.std::__detail::_Hashtable_ebo_helper.7"* %0, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_ebo_helper.7"*, %"struct.std::__detail::_Hashtable_ebo_helper.7"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_ebo_helper.7"* %3 to %"struct.std::__detail::_Identity"*
  ret %"struct.std::__detail::_Identity"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS1_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_node"*, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %4, align 8
  %8 = invoke dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base.6"* %7)
          to label %9 unwind label %15

; <label>:9:                                      ; preds = %3
  %10 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %11 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %10, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = load i64, i64* %6, align 8
  %14 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %8, i64 %12, i64 %13) #3
  ret i64 %14

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          catch i8* null
  %17 = extractvalue { i8*, i32 } %16, 0
  call void @__clang_call_terminate(i8* %17) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZSt7forwardINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::__detail::_Node_iterator"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::__detail::_Node_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.485
  %6 = load i32, i32* @y.486
  %7 = add i32 %5, 1860904634
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1860904634
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1873277244, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1873277244, label %19
    i32 -1372334513, label %39
    i32 1494738074, label %69
    i32 -1694868189, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1372334513, i32 -1694868189
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %40, align 8
  %41 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %40, align 8
  store %"struct.std::__detail::_Node_iterator"* %41, %"struct.std::__detail::_Node_iterator"** %2
  %42 = load i32, i32* @x.485
  %43 = load i32, i32* @y.486
  %44 = sub i32 %42, -1082102885
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1082102885
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1494738074, i32 -1694868189
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %2
  ret %"struct.std::__detail::_Node_iterator"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  store %"struct.std::__detail::_Node_iterator"* %0, %"struct.std::__detail::_Node_iterator"** %72, align 8
  %73 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %72, align 8
  store i32 -1372334513, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #5 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEbEC2IS3_bvEEOT_OT0_(%"struct.std::pair"*, %"struct.std::__detail::_Node_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::__detail::_Node_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::__detail::_Node_iterator"* %1, %"struct.std::__detail::_Node_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::__detail::_Node_iterator"*, %"struct.std::__detail::_Node_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::__detail::_Node_iterator"* @_ZSt7forwardINSt8__detail14_Node_iteratorI3PosLb1ELb1EEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::__detail::_Node_iterator"* dereferenceable(8) %9) #3
  %11 = bitcast %"struct.std::__detail::_Node_iterator"* %8 to i8*
  %12 = bitcast %"struct.std::__detail::_Node_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %14 = load i8*, i8** %6, align 8
  %15 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %14) #3
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseI3PosLb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Hash_node"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %7, %"struct.std::__detail::_Hash_node"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE16_M_allocate_nodeIJRKS2_EEEPS3_DpOT_(%"struct.std::__detail::_Hashtable_alloc.13"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.493
  %4 = load i32, i32* @y.494
  %5 = sub i32 %3, 1749173612
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1749173612
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %273

; <label>:17:                                     ; preds = %2, %273
  %18 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %19 = alloca %class.Pos*, align 8
  %20 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %21 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %22 = alloca %"class.std::allocator.32", align 1
  %23 = alloca i8*
  %24 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %18, align 8
  store %class.Pos* %1, %class.Pos** %19, align 8
  %25 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %18, align 8
  %26 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %25)
  %27 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE8allocateERS4_m(%"class.std::allocator.15"* dereferenceable(1) %26, i64 1)
  store %"struct.std::__detail::_Hash_node"* %27, %"struct.std::__detail::_Hash_node"** %20, align 8
  %28 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  %29 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_(%"struct.std::__detail::_Hash_node"* dereferenceable(32) %28) #3
  store %"struct.std::__detail::_Hash_node"* %29, %"struct.std::__detail::_Hash_node"** %21, align 8
  %30 = load i32, i32* @x.493
  %31 = load i32, i32* @y.494
  %32 = sub i32 %30, 708776401
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 708776401
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %273

; <label>:44:                                     ; preds = %17
  %45 = invoke dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %25)
          to label %46 unwind label %87

; <label>:46:                                     ; preds = %44
  call void @_ZNSaI3PosEC2INSt8__detail10_Hash_nodeIS_Lb1EEEEERKSaIT_E(%"class.std::allocator.32"* %22, %"class.std::allocator.15"* dereferenceable(1) %45) #3
  %47 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %21, align 8
  %48 = bitcast %"struct.std::__detail::_Hash_node"* %47 to i8*
  %49 = bitcast i8* %48 to %"struct.std::__detail::_Hash_node"*
  call void @_ZNSt8__detail10_Hash_nodeI3PosLb1EEC2Ev(%"struct.std::__detail::_Hash_node"* %49) #3
  %50 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %21, align 8
  %51 = bitcast %"struct.std::__detail::_Hash_node"* %50 to %"struct.std::__detail::_Hash_node_value_base"*
  %52 = call %class.Pos* @_ZNSt8__detail21_Hash_node_value_baseI3PosE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base"* %51) #3
  %53 = load %class.Pos*, %class.Pos** %19, align 8
  %54 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %53) #3
  invoke void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1) %22, %class.Pos* %52, %class.Pos* dereferenceable(16) %54)
          to label %55 unwind label %91

; <label>:55:                                     ; preds = %46
  %56 = load i32, i32* @x.493
  %57 = load i32, i32* @y.494
  %58 = sub i32 %56, -276968078
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -276968078
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %286

; <label>:70:                                     ; preds = %55, %286
  %71 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %21, align 8
  call void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"* %22) #3
  %72 = load i32, i32* @x.493
  %73 = load i32, i32* @y.494
  %74 = sub i32 %72, 154598406
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 154598406
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %286

; <label>:86:                                     ; preds = %70
  ret %"struct.std::__detail::_Hash_node"* %71

; <label>:87:                                     ; preds = %44
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %23, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %24, align 4
  br label %95

; <label>:91:                                     ; preds = %46
  %92 = landingpad { i8*, i32 }
          catch i8* null
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %23, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %24, align 4
  call void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"* %22) #3
  br label %95

; <label>:95:                                     ; preds = %91, %87
  %96 = load i32, i32* @x.493
  %97 = load i32, i32* @y.494
  %98 = add i32 %96, -1280846643
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, -1280846643
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %288

; <label>:110:                                    ; preds = %95, %288
  %111 = load i8*, i8** %23, align 8
  %112 = call i8* @__cxa_begin_catch(i8* %111) #3
  %113 = load i32, i32* @x.493
  %114 = load i32, i32* @y.494
  %115 = sub i32 %113, 1889487446
  %116 = sub i32 %115, 1
  %117 = add i32 %116, 1889487446
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 false, true
  %126 = and i1 %123, false
  %127 = and i1 %121, %125
  %128 = and i1 %124, false
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 false, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %288

; <label>:139:                                    ; preds = %110
  %140 = invoke dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %25)
          to label %141 unwind label %174

; <label>:141:                                    ; preds = %139
  %142 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %20, align 8
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE10deallocateERS4_PS3_m(%"class.std::allocator.15"* dereferenceable(1) %140, %"struct.std::__detail::_Hash_node"* %142, i64 1)
          to label %143 unwind label %174

; <label>:143:                                    ; preds = %141
  %144 = load i32, i32* @x.493
  %145 = load i32, i32* @y.494
  %146 = add i32 %144, 1157624820
  %147 = sub i32 %146, 1
  %148 = sub i32 %147, 1157624820
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %291

; <label>:158:                                    ; preds = %143, %291
  %159 = load i32, i32* @x.493
  %160 = load i32, i32* @y.494
  %161 = add i32 %159, 211684682
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 211684682
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  br i1 %171, label %173, label %291

; <label>:173:                                    ; preds = %158
  invoke void @__cxa_rethrow() #12
          to label %272 unwind label %174

; <label>:174:                                    ; preds = %173, %141, %139
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %23, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %178 unwind label %227

; <label>:178:                                    ; preds = %174
  %179 = load i32, i32* @x.493
  %180 = load i32, i32* @y.494
  %181 = sub i32 %179, 1255194729
  %182 = sub i32 %181, 1
  %183 = add i32 %182, 1255194729
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  br i1 %191, label %193, label %292

; <label>:193:                                    ; preds = %178, %292
  %194 = load i32, i32* @x.493
  %195 = load i32, i32* @y.494
  %196 = add i32 %194, 1541059687
  %197 = sub i32 %196, 1
  %198 = sub i32 %197, 1541059687
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = xor i1 %202, true
  %205 = xor i1 %203, true
  %206 = xor i1 true, true
  %207 = and i1 %204, true
  %208 = and i1 %202, %206
  %209 = and i1 %205, true
  %210 = and i1 %203, %206
  %211 = or i1 %207, %208
  %212 = or i1 %209, %210
  %213 = xor i1 %211, %212
  %214 = or i1 %204, %205
  %215 = xor i1 %214, true
  %216 = or i1 true, %206
  %217 = and i1 %215, %216
  %218 = or i1 %213, %217
  %219 = or i1 %202, %203
  br i1 %218, label %220, label %292

; <label>:220:                                    ; preds = %193
  br label %222
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:222:                                    ; preds = %220
  %223 = load i8*, i8** %23, align 8
  %224 = load i32, i32* %24, align 4
  %225 = insertvalue { i8*, i32 } undef, i8* %223, 0
  %226 = insertvalue { i8*, i32 } %225, i32 %224, 1
  resume { i8*, i32 } %226

; <label>:227:                                    ; preds = %174
  %228 = load i32, i32* @x.493
  %229 = load i32, i32* @y.494
  %230 = add i32 %228, 696815996
  %231 = sub i32 %230, 1
  %232 = sub i32 %231, 696815996
  %233 = sub i32 %228, 1
  %234 = mul i32 %228, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %229, 10
  %238 = xor i1 %236, true
  %239 = xor i1 %237, true
  %240 = xor i1 false, true
  %241 = and i1 %238, false
  %242 = and i1 %236, %240
  %243 = and i1 %239, false
  %244 = and i1 %237, %240
  %245 = or i1 %241, %242
  %246 = or i1 %243, %244
  %247 = xor i1 %245, %246
  %248 = or i1 %238, %239
  %249 = xor i1 %248, true
  %250 = or i1 false, %240
  %251 = and i1 %249, %250
  %252 = or i1 %247, %251
  %253 = or i1 %236, %237
  br i1 %252, label %254, label %293

; <label>:254:                                    ; preds = %227, %293
  %255 = landingpad { i8*, i32 }
          catch i8* null
  %256 = extractvalue { i8*, i32 } %255, 0
  call void @__clang_call_terminate(i8* %256) #9
  %257 = load i32, i32* @x.493
  %258 = load i32, i32* @y.494
  %259 = add i32 %257, -1569238907
  %260 = sub i32 %259, 1
  %261 = sub i32 %260, -1569238907
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = and i1 %265, %266
  %268 = xor i1 %265, %266
  %269 = or i1 %267, %268
  %270 = or i1 %265, %266
  br i1 %269, label %271, label %293

; <label>:271:                                    ; preds = %254
  unreachable

; <label>:272:                                    ; preds = %173
  unreachable

; <label>:273:                                    ; preds = %17, %2
  %274 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %275 = alloca %class.Pos*, align 8
  %276 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %277 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %278 = alloca %"class.std::allocator.32", align 1
  %279 = alloca i8*
  %280 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %274, align 8
  store %class.Pos* %1, %class.Pos** %275, align 8
  %281 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %274, align 8
  %282 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %281)
  %283 = call %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE8allocateERS4_m(%"class.std::allocator.15"* dereferenceable(1) %282, i64 1)
  store %"struct.std::__detail::_Hash_node"* %283, %"struct.std::__detail::_Hash_node"** %276, align 8
  %284 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %276, align 8
  %285 = call %"struct.std::__detail::_Hash_node"* @_ZSt11__addressofINSt8__detail10_Hash_nodeI3PosLb1EEEEPT_RS4_(%"struct.std::__detail::_Hash_node"* dereferenceable(32) %284) #3
  store %"struct.std::__detail::_Hash_node"* %285, %"struct.std::__detail::_Hash_node"** %277, align 8
  br label %17

; <label>:286:                                    ; preds = %70, %55
  %287 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %21, align 8
  call void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"* %22) #3
  br label %70

; <label>:288:                                    ; preds = %110, %95
  %289 = load i8*, i8** %23, align 8
  %290 = call i8* @__cxa_begin_catch(i8* %289) #3
  br label %110

; <label>:291:                                    ; preds = %158, %143
  br label %158

; <label>:292:                                    ; preds = %193, %178
  br label %193

; <label>:293:                                    ; preds = %254, %227
  %294 = landingpad { i8*, i32 }
          catch i8* null
  %295 = extractvalue { i8*, i32 } %294, 0
  call void @__clang_call_terminate(i8* %295) #9
  br label %254
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeI3PosLb1EEEEE8allocateERS4_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::__detail::_Hash_node"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"struct.std::__detail::_Hash_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail10_Hash_nodeI3PosLb1EEC2Ev(%"struct.std::__detail::_Hash_node"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"* %0, %"struct.std::__detail::_Hash_node"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node"* %3 to %"struct.std::__detail::_Hash_node_value_base"*
  call void @_ZNSt8__detail21_Hash_node_value_baseI3PosEC2Ev(%"struct.std::__detail::_Hash_node_value_base"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1), %class.Pos*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.32"*, align 8
  %5 = alloca %class.Pos*, align 8
  %6 = alloca %class.Pos*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %4, align 8
  store %class.Pos* %1, %class.Pos** %5, align 8
  store %class.Pos* %2, %class.Pos** %6, align 8
  %7 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %4, align 8
  %8 = bitcast %"class.std::allocator.32"* %7 to %"class.__gnu_cxx::new_allocator.33"*
  %9 = load %class.Pos*, %class.Pos** %5, align 8
  %10 = load %class.Pos*, %class.Pos** %6, align 8
  %11 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorI3PosE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.33"* %8, %class.Pos* %9, %class.Pos* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -811689414, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %151
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -811689414, label %17
    i32 196857019, label %22
    i32 1330258253, label %38
    i32 12674469, label %54
    i32 -1124337675, label %55
    i32 130365808, label %82
    i32 -1762874139, label %114
    i32 863993651, label %116
    i32 -1823746892, label %117
  ]

; <label>:16:                                     ; preds = %14
  br label %151

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 196857019, i32 -1124337675
  store i32 %21, i32* %13
  br label %151

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.501
  %24 = load i32, i32* @y.502
  %25 = add i32 %23, -2124558569
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -2124558569
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 1330258253, i32 863993651
  store i32 %37, i32* %13
  br label %151

; <label>:38:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  %39 = load i32, i32* @x.501
  %40 = load i32, i32* @y.502
  %41 = add i32 %39, -1187845658
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1187845658
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 12674469, i32 863993651
  store i32 %53, i32* %13
  br label %151

; <label>:54:                                     ; preds = %14
  unreachable

; <label>:55:                                     ; preds = %14
  %56 = load i32, i32* @x.501
  %57 = load i32, i32* @y.502
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 130365808, i32 -1823746892
  store i32 %81, i32* %13
  br label %151

; <label>:82:                                     ; preds = %14
  %83 = load i64, i64* %8, align 8
  %84 = mul i64 %83, 32
  %85 = call i8* @_Znwm(i64 %84)
  %86 = bitcast i8* %85 to %"struct.std::__detail::_Hash_node"*
  store %"struct.std::__detail::_Hash_node"* %86, %"struct.std::__detail::_Hash_node"** %4
  %87 = load i32, i32* @x.501
  %88 = load i32, i32* @y.502
  %89 = add i32 %87, 757043545
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 757043545
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -1762874139, i32 -1823746892
  store i32 %113, i32* %13
  br label %151

; <label>:114:                                    ; preds = %14
  %115 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %4
  ret %"struct.std::__detail::_Hash_node"* %115

; <label>:116:                                    ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 1330258253, i32* %13
  br label %151

; <label>:117:                                    ; preds = %14
  %118 = load i64, i64* %8, align 8
  %119 = shl i64 %118, 32
  %120 = shl i64 %118, 32
  %121 = shl i64 %118, 32
  %122 = add i64 0, 7066115685612602757
  %123 = sub i64 %122, %118
  %124 = sub i64 %123, 7066115685612602757
  %125 = sub i64 0, %118
  %126 = sub i64 0, 32
  %127 = sub i64 %124, %126
  %128 = add i64 %124, 32
  %129 = add i64 0, 4931225758966396213
  %130 = sub i64 %129, %118
  %131 = sub i64 %130, 4931225758966396213
  %132 = sub i64 0, %118
  %133 = sub i64 0, 32
  %134 = sub i64 %131, %133
  %135 = add i64 %131, 32
  %136 = sub i64 0, %118
  %137 = add i64 0, %136
  %138 = sub i64 0, %118
  %139 = sub i64 0, 32
  %140 = sub i64 %137, %139
  %141 = add i64 %137, 32
  %142 = sub i64 0, 32
  %143 = add i64 %118, %142
  %144 = sub i64 %118, 32
  %145 = mul i64 %143, 32
  %146 = shl i64 %118, 32
  %147 = shl i64 %118, 32
  %148 = mul i64 %118, 32
  %149 = call i8* @_Znwm(i64 %148)
  %150 = bitcast i8* %149 to %"struct.std::__detail::_Hash_node"*
  store i32 130365808, i32* %13
  br label %151

; <label>:151:                                    ; preds = %117, %116, %82, %55, %38, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeI3PosLb1EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.503
  %5 = load i32, i32* @y.504
  %6 = add i32 %4, -722441045
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -722441045
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 243057076, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 243057076, label %18
    i32 554088022, label %26
    i32 -7086971, label %55
    i32 -1950460676, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 554088022, i32 -1950460676
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %27, align 8
  %29 = load i32, i32* @x.503
  %30 = load i32, i32* @y.504
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -7086971, i32 -1950460676
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret i64 576460752303423487

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %57, align 8
  store i32 554088022, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hash_node_value_baseI3PosEC2Ev(%"struct.std::__detail::_Hash_node_value_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.505
  %5 = load i32, i32* @y.506
  %6 = sub i32 %4, 1699704818
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1699704818
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1445837907, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1445837907, label %18
    i32 -1046221482, label %38
    i32 -1563570003, label %70
    i32 -243928588, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1046221482, i32 -243928588
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %39, align 8
  %40 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %39, align 8
  %41 = bitcast %"struct.std::__detail::_Hash_node_value_base"* %40 to %"struct.std::__detail::_Hash_node_base"*
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %41) #3
  %42 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %40, i32 0, i32 1
  %43 = load i32, i32* @x.505
  %44 = load i32, i32* @y.506
  %45 = add i32 %43, -505829265
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -505829265
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1563570003, i32 -243928588
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"struct.std::__detail::_Hash_node_value_base"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base"* %0, %"struct.std::__detail::_Hash_node_value_base"** %72, align 8
  %73 = load %"struct.std::__detail::_Hash_node_value_base"*, %"struct.std::__detail::_Hash_node_value_base"** %72, align 8
  %74 = bitcast %"struct.std::__detail::_Hash_node_value_base"* %73 to %"struct.std::__detail::_Hash_node_base"*
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %74) #3
  %75 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base", %"struct.std::__detail::_Hash_node_value_base"* %73, i32 0, i32 1
  store i32 -1046221482, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3PosE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.33"*, %class.Pos*, %class.Pos* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.507
  %7 = load i32, i32* @y.508
  %8 = sub i32 %6, -313402586
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -313402586
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -755385380, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -755385380, label %20
    i32 -1143120911, label %28
    i32 1198459431, label %55
    i32 1336500091, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1143120911, i32 1336500091
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %30 = alloca %class.Pos*, align 8
  %31 = alloca %class.Pos*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %29, align 8
  store %class.Pos* %1, %class.Pos** %30, align 8
  store %class.Pos* %2, %class.Pos** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %29, align 8
  %33 = load %class.Pos*, %class.Pos** %30, align 8
  %34 = bitcast %class.Pos* %33 to i8*
  %35 = bitcast i8* %34 to %class.Pos*
  %36 = load %class.Pos*, %class.Pos** %31, align 8
  %37 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %36) #3
  %38 = bitcast %class.Pos* %35 to i8*
  %39 = bitcast %class.Pos* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = load i32, i32* @x.507
  %41 = load i32, i32* @y.508
  %42 = add i32 %40, 2001190441
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 2001190441
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1198459431, i32 1336500091
  store i32 %54, i32* %16
  br label %68

; <label>:55:                                     ; preds = %17
  ret void

; <label>:56:                                     ; preds = %17
  %57 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %58 = alloca %class.Pos*, align 8
  %59 = alloca %class.Pos*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %57, align 8
  store %class.Pos* %1, %class.Pos** %58, align 8
  store %class.Pos* %2, %class.Pos** %59, align 8
  %60 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %57, align 8
  %61 = load %class.Pos*, %class.Pos** %58, align 8
  %62 = bitcast %class.Pos* %61 to i8*
  %63 = bitcast i8* %62 to %class.Pos*
  %64 = load %class.Pos*, %class.Pos** %59, align 8
  %65 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %64) #3
  %66 = bitcast %class.Pos* %63 to i8*
  %67 = bitcast %class.Pos* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 16, i32 8, i1 false)
  store i32 -1143120911, i32* %16
  br label %68

; <label>:68:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable.4"*, i64, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Hashtable.4"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::integral_constant", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %10 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4, align 8
  %11 = load i64, i64* %5, align 8
  invoke void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable.4"* %10, i64 %11)
          to label %12 unwind label %54

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.509
  %14 = load i32, i32* @y.510
  %15 = add i32 %13, 1855823850
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 1855823850
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %246

; <label>:39:                                     ; preds = %12, %246
  %40 = load i32, i32* @x.509
  %41 = load i32, i32* @y.510
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %246

; <label>:53:                                     ; preds = %39
  br label %165

; <label>:54:                                     ; preds = %3
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %8, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %9, align 4
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %8, align 8
  %60 = call i8* @__cxa_begin_catch(i8* %59) #3
  %61 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %10, i32 0, i32 4
  %62 = load i64*, i64** %6, align 8
  %63 = load i64, i64* %62, align 8
  invoke void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"* %61, i64 %63)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %58
  invoke void @__cxa_rethrow() #12
          to label %245 unwind label %65

; <label>:65:                                     ; preds = %64, %58
  %66 = load i32, i32* @x.509
  %67 = load i32, i32* @y.510
  %68 = sub i32 %66, 1971000997
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1971000997
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %247

; <label>:80:                                     ; preds = %65, %247
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %8, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %9, align 4
  %84 = load i32, i32* @x.509
  %85 = load i32, i32* @y.510
  %86 = sub i32 %84, -1866786628
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -1866786628
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %247

; <label>:110:                                    ; preds = %80
  invoke void @__cxa_end_catch()
          to label %111 unwind label %201

; <label>:111:                                    ; preds = %110
  %112 = load i32, i32* @x.509
  %113 = load i32, i32* @y.510
  %114 = sub i32 0, 1
  %115 = add i32 %112, %114
  %116 = sub i32 %112, 1
  %117 = mul i32 %112, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %113, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %251

; <label>:137:                                    ; preds = %111, %251
  %138 = load i32, i32* @x.509
  %139 = load i32, i32* @y.510
  %140 = sub i32 %138, -179492133
  %141 = sub i32 %140, 1
  %142 = add i32 %141, -179492133
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 false, true
  %151 = and i1 %148, false
  %152 = and i1 %146, %150
  %153 = and i1 %149, false
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 false, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %251

; <label>:164:                                    ; preds = %137
  br label %166

; <label>:165:                                    ; preds = %53
  ret void

; <label>:166:                                    ; preds = %164
  %167 = load i32, i32* @x.509
  %168 = load i32, i32* @y.510
  %169 = sub i32 %167, -1455453407
  %170 = sub i32 %169, 1
  %171 = add i32 %170, -1455453407
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %252

; <label>:181:                                    ; preds = %166, %252
  %182 = load i8*, i8** %8, align 8
  %183 = load i32, i32* %9, align 4
  %184 = insertvalue { i8*, i32 } undef, i8* %182, 0
  %185 = insertvalue { i8*, i32 } %184, i32 %183, 1
  %186 = load i32, i32* @x.509
  %187 = load i32, i32* @y.510
  %188 = add i32 %186, 1622517870
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, 1622517870
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %252

; <label>:200:                                    ; preds = %181
  resume { i8*, i32 } %185

; <label>:201:                                    ; preds = %110
  %202 = load i32, i32* @x.509
  %203 = load i32, i32* @y.510
  %204 = sub i32 %202, -2107982691
  %205 = sub i32 %204, 1
  %206 = add i32 %205, -2107982691
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %257

; <label>:216:                                    ; preds = %201, %257
  %217 = landingpad { i8*, i32 }
          catch i8* null
  %218 = extractvalue { i8*, i32 } %217, 0
  call void @__clang_call_terminate(i8* %218) #9
  %219 = load i32, i32* @x.509
  %220 = load i32, i32* @y.510
  %221 = sub i32 0, 1
  %222 = add i32 %219, %221
  %223 = sub i32 %219, 1
  %224 = mul i32 %219, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %220, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 false, true
  %231 = and i1 %228, false
  %232 = and i1 %226, %230
  %233 = and i1 %229, false
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 false, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  br i1 %242, label %244, label %257

; <label>:244:                                    ; preds = %216
  unreachable

; <label>:245:                                    ; preds = %64
  unreachable

; <label>:246:                                    ; preds = %39, %12
  br label %39

; <label>:247:                                    ; preds = %80, %65
  %248 = landingpad { i8*, i32 }
          cleanup
  %249 = extractvalue { i8*, i32 } %248, 0
  store i8* %249, i8** %8, align 8
  %250 = extractvalue { i8*, i32 } %248, 1
  store i32 %250, i32* %9, align 4
  br label %80

; <label>:251:                                    ; preds = %137, %111
  br label %137

; <label>:252:                                    ; preds = %181, %166
  %253 = load i8*, i8** %8, align 8
  %254 = load i32, i32* %9, align 4
  %255 = insertvalue { i8*, i32 } undef, i8* %253, 0
  %256 = insertvalue { i8*, i32 } %255, i32 %254, 1
  br label %181

; <label>:257:                                    ; preds = %216, %201
  %258 = landingpad { i8*, i32 }
          catch i8* null
  %259 = extractvalue { i8*, i32 } %258, 0
  call void @__clang_call_terminate(i8* %259) #9
  br label %216
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeIS1_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_node"*, i64) #5 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_code_base.6"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base.6"* %0, %"struct.std::__detail::_Hash_code_base.6"** %4, align 8
  store %"struct.std::__detail::_Hash_node"* %1, %"struct.std::__detail::_Hash_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base.6"*, %"struct.std::__detail::_Hash_code_base.6"** %4, align 8
  %8 = load i64, i64* %6, align 8
  %9 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %5, align 8
  %10 = getelementptr inbounds %"struct.std::__detail::_Hash_node", %"struct.std::__detail::_Hash_node"* %9, i32 0, i32 1
  store i64 %8, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE22_M_insert_bucket_beginEmPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"*, i64, %"struct.std::__detail::_Hash_node"*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Hashtable.4"*
  %6 = alloca %"struct.std::__detail::_Hash_node"**
  %7 = alloca i64*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.513
  %11 = load i32, i32* @y.514
  %12 = sub i32 %10, -1101281385
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -1101281385
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 586308605, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %213
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 586308605, label %24
    i32 -66113856, label %32
    i32 -1788232236, label %73
    i32 791077970, label %76
    i32 -2032947872, label %101
    i32 -1754899890, label %123
    i32 1266565672, label %151
    i32 -1165151429, label %178
    i32 1043049168, label %179
    i32 959640399, label %188
    i32 1970286520, label %189
    i32 -439480003, label %200
  ]

; <label>:23:                                     ; preds = %21
  br label %213

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -66113856, i32 1970286520
  store i32 %31, i32* %20
  br label %213

; <label>:32:                                     ; preds = %21
  %33 = alloca %"class.std::_Hashtable.4"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %7
  %35 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"struct.std::__detail::_Hash_node"** %35, %"struct.std::__detail::_Hash_node"*** %6
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %33, align 8
  %36 = load volatile i64*, i64** %7
  store i64 %1, i64* %36, align 8
  %37 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  store %"struct.std::__detail::_Hash_node"* %2, %"struct.std::__detail::_Hash_node"** %37, align 8
  %38 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %33, align 8
  store %"class.std::_Hashtable.4"* %38, %"class.std::_Hashtable.4"** %5
  %39 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %40 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %39, i32 0, i32 0
  %41 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %40, align 8
  %42 = load volatile i64*, i64** %7
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %41, i64 %43
  %45 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %44, align 8
  %46 = icmp ne %"struct.std::__detail::_Hash_node_base"* %45, null
  store i1 %46, i1* %4
  %47 = load i32, i32* @x.513
  %48 = load i32, i32* @y.514
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1788232236, i32 1970286520
  store i32 %72, i32* %20
  br label %213

; <label>:73:                                     ; preds = %21
  %74 = load volatile i1, i1* %4
  %75 = select i1 %74, i32 791077970, i32 -2032947872
  store i32 %75, i32* %20
  br label %213

; <label>:76:                                     ; preds = %21
  %77 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %78 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %77, i32 0, i32 0
  %79 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %78, align 8
  %80 = load volatile i64*, i64** %7
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %79, i64 %81
  %83 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %83, i32 0, i32 0
  %85 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %84, align 8
  %86 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %87 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %86, align 8
  %88 = bitcast %"struct.std::__detail::_Hash_node"* %87 to %"struct.std::__detail::_Hash_node_base"*
  %89 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %88, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %85, %"struct.std::__detail::_Hash_node_base"** %89, align 8
  %90 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %91 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %90, align 8
  %92 = bitcast %"struct.std::__detail::_Hash_node"* %91 to %"struct.std::__detail::_Hash_node_base"*
  %93 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %94 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %93, i32 0, i32 0
  %95 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %94, align 8
  %96 = load volatile i64*, i64** %7
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %95, i64 %97
  %99 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %99, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %92, %"struct.std::__detail::_Hash_node_base"** %100, align 8
  store i32 959640399, i32* %20
  br label %213

; <label>:101:                                    ; preds = %21
  %102 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %103 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %102, i32 0, i32 2
  %104 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %103, i32 0, i32 0
  %105 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %104, align 8
  %106 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %107 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %106, align 8
  %108 = bitcast %"struct.std::__detail::_Hash_node"* %107 to %"struct.std::__detail::_Hash_node_base"*
  %109 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %108, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %105, %"struct.std::__detail::_Hash_node_base"** %109, align 8
  %110 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %111 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %110, align 8
  %112 = bitcast %"struct.std::__detail::_Hash_node"* %111 to %"struct.std::__detail::_Hash_node_base"*
  %113 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %114 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %113, i32 0, i32 2
  %115 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %114, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %112, %"struct.std::__detail::_Hash_node_base"** %115, align 8
  %116 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %117 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %116, align 8
  %118 = bitcast %"struct.std::__detail::_Hash_node"* %117 to %"struct.std::__detail::_Hash_node_base"*
  %119 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %118, i32 0, i32 0
  %120 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %119, align 8
  %121 = icmp ne %"struct.std::__detail::_Hash_node_base"* %120, null
  %122 = select i1 %121, i32 -1754899890, i32 1043049168
  store i32 %122, i32* %20
  br label %213

; <label>:123:                                    ; preds = %21
  %124 = load i32, i32* @x.513
  %125 = load i32, i32* @y.514
  %126 = add i32 %124, 1994144965
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, 1994144965
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 true, true
  %137 = and i1 %134, true
  %138 = and i1 %132, %136
  %139 = and i1 %135, true
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 true, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 1266565672, i32 -439480003
  store i32 %150, i32* %20
  br label %213

; <label>:151:                                    ; preds = %21
  %152 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %153 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %152, align 8
  %154 = bitcast %"struct.std::__detail::_Hash_node"* %153 to %"struct.std::__detail::_Hash_node_base"*
  %155 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %156 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %155, i32 0, i32 0
  %157 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %156, align 8
  %158 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %159 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %158, align 8
  %160 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %159) #3
  %161 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %162 = call i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexEPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"* %161, %"struct.std::__detail::_Hash_node"* %160) #3
  %163 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %157, i64 %162
  store %"struct.std::__detail::_Hash_node_base"* %154, %"struct.std::__detail::_Hash_node_base"** %163, align 8
  %164 = load i32, i32* @x.513
  %165 = load i32, i32* @y.514
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  %177 = select i1 %175, i32 -1165151429, i32 -439480003
  store i32 %177, i32* %20
  br label %213

; <label>:178:                                    ; preds = %21
  store i32 1043049168, i32* %20
  br label %213

; <label>:179:                                    ; preds = %21
  %180 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %181 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %180, i32 0, i32 2
  %182 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %183 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %182, i32 0, i32 0
  %184 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %183, align 8
  %185 = load volatile i64*, i64** %7
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %184, i64 %186
  store %"struct.std::__detail::_Hash_node_base"* %181, %"struct.std::__detail::_Hash_node_base"** %187, align 8
  store i32 959640399, i32* %20
  br label %213

; <label>:188:                                    ; preds = %21
  ret void

; <label>:189:                                    ; preds = %21
  %190 = alloca %"class.std::_Hashtable.4"*, align 8
  %191 = alloca i64, align 8
  %192 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %190, align 8
  store i64 %1, i64* %191, align 8
  store %"struct.std::__detail::_Hash_node"* %2, %"struct.std::__detail::_Hash_node"** %192, align 8
  %193 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %190, align 8
  %194 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %193, i32 0, i32 0
  %195 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %194, align 8
  %196 = load i64, i64* %191, align 8
  %197 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %195, i64 %196
  %198 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %197, align 8
  %199 = icmp ne %"struct.std::__detail::_Hash_node_base"* %198, null
  store i32 -66113856, i32* %20
  br label %213

; <label>:200:                                    ; preds = %21
  %201 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %202 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %201, align 8
  %203 = bitcast %"struct.std::__detail::_Hash_node"* %202 to %"struct.std::__detail::_Hash_node_base"*
  %204 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %205 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %204, i32 0, i32 0
  %206 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %205, align 8
  %207 = load volatile %"struct.std::__detail::_Hash_node"**, %"struct.std::__detail::_Hash_node"*** %6
  %208 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %207, align 8
  %209 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %208) #3
  %210 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %5
  %211 = call i64 @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE15_M_bucket_indexEPNS2_10_Hash_nodeIS0_Lb1EEE(%"class.std::_Hashtable.4"* %210, %"struct.std::__detail::_Hash_node"* %209) #3
  %212 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %206, i64 %211
  store %"struct.std::__detail::_Hash_node_base"* %203, %"struct.std::__detail::_Hash_node_base"** %212, align 8
  store i32 1266565672, i32* %20
  br label %213

; <label>:213:                                    ; preds = %200, %189, %179, %178, %151, %123, %101, %76, %73, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable.4"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Hashtable.4"*
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"class.std::_Hashtable.4"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"struct.std::__detail::_Hash_node"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  %13 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %6, align 8
  store %"class.std::_Hashtable.4"* %13, %"class.std::_Hashtable.4"** %4
  %14 = load i64, i64* %7, align 8
  %15 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %16 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable.4"* %15, i64 %14)
  store %"struct.std::__detail::_Hash_node_base"** %16, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %17 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %18 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.4"* %17)
  store %"struct.std::__detail::_Hash_node"* %18, %"struct.std::__detail::_Hash_node"** %9, align 8
  %19 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %20 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %19, i32 0, i32 2
  %21 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %20, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %21, align 8
  store i64 0, i64* %10, align 8
  %22 = alloca i32
  store i32 2124043372, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %259
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 2124043372, label %26
    i32 -2107904147, label %30
    i32 -1447377486, label %58
    i32 882393102, label %98
    i32 876426371, label %101
    i32 1319273983, label %125
    i32 -100323200, label %141
    i32 -1484812984, label %161
    i32 -1199701866, label %162
    i32 -1856189568, label %164
    i32 -1111247732, label %180
    i32 -857258458, label %212
    i32 -192884177, label %213
    i32 -427697719, label %215
    i32 2041439964, label %223
    i32 727481129, label %236
    i32 318877757, label %242
  ]

; <label>:25:                                     ; preds = %23
  br label %259

; <label>:26:                                     ; preds = %23
  %27 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %28 = icmp ne %"struct.std::__detail::_Hash_node"* %27, null
  %29 = select i1 %28, i32 -2107904147, i32 -427697719
  store i32 %29, i32* %22
  br label %259

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.515
  %32 = load i32, i32* @y.516
  %33 = sub i32 %31, -2027820380
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -2027820380
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1447377486, i32 2041439964
  store i32 %57, i32* %22
  br label %259

; <label>:58:                                     ; preds = %23
  %59 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %60 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %59) #3
  store %"struct.std::__detail::_Hash_node"* %60, %"struct.std::__detail::_Hash_node"** %11, align 8
  %61 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %62 = bitcast %"class.std::_Hashtable.4"* %61 to %"struct.std::__detail::_Hash_code_base.6"*
  %63 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %64 = load i64, i64* %7, align 8
  %65 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS1_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.6"* %62, %"struct.std::__detail::_Hash_node"* %63, i64 %64) #3
  store i64 %65, i64* %12, align 8
  %66 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %67 = load i64, i64* %12, align 8
  %68 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %66, i64 %67
  %69 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %68, align 8
  %70 = icmp ne %"struct.std::__detail::_Hash_node_base"* %69, null
  store i1 %70, i1* %3
  %71 = load i32, i32* @x.515
  %72 = load i32, i32* @y.516
  %73 = add i32 %71, -599380322
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -599380322
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 882393102, i32 2041439964
  store i32 %97, i32* %22
  br label %259

; <label>:98:                                     ; preds = %23
  %99 = load volatile i1, i1* %3
  %100 = select i1 %99, i32 -1856189568, i32 876426371
  store i32 %100, i32* %22
  br label %259

; <label>:101:                                    ; preds = %23
  %102 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %103 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %102, i32 0, i32 2
  %104 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %103, i32 0, i32 0
  %105 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %104, align 8
  %106 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %107 = bitcast %"struct.std::__detail::_Hash_node"* %106 to %"struct.std::__detail::_Hash_node_base"*
  %108 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %107, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %105, %"struct.std::__detail::_Hash_node_base"** %108, align 8
  %109 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %110 = bitcast %"struct.std::__detail::_Hash_node"* %109 to %"struct.std::__detail::_Hash_node_base"*
  %111 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %112 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %111, i32 0, i32 2
  %113 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %112, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %110, %"struct.std::__detail::_Hash_node_base"** %113, align 8
  %114 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %115 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %114, i32 0, i32 2
  %116 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %117 = load i64, i64* %12, align 8
  %118 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %116, i64 %117
  store %"struct.std::__detail::_Hash_node_base"* %115, %"struct.std::__detail::_Hash_node_base"** %118, align 8
  %119 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %120 = bitcast %"struct.std::__detail::_Hash_node"* %119 to %"struct.std::__detail::_Hash_node_base"*
  %121 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %120, i32 0, i32 0
  %122 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %121, align 8
  %123 = icmp ne %"struct.std::__detail::_Hash_node_base"* %122, null
  %124 = select i1 %123, i32 1319273983, i32 -1199701866
  store i32 %124, i32* %22
  br label %259

; <label>:125:                                    ; preds = %23
  %126 = load i32, i32* @x.515
  %127 = load i32, i32* @y.516
  %128 = add i32 %126, -1225391165
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -1225391165
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  %140 = select i1 %138, i32 -100323200, i32 727481129
  store i32 %140, i32* %22
  br label %259

; <label>:141:                                    ; preds = %23
  %142 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %143 = bitcast %"struct.std::__detail::_Hash_node"* %142 to %"struct.std::__detail::_Hash_node_base"*
  %144 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %145 = load i64, i64* %10, align 8
  %146 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %144, i64 %145
  store %"struct.std::__detail::_Hash_node_base"* %143, %"struct.std::__detail::_Hash_node_base"** %146, align 8
  %147 = load i32, i32* @x.515
  %148 = load i32, i32* @y.516
  %149 = sub i32 0, 1
  %150 = add i32 %147, %149
  %151 = sub i32 %147, 1
  %152 = mul i32 %147, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %148, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  %160 = select i1 %158, i32 -1484812984, i32 727481129
  store i32 %160, i32* %22
  br label %259

; <label>:161:                                    ; preds = %23
  store i32 -1199701866, i32* %22
  br label %259

; <label>:162:                                    ; preds = %23
  %163 = load i64, i64* %12, align 8
  store i64 %163, i64* %10, align 8
  store i32 -192884177, i32* %22
  br label %259

; <label>:164:                                    ; preds = %23
  %165 = load i32, i32* @x.515
  %166 = load i32, i32* @y.516
  %167 = sub i32 %165, -1450667492
  %168 = sub i32 %167, 1
  %169 = add i32 %168, -1450667492
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  %179 = select i1 %177, i32 -1111247732, i32 318877757
  store i32 %179, i32* %22
  br label %259

; <label>:180:                                    ; preds = %23
  %181 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %182 = load i64, i64* %12, align 8
  %183 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %181, i64 %182
  %184 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %183, align 8
  %185 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %184, i32 0, i32 0
  %186 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %185, align 8
  %187 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %188 = bitcast %"struct.std::__detail::_Hash_node"* %187 to %"struct.std::__detail::_Hash_node_base"*
  %189 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %188, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %186, %"struct.std::__detail::_Hash_node_base"** %189, align 8
  %190 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %191 = bitcast %"struct.std::__detail::_Hash_node"* %190 to %"struct.std::__detail::_Hash_node_base"*
  %192 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %193 = load i64, i64* %12, align 8
  %194 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %192, i64 %193
  %195 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %194, align 8
  %196 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %195, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %191, %"struct.std::__detail::_Hash_node_base"** %196, align 8
  %197 = load i32, i32* @x.515
  %198 = load i32, i32* @y.516
  %199 = add i32 %197, -969602333
  %200 = sub i32 %199, 1
  %201 = sub i32 %200, -969602333
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  %211 = select i1 %209, i32 -857258458, i32 318877757
  store i32 %211, i32* %22
  br label %259

; <label>:212:                                    ; preds = %23
  store i32 -192884177, i32* %22
  br label %259

; <label>:213:                                    ; preds = %23
  %214 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %11, align 8
  store %"struct.std::__detail::_Hash_node"* %214, %"struct.std::__detail::_Hash_node"** %9, align 8
  store i32 2124043372, i32* %22
  br label %259

; <label>:215:                                    ; preds = %23
  %216 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  call void @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable.4"* %216)
  %217 = load i64, i64* %7, align 8
  %218 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %219 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %218, i32 0, i32 1
  store i64 %217, i64* %219, align 8
  %220 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %221 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %222 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %221, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %220, %"struct.std::__detail::_Hash_node_base"*** %222, align 8
  ret void

; <label>:223:                                    ; preds = %23
  %224 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %225 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %224) #3
  store %"struct.std::__detail::_Hash_node"* %225, %"struct.std::__detail::_Hash_node"** %11, align 8
  %226 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %227 = bitcast %"class.std::_Hashtable.4"* %226 to %"struct.std::__detail::_Hash_code_base.6"*
  %228 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %229 = load i64, i64* %7, align 8
  %230 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosS1_NS_9_IdentityESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS1_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.6"* %227, %"struct.std::__detail::_Hash_node"* %228, i64 %229) #3
  store i64 %230, i64* %12, align 8
  %231 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %232 = load i64, i64* %12, align 8
  %233 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %231, i64 %232
  %234 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %233, align 8
  %235 = icmp ne %"struct.std::__detail::_Hash_node_base"* %234, null
  store i32 -1447377486, i32* %22
  br label %259

; <label>:236:                                    ; preds = %23
  %237 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %238 = bitcast %"struct.std::__detail::_Hash_node"* %237 to %"struct.std::__detail::_Hash_node_base"*
  %239 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %240 = load i64, i64* %10, align 8
  %241 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %239, i64 %240
  store %"struct.std::__detail::_Hash_node_base"* %238, %"struct.std::__detail::_Hash_node_base"** %241, align 8
  store i32 -100323200, i32* %22
  br label %259

; <label>:242:                                    ; preds = %23
  %243 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %244 = load i64, i64* %12, align 8
  %245 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %243, i64 %244
  %246 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %245, align 8
  %247 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %246, i32 0, i32 0
  %248 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %247, align 8
  %249 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %250 = bitcast %"struct.std::__detail::_Hash_node"* %249 to %"struct.std::__detail::_Hash_node_base"*
  %251 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %250, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %248, %"struct.std::__detail::_Hash_node_base"** %251, align 8
  %252 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %9, align 8
  %253 = bitcast %"struct.std::__detail::_Hash_node"* %252 to %"struct.std::__detail::_Hash_node_base"*
  %254 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %8, align 8
  %255 = load i64, i64* %12, align 8
  %256 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %254, i64 %255
  %257 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %256, align 8
  %258 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %257, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %253, %"struct.std::__detail::_Hash_node_base"** %258, align 8
  store i32 -1111247732, i32* %22
  br label %259

; <label>:259:                                    ; preds = %242, %236, %223, %213, %212, %180, %164, %162, %161, %141, %125, %101, %98, %58, %30, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable.4"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"class.std::_Hashtable.4"*
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %6 = alloca %"class.std::_Hashtable.4"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %6, align 8
  store %"class.std::_Hashtable.4"* %8, %"class.std::_Hashtable.4"** %4
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %3
  %10 = alloca i32
  store i32 13044162, i32* %10
  br label %11

; <label>:11:                                     ; preds = %2, %77
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 13044162, label %14
    i32 -925502504, label %18
    i32 2083921584, label %33
    i32 -902577642, label %64
    i32 -1349123059, label %65
    i32 -1137664857, label %70
    i32 -1010456536, label %72
  ]

; <label>:13:                                     ; preds = %11
  br label %77

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp eq i64 %15, 1
  %17 = select i1 %16, i32 -925502504, i32 -1349123059
  store i32 %17, i32* %10
  br label %77

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.517
  %20 = load i32, i32* @y.518
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 2083921584, i32 -1010456536
  store i32 %32, i32* %10
  br label %77

; <label>:33:                                     ; preds = %11
  %34 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %35 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %34, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %35, align 8
  %36 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %37 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %36, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %37, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  %38 = load i32, i32* @x.517
  %39 = load i32, i32* @y.518
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -902577642, i32 -1010456536
  store i32 %63, i32* %10
  br label %77

; <label>:64:                                     ; preds = %11
  store i32 -1137664857, i32* %10
  br label %77

; <label>:65:                                     ; preds = %11
  %66 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %67 = bitcast %"class.std::_Hashtable.4"* %66 to %"struct.std::__detail::_Hashtable_alloc.13"*
  %68 = load i64, i64* %7, align 8
  %69 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc.13"* %67, i64 %68)
  store %"struct.std::__detail::_Hash_node_base"** %69, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i32 -1137664857, i32* %10
  br label %77

; <label>:70:                                     ; preds = %11
  %71 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  ret %"struct.std::__detail::_Hash_node_base"** %71

; <label>:72:                                     ; preds = %11
  %73 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %74 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %73, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %74, align 8
  %75 = load volatile %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %4
  %76 = getelementptr inbounds %"class.std::_Hashtable.4", %"class.std::_Hashtable.4"* %75, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %76, %"struct.std::__detail::_Hash_node_base"*** %5, align 8
  store i32 2083921584, i32* %10
  br label %77

; <label>:77:                                     ; preds = %72, %65, %64, %33, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc.13"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.519
  %4 = load i32, i32* @y.520
  %5 = add i32 %3, 1809975175
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1809975175
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %73

; <label>:29:                                     ; preds = %2, %73
  %30 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.45", align 1
  %33 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %34 = alloca i8*
  %35 = alloca i32
  %36 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %30, align 8
  store i64 %1, i64* %31, align 8
  %37 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %30, align 8
  %38 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %37)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeI3PosLb1EEEEERKSaIT_E(%"class.std::allocator.45"* %32, %"class.std::allocator.15"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %31, align 8
  %40 = load i32, i32* @x.519
  %41 = load i32, i32* @y.520
  %42 = add i32 %40, 1457156352
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1457156352
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %73

; <label>:54:                                     ; preds = %29
  %55 = invoke %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.45"* dereferenceable(1) %32, i64 %39)
          to label %56 unwind label %64

; <label>:56:                                     ; preds = %54
  store %"struct.std::__detail::_Hash_node_base"** %55, %"struct.std::__detail::_Hash_node_base"*** %33, align 8
  %57 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %33, align 8
  %58 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %57) #3
  store %"struct.std::__detail::_Hash_node_base"** %58, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %59 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %60 = bitcast %"struct.std::__detail::_Hash_node_base"** %59 to i8*
  %61 = load i64, i64* %31, align 8
  %62 = mul i64 %61, 8
  call void @llvm.memset.p0i8.i64(i8* %60, i8 0, i64 %62, i32 8, i1 false)
  %63 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  ret %"struct.std::__detail::_Hash_node_base"** %63

; <label>:64:                                     ; preds = %54
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %34, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %35, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  br label %68

; <label>:68:                                     ; preds = %64
  %69 = load i8*, i8** %34, align 8
  %70 = load i32, i32* %35, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  resume { i8*, i32 } %72

; <label>:73:                                     ; preds = %29, %2
  %74 = alloca %"struct.std::__detail::_Hashtable_alloc.13"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca %"class.std::allocator.45", align 1
  %77 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %78 = alloca i8*
  %79 = alloca i32
  %80 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc.13"* %0, %"struct.std::__detail::_Hashtable_alloc.13"** %74, align 8
  store i64 %1, i64* %75, align 8
  %81 = load %"struct.std::__detail::_Hashtable_alloc.13"*, %"struct.std::__detail::_Hashtable_alloc.13"** %74, align 8
  %82 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeI3PosLb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.13"* %81)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeI3PosLb1EEEEERKSaIT_E(%"class.std::allocator.45"* %76, %"class.std::allocator.15"* dereferenceable(1) %82) #3
  %83 = load i64, i64* %75, align 8
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.521
  %3 = load i32, i32* @y.522
  %4 = sub i32 %2, -709618302
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -709618302
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %87

; <label>:28:                                     ; preds = %1, %87
  %29 = alloca %"class.std::_Deque_base"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %29, align 8
  %32 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %29, align 8
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %32, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %33)
  %34 = load i32, i32* @x.521
  %35 = load i32, i32* @y.522
  %36 = add i32 %34, 2096029411
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 2096029411
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %87

; <label>:48:                                     ; preds = %28
  invoke void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %32, i64 0)
          to label %49 unwind label %78

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* @x.521
  %51 = load i32, i32* @y.522
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %93

; <label>:63:                                     ; preds = %49, %93
  %64 = load i32, i32* @x.521
  %65 = load i32, i32* @y.522
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %93

; <label>:77:                                     ; preds = %63
  ret void

; <label>:78:                                     ; preds = %48
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %30, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %31, align 4
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %33) #3
  br label %82

; <label>:82:                                     ; preds = %78
  %83 = load i8*, i8** %30, align 8
  %84 = load i32, i32* %31, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  resume { i8*, i32 } %86

; <label>:87:                                     ; preds = %28, %1
  %88 = alloca %"class.std::_Deque_base"*, align 8
  %89 = alloca i8*
  %90 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %88, align 8
  %91 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %88, align 8
  %92 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %91, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %92)
  br label %28

; <label>:93:                                     ; preds = %63, %49
  br label %63
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %3 to %"class.std::allocator.32"*
  call void @_ZNSaI3PosEC2Ev(%"class.std::allocator.32"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %3, i32 0, i32 0
  store %class.Pos** null, %class.Pos*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %class.Pos**, align 8
  %9 = alloca %class.Pos**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 16)
  %15 = udiv i64 %13, %14
  %16 = sub i64 0, %15
  %17 = sub i64 0, 1
  %18 = add i64 %16, %17
  %19 = sub i64 0, %18
  %20 = add i64 %15, 1
  store i64 %19, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %21 = load i64, i64* %5, align 8
  %22 = sub i64 0, 2
  %23 = sub i64 %21, %22
  %24 = add i64 %21, 2
  store i64 %23, i64* %7, align 8
  %25 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %27, i32 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call %class.Pos** @_ZNSt11_Deque_baseI3PosSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %31)
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %33, i32 0, i32 0
  store %class.Pos** %32, %class.Pos*** %34, align 8
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %35, i32 0, i32 0
  %37 = load %class.Pos**, %class.Pos*** %36, align 8
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = sub i64 0, %41
  %43 = add i64 %40, %42
  %44 = sub i64 %40, %41
  %45 = udiv i64 %43, 2
  %46 = getelementptr inbounds %class.Pos*, %class.Pos** %37, i64 %45
  store %class.Pos** %46, %class.Pos*** %8, align 8
  %47 = load %class.Pos**, %class.Pos*** %8, align 8
  %48 = load i64, i64* %5, align 8
  %49 = getelementptr inbounds %class.Pos*, %class.Pos** %47, i64 %48
  store %class.Pos** %49, %class.Pos*** %9, align 8
  %50 = load %class.Pos**, %class.Pos*** %8, align 8
  %51 = load %class.Pos**, %class.Pos*** %9, align 8
  invoke void @_ZNSt11_Deque_baseI3PosSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base"* %12, %class.Pos** %50, %class.Pos** %51)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %2
  br label %75

; <label>:53:                                     ; preds = %2
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %10, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %11, align 4
  br label %57

; <label>:57:                                     ; preds = %53
  %58 = load i8*, i8** %10, align 8
  %59 = call i8* @__cxa_begin_catch(i8* %58) #3
  %60 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %60, i32 0, i32 0
  %62 = load %class.Pos**, %class.Pos*** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %12, %class.Pos** %62, i64 %65) #3
  %66 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %66, i32 0, i32 0
  store %class.Pos** null, %class.Pos*** %67, align 8
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %68, i32 0, i32 1
  store i64 0, i64* %69, align 8
  invoke void @__cxa_rethrow() #12
          to label %109 unwind label %70

; <label>:70:                                     ; preds = %57
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %10, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %74 unwind label %106

; <label>:74:                                     ; preds = %70
  br label %101

; <label>:75:                                     ; preds = %52
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %76, i32 0, i32 2
  %78 = load %class.Pos**, %class.Pos*** %8, align 8
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %77, %class.Pos** %78) #3
  %79 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %79, i32 0, i32 3
  %81 = load %class.Pos**, %class.Pos*** %9, align 8
  %82 = getelementptr inbounds %class.Pos*, %class.Pos** %81, i64 -1
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %80, %class.Pos** %82) #3
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %83, i32 0, i32 2
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 1
  %86 = load %class.Pos*, %class.Pos** %85, align 8
  %87 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %87, i32 0, i32 2
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %88, i32 0, i32 0
  store %class.Pos* %86, %class.Pos** %89, align 8
  %90 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %90, i32 0, i32 3
  %92 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %91, i32 0, i32 1
  %93 = load %class.Pos*, %class.Pos** %92, align 8
  %94 = load i64, i64* %4, align 8
  %95 = call i64 @_ZSt16__deque_buf_sizem(i64 16)
  %96 = urem i64 %94, %95
  %97 = getelementptr inbounds %class.Pos, %class.Pos* %93, i64 %96
  %98 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %98, i32 0, i32 3
  %100 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %99, i32 0, i32 0
  store %class.Pos* %97, %class.Pos** %100, align 8
  ret void

; <label>:101:                                    ; preds = %74
  %102 = load i8*, i8** %10, align 8
  %103 = load i32, i32* %11, align 4
  %104 = insertvalue { i8*, i32 } undef, i8* %102, 0
  %105 = insertvalue { i8*, i32 } %104, i32 %103, 1
  resume { i8*, i32 } %105

; <label>:106:                                    ; preds = %70
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  call void @__clang_call_terminate(i8* %108) #9
  unreachable

; <label>:109:                                    ; preds = %57
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %3 to %"class.std::allocator.32"*
  call void @_ZNSaI3PosED2Ev(%"class.std::allocator.32"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3PosEC2Ev(%"class.std::allocator.32"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %2, align 8
  %3 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %2, align 8
  %4 = bitcast %"class.std::allocator.32"* %3 to %"class.__gnu_cxx::new_allocator.33"*
  call void @_ZN9__gnu_cxx13new_allocatorI3PosEC2Ev(%"class.__gnu_cxx::new_allocator.33"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store %class.Pos* null, %class.Pos** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store %class.Pos* null, %class.Pos** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store %class.Pos* null, %class.Pos** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store %class.Pos** null, %class.Pos*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i64
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %2
  %5 = alloca i32
  store i32 835548351, i32* %5
  %6 = alloca i64
  br label %7

; <label>:7:                                      ; preds = %1, %64
  %8 = load i32, i32* %5
  switch i32 %8, label %9 [
    i32 835548351, label %10
    i32 -1107460426, label %14
    i32 1841813359, label %17
    i32 1418829764, label %44
    i32 1749846490, label %60
    i32 1304329576, label %61
    i32 -1472431335, label %63
  ]

; <label>:9:                                      ; preds = %7
  br label %64

; <label>:10:                                     ; preds = %7
  %11 = load volatile i64, i64* %2
  %12 = icmp ult i64 %11, 512
  %13 = select i1 %12, i32 -1107460426, i32 1841813359
  store i32 %13, i32* %5
  br label %64

; <label>:14:                                     ; preds = %7
  %15 = load i64, i64* %3, align 8
  %16 = udiv i64 512, %15
  store i32 1304329576, i32* %5
  store i64 %16, i64* %6
  br label %64

; <label>:17:                                     ; preds = %7
  %18 = load i32, i32* @x.533
  %19 = load i32, i32* @y.534
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1418829764, i32 -1472431335
  store i32 %43, i32* %5
  br label %64

; <label>:44:                                     ; preds = %7
  %45 = load i32, i32* @x.533
  %46 = load i32, i32* @y.534
  %47 = add i32 %45, -96434872
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -96434872
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1749846490, i32 -1472431335
  store i32 %59, i32* %5
  br label %64

; <label>:60:                                     ; preds = %7
  store i32 1304329576, i32* %5
  store i64 1, i64* %6
  br label %64

; <label>:61:                                     ; preds = %7
  %62 = load i64, i64* %6
  ret i64 %62

; <label>:63:                                     ; preds = %7
  store i32 1418829764, i32* %5
  br label %64

; <label>:64:                                     ; preds = %63, %60, %44, %17, %14, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -680070629, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %131
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -680070629, label %17
    i32 1868951619, label %22
    i32 1827810583, label %50
    i32 936428682, label %78
    i32 -1704907644, label %79
    i32 1602441803, label %81
    i32 -2119220516, label %108
    i32 -906845305, label %125
    i32 -1064355045, label %127
    i32 -803173076, label %129
  ]

; <label>:16:                                     ; preds = %14
  br label %131

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 1868951619, i32 -1704907644
  store i32 %21, i32* %13
  br label %131

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.535
  %24 = load i32, i32* @y.536
  %25 = sub i32 %23, 1578440818
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 1578440818
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 1827810583, i32 -1064355045
  store i32 %49, i32* %13
  br label %131

; <label>:50:                                     ; preds = %14
  %51 = load i64*, i64** %8, align 8
  store i64* %51, i64** %6, align 8
  %52 = load i32, i32* @x.535
  %53 = load i32, i32* @y.536
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 936428682, i32 -1064355045
  store i32 %77, i32* %13
  br label %131

; <label>:78:                                     ; preds = %14
  store i32 1602441803, i32* %13
  br label %131

; <label>:79:                                     ; preds = %14
  %80 = load i64*, i64** %7, align 8
  store i64* %80, i64** %6, align 8
  store i32 1602441803, i32* %13
  br label %131

; <label>:81:                                     ; preds = %14
  %82 = load i32, i32* @x.535
  %83 = load i32, i32* @y.536
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -2119220516, i32 -803173076
  store i32 %107, i32* %13
  br label %131

; <label>:108:                                    ; preds = %14
  %109 = load i64*, i64** %6, align 8
  store i64* %109, i64** %3
  %110 = load i32, i32* @x.535
  %111 = load i32, i32* @y.536
  %112 = add i32 %110, -1722698711
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -1722698711
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -906845305, i32 -803173076
  store i32 %124, i32* %13
  br label %131

; <label>:125:                                    ; preds = %14
  %126 = load volatile i64*, i64** %3
  ret i64* %126

; <label>:127:                                    ; preds = %14
  %128 = load i64*, i64** %8, align 8
  store i64* %128, i64** %6, align 8
  store i32 1827810583, i32* %13
  br label %131

; <label>:129:                                    ; preds = %14
  %130 = load i64*, i64** %6, align 8
  store i32 -2119220516, i32* %13
  br label %131

; <label>:131:                                    ; preds = %129, %127, %108, %81, %79, %78, %50, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZNSt11_Deque_baseI3PosSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.62", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseI3PosSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.62"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke %class.Pos** @_ZNSt16allocator_traitsISaIP3PosEE8allocateERS2_m(%"class.std::allocator.62"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaIP3PosED2Ev(%"class.std::allocator.62"* %5) #3
  ret %class.Pos** %10

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.537
  %14 = load i32, i32* @y.538
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %73

; <label>:38:                                     ; preds = %12, %73
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %6, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %7, align 4
  call void @_ZNSaIP3PosED2Ev(%"class.std::allocator.62"* %5) #3
  %42 = load i32, i32* @x.537
  %43 = load i32, i32* @y.538
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %73

; <label>:67:                                     ; preds = %38
  br label %68

; <label>:68:                                     ; preds = %67
  %69 = load i8*, i8** %6, align 8
  %70 = load i32, i32* %7, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  resume { i8*, i32 } %72

; <label>:73:                                     ; preds = %38, %12
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %6, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %7, align 4
  call void @_ZNSaIP3PosED2Ev(%"class.std::allocator.62"* %5) #3
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base"*, %class.Pos**, %class.Pos**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %class.Pos**, align 8
  %6 = alloca %class.Pos**, align 8
  %7 = alloca %class.Pos**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %class.Pos** %1, %class.Pos*** %5, align 8
  store %class.Pos** %2, %class.Pos*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load %class.Pos**, %class.Pos*** %5, align 8
  store %class.Pos** %11, %class.Pos*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %20, %3
  %13 = load %class.Pos**, %class.Pos*** %7, align 8
  %14 = load %class.Pos**, %class.Pos*** %6, align 8
  %15 = icmp ult %class.Pos** %13, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %12
  %17 = invoke %class.Pos* @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %18 unwind label %23

; <label>:18:                                     ; preds = %16
  %19 = load %class.Pos**, %class.Pos*** %7, align 8
  store %class.Pos* %17, %class.Pos** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %18
  %21 = load %class.Pos**, %class.Pos*** %7, align 8
  %22 = getelementptr inbounds %class.Pos*, %class.Pos** %21, i32 1
  store %class.Pos** %22, %class.Pos*** %7, align 8
  br label %12

; <label>:23:                                     ; preds = %16
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %8, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %9, align 4
  br label %27

; <label>:27:                                     ; preds = %23
  %28 = load i8*, i8** %8, align 8
  %29 = call i8* @__cxa_begin_catch(i8* %28) #3
  %30 = load %class.Pos**, %class.Pos*** %5, align 8
  %31 = load %class.Pos**, %class.Pos*** %7, align 8
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %10, %class.Pos** %30, %class.Pos** %31) #3
  invoke void @__cxa_rethrow() #12
          to label %143 unwind label %33

; <label>:32:                                     ; preds = %12
  br label %38

; <label>:33:                                     ; preds = %27
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %8, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %37 unwind label %140

; <label>:37:                                     ; preds = %33
  br label %93

; <label>:38:                                     ; preds = %32
  %39 = load i32, i32* @x.539
  %40 = load i32, i32* @y.540
  %41 = add i32 %39, 422286976
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 422286976
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %173

; <label>:65:                                     ; preds = %38, %173
  %66 = load i32, i32* @x.539
  %67 = load i32, i32* @y.540
  %68 = sub i32 %66, -1886162579
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -1886162579
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %173

; <label>:92:                                     ; preds = %65
  ret void

; <label>:93:                                     ; preds = %37
  %94 = load i32, i32* @x.539
  %95 = load i32, i32* @y.540
  %96 = add i32 %94, -256241160
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -256241160
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %174

; <label>:108:                                    ; preds = %93, %174
  %109 = load i8*, i8** %8, align 8
  %110 = load i32, i32* %9, align 4
  %111 = insertvalue { i8*, i32 } undef, i8* %109, 0
  %112 = insertvalue { i8*, i32 } %111, i32 %110, 1
  %113 = load i32, i32* @x.539
  %114 = load i32, i32* @y.540
  %115 = add i32 %113, 373341203
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 373341203
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 false, true
  %126 = and i1 %123, false
  %127 = and i1 %121, %125
  %128 = and i1 %124, false
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 false, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %174

; <label>:139:                                    ; preds = %108
  resume { i8*, i32 } %112

; <label>:140:                                    ; preds = %33
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  call void @__clang_call_terminate(i8* %142) #9
  unreachable

; <label>:143:                                    ; preds = %27
  %144 = load i32, i32* @x.539
  %145 = load i32, i32* @y.540
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %179

; <label>:157:                                    ; preds = %143, %179
  %158 = load i32, i32* @x.539
  %159 = load i32, i32* @y.540
  %160 = add i32 %158, -1638401444
  %161 = sub i32 %160, 1
  %162 = sub i32 %161, -1638401444
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  br i1 %170, label %172, label %179

; <label>:172:                                    ; preds = %157
  unreachable

; <label>:173:                                    ; preds = %65, %38
  br label %65

; <label>:174:                                    ; preds = %108, %93
  %175 = load i8*, i8** %8, align 8
  %176 = load i32, i32* %9, align 4
  %177 = insertvalue { i8*, i32 } undef, i8* %175, 0
  %178 = insertvalue { i8*, i32 } %177, i32 %176, 1
  br label %108

; <label>:179:                                    ; preds = %157, %143
  br label %157
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"*, %class.Pos**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.541
  %5 = load i32, i32* @y.542
  %6 = sub i32 %4, -83654196
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -83654196
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %91

; <label>:18:                                     ; preds = %3, %91
  %19 = alloca %"class.std::_Deque_base"*, align 8
  %20 = alloca %class.Pos**, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::allocator.62", align 1
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %19, align 8
  store %class.Pos** %1, %class.Pos*** %20, align 8
  store i64 %2, i64* %21, align 8
  %25 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %19, align 8
  call void @_ZNKSt11_Deque_baseI3PosSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.62"* sret %22, %"class.std::_Deque_base"* %25) #3
  %26 = load %class.Pos**, %class.Pos*** %20, align 8
  %27 = load i64, i64* %21, align 8
  %28 = load i32, i32* @x.541
  %29 = load i32, i32* @y.542
  %30 = add i32 %28, -1144047163
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1144047163
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %91

; <label>:42:                                     ; preds = %18
  invoke void @_ZNSt16allocator_traitsISaIP3PosEE10deallocateERS2_PS1_m(%"class.std::allocator.62"* dereferenceable(1) %22, %class.Pos** %26, i64 %27)
          to label %43 unwind label %44

; <label>:43:                                     ; preds = %42
  call void @_ZNSaIP3PosED2Ev(%"class.std::allocator.62"* %22) #3
  ret void

; <label>:44:                                     ; preds = %42
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %23, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %24, align 4
  call void @_ZNSaIP3PosED2Ev(%"class.std::allocator.62"* %22) #3
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i32, i32* @x.541
  %50 = load i32, i32* @y.542
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %101

; <label>:62:                                     ; preds = %48, %101
  %63 = load i8*, i8** %23, align 8
  call void @__clang_call_terminate(i8* %63) #9
  %64 = load i32, i32* @x.541
  %65 = load i32, i32* @y.542
  %66 = sub i32 %64, 1035201228
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 1035201228
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %101

; <label>:90:                                     ; preds = %62
  unreachable

; <label>:91:                                     ; preds = %18, %3
  %92 = alloca %"class.std::_Deque_base"*, align 8
  %93 = alloca %class.Pos**, align 8
  %94 = alloca i64, align 8
  %95 = alloca %"class.std::allocator.62", align 1
  %96 = alloca i8*
  %97 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %92, align 8
  store %class.Pos** %1, %class.Pos*** %93, align 8
  store i64 %2, i64* %94, align 8
  %98 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %92, align 8
  call void @_ZNKSt11_Deque_baseI3PosSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.62"* sret %95, %"class.std::_Deque_base"* %98) #3
  %99 = load %class.Pos**, %class.Pos*** %93, align 8
  %100 = load i64, i64* %94, align 8
  br label %18

; <label>:101:                                    ; preds = %62, %48
  %102 = load i8*, i8** %23, align 8
  call void @__clang_call_terminate(i8* %102) #9
  br label %62
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"*, %class.Pos**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %class.Pos**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %class.Pos** %1, %class.Pos*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load %class.Pos**, %class.Pos*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store %class.Pos** %6, %class.Pos*** %7, align 8
  %8 = load %class.Pos**, %class.Pos*** %4, align 8
  %9 = load %class.Pos*, %class.Pos** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store %class.Pos* %9, %class.Pos** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load %class.Pos*, %class.Pos** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds %class.Pos, %class.Pos* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store %class.Pos* %14, %class.Pos** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseI3PosSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.62"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.32"* @_ZNKSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIP3PosEC2IS_EERKSaIT_E(%"class.std::allocator.62"* %0, %"class.std::allocator.32"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZNSt16allocator_traitsISaIP3PosEE8allocateERS2_m(%"class.std::allocator.62"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %class.Pos**
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.547
  %7 = load i32, i32* @y.548
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1457957932, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1457957932, label %19
    i32 2261929, label %39
    i32 1747036351, label %72
    i32 -938712077, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2261929, i32 -938712077
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.62"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.62"* %0, %"class.std::allocator.62"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.62"*, %"class.std::allocator.62"** %40, align 8
  %43 = bitcast %"class.std::allocator.62"* %42 to %"class.__gnu_cxx::new_allocator.63"*
  %44 = load i64, i64* %41, align 8
  %45 = call %class.Pos** @_ZN9__gnu_cxx13new_allocatorIP3PosE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.63"* %43, i64 %44, i8* null)
  store %class.Pos** %45, %class.Pos*** %3
  %46 = load i32, i32* @x.547
  %47 = load i32, i32* @y.548
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1747036351, i32 -938712077
  store i32 %71, i32* %15
  br label %81

; <label>:72:                                     ; preds = %16
  %73 = load volatile %class.Pos**, %class.Pos*** %3
  ret %class.Pos** %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::allocator.62"*, align 8
  %76 = alloca i64, align 8
  store %"class.std::allocator.62"* %0, %"class.std::allocator.62"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"class.std::allocator.62"*, %"class.std::allocator.62"** %75, align 8
  %78 = bitcast %"class.std::allocator.62"* %77 to %"class.__gnu_cxx::new_allocator.63"*
  %79 = load i64, i64* %76, align 8
  %80 = call %class.Pos** @_ZN9__gnu_cxx13new_allocatorIP3PosE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.63"* %78, i64 %79, i8* null)
  store i32 2261929, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP3PosED2Ev(%"class.std::allocator.62"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.549
  %5 = load i32, i32* @y.550
  %6 = add i32 %4, 2070745363
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2070745363
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1182658325, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1182658325, label %18
    i32 966847106, label %38
    i32 810818286, label %56
    i32 138932816, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 966847106, i32 138932816
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.62"*, align 8
  store %"class.std::allocator.62"* %0, %"class.std::allocator.62"** %39, align 8
  %40 = load %"class.std::allocator.62"*, %"class.std::allocator.62"** %39, align 8
  %41 = bitcast %"class.std::allocator.62"* %40 to %"class.__gnu_cxx::new_allocator.63"*
  call void @_ZN9__gnu_cxx13new_allocatorIP3PosED2Ev(%"class.__gnu_cxx::new_allocator.63"* %41) #3
  %42 = load i32, i32* @x.549
  %43 = load i32, i32* @y.550
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 810818286, i32 138932816
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.62"*, align 8
  store %"class.std::allocator.62"* %0, %"class.std::allocator.62"** %58, align 8
  %59 = load %"class.std::allocator.62"*, %"class.std::allocator.62"** %58, align 8
  %60 = bitcast %"class.std::allocator.62"* %59 to %"class.__gnu_cxx::new_allocator.63"*
  call void @_ZN9__gnu_cxx13new_allocatorIP3PosED2Ev(%"class.__gnu_cxx::new_allocator.63"* %60) #3
  store i32 966847106, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.32"* @_ZNKSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %4 to %"class.std::allocator.32"*
  ret %"class.std::allocator.32"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP3PosEC2IS_EERKSaIT_E(%"class.std::allocator.62"*, %"class.std::allocator.32"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.553
  %6 = load i32, i32* @y.554
  %7 = sub i32 %5, -1932233284
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1932233284
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1096194103, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1096194103, label %19
    i32 -1217346180, label %39
    i32 -2130194053, label %71
    i32 1934598005, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1217346180, i32 1934598005
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.62"*, align 8
  %41 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.62"* %0, %"class.std::allocator.62"** %40, align 8
  store %"class.std::allocator.32"* %1, %"class.std::allocator.32"** %41, align 8
  %42 = load %"class.std::allocator.62"*, %"class.std::allocator.62"** %40, align 8
  %43 = bitcast %"class.std::allocator.62"* %42 to %"class.__gnu_cxx::new_allocator.63"*
  call void @_ZN9__gnu_cxx13new_allocatorIP3PosEC2Ev(%"class.__gnu_cxx::new_allocator.63"* %43) #3
  %44 = load i32, i32* @x.553
  %45 = load i32, i32* @y.554
  %46 = sub i32 %44, 135336959
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 135336959
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -2130194053, i32 1934598005
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator.62"*, align 8
  %74 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.62"* %0, %"class.std::allocator.62"** %73, align 8
  store %"class.std::allocator.32"* %1, %"class.std::allocator.32"** %74, align 8
  %75 = load %"class.std::allocator.62"*, %"class.std::allocator.62"** %73, align 8
  %76 = bitcast %"class.std::allocator.62"* %75 to %"class.__gnu_cxx::new_allocator.63"*
  call void @_ZN9__gnu_cxx13new_allocatorIP3PosEC2Ev(%"class.__gnu_cxx::new_allocator.63"* %76) #3
  store i32 -1217346180, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP3PosEC2Ev(%"class.__gnu_cxx::new_allocator.63"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.555
  %5 = load i32, i32* @y.556
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -970171183, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -970171183, label %17
    i32 1182824726, label %25
    i32 -1719169206, label %43
    i32 699091038, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1182824726, i32 699091038
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.63"*, align 8
  store %"class.__gnu_cxx::new_allocator.63"* %0, %"class.__gnu_cxx::new_allocator.63"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.63"*, %"class.__gnu_cxx::new_allocator.63"** %26, align 8
  %28 = load i32, i32* @x.555
  %29 = load i32, i32* @y.556
  %30 = add i32 %28, 853077707
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 853077707
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1719169206, i32 699091038
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.63"*, align 8
  store %"class.__gnu_cxx::new_allocator.63"* %0, %"class.__gnu_cxx::new_allocator.63"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.63"*, %"class.__gnu_cxx::new_allocator.63"** %45, align 8
  store i32 1182824726, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZN9__gnu_cxx13new_allocatorIP3PosE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.63"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %class.Pos**
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.557
  %10 = load i32, i32* @y.558
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 280920593, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %201
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 280920593, label %22
    i32 -1593182383, label %30
    i32 -31035570, label %66
    i32 -340100258, label %69
    i32 1611690515, label %97
    i32 -637199894, label %125
    i32 -480182462, label %126
    i32 -1626036376, label %154
    i32 2061475721, label %175
    i32 -1035278581, label %177
    i32 233320403, label %185
    i32 2071964514, label %186
  ]

; <label>:21:                                     ; preds = %19
  br label %201

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1593182383, i32 -1035278581
  store i32 %29, i32* %18
  br label %201

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.63"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %6
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.63"* %0, %"class.__gnu_cxx::new_allocator.63"** %31, align 8
  %34 = load volatile i64*, i64** %6
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator.63"*, %"class.__gnu_cxx::new_allocator.63"** %31, align 8
  %36 = load volatile i64*, i64** %6
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP3PosE8max_sizeEv(%"class.__gnu_cxx::new_allocator.63"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %5
  %40 = load i32, i32* @x.557
  %41 = load i32, i32* @y.558
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -31035570, i32 -1035278581
  store i32 %65, i32* %18
  br label %201

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %5
  %68 = select i1 %67, i32 -340100258, i32 -480182462
  store i32 %68, i32* %18
  br label %201

; <label>:69:                                     ; preds = %19
  %70 = load i32, i32* @x.557
  %71 = load i32, i32* @y.558
  %72 = add i32 %70, -1315369535
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1315369535
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 1611690515, i32 233320403
  store i32 %96, i32* %18
  br label %201

; <label>:97:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %98 = load i32, i32* @x.557
  %99 = load i32, i32* @y.558
  %100 = add i32 %98, -213223132
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, -213223132
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -637199894, i32 233320403
  store i32 %124, i32* %18
  br label %201

; <label>:125:                                    ; preds = %19
  unreachable

; <label>:126:                                    ; preds = %19
  %127 = load i32, i32* @x.557
  %128 = load i32, i32* @y.558
  %129 = add i32 %127, 1685220058
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, 1685220058
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 -1626036376, i32 2071964514
  store i32 %153, i32* %18
  br label %201

; <label>:154:                                    ; preds = %19
  %155 = load volatile i64*, i64** %6
  %156 = load i64, i64* %155, align 8
  %157 = mul i64 %156, 8
  %158 = call i8* @_Znwm(i64 %157)
  %159 = bitcast i8* %158 to %class.Pos**
  store %class.Pos** %159, %class.Pos*** %4
  %160 = load i32, i32* @x.557
  %161 = load i32, i32* @y.558
  %162 = add i32 %160, -2002597381
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, -2002597381
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  %174 = select i1 %172, i32 2061475721, i32 2071964514
  store i32 %174, i32* %18
  br label %201

; <label>:175:                                    ; preds = %19
  %176 = load volatile %class.Pos**, %class.Pos*** %4
  ret %class.Pos** %176

; <label>:177:                                    ; preds = %19
  %178 = alloca %"class.__gnu_cxx::new_allocator.63"*, align 8
  %179 = alloca i64, align 8
  %180 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.63"* %0, %"class.__gnu_cxx::new_allocator.63"** %178, align 8
  store i64 %1, i64* %179, align 8
  store i8* %2, i8** %180, align 8
  %181 = load %"class.__gnu_cxx::new_allocator.63"*, %"class.__gnu_cxx::new_allocator.63"** %178, align 8
  %182 = load i64, i64* %179, align 8
  %183 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP3PosE8max_sizeEv(%"class.__gnu_cxx::new_allocator.63"* %181) #3
  %184 = icmp ugt i64 %182, %183
  store i32 -1593182383, i32* %18
  br label %201

; <label>:185:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 1611690515, i32* %18
  br label %201

; <label>:186:                                    ; preds = %19
  %187 = load volatile i64*, i64** %6
  %188 = load i64, i64* %187, align 8
  %189 = shl i64 %188, 8
  %190 = shl i64 %188, 8
  %191 = sub i64 0, -9168695302185643093
  %192 = sub i64 %191, %188
  %193 = add i64 %192, -9168695302185643093
  %194 = sub i64 0, %188
  %195 = sub i64 0, 8
  %196 = sub i64 %193, %195
  %197 = add i64 %193, 8
  %198 = mul i64 %188, 8
  %199 = call i8* @_Znwm(i64 %198)
  %200 = bitcast i8* %199 to %class.Pos**
  store i32 -1626036376, i32* %18
  br label %201

; <label>:201:                                    ; preds = %186, %185, %177, %154, %126, %97, %69, %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIP3PosE8max_sizeEv(%"class.__gnu_cxx::new_allocator.63"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.63"*, align 8
  store %"class.__gnu_cxx::new_allocator.63"* %0, %"class.__gnu_cxx::new_allocator.63"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.63"*, %"class.__gnu_cxx::new_allocator.63"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP3PosED2Ev(%"class.__gnu_cxx::new_allocator.63"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.63"*, align 8
  store %"class.__gnu_cxx::new_allocator.63"* %0, %"class.__gnu_cxx::new_allocator.63"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.63"*, %"class.__gnu_cxx::new_allocator.63"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos* @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %class.Pos*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.563
  %6 = load i32, i32* @y.564
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1700932763, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %57
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1700932763, label %18
    i32 1252106903, label %26
    i32 575284666, label %48
    i32 384354418, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %57

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1252106903, i32 384354418
  store i32 %25, i32* %14
  br label %57

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %27, align 8
  %28 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %29 to %"class.std::allocator.32"*
  %31 = call i64 @_ZSt16__deque_buf_sizem(i64 16)
  %32 = call %class.Pos* @_ZNSt16allocator_traitsISaI3PosEE8allocateERS1_m(%"class.std::allocator.32"* dereferenceable(1) %30, i64 %31)
  store %class.Pos* %32, %class.Pos** %2
  %33 = load i32, i32* @x.563
  %34 = load i32, i32* @y.564
  %35 = sub i32 %33, 1070571420
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1070571420
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 575284666, i32 384354418
  store i32 %47, i32* %14
  br label %57

; <label>:48:                                     ; preds = %15
  %49 = load volatile %class.Pos*, %class.Pos** %2
  ret %class.Pos* %49

; <label>:50:                                     ; preds = %15
  %51 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %51, align 8
  %52 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %53 to %"class.std::allocator.32"*
  %55 = call i64 @_ZSt16__deque_buf_sizem(i64 16)
  %56 = call %class.Pos* @_ZNSt16allocator_traitsISaI3PosEE8allocateERS1_m(%"class.std::allocator.32"* dereferenceable(1) %54, i64 %55)
  store i32 1252106903, i32* %14
  br label %57

; <label>:57:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"*, %class.Pos**, %class.Pos**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca %class.Pos**, align 8
  %7 = alloca %class.Pos**, align 8
  %8 = alloca %class.Pos**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store %class.Pos** %1, %class.Pos*** %6, align 8
  store %class.Pos** %2, %class.Pos*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load %class.Pos**, %class.Pos*** %6, align 8
  store %class.Pos** %10, %class.Pos*** %8, align 8
  %11 = alloca i32
  store i32 1991583070, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %153
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1991583070, label %15
    i32 -458766592, label %20
    i32 1139657339, label %35
    i32 1689949736, label %53
    i32 1623300229, label %54
    i32 -626006405, label %69
    i32 1613628799, label %87
    i32 273577730, label %88
    i32 197463811, label %116
    i32 -1404386515, label %144
    i32 620728261, label %145
    i32 432669863, label %149
    i32 895099159, label %152
  ]

; <label>:14:                                     ; preds = %12
  br label %153

; <label>:15:                                     ; preds = %12
  %16 = load %class.Pos**, %class.Pos*** %8, align 8
  %17 = load %class.Pos**, %class.Pos*** %7, align 8
  %18 = icmp ult %class.Pos** %16, %17
  %19 = select i1 %18, i32 -458766592, i32 273577730
  store i32 %19, i32* %11
  br label %153

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* @x.565
  %22 = load i32, i32* @y.566
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1139657339, i32 620728261
  store i32 %34, i32* %11
  br label %153

; <label>:35:                                     ; preds = %12
  %36 = load %class.Pos**, %class.Pos*** %8, align 8
  %37 = load %class.Pos*, %class.Pos** %36, align 8
  %38 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %38, %class.Pos* %37) #3
  %39 = load i32, i32* @x.565
  %40 = load i32, i32* @y.566
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1689949736, i32 620728261
  store i32 %52, i32* %11
  br label %153

; <label>:53:                                     ; preds = %12
  store i32 1623300229, i32* %11
  br label %153

; <label>:54:                                     ; preds = %12
  %55 = load i32, i32* @x.565
  %56 = load i32, i32* @y.566
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -626006405, i32 432669863
  store i32 %68, i32* %11
  br label %153

; <label>:69:                                     ; preds = %12
  %70 = load %class.Pos**, %class.Pos*** %8, align 8
  %71 = getelementptr inbounds %class.Pos*, %class.Pos** %70, i32 1
  store %class.Pos** %71, %class.Pos*** %8, align 8
  %72 = load i32, i32* @x.565
  %73 = load i32, i32* @y.566
  %74 = sub i32 %72, 1031134788
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 1031134788
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 1613628799, i32 432669863
  store i32 %86, i32* %11
  br label %153

; <label>:87:                                     ; preds = %12
  store i32 1991583070, i32* %11
  br label %153

; <label>:88:                                     ; preds = %12
  %89 = load i32, i32* @x.565
  %90 = load i32, i32* @y.566
  %91 = sub i32 %89, 256948353
  %92 = sub i32 %91, 1
  %93 = add i32 %92, 256948353
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 197463811, i32 895099159
  store i32 %115, i32* %11
  br label %153

; <label>:116:                                    ; preds = %12
  %117 = load i32, i32* @x.565
  %118 = load i32, i32* @y.566
  %119 = sub i32 %117, -468875991
  %120 = sub i32 %119, 1
  %121 = add i32 %120, -468875991
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  %143 = select i1 %141, i32 -1404386515, i32 895099159
  store i32 %143, i32* %11
  br label %153

; <label>:144:                                    ; preds = %12
  ret void

; <label>:145:                                    ; preds = %12
  %146 = load %class.Pos**, %class.Pos*** %8, align 8
  %147 = load %class.Pos*, %class.Pos** %146, align 8
  %148 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %148, %class.Pos* %147) #3
  store i32 1139657339, i32* %11
  br label %153

; <label>:149:                                    ; preds = %12
  %150 = load %class.Pos**, %class.Pos*** %8, align 8
  %151 = getelementptr inbounds %class.Pos*, %class.Pos** %150, i32 1
  store %class.Pos** %151, %class.Pos*** %8, align 8
  store i32 -626006405, i32* %11
  br label %153

; <label>:152:                                    ; preds = %12
  store i32 197463811, i32* %11
  br label %153

; <label>:153:                                    ; preds = %152, %149, %145, %116, %88, %87, %69, %54, %53, %35, %20, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos* @_ZNSt16allocator_traitsISaI3PosEE8allocateERS1_m(%"class.std::allocator.32"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.32"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %3, align 8
  %6 = bitcast %"class.std::allocator.32"* %5 to %"class.__gnu_cxx::new_allocator.33"*
  %7 = load i64, i64* %4, align 8
  %8 = call %class.Pos* @_ZN9__gnu_cxx13new_allocatorI3PosE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.33"* %6, i64 %7, i8* null)
  ret %class.Pos* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos* @_ZN9__gnu_cxx13new_allocatorI3PosE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.33"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorI3PosE8max_sizeEv(%"class.__gnu_cxx::new_allocator.33"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -69678277, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -69678277, label %16
    i32 -693306676, label %21
    i32 -327013157, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -693306676, i32 -327013157
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 16
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %class.Pos*
  ret %class.Pos* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI3PosE8max_sizeEv(%"class.__gnu_cxx::new_allocator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"*, %class.Pos*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %6 to %"class.std::allocator.32"*
  %8 = load %class.Pos*, %class.Pos** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 16)
          to label %10 unwind label %53

; <label>:10:                                     ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaI3PosEE10deallocateERS1_PS0_m(%"class.std::allocator.32"* dereferenceable(1) %7, %class.Pos* %8, i64 %9)
          to label %11 unwind label %53

; <label>:11:                                     ; preds = %10
  %12 = load i32, i32* @x.573
  %13 = load i32, i32* @y.574
  %14 = sub i32 %12, 1356222457
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 1356222457
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %56

; <label>:38:                                     ; preds = %11, %56
  %39 = load i32, i32* @x.573
  %40 = load i32, i32* @y.574
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %56

; <label>:52:                                     ; preds = %38
  ret void

; <label>:53:                                     ; preds = %10, %2
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #9
  unreachable

; <label>:56:                                     ; preds = %38, %11
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3PosEE10deallocateERS1_PS0_m(%"class.std::allocator.32"* dereferenceable(1), %class.Pos*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.575
  %7 = load i32, i32* @y.576
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1963577035, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1963577035, label %19
    i32 -2022085989, label %39
    i32 91532717, label %62
    i32 -1449162768, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2022085989, i32 -1449162768
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.32"*, align 8
  %41 = alloca %class.Pos*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %40, align 8
  store %class.Pos* %1, %class.Pos** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %40, align 8
  %44 = bitcast %"class.std::allocator.32"* %43 to %"class.__gnu_cxx::new_allocator.33"*
  %45 = load %class.Pos*, %class.Pos** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3PosE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.33"* %44, %class.Pos* %45, i64 %46)
  %47 = load i32, i32* @x.575
  %48 = load i32, i32* @y.576
  %49 = sub i32 %47, -116781636
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -116781636
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 91532717, i32 -1449162768
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.32"*, align 8
  %65 = alloca %class.Pos*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %64, align 8
  store %class.Pos* %1, %class.Pos** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %64, align 8
  %68 = bitcast %"class.std::allocator.32"* %67 to %"class.__gnu_cxx::new_allocator.33"*
  %69 = load %class.Pos*, %class.Pos** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3PosE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.33"* %68, %class.Pos* %69, i64 %70)
  store i32 -2022085989, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3PosE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.33"*, %class.Pos*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.577
  %7 = load i32, i32* @y.578
  %8 = sub i32 %6, 81493607
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 81493607
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 135470972, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 135470972, label %20
    i32 1876873604, label %40
    i32 798270614, label %74
    i32 -855765922, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1876873604, i32 -855765922
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %42 = alloca %class.Pos*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %41, align 8
  store %class.Pos* %1, %class.Pos** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %41, align 8
  %45 = load %class.Pos*, %class.Pos** %42, align 8
  %46 = bitcast %class.Pos* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.577
  %48 = load i32, i32* @y.578
  %49 = sub i32 %47, 1189327427
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1189327427
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 798270614, i32 -855765922
  store i32 %73, i32* %16
  br label %82

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %77 = alloca %class.Pos*, align 8
  %78 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %76, align 8
  store %class.Pos* %1, %class.Pos** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %76, align 8
  %80 = load %class.Pos*, %class.Pos** %77, align 8
  %81 = bitcast %class.Pos* %80 to i8*
  call void @_ZdlPv(i8* %81) #3
  store i32 1876873604, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIP3PosEE10deallocateERS2_PS1_m(%"class.std::allocator.62"* dereferenceable(1), %class.Pos**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.62"*, align 8
  %5 = alloca %class.Pos**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.62"* %0, %"class.std::allocator.62"** %4, align 8
  store %class.Pos** %1, %class.Pos*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.62"*, %"class.std::allocator.62"** %4, align 8
  %8 = bitcast %"class.std::allocator.62"* %7 to %"class.__gnu_cxx::new_allocator.63"*
  %9 = load %class.Pos**, %class.Pos*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP3PosE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.63"* %8, %class.Pos** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP3PosE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.63"*, %class.Pos**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.63"*, align 8
  %5 = alloca %class.Pos**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.63"* %0, %"class.__gnu_cxx::new_allocator.63"** %4, align 8
  store %class.Pos** %1, %class.Pos*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.63"*, %"class.__gnu_cxx::new_allocator.63"** %4, align 8
  %8 = load %class.Pos**, %class.Pos*** %5, align 8
  %9 = bitcast %class.Pos** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 16)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = load i32, i32* @x.583
  %5 = load i32, i32* @y.584
  %6 = add i32 %4, -1464908349
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1464908349
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %47

; <label>:18:                                     ; preds = %3, %47
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #9
  %21 = load i32, i32* @x.583
  %22 = load i32, i32* @y.584
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %47

; <label>:46:                                     ; preds = %18
  unreachable

; <label>:47:                                     ; preds = %18, %3
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #9
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.32"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.32"* %3, %"class.std::allocator.32"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.32"* @_ZNSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %4 to %"class.std::allocator.32"*
  ret %"class.std::allocator.32"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Pos**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load %class.Pos**, %class.Pos*** %8, align 8
  store %class.Pos** %9, %class.Pos*** %2
  %10 = alloca i32
  store i32 1893967039, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %128
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1893967039, label %14
    i32 316158656, label %18
    i32 1720764189, label %33
    i32 -1558282129, label %69
    i32 -1576677023, label %70
    i32 398414476, label %85
    i32 -1137517349, label %102
    i32 -1084051529, label %103
    i32 -616987993, label %125
  ]

; <label>:13:                                     ; preds = %11
  br label %128

; <label>:14:                                     ; preds = %11
  %15 = load volatile %class.Pos**, %class.Pos*** %2
  %16 = icmp ne %class.Pos** %15, null
  %17 = select i1 %16, i32 316158656, i32 -1576677023
  store i32 %17, i32* %10
  br label %128

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.593
  %20 = load i32, i32* @y.594
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 1720764189, i32 -1084051529
  store i32 %32, i32* %10
  br label %128

; <label>:33:                                     ; preds = %11
  %34 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %35, i32 0, i32 2
  %37 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %36, i32 0, i32 3
  %38 = load %class.Pos**, %class.Pos*** %37, align 8
  %39 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %40 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %40, i32 0, i32 3
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %41, i32 0, i32 3
  %43 = load %class.Pos**, %class.Pos*** %42, align 8
  %44 = getelementptr inbounds %class.Pos*, %class.Pos** %43, i64 1
  %45 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %45, %class.Pos** %38, %class.Pos** %44) #3
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %47, i32 0, i32 0
  %49 = load %class.Pos**, %class.Pos*** %48, align 8
  %50 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %51 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %51, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %54, %class.Pos** %49, i64 %53) #3
  %55 = load i32, i32* @x.593
  %56 = load i32, i32* @y.594
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -1558282129, i32 -1084051529
  store i32 %68, i32* %10
  br label %128

; <label>:69:                                     ; preds = %11
  store i32 -1576677023, i32* %10
  br label %128

; <label>:70:                                     ; preds = %11
  %71 = load i32, i32* @x.593
  %72 = load i32, i32* @y.594
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 398414476, i32 -616987993
  store i32 %84, i32* %10
  br label %128

; <label>:85:                                     ; preds = %11
  %86 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %87 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %86, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %87) #3
  %88 = load i32, i32* @x.593
  %89 = load i32, i32* @y.594
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -1137517349, i32 -616987993
  store i32 %101, i32* %10
  br label %128

; <label>:102:                                    ; preds = %11
  ret void

; <label>:103:                                    ; preds = %11
  %104 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %105, i32 0, i32 2
  %107 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %106, i32 0, i32 3
  %108 = load %class.Pos**, %class.Pos*** %107, align 8
  %109 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %110 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %110, i32 0, i32 3
  %112 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %111, i32 0, i32 3
  %113 = load %class.Pos**, %class.Pos*** %112, align 8
  %114 = getelementptr inbounds %class.Pos*, %class.Pos** %113, i64 1
  %115 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %115, %class.Pos** %108, %class.Pos** %114) #3
  %116 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %117 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %117, i32 0, i32 0
  %119 = load %class.Pos**, %class.Pos*** %118, align 8
  %120 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %121 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %121, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %124, %class.Pos** %119, i64 %123) #3
  store i32 1720764189, i32* %10
  br label %128

; <label>:125:                                    ; preds = %11
  %126 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %127 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %126, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %127) #3
  store i32 398414476, i32* %10
  br label %128

; <label>:128:                                    ; preds = %125, %103, %85, %70, %69, %33, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.595
  %6 = load i32, i32* @y.596
  %7 = sub i32 %5, -460522101
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -460522101
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1121235925, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1121235925, label %19
    i32 741137580, label %39
    i32 1676062695, label %74
    i32 -677503768, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 741137580, i32 -677503768
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %41, align 8
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load %class.Pos*, %class.Pos** %45, align 8
  store %class.Pos* %46, %class.Pos** %43, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 1
  %48 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 1
  %50 = load %class.Pos*, %class.Pos** %49, align 8
  store %class.Pos* %50, %class.Pos** %47, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 2
  %52 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %52, i32 0, i32 2
  %54 = load %class.Pos*, %class.Pos** %53, align 8
  store %class.Pos* %54, %class.Pos** %51, align 8
  %55 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %56 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %56, i32 0, i32 3
  %58 = load %class.Pos**, %class.Pos*** %57, align 8
  store %class.Pos** %58, %class.Pos*** %55, align 8
  %59 = load i32, i32* @x.595
  %60 = load i32, i32* @y.596
  %61 = add i32 %59, -1252175519
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -1252175519
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 1676062695, i32 -677503768
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Deque_iterator"*, align 8
  %77 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %76, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %77, align 8
  %78 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 0
  %80 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %80, i32 0, i32 0
  %82 = load %class.Pos*, %class.Pos** %81, align 8
  store %class.Pos* %82, %class.Pos** %79, align 8
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 1
  %84 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 1
  %86 = load %class.Pos*, %class.Pos** %85, align 8
  store %class.Pos* %86, %class.Pos** %83, align 8
  %87 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 2
  %88 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %88, i32 0, i32 2
  %90 = load %class.Pos*, %class.Pos** %89, align 8
  store %class.Pos* %90, %class.Pos** %87, align 8
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 3
  %92 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %93 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %92, i32 0, i32 3
  %94 = load %class.Pos**, %class.Pos*** %93, align 8
  store %class.Pos** %94, %class.Pos*** %91, align 8
  store i32 741137580, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EEC2EOS2_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.599
  %6 = load i32, i32* @y.600
  %7 = add i32 %5, 295629540
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 295629540
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1969626380, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1969626380, label %19
    i32 289680071, label %27
    i32 933611680, label %62
    i32 833816282, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 289680071, i32 833816282
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  %29 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %29, align 8
  %30 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %31 = bitcast %"class.std::deque"* %30 to %"class.std::_Deque_base"*
  %32 = load %"class.std::deque"*, %"class.std::deque"** %29, align 8
  %33 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque"* dereferenceable(80) %32) #3
  %34 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2EOS2_(%"class.std::_Deque_base"* %31, %"class.std::_Deque_base"* dereferenceable(80) %34)
  %35 = load i32, i32* @x.599
  %36 = load i32, i32* @y.600
  %37 = add i32 %35, -149389671
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -149389671
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 933611680, i32 833816282
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::deque"*, align 8
  %65 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %64, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %65, align 8
  %66 = load %"class.std::deque"*, %"class.std::deque"** %64, align 8
  %67 = bitcast %"class.std::deque"* %66 to %"class.std::_Deque_base"*
  %68 = load %"class.std::deque"*, %"class.std::deque"** %65, align 8
  %69 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque"* dereferenceable(80) %68) #3
  %70 = bitcast %"class.std::deque"* %69 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2EOS2_(%"class.std::_Deque_base"* %67, %"class.std::_Deque_base"* dereferenceable(80) %70)
  store i32 289680071, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2EOS2_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2EOS2_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseI3PosSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::_Deque_base"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EEC2EOS2_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.605
  %4 = load i32, i32* @y.606
  %5 = sub i32 %3, 342818054
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 342818054
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %63

; <label>:17:                                     ; preds = %2, %63
  %18 = alloca %"struct.std::integral_constant", align 1
  %19 = alloca %"class.std::_Deque_base"*, align 8
  %20 = alloca %"class.std::_Deque_base"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %19, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %20, align 8
  %23 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %19, align 8
  %24 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %23, i32 0, i32 0
  %25 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %20, align 8
  %26 = call dereferenceable(1) %"class.std::allocator.32"* @_ZNSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %25) #3
  %27 = call dereferenceable(1) %"class.std::allocator.32"* @_ZSt4moveIRSaI3PosEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.32"* dereferenceable(1) %26) #3
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %24, %"class.std::allocator.32"* dereferenceable(1) %27) #3
  %28 = load i32, i32* @x.605
  %29 = load i32, i32* @y.606
  %30 = add i32 %28, -1536262474
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1536262474
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %63

; <label>:42:                                     ; preds = %17
  invoke void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %23, i64 0)
          to label %43 unwind label %53

; <label>:43:                                     ; preds = %42
  %44 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %20, align 8
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %45, i32 0, i32 0
  %47 = load %class.Pos**, %class.Pos*** %46, align 8
  %48 = icmp ne %class.Pos** %47, null
  br i1 %48, label %49, label %57

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %23, i32 0, i32 0
  %51 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %20, align 8
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_impl12_M_swap_dataERS3_(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %50, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* dereferenceable(80) %52) #3
  br label %57

; <label>:53:                                     ; preds = %42
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %21, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %22, align 4
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %24) #3
  br label %58

; <label>:57:                                     ; preds = %49, %43
  ret void

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %21, align 8
  %60 = load i32, i32* %22, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %17, %2
  %64 = alloca %"struct.std::integral_constant", align 1
  %65 = alloca %"class.std::_Deque_base"*, align 8
  %66 = alloca %"class.std::_Deque_base"*, align 8
  %67 = alloca i8*
  %68 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %65, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %66, align 8
  %69 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %65, align 8
  %70 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %69, i32 0, i32 0
  %71 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %66, align 8
  %72 = call dereferenceable(1) %"class.std::allocator.32"* @_ZNSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %71) #3
  %73 = call dereferenceable(1) %"class.std::allocator.32"* @_ZSt4moveIRSaI3PosEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.32"* dereferenceable(1) %72) #3
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %70, %"class.std::allocator.32"* dereferenceable(1) %73) #3
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.32"* @_ZSt4moveIRSaI3PosEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.32"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %2, align 8
  %3 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %2, align 8
  ret %"class.std::allocator.32"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"class.std::allocator.32"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.32"*, align 8
  store %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.32"* %1, %"class.std::allocator.32"** %4, align 8
  %5 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %5 to %"class.std::allocator.32"*
  %7 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.32"* @_ZSt4moveIRSaI3PosEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.32"* dereferenceable(1) %7) #3
  call void @_ZNSaI3PosEC2ERKS0_(%"class.std::allocator.32"* %6, %"class.std::allocator.32"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %5, i32 0, i32 0
  store %class.Pos** null, %class.Pos*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI3PosSaIS0_EE11_Deque_impl12_M_swap_dataERS3_(%"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.611
  %6 = load i32, i32* @y.612
  %7 = add i32 %5, 1255576011
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1255576011
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1752928351, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %99
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1752928351, label %19
    i32 1665579299, label %39
    i32 99353694, label %82
    i32 -1811105994, label %83
  ]

; <label>:18:                                     ; preds = %16
  br label %99

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1665579299, i32 -1811105994
  store i32 %38, i32* %15
  br label %99

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, align 8
  %41 = alloca %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %40, align 8
  store %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %1, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %41, align 8
  %42 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %42, i32 0, i32 2
  %44 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %44, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorI3PosRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %43, %"struct.std::_Deque_iterator"* dereferenceable(32) %45) #3
  %46 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %42, i32 0, i32 3
  %47 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %41, align 8
  %48 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %47, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorI3PosRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %46, %"struct.std::_Deque_iterator"* dereferenceable(32) %48) #3
  %49 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %42, i32 0, i32 0
  %50 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %41, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %50, i32 0, i32 0
  call void @_ZSt4swapIPP3PosEvRT_S4_(%class.Pos*** dereferenceable(8) %49, %class.Pos*** dereferenceable(8) %51) #3
  %52 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %42, i32 0, i32 1
  %53 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %41, align 8
  %54 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %53, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %52, i64* dereferenceable(8) %54) #3
  %55 = load i32, i32* @x.611
  %56 = load i32, i32* @y.612
  %57 = sub i32 %55, 400402252
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 400402252
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 99353694, i32 -1811105994
  store i32 %81, i32* %15
  br label %99

; <label>:82:                                     ; preds = %16
  ret void

; <label>:83:                                     ; preds = %16
  %84 = alloca %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, align 8
  %85 = alloca %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %84, align 8
  store %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %1, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %85, align 8
  %86 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %84, align 8
  %87 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %86, i32 0, i32 2
  %88 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %85, align 8
  %89 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %88, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorI3PosRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %87, %"struct.std::_Deque_iterator"* dereferenceable(32) %89) #3
  %90 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %86, i32 0, i32 3
  %91 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %85, align 8
  %92 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %91, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorI3PosRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %90, %"struct.std::_Deque_iterator"* dereferenceable(32) %92) #3
  %93 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %86, i32 0, i32 0
  %94 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %85, align 8
  %95 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %94, i32 0, i32 0
  call void @_ZSt4swapIPP3PosEvRT_S4_(%class.Pos*** dereferenceable(8) %93, %class.Pos*** dereferenceable(8) %95) #3
  %96 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %86, i32 0, i32 1
  %97 = load %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"*, %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"** %85, align 8
  %98 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %97, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %96, i64* dereferenceable(8) %98) #3
  store i32 1665579299, i32* %15
  br label %99

; <label>:99:                                     ; preds = %83, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3PosEC2ERKS0_(%"class.std::allocator.32"*, %"class.std::allocator.32"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.613
  %6 = load i32, i32* @y.614
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1863438648, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1863438648, label %18
    i32 372815578, label %26
    i32 113392730, label %60
    i32 857691574, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 372815578, i32 857691574
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.32"*, align 8
  %28 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %27, align 8
  store %"class.std::allocator.32"* %1, %"class.std::allocator.32"** %28, align 8
  %29 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %27, align 8
  %30 = bitcast %"class.std::allocator.32"* %29 to %"class.__gnu_cxx::new_allocator.33"*
  %31 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %28, align 8
  %32 = bitcast %"class.std::allocator.32"* %31 to %"class.__gnu_cxx::new_allocator.33"*
  call void @_ZN9__gnu_cxx13new_allocatorI3PosEC2ERKS2_(%"class.__gnu_cxx::new_allocator.33"* %30, %"class.__gnu_cxx::new_allocator.33"* dereferenceable(1) %32) #3
  %33 = load i32, i32* @x.613
  %34 = load i32, i32* @y.614
  %35 = add i32 %33, 1122561790
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1122561790
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 113392730, i32 857691574
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::allocator.32"*, align 8
  %63 = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %62, align 8
  store %"class.std::allocator.32"* %1, %"class.std::allocator.32"** %63, align 8
  %64 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %62, align 8
  %65 = bitcast %"class.std::allocator.32"* %64 to %"class.__gnu_cxx::new_allocator.33"*
  %66 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %63, align 8
  %67 = bitcast %"class.std::allocator.32"* %66 to %"class.__gnu_cxx::new_allocator.33"*
  call void @_ZN9__gnu_cxx13new_allocatorI3PosEC2ERKS2_(%"class.__gnu_cxx::new_allocator.33"* %65, %"class.__gnu_cxx::new_allocator.33"* dereferenceable(1) %67) #3
  store i32 372815578, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3PosEC2ERKS2_(%"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %1, %"class.__gnu_cxx::new_allocator.33"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorI3PosRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI3PosRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI3PosRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI3PosRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPP3PosEvRT_S4_(%class.Pos*** dereferenceable(8), %class.Pos*** dereferenceable(8)) #5 comdat {
  %3 = alloca %class.Pos***, align 8
  %4 = alloca %class.Pos***, align 8
  %5 = alloca %class.Pos**, align 8
  store %class.Pos*** %0, %class.Pos**** %3, align 8
  store %class.Pos*** %1, %class.Pos**** %4, align 8
  %6 = load %class.Pos***, %class.Pos**** %3, align 8
  %7 = call dereferenceable(8) %class.Pos*** @_ZSt4moveIRPP3PosEONSt16remove_referenceIT_E4typeEOS5_(%class.Pos*** dereferenceable(8) %6) #3
  %8 = load %class.Pos**, %class.Pos*** %7, align 8
  store %class.Pos** %8, %class.Pos*** %5, align 8
  %9 = load %class.Pos***, %class.Pos**** %4, align 8
  %10 = call dereferenceable(8) %class.Pos*** @_ZSt4moveIRPP3PosEONSt16remove_referenceIT_E4typeEOS5_(%class.Pos*** dereferenceable(8) %9) #3
  %11 = load %class.Pos**, %class.Pos*** %10, align 8
  %12 = load %class.Pos***, %class.Pos**** %3, align 8
  store %class.Pos** %11, %class.Pos*** %12, align 8
  %13 = call dereferenceable(8) %class.Pos*** @_ZSt4moveIRPP3PosEONSt16remove_referenceIT_E4typeEOS5_(%class.Pos*** dereferenceable(8) %5) #3
  %14 = load %class.Pos**, %class.Pos*** %13, align 8
  %15 = load %class.Pos***, %class.Pos**** %4, align 8
  store %class.Pos** %14, %class.Pos*** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.621
  %6 = load i32, i32* @y.622
  %7 = sub i32 %5, -1227958019
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1227958019
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 950686813, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 950686813, label %19
    i32 -500938334, label %27
    i32 32406562, label %67
    i32 1291421773, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -500938334, i32 1291421773
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64*, align 8
  %30 = alloca i64, align 8
  store i64* %0, i64** %28, align 8
  store i64* %1, i64** %29, align 8
  %31 = load i64*, i64** %28, align 8
  %32 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %31) #3
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %30, align 8
  %34 = load i64*, i64** %29, align 8
  %35 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %34) #3
  %36 = load i64, i64* %35, align 8
  %37 = load i64*, i64** %28, align 8
  store i64 %36, i64* %37, align 8
  %38 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %30) #3
  %39 = load i64, i64* %38, align 8
  %40 = load i64*, i64** %29, align 8
  store i64 %39, i64* %40, align 8
  %41 = load i32, i32* @x.621
  %42 = load i32, i32* @y.622
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 32406562, i32 1291421773
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i64, align 8
  store i64* %0, i64** %69, align 8
  store i64* %1, i64** %70, align 8
  %72 = load i64*, i64** %69, align 8
  %73 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %72) #3
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %71, align 8
  %75 = load i64*, i64** %70, align 8
  %76 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %75) #3
  %77 = load i64, i64* %76, align 8
  %78 = load i64*, i64** %69, align 8
  store i64 %77, i64* %78, align 8
  %79 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %71) #3
  %80 = load i64, i64* %79, align 8
  %81 = load i64*, i64** %70, align 8
  store i64 %80, i64* %81, align 8
  store i32 -500938334, i32* %15
  br label %82

; <label>:82:                                     ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorI3PosRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  ret %"struct.std::_Deque_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Pos*** @_ZSt4moveIRPP3PosEONSt16remove_referenceIT_E4typeEOS5_(%class.Pos*** dereferenceable(8)) #5 comdat {
  %2 = alloca %class.Pos***
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.625
  %6 = load i32, i32* @y.626
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2025800601, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2025800601, label %18
    i32 1302474395, label %26
    i32 -374417337, label %43
    i32 -79318045, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1302474395, i32 -79318045
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %class.Pos***, align 8
  store %class.Pos*** %0, %class.Pos**** %27, align 8
  %28 = load %class.Pos***, %class.Pos**** %27, align 8
  store %class.Pos*** %28, %class.Pos**** %2
  %29 = load i32, i32* @x.625
  %30 = load i32, i32* @y.626
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -374417337, i32 -79318045
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile %class.Pos***, %class.Pos**** %2
  ret %class.Pos*** %44

; <label>:45:                                     ; preds = %15
  %46 = alloca %class.Pos***, align 8
  store %class.Pos*** %0, %class.Pos**** %46, align 8
  %47 = load %class.Pos***, %class.Pos**** %46, align 8
  store i32 1302474395, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE9push_backEOS0_(%"class.std::deque"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = load %class.Pos*, %class.Pos** %4, align 8
  %7 = call dereferenceable(16) %class.Pos* @_ZSt4moveIR3PosEONSt16remove_referenceIT_E4typeEOS3_(%class.Pos* dereferenceable(16) %6) #3
  call void @_ZNSt5dequeI3PosSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::deque"* %5, %class.Pos* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt4moveIR3PosEONSt16remove_referenceIT_E4typeEOS3_(%class.Pos* dereferenceable(16)) #5 comdat {
  %2 = alloca %class.Pos*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.631
  %6 = load i32, i32* @y.632
  %7 = add i32 %5, 570879835
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 570879835
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2107832389, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2107832389, label %19
    i32 521206388, label %27
    i32 -318787563, label %45
    i32 -668104582, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 521206388, i32 -668104582
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %28, align 8
  %29 = load %class.Pos*, %class.Pos** %28, align 8
  store %class.Pos* %29, %class.Pos** %2
  %30 = load i32, i32* @x.631
  %31 = load i32, i32* @y.632
  %32 = add i32 %30, -18350273
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -18350273
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -318787563, i32 -668104582
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %class.Pos*, %class.Pos** %2
  ret %class.Pos* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %48, align 8
  %49 = load %class.Pos*, %class.Pos** %48, align 8
  store i32 521206388, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::deque"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %class.Pos*
  %4 = alloca %class.Pos*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %class.Pos*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store %class.Pos* %1, %class.Pos** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load %class.Pos*, %class.Pos** %13, align 8
  store %class.Pos* %14, %class.Pos** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load %class.Pos*, %class.Pos** %19, align 8
  %21 = getelementptr inbounds %class.Pos, %class.Pos* %20, i64 -1
  store %class.Pos* %21, %class.Pos** %3
  %22 = alloca i32
  store i32 -2101433122, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %170
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -2101433122, label %26
    i32 -435361963, label %31
    i32 -1996285161, label %51
    i32 -2058195329, label %79
    i32 1067710927, label %109
    i32 -614062821, label %110
    i32 -1023871433, label %137
    i32 1483187258, label %164
    i32 -1081350405, label %165
    i32 -420978378, label %169
  ]

; <label>:25:                                     ; preds = %23
  br label %170

; <label>:26:                                     ; preds = %23
  %27 = load volatile %class.Pos*, %class.Pos** %4
  %28 = load volatile %class.Pos*, %class.Pos** %3
  %29 = icmp ne %class.Pos* %27, %28
  %30 = select i1 %29, i32 -435361963, i32 -1996285161
  store i32 %30, i32* %22
  br label %170

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %34 to %"class.std::allocator.32"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load %class.Pos*, %class.Pos** %40, align 8
  %42 = load %class.Pos*, %class.Pos** %7, align 8
  %43 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %42) #3
  call void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1) %35, %class.Pos* %41, %class.Pos* dereferenceable(16) %43)
  %44 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %45 = bitcast %"class.std::deque"* %44 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 0
  %49 = load %class.Pos*, %class.Pos** %48, align 8
  %50 = getelementptr inbounds %class.Pos, %class.Pos* %49, i32 1
  store %class.Pos* %50, %class.Pos** %48, align 8
  store i32 -614062821, i32* %22
  br label %170

; <label>:51:                                     ; preds = %23
  %52 = load i32, i32* @x.633
  %53 = load i32, i32* @y.634
  %54 = add i32 %52, -283880186
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -283880186
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -2058195329, i32 -1081350405
  store i32 %78, i32* %22
  br label %170

; <label>:79:                                     ; preds = %23
  %80 = load %class.Pos*, %class.Pos** %7, align 8
  %81 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %80) #3
  %82 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeI3PosSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque"* %82, %class.Pos* dereferenceable(16) %81)
  %83 = load i32, i32* @x.633
  %84 = load i32, i32* @y.634
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 1067710927, i32 -1081350405
  store i32 %108, i32* %22
  br label %170

; <label>:109:                                    ; preds = %23
  store i32 -614062821, i32* %22
  br label %170

; <label>:110:                                    ; preds = %23
  %111 = load i32, i32* @x.633
  %112 = load i32, i32* @y.634
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 false, true
  %123 = and i1 %120, false
  %124 = and i1 %118, %122
  %125 = and i1 %121, false
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 false, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 -1023871433, i32 -420978378
  store i32 %136, i32* %22
  br label %170

; <label>:137:                                    ; preds = %23
  %138 = load i32, i32* @x.633
  %139 = load i32, i32* @y.634
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 1483187258, i32 -420978378
  store i32 %163, i32* %22
  br label %170

; <label>:164:                                    ; preds = %23
  ret void

; <label>:165:                                    ; preds = %23
  %166 = load %class.Pos*, %class.Pos** %7, align 8
  %167 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %166) #3
  %168 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeI3PosSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque"* %168, %class.Pos* dereferenceable(16) %167)
  store i32 -2058195329, i32* %22
  br label %170

; <label>:169:                                    ; preds = %23
  store i32 -1023871433, i32* %22
  br label %170

; <label>:170:                                    ; preds = %169, %165, %137, %110, %109, %79, %51, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1), %class.Pos*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.32"*, align 8
  %5 = alloca %class.Pos*, align 8
  %6 = alloca %class.Pos*, align 8
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %4, align 8
  store %class.Pos* %1, %class.Pos** %5, align 8
  store %class.Pos* %2, %class.Pos** %6, align 8
  %7 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %4, align 8
  %8 = bitcast %"class.std::allocator.32"* %7 to %"class.__gnu_cxx::new_allocator.33"*
  %9 = load %class.Pos*, %class.Pos** %5, align 8
  %10 = load %class.Pos*, %class.Pos** %6, align 8
  %11 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorI3PosE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.33"* %8, %class.Pos* %9, %class.Pos* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16)) #5 comdat {
  %2 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %2, align 8
  %3 = load %class.Pos*, %class.Pos** %2, align 8
  ret %class.Pos* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %class.Pos*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeI3PosSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call %class.Pos* @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load %class.Pos**, %class.Pos*** %13, align 8
  %15 = getelementptr inbounds %class.Pos*, %class.Pos** %14, i64 1
  store %class.Pos* %9, %class.Pos** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %17 to %"class.std::allocator.32"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load %class.Pos*, %class.Pos** %22, align 8
  %24 = load %class.Pos*, %class.Pos** %4, align 8
  %25 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %24) #3
  invoke void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1) %18, %class.Pos* %23, %class.Pos* dereferenceable(16) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load %class.Pos**, %class.Pos*** %33, align 8
  %35 = getelementptr inbounds %class.Pos*, %class.Pos** %34, i64 1
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %29, %class.Pos** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load %class.Pos*, %class.Pos** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store %class.Pos* %40, %class.Pos** %44, align 8
  br label %107

; <label>:45:                                     ; preds = %2
  %46 = load i32, i32* @x.639
  %47 = load i32, i32* @y.640
  %48 = add i32 %46, -1581446781
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1581446781
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %117

; <label>:60:                                     ; preds = %45, %117
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  %64 = load i32, i32* @x.639
  %65 = load i32, i32* @y.640
  %66 = add i32 %64, 793328860
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 793328860
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %117

; <label>:90:                                     ; preds = %60
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = load i8*, i8** %5, align 8
  %93 = call i8* @__cxa_begin_catch(i8* %92) #3
  %94 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %95 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %96 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %95, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %96, i32 0, i32 3
  %98 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %97, i32 0, i32 3
  %99 = load %class.Pos**, %class.Pos*** %98, align 8
  %100 = getelementptr inbounds %class.Pos*, %class.Pos** %99, i64 1
  %101 = load %class.Pos*, %class.Pos** %100, align 8
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %94, %class.Pos* %101) #3
  invoke void @__cxa_rethrow() #12
          to label %116 unwind label %102

; <label>:102:                                    ; preds = %91
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %5, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %106 unwind label %113

; <label>:106:                                    ; preds = %102
  br label %108

; <label>:107:                                    ; preds = %26
  ret void

; <label>:108:                                    ; preds = %106
  %109 = load i8*, i8** %5, align 8
  %110 = load i32, i32* %6, align 4
  %111 = insertvalue { i8*, i32 } undef, i8* %109, 0
  %112 = insertvalue { i8*, i32 } %111, i32 %110, 1
  resume { i8*, i32 } %112

; <label>:113:                                    ; preds = %102
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #9
  unreachable

; <label>:116:                                    ; preds = %91
  unreachable

; <label>:117:                                    ; preds = %60, %45
  %118 = landingpad { i8*, i32 }
          catch i8* null
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %5, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %6, align 4
  br label %60
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3PosE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.33"*, %class.Pos*, %class.Pos* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.641
  %7 = load i32, i32* @y.642
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 533208776, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 533208776, label %19
    i32 -778944558, label %27
    i32 1849980124, label %53
    i32 -1270331711, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -778944558, i32 -1270331711
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %29 = alloca %class.Pos*, align 8
  %30 = alloca %class.Pos*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %28, align 8
  store %class.Pos* %1, %class.Pos** %29, align 8
  store %class.Pos* %2, %class.Pos** %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %28, align 8
  %32 = load %class.Pos*, %class.Pos** %29, align 8
  %33 = bitcast %class.Pos* %32 to i8*
  %34 = bitcast i8* %33 to %class.Pos*
  %35 = load %class.Pos*, %class.Pos** %30, align 8
  %36 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %35) #3
  %37 = bitcast %class.Pos* %34 to i8*
  %38 = bitcast %class.Pos* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 16, i32 8, i1 false)
  %39 = load i32, i32* @x.641
  %40 = load i32, i32* @y.642
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1849980124, i32 -1270331711
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  ret void

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %56 = alloca %class.Pos*, align 8
  %57 = alloca %class.Pos*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %55, align 8
  store %class.Pos* %1, %class.Pos** %56, align 8
  store %class.Pos* %2, %class.Pos** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %55, align 8
  %59 = load %class.Pos*, %class.Pos** %56, align 8
  %60 = bitcast %class.Pos* %59 to i8*
  %61 = bitcast i8* %60 to %class.Pos*
  %62 = load %class.Pos*, %class.Pos** %57, align 8
  %63 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %62) #3
  %64 = bitcast %class.Pos* %61 to i8*
  %65 = bitcast %class.Pos* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false)
  store i32 -778944558, i32* %15
  br label %66

; <label>:66:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 0, 1
  %11 = sub i64 %9, %10
  %12 = add i64 %9, 1
  store i64 %11, i64* %4
  %13 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %14 = bitcast %"class.std::deque"* %13 to %"class.std::_Deque_base"*
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %19 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 3
  %23 = load %class.Pos**, %class.Pos*** %22, align 8
  %24 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %25 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %26 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %26, i32 0, i32 0
  %28 = load %class.Pos**, %class.Pos*** %27, align 8
  %29 = ptrtoint %class.Pos** %23 to i64
  %30 = ptrtoint %class.Pos** %28 to i64
  %31 = sub i64 %29, 1212682433734433212
  %32 = sub i64 %31, %30
  %33 = add i64 %32, 1212682433734433212
  %34 = sub i64 %29, %30
  %35 = sdiv exact i64 %33, 8
  %36 = sub i64 %17, 5905479751548743025
  %37 = sub i64 %36, %35
  %38 = add i64 %37, 5905479751548743025
  %39 = sub i64 %17, %35
  store i64 %38, i64* %3
  %40 = alloca i32
  store i32 -1329690398, i32* %40
  br label %41

; <label>:41:                                     ; preds = %2, %53
  %42 = load i32, i32* %40
  switch i32 %42, label %43 [
    i32 -1329690398, label %44
    i32 2033397860, label %49
    i32 390763345, label %52
  ]

; <label>:43:                                     ; preds = %41
  br label %53

; <label>:44:                                     ; preds = %41
  %45 = load volatile i64, i64* %4
  %46 = load volatile i64, i64* %3
  %47 = icmp ugt i64 %45, %46
  %48 = select i1 %47, i32 2033397860, i32 390763345
  store i32 %48, i32* %40
  br label %53

; <label>:49:                                     ; preds = %41
  %50 = load i64, i64* %7, align 8
  %51 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeI3PosSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque"* %51, i64 %50, i1 zeroext false)
  store i32 390763345, i32* %40
  br label %53

; <label>:52:                                     ; preds = %41
  ret void

; <label>:53:                                     ; preds = %49, %44, %43
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca %class.Pos**
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca %class.Pos**
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca %"class.std::deque"*
  %11 = alloca %"class.std::deque"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %class.Pos**, align 8
  %17 = alloca i64, align 8
  %18 = alloca %class.Pos**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %11, align 8
  store i64 %1, i64* %12, align 8
  %19 = zext i1 %2 to i8
  store i8 %19, i8* %13, align 1
  %20 = load %"class.std::deque"*, %"class.std::deque"** %11, align 8
  store %"class.std::deque"* %20, %"class.std::deque"** %10
  %21 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %22 = bitcast %"class.std::deque"* %21 to %"class.std::_Deque_base"*
  %23 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %23, i32 0, i32 3
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %24, i32 0, i32 3
  %26 = load %class.Pos**, %class.Pos*** %25, align 8
  %27 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %28 = bitcast %"class.std::deque"* %27 to %"class.std::_Deque_base"*
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %29, i32 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 3
  %32 = load %class.Pos**, %class.Pos*** %31, align 8
  %33 = ptrtoint %class.Pos** %26 to i64
  %34 = ptrtoint %class.Pos** %32 to i64
  %35 = add i64 %33, -3919264867467100821
  %36 = sub i64 %35, %34
  %37 = sub i64 %36, -3919264867467100821
  %38 = sub i64 %33, %34
  %39 = sdiv exact i64 %37, 8
  %40 = sub i64 0, %39
  %41 = sub i64 0, 1
  %42 = add i64 %40, %41
  %43 = sub i64 0, %42
  %44 = add nsw i64 %39, 1
  store i64 %43, i64* %14, align 8
  %45 = load i64, i64* %14, align 8
  %46 = load i64, i64* %12, align 8
  %47 = sub i64 0, %46
  %48 = sub i64 %45, %47
  %49 = add i64 %45, %46
  store i64 %48, i64* %15, align 8
  %50 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %51 = bitcast %"class.std::deque"* %50 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %9
  %55 = load i64, i64* %15, align 8
  %56 = mul i64 2, %55
  store i64 %56, i64* %8
  %57 = alloca i32
  store i32 2051120644, i32* %57
  %58 = alloca i64
  %59 = alloca i64
  br label %60

; <label>:60:                                     ; preds = %3, %450
  %61 = load i32, i32* %57
  switch i32 %61, label %62 [
    i32 2051120644, label %63
    i32 -688655249, label %68
    i32 -550219278, label %96
    i32 -154693438, label %142
    i32 1382233091, label %145
    i32 588096081, label %172
    i32 -889559509, label %189
    i32 -397550869, label %191
    i32 248732723, label %218
    i32 652264892, label %246
    i32 1008550630, label %247
    i32 -71865638, label %260
    i32 142096010, label %276
    i32 1896579003, label %294
    i32 -559325941, label %295
    i32 396703121, label %332
    i32 -501017426, label %334
    i32 -1749179841, label %335
    i32 2110089261, label %376
    i32 -2147223637, label %390
    i32 1163471940, label %447
    i32 -567980593, label %449
  ]

; <label>:62:                                     ; preds = %60
  br label %450

; <label>:63:                                     ; preds = %60
  %64 = load volatile i64, i64* %9
  %65 = load volatile i64, i64* %8
  %66 = icmp ugt i64 %64, %65
  %67 = select i1 %66, i32 -688655249, i32 -559325941
  store i32 %67, i32* %57
  br label %450

; <label>:68:                                     ; preds = %60
  %69 = load i32, i32* @x.645
  %70 = load i32, i32* @y.646
  %71 = add i32 %69, 733126030
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 733126030
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 -550219278, i32 -2147223637
  store i32 %95, i32* %57
  br label %450

; <label>:96:                                     ; preds = %60
  %97 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %98 = bitcast %"class.std::deque"* %97 to %"class.std::_Deque_base"*
  %99 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %99, i32 0, i32 0
  %101 = load %class.Pos**, %class.Pos*** %100, align 8
  %102 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %103 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %104, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = load i64, i64* %15, align 8
  %108 = add i64 %106, -2207201681222542245
  %109 = sub i64 %108, %107
  %110 = sub i64 %109, -2207201681222542245
  %111 = sub i64 %106, %107
  %112 = udiv i64 %110, 2
  %113 = getelementptr inbounds %class.Pos*, %class.Pos** %101, i64 %112
  store %class.Pos** %113, %class.Pos*** %7
  %114 = load i8, i8* %13, align 1
  %115 = trunc i8 %114 to i1
  store i1 %115, i1* %6
  %116 = load i32, i32* @x.645
  %117 = load i32, i32* @y.646
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  %141 = select i1 %139, i32 -154693438, i32 -2147223637
  store i32 %141, i32* %57
  br label %450

; <label>:142:                                    ; preds = %60
  %143 = load volatile i1, i1* %6
  %144 = select i1 %143, i32 1382233091, i32 -397550869
  store i32 %144, i32* %57
  br label %450

; <label>:145:                                    ; preds = %60
  %146 = load i32, i32* @x.645
  %147 = load i32, i32* @y.646
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  %171 = select i1 %169, i32 588096081, i32 1163471940
  store i32 %171, i32* %57
  br label %450

; <label>:172:                                    ; preds = %60
  %173 = load i64, i64* %12, align 8
  store i64 %173, i64* %5
  %174 = load i32, i32* @x.645
  %175 = load i32, i32* @y.646
  %176 = add i32 %174, -84628943
  %177 = sub i32 %176, 1
  %178 = sub i32 %177, -84628943
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  %188 = select i1 %186, i32 -889559509, i32 1163471940
  store i32 %188, i32* %57
  br label %450

; <label>:189:                                    ; preds = %60
  store i32 1008550630, i32* %57
  %190 = load volatile i64, i64* %5
  store i64 %190, i64* %58
  br label %450

; <label>:191:                                    ; preds = %60
  %192 = load i32, i32* @x.645
  %193 = load i32, i32* @y.646
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  %217 = select i1 %215, i32 248732723, i32 -567980593
  store i32 %217, i32* %57
  br label %450

; <label>:218:                                    ; preds = %60
  %219 = load i32, i32* @x.645
  %220 = load i32, i32* @y.646
  %221 = add i32 %219, 1180852056
  %222 = sub i32 %221, 1
  %223 = sub i32 %222, 1180852056
  %224 = sub i32 %219, 1
  %225 = mul i32 %219, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %220, 10
  %229 = xor i1 %227, true
  %230 = xor i1 %228, true
  %231 = xor i1 true, true
  %232 = and i1 %229, true
  %233 = and i1 %227, %231
  %234 = and i1 %230, true
  %235 = and i1 %228, %231
  %236 = or i1 %232, %233
  %237 = or i1 %234, %235
  %238 = xor i1 %236, %237
  %239 = or i1 %229, %230
  %240 = xor i1 %239, true
  %241 = or i1 true, %231
  %242 = and i1 %240, %241
  %243 = or i1 %238, %242
  %244 = or i1 %227, %228
  %245 = select i1 %243, i32 652264892, i32 -567980593
  store i32 %245, i32* %57
  br label %450

; <label>:246:                                    ; preds = %60
  store i32 1008550630, i32* %57
  store i64 0, i64* %58
  br label %450

; <label>:247:                                    ; preds = %60
  %248 = load i64, i64* %58
  %249 = load volatile %class.Pos**, %class.Pos*** %7
  %250 = getelementptr inbounds %class.Pos*, %class.Pos** %249, i64 %248
  store %class.Pos** %250, %class.Pos*** %16, align 8
  %251 = load %class.Pos**, %class.Pos*** %16, align 8
  %252 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %253 = bitcast %"class.std::deque"* %252 to %"class.std::_Deque_base"*
  %254 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %254, i32 0, i32 2
  %256 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %255, i32 0, i32 3
  %257 = load %class.Pos**, %class.Pos*** %256, align 8
  %258 = icmp ult %class.Pos** %251, %257
  %259 = select i1 %258, i32 -71865638, i32 142096010
  store i32 %259, i32* %57
  br label %450

; <label>:260:                                    ; preds = %60
  %261 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %262 = bitcast %"class.std::deque"* %261 to %"class.std::_Deque_base"*
  %263 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %262, i32 0, i32 0
  %264 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %263, i32 0, i32 2
  %265 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %264, i32 0, i32 3
  %266 = load %class.Pos**, %class.Pos*** %265, align 8
  %267 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %268 = bitcast %"class.std::deque"* %267 to %"class.std::_Deque_base"*
  %269 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %268, i32 0, i32 0
  %270 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %269, i32 0, i32 3
  %271 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %270, i32 0, i32 3
  %272 = load %class.Pos**, %class.Pos*** %271, align 8
  %273 = getelementptr inbounds %class.Pos*, %class.Pos** %272, i64 1
  %274 = load %class.Pos**, %class.Pos*** %16, align 8
  %275 = call %class.Pos** @_ZSt4copyIPP3PosS2_ET0_T_S4_S3_(%class.Pos** %266, %class.Pos** %273, %class.Pos** %274)
  store i32 1896579003, i32* %57
  br label %450

; <label>:276:                                    ; preds = %60
  %277 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %278 = bitcast %"class.std::deque"* %277 to %"class.std::_Deque_base"*
  %279 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %278, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %279, i32 0, i32 2
  %281 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %280, i32 0, i32 3
  %282 = load %class.Pos**, %class.Pos*** %281, align 8
  %283 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %284 = bitcast %"class.std::deque"* %283 to %"class.std::_Deque_base"*
  %285 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %284, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %285, i32 0, i32 3
  %287 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %286, i32 0, i32 3
  %288 = load %class.Pos**, %class.Pos*** %287, align 8
  %289 = getelementptr inbounds %class.Pos*, %class.Pos** %288, i64 1
  %290 = load %class.Pos**, %class.Pos*** %16, align 8
  %291 = load i64, i64* %14, align 8
  %292 = getelementptr inbounds %class.Pos*, %class.Pos** %290, i64 %291
  %293 = call %class.Pos** @_ZSt13copy_backwardIPP3PosS2_ET0_T_S4_S3_(%class.Pos** %282, %class.Pos** %289, %class.Pos** %292)
  store i32 1896579003, i32* %57
  br label %450

; <label>:294:                                    ; preds = %60
  store i32 2110089261, i32* %57
  br label %450

; <label>:295:                                    ; preds = %60
  %296 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %297 = bitcast %"class.std::deque"* %296 to %"class.std::_Deque_base"*
  %298 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %298, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %302 = bitcast %"class.std::deque"* %301 to %"class.std::_Deque_base"*
  %303 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %302, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %303, i32 0, i32 1
  %305 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %304, i64* dereferenceable(8) %12)
  %306 = load i64, i64* %305, align 8
  %307 = sub i64 0, %300
  %308 = sub i64 0, %306
  %309 = add i64 %307, %308
  %310 = sub i64 0, %309
  %311 = add i64 %300, %306
  %312 = sub i64 0, %310
  %313 = sub i64 0, 2
  %314 = add i64 %312, %313
  %315 = sub i64 0, %314
  %316 = add i64 %310, 2
  store i64 %315, i64* %17, align 8
  %317 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %318 = bitcast %"class.std::deque"* %317 to %"class.std::_Deque_base"*
  %319 = load i64, i64* %17, align 8
  %320 = call %class.Pos** @_ZNSt11_Deque_baseI3PosSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %318, i64 %319)
  store %class.Pos** %320, %class.Pos*** %18, align 8
  %321 = load %class.Pos**, %class.Pos*** %18, align 8
  %322 = load i64, i64* %17, align 8
  %323 = load i64, i64* %15, align 8
  %324 = sub i64 0, %323
  %325 = add i64 %322, %324
  %326 = sub i64 %322, %323
  %327 = udiv i64 %325, 2
  %328 = getelementptr inbounds %class.Pos*, %class.Pos** %321, i64 %327
  store %class.Pos** %328, %class.Pos*** %4
  %329 = load i8, i8* %13, align 1
  %330 = trunc i8 %329 to i1
  %331 = select i1 %330, i32 396703121, i32 -501017426
  store i32 %331, i32* %57
  br label %450

; <label>:332:                                    ; preds = %60
  %333 = load i64, i64* %12, align 8
  store i32 -1749179841, i32* %57
  store i64 %333, i64* %59
  br label %450

; <label>:334:                                    ; preds = %60
  store i32 -1749179841, i32* %57
  store i64 0, i64* %59
  br label %450

; <label>:335:                                    ; preds = %60
  %336 = load i64, i64* %59
  %337 = load volatile %class.Pos**, %class.Pos*** %4
  %338 = getelementptr inbounds %class.Pos*, %class.Pos** %337, i64 %336
  store %class.Pos** %338, %class.Pos*** %16, align 8
  %339 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %340 = bitcast %"class.std::deque"* %339 to %"class.std::_Deque_base"*
  %341 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %340, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %341, i32 0, i32 2
  %343 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %342, i32 0, i32 3
  %344 = load %class.Pos**, %class.Pos*** %343, align 8
  %345 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %346 = bitcast %"class.std::deque"* %345 to %"class.std::_Deque_base"*
  %347 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %346, i32 0, i32 0
  %348 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %347, i32 0, i32 3
  %349 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %348, i32 0, i32 3
  %350 = load %class.Pos**, %class.Pos*** %349, align 8
  %351 = getelementptr inbounds %class.Pos*, %class.Pos** %350, i64 1
  %352 = load %class.Pos**, %class.Pos*** %16, align 8
  %353 = call %class.Pos** @_ZSt4copyIPP3PosS2_ET0_T_S4_S3_(%class.Pos** %344, %class.Pos** %351, %class.Pos** %352)
  %354 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %355 = bitcast %"class.std::deque"* %354 to %"class.std::_Deque_base"*
  %356 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %357 = bitcast %"class.std::deque"* %356 to %"class.std::_Deque_base"*
  %358 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %357, i32 0, i32 0
  %359 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %358, i32 0, i32 0
  %360 = load %class.Pos**, %class.Pos*** %359, align 8
  %361 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %362 = bitcast %"class.std::deque"* %361 to %"class.std::_Deque_base"*
  %363 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %362, i32 0, i32 0
  %364 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %363, i32 0, i32 1
  %365 = load i64, i64* %364, align 8
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %355, %class.Pos** %360, i64 %365) #3
  %366 = load %class.Pos**, %class.Pos*** %18, align 8
  %367 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %368 = bitcast %"class.std::deque"* %367 to %"class.std::_Deque_base"*
  %369 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %368, i32 0, i32 0
  %370 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %369, i32 0, i32 0
  store %class.Pos** %366, %class.Pos*** %370, align 8
  %371 = load i64, i64* %17, align 8
  %372 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %373 = bitcast %"class.std::deque"* %372 to %"class.std::_Deque_base"*
  %374 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %373, i32 0, i32 0
  %375 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %374, i32 0, i32 1
  store i64 %371, i64* %375, align 8
  store i32 2110089261, i32* %57
  br label %450

; <label>:376:                                    ; preds = %60
  %377 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %378 = bitcast %"class.std::deque"* %377 to %"class.std::_Deque_base"*
  %379 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %378, i32 0, i32 0
  %380 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %379, i32 0, i32 2
  %381 = load %class.Pos**, %class.Pos*** %16, align 8
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %380, %class.Pos** %381) #3
  %382 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %383 = bitcast %"class.std::deque"* %382 to %"class.std::_Deque_base"*
  %384 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %383, i32 0, i32 0
  %385 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %384, i32 0, i32 3
  %386 = load %class.Pos**, %class.Pos*** %16, align 8
  %387 = load i64, i64* %14, align 8
  %388 = getelementptr inbounds %class.Pos*, %class.Pos** %386, i64 %387
  %389 = getelementptr inbounds %class.Pos*, %class.Pos** %388, i64 -1
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %385, %class.Pos** %389) #3
  ret void

; <label>:390:                                    ; preds = %60
  %391 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %392 = bitcast %"class.std::deque"* %391 to %"class.std::_Deque_base"*
  %393 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %392, i32 0, i32 0
  %394 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %393, i32 0, i32 0
  %395 = load %class.Pos**, %class.Pos*** %394, align 8
  %396 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %397 = bitcast %"class.std::deque"* %396 to %"class.std::_Deque_base"*
  %398 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %397, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %398, i32 0, i32 1
  %400 = load i64, i64* %399, align 8
  %401 = load i64, i64* %15, align 8
  %402 = sub i64 0, %401
  %403 = add i64 %400, %402
  %404 = sub i64 %400, %401
  %405 = mul i64 %403, %401
  %406 = shl i64 %400, %401
  %407 = sub i64 %400, 2674996106425021628
  %408 = sub i64 %407, %401
  %409 = add i64 %408, 2674996106425021628
  %410 = sub i64 %400, %401
  %411 = mul i64 %409, %401
  %412 = shl i64 %400, %401
  %413 = add i64 0, 5663319279675879920
  %414 = sub i64 %413, %400
  %415 = sub i64 %414, 5663319279675879920
  %416 = sub i64 0, %400
  %417 = sub i64 0, %401
  %418 = sub i64 %415, %417
  %419 = add i64 %415, %401
  %420 = shl i64 %400, %401
  %421 = sub i64 0, %401
  %422 = add i64 %400, %421
  %423 = sub i64 %400, %401
  %424 = mul i64 %422, %401
  %425 = shl i64 %400, %401
  %426 = shl i64 %400, %401
  %427 = sub i64 0, %401
  %428 = add i64 %400, %427
  %429 = sub i64 %400, %401
  %430 = sub i64 0, 1880978817965673501
  %431 = sub i64 %430, %428
  %432 = add i64 %431, 1880978817965673501
  %433 = sub i64 0, %428
  %434 = sub i64 %432, 8964799273730417902
  %435 = add i64 %434, 2
  %436 = add i64 %435, 8964799273730417902
  %437 = add i64 %432, 2
  %438 = sub i64 %428, -3224717338333551536
  %439 = sub i64 %438, 2
  %440 = add i64 %439, -3224717338333551536
  %441 = sub i64 %428, 2
  %442 = mul i64 %440, 2
  %443 = udiv i64 %428, 2
  %444 = getelementptr inbounds %class.Pos*, %class.Pos** %395, i64 %443
  %445 = load i8, i8* %13, align 1
  %446 = trunc i8 %445 to i1
  store i32 -550219278, i32* %57
  br label %450

; <label>:447:                                    ; preds = %60
  %448 = load i64, i64* %12, align 8
  store i32 588096081, i32* %57
  br label %450

; <label>:449:                                    ; preds = %60
  store i32 248732723, i32* %57
  br label %450

; <label>:450:                                    ; preds = %449, %447, %390, %335, %334, %332, %295, %294, %276, %260, %247, %246, %218, %191, %189, %172, %145, %142, %96, %68, %63, %62
  br label %60
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZSt4copyIPP3PosS2_ET0_T_S4_S3_(%class.Pos**, %class.Pos**, %class.Pos**) #0 comdat {
  %4 = alloca %class.Pos**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.647
  %8 = load i32, i32* @y.648
  %9 = add i32 %7, 771793482
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 771793482
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1135219728, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %90
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1135219728, label %21
    i32 286795167, label %41
    i32 -1036383016, label %78
    i32 -1700668768, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %90

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 286795167, i32 -1700668768
  store i32 %40, i32* %17
  br label %90

; <label>:41:                                     ; preds = %18
  %42 = alloca %class.Pos**, align 8
  %43 = alloca %class.Pos**, align 8
  %44 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %42, align 8
  store %class.Pos** %1, %class.Pos*** %43, align 8
  store %class.Pos** %2, %class.Pos*** %44, align 8
  %45 = load %class.Pos**, %class.Pos*** %42, align 8
  %46 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %45)
  %47 = load %class.Pos**, %class.Pos*** %43, align 8
  %48 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %47)
  %49 = load %class.Pos**, %class.Pos*** %44, align 8
  %50 = call %class.Pos** @_ZSt14__copy_move_a2ILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos** %46, %class.Pos** %48, %class.Pos** %49)
  store %class.Pos** %50, %class.Pos*** %4
  %51 = load i32, i32* @x.647
  %52 = load i32, i32* @y.648
  %53 = add i32 %51, 2092199447
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 2092199447
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -1036383016, i32 -1700668768
  store i32 %77, i32* %17
  br label %90

; <label>:78:                                     ; preds = %18
  %79 = load volatile %class.Pos**, %class.Pos*** %4
  ret %class.Pos** %79

; <label>:80:                                     ; preds = %18
  %81 = alloca %class.Pos**, align 8
  %82 = alloca %class.Pos**, align 8
  %83 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %81, align 8
  store %class.Pos** %1, %class.Pos*** %82, align 8
  store %class.Pos** %2, %class.Pos*** %83, align 8
  %84 = load %class.Pos**, %class.Pos*** %81, align 8
  %85 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %84)
  %86 = load %class.Pos**, %class.Pos*** %82, align 8
  %87 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %86)
  %88 = load %class.Pos**, %class.Pos*** %83, align 8
  %89 = call %class.Pos** @_ZSt14__copy_move_a2ILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos** %85, %class.Pos** %87, %class.Pos** %88)
  store i32 286795167, i32* %17
  br label %90

; <label>:90:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZSt13copy_backwardIPP3PosS2_ET0_T_S4_S3_(%class.Pos**, %class.Pos**, %class.Pos**) #0 comdat {
  %4 = alloca %class.Pos**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.649
  %8 = load i32, i32* @y.650
  %9 = sub i32 %7, 890083541
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 890083541
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1894353611, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %77
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1894353611, label %21
    i32 1179664370, label %29
    i32 272626873, label %65
    i32 759124927, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %77

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1179664370, i32 759124927
  store i32 %28, i32* %17
  br label %77

; <label>:29:                                     ; preds = %18
  %30 = alloca %class.Pos**, align 8
  %31 = alloca %class.Pos**, align 8
  %32 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %30, align 8
  store %class.Pos** %1, %class.Pos*** %31, align 8
  store %class.Pos** %2, %class.Pos*** %32, align 8
  %33 = load %class.Pos**, %class.Pos*** %30, align 8
  %34 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %33)
  %35 = load %class.Pos**, %class.Pos*** %31, align 8
  %36 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %35)
  %37 = load %class.Pos**, %class.Pos*** %32, align 8
  %38 = call %class.Pos** @_ZSt23__copy_move_backward_a2ILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos** %34, %class.Pos** %36, %class.Pos** %37)
  store %class.Pos** %38, %class.Pos*** %4
  %39 = load i32, i32* @x.649
  %40 = load i32, i32* @y.650
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 272626873, i32 759124927
  store i32 %64, i32* %17
  br label %77

; <label>:65:                                     ; preds = %18
  %66 = load volatile %class.Pos**, %class.Pos*** %4
  ret %class.Pos** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %class.Pos**, align 8
  %69 = alloca %class.Pos**, align 8
  %70 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %68, align 8
  store %class.Pos** %1, %class.Pos*** %69, align 8
  store %class.Pos** %2, %class.Pos*** %70, align 8
  %71 = load %class.Pos**, %class.Pos*** %68, align 8
  %72 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %71)
  %73 = load %class.Pos**, %class.Pos*** %69, align 8
  %74 = call %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos** %73)
  %75 = load %class.Pos**, %class.Pos*** %70, align 8
  %76 = call %class.Pos** @_ZSt23__copy_move_backward_a2ILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos** %72, %class.Pos** %74, %class.Pos** %75)
  store i32 1179664370, i32* %17
  br label %77

; <label>:77:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZSt14__copy_move_a2ILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos**, %class.Pos**, %class.Pos**) #0 comdat {
  %4 = alloca %class.Pos**, align 8
  %5 = alloca %class.Pos**, align 8
  %6 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %4, align 8
  store %class.Pos** %1, %class.Pos*** %5, align 8
  store %class.Pos** %2, %class.Pos*** %6, align 8
  %7 = load %class.Pos**, %class.Pos*** %4, align 8
  %8 = call %class.Pos** @_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_(%class.Pos** %7)
  %9 = load %class.Pos**, %class.Pos*** %5, align 8
  %10 = call %class.Pos** @_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_(%class.Pos** %9)
  %11 = load %class.Pos**, %class.Pos*** %6, align 8
  %12 = call %class.Pos** @_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_(%class.Pos** %11)
  %13 = call %class.Pos** @_ZSt13__copy_move_aILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos** %8, %class.Pos** %10, %class.Pos** %12)
  ret %class.Pos** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Pos** @_ZSt12__miter_baseIPP3PosENSt11_Miter_baseIT_E13iterator_typeES4_(%class.Pos**) #5 comdat {
  %2 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %2, align 8
  %3 = load %class.Pos**, %class.Pos*** %2, align 8
  %4 = call %class.Pos** @_ZNSt10_Iter_baseIPP3PosLb0EE7_S_baseES2_(%class.Pos** %3)
  ret %class.Pos** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZSt13__copy_move_aILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos**, %class.Pos**, %class.Pos**) #0 comdat {
  %4 = alloca %class.Pos**, align 8
  %5 = alloca %class.Pos**, align 8
  %6 = alloca %class.Pos**, align 8
  %7 = alloca i8, align 1
  store %class.Pos** %0, %class.Pos*** %4, align 8
  store %class.Pos** %1, %class.Pos*** %5, align 8
  store %class.Pos** %2, %class.Pos*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Pos**, %class.Pos*** %4, align 8
  %9 = load %class.Pos**, %class.Pos*** %5, align 8
  %10 = load %class.Pos**, %class.Pos*** %6, align 8
  %11 = call %class.Pos** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP3PosEEPT_PKS5_S8_S6_(%class.Pos** %8, %class.Pos** %9, %class.Pos** %10)
  ret %class.Pos** %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_(%class.Pos**) #0 comdat {
  %2 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %2, align 8
  %3 = load %class.Pos**, %class.Pos*** %2, align 8
  %4 = call %class.Pos** @_ZNSt10_Iter_baseIPP3PosLb0EE7_S_baseES2_(%class.Pos** %3)
  ret %class.Pos** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Pos** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP3PosEEPT_PKS5_S8_S6_(%class.Pos**, %class.Pos**, %class.Pos**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %class.Pos**, align 8
  %6 = alloca %class.Pos**, align 8
  %7 = alloca %class.Pos**, align 8
  %8 = alloca i64, align 8
  store %class.Pos** %0, %class.Pos*** %5, align 8
  store %class.Pos** %1, %class.Pos*** %6, align 8
  store %class.Pos** %2, %class.Pos*** %7, align 8
  %9 = load %class.Pos**, %class.Pos*** %6, align 8
  %10 = load %class.Pos**, %class.Pos*** %5, align 8
  %11 = ptrtoint %class.Pos** %9 to i64
  %12 = ptrtoint %class.Pos** %10 to i64
  %13 = sub i64 %11, 8365991180625676925
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 8365991180625676925
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -1701071995, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1701071995, label %23
    i32 2083831708, label %27
    i32 -1195251124, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 2083831708, i32 -1195251124
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load %class.Pos**, %class.Pos*** %7, align 8
  %29 = bitcast %class.Pos** %28 to i8*
  %30 = load %class.Pos**, %class.Pos*** %5, align 8
  %31 = bitcast %class.Pos** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 -1195251124, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load %class.Pos**, %class.Pos*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds %class.Pos*, %class.Pos** %35, i64 %36
  ret %class.Pos** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Pos** @_ZNSt10_Iter_baseIPP3PosLb0EE7_S_baseES2_(%class.Pos**) #5 comdat align 2 {
  %2 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %2, align 8
  %3 = load %class.Pos**, %class.Pos*** %2, align 8
  ret %class.Pos** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZSt23__copy_move_backward_a2ILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos**, %class.Pos**, %class.Pos**) #0 comdat {
  %4 = alloca %class.Pos**, align 8
  %5 = alloca %class.Pos**, align 8
  %6 = alloca %class.Pos**, align 8
  store %class.Pos** %0, %class.Pos*** %4, align 8
  store %class.Pos** %1, %class.Pos*** %5, align 8
  store %class.Pos** %2, %class.Pos*** %6, align 8
  %7 = load %class.Pos**, %class.Pos*** %4, align 8
  %8 = call %class.Pos** @_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_(%class.Pos** %7)
  %9 = load %class.Pos**, %class.Pos*** %5, align 8
  %10 = call %class.Pos** @_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_(%class.Pos** %9)
  %11 = load %class.Pos**, %class.Pos*** %6, align 8
  %12 = call %class.Pos** @_ZSt12__niter_baseIPP3PosENSt11_Niter_baseIT_E13iterator_typeES4_(%class.Pos** %11)
  %13 = call %class.Pos** @_ZSt22__copy_move_backward_aILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos** %8, %class.Pos** %10, %class.Pos** %12)
  ret %class.Pos** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Pos** @_ZSt22__copy_move_backward_aILb0EPP3PosS2_ET1_T0_S4_S3_(%class.Pos**, %class.Pos**, %class.Pos**) #0 comdat {
  %4 = alloca %class.Pos**, align 8
  %5 = alloca %class.Pos**, align 8
  %6 = alloca %class.Pos**, align 8
  %7 = alloca i8, align 1
  store %class.Pos** %0, %class.Pos*** %4, align 8
  store %class.Pos** %1, %class.Pos*** %5, align 8
  store %class.Pos** %2, %class.Pos*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Pos**, %class.Pos*** %4, align 8
  %9 = load %class.Pos**, %class.Pos*** %5, align 8
  %10 = load %class.Pos**, %class.Pos*** %6, align 8
  %11 = call %class.Pos** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP3PosEEPT_PKS5_S8_S6_(%class.Pos** %8, %class.Pos** %9, %class.Pos** %10)
  ret %class.Pos** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Pos** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP3PosEEPT_PKS5_S8_S6_(%class.Pos**, %class.Pos**, %class.Pos**) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %class.Pos***
  %7 = alloca %class.Pos***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.667
  %11 = load i32, i32* @y.668
  %12 = add i32 %10, 279464722
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 279464722
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -528652901, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %130
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -528652901, label %24
    i32 1268751121, label %32
    i32 -687194393, label %68
    i32 1556766453, label %71
    i32 552666612, label %87
    i32 -1309364332, label %97
  ]

; <label>:23:                                     ; preds = %21
  br label %130

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1268751121, i32 -1309364332
  store i32 %31, i32* %20
  br label %130

; <label>:32:                                     ; preds = %21
  %33 = alloca %class.Pos**, align 8
  store %class.Pos*** %33, %class.Pos**** %7
  %34 = alloca %class.Pos**, align 8
  %35 = alloca %class.Pos**, align 8
  store %class.Pos*** %35, %class.Pos**** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile %class.Pos***, %class.Pos**** %7
  store %class.Pos** %0, %class.Pos*** %37, align 8
  store %class.Pos** %1, %class.Pos*** %34, align 8
  %38 = load volatile %class.Pos***, %class.Pos**** %6
  store %class.Pos** %2, %class.Pos*** %38, align 8
  %39 = load %class.Pos**, %class.Pos*** %34, align 8
  %40 = load volatile %class.Pos***, %class.Pos**** %7
  %41 = load %class.Pos**, %class.Pos*** %40, align 8
  %42 = ptrtoint %class.Pos** %39 to i64
  %43 = ptrtoint %class.Pos** %41 to i64
  %44 = add i64 %42, -6291230489470558163
  %45 = sub i64 %44, %43
  %46 = sub i64 %45, -6291230489470558163
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 8
  %49 = load volatile i64*, i64** %5
  store i64 %48, i64* %49, align 8
  %50 = load volatile i64*, i64** %5
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.667
  %54 = load i32, i32* @y.668
  %55 = add i32 %53, -12527971
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -12527971
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -687194393, i32 -1309364332
  store i32 %67, i32* %20
  br label %130

; <label>:68:                                     ; preds = %21
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 1556766453, i32 552666612
  store i32 %70, i32* %20
  br label %130

; <label>:71:                                     ; preds = %21
  %72 = load volatile %class.Pos***, %class.Pos**** %6
  %73 = load %class.Pos**, %class.Pos*** %72, align 8
  %74 = load volatile i64*, i64** %5
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 0, %75
  %77 = add i64 0, %76
  %78 = sub i64 0, %75
  %79 = getelementptr inbounds %class.Pos*, %class.Pos** %73, i64 %77
  %80 = bitcast %class.Pos** %79 to i8*
  %81 = load volatile %class.Pos***, %class.Pos**** %7
  %82 = load %class.Pos**, %class.Pos*** %81, align 8
  %83 = bitcast %class.Pos** %82 to i8*
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = mul i64 8, %85
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %80, i8* %83, i64 %86, i32 8, i1 false)
  store i32 552666612, i32* %20
  br label %130

; <label>:87:                                     ; preds = %21
  %88 = load volatile %class.Pos***, %class.Pos**** %6
  %89 = load %class.Pos**, %class.Pos*** %88, align 8
  %90 = load volatile i64*, i64** %5
  %91 = load i64, i64* %90, align 8
  %92 = add i64 0, 4614752157775303944
  %93 = sub i64 %92, %91
  %94 = sub i64 %93, 4614752157775303944
  %95 = sub i64 0, %91
  %96 = getelementptr inbounds %class.Pos*, %class.Pos** %89, i64 %94
  ret %class.Pos** %96

; <label>:97:                                     ; preds = %21
  %98 = alloca %class.Pos**, align 8
  %99 = alloca %class.Pos**, align 8
  %100 = alloca %class.Pos**, align 8
  %101 = alloca i64, align 8
  store %class.Pos** %0, %class.Pos*** %98, align 8
  store %class.Pos** %1, %class.Pos*** %99, align 8
  store %class.Pos** %2, %class.Pos*** %100, align 8
  %102 = load %class.Pos**, %class.Pos*** %99, align 8
  %103 = load %class.Pos**, %class.Pos*** %98, align 8
  %104 = ptrtoint %class.Pos** %102 to i64
  %105 = ptrtoint %class.Pos** %103 to i64
  %106 = sub i64 %104, 2573442503168072703
  %107 = sub i64 %106, %105
  %108 = add i64 %107, 2573442503168072703
  %109 = sub i64 %104, %105
  %110 = mul i64 %108, %105
  %111 = shl i64 %104, %105
  %112 = sub i64 0, %105
  %113 = add i64 %104, %112
  %114 = sub i64 %104, %105
  %115 = add i64 0, 482984142055702372
  %116 = sub i64 %115, %113
  %117 = sub i64 %116, 482984142055702372
  %118 = sub i64 0, %113
  %119 = sub i64 0, 8
  %120 = sub i64 %117, %119
  %121 = add i64 %117, 8
  %122 = sub i64 0, 8
  %123 = add i64 %113, %122
  %124 = sub i64 %113, 8
  %125 = mul i64 %123, 8
  %126 = shl i64 %113, 8
  %127 = sdiv exact i64 %113, 8
  store i64 %127, i64* %101, align 8
  %128 = load i64, i64* %101, align 8
  %129 = icmp ne i64 %128, 0
  store i32 1268751121, i32* %20
  br label %130

; <label>:130:                                    ; preds = %97, %71, %68, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_iESaIS4_ENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixEOS1_(%"struct.std::__detail::_Map_base.22"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::__detail::_Node_iterator.68"*
  %5 = alloca %"class.std::tuple.57"*
  %6 = alloca %"class.std::tuple.65"*
  %7 = alloca %"struct.std::__detail::_Hash_node.35"**
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca %"class.std::_Hashtable.19"**
  %11 = alloca %class.Pos**
  %12 = alloca i32**
  %13 = alloca i1
  %14 = alloca i1
  %15 = load i32, i32* @x.669
  %16 = load i32, i32* @y.670
  %17 = add i32 %15, 740145197
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, 740145197
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %14
  %24 = icmp slt i32 %16, 10
  store i1 %24, i1* %13
  %25 = alloca i32
  store i32 1491366831, i32* %25
  br label %26

; <label>:26:                                     ; preds = %2, %192
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 1491366831, label %29
    i32 776340839, label %49
    i32 1245014234, label %119
    i32 1412734368, label %122
    i32 -1710446993, label %154
    i32 2032766885, label %161
    i32 -36657726, label %164
  ]

; <label>:28:                                     ; preds = %26
  br label %192

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %14
  %31 = load volatile i1, i1* %13
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 776340839, i32 -36657726
  store i32 %48, i32* %25
  br label %192

; <label>:49:                                     ; preds = %26
  %50 = alloca i32*, align 8
  store i32** %50, i32*** %12
  %51 = alloca %"struct.std::__detail::_Map_base.22"*, align 8
  %52 = alloca %class.Pos*, align 8
  store %class.Pos** %52, %class.Pos*** %11
  %53 = alloca %"class.std::_Hashtable.19"*, align 8
  store %"class.std::_Hashtable.19"** %53, %"class.std::_Hashtable.19"*** %10
  %54 = alloca i64, align 8
  store i64* %54, i64** %9
  %55 = alloca i64, align 8
  store i64* %55, i64** %8
  %56 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"** %56, %"struct.std::__detail::_Hash_node.35"*** %7
  %57 = alloca %"class.std::tuple.65", align 8
  store %"class.std::tuple.65"* %57, %"class.std::tuple.65"** %6
  %58 = alloca %"class.std::tuple.57", align 1
  store %"class.std::tuple.57"* %58, %"class.std::tuple.57"** %5
  %59 = alloca %"struct.std::__detail::_Node_iterator.68", align 8
  store %"struct.std::__detail::_Node_iterator.68"* %59, %"struct.std::__detail::_Node_iterator.68"** %4
  store %"struct.std::__detail::_Map_base.22"* %0, %"struct.std::__detail::_Map_base.22"** %51, align 8
  %60 = load volatile %class.Pos**, %class.Pos*** %11
  store %class.Pos* %1, %class.Pos** %60, align 8
  %61 = load %"struct.std::__detail::_Map_base.22"*, %"struct.std::__detail::_Map_base.22"** %51, align 8
  %62 = bitcast %"struct.std::__detail::_Map_base.22"* %61 to %"class.std::_Hashtable.19"*
  %63 = load volatile %"class.std::_Hashtable.19"**, %"class.std::_Hashtable.19"*** %10
  store %"class.std::_Hashtable.19"* %62, %"class.std::_Hashtable.19"** %63, align 8
  %64 = load volatile %"class.std::_Hashtable.19"**, %"class.std::_Hashtable.19"*** %10
  %65 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %64, align 8
  %66 = bitcast %"class.std::_Hashtable.19"* %65 to %"struct.std::__detail::_Hash_code_base.21"*
  %67 = load volatile %class.Pos**, %class.Pos*** %11
  %68 = load %class.Pos*, %class.Pos** %67, align 8
  %69 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base.21"* %66, %class.Pos* dereferenceable(16) %68)
  %70 = load volatile i64*, i64** %9
  store i64 %69, i64* %70, align 8
  %71 = load volatile %"class.std::_Hashtable.19"**, %"class.std::_Hashtable.19"*** %10
  %72 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %71, align 8
  %73 = load volatile %class.Pos**, %class.Pos*** %11
  %74 = load %class.Pos*, %class.Pos** %73, align 8
  %75 = load volatile i64*, i64** %9
  %76 = load i64, i64* %75, align 8
  %77 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable.19"* %72, %class.Pos* dereferenceable(16) %74, i64 %76)
  %78 = load volatile i64*, i64** %8
  store i64 %77, i64* %78, align 8
  %79 = load volatile %"class.std::_Hashtable.19"**, %"class.std::_Hashtable.19"*** %10
  %80 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %79, align 8
  %81 = load volatile i64*, i64** %8
  %82 = load i64, i64* %81, align 8
  %83 = load volatile %class.Pos**, %class.Pos*** %11
  %84 = load %class.Pos*, %class.Pos** %83, align 8
  %85 = load volatile i64*, i64** %9
  %86 = load i64, i64* %85, align 8
  %87 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m(%"class.std::_Hashtable.19"* %80, i64 %82, %class.Pos* dereferenceable(16) %84, i64 %86)
  %88 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %7
  store %"struct.std::__detail::_Hash_node.35"* %87, %"struct.std::__detail::_Hash_node.35"** %88, align 8
  %89 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %7
  %90 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %89, align 8
  %91 = icmp ne %"struct.std::__detail::_Hash_node.35"* %90, null
  store i1 %91, i1* %3
  %92 = load i32, i32* @x.669
  %93 = load i32, i32* @y.670
  %94 = sub i32 %92, 411217331
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 411217331
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 1245014234, i32 -36657726
  store i32 %118, i32* %25
  br label %192

; <label>:119:                                    ; preds = %26
  %120 = load volatile i1, i1* %3
  %121 = select i1 %120, i32 -1710446993, i32 1412734368
  store i32 %121, i32* %25
  br label %192

; <label>:122:                                    ; preds = %26
  %123 = load volatile %"class.std::_Hashtable.19"**, %"class.std::_Hashtable.19"*** %10
  %124 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %123, align 8
  %125 = bitcast %"class.std::_Hashtable.19"* %124 to %"struct.std::__detail::_Hashtable_alloc.27"*
  %126 = load volatile %class.Pos**, %class.Pos*** %11
  %127 = load %class.Pos*, %class.Pos** %126, align 8
  %128 = call dereferenceable(16) %class.Pos* @_ZSt4moveIR3PosEONSt16remove_referenceIT_E4typeEOS3_(%class.Pos* dereferenceable(16) %127) #3
  %129 = call %class.Pos* @_ZSt16forward_as_tupleIJ3PosEESt5tupleIJDpOT_EES4_(%class.Pos* dereferenceable(16) %128) #3
  %130 = load volatile %"class.std::tuple.65"*, %"class.std::tuple.65"** %6
  %131 = getelementptr inbounds %"class.std::tuple.65", %"class.std::tuple.65"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Tuple_impl.66", %"struct.std::_Tuple_impl.66"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %132, i32 0, i32 0
  store %class.Pos* %129, %class.Pos** %133, align 8
  %134 = load volatile %"class.std::tuple.65"*, %"class.std::tuple.65"** %6
  %135 = load volatile %"class.std::tuple.57"*, %"class.std::tuple.57"** %5
  %136 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEPS6_DpOT_(%"struct.std::__detail::_Hashtable_alloc.27"* %125, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.65"* dereferenceable(8) %134, %"class.std::tuple.57"* dereferenceable(1) %135)
  %137 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %7
  store %"struct.std::__detail::_Hash_node.35"* %136, %"struct.std::__detail::_Hash_node.35"** %137, align 8
  %138 = load volatile %"class.std::_Hashtable.19"**, %"class.std::_Hashtable.19"*** %10
  %139 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %138, align 8
  %140 = load volatile i64*, i64** %8
  %141 = load i64, i64* %140, align 8
  %142 = load volatile i64*, i64** %9
  %143 = load i64, i64* %142, align 8
  %144 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %7
  %145 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %144, align 8
  %146 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %139, i64 %141, i64 %143, %"struct.std::__detail::_Hash_node.35"* %145)
  %147 = load volatile %"struct.std::__detail::_Node_iterator.68"*, %"struct.std::__detail::_Node_iterator.68"** %4
  %148 = getelementptr inbounds %"struct.std::__detail::_Node_iterator.68", %"struct.std::__detail::_Node_iterator.68"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.69", %"struct.std::__detail::_Node_iterator_base.69"* %148, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node.35"* %146, %"struct.std::__detail::_Hash_node.35"** %149, align 8
  %150 = load volatile %"struct.std::__detail::_Node_iterator.68"*, %"struct.std::__detail::_Node_iterator.68"** %4
  %151 = call %"struct.std::pair.43"* @_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEptEv(%"struct.std::__detail::_Node_iterator.68"* %150) #3
  %152 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %151, i32 0, i32 1
  %153 = load volatile i32**, i32*** %12
  store i32* %152, i32** %153, align 8
  store i32 2032766885, i32* %25
  br label %192

; <label>:154:                                    ; preds = %26
  %155 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %7
  %156 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %155, align 8
  %157 = bitcast %"struct.std::__detail::_Hash_node.35"* %156 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %158 = call dereferenceable(24) %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.36"* %157) #3
  %159 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %158, i32 0, i32 1
  %160 = load volatile i32**, i32*** %12
  store i32* %159, i32** %160, align 8
  store i32 2032766885, i32* %25
  br label %192

; <label>:161:                                    ; preds = %26
  %162 = load volatile i32**, i32*** %12
  %163 = load i32*, i32** %162, align 8
  ret i32* %163

; <label>:164:                                    ; preds = %26
  %165 = alloca i32*, align 8
  %166 = alloca %"struct.std::__detail::_Map_base.22"*, align 8
  %167 = alloca %class.Pos*, align 8
  %168 = alloca %"class.std::_Hashtable.19"*, align 8
  %169 = alloca i64, align 8
  %170 = alloca i64, align 8
  %171 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %172 = alloca %"class.std::tuple.65", align 8
  %173 = alloca %"class.std::tuple.57", align 1
  %174 = alloca %"struct.std::__detail::_Node_iterator.68", align 8
  store %"struct.std::__detail::_Map_base.22"* %0, %"struct.std::__detail::_Map_base.22"** %166, align 8
  store %class.Pos* %1, %class.Pos** %167, align 8
  %175 = load %"struct.std::__detail::_Map_base.22"*, %"struct.std::__detail::_Map_base.22"** %166, align 8
  %176 = bitcast %"struct.std::__detail::_Map_base.22"* %175 to %"class.std::_Hashtable.19"*
  store %"class.std::_Hashtable.19"* %176, %"class.std::_Hashtable.19"** %168, align 8
  %177 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %168, align 8
  %178 = bitcast %"class.std::_Hashtable.19"* %177 to %"struct.std::__detail::_Hash_code_base.21"*
  %179 = load %class.Pos*, %class.Pos** %167, align 8
  %180 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base.21"* %178, %class.Pos* dereferenceable(16) %179)
  store i64 %180, i64* %169, align 8
  %181 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %168, align 8
  %182 = load %class.Pos*, %class.Pos** %167, align 8
  %183 = load i64, i64* %169, align 8
  %184 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable.19"* %181, %class.Pos* dereferenceable(16) %182, i64 %183)
  store i64 %184, i64* %170, align 8
  %185 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %168, align 8
  %186 = load i64, i64* %170, align 8
  %187 = load %class.Pos*, %class.Pos** %167, align 8
  %188 = load i64, i64* %169, align 8
  %189 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m(%"class.std::_Hashtable.19"* %185, i64 %186, %class.Pos* dereferenceable(16) %187, i64 %188)
  store %"struct.std::__detail::_Hash_node.35"* %189, %"struct.std::__detail::_Hash_node.35"** %171, align 8
  %190 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %171, align 8
  %191 = icmp ne %"struct.std::__detail::_Hash_node.35"* %190, null
  store i32 776340839, i32* %25
  br label %192

; <label>:192:                                    ; preds = %164, %154, %122, %119, %49, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base.21"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.671
  %7 = load i32, i32* @y.672
  %8 = sub i32 %6, -1908765912
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1908765912
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -909401934, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -909401934, label %20
    i32 -596873012, label %28
    i32 1301578235, label %49
    i32 -2134991994, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -596873012, i32 -2134991994
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  %30 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %29, align 8
  store %class.Pos* %1, %class.Pos** %30, align 8
  %31 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %29, align 8
  %32 = call dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base.21"* %31)
  %33 = load %class.Pos*, %class.Pos** %30, align 8
  %34 = call i64 @_ZNKSt4hashI3PosEclERKS0_(%"struct.std::hash"* %32, %class.Pos* dereferenceable(16) %33)
  store i64 %34, i64* %3
  %35 = load i32, i32* @x.671
  %36 = load i32, i32* @y.672
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1301578235, i32 -2134991994
  store i32 %48, i32* %16
  br label %58

; <label>:49:                                     ; preds = %17
  %50 = load volatile i64, i64* %3
  ret i64 %50

; <label>:51:                                     ; preds = %17
  %52 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  %53 = alloca %class.Pos*, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %52, align 8
  store %class.Pos* %1, %class.Pos** %53, align 8
  %54 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %52, align 8
  %55 = call dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base.21"* %54)
  %56 = load %class.Pos*, %class.Pos** %53, align 8
  %57 = call i64 @_ZNKSt4hashI3PosEclERKS0_(%"struct.std::hash"* %55, %class.Pos* dereferenceable(16) %56)
  store i32 -596873012, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable.19"*, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.673
  %8 = load i32, i32* @y.674
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1361733035, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1361733035, label %20
    i32 -218264193, label %28
    i32 -786874796, label %54
    i32 -174844514, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -218264193, i32 -174844514
  store i32 %27, i32* %16
  br label %67

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::_Hashtable.19"*, align 8
  %30 = alloca %class.Pos*, align 8
  %31 = alloca i64, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %29, align 8
  store %class.Pos* %1, %class.Pos** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %29, align 8
  %33 = bitcast %"class.std::_Hashtable.19"* %32 to %"struct.std::__detail::_Hash_code_base.21"*
  %34 = load %class.Pos*, %class.Pos** %30, align 8
  %35 = load i64, i64* %31, align 8
  %36 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %32, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERS3_mm(%"struct.std::__detail::_Hash_code_base.21"* %33, %class.Pos* dereferenceable(16) %34, i64 %35, i64 %37)
  store i64 %38, i64* %4
  %39 = load i32, i32* @x.673
  %40 = load i32, i32* @y.674
  %41 = add i32 %39, 1147948523
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1147948523
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -786874796, i32 -174844514
  store i32 %53, i32* %16
  br label %67

; <label>:54:                                     ; preds = %17
  %55 = load volatile i64, i64* %4
  ret i64 %55

; <label>:56:                                     ; preds = %17
  %57 = alloca %"class.std::_Hashtable.19"*, align 8
  %58 = alloca %class.Pos*, align 8
  %59 = alloca i64, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %57, align 8
  store %class.Pos* %1, %class.Pos** %58, align 8
  store i64 %2, i64* %59, align 8
  %60 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %57, align 8
  %61 = bitcast %"class.std::_Hashtable.19"* %60 to %"struct.std::__detail::_Hash_code_base.21"*
  %62 = load %class.Pos*, %class.Pos** %58, align 8
  %63 = load i64, i64* %59, align 8
  %64 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %60, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERS3_mm(%"struct.std::__detail::_Hash_code_base.21"* %61, %class.Pos* dereferenceable(16) %62, i64 %63, i64 %65)
  store i32 -218264193, i32* %16
  br label %67

; <label>:67:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m(%"class.std::_Hashtable.19"*, i64, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node.35"*
  %6 = alloca %"struct.std::__detail::_Hash_node_base"*
  %7 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %8 = alloca %"class.std::_Hashtable.19"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %class.Pos*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %class.Pos* %2, %class.Pos** %10, align 8
  store i64 %3, i64* %11, align 8
  %13 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8, align 8
  %14 = load i64, i64* %9, align 8
  %15 = load %class.Pos*, %class.Pos** %10, align 8
  %16 = load i64, i64* %11, align 8
  %17 = call %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m(%"class.std::_Hashtable.19"* %13, i64 %14, %class.Pos* dereferenceable(16) %15, i64 %16)
  store %"struct.std::__detail::_Hash_node_base"* %17, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %18 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %18, %"struct.std::__detail::_Hash_node_base"** %6
  %19 = alloca i32
  store i32 -1355315628, i32* %19
  br label %20

; <label>:20:                                     ; preds = %4, %81
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1355315628, label %23
    i32 -1309924130, label %27
    i32 -2063187812, label %32
    i32 244368388, label %33
    i32 296161354, label %48
    i32 -359956308, label %77
    i32 1179486083, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %81

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %6
  %25 = icmp ne %"struct.std::__detail::_Hash_node_base"* %24, null
  %26 = select i1 %25, i32 -1309924130, i32 -2063187812
  store i32 %26, i32* %19
  br label %81

; <label>:27:                                     ; preds = %20
  %28 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %29 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %28, i32 0, i32 0
  %30 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %29, align 8
  %31 = bitcast %"struct.std::__detail::_Hash_node_base"* %30 to %"struct.std::__detail::_Hash_node.35"*
  store %"struct.std::__detail::_Hash_node.35"* %31, %"struct.std::__detail::_Hash_node.35"** %7, align 8
  store i32 244368388, i32* %19
  br label %81

; <label>:32:                                     ; preds = %20
  store %"struct.std::__detail::_Hash_node.35"* null, %"struct.std::__detail::_Hash_node.35"** %7, align 8
  store i32 244368388, i32* %19
  br label %81

; <label>:33:                                     ; preds = %20
  %34 = load i32, i32* @x.675
  %35 = load i32, i32* @y.676
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 296161354, i32 1179486083
  store i32 %47, i32* %19
  br label %81

; <label>:48:                                     ; preds = %20
  %49 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %7, align 8
  store %"struct.std::__detail::_Hash_node.35"* %49, %"struct.std::__detail::_Hash_node.35"** %5
  %50 = load i32, i32* @x.675
  %51 = load i32, i32* @y.676
  %52 = sub i32 %50, 240112949
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 240112949
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -359956308, i32 1179486083
  store i32 %76, i32* %19
  br label %81

; <label>:77:                                     ; preds = %20
  %78 = load volatile %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %5
  ret %"struct.std::__detail::_Hash_node.35"* %78

; <label>:79:                                     ; preds = %20
  %80 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %7, align 8
  store i32 296161354, i32* %19
  br label %81

; <label>:81:                                     ; preds = %79, %48, %33, %32, %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEPS6_DpOT_(%"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.65"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple.65"*, align 8
  %8 = alloca %"class.std::tuple.57"*, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %11 = alloca %"class.std::allocator.40", align 1
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple.65"* %2, %"class.std::tuple.65"** %7, align 8
  store %"class.std::tuple.57"* %3, %"class.std::tuple.57"** %8, align 8
  %14 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %5, align 8
  %15 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %14)
  %16 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE8allocateERS7_m(%"class.std::allocator.29"* dereferenceable(1) %15, i64 1)
  store %"struct.std::__detail::_Hash_node.35"* %16, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %18 = call %"struct.std::__detail::_Hash_node.35"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40) %17) #3
  store %"struct.std::__detail::_Hash_node.35"* %18, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %19 = invoke dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %14)
          to label %20 unwind label %75

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* @x.677
  %22 = load i32, i32* @y.678
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %229

; <label>:46:                                     ; preds = %20, %229
  call void @_ZNSaISt4pairIK3PosiEEC2INSt8__detail10_Hash_nodeIS2_Lb1EEEEERKSaIT_E(%"class.std::allocator.40"* %11, %"class.std::allocator.29"* dereferenceable(1) %19) #3
  %47 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %48 = bitcast %"struct.std::__detail::_Hash_node.35"* %47 to i8*
  %49 = bitcast i8* %48 to %"struct.std::__detail::_Hash_node.35"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEC2Ev(%"struct.std::__detail::_Hash_node.35"* %49) #3
  %50 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %51 = bitcast %"struct.std::__detail::_Hash_node.35"* %50 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %52 = call %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"* %51) #3
  %53 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %54 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %53) #3
  %55 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %7, align 8
  %56 = call dereferenceable(8) %"class.std::tuple.65"* @_ZSt7forwardISt5tupleIJO3PosEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.65"* dereferenceable(8) %55) #3
  %57 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %8, align 8
  %58 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %57) #3
  %59 = load i32, i32* @x.677
  %60 = load i32, i32* @y.678
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %229

; <label>:72:                                     ; preds = %46
  invoke void @_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOS1_EESA_IJEEEEEvRS4_PT_DpOT0_(%"class.std::allocator.40"* dereferenceable(1) %11, %"struct.std::pair.43"* %52, %"struct.std::piecewise_construct_t"* dereferenceable(1) %54, %"class.std::tuple.65"* dereferenceable(8) %56, %"class.std::tuple.57"* dereferenceable(1) %58)
          to label %73 unwind label %109

; <label>:73:                                     ; preds = %72
  %74 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  call void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"* %11) #3
  ret %"struct.std::__detail::_Hash_node.35"* %74

; <label>:75:                                     ; preds = %4
  %76 = load i32, i32* @x.677
  %77 = load i32, i32* @y.678
  %78 = sub i32 %76, -193779591
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -193779591
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %242

; <label>:90:                                     ; preds = %75, %242
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %12, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %13, align 4
  %94 = load i32, i32* @x.677
  %95 = load i32, i32* @y.678
  %96 = add i32 %94, 293817068
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 293817068
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %242

; <label>:108:                                    ; preds = %90
  br label %113

; <label>:109:                                    ; preds = %72
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %12, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %13, align 4
  call void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"* %11) #3
  br label %113

; <label>:113:                                    ; preds = %109, %108
  %114 = load i8*, i8** %12, align 8
  %115 = call i8* @__cxa_begin_catch(i8* %114) #3
  %116 = invoke dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %14)
          to label %117 unwind label %173

; <label>:117:                                    ; preds = %113
  %118 = load i32, i32* @x.677
  %119 = load i32, i32* @y.678
  %120 = add i32 %118, -1210516387
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, -1210516387
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %246

; <label>:144:                                    ; preds = %117, %246
  %145 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %146 = load i32, i32* @x.677
  %147 = load i32, i32* @y.678
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 true, true
  %158 = and i1 %155, true
  %159 = and i1 %153, %157
  %160 = and i1 %156, true
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 true, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %246

; <label>:171:                                    ; preds = %144
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE10deallocateERS7_PS6_m(%"class.std::allocator.29"* dereferenceable(1) %116, %"struct.std::__detail::_Hash_node.35"* %145, i64 1)
          to label %172 unwind label %173

; <label>:172:                                    ; preds = %171
  invoke void @__cxa_rethrow() #12
          to label %228 unwind label %173

; <label>:173:                                    ; preds = %172, %171, %113
  %174 = load i32, i32* @x.677
  %175 = load i32, i32* @y.678
  %176 = sub i32 %174, 1204014675
  %177 = sub i32 %176, 1
  %178 = add i32 %177, 1204014675
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = xor i1 %182, true
  %185 = xor i1 %183, true
  %186 = xor i1 false, true
  %187 = and i1 %184, false
  %188 = and i1 %182, %186
  %189 = and i1 %185, false
  %190 = and i1 %183, %186
  %191 = or i1 %187, %188
  %192 = or i1 %189, %190
  %193 = xor i1 %191, %192
  %194 = or i1 %184, %185
  %195 = xor i1 %194, true
  %196 = or i1 false, %186
  %197 = and i1 %195, %196
  %198 = or i1 %193, %197
  %199 = or i1 %182, %183
  br i1 %198, label %200, label %248

; <label>:200:                                    ; preds = %173, %248
  %201 = landingpad { i8*, i32 }
          cleanup
  %202 = extractvalue { i8*, i32 } %201, 0
  store i8* %202, i8** %12, align 8
  %203 = extractvalue { i8*, i32 } %201, 1
  store i32 %203, i32* %13, align 4
  %204 = load i32, i32* @x.677
  %205 = load i32, i32* @y.678
  %206 = sub i32 0, 1
  %207 = add i32 %204, %206
  %208 = sub i32 %204, 1
  %209 = mul i32 %204, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %205, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  br i1 %215, label %217, label %248

; <label>:217:                                    ; preds = %200
  invoke void @__cxa_end_catch()
          to label %218 unwind label %225

; <label>:218:                                    ; preds = %217
  br label %220
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:220:                                    ; preds = %218
  %221 = load i8*, i8** %12, align 8
  %222 = load i32, i32* %13, align 4
  %223 = insertvalue { i8*, i32 } undef, i8* %221, 0
  %224 = insertvalue { i8*, i32 } %223, i32 %222, 1
  resume { i8*, i32 } %224

; <label>:225:                                    ; preds = %217
  %226 = landingpad { i8*, i32 }
          catch i8* null
  %227 = extractvalue { i8*, i32 } %226, 0
  call void @__clang_call_terminate(i8* %227) #9
  unreachable

; <label>:228:                                    ; preds = %172
  unreachable

; <label>:229:                                    ; preds = %46, %20
  call void @_ZNSaISt4pairIK3PosiEEC2INSt8__detail10_Hash_nodeIS2_Lb1EEEEERKSaIT_E(%"class.std::allocator.40"* %11, %"class.std::allocator.29"* dereferenceable(1) %19) #3
  %230 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %231 = bitcast %"struct.std::__detail::_Hash_node.35"* %230 to i8*
  %232 = bitcast i8* %231 to %"struct.std::__detail::_Hash_node.35"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEC2Ev(%"struct.std::__detail::_Hash_node.35"* %232) #3
  %233 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %234 = bitcast %"struct.std::__detail::_Hash_node.35"* %233 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %235 = call %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"* %234) #3
  %236 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %237 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %236) #3
  %238 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %7, align 8
  %239 = call dereferenceable(8) %"class.std::tuple.65"* @_ZSt7forwardISt5tupleIJO3PosEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.65"* dereferenceable(8) %238) #3
  %240 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %8, align 8
  %241 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %240) #3
  br label %46

; <label>:242:                                    ; preds = %90, %75
  %243 = landingpad { i8*, i32 }
          catch i8* null
  %244 = extractvalue { i8*, i32 } %243, 0
  store i8* %244, i8** %12, align 8
  %245 = extractvalue { i8*, i32 } %243, 1
  store i32 %245, i32* %13, align 4
  br label %90

; <label>:246:                                    ; preds = %144, %117
  %247 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  br label %144

; <label>:248:                                    ; preds = %200, %173
  %249 = landingpad { i8*, i32 }
          cleanup
  %250 = extractvalue { i8*, i32 } %249, 0
  store i8* %250, i8** %12, align 8
  %251 = extractvalue { i8*, i32 } %249, 1
  store i32 %251, i32* %13, align 4
  br label %200
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Pos* @_ZSt16forward_as_tupleIJ3PosEESt5tupleIJDpOT_EES4_(%class.Pos* dereferenceable(16)) #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.679
  %3 = load i32, i32* @y.680
  %4 = sub i32 %2, -1029972966
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1029972966
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %98

; <label>:28:                                     ; preds = %1, %98
  %29 = alloca %"class.std::tuple.65", align 8
  %30 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %30, align 8
  %31 = load %class.Pos*, %class.Pos** %30, align 8
  %32 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %31) #3
  %33 = load i32, i32* @x.679
  %34 = load i32, i32* @y.680
  %35 = add i32 %33, -406671761
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -406671761
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %98

; <label>:59:                                     ; preds = %28
  invoke void @_ZNSt5tupleIJO3PosEEC2IJS0_EvEEDpOT_(%"class.std::tuple.65"* %29, %class.Pos* dereferenceable(16) %32)
          to label %60 unwind label %95

; <label>:60:                                     ; preds = %59
  %61 = load i32, i32* @x.679
  %62 = load i32, i32* @y.680
  %63 = sub i32 %61, -1998169725
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -1998169725
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %103

; <label>:75:                                     ; preds = %60, %103
  %76 = getelementptr inbounds %"class.std::tuple.65", %"class.std::tuple.65"* %29, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Tuple_impl.66", %"struct.std::_Tuple_impl.66"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %77, i32 0, i32 0
  %79 = load %class.Pos*, %class.Pos** %78, align 8
  %80 = load i32, i32* @x.679
  %81 = load i32, i32* @y.680
  %82 = sub i32 %80, -1543964467
  %83 = sub i32 %82, 1
  %84 = add i32 %83, -1543964467
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %103

; <label>:94:                                     ; preds = %75
  ret %class.Pos* %79

; <label>:95:                                     ; preds = %59
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  call void @__clang_call_terminate(i8* %97) #9
  unreachable

; <label>:98:                                     ; preds = %28, %1
  %99 = alloca %"class.std::tuple.65", align 8
  %100 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %100, align 8
  %101 = load %class.Pos*, %class.Pos** %100, align 8
  %102 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %101) #3
  br label %28

; <label>:103:                                    ; preds = %75, %60
  %104 = getelementptr inbounds %"class.std::tuple.65", %"class.std::tuple.65"* %29, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Tuple_impl.66", %"struct.std::_Tuple_impl.66"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %105, i32 0, i32 0
  %107 = load %class.Pos*, %class.Pos** %106, align 8
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"*, i64, i64, %"struct.std::__detail::_Hash_node.35"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Node_iterator.68", align 8
  %6 = alloca %"class.std::_Hashtable.19"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::pair.61", align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store %"struct.std::__detail::_Hash_node.35"* %3, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %15 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %6, align 8
  %16 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %15, i32 0, i32 4
  %17 = call i64 @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv(%"struct.std::__detail::_Prime_rehash_policy"* %16)
  store i64 %17, i64* %11, align 8
  store i64* %11, i64** %10, align 8
  %18 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %15, i32 0, i32 4
  %19 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %15, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %15, i32 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = call { i8, i64 } @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm(%"struct.std::__detail::_Prime_rehash_policy"* %18, i64 %20, i64 %22, i64 1)
  %24 = bitcast %"struct.std::pair.61"* %12 to { i8, i64 }*
  %25 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 0
  %26 = extractvalue { i8, i64 } %23, 0
  store i8 %26, i8* %25, align 8
  %27 = getelementptr inbounds { i8, i64 }, { i8, i64 }* %24, i32 0, i32 1
  %28 = extractvalue { i8, i64 } %23, 1
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %12, i32 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %222

; <label>:32:                                     ; preds = %4
  %33 = load i32, i32* @x.681
  %34 = load i32, i32* @y.682
  %35 = add i32 %33, 670673970
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 670673970
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %350

; <label>:59:                                     ; preds = %32, %350
  %60 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %12, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = load i64*, i64** %10, align 8
  %63 = load i32, i32* @x.681
  %64 = load i32, i32* @y.682
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %350

; <label>:76:                                     ; preds = %59
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable.19"* %15, i64 %61, i64* dereferenceable(8) %62)
          to label %77 unwind label %170

; <label>:77:                                     ; preds = %76
  %78 = load i32, i32* @x.681
  %79 = load i32, i32* @y.682
  %80 = sub i32 %78, -143703984
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -143703984
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %354

; <label>:104:                                    ; preds = %77, %354
  %105 = bitcast %"class.std::_Hashtable.19"* %15 to %"struct.std::__detail::_Hash_code_base.21"*
  %106 = load i32, i32* @x.681
  %107 = load i32, i32* @y.682
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %354

; <label>:131:                                    ; preds = %104
  %132 = invoke dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.21"* %105)
          to label %133 unwind label %170

; <label>:133:                                    ; preds = %131
  %134 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %135 = bitcast %"struct.std::__detail::_Hash_node.35"* %134 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %136 = call dereferenceable(24) %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.36"* %135) #3
  %137 = invoke dereferenceable(16) %class.Pos* @_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_(%"struct.std::__detail::_Select1st"* %132, %"struct.std::pair.43"* dereferenceable(24) %136)
          to label %138 unwind label %170

; <label>:138:                                    ; preds = %133
  %139 = load i32, i32* @x.681
  %140 = load i32, i32* @y.682
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %356

; <label>:152:                                    ; preds = %138, %356
  %153 = load i64, i64* %8, align 8
  %154 = load i32, i32* @x.681
  %155 = load i32, i32* @y.682
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %356

; <label>:167:                                    ; preds = %152
  %168 = invoke i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable.19"* %15, %class.Pos* dereferenceable(16) %137, i64 %153)
          to label %169 unwind label %170

; <label>:169:                                    ; preds = %167
  store i64 %168, i64* %7, align 8
  br label %222

; <label>:170:                                    ; preds = %280, %222, %167, %133, %131, %76
  %171 = load i32, i32* @x.681
  %172 = load i32, i32* @y.682
  %173 = add i32 %171, -477039933
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, -477039933
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %358

; <label>:185:                                    ; preds = %170, %358
  %186 = landingpad { i8*, i32 }
          catch i8* null
  %187 = extractvalue { i8*, i32 } %186, 0
  store i8* %187, i8** %13, align 8
  %188 = extractvalue { i8*, i32 } %186, 1
  store i32 %188, i32* %14, align 4
  %189 = load i32, i32* @x.681
  %190 = load i32, i32* @y.682
  %191 = sub i32 %189, 2128438262
  %192 = sub i32 %191, 1
  %193 = add i32 %192, 2128438262
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 true, true
  %202 = and i1 %199, true
  %203 = and i1 %197, %201
  %204 = and i1 %200, true
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 true, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  br i1 %213, label %215, label %358

; <label>:215:                                    ; preds = %185
  br label %216

; <label>:216:                                    ; preds = %215
  %217 = load i8*, i8** %13, align 8
  %218 = call i8* @__cxa_begin_catch(i8* %217) #3
  %219 = bitcast %"class.std::_Hashtable.19"* %15 to %"struct.std::__detail::_Hashtable_alloc.27"*
  %220 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  invoke void @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE18_M_deallocate_nodeEPS6_(%"struct.std::__detail::_Hashtable_alloc.27"* %219, %"struct.std::__detail::_Hash_node.35"* %220)
          to label %221 unwind label %293

; <label>:221:                                    ; preds = %216
  invoke void @__cxa_rethrow() #12
          to label %349 unwind label %293

; <label>:222:                                    ; preds = %169, %4
  %223 = bitcast %"class.std::_Hashtable.19"* %15 to %"struct.std::__detail::_Hash_code_base.21"*
  %224 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %225 = load i64, i64* %8, align 8
  invoke void @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeIS4_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.21"* %223, %"struct.std::__detail::_Hash_node.35"* %224, i64 %225)
          to label %226 unwind label %170

; <label>:226:                                    ; preds = %222
  %227 = load i32, i32* @x.681
  %228 = load i32, i32* @y.682
  %229 = sub i32 0, 1
  %230 = add i32 %227, %229
  %231 = sub i32 %227, 1
  %232 = mul i32 %227, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %228, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 true, true
  %239 = and i1 %236, true
  %240 = and i1 %234, %238
  %241 = and i1 %237, true
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 true, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  br i1 %250, label %252, label %362

; <label>:252:                                    ; preds = %226, %362
  %253 = load i64, i64* %7, align 8
  %254 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %255 = load i32, i32* @x.681
  %256 = load i32, i32* @y.682
  %257 = sub i32 0, 1
  %258 = add i32 %255, %257
  %259 = sub i32 %255, 1
  %260 = mul i32 %255, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %256, 10
  %264 = xor i1 %262, true
  %265 = xor i1 %263, true
  %266 = xor i1 true, true
  %267 = and i1 %264, true
  %268 = and i1 %262, %266
  %269 = and i1 %265, true
  %270 = and i1 %263, %266
  %271 = or i1 %267, %268
  %272 = or i1 %269, %270
  %273 = xor i1 %271, %272
  %274 = or i1 %264, %265
  %275 = xor i1 %274, true
  %276 = or i1 true, %266
  %277 = and i1 %275, %276
  %278 = or i1 %273, %277
  %279 = or i1 %262, %263
  br i1 %278, label %280, label %362

; <label>:280:                                    ; preds = %252
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %15, i64 %253, %"struct.std::__detail::_Hash_node.35"* %254)
          to label %281 unwind label %170

; <label>:281:                                    ; preds = %280
  %282 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %15, i32 0, i32 3
  %283 = load i64, i64* %282, align 8
  %284 = sub i64 0, %283
  %285 = sub i64 0, 1
  %286 = add i64 %284, %285
  %287 = sub i64 0, %286
  %288 = add i64 %283, 1
  store i64 %287, i64* %282, align 8
  %289 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  call void @_ZNSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEC2EPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Node_iterator.68"* %5, %"struct.std::__detail::_Hash_node.35"* %289) #3
  %290 = getelementptr inbounds %"struct.std::__detail::_Node_iterator.68", %"struct.std::__detail::_Node_iterator.68"* %5, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.69", %"struct.std::__detail::_Node_iterator_base.69"* %290, i32 0, i32 0
  %292 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %291, align 8
  ret %"struct.std::__detail::_Hash_node.35"* %292

; <label>:293:                                    ; preds = %221, %216
  %294 = landingpad { i8*, i32 }
          cleanup
  %295 = extractvalue { i8*, i32 } %294, 0
  store i8* %295, i8** %13, align 8
  %296 = extractvalue { i8*, i32 } %294, 1
  store i32 %296, i32* %14, align 4
  invoke void @__cxa_end_catch()
          to label %297 unwind label %346

; <label>:297:                                    ; preds = %293
  br label %299
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:299:                                    ; preds = %297
  %300 = load i32, i32* @x.681
  %301 = load i32, i32* @y.682
  %302 = add i32 %300, -119361835
  %303 = sub i32 %302, 1
  %304 = sub i32 %303, -119361835
  %305 = sub i32 %300, 1
  %306 = mul i32 %300, %304
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %301, 10
  %310 = and i1 %308, %309
  %311 = xor i1 %308, %309
  %312 = or i1 %310, %311
  %313 = or i1 %308, %309
  br i1 %312, label %314, label %365

; <label>:314:                                    ; preds = %299, %365
  %315 = load i8*, i8** %13, align 8
  %316 = load i32, i32* %14, align 4
  %317 = insertvalue { i8*, i32 } undef, i8* %315, 0
  %318 = insertvalue { i8*, i32 } %317, i32 %316, 1
  %319 = load i32, i32* @x.681
  %320 = load i32, i32* @y.682
  %321 = add i32 %319, 1888685617
  %322 = sub i32 %321, 1
  %323 = sub i32 %322, 1888685617
  %324 = sub i32 %319, 1
  %325 = mul i32 %319, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %320, 10
  %329 = xor i1 %327, true
  %330 = xor i1 %328, true
  %331 = xor i1 false, true
  %332 = and i1 %329, false
  %333 = and i1 %327, %331
  %334 = and i1 %330, false
  %335 = and i1 %328, %331
  %336 = or i1 %332, %333
  %337 = or i1 %334, %335
  %338 = xor i1 %336, %337
  %339 = or i1 %329, %330
  %340 = xor i1 %339, true
  %341 = or i1 false, %331
  %342 = and i1 %340, %341
  %343 = or i1 %338, %342
  %344 = or i1 %327, %328
  br i1 %343, label %345, label %365

; <label>:345:                                    ; preds = %314
  resume { i8*, i32 } %318

; <label>:346:                                    ; preds = %293
  %347 = landingpad { i8*, i32 }
          catch i8* null
  %348 = extractvalue { i8*, i32 } %347, 0
  call void @__clang_call_terminate(i8* %348) #9
  unreachable

; <label>:349:                                    ; preds = %221
  unreachable

; <label>:350:                                    ; preds = %59, %32
  %351 = getelementptr inbounds %"struct.std::pair.61", %"struct.std::pair.61"* %12, i32 0, i32 1
  %352 = load i64, i64* %351, align 8
  %353 = load i64*, i64** %10, align 8
  br label %59

; <label>:354:                                    ; preds = %104, %77
  %355 = bitcast %"class.std::_Hashtable.19"* %15 to %"struct.std::__detail::_Hash_code_base.21"*
  br label %104

; <label>:356:                                    ; preds = %152, %138
  %357 = load i64, i64* %8, align 8
  br label %152

; <label>:358:                                    ; preds = %185, %170
  %359 = landingpad { i8*, i32 }
          catch i8* null
  %360 = extractvalue { i8*, i32 } %359, 0
  store i8* %360, i8** %13, align 8
  %361 = extractvalue { i8*, i32 } %359, 1
  store i32 %361, i32* %14, align 4
  br label %185

; <label>:362:                                    ; preds = %252, %226
  %363 = load i64, i64* %7, align 8
  %364 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  br label %252

; <label>:365:                                    ; preds = %314, %299
  %366 = load i8*, i8** %13, align 8
  %367 = load i32, i32* %14, align 4
  %368 = insertvalue { i8*, i32 } undef, i8* %366, 0
  %369 = insertvalue { i8*, i32 } %368, i32 %367, 1
  br label %314
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.43"* @_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEptEv(%"struct.std::__detail::_Node_iterator.68"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Node_iterator.68"*, align 8
  store %"struct.std::__detail::_Node_iterator.68"* %0, %"struct.std::__detail::_Node_iterator.68"** %2, align 8
  %3 = load %"struct.std::__detail::_Node_iterator.68"*, %"struct.std::__detail::_Node_iterator.68"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Node_iterator.68"* %3 to %"struct.std::__detail::_Node_iterator_base.69"*
  %5 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.69", %"struct.std::__detail::_Node_iterator_base.69"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  %7 = bitcast %"struct.std::__detail::_Hash_node.35"* %6 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %8 = call %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"* %7) #3
  ret %"struct.std::pair.43"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.36"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base.36"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base.36"* %0, %"struct.std::__detail::_Hash_node_value_base.36"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base.36"*, %"struct.std::__detail::_Hash_node_value_base.36"** %2, align 8
  %4 = call %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"* %3) #3
  ret %"struct.std::pair.43"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::hash"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h1Ev(%"struct.std::__detail::_Hash_code_base.21"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base.21"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.0"*
  %5 = call dereferenceable(1) %"struct.std::hash"* @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.0"* dereferenceable(1) %4)
  ret %"struct.std::hash"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERS3_mm(%"struct.std::__detail::_Hash_code_base.21"*, %class.Pos* dereferenceable(16), i64, i64) #0 comdat align 2 {
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.689
  %9 = load i32, i32* @y.690
  %10 = sub i32 %8, -218652048
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -218652048
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -359228693, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %78
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -359228693, label %22
    i32 1252172871, label %30
    i32 1322084800, label %66
    i32 -780244807, label %68
  ]

; <label>:21:                                     ; preds = %19
  br label %78

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1252172871, i32 -780244807
  store i32 %29, i32* %18
  br label %78

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  %32 = alloca %class.Pos*, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %31, align 8
  store %class.Pos* %1, %class.Pos** %32, align 8
  store i64 %2, i64* %33, align 8
  store i64 %3, i64* %34, align 8
  %35 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %31, align 8
  %36 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base.21"* %35)
  %37 = load i64, i64* %33, align 8
  %38 = load i64, i64* %34, align 8
  %39 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %36, i64 %37, i64 %38) #3
  store i64 %39, i64* %5
  %40 = load i32, i32* @x.689
  %41 = load i32, i32* @y.690
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1322084800, i32 -780244807
  store i32 %65, i32* %18
  br label %78

; <label>:66:                                     ; preds = %19
  %67 = load volatile i64, i64* %5
  ret i64 %67

; <label>:68:                                     ; preds = %19
  %69 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  %70 = alloca %class.Pos*, align 8
  %71 = alloca i64, align 8
  %72 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %69, align 8
  store %class.Pos* %1, %class.Pos** %70, align 8
  store i64 %2, i64* %71, align 8
  store i64 %3, i64* %72, align 8
  %73 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %69, align 8
  %74 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base.21"* %73)
  %75 = load i64, i64* %71, align 8
  %76 = load i64, i64* %72, align 8
  %77 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %74, i64 %75, i64 %76) #3
  store i32 1252172871, i32* %18
  br label %78

; <label>:78:                                     ; preds = %68, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base.21"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base.21"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.1"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper.1"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Mod_range_hashing"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m(%"class.std::_Hashtable.19"*, i64, %class.Pos* dereferenceable(16), i64) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hash_node_base"*
  %6 = alloca %"class.std::_Hashtable.19"*
  %7 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %8 = alloca %"class.std::_Hashtable.19"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %class.Pos*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  %13 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %class.Pos* %2, %class.Pos** %10, align 8
  store i64 %3, i64* %11, align 8
  %14 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8, align 8
  store %"class.std::_Hashtable.19"* %14, %"class.std::_Hashtable.19"** %6
  %15 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %6
  %16 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %15, i32 0, i32 0
  %17 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %16, align 8
  %18 = load i64, i64* %9, align 8
  %19 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %17, i64 %18
  %20 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %19, align 8
  store %"struct.std::__detail::_Hash_node_base"* %20, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %21 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %21, %"struct.std::__detail::_Hash_node_base"** %5
  %22 = alloca i32
  store i32 5947010, i32* %22
  br label %23

; <label>:23:                                     ; preds = %4, %154
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 5947010, label %26
    i32 -2095143246, label %30
    i32 -746407956, label %31
    i32 624161144, label %47
    i32 57232247, label %67
    i32 -503953167, label %68
    i32 1593352686, label %76
    i32 972683513, label %78
    i32 -1403014779, label %85
    i32 826005952, label %93
    i32 -1293312387, label %94
    i32 -784110755, label %97
    i32 -777589471, label %124
    i32 1176008215, label %142
    i32 -1847121392, label %143
    i32 254219468, label %144
    i32 -1087301323, label %146
    i32 -1873600388, label %151
  ]

; <label>:25:                                     ; preds = %23
  br label %154

; <label>:26:                                     ; preds = %23
  %27 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %5
  %28 = icmp ne %"struct.std::__detail::_Hash_node_base"* %27, null
  %29 = select i1 %28, i32 -746407956, i32 -2095143246
  store i32 %29, i32* %22
  br label %154

; <label>:30:                                     ; preds = %23
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  store i32 254219468, i32* %22
  br label %154

; <label>:31:                                     ; preds = %23
  %32 = load i32, i32* @x.693
  %33 = load i32, i32* @y.694
  %34 = add i32 %32, -989979281
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -989979281
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 624161144, i32 -1087301323
  store i32 %46, i32* %22
  br label %154

; <label>:47:                                     ; preds = %23
  %48 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %49 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %48, i32 0, i32 0
  %50 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %49, align 8
  %51 = bitcast %"struct.std::__detail::_Hash_node_base"* %50 to %"struct.std::__detail::_Hash_node.35"*
  store %"struct.std::__detail::_Hash_node.35"* %51, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %52 = load i32, i32* @x.693
  %53 = load i32, i32* @y.694
  %54 = sub i32 %52, 1457232325
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1457232325
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 57232247, i32 -1087301323
  store i32 %66, i32* %22
  br label %154

; <label>:67:                                     ; preds = %23
  store i32 -503953167, i32* %22
  br label %154

; <label>:68:                                     ; preds = %23
  %69 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %6
  %70 = bitcast %"class.std::_Hashtable.19"* %69 to %"struct.std::__detail::_Hashtable_base.20"*
  %71 = load %class.Pos*, %class.Pos** %10, align 8
  %72 = load i64, i64* %11, align 8
  %73 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %74 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Hashtable_base.20"* %70, %class.Pos* dereferenceable(16) %71, i64 %72, %"struct.std::__detail::_Hash_node.35"* %73)
  %75 = select i1 %74, i32 1593352686, i32 972683513
  store i32 %75, i32* %22
  br label %154

; <label>:76:                                     ; preds = %23
  %77 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store %"struct.std::__detail::_Hash_node_base"* %77, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  store i32 254219468, i32* %22
  br label %154

; <label>:78:                                     ; preds = %23
  %79 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %80 = bitcast %"struct.std::__detail::_Hash_node.35"* %79 to %"struct.std::__detail::_Hash_node_base"*
  %81 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %80, i32 0, i32 0
  %82 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %81, align 8
  %83 = icmp ne %"struct.std::__detail::_Hash_node_base"* %82, null
  %84 = select i1 %83, i32 -1403014779, i32 826005952
  store i32 %84, i32* %22
  br label %154

; <label>:85:                                     ; preds = %23
  %86 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %87 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %86) #3
  %88 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %6
  %89 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %88, %"struct.std::__detail::_Hash_node.35"* %87) #3
  %90 = load i64, i64* %9, align 8
  %91 = icmp ne i64 %89, %90
  %92 = select i1 %91, i32 826005952, i32 -1293312387
  store i32 %92, i32* %22
  br label %154

; <label>:93:                                     ; preds = %23
  store i32 -1847121392, i32* %22
  br label %154

; <label>:94:                                     ; preds = %23
  %95 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %96 = bitcast %"struct.std::__detail::_Hash_node.35"* %95 to %"struct.std::__detail::_Hash_node_base"*
  store %"struct.std::__detail::_Hash_node_base"* %96, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  store i32 -784110755, i32* %22
  br label %154

; <label>:97:                                     ; preds = %23
  %98 = load i32, i32* @x.693
  %99 = load i32, i32* @y.694
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -777589471, i32 -1873600388
  store i32 %123, i32* %22
  br label %154

; <label>:124:                                    ; preds = %23
  %125 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %126 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %125) #3
  store %"struct.std::__detail::_Hash_node.35"* %126, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %127 = load i32, i32* @x.693
  %128 = load i32, i32* @y.694
  %129 = sub i32 %127, -555005303
  %130 = sub i32 %129, 1
  %131 = add i32 %130, -555005303
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 1176008215, i32 -1873600388
  store i32 %141, i32* %22
  br label %154

; <label>:142:                                    ; preds = %23
  store i32 -503953167, i32* %22
  br label %154

; <label>:143:                                    ; preds = %23
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  store i32 254219468, i32* %22
  br label %154

; <label>:144:                                    ; preds = %23
  %145 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %7, align 8
  ret %"struct.std::__detail::_Hash_node_base"* %145

; <label>:146:                                    ; preds = %23
  %147 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, align 8
  %148 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %147, i32 0, i32 0
  %149 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %148, align 8
  %150 = bitcast %"struct.std::__detail::_Hash_node_base"* %149 to %"struct.std::__detail::_Hash_node.35"*
  store %"struct.std::__detail::_Hash_node.35"* %150, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  store i32 624161144, i32* %22
  br label %154

; <label>:151:                                    ; preds = %23
  %152 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  %153 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %152) #3
  store %"struct.std::__detail::_Hash_node.35"* %153, %"struct.std::__detail::_Hash_node.35"** %13, align 8
  store i32 -777589471, i32* %22
  br label %154

; <label>:154:                                    ; preds = %151, %146, %143, %142, %124, %97, %94, %93, %85, %78, %76, %68, %67, %47, %31, %30, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Hashtable_base.20"*, %class.Pos* dereferenceable(16), i64, %"struct.std::__detail::_Hash_node.35"*) #0 comdat align 2 {
  %5 = alloca %"struct.std::__detail::_Hashtable_base.20"*, align 8
  %6 = alloca %class.Pos*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hashtable_base.20"* %0, %"struct.std::__detail::_Hashtable_base.20"** %5, align 8
  store %class.Pos* %1, %class.Pos** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"struct.std::__detail::_Hash_node.35"* %3, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %9 = load %"struct.std::__detail::_Hashtable_base.20"*, %"struct.std::__detail::_Hashtable_base.20"** %5, align 8
  %10 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base.20"* %9)
  %11 = bitcast %"struct.std::__detail::_Hashtable_base.20"* %9 to %"struct.std::__detail::_Hash_code_base.21"*
  %12 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.21"* %11)
  %13 = load %class.Pos*, %class.Pos** %6, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %16 = call zeroext i1 @_ZNSt8__detail13_Equal_helperI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_EmLb1EE9_S_equalsERKS7_RKS5_RS3_mPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::equal_to"* dereferenceable(1) %10, %"struct.std::__detail::_Select1st"* dereferenceable(1) %12, %class.Pos* dereferenceable(16) %13, i64 %14, %"struct.std::__detail::_Hash_node.35"* %15)
  ret i1 %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"*, %"struct.std::__detail::_Hash_node.35"*) #5 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.697
  %7 = load i32, i32* @y.698
  %8 = add i32 %6, -1698905268
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1698905268
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 612479434, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 612479434, label %20
    i32 -1715813242, label %28
    i32 -202374103, label %64
    i32 -730334447, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1715813242, i32 -730334447
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::_Hashtable.19"*, align 8
  %30 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %29, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %30, align 8
  %31 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %29, align 8
  %32 = bitcast %"class.std::_Hashtable.19"* %31 to %"struct.std::__detail::_Hash_code_base.21"*
  %33 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %30, align 8
  %34 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %31, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS4_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.21"* %32, %"struct.std::__detail::_Hash_node.35"* %33, i64 %35) #3
  store i64 %36, i64* %3
  %37 = load i32, i32* @x.697
  %38 = load i32, i32* @y.698
  %39 = add i32 %37, 1191683643
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1191683643
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -202374103, i32 -730334447
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i64, i64* %3
  ret i64 %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::_Hashtable.19"*, align 8
  %68 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %67, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %68, align 8
  %69 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %67, align 8
  %70 = bitcast %"class.std::_Hashtable.19"* %69 to %"struct.std::__detail::_Hash_code_base.21"*
  %71 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %68, align 8
  %72 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %69, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS4_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.21"* %70, %"struct.std::__detail::_Hash_node.35"* %71, i64 %73) #3
  store i32 -1715813242, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt8__detail13_Equal_helperI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_EmLb1EE9_S_equalsERKS7_RKS5_RS3_mPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::equal_to"* dereferenceable(1), %"struct.std::__detail::_Select1st"* dereferenceable(1), %class.Pos* dereferenceable(16), i64, %"struct.std::__detail::_Hash_node.35"*) #0 comdat align 2 {
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"struct.std::equal_to"*, align 8
  %9 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %10 = alloca %class.Pos*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::equal_to"* %0, %"struct.std::equal_to"** %8, align 8
  store %"struct.std::__detail::_Select1st"* %1, %"struct.std::__detail::_Select1st"** %9, align 8
  store %class.Pos* %2, %class.Pos** %10, align 8
  store i64 %3, i64* %11, align 8
  store %"struct.std::__detail::_Hash_node.35"* %4, %"struct.std::__detail::_Hash_node.35"** %12, align 8
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %7
  %14 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %12, align 8
  %15 = getelementptr inbounds %"struct.std::__detail::_Hash_node.35", %"struct.std::__detail::_Hash_node.35"* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %6
  %17 = alloca i32
  store i32 1675086913, i32* %17
  %18 = alloca i1
  br label %19

; <label>:19:                                     ; preds = %5, %38
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 1675086913, label %22
    i32 -377667653, label %27
    i32 -1870623080, label %36
  ]

; <label>:21:                                     ; preds = %19
  br label %38

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %7
  %24 = load volatile i64, i64* %6
  %25 = icmp eq i64 %23, %24
  %26 = select i1 %25, i32 -377667653, i32 -1870623080
  store i32 %26, i32* %17
  store i1 false, i1* %18
  br label %38

; <label>:27:                                     ; preds = %19
  %28 = load %"struct.std::equal_to"*, %"struct.std::equal_to"** %8, align 8
  %29 = load %class.Pos*, %class.Pos** %10, align 8
  %30 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %9, align 8
  %31 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %12, align 8
  %32 = bitcast %"struct.std::__detail::_Hash_node.35"* %31 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %33 = call dereferenceable(24) %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.36"* %32) #3
  %34 = call dereferenceable(16) %class.Pos* @_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_(%"struct.std::__detail::_Select1st"* %30, %"struct.std::pair.43"* dereferenceable(24) %33)
  %35 = call zeroext i1 @_ZNKSt8equal_toI3PosEclERKS0_S3_(%"struct.std::equal_to"* %28, %class.Pos* dereferenceable(16) %29, %class.Pos* dereferenceable(16) %34)
  store i32 -1870623080, i32* %17
  store i1 %35, i1* %18
  br label %38

; <label>:36:                                     ; preds = %19
  %37 = load i1, i1* %18
  ret i1 %37

; <label>:38:                                     ; preds = %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::equal_to"* @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv(%"struct.std::__detail::_Hashtable_base.20"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hashtable_base.20"*, align 8
  store %"struct.std::__detail::_Hashtable_base.20"* %0, %"struct.std::__detail::_Hashtable_base.20"** %2, align 8
  %3 = load %"struct.std::__detail::_Hashtable_base.20"*, %"struct.std::__detail::_Hashtable_base.20"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hashtable_base.20"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper.2"*
  %5 = call dereferenceable(1) %"struct.std::equal_to"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toI3PosELb1EE7_S_cgetERKS4_(%"struct.std::__detail::_Hashtable_ebo_helper.2"* dereferenceable(1) %4)
  ret %"struct.std::equal_to"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.21"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base.21"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE7_S_cgetERKS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Select1st"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNKSt8__detail10_Select1stclIRSt4pairIK3PosiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_(%"struct.std::__detail::_Select1st"*, %"struct.std::pair.43"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Select1st"*, align 8
  %4 = alloca %"struct.std::pair.43"*, align 8
  store %"struct.std::__detail::_Select1st"* %0, %"struct.std::__detail::_Select1st"** %3, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %4, align 8
  %5 = load %"struct.std::__detail::_Select1st"*, %"struct.std::__detail::_Select1st"** %3, align 8
  %6 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %4, align 8
  %7 = call dereferenceable(24) %"struct.std::pair.43"* @_ZSt7forwardIRSt4pairIK3PosiEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.43"* dereferenceable(24) %6) #3
  %8 = call dereferenceable(16) %class.Pos* @_ZSt3getILm0EK3PosiERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS6_(%"struct.std::pair.43"* dereferenceable(24) %7) #3
  ret %class.Pos* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt3getILm0EK3PosiERNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERS6_(%"struct.std::pair.43"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"struct.std::pair.43"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %2, align 8
  %3 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %2, align 8
  %4 = call dereferenceable(16) %class.Pos* @_ZNSt10__pair_getILm0EE5__getIK3PosiEERT_RSt4pairIS4_T0_E(%"struct.std::pair.43"* dereferenceable(24) %3) #3
  ret %class.Pos* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::pair.43"* @_ZSt7forwardIRSt4pairIK3PosiEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.43"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"struct.std::pair.43"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.709
  %6 = load i32, i32* @y.710
  %7 = sub i32 %5, -1647678776
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1647678776
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -228838828, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -228838828, label %19
    i32 -1335941150, label %27
    i32 -230157254, label %45
    i32 19591718, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1335941150, i32 19591718
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair.43"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %28, align 8
  %29 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %28, align 8
  store %"struct.std::pair.43"* %29, %"struct.std::pair.43"** %2
  %30 = load i32, i32* @x.709
  %31 = load i32, i32* @y.710
  %32 = add i32 %30, -1243504062
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1243504062
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -230157254, i32 19591718
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::pair.43"*, %"struct.std::pair.43"** %2
  ret %"struct.std::pair.43"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::pair.43"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %48, align 8
  %49 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %48, align 8
  store i32 -1335941150, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt10__pair_getILm0EE5__getIK3PosiEERT_RSt4pairIS4_T0_E(%"struct.std::pair.43"* dereferenceable(24)) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.43"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %2, align 8
  %3 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %3, i32 0, i32 0
  ret %class.Pos* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS4_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_node.35"*, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %4, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %4, align 8
  %8 = invoke dereferenceable(1) %"struct.std::__detail::_Mod_range_hashing"* @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE5_M_h2Ev(%"struct.std::__detail::_Hash_code_base.21"* %7)
          to label %9 unwind label %44

; <label>:9:                                      ; preds = %3
  %10 = load i32, i32* @x.713
  %11 = load i32, i32* @y.714
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %11, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %89

; <label>:23:                                     ; preds = %9, %89
  %24 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  %25 = getelementptr inbounds %"struct.std::__detail::_Hash_node.35", %"struct.std::__detail::_Hash_node.35"* %24, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %6, align 8
  %28 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %8, i64 %26, i64 %27) #3
  %29 = load i32, i32* @x.713
  %30 = load i32, i32* @y.714
  %31 = sub i32 %29, 175871992
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 175871992
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %89

; <label>:43:                                     ; preds = %23
  ret i64 %28

; <label>:44:                                     ; preds = %3
  %45 = load i32, i32* @x.713
  %46 = load i32, i32* @y.714
  %47 = sub i32 %45, -1217719743
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1217719743
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %95

; <label>:59:                                     ; preds = %44, %95
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #9
  %62 = load i32, i32* @x.713
  %63 = load i32, i32* @y.714
  %64 = sub i32 %62, 1721421428
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 1721421428
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %95

; <label>:88:                                     ; preds = %59
  unreachable

; <label>:89:                                     ; preds = %23, %9
  %90 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  %91 = getelementptr inbounds %"struct.std::__detail::_Hash_node.35", %"struct.std::__detail::_Hash_node.35"* %90, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = load i64, i64* %6, align 8
  %94 = call i64 @_ZNKSt8__detail18_Mod_range_hashingclEmm(%"struct.std::__detail::_Mod_range_hashing"* %8, i64 %92, i64 %93) #3
  br label %23

; <label>:95:                                     ; preds = %59, %44
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  call void @__clang_call_terminate(i8* %97) #9
  br label %59
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE8allocateERS7_m(%"class.std::allocator.29"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node.35"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.715
  %7 = load i32, i32* @y.716
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1131945598, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1131945598, label %19
    i32 -2072882989, label %39
    i32 -20778863, label %73
    i32 1336612617, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2072882989, i32 1336612617
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.29"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %40, align 8
  %43 = bitcast %"class.std::allocator.29"* %42 to %"class.__gnu_cxx::new_allocator.30"*
  %44 = load i64, i64* %41, align 8
  %45 = call %"struct.std::__detail::_Hash_node.35"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.30"* %43, i64 %44, i8* null)
  store %"struct.std::__detail::_Hash_node.35"* %45, %"struct.std::__detail::_Hash_node.35"** %3
  %46 = load i32, i32* @x.715
  %47 = load i32, i32* @y.716
  %48 = sub i32 %46, 1088067010
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1088067010
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -20778863, i32 1336612617
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %3
  ret %"struct.std::__detail::_Hash_node.35"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::allocator.29"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %76, align 8
  %79 = bitcast %"class.std::allocator.29"* %78 to %"class.__gnu_cxx::new_allocator.30"*
  %80 = load i64, i64* %77, align 8
  %81 = call %"struct.std::__detail::_Hash_node.35"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.30"* %79, i64 %80, i8* null)
  store i32 -2072882989, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEC2Ev(%"struct.std::__detail::_Hash_node.35"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"* %0, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node.35"* %3 to %"struct.std::__detail::_Hash_node_value_base.36"*
  call void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEEC2Ev(%"struct.std::__detail::_Hash_node_value_base.36"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOS1_EESA_IJEEEEEvRS4_PT_DpOT0_(%"class.std::allocator.40"* dereferenceable(1), %"struct.std::pair.43"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.65"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.40"*, align 8
  %7 = alloca %"struct.std::pair.43"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.65"*, align 8
  %10 = alloca %"class.std::tuple.57"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %6, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.65"* %3, %"class.std::tuple.65"** %9, align 8
  store %"class.std::tuple.57"* %4, %"class.std::tuple.57"** %10, align 8
  %11 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %6, align 8
  %12 = bitcast %"class.std::allocator.40"* %11 to %"class.__gnu_cxx::new_allocator.41"*
  %13 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple.65"* @_ZSt7forwardISt5tupleIJO3PosEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.65"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOS2_EESA_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.41"* %12, %"struct.std::pair.43"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple.65"* dereferenceable(8) %17, %"class.std::tuple.57"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.65"* @_ZSt7forwardISt5tupleIJO3PosEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.65"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"class.std::tuple.65"*, align 8
  store %"class.std::tuple.65"* %0, %"class.std::tuple.65"** %2, align 8
  %3 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %2, align 8
  ret %"class.std::tuple.65"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.30"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node.35"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.30"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -1904214067, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %141
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1904214067, label %17
    i32 1485474104, label %22
    i32 700021939, label %49
    i32 -359760309, label %64
    i32 2040377426, label %65
    i32 123041311, label %81
    i32 -2104285475, label %113
    i32 -839696788, label %115
    i32 1357126376, label %116
  ]

; <label>:16:                                     ; preds = %14
  br label %141

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 1485474104, i32 2040377426
  store i32 %21, i32* %13
  br label %141

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.723
  %24 = load i32, i32* @y.724
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 700021939, i32 -839696788
  store i32 %48, i32* %13
  br label %141

; <label>:49:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  %50 = load i32, i32* @x.723
  %51 = load i32, i32* @y.724
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -359760309, i32 -839696788
  store i32 %63, i32* %13
  br label %141

; <label>:64:                                     ; preds = %14
  unreachable

; <label>:65:                                     ; preds = %14
  %66 = load i32, i32* @x.723
  %67 = load i32, i32* @y.724
  %68 = sub i32 %66, 1142841126
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1142841126
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 123041311, i32 1357126376
  store i32 %80, i32* %13
  br label %141

; <label>:81:                                     ; preds = %14
  %82 = load i64, i64* %8, align 8
  %83 = mul i64 %82, 40
  %84 = call i8* @_Znwm(i64 %83)
  %85 = bitcast i8* %84 to %"struct.std::__detail::_Hash_node.35"*
  store %"struct.std::__detail::_Hash_node.35"* %85, %"struct.std::__detail::_Hash_node.35"** %4
  %86 = load i32, i32* @x.723
  %87 = load i32, i32* @y.724
  %88 = sub i32 %86, -944667498
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -944667498
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 -2104285475, i32 1357126376
  store i32 %112, i32* %13
  br label %141

; <label>:113:                                    ; preds = %14
  %114 = load volatile %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %4
  ret %"struct.std::__detail::_Hash_node.35"* %114

; <label>:115:                                    ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 700021939, i32* %13
  br label %141

; <label>:116:                                    ; preds = %14
  %117 = load i64, i64* %8, align 8
  %118 = sub i64 %117, 6999895746825930463
  %119 = sub i64 %118, 40
  %120 = add i64 %119, 6999895746825930463
  %121 = sub i64 %117, 40
  %122 = mul i64 %120, 40
  %123 = shl i64 %117, 40
  %124 = add i64 0, 1688831806614190355
  %125 = sub i64 %124, %117
  %126 = sub i64 %125, 1688831806614190355
  %127 = sub i64 0, %117
  %128 = sub i64 %126, 2700087949140147525
  %129 = add i64 %128, 40
  %130 = add i64 %129, 2700087949140147525
  %131 = add i64 %126, 40
  %132 = add i64 %117, -7674636109773479536
  %133 = sub i64 %132, 40
  %134 = sub i64 %133, -7674636109773479536
  %135 = sub i64 %117, 40
  %136 = mul i64 %134, 40
  %137 = shl i64 %117, 40
  %138 = mul i64 %117, 40
  %139 = call i8* @_Znwm(i64 %138)
  %140 = bitcast i8* %139 to %"struct.std::__detail::_Hash_node.35"*
  store i32 123041311, i32* %13
  br label %141

; <label>:141:                                    ; preds = %116, %115, %81, %65, %49, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  ret i64 461168601842738790
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEEC2Ev(%"struct.std::__detail::_Hash_node_value_base.36"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node_value_base.36"*, align 8
  store %"struct.std::__detail::_Hash_node_value_base.36"* %0, %"struct.std::__detail::_Hash_node_value_base.36"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_node_value_base.36"*, %"struct.std::__detail::_Hash_node_value_base.36"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_node_value_base.36"* %3 to %"struct.std::__detail::_Hash_node_base"*
  call void @_ZNSt8__detail15_Hash_node_baseC2Ev(%"struct.std::__detail::_Hash_node_base"* %4) #3
  %5 = getelementptr inbounds %"struct.std::__detail::_Hash_node_value_base.36", %"struct.std::__detail::_Hash_node_value_base.36"* %3, i32 0, i32 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOS2_EESA_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.41"*, %"struct.std::pair.43"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.65"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.729
  %9 = load i32, i32* @y.730
  %10 = sub i32 %8, 2119743753
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 2119743753
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -18448171, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %91
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -18448171, label %22
    i32 -397054875, label %30
    i32 -1883695756, label %67
    i32 -2134356825, label %68
  ]

; <label>:21:                                     ; preds = %19
  br label %91

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -397054875, i32 -2134356825
  store i32 %29, i32* %18
  br label %91

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  %32 = alloca %"struct.std::pair.43"*, align 8
  %33 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %34 = alloca %"class.std::tuple.65"*, align 8
  %35 = alloca %"class.std::tuple.57"*, align 8
  %36 = alloca %"struct.std::piecewise_construct_t", align 1
  %37 = alloca %"class.std::tuple.65", align 8
  %38 = alloca %"class.std::tuple.57", align 1
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %31, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %32, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %33, align 8
  store %"class.std::tuple.65"* %3, %"class.std::tuple.65"** %34, align 8
  store %"class.std::tuple.57"* %4, %"class.std::tuple.57"** %35, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %31, align 8
  %40 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %32, align 8
  %41 = bitcast %"struct.std::pair.43"* %40 to i8*
  %42 = bitcast i8* %41 to %"struct.std::pair.43"*
  %43 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %33, align 8
  %44 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %43) #3
  %45 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %34, align 8
  %46 = call dereferenceable(8) %"class.std::tuple.65"* @_ZSt7forwardISt5tupleIJO3PosEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.65"* dereferenceable(8) %45) #3
  call void @_ZNSt5tupleIJO3PosEEC2EOS2_(%"class.std::tuple.65"* %37, %"class.std::tuple.65"* dereferenceable(8) %46) #3
  %47 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %35, align 8
  %48 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %47) #3
  %49 = getelementptr inbounds %"class.std::tuple.65", %"class.std::tuple.65"* %37, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Tuple_impl.66", %"struct.std::_Tuple_impl.66"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %50, i32 0, i32 0
  %52 = load %class.Pos*, %class.Pos** %51, align 8
  call void @_ZNSt4pairIK3PosiEC2IJOS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE(%"struct.std::pair.43"* %42, %class.Pos* %52)
  %53 = load i32, i32* @x.729
  %54 = load i32, i32* @y.730
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1883695756, i32 -2134356825
  store i32 %66, i32* %18
  br label %91

; <label>:67:                                     ; preds = %19
  ret void

; <label>:68:                                     ; preds = %19
  %69 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  %70 = alloca %"struct.std::pair.43"*, align 8
  %71 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %72 = alloca %"class.std::tuple.65"*, align 8
  %73 = alloca %"class.std::tuple.57"*, align 8
  %74 = alloca %"struct.std::piecewise_construct_t", align 1
  %75 = alloca %"class.std::tuple.65", align 8
  %76 = alloca %"class.std::tuple.57", align 1
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %69, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %70, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %71, align 8
  store %"class.std::tuple.65"* %3, %"class.std::tuple.65"** %72, align 8
  store %"class.std::tuple.57"* %4, %"class.std::tuple.57"** %73, align 8
  %77 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %69, align 8
  %78 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %70, align 8
  %79 = bitcast %"struct.std::pair.43"* %78 to i8*
  %80 = bitcast i8* %79 to %"struct.std::pair.43"*
  %81 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %71, align 8
  %82 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %81) #3
  %83 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %72, align 8
  %84 = call dereferenceable(8) %"class.std::tuple.65"* @_ZSt7forwardISt5tupleIJO3PosEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.65"* dereferenceable(8) %83) #3
  call void @_ZNSt5tupleIJO3PosEEC2EOS2_(%"class.std::tuple.65"* %75, %"class.std::tuple.65"* dereferenceable(8) %84) #3
  %85 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %73, align 8
  %86 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %85) #3
  %87 = getelementptr inbounds %"class.std::tuple.65", %"class.std::tuple.65"* %75, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Tuple_impl.66", %"struct.std::_Tuple_impl.66"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %88, i32 0, i32 0
  %90 = load %class.Pos*, %class.Pos** %89, align 8
  call void @_ZNSt4pairIK3PosiEC2IJOS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE(%"struct.std::pair.43"* %80, %class.Pos* %90)
  store i32 -397054875, i32* %18
  br label %91

; <label>:91:                                     ; preds = %68, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJO3PosEEC2EOS2_(%"class.std::tuple.65"*, %"class.std::tuple.65"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::tuple.65"*, align 8
  %4 = alloca %"class.std::tuple.65"*, align 8
  store %"class.std::tuple.65"* %0, %"class.std::tuple.65"** %3, align 8
  store %"class.std::tuple.65"* %1, %"class.std::tuple.65"** %4, align 8
  %5 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %3, align 8
  %6 = bitcast %"class.std::tuple.65"* %5 to %"struct.std::_Tuple_impl.66"*
  %7 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %4, align 8
  %8 = bitcast %"class.std::tuple.65"* %7 to %"struct.std::_Tuple_impl.66"*
  call void @_ZNSt11_Tuple_implILm0EJO3PosEEC2EOS2_(%"struct.std::_Tuple_impl.66"* %6, %"struct.std::_Tuple_impl.66"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIK3PosiEC2IJOS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE(%"struct.std::pair.43"*, %class.Pos*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple.65", align 8
  %5 = alloca %"class.std::tuple.57", align 1
  %6 = alloca %"struct.std::pair.43"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.60", align 1
  %9 = getelementptr inbounds %"class.std::tuple.65", %"class.std::tuple.65"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl.66", %"struct.std::_Tuple_impl.66"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %10, i32 0, i32 0
  store %class.Pos* %1, %class.Pos** %11, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %6, align 8
  %12 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %6, align 8
  call void @_ZNSt4pairIK3PosiEC2IJOS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE(%"struct.std::pair.43"* %12, %"class.std::tuple.65"* dereferenceable(8) %4, %"class.std::tuple.57"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJO3PosEEC2EOS2_(%"struct.std::_Tuple_impl.66"*, %"struct.std::_Tuple_impl.66"* dereferenceable(8)) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.66"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.66"*, align 8
  store %"struct.std::_Tuple_impl.66"* %0, %"struct.std::_Tuple_impl.66"** %3, align 8
  store %"struct.std::_Tuple_impl.66"* %1, %"struct.std::_Tuple_impl.66"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.66"*, %"struct.std::_Tuple_impl.66"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.66"* %5 to %"struct.std::_Head_base.67"*
  %7 = load %"struct.std::_Tuple_impl.66"*, %"struct.std::_Tuple_impl.66"** %4, align 8
  %8 = call dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJO3PosEE7_M_headERS2_(%"struct.std::_Tuple_impl.66"* dereferenceable(8) %7) #3
  %9 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIO3PosEOT_RNSt16remove_referenceIS2_E4typeE(%class.Pos* dereferenceable(16) %8) #3
  invoke void @_ZNSt10_Head_baseILm0EO3PosLb0EEC2IS0_EEOT_(%"struct.std::_Head_base.67"* %6, %class.Pos* dereferenceable(16) %9)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt7forwardIO3PosEOT_RNSt16remove_referenceIS2_E4typeE(%class.Pos* dereferenceable(16)) #5 comdat {
  %2 = alloca %class.Pos*, align 8
  store %class.Pos* %0, %class.Pos** %2, align 8
  %3 = load %class.Pos*, %class.Pos** %2, align 8
  ret %class.Pos* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJO3PosEE7_M_headERS2_(%"struct.std::_Tuple_impl.66"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.66"*, align 8
  store %"struct.std::_Tuple_impl.66"* %0, %"struct.std::_Tuple_impl.66"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.66"*, %"struct.std::_Tuple_impl.66"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.66"* %3 to %"struct.std::_Head_base.67"*
  %5 = call dereferenceable(16) %class.Pos* @_ZNSt10_Head_baseILm0EO3PosLb0EE7_M_headERS2_(%"struct.std::_Head_base.67"* dereferenceable(8) %4) #3
  ret %class.Pos* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EO3PosLb0EEC2IS0_EEOT_(%"struct.std::_Head_base.67"*, %class.Pos* dereferenceable(16)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.741
  %6 = load i32, i32* @y.742
  %7 = sub i32 %5, -1871262263
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1871262263
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 286335197, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 286335197, label %19
    i32 -113451150, label %39
    i32 -520286602, label %73
    i32 -24202968, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -113451150, i32 -24202968
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Head_base.67"*, align 8
  %41 = alloca %class.Pos*, align 8
  store %"struct.std::_Head_base.67"* %0, %"struct.std::_Head_base.67"** %40, align 8
  store %class.Pos* %1, %class.Pos** %41, align 8
  %42 = load %"struct.std::_Head_base.67"*, %"struct.std::_Head_base.67"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %42, i32 0, i32 0
  %44 = load %class.Pos*, %class.Pos** %41, align 8
  %45 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %44) #3
  store %class.Pos* %45, %class.Pos** %43, align 8
  %46 = load i32, i32* @x.741
  %47 = load i32, i32* @y.742
  %48 = add i32 %46, 1103779930
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1103779930
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -520286602, i32 -24202968
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Head_base.67"*, align 8
  %76 = alloca %class.Pos*, align 8
  store %"struct.std::_Head_base.67"* %0, %"struct.std::_Head_base.67"** %75, align 8
  store %class.Pos* %1, %class.Pos** %76, align 8
  %77 = load %"struct.std::_Head_base.67"*, %"struct.std::_Head_base.67"** %75, align 8
  %78 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %77, i32 0, i32 0
  %79 = load %class.Pos*, %class.Pos** %76, align 8
  %80 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %79) #3
  store %class.Pos* %80, %class.Pos** %78, align 8
  store i32 -113451150, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt10_Head_baseILm0EO3PosLb0EE7_M_headERS2_(%"struct.std::_Head_base.67"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %class.Pos*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.743
  %6 = load i32, i32* @y.744
  %7 = add i32 %5, -1116068240
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1116068240
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1866861808, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1866861808, label %19
    i32 1484590589, label %39
    i32 332923644, label %71
    i32 1090595086, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1484590589, i32 1090595086
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Head_base.67"*, align 8
  store %"struct.std::_Head_base.67"* %0, %"struct.std::_Head_base.67"** %40, align 8
  %41 = load %"struct.std::_Head_base.67"*, %"struct.std::_Head_base.67"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %41, i32 0, i32 0
  %43 = load %class.Pos*, %class.Pos** %42, align 8
  store %class.Pos* %43, %class.Pos** %2
  %44 = load i32, i32* @x.743
  %45 = load i32, i32* @y.744
  %46 = sub i32 %44, 1761617007
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1761617007
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 332923644, i32 1090595086
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %class.Pos*, %class.Pos** %2
  ret %class.Pos* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Head_base.67"*, align 8
  store %"struct.std::_Head_base.67"* %0, %"struct.std::_Head_base.67"** %74, align 8
  %75 = load %"struct.std::_Head_base.67"*, %"struct.std::_Head_base.67"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Head_base.67", %"struct.std::_Head_base.67"* %75, i32 0, i32 0
  %77 = load %class.Pos*, %class.Pos** %76, align 8
  store i32 1484590589, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIK3PosiEC2IJOS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE(%"struct.std::pair.43"*, %"class.std::tuple.65"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.745
  %7 = load i32, i32* @y.746
  %8 = sub i32 %6, 679556419
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 679556419
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -526335052, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %95
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -526335052, label %20
    i32 1466137994, label %40
    i32 -500636971, label %80
    i32 1439848358, label %81
  ]

; <label>:19:                                     ; preds = %17
  br label %95

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1466137994, i32 1439848358
  store i32 %39, i32* %16
  br label %95

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Index_tuple", align 1
  %42 = alloca %"struct.std::_Index_tuple.60", align 1
  %43 = alloca %"struct.std::pair.43"*, align 8
  %44 = alloca %"class.std::tuple.65"*, align 8
  %45 = alloca %"class.std::tuple.57"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %43, align 8
  store %"class.std::tuple.65"* %1, %"class.std::tuple.65"** %44, align 8
  store %"class.std::tuple.57"* %2, %"class.std::tuple.57"** %45, align 8
  %46 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %43, align 8
  %47 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %46, i32 0, i32 0
  %48 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %44, align 8
  %49 = call dereferenceable(16) %class.Pos* @_ZSt3getILm0EJO3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.65"* dereferenceable(8) %48) #3
  %50 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIO3PosEOT_RNSt16remove_referenceIS2_E4typeE(%class.Pos* dereferenceable(16) %49) #3
  %51 = bitcast %class.Pos* %47 to i8*
  %52 = bitcast %class.Pos* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %46, i32 0, i32 1
  store i32 0, i32* %53, align 8
  %54 = load i32, i32* @x.745
  %55 = load i32, i32* @y.746
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -500636971, i32 1439848358
  store i32 %79, i32* %16
  br label %95

; <label>:80:                                     ; preds = %17
  ret void

; <label>:81:                                     ; preds = %17
  %82 = alloca %"struct.std::_Index_tuple", align 1
  %83 = alloca %"struct.std::_Index_tuple.60", align 1
  %84 = alloca %"struct.std::pair.43"*, align 8
  %85 = alloca %"class.std::tuple.65"*, align 8
  %86 = alloca %"class.std::tuple.57"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %84, align 8
  store %"class.std::tuple.65"* %1, %"class.std::tuple.65"** %85, align 8
  store %"class.std::tuple.57"* %2, %"class.std::tuple.57"** %86, align 8
  %87 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %87, i32 0, i32 0
  %89 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %85, align 8
  %90 = call dereferenceable(16) %class.Pos* @_ZSt3getILm0EJO3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.65"* dereferenceable(8) %89) #3
  %91 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIO3PosEOT_RNSt16remove_referenceIS2_E4typeE(%class.Pos* dereferenceable(16) %90) #3
  %92 = bitcast %class.Pos* %88 to i8*
  %93 = bitcast %class.Pos* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 16, i32 8, i1 false)
  %94 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %87, i32 0, i32 1
  store i32 0, i32* %94, align 8
  store i32 1466137994, i32* %16
  br label %95

; <label>:95:                                     ; preds = %81, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt3getILm0EJO3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.65"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"class.std::tuple.65"*, align 8
  store %"class.std::tuple.65"* %0, %"class.std::tuple.65"** %2, align 8
  %3 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %2, align 8
  %4 = bitcast %"class.std::tuple.65"* %3 to %"struct.std::_Tuple_impl.66"*
  %5 = call dereferenceable(16) %class.Pos* @_ZSt12__get_helperILm0EO3PosJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.66"* dereferenceable(8) %4) #3
  ret %class.Pos* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZSt12__get_helperILm0EO3PosJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.66"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.66"*, align 8
  store %"struct.std::_Tuple_impl.66"* %0, %"struct.std::_Tuple_impl.66"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.66"*, %"struct.std::_Tuple_impl.66"** %2, align 8
  %4 = call dereferenceable(16) %class.Pos* @_ZNSt11_Tuple_implILm0EJO3PosEE7_M_headERS2_(%"struct.std::_Tuple_impl.66"* dereferenceable(8) %3) #3
  ret %class.Pos* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJO3PosEEC2IJS0_EvEEDpOT_(%"class.std::tuple.65"*, %class.Pos* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.65"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"class.std::tuple.65"* %0, %"class.std::tuple.65"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"class.std::tuple.65"*, %"class.std::tuple.65"** %3, align 8
  %6 = bitcast %"class.std::tuple.65"* %5 to %"struct.std::_Tuple_impl.66"*
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  %8 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %7) #3
  call void @_ZNSt11_Tuple_implILm0EJO3PosEEC2IS0_EEOT_(%"struct.std::_Tuple_impl.66"* %6, %class.Pos* dereferenceable(16) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJO3PosEEC2IS0_EEOT_(%"struct.std::_Tuple_impl.66"*, %class.Pos* dereferenceable(16)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.66"*, align 8
  %4 = alloca %class.Pos*, align 8
  store %"struct.std::_Tuple_impl.66"* %0, %"struct.std::_Tuple_impl.66"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.66"*, %"struct.std::_Tuple_impl.66"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.66"* %5 to %"struct.std::_Head_base.67"*
  %7 = load %class.Pos*, %class.Pos** %4, align 8
  %8 = call dereferenceable(16) %class.Pos* @_ZSt7forwardI3PosEOT_RNSt16remove_referenceIS1_E4typeE(%class.Pos* dereferenceable(16) %7) #3
  call void @_ZNSt10_Head_baseILm0EO3PosLb0EEC2IS0_EEOT_(%"struct.std::_Head_base.67"* %6, %class.Pos* dereferenceable(16) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm(%"class.std::_Hashtable.19"*, i64, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Hashtable.19"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::integral_constant", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %10 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4, align 8
  %11 = load i64, i64* %5, align 8
  invoke void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable.19"* %10, i64 %11)
          to label %12 unwind label %43

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.755
  %14 = load i32, i32* @y.756
  %15 = add i32 %13, -217069846
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -217069846
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %234

; <label>:27:                                     ; preds = %12, %234
  %28 = load i32, i32* @x.755
  %29 = load i32, i32* @y.756
  %30 = sub i32 %28, 1832786164
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1832786164
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %234

; <label>:42:                                     ; preds = %27
  br label %131

; <label>:43:                                     ; preds = %3
  %44 = landingpad { i8*, i32 }
          catch i8* null
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %8, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %9, align 4
  br label %47

; <label>:47:                                     ; preds = %43
  %48 = load i32, i32* @x.755
  %49 = load i32, i32* @y.756
  %50 = sub i32 %48, 1183149286
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1183149286
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %235

; <label>:74:                                     ; preds = %47, %235
  %75 = load i8*, i8** %8, align 8
  %76 = call i8* @__cxa_begin_catch(i8* %75) #3
  %77 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %10, i32 0, i32 4
  %78 = load i64*, i64** %6, align 8
  %79 = load i64, i64* %78, align 8
  %80 = load i32, i32* @x.755
  %81 = load i32, i32* @y.756
  %82 = add i32 %80, 1083898535
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 1083898535
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %235

; <label>:94:                                     ; preds = %74
  invoke void @_ZNSt8__detail20_Prime_rehash_policy8_M_resetEm(%"struct.std::__detail::_Prime_rehash_policy"* %77, i64 %79)
          to label %95 unwind label %96

; <label>:95:                                     ; preds = %94
  invoke void @__cxa_rethrow() #12
          to label %233 unwind label %96

; <label>:96:                                     ; preds = %95, %94
  %97 = load i32, i32* @x.755
  %98 = load i32, i32* @y.756
  %99 = sub i32 %97, -101794884
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -101794884
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %241

; <label>:111:                                    ; preds = %96, %241
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %8, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %9, align 4
  %115 = load i32, i32* @x.755
  %116 = load i32, i32* @y.756
  %117 = sub i32 %115, -1077122697
  %118 = sub i32 %117, 1
  %119 = add i32 %118, -1077122697
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %241

; <label>:129:                                    ; preds = %111
  invoke void @__cxa_end_catch()
          to label %130 unwind label %190

; <label>:130:                                    ; preds = %129
  br label %132

; <label>:131:                                    ; preds = %42
  ret void

; <label>:132:                                    ; preds = %130
  %133 = load i32, i32* @x.755
  %134 = load i32, i32* @y.756
  %135 = sub i32 %133, 1266691516
  %136 = sub i32 %135, 1
  %137 = add i32 %136, 1266691516
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 false, true
  %146 = and i1 %143, false
  %147 = and i1 %141, %145
  %148 = and i1 %144, false
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 false, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %245

; <label>:159:                                    ; preds = %132, %245
  %160 = load i8*, i8** %8, align 8
  %161 = load i32, i32* %9, align 4
  %162 = insertvalue { i8*, i32 } undef, i8* %160, 0
  %163 = insertvalue { i8*, i32 } %162, i32 %161, 1
  %164 = load i32, i32* @x.755
  %165 = load i32, i32* @y.756
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %245

; <label>:189:                                    ; preds = %159
  resume { i8*, i32 } %163

; <label>:190:                                    ; preds = %129
  %191 = load i32, i32* @x.755
  %192 = load i32, i32* @y.756
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  br i1 %202, label %204, label %250

; <label>:204:                                    ; preds = %190, %250
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  call void @__clang_call_terminate(i8* %206) #9
  %207 = load i32, i32* @x.755
  %208 = load i32, i32* @y.756
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 false, true
  %219 = and i1 %216, false
  %220 = and i1 %214, %218
  %221 = and i1 %217, false
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 false, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  br i1 %230, label %232, label %250

; <label>:232:                                    ; preds = %204
  unreachable

; <label>:233:                                    ; preds = %95
  unreachable

; <label>:234:                                    ; preds = %27, %12
  br label %27

; <label>:235:                                    ; preds = %74, %47
  %236 = load i8*, i8** %8, align 8
  %237 = call i8* @__cxa_begin_catch(i8* %236) #3
  %238 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %10, i32 0, i32 4
  %239 = load i64*, i64** %6, align 8
  %240 = load i64, i64* %239, align 8
  br label %74

; <label>:241:                                    ; preds = %111, %96
  %242 = landingpad { i8*, i32 }
          cleanup
  %243 = extractvalue { i8*, i32 } %242, 0
  store i8* %243, i8** %8, align 8
  %244 = extractvalue { i8*, i32 } %242, 1
  store i32 %244, i32* %9, align 4
  br label %111

; <label>:245:                                    ; preds = %159, %132
  %246 = load i8*, i8** %8, align 8
  %247 = load i32, i32* %9, align 4
  %248 = insertvalue { i8*, i32 } undef, i8* %246, 0
  %249 = insertvalue { i8*, i32 } %248, i32 %247, 1
  br label %159

; <label>:250:                                    ; preds = %204, %190
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  call void @__clang_call_terminate(i8* %252) #9
  br label %204
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE10_M_extractEv(%"struct.std::__detail::_Hash_code_base.21"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %3 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_Hash_code_base.21"* %3 to %"struct.std::__detail::_Hashtable_ebo_helper"*
  %5 = call dereferenceable(1) %"struct.std::__detail::_Select1st"* @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_10_Select1stELb1EE6_S_getERS2_(%"struct.std::__detail::_Hashtable_ebo_helper"* dereferenceable(1) %4)
  ret %"struct.std::__detail::_Select1st"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE13_M_store_codeEPNS_10_Hash_nodeIS4_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_node.35"*, i64) #5 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_code_base.21"*, align 8
  %5 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__detail::_Hash_code_base.21"* %0, %"struct.std::__detail::_Hash_code_base.21"** %4, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__detail::_Hash_code_base.21"*, %"struct.std::__detail::_Hash_code_base.21"** %4, align 8
  %8 = load i64, i64* %6, align 8
  %9 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %5, align 8
  %10 = getelementptr inbounds %"struct.std::__detail::_Hash_node.35", %"struct.std::__detail::_Hash_node.35"* %9, i32 0, i32 1
  store i64 %8, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE22_M_insert_bucket_beginEmPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"*, i64, %"struct.std::__detail::_Hash_node.35"*) #5 comdat align 2 {
  %4 = alloca %"struct.std::__detail::_Hash_node_base"*
  %5 = alloca %"class.std::_Hashtable.19"*
  %6 = alloca %"class.std::_Hashtable.19"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %6, align 8
  store i64 %1, i64* %7, align 8
  store %"struct.std::__detail::_Hash_node.35"* %2, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %9 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %6, align 8
  store %"class.std::_Hashtable.19"* %9, %"class.std::_Hashtable.19"** %5
  %10 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %11 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %10, i32 0, i32 0
  %12 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %11, align 8
  %13 = load i64, i64* %7, align 8
  %14 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %12, i64 %13
  %15 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %14, align 8
  store %"struct.std::__detail::_Hash_node_base"* %15, %"struct.std::__detail::_Hash_node_base"** %4
  %16 = alloca i32
  store i32 -1934467889, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1934467889, label %20
    i32 -1564678720, label %24
    i32 1141101404, label %45
    i32 -454436552, label %64
    i32 -1826749949, label %75
    i32 859029378, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %4
  %22 = icmp ne %"struct.std::__detail::_Hash_node_base"* %21, null
  %23 = select i1 %22, i32 -1564678720, i32 1141101404
  store i32 %23, i32* %16
  br label %84

; <label>:24:                                     ; preds = %17
  %25 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %26 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %25, i32 0, i32 0
  %27 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %26, align 8
  %28 = load i64, i64* %7, align 8
  %29 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %27, i64 %28
  %30 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %30, i32 0, i32 0
  %32 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %31, align 8
  %33 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %34 = bitcast %"struct.std::__detail::_Hash_node.35"* %33 to %"struct.std::__detail::_Hash_node_base"*
  %35 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %34, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %32, %"struct.std::__detail::_Hash_node_base"** %35, align 8
  %36 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %37 = bitcast %"struct.std::__detail::_Hash_node.35"* %36 to %"struct.std::__detail::_Hash_node_base"*
  %38 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %39 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %38, i32 0, i32 0
  %40 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %39, align 8
  %41 = load i64, i64* %7, align 8
  %42 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %40, i64 %41
  %43 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %43, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %37, %"struct.std::__detail::_Hash_node_base"** %44, align 8
  store i32 859029378, i32* %16
  br label %84

; <label>:45:                                     ; preds = %17
  %46 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %47 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %46, i32 0, i32 2
  %48 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %47, i32 0, i32 0
  %49 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %48, align 8
  %50 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %51 = bitcast %"struct.std::__detail::_Hash_node.35"* %50 to %"struct.std::__detail::_Hash_node_base"*
  %52 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %51, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %49, %"struct.std::__detail::_Hash_node_base"** %52, align 8
  %53 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %54 = bitcast %"struct.std::__detail::_Hash_node.35"* %53 to %"struct.std::__detail::_Hash_node_base"*
  %55 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %56 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %55, i32 0, i32 2
  %57 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %56, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %54, %"struct.std::__detail::_Hash_node_base"** %57, align 8
  %58 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %59 = bitcast %"struct.std::__detail::_Hash_node.35"* %58 to %"struct.std::__detail::_Hash_node_base"*
  %60 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %59, i32 0, i32 0
  %61 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %60, align 8
  %62 = icmp ne %"struct.std::__detail::_Hash_node_base"* %61, null
  %63 = select i1 %62, i32 -454436552, i32 -1826749949
  store i32 %63, i32* %16
  br label %84

; <label>:64:                                     ; preds = %17
  %65 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %66 = bitcast %"struct.std::__detail::_Hash_node.35"* %65 to %"struct.std::__detail::_Hash_node_base"*
  %67 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %68 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %67, i32 0, i32 0
  %69 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %68, align 8
  %70 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %8, align 8
  %71 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %70) #3
  %72 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %73 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %72, %"struct.std::__detail::_Hash_node.35"* %71) #3
  %74 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %69, i64 %73
  store %"struct.std::__detail::_Hash_node_base"* %66, %"struct.std::__detail::_Hash_node_base"** %74, align 8
  store i32 -1826749949, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  %76 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %77 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %76, i32 0, i32 2
  %78 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %79 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %78, i32 0, i32 0
  %80 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %79, align 8
  %81 = load i64, i64* %7, align 8
  %82 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %80, i64 %81
  store %"struct.std::__detail::_Hash_node_base"* %77, %"struct.std::__detail::_Hash_node_base"** %82, align 8
  store i32 859029378, i32* %16
  br label %84

; <label>:83:                                     ; preds = %17
  ret void

; <label>:84:                                     ; preds = %75, %64, %45, %24, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEC2EPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Node_iterator.68"*, %"struct.std::__detail::_Hash_node.35"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.763
  %6 = load i32, i32* @y.764
  %7 = sub i32 %5, 1934596234
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1934596234
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1088921727, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1088921727, label %19
    i32 1908598919, label %27
    i32 -228516654, label %60
    i32 -739455283, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1908598919, i32 -739455283
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__detail::_Node_iterator.68"*, align 8
  %29 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Node_iterator.68"* %0, %"struct.std::__detail::_Node_iterator.68"** %28, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %29, align 8
  %30 = load %"struct.std::__detail::_Node_iterator.68"*, %"struct.std::__detail::_Node_iterator.68"** %28, align 8
  %31 = bitcast %"struct.std::__detail::_Node_iterator.68"* %30 to %"struct.std::__detail::_Node_iterator_base.69"*
  %32 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %29, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosiELb1EEC2EPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Node_iterator_base.69"* %31, %"struct.std::__detail::_Hash_node.35"* %32) #3
  %33 = load i32, i32* @x.763
  %34 = load i32, i32* @y.764
  %35 = sub i32 %33, -1601751097
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1601751097
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -228516654, i32 -739455283
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::__detail::_Node_iterator.68"*, align 8
  %63 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Node_iterator.68"* %0, %"struct.std::__detail::_Node_iterator.68"** %62, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %63, align 8
  %64 = load %"struct.std::__detail::_Node_iterator.68"*, %"struct.std::__detail::_Node_iterator.68"** %62, align 8
  %65 = bitcast %"struct.std::__detail::_Node_iterator.68"* %64 to %"struct.std::__detail::_Node_iterator_base.69"*
  %66 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %63, align 8
  call void @_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosiELb1EEC2EPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Node_iterator_base.69"* %65, %"struct.std::__detail::_Hash_node.35"* %66) #3
  store i32 1908598919, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE(%"class.std::_Hashtable.19"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Hashtable.19"*
  %5 = alloca i64*
  %6 = alloca %"struct.std::__detail::_Hash_node.35"**
  %7 = alloca i64*
  %8 = alloca %"struct.std::__detail::_Hash_node.35"**
  %9 = alloca %"struct.std::__detail::_Hash_node_base"***
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.765
  %14 = load i32, i32* @y.766
  %15 = add i32 %13, 127394175
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 127394175
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 229903790, i32* %23
  br label %24

; <label>:24:                                     ; preds = %2, %320
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 229903790, label %27
    i32 1383397546, label %35
    i32 1685380183, label %85
    i32 1658891711, label %86
    i32 -1688531922, label %114
    i32 2053704610, label %132
    i32 737674056, label %135
    i32 1511485566, label %156
    i32 -404309783, label %185
    i32 924307990, label %194
    i32 -709494266, label %198
    i32 978619159, label %214
    i32 1636010748, label %263
    i32 -1822931310, label %264
    i32 61726633, label %268
    i32 1127644683, label %278
    i32 -123468692, label %293
    i32 -166808039, label %297
  ]

; <label>:26:                                     ; preds = %24
  br label %320

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1383397546, i32 1127644683
  store i32 %34, i32* %23
  br label %320

; <label>:35:                                     ; preds = %24
  %36 = alloca %"struct.std::integral_constant", align 1
  %37 = alloca %"class.std::_Hashtable.19"*, align 8
  %38 = alloca i64, align 8
  store i64* %38, i64** %10
  %39 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hash_node_base"*** %39, %"struct.std::__detail::_Hash_node_base"**** %9
  %40 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"** %40, %"struct.std::__detail::_Hash_node.35"*** %8
  %41 = alloca i64, align 8
  store i64* %41, i64** %7
  %42 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"** %42, %"struct.std::__detail::_Hash_node.35"*** %6
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %37, align 8
  %44 = load volatile i64*, i64** %10
  store i64 %1, i64* %44, align 8
  %45 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %37, align 8
  store %"class.std::_Hashtable.19"* %45, %"class.std::_Hashtable.19"** %4
  %46 = load volatile i64*, i64** %10
  %47 = load i64, i64* %46, align 8
  %48 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %49 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable.19"* %48, i64 %47)
  %50 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  store %"struct.std::__detail::_Hash_node_base"** %49, %"struct.std::__detail::_Hash_node_base"*** %50, align 8
  %51 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %52 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.19"* %51)
  %53 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  store %"struct.std::__detail::_Hash_node.35"* %52, %"struct.std::__detail::_Hash_node.35"** %53, align 8
  %54 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %55 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %54, i32 0, i32 2
  %56 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %55, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %56, align 8
  %57 = load volatile i64*, i64** %7
  store i64 0, i64* %57, align 8
  %58 = load i32, i32* @x.765
  %59 = load i32, i32* @y.766
  %60 = add i32 %58, -371033116
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -371033116
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 1685380183, i32 1127644683
  store i32 %84, i32* %23
  br label %320

; <label>:85:                                     ; preds = %24
  store i32 1658891711, i32* %23
  br label %320

; <label>:86:                                     ; preds = %24
  %87 = load i32, i32* @x.765
  %88 = load i32, i32* @y.766
  %89 = sub i32 %87, 266553008
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 266553008
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -1688531922, i32 -123468692
  store i32 %113, i32* %23
  br label %320

; <label>:114:                                    ; preds = %24
  %115 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %116 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %115, align 8
  %117 = icmp ne %"struct.std::__detail::_Hash_node.35"* %116, null
  store i1 %117, i1* %3
  %118 = load i32, i32* @x.765
  %119 = load i32, i32* @y.766
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 2053704610, i32 -123468692
  store i32 %131, i32* %23
  br label %320

; <label>:132:                                    ; preds = %24
  %133 = load volatile i1, i1* %3
  %134 = select i1 %133, i32 737674056, i32 61726633
  store i32 %134, i32* %23
  br label %320

; <label>:135:                                    ; preds = %24
  %136 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %137 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %136, align 8
  %138 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %137) #3
  %139 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %6
  store %"struct.std::__detail::_Hash_node.35"* %138, %"struct.std::__detail::_Hash_node.35"** %139, align 8
  %140 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %141 = bitcast %"class.std::_Hashtable.19"* %140 to %"struct.std::__detail::_Hash_code_base.21"*
  %142 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %143 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %142, align 8
  %144 = load volatile i64*, i64** %10
  %145 = load i64, i64* %144, align 8
  %146 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEPKNS_10_Hash_nodeIS4_Lb1EEEm(%"struct.std::__detail::_Hash_code_base.21"* %141, %"struct.std::__detail::_Hash_node.35"* %143, i64 %145) #3
  %147 = load volatile i64*, i64** %5
  store i64 %146, i64* %147, align 8
  %148 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %149 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %148, align 8
  %150 = load volatile i64*, i64** %5
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %149, i64 %151
  %153 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %152, align 8
  %154 = icmp ne %"struct.std::__detail::_Hash_node_base"* %153, null
  %155 = select i1 %154, i32 -709494266, i32 1511485566
  store i32 %155, i32* %23
  br label %320

; <label>:156:                                    ; preds = %24
  %157 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %158 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %157, i32 0, i32 2
  %159 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %158, i32 0, i32 0
  %160 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %159, align 8
  %161 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %162 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %161, align 8
  %163 = bitcast %"struct.std::__detail::_Hash_node.35"* %162 to %"struct.std::__detail::_Hash_node_base"*
  %164 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %163, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %160, %"struct.std::__detail::_Hash_node_base"** %164, align 8
  %165 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %166 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %165, align 8
  %167 = bitcast %"struct.std::__detail::_Hash_node.35"* %166 to %"struct.std::__detail::_Hash_node_base"*
  %168 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %169 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %168, i32 0, i32 2
  %170 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %169, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %167, %"struct.std::__detail::_Hash_node_base"** %170, align 8
  %171 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %172 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %171, i32 0, i32 2
  %173 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %174 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %173, align 8
  %175 = load volatile i64*, i64** %5
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %174, i64 %176
  store %"struct.std::__detail::_Hash_node_base"* %172, %"struct.std::__detail::_Hash_node_base"** %177, align 8
  %178 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %179 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %178, align 8
  %180 = bitcast %"struct.std::__detail::_Hash_node.35"* %179 to %"struct.std::__detail::_Hash_node_base"*
  %181 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %180, i32 0, i32 0
  %182 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %181, align 8
  %183 = icmp ne %"struct.std::__detail::_Hash_node_base"* %182, null
  %184 = select i1 %183, i32 -404309783, i32 924307990
  store i32 %184, i32* %23
  br label %320

; <label>:185:                                    ; preds = %24
  %186 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %187 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %186, align 8
  %188 = bitcast %"struct.std::__detail::_Hash_node.35"* %187 to %"struct.std::__detail::_Hash_node_base"*
  %189 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %190 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %189, align 8
  %191 = load volatile i64*, i64** %7
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %190, i64 %192
  store %"struct.std::__detail::_Hash_node_base"* %188, %"struct.std::__detail::_Hash_node_base"** %193, align 8
  store i32 924307990, i32* %23
  br label %320

; <label>:194:                                    ; preds = %24
  %195 = load volatile i64*, i64** %5
  %196 = load i64, i64* %195, align 8
  %197 = load volatile i64*, i64** %7
  store i64 %196, i64* %197, align 8
  store i32 -1822931310, i32* %23
  br label %320

; <label>:198:                                    ; preds = %24
  %199 = load i32, i32* @x.765
  %200 = load i32, i32* @y.766
  %201 = sub i32 %199, -1871436590
  %202 = sub i32 %201, 1
  %203 = add i32 %202, -1871436590
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = and i1 %207, %208
  %210 = xor i1 %207, %208
  %211 = or i1 %209, %210
  %212 = or i1 %207, %208
  %213 = select i1 %211, i32 978619159, i32 -166808039
  store i32 %213, i32* %23
  br label %320

; <label>:214:                                    ; preds = %24
  %215 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %216 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %215, align 8
  %217 = load volatile i64*, i64** %5
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %216, i64 %218
  %220 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %219, align 8
  %221 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %220, i32 0, i32 0
  %222 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %221, align 8
  %223 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %224 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %223, align 8
  %225 = bitcast %"struct.std::__detail::_Hash_node.35"* %224 to %"struct.std::__detail::_Hash_node_base"*
  %226 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %225, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %222, %"struct.std::__detail::_Hash_node_base"** %226, align 8
  %227 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %228 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %227, align 8
  %229 = bitcast %"struct.std::__detail::_Hash_node.35"* %228 to %"struct.std::__detail::_Hash_node_base"*
  %230 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %231 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %230, align 8
  %232 = load volatile i64*, i64** %5
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %231, i64 %233
  %235 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %234, align 8
  %236 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %235, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %229, %"struct.std::__detail::_Hash_node_base"** %236, align 8
  %237 = load i32, i32* @x.765
  %238 = load i32, i32* @y.766
  %239 = sub i32 0, 1
  %240 = add i32 %237, %239
  %241 = sub i32 %237, 1
  %242 = mul i32 %237, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %238, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  %262 = select i1 %260, i32 1636010748, i32 -166808039
  store i32 %262, i32* %23
  br label %320

; <label>:263:                                    ; preds = %24
  store i32 -1822931310, i32* %23
  br label %320

; <label>:264:                                    ; preds = %24
  %265 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %6
  %266 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %265, align 8
  %267 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  store %"struct.std::__detail::_Hash_node.35"* %266, %"struct.std::__detail::_Hash_node.35"** %267, align 8
  store i32 1658891711, i32* %23
  br label %320

; <label>:268:                                    ; preds = %24
  %269 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  call void @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv(%"class.std::_Hashtable.19"* %269)
  %270 = load volatile i64*, i64** %10
  %271 = load i64, i64* %270, align 8
  %272 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %273 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %272, i32 0, i32 1
  store i64 %271, i64* %273, align 8
  %274 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %275 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %274, align 8
  %276 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %4
  %277 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %276, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"** %275, %"struct.std::__detail::_Hash_node_base"*** %277, align 8
  ret void

; <label>:278:                                    ; preds = %24
  %279 = alloca %"struct.std::integral_constant", align 1
  %280 = alloca %"class.std::_Hashtable.19"*, align 8
  %281 = alloca i64, align 8
  %282 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %283 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %284 = alloca i64, align 8
  %285 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %286 = alloca i64, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %280, align 8
  store i64 %1, i64* %281, align 8
  %287 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %280, align 8
  %288 = load i64, i64* %281, align 8
  %289 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable.19"* %287, i64 %288)
  store %"struct.std::__detail::_Hash_node_base"** %289, %"struct.std::__detail::_Hash_node_base"*** %282, align 8
  %290 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.19"* %287)
  store %"struct.std::__detail::_Hash_node.35"* %290, %"struct.std::__detail::_Hash_node.35"** %283, align 8
  %291 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %287, i32 0, i32 2
  %292 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %291, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %292, align 8
  store i64 0, i64* %284, align 8
  store i32 1383397546, i32* %23
  br label %320

; <label>:293:                                    ; preds = %24
  %294 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %295 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %294, align 8
  %296 = icmp ne %"struct.std::__detail::_Hash_node.35"* %295, null
  store i32 -1688531922, i32* %23
  br label %320

; <label>:297:                                    ; preds = %24
  %298 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %299 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %298, align 8
  %300 = load volatile i64*, i64** %5
  %301 = load i64, i64* %300, align 8
  %302 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %299, i64 %301
  %303 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %302, align 8
  %304 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %303, i32 0, i32 0
  %305 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %304, align 8
  %306 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %307 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %306, align 8
  %308 = bitcast %"struct.std::__detail::_Hash_node.35"* %307 to %"struct.std::__detail::_Hash_node_base"*
  %309 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %308, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %305, %"struct.std::__detail::_Hash_node_base"** %309, align 8
  %310 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %8
  %311 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %310, align 8
  %312 = bitcast %"struct.std::__detail::_Hash_node.35"* %311 to %"struct.std::__detail::_Hash_node_base"*
  %313 = load volatile %"struct.std::__detail::_Hash_node_base"***, %"struct.std::__detail::_Hash_node_base"**** %9
  %314 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %313, align 8
  %315 = load volatile i64*, i64** %5
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %314, i64 %316
  %318 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %317, align 8
  %319 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %318, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node_base"* %312, %"struct.std::__detail::_Hash_node_base"** %319, align 8
  store i32 978619159, i32* %23
  br label %320

; <label>:320:                                    ; preds = %297, %293, %278, %264, %263, %214, %198, %194, %185, %156, %135, %132, %114, %86, %85, %35, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm(%"class.std::_Hashtable.19"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node_base"**
  %4 = alloca i64
  %5 = alloca %"class.std::_Hashtable.19"*
  %6 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %7 = alloca %"class.std::_Hashtable.19"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  store %"class.std::_Hashtable.19"* %9, %"class.std::_Hashtable.19"** %5
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %4
  %11 = alloca i32
  store i32 -779561920, i32* %11
  br label %12

; <label>:12:                                     ; preds = %2, %78
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -779561920, label %15
    i32 -1187673487, label %19
    i32 338431103, label %24
    i32 1275715126, label %29
    i32 -865291852, label %57
    i32 -1503668806, label %74
    i32 -1399684919, label %76
  ]

; <label>:14:                                     ; preds = %12
  br label %78

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp eq i64 %16, 1
  %18 = select i1 %17, i32 -1187673487, i32 338431103
  store i32 %18, i32* %11
  br label %78

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %21 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %20, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"* null, %"struct.std::__detail::_Hash_node_base"** %21, align 8
  %22 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %23 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %22, i32 0, i32 5
  store %"struct.std::__detail::_Hash_node_base"** %23, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  store i32 1275715126, i32* %11
  br label %78

; <label>:24:                                     ; preds = %12
  %25 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %5
  %26 = bitcast %"class.std::_Hashtable.19"* %25 to %"struct.std::__detail::_Hashtable_alloc.27"*
  %27 = load i64, i64* %8, align 8
  %28 = call %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc.27"* %26, i64 %27)
  store %"struct.std::__detail::_Hash_node_base"** %28, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  store i32 1275715126, i32* %11
  br label %78

; <label>:29:                                     ; preds = %12
  %30 = load i32, i32* @x.767
  %31 = load i32, i32* @y.768
  %32 = add i32 %30, -1876041040
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1876041040
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -865291852, i32 -1399684919
  store i32 %56, i32* %11
  br label %78

; <label>:57:                                     ; preds = %12
  %58 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  store %"struct.std::__detail::_Hash_node_base"** %58, %"struct.std::__detail::_Hash_node_base"*** %3
  %59 = load i32, i32* @x.767
  %60 = load i32, i32* @y.768
  %61 = add i32 %59, -1139292073
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -1139292073
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1503668806, i32 -1399684919
  store i32 %73, i32* %11
  br label %78

; <label>:74:                                     ; preds = %12
  %75 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %3
  ret %"struct.std::__detail::_Hash_node_base"** %75

; <label>:76:                                     ; preds = %12
  %77 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %6, align 8
  store i32 -865291852, i32* %11
  br label %78

; <label>:78:                                     ; preds = %76, %57, %29, %24, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node_base"** @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE19_M_allocate_bucketsEm(%"struct.std::__detail::_Hashtable_alloc.27"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.769
  %4 = load i32, i32* @y.770
  %5 = sub i32 %3, -1282404620
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1282404620
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %114

; <label>:29:                                     ; preds = %2, %114
  %30 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.45", align 1
  %33 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %34 = alloca i8*
  %35 = alloca i32
  %36 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %30, align 8
  store i64 %1, i64* %31, align 8
  %37 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %30, align 8
  %38 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %37)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosiELb1EEEEERKSaIT_E(%"class.std::allocator.45"* %32, %"class.std::allocator.29"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %31, align 8
  %40 = load i32, i32* @x.769
  %41 = load i32, i32* @y.770
  %42 = sub i32 %40, 118549843
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 118549843
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %114

; <label>:54:                                     ; preds = %29
  %55 = invoke %"struct.std::__detail::_Hash_node_base"** @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m(%"class.std::allocator.45"* dereferenceable(1) %32, i64 %39)
          to label %56 unwind label %64

; <label>:56:                                     ; preds = %54
  store %"struct.std::__detail::_Hash_node_base"** %55, %"struct.std::__detail::_Hash_node_base"*** %33, align 8
  %57 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %33, align 8
  %58 = call %"struct.std::__detail::_Hash_node_base"** @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_(%"struct.std::__detail::_Hash_node_base"** dereferenceable(8) %57) #3
  store %"struct.std::__detail::_Hash_node_base"** %58, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %59 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  %60 = bitcast %"struct.std::__detail::_Hash_node_base"** %59 to i8*
  %61 = load i64, i64* %31, align 8
  %62 = mul i64 %61, 8
  call void @llvm.memset.p0i8.i64(i8* %60, i8 0, i64 %62, i32 8, i1 false)
  %63 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %36, align 8
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  ret %"struct.std::__detail::_Hash_node_base"** %63

; <label>:64:                                     ; preds = %54
  %65 = load i32, i32* @x.769
  %66 = load i32, i32* @y.770
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %125

; <label>:90:                                     ; preds = %64, %125
  %91 = landingpad { i8*, i32 }
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %34, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %35, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  %94 = load i32, i32* @x.769
  %95 = load i32, i32* @y.770
  %96 = add i32 %94, 276895779
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 276895779
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %125

; <label>:108:                                    ; preds = %90
  br label %109

; <label>:109:                                    ; preds = %108
  %110 = load i8*, i8** %34, align 8
  %111 = load i32, i32* %35, align 4
  %112 = insertvalue { i8*, i32 } undef, i8* %110, 0
  %113 = insertvalue { i8*, i32 } %112, i32 %111, 1
  resume { i8*, i32 } %113

; <label>:114:                                    ; preds = %29, %2
  %115 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %116 = alloca i64, align 8
  %117 = alloca %"class.std::allocator.45", align 1
  %118 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  %119 = alloca i8*
  %120 = alloca i32
  %121 = alloca %"struct.std::__detail::_Hash_node_base"**, align 8
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %115, align 8
  store i64 %1, i64* %116, align 8
  %122 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %115, align 8
  %123 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %122)
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIK3PosiELb1EEEEERKSaIT_E(%"class.std::allocator.45"* %117, %"class.std::allocator.29"* dereferenceable(1) %123) #3
  %124 = load i64, i64* %116, align 8
  br label %29

; <label>:125:                                    ; preds = %90, %64
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %34, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %35, align 4
  call void @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev(%"class.std::allocator.45"* %32) #3
  br label %90
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseISt4pairIK3PosiELb1EEC2EPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Node_iterator_base.69"*, %"struct.std::__detail::_Hash_node.35"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Node_iterator_base.69"*, align 8
  %4 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Node_iterator_base.69"* %0, %"struct.std::__detail::_Node_iterator_base.69"** %3, align 8
  store %"struct.std::__detail::_Hash_node.35"* %1, %"struct.std::__detail::_Hash_node.35"** %4, align 8
  %5 = load %"struct.std::__detail::_Node_iterator_base.69"*, %"struct.std::__detail::_Node_iterator_base.69"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.69", %"struct.std::__detail::_Node_iterator_base.69"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %4, align 8
  store %"struct.std::__detail::_Hash_node.35"* %7, %"struct.std::__detail::_Hash_node.35"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeI3PosSaIS0_EE5emptyEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqI3PosRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqI3PosRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %class.Pos*, %class.Pos** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load %class.Pos*, %class.Pos** %9, align 8
  %11 = icmp eq %class.Pos* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNSt5dequeI3PosSaIS0_EE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %class.Pos*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.777
  %6 = load i32, i32* @y.778
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 719537772, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 719537772, label %18
    i32 -1206099070, label %26
    i32 1230957030, label %58
    i32 1671867769, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1206099070, i32 1671867769
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  %28 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  call void @_ZNSt5dequeI3PosSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %28, %"class.std::deque"* %29) #3
  %30 = call dereferenceable(16) %class.Pos* @_ZNKSt15_Deque_iteratorI3PosRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %28) #3
  store %class.Pos* %30, %class.Pos** %2
  %31 = load i32, i32* @x.777
  %32 = load i32, i32* @y.778
  %33 = add i32 %31, 1756197437
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1756197437
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1230957030, i32 1671867769
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %class.Pos*, %class.Pos** %2
  ret %class.Pos* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::deque"*, align 8
  %62 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %61, align 8
  %63 = load %"class.std::deque"*, %"class.std::deque"** %61, align 8
  call void @_ZNSt5dequeI3PosSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %62, %"class.std::deque"* %63) #3
  %64 = call dereferenceable(16) %class.Pos* @_ZNKSt15_Deque_iteratorI3PosRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %62) #3
  store i32 -1206099070, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Pos* @_ZNKSt15_Deque_iteratorI3PosRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load %class.Pos*, %class.Pos** %4, align 8
  ret %class.Pos* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load %class.Pos*, %class.Pos** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load %class.Pos*, %class.Pos** %12, align 8
  %14 = getelementptr inbounds %class.Pos, %class.Pos* %13, i64 -1
  %15 = icmp ne %class.Pos* %8, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %18 to %"class.std::allocator.32"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load %class.Pos*, %class.Pos** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaI3PosEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.32"* dereferenceable(1) %19, %class.Pos* %24)
          to label %25 unwind label %119

; <label>:25:                                     ; preds = %16
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 0
  %30 = load %class.Pos*, %class.Pos** %29, align 8
  %31 = getelementptr inbounds %class.Pos, %class.Pos* %30, i32 1
  store %class.Pos* %31, %class.Pos** %29, align 8
  br label %76

; <label>:32:                                     ; preds = %1
  invoke void @_ZNSt5dequeI3PosSaIS0_EE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %33 unwind label %119

; <label>:33:                                     ; preds = %32
  %34 = load i32, i32* @x.781
  %35 = load i32, i32* @y.782
  %36 = sub i32 %34, 124250660
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 124250660
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %175

; <label>:60:                                     ; preds = %33, %175
  %61 = load i32, i32* @x.781
  %62 = load i32, i32* @y.782
  %63 = add i32 %61, 1556615013
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1556615013
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %175

; <label>:75:                                     ; preds = %60
  br label %76

; <label>:76:                                     ; preds = %75, %25
  %77 = load i32, i32* @x.781
  %78 = load i32, i32* @y.782
  %79 = add i32 %77, -413440721
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, -413440721
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %176

; <label>:91:                                     ; preds = %76, %176
  %92 = load i32, i32* @x.781
  %93 = load i32, i32* @y.782
  %94 = sub i32 %92, 1348964396
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1348964396
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %176

; <label>:118:                                    ; preds = %91
  ret void

; <label>:119:                                    ; preds = %32, %16
  %120 = load i32, i32* @x.781
  %121 = load i32, i32* @y.782
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %177

; <label>:145:                                    ; preds = %119, %177
  %146 = landingpad { i8*, i32 }
          catch i8* null
  %147 = extractvalue { i8*, i32 } %146, 0
  call void @__clang_call_terminate(i8* %147) #9
  %148 = load i32, i32* @x.781
  %149 = load i32, i32* @y.782
  %150 = add i32 %148, 2118316284
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, 2118316284
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %177

; <label>:174:                                    ; preds = %145
  unreachable

; <label>:175:                                    ; preds = %60, %33
  br label %60

; <label>:176:                                    ; preds = %91, %76
  br label %91

; <label>:177:                                    ; preds = %145, %119
  %178 = landingpad { i8*, i32 }
          catch i8* null
  %179 = extractvalue { i8*, i32 } %178, 0
  call void @__clang_call_terminate(i8* %179) #9
  br label %145
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = call dereferenceable(1) %"class.std::allocator.32"* @_ZNSt11_Deque_baseI3PosSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  %6 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %7, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load %class.Pos*, %class.Pos** %9, align 8
  call void @_ZNSt16allocator_traitsISaI3PosEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.32"* dereferenceable(1) %5, %class.Pos* %10)
  %11 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %12 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %13 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %13, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 1
  %16 = load %class.Pos*, %class.Pos** %15, align 8
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %11, %class.Pos* %16) #3
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %18, i32 0, i32 2
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load %class.Pos**, %class.Pos*** %23, align 8
  %25 = getelementptr inbounds %class.Pos*, %class.Pos** %24, i64 1
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %19, %class.Pos** %25) #3
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 1
  %30 = load %class.Pos*, %class.Pos** %29, align 8
  %31 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  store %class.Pos* %30, %class.Pos** %34, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt8__detail9_Map_baseI3PosSt4pairIKS1_iESaIS4_ENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS3_(%"struct.std::__detail::_Map_base.22"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node.35"*
  %4 = alloca i32*, align 8
  %5 = alloca %"struct.std::__detail::_Map_base.22"*, align 8
  %6 = alloca %class.Pos*, align 8
  %7 = alloca %"class.std::_Hashtable.19"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %11 = alloca %"class.std::tuple", align 8
  %12 = alloca %"class.std::tuple.57", align 1
  %13 = alloca %"struct.std::__detail::_Node_iterator.68", align 8
  store %"struct.std::__detail::_Map_base.22"* %0, %"struct.std::__detail::_Map_base.22"** %5, align 8
  store %class.Pos* %1, %class.Pos** %6, align 8
  %14 = load %"struct.std::__detail::_Map_base.22"*, %"struct.std::__detail::_Map_base.22"** %5, align 8
  %15 = bitcast %"struct.std::__detail::_Map_base.22"* %14 to %"class.std::_Hashtable.19"*
  store %"class.std::_Hashtable.19"* %15, %"class.std::_Hashtable.19"** %7, align 8
  %16 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  %17 = bitcast %"class.std::_Hashtable.19"* %16 to %"struct.std::__detail::_Hash_code_base.21"*
  %18 = load %class.Pos*, %class.Pos** %6, align 8
  %19 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base.21"* %17, %class.Pos* dereferenceable(16) %18)
  store i64 %19, i64* %8, align 8
  %20 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  %21 = load %class.Pos*, %class.Pos** %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable.19"* %20, %class.Pos* dereferenceable(16) %21, i64 %22)
  store i64 %23, i64* %9, align 8
  %24 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  %25 = load i64, i64* %9, align 8
  %26 = load %class.Pos*, %class.Pos** %6, align 8
  %27 = load i64, i64* %8, align 8
  %28 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS2_m(%"class.std::_Hashtable.19"* %24, i64 %25, %class.Pos* dereferenceable(16) %26, i64 %27)
  store %"struct.std::__detail::_Hash_node.35"* %28, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %29 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  store %"struct.std::__detail::_Hash_node.35"* %29, %"struct.std::__detail::_Hash_node.35"** %3
  %30 = alloca i32
  store i32 -776712760, i32* %30
  br label %31

; <label>:31:                                     ; preds = %2, %117
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 -776712760, label %34
    i32 1058174123, label %38
    i32 -173130236, label %66
    i32 828745544, label %95
    i32 -1914664972, label %96
    i32 296697781, label %101
    i32 1904161899, label %103
  ]

; <label>:33:                                     ; preds = %31
  br label %117

; <label>:34:                                     ; preds = %31
  %35 = load volatile %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %3
  %36 = icmp ne %"struct.std::__detail::_Hash_node.35"* %35, null
  %37 = select i1 %36, i32 -1914664972, i32 1058174123
  store i32 %37, i32* %30
  br label %117

; <label>:38:                                     ; preds = %31
  %39 = load i32, i32* @x.785
  %40 = load i32, i32* @y.786
  %41 = add i32 %39, 2077369235
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 2077369235
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -173130236, i32 1904161899
  store i32 %65, i32* %30
  br label %117

; <label>:66:                                     ; preds = %31
  %67 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  %68 = bitcast %"class.std::_Hashtable.19"* %67 to %"struct.std::__detail::_Hashtable_alloc.27"*
  %69 = load %class.Pos*, %class.Pos** %6, align 8
  call void @_ZNSt5tupleIJRK3PosEEC2ES2_(%"class.std::tuple"* %11, %class.Pos* dereferenceable(16) %69)
  %70 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESD_IJEEEEEPS6_DpOT_(%"struct.std::__detail::_Hashtable_alloc.27"* %68, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %11, %"class.std::tuple.57"* dereferenceable(1) %12)
  store %"struct.std::__detail::_Hash_node.35"* %70, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %71 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  %72 = load i64, i64* %9, align 8
  %73 = load i64, i64* %8, align 8
  %74 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %75 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %71, i64 %72, i64 %73, %"struct.std::__detail::_Hash_node.35"* %74)
  %76 = getelementptr inbounds %"struct.std::__detail::_Node_iterator.68", %"struct.std::__detail::_Node_iterator.68"* %13, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.69", %"struct.std::__detail::_Node_iterator_base.69"* %76, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node.35"* %75, %"struct.std::__detail::_Hash_node.35"** %77, align 8
  %78 = call %"struct.std::pair.43"* @_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEptEv(%"struct.std::__detail::_Node_iterator.68"* %13) #3
  %79 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %78, i32 0, i32 1
  store i32* %79, i32** %4, align 8
  %80 = load i32, i32* @x.785
  %81 = load i32, i32* @y.786
  %82 = add i32 %80, 42814511
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 42814511
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 828745544, i32 1904161899
  store i32 %94, i32* %30
  br label %117

; <label>:95:                                     ; preds = %31
  store i32 296697781, i32* %30
  br label %117

; <label>:96:                                     ; preds = %31
  %97 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %98 = bitcast %"struct.std::__detail::_Hash_node.35"* %97 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %99 = call dereferenceable(24) %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE4_M_vEv(%"struct.std::__detail::_Hash_node_value_base.36"* %98) #3
  %100 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %99, i32 0, i32 1
  store i32* %100, i32** %4, align 8
  store i32 296697781, i32* %30
  br label %117

; <label>:101:                                    ; preds = %31
  %102 = load i32*, i32** %4, align 8
  ret i32* %102

; <label>:103:                                    ; preds = %31
  %104 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  %105 = bitcast %"class.std::_Hashtable.19"* %104 to %"struct.std::__detail::_Hashtable_alloc.27"*
  %106 = load %class.Pos*, %class.Pos** %6, align 8
  call void @_ZNSt5tupleIJRK3PosEEC2ES2_(%"class.std::tuple"* %11, %class.Pos* dereferenceable(16) %106)
  %107 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESD_IJEEEEEPS6_DpOT_(%"struct.std::__detail::_Hashtable_alloc.27"* %105, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %11, %"class.std::tuple.57"* dereferenceable(1) %12)
  store %"struct.std::__detail::_Hash_node.35"* %107, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %108 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %7, align 8
  %109 = load i64, i64* %9, align 8
  %110 = load i64, i64* %8, align 8
  %111 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %112 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %108, i64 %109, i64 %110, %"struct.std::__detail::_Hash_node.35"* %111)
  %113 = getelementptr inbounds %"struct.std::__detail::_Node_iterator.68", %"struct.std::__detail::_Node_iterator.68"* %13, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base.69", %"struct.std::__detail::_Node_iterator_base.69"* %113, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node.35"* %112, %"struct.std::__detail::_Hash_node.35"** %114, align 8
  %115 = call %"struct.std::pair.43"* @_ZNKSt8__detail14_Node_iteratorISt4pairIK3PosiELb0ELb1EEptEv(%"struct.std::__detail::_Node_iterator.68"* %13) #3
  %116 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %115, i32 0, i32 1
  store i32* %116, i32** %4, align 8
  store i32 -173130236, i32* %30
  br label %117

; <label>:117:                                    ; preds = %103, %96, %95, %66, %38, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESD_IJEEEEEPS6_DpOT_(%"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.std::__detail::_Hashtable_alloc.27"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.57"*, align 8
  %9 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %10 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %11 = alloca %"class.std::allocator.40", align 1
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::__detail::_Hashtable_alloc.27"* %0, %"struct.std::__detail::_Hashtable_alloc.27"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.57"* %3, %"class.std::tuple.57"** %8, align 8
  %14 = load %"struct.std::__detail::_Hashtable_alloc.27"*, %"struct.std::__detail::_Hashtable_alloc.27"** %5, align 8
  %15 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %14)
  %16 = call %"struct.std::__detail::_Hash_node.35"* @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE8allocateERS7_m(%"class.std::allocator.29"* dereferenceable(1) %15, i64 1)
  store %"struct.std::__detail::_Hash_node.35"* %16, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %17 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %18 = call %"struct.std::__detail::_Hash_node.35"* @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEPT_RS7_(%"struct.std::__detail::_Hash_node.35"* dereferenceable(40) %17) #3
  store %"struct.std::__detail::_Hash_node.35"* %18, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %19 = invoke dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %14)
          to label %20 unwind label %35

; <label>:20:                                     ; preds = %4
  call void @_ZNSaISt4pairIK3PosiEEC2INSt8__detail10_Hash_nodeIS2_Lb1EEEEERKSaIT_E(%"class.std::allocator.40"* %11, %"class.std::allocator.29"* dereferenceable(1) %19) #3
  %21 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %22 = bitcast %"struct.std::__detail::_Hash_node.35"* %21 to i8*
  %23 = bitcast i8* %22 to %"struct.std::__detail::_Hash_node.35"*
  call void @_ZNSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEC2Ev(%"struct.std::__detail::_Hash_node.35"* %23) #3
  %24 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  %25 = bitcast %"struct.std::__detail::_Hash_node.35"* %24 to %"struct.std::__detail::_Hash_node_value_base.36"*
  %26 = call %"struct.std::pair.43"* @_ZNSt8__detail21_Hash_node_value_baseISt4pairIK3PosiEE9_M_valptrEv(%"struct.std::__detail::_Hash_node_value_base.36"* %25) #3
  %27 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %28 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %27) #3
  %29 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %30 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::tuple"* dereferenceable(8) %29) #3
  %31 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %8, align 8
  %32 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %31) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESA_IJEEEEEvRS4_PT_DpOT0_(%"class.std::allocator.40"* dereferenceable(1) %11, %"struct.std::pair.43"* %26, %"struct.std::piecewise_construct_t"* dereferenceable(1) %28, %"class.std::tuple"* dereferenceable(8) %30, %"class.std::tuple.57"* dereferenceable(1) %32)
          to label %33 unwind label %92

; <label>:33:                                     ; preds = %20
  %34 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %10, align 8
  call void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"* %11) #3
  ret %"struct.std::__detail::_Hash_node.35"* %34

; <label>:35:                                     ; preds = %4
  %36 = load i32, i32* @x.787
  %37 = load i32, i32* @y.788
  %38 = add i32 %36, 1875605074
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1875605074
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %254

; <label>:62:                                     ; preds = %35, %254
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %12, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %13, align 4
  %66 = load i32, i32* @x.787
  %67 = load i32, i32* @y.788
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %254

; <label>:91:                                     ; preds = %62
  br label %137

; <label>:92:                                     ; preds = %20
  %93 = load i32, i32* @x.787
  %94 = load i32, i32* @y.788
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %258

; <label>:118:                                    ; preds = %92, %258
  %119 = landingpad { i8*, i32 }
          catch i8* null
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %12, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %13, align 4
  call void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"* %11) #3
  %122 = load i32, i32* @x.787
  %123 = load i32, i32* @y.788
  %124 = add i32 %122, -894470973
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, -894470973
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %258

; <label>:136:                                    ; preds = %118
  br label %137

; <label>:137:                                    ; preds = %136, %91
  %138 = load i8*, i8** %12, align 8
  %139 = call i8* @__cxa_begin_catch(i8* %138) #3
  %140 = invoke dereferenceable(1) %"class.std::allocator.29"* @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIK3PosiELb1EEEEE17_M_node_allocatorEv(%"struct.std::__detail::_Hashtable_alloc.27"* %14)
          to label %141 unwind label %186

; <label>:141:                                    ; preds = %137
  %142 = load i32, i32* @x.787
  %143 = load i32, i32* @y.788
  %144 = sub i32 %142, 3868962
  %145 = sub i32 %144, 1
  %146 = add i32 %145, 3868962
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  br i1 %166, label %168, label %262

; <label>:168:                                    ; preds = %141, %262
  %169 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  %170 = load i32, i32* @x.787
  %171 = load i32, i32* @y.788
  %172 = add i32 %170, -301829763
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, -301829763
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %262

; <label>:184:                                    ; preds = %168
  invoke void @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EEEEE10deallocateERS7_PS6_m(%"class.std::allocator.29"* dereferenceable(1) %140, %"struct.std::__detail::_Hash_node.35"* %169, i64 1)
          to label %185 unwind label %186

; <label>:185:                                    ; preds = %184
  invoke void @__cxa_rethrow() #12
          to label %253 unwind label %186

; <label>:186:                                    ; preds = %185, %184, %137
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %12, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %190 unwind label %250

; <label>:190:                                    ; preds = %186
  br label %245
                                                  ; No predecessors!
  %192 = load i32, i32* @x.787
  %193 = load i32, i32* @y.788
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 true, true
  %204 = and i1 %201, true
  %205 = and i1 %199, %203
  %206 = and i1 %202, true
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 true, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  br i1 %215, label %217, label %264

; <label>:217:                                    ; preds = %191, %264
  call void @llvm.trap()
  %218 = load i32, i32* @x.787
  %219 = load i32, i32* @y.788
  %220 = add i32 %218, 1980270642
  %221 = sub i32 %220, 1
  %222 = sub i32 %221, 1980270642
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 true, true
  %231 = and i1 %228, true
  %232 = and i1 %226, %230
  %233 = and i1 %229, true
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 true, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  br i1 %242, label %244, label %264

; <label>:244:                                    ; preds = %217
  unreachable

; <label>:245:                                    ; preds = %190
  %246 = load i8*, i8** %12, align 8
  %247 = load i32, i32* %13, align 4
  %248 = insertvalue { i8*, i32 } undef, i8* %246, 0
  %249 = insertvalue { i8*, i32 } %248, i32 %247, 1
  resume { i8*, i32 } %249

; <label>:250:                                    ; preds = %186
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  call void @__clang_call_terminate(i8* %252) #9
  unreachable

; <label>:253:                                    ; preds = %185
  unreachable

; <label>:254:                                    ; preds = %62, %35
  %255 = landingpad { i8*, i32 }
          catch i8* null
  %256 = extractvalue { i8*, i32 } %255, 0
  store i8* %256, i8** %12, align 8
  %257 = extractvalue { i8*, i32 } %255, 1
  store i32 %257, i32* %13, align 4
  br label %62

; <label>:258:                                    ; preds = %118, %92
  %259 = landingpad { i8*, i32 }
          catch i8* null
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %12, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %13, align 4
  call void @_ZNSaISt4pairIK3PosiEED2Ev(%"class.std::allocator.40"* %11) #3
  br label %118

; <label>:262:                                    ; preds = %168, %141
  %263 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %9, align 8
  br label %168

; <label>:264:                                    ; preds = %217, %191
  call void @llvm.trap()
  br label %217
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIK3PosiEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESA_IJEEEEEvRS4_PT_DpOT0_(%"class.std::allocator.40"* dereferenceable(1), %"struct.std::pair.43"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.40"*, align 8
  %7 = alloca %"struct.std::pair.43"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.57"*, align 8
  store %"class.std::allocator.40"* %0, %"class.std::allocator.40"** %6, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.57"* %4, %"class.std::tuple.57"** %10, align 8
  %11 = load %"class.std::allocator.40"*, %"class.std::allocator.40"** %6, align 8
  %12 = bitcast %"class.std::allocator.40"* %11 to %"class.__gnu_cxx::new_allocator.41"*
  %13 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::tuple"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESA_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.41"* %12, %"struct.std::pair.43"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple"* dereferenceable(8) %17, %"class.std::tuple.57"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIK3PosiEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESA_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.41"*, %"struct.std::pair.43"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.41"*, align 8
  %7 = alloca %"struct.std::pair.43"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.57"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple", align 8
  %13 = alloca %"class.std::tuple.57", align 1
  store %"class.__gnu_cxx::new_allocator.41"* %0, %"class.__gnu_cxx::new_allocator.41"** %6, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.57"* %4, %"class.std::tuple.57"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.41"*, %"class.__gnu_cxx::new_allocator.41"** %6, align 8
  %15 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %7, align 8
  %16 = bitcast %"struct.std::pair.43"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.43"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRK3PosEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::tuple"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRK3PosEEC2EOS3_(%"class.std::tuple"* %12, %"class.std::tuple"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.57"*, %"class.std::tuple.57"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.57"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.57"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %25, i32 0, i32 0
  %27 = load %class.Pos*, %class.Pos** %26, align 8
  call void @_ZNSt4pairIK3PosiEC2IJRS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE(%"struct.std::pair.43"* %17, %class.Pos* %27)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIK3PosiEC2IJRS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE(%"struct.std::pair.43"*, %class.Pos*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple", align 8
  %5 = alloca %"class.std::tuple.57", align 1
  %6 = alloca %"struct.std::pair.43"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.60", align 1
  %9 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %10, i32 0, i32 0
  store %class.Pos* %1, %class.Pos** %11, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %6, align 8
  %12 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %6, align 8
  call void @_ZNSt4pairIK3PosiEC2IJRS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE(%"struct.std::pair.43"* %12, %"class.std::tuple"* dereferenceable(8) %4, %"class.std::tuple.57"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIK3PosiEC2IJRS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE(%"struct.std::pair.43"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.57"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.60", align 1
  %6 = alloca %"struct.std::pair.43"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.57"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.57"* %2, %"class.std::tuple.57"** %8, align 8
  %9 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %12 = call dereferenceable(16) %class.Pos* @_ZSt3getILm0EJRK3PosEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_(%"class.std::tuple"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %12) #3
  %14 = bitcast %class.Pos* %10 to i8*
  %15 = bitcast %class.Pos* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false)
  %16 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %9, i32 0, i32 1
  store i32 0, i32* %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE5beginEv(%"class.std::_Hashtable.4"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %3 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %3, align 8
  %4 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %3, align 8
  %5 = invoke %"struct.std::__detail::_Hash_node"* @_ZNKSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE8_M_beginEv(%"class.std::_Hashtable.4"* %4)
          to label %6 unwind label %40

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.797
  %8 = load i32, i32* @y.798
  %9 = sub i32 %7, -1295213590
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1295213590
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %97

; <label>:21:                                     ; preds = %6, %97
  call void @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator"* %2, %"struct.std::__detail::_Hash_node"* %5) #3
  %22 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %22, i32 0, i32 0
  %24 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %23, align 8
  %25 = load i32, i32* @x.797
  %26 = load i32, i32* @y.798
  %27 = sub i32 %25, -615092953
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -615092953
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %97

; <label>:39:                                     ; preds = %21
  ret %"struct.std::__detail::_Hash_node"* %24

; <label>:40:                                     ; preds = %1
  %41 = load i32, i32* @x.797
  %42 = load i32, i32* @y.798
  %43 = sub i32 %41, -1986486634
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1986486634
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %101

; <label>:67:                                     ; preds = %40, %101
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  call void @__clang_call_terminate(i8* %69) #9
  %70 = load i32, i32* @x.797
  %71 = load i32, i32* @y.798
  %72 = sub i32 %70, -823840611
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -823840611
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %101

; <label>:96:                                     ; preds = %67
  unreachable

; <label>:97:                                     ; preds = %21, %6
  call void @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator"* %2, %"struct.std::__detail::_Hash_node"* %5) #3
  %98 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %2, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %98, i32 0, i32 0
  %100 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %99, align 8
  br label %21

; <label>:101:                                    ; preds = %67, %40
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  call void @__clang_call_terminate(i8* %103) #9
  br label %67
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node"* @_ZNSt10_HashtableI3PosS0_SaIS0_ENSt8__detail9_IdentityESt8equal_toIS0_ESt4hashIS0_ENS2_18_Mod_range_hashingENS2_20_Default_ranged_hashENS2_20_Prime_rehash_policyENS2_17_Hashtable_traitsILb1ELb1ELb1EEEE3endEv(%"class.std::_Hashtable.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_Hash_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.799
  %6 = load i32, i32* @y.800
  %7 = add i32 %5, 775926457
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 775926457
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2043854001, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2043854001, label %19
    i32 820968505, label %39
    i32 -402865042, label %73
    i32 306687653, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 820968505, i32 306687653
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %41 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %41, align 8
  %42 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %41, align 8
  call void @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator"* %40, %"struct.std::__detail::_Hash_node"* null) #3
  %43 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %40, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %43, i32 0, i32 0
  %45 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %44, align 8
  store %"struct.std::__detail::_Hash_node"* %45, %"struct.std::__detail::_Hash_node"** %2
  %46 = load i32, i32* @x.799
  %47 = load i32, i32* @y.800
  %48 = add i32 %46, 1980605293
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1980605293
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -402865042, i32 306687653
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %2
  ret %"struct.std::__detail::_Hash_node"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::__detail::_Node_iterator", align 8
  %77 = alloca %"class.std::_Hashtable.4"*, align 8
  store %"class.std::_Hashtable.4"* %0, %"class.std::_Hashtable.4"** %77, align 8
  %78 = load %"class.std::_Hashtable.4"*, %"class.std::_Hashtable.4"** %77, align 8
  call void @_ZNSt8__detail14_Node_iteratorI3PosLb1ELb1EEC2EPNS_10_Hash_nodeIS1_Lb1EEE(%"struct.std::__detail::_Node_iterator"* %76, %"struct.std::__detail::_Hash_node"* null) #3
  %79 = getelementptr inbounds %"struct.std::__detail::_Node_iterator", %"struct.std::__detail::_Node_iterator"* %76, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %79, i32 0, i32 0
  %81 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %80, align 8
  store i32 820968505, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail19_Node_iterator_baseI3PosLb1EE7_M_incrEv(%"struct.std::__detail::_Node_iterator_base"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.801
  %5 = load i32, i32* @y.802
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1175380894, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %67
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1175380894, label %17
    i32 2078311625, label %37
    i32 1445896859, label %59
    i32 -1152516581, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %67

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 2078311625, i32 -1152516581
  store i32 %36, i32* %13
  br label %67

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %38, align 8
  %39 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %39, i32 0, i32 0
  %41 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %40, align 8
  %42 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %41) #3
  %43 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %39, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %42, %"struct.std::__detail::_Hash_node"** %43, align 8
  %44 = load i32, i32* @x.801
  %45 = load i32, i32* @y.802
  %46 = sub i32 %44, -2092920229
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -2092920229
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1445896859, i32 -1152516581
  store i32 %58, i32* %13
  br label %67

; <label>:59:                                     ; preds = %14
  ret void

; <label>:60:                                     ; preds = %14
  %61 = alloca %"struct.std::__detail::_Node_iterator_base"*, align 8
  store %"struct.std::__detail::_Node_iterator_base"* %0, %"struct.std::__detail::_Node_iterator_base"** %61, align 8
  %62 = load %"struct.std::__detail::_Node_iterator_base"*, %"struct.std::__detail::_Node_iterator_base"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %62, i32 0, i32 0
  %64 = load %"struct.std::__detail::_Hash_node"*, %"struct.std::__detail::_Hash_node"** %63, align 8
  %65 = call %"struct.std::__detail::_Hash_node"* @_ZNKSt8__detail10_Hash_nodeI3PosLb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node"* %64) #3
  %66 = getelementptr inbounds %"struct.std::__detail::_Node_iterator_base", %"struct.std::__detail::_Node_iterator_base"* %62, i32 0, i32 0
  store %"struct.std::__detail::_Hash_node"* %65, %"struct.std::__detail::_Hash_node"** %66, align 8
  store i32 2078311625, i32* %13
  br label %67

; <label>:67:                                     ; preds = %60, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE5countERS2_(%"class.std::_Hashtable.19"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"class.std::_Hashtable.19"*
  %9 = alloca i64*
  %10 = alloca %"struct.std::__detail::_Hash_node.35"**
  %11 = alloca i64*
  %12 = alloca i64*
  %13 = alloca %class.Pos**
  %14 = alloca i64*
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.803
  %18 = load i32, i32* @y.804
  %19 = sub i32 %17, -159168139
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -159168139
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %16
  %26 = icmp slt i32 %18, 10
  store i1 %26, i1* %15
  %27 = alloca i32
  store i32 1543392208, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %569
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 1543392208, label %31
    i32 1977916134, label %51
    i32 -775243928, label %108
    i32 -1444449749, label %111
    i32 1494128662, label %113
    i32 2066969625, label %141
    i32 -1428492257, label %158
    i32 438555542, label %159
    i32 -826890167, label %186
    i32 -497553873, label %222
    i32 -1656954898, label %225
    i32 1629126562, label %253
    i32 -1923574678, label %289
    i32 77333809, label %290
    i32 1063669279, label %305
    i32 -1601197346, label %324
    i32 -542397379, label %327
    i32 1857305700, label %354
    i32 -200363779, label %382
    i32 578469553, label %383
    i32 1620915047, label %384
    i32 1264611907, label %399
    i32 -1490250429, label %420
    i32 290453157, label %423
    i32 828298862, label %451
    i32 -1362229129, label %475
    i32 -866441071, label %478
    i32 632034530, label %479
    i32 761365236, label %480
    i32 -352677931, label %485
    i32 228647717, label %489
    i32 270067318, label %492
    i32 1343958822, label %511
    i32 -1673363354, label %513
    i32 969702094, label %523
    i32 -1398584226, label %548
    i32 474900199, label %552
    i32 1057098984, label %553
    i32 -1568433322, label %560
  ]

; <label>:30:                                     ; preds = %28
  br label %569

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %16
  %33 = load volatile i1, i1* %15
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 1977916134, i32 270067318
  store i32 %50, i32* %27
  br label %569

; <label>:51:                                     ; preds = %28
  %52 = alloca i64, align 8
  store i64* %52, i64** %14
  %53 = alloca %"class.std::_Hashtable.19"*, align 8
  %54 = alloca %class.Pos*, align 8
  store %class.Pos** %54, %class.Pos*** %13
  %55 = alloca i64, align 8
  store i64* %55, i64** %12
  %56 = alloca i64, align 8
  store i64* %56, i64** %11
  %57 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  store %"struct.std::__detail::_Hash_node.35"** %57, %"struct.std::__detail::_Hash_node.35"*** %10
  %58 = alloca i64, align 8
  store i64* %58, i64** %9
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %53, align 8
  %59 = load volatile %class.Pos**, %class.Pos*** %13
  store %class.Pos* %1, %class.Pos** %59, align 8
  %60 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %53, align 8
  store %"class.std::_Hashtable.19"* %60, %"class.std::_Hashtable.19"** %8
  %61 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8
  %62 = bitcast %"class.std::_Hashtable.19"* %61 to %"struct.std::__detail::_Hash_code_base.21"*
  %63 = load volatile %class.Pos**, %class.Pos*** %13
  %64 = load %class.Pos*, %class.Pos** %63, align 8
  %65 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base.21"* %62, %class.Pos* dereferenceable(16) %64)
  %66 = load volatile i64*, i64** %12
  store i64 %65, i64* %66, align 8
  %67 = load volatile %class.Pos**, %class.Pos*** %13
  %68 = load %class.Pos*, %class.Pos** %67, align 8
  %69 = load volatile i64*, i64** %12
  %70 = load i64, i64* %69, align 8
  %71 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8
  %72 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable.19"* %71, %class.Pos* dereferenceable(16) %68, i64 %70)
  %73 = load volatile i64*, i64** %11
  store i64 %72, i64* %73, align 8
  %74 = load volatile i64*, i64** %11
  %75 = load i64, i64* %74, align 8
  %76 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8
  %77 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_beginEm(%"class.std::_Hashtable.19"* %76, i64 %75)
  %78 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  store %"struct.std::__detail::_Hash_node.35"* %77, %"struct.std::__detail::_Hash_node.35"** %78, align 8
  %79 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %80 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %79, align 8
  %81 = icmp ne %"struct.std::__detail::_Hash_node.35"* %80, null
  store i1 %81, i1* %7
  %82 = load i32, i32* @x.803
  %83 = load i32, i32* @y.804
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -775243928, i32 270067318
  store i32 %107, i32* %27
  br label %569

; <label>:108:                                    ; preds = %28
  %109 = load volatile i1, i1* %7
  %110 = select i1 %109, i32 1494128662, i32 -1444449749
  store i32 %110, i32* %27
  br label %569

; <label>:111:                                    ; preds = %28
  %112 = load volatile i64*, i64** %14
  store i64 0, i64* %112, align 8
  store i32 228647717, i32* %27
  br label %569

; <label>:113:                                    ; preds = %28
  %114 = load i32, i32* @x.803
  %115 = load i32, i32* @y.804
  %116 = sub i32 %114, -1384212980
  %117 = sub i32 %116, 1
  %118 = add i32 %117, -1384212980
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 2066969625, i32 1343958822
  store i32 %140, i32* %27
  br label %569

; <label>:141:                                    ; preds = %28
  %142 = load volatile i64*, i64** %9
  store i64 0, i64* %142, align 8
  %143 = load i32, i32* @x.803
  %144 = load i32, i32* @y.804
  %145 = add i32 %143, -1391668499
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, -1391668499
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 -1428492257, i32 1343958822
  store i32 %157, i32* %27
  br label %569

; <label>:158:                                    ; preds = %28
  store i32 438555542, i32* %27
  br label %569

; <label>:159:                                    ; preds = %28
  %160 = load i32, i32* @x.803
  %161 = load i32, i32* @y.804
  %162 = sub i32 0, 1
  %163 = add i32 %160, %162
  %164 = sub i32 %160, 1
  %165 = mul i32 %160, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %161, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 -826890167, i32 -1673363354
  store i32 %185, i32* %27
  br label %569

; <label>:186:                                    ; preds = %28
  %187 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8
  %188 = bitcast %"class.std::_Hashtable.19"* %187 to %"struct.std::__detail::_Hashtable_base.20"*
  %189 = load volatile %class.Pos**, %class.Pos*** %13
  %190 = load %class.Pos*, %class.Pos** %189, align 8
  %191 = load volatile i64*, i64** %12
  %192 = load i64, i64* %191, align 8
  %193 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %194 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %193, align 8
  %195 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Hashtable_base.20"* %188, %class.Pos* dereferenceable(16) %190, i64 %192, %"struct.std::__detail::_Hash_node.35"* %194)
  store i1 %195, i1* %6
  %196 = load i32, i32* @x.803
  %197 = load i32, i32* @y.804
  %198 = sub i32 0, 1
  %199 = add i32 %196, %198
  %200 = sub i32 %196, 1
  %201 = mul i32 %196, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %197, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  %221 = select i1 %219, i32 -497553873, i32 -1673363354
  store i32 %221, i32* %27
  br label %569

; <label>:222:                                    ; preds = %28
  %223 = load volatile i1, i1* %6
  %224 = select i1 %223, i32 -1656954898, i32 77333809
  store i32 %224, i32* %27
  br label %569

; <label>:225:                                    ; preds = %28
  %226 = load i32, i32* @x.803
  %227 = load i32, i32* @y.804
  %228 = add i32 %226, -907372108
  %229 = sub i32 %228, 1
  %230 = sub i32 %229, -907372108
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 true, true
  %239 = and i1 %236, true
  %240 = and i1 %234, %238
  %241 = and i1 %237, true
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 true, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  %252 = select i1 %250, i32 1629126562, i32 969702094
  store i32 %252, i32* %27
  br label %569

; <label>:253:                                    ; preds = %28
  %254 = load volatile i64*, i64** %9
  %255 = load i64, i64* %254, align 8
  %256 = sub i64 0, %255
  %257 = sub i64 0, 1
  %258 = add i64 %256, %257
  %259 = sub i64 0, %258
  %260 = add i64 %255, 1
  %261 = load volatile i64*, i64** %9
  store i64 %259, i64* %261, align 8
  %262 = load i32, i32* @x.803
  %263 = load i32, i32* @y.804
  %264 = sub i32 %262, 1007508447
  %265 = sub i32 %264, 1
  %266 = add i32 %265, 1007508447
  %267 = sub i32 %262, 1
  %268 = mul i32 %262, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %263, 10
  %272 = xor i1 %270, true
  %273 = xor i1 %271, true
  %274 = xor i1 false, true
  %275 = and i1 %272, false
  %276 = and i1 %270, %274
  %277 = and i1 %273, false
  %278 = and i1 %271, %274
  %279 = or i1 %275, %276
  %280 = or i1 %277, %278
  %281 = xor i1 %279, %280
  %282 = or i1 %272, %273
  %283 = xor i1 %282, true
  %284 = or i1 false, %274
  %285 = and i1 %283, %284
  %286 = or i1 %281, %285
  %287 = or i1 %270, %271
  %288 = select i1 %286, i32 -1923574678, i32 969702094
  store i32 %288, i32* %27
  br label %569

; <label>:289:                                    ; preds = %28
  store i32 1620915047, i32* %27
  br label %569

; <label>:290:                                    ; preds = %28
  %291 = load i32, i32* @x.803
  %292 = load i32, i32* @y.804
  %293 = sub i32 0, 1
  %294 = add i32 %291, %293
  %295 = sub i32 %291, 1
  %296 = mul i32 %291, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %292, 10
  %300 = and i1 %298, %299
  %301 = xor i1 %298, %299
  %302 = or i1 %300, %301
  %303 = or i1 %298, %299
  %304 = select i1 %302, i32 1063669279, i32 -1398584226
  store i32 %304, i32* %27
  br label %569

; <label>:305:                                    ; preds = %28
  %306 = load volatile i64*, i64** %9
  %307 = load i64, i64* %306, align 8
  %308 = icmp ne i64 %307, 0
  store i1 %308, i1* %5
  %309 = load i32, i32* @x.803
  %310 = load i32, i32* @y.804
  %311 = sub i32 %309, -860211740
  %312 = sub i32 %311, 1
  %313 = add i32 %312, -860211740
  %314 = sub i32 %309, 1
  %315 = mul i32 %309, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %310, 10
  %319 = and i1 %317, %318
  %320 = xor i1 %317, %318
  %321 = or i1 %319, %320
  %322 = or i1 %317, %318
  %323 = select i1 %321, i32 -1601197346, i32 -1398584226
  store i32 %323, i32* %27
  br label %569

; <label>:324:                                    ; preds = %28
  %325 = load volatile i1, i1* %5
  %326 = select i1 %325, i32 -542397379, i32 578469553
  store i32 %326, i32* %27
  br label %569

; <label>:327:                                    ; preds = %28
  %328 = load i32, i32* @x.803
  %329 = load i32, i32* @y.804
  %330 = sub i32 0, 1
  %331 = add i32 %328, %330
  %332 = sub i32 %328, 1
  %333 = mul i32 %328, %331
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %329, 10
  %337 = xor i1 %335, true
  %338 = xor i1 %336, true
  %339 = xor i1 false, true
  %340 = and i1 %337, false
  %341 = and i1 %335, %339
  %342 = and i1 %338, false
  %343 = and i1 %336, %339
  %344 = or i1 %340, %341
  %345 = or i1 %342, %343
  %346 = xor i1 %344, %345
  %347 = or i1 %337, %338
  %348 = xor i1 %347, true
  %349 = or i1 false, %339
  %350 = and i1 %348, %349
  %351 = or i1 %346, %350
  %352 = or i1 %335, %336
  %353 = select i1 %351, i32 1857305700, i32 474900199
  store i32 %353, i32* %27
  br label %569

; <label>:354:                                    ; preds = %28
  %355 = load i32, i32* @x.803
  %356 = load i32, i32* @y.804
  %357 = add i32 %355, 1482070720
  %358 = sub i32 %357, 1
  %359 = sub i32 %358, 1482070720
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = xor i1 %363, true
  %366 = xor i1 %364, true
  %367 = xor i1 true, true
  %368 = and i1 %365, true
  %369 = and i1 %363, %367
  %370 = and i1 %366, true
  %371 = and i1 %364, %367
  %372 = or i1 %368, %369
  %373 = or i1 %370, %371
  %374 = xor i1 %372, %373
  %375 = or i1 %365, %366
  %376 = xor i1 %375, true
  %377 = or i1 true, %367
  %378 = and i1 %376, %377
  %379 = or i1 %374, %378
  %380 = or i1 %363, %364
  %381 = select i1 %379, i32 -200363779, i32 474900199
  store i32 %381, i32* %27
  br label %569

; <label>:382:                                    ; preds = %28
  store i32 -352677931, i32* %27
  br label %569

; <label>:383:                                    ; preds = %28
  store i32 1620915047, i32* %27
  br label %569

; <label>:384:                                    ; preds = %28
  %385 = load i32, i32* @x.803
  %386 = load i32, i32* @y.804
  %387 = sub i32 0, 1
  %388 = add i32 %385, %387
  %389 = sub i32 %385, 1
  %390 = mul i32 %385, %388
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %386, 10
  %394 = and i1 %392, %393
  %395 = xor i1 %392, %393
  %396 = or i1 %394, %395
  %397 = or i1 %392, %393
  %398 = select i1 %396, i32 1264611907, i32 1057098984
  store i32 %398, i32* %27
  br label %569

; <label>:399:                                    ; preds = %28
  %400 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %401 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %400, align 8
  %402 = bitcast %"struct.std::__detail::_Hash_node.35"* %401 to %"struct.std::__detail::_Hash_node_base"*
  %403 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %402, i32 0, i32 0
  %404 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %403, align 8
  %405 = icmp ne %"struct.std::__detail::_Hash_node_base"* %404, null
  store i1 %405, i1* %4
  %406 = load i32, i32* @x.803
  %407 = load i32, i32* @y.804
  %408 = sub i32 0, 1
  %409 = add i32 %406, %408
  %410 = sub i32 %406, 1
  %411 = mul i32 %406, %409
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %407, 10
  %415 = and i1 %413, %414
  %416 = xor i1 %413, %414
  %417 = or i1 %415, %416
  %418 = or i1 %413, %414
  %419 = select i1 %417, i32 -1490250429, i32 1057098984
  store i32 %419, i32* %27
  br label %569

; <label>:420:                                    ; preds = %28
  %421 = load volatile i1, i1* %4
  %422 = select i1 %421, i32 290453157, i32 -866441071
  store i32 %422, i32* %27
  br label %569

; <label>:423:                                    ; preds = %28
  %424 = load i32, i32* @x.803
  %425 = load i32, i32* @y.804
  %426 = sub i32 %424, -1339790867
  %427 = sub i32 %426, 1
  %428 = add i32 %427, -1339790867
  %429 = sub i32 %424, 1
  %430 = mul i32 %424, %428
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %425, 10
  %434 = xor i1 %432, true
  %435 = xor i1 %433, true
  %436 = xor i1 true, true
  %437 = and i1 %434, true
  %438 = and i1 %432, %436
  %439 = and i1 %435, true
  %440 = and i1 %433, %436
  %441 = or i1 %437, %438
  %442 = or i1 %439, %440
  %443 = xor i1 %441, %442
  %444 = or i1 %434, %435
  %445 = xor i1 %444, true
  %446 = or i1 true, %436
  %447 = and i1 %445, %446
  %448 = or i1 %443, %447
  %449 = or i1 %432, %433
  %450 = select i1 %448, i32 828298862, i32 -1568433322
  store i32 %450, i32* %27
  br label %569

; <label>:451:                                    ; preds = %28
  %452 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %453 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %452, align 8
  %454 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %453) #3
  %455 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8
  %456 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %455, %"struct.std::__detail::_Hash_node.35"* %454) #3
  %457 = load volatile i64*, i64** %11
  %458 = load i64, i64* %457, align 8
  %459 = icmp ne i64 %456, %458
  store i1 %459, i1* %3
  %460 = load i32, i32* @x.803
  %461 = load i32, i32* @y.804
  %462 = sub i32 %460, -355153316
  %463 = sub i32 %462, 1
  %464 = add i32 %463, -355153316
  %465 = sub i32 %460, 1
  %466 = mul i32 %460, %464
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %461, 10
  %470 = and i1 %468, %469
  %471 = xor i1 %468, %469
  %472 = or i1 %470, %471
  %473 = or i1 %468, %469
  %474 = select i1 %472, i32 -1362229129, i32 -1568433322
  store i32 %474, i32* %27
  br label %569

; <label>:475:                                    ; preds = %28
  %476 = load volatile i1, i1* %3
  %477 = select i1 %476, i32 -866441071, i32 632034530
  store i32 %477, i32* %27
  br label %569

; <label>:478:                                    ; preds = %28
  store i32 -352677931, i32* %27
  br label %569

; <label>:479:                                    ; preds = %28
  store i32 761365236, i32* %27
  br label %569

; <label>:480:                                    ; preds = %28
  %481 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %482 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %481, align 8
  %483 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %482) #3
  %484 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  store %"struct.std::__detail::_Hash_node.35"* %483, %"struct.std::__detail::_Hash_node.35"** %484, align 8
  store i32 438555542, i32* %27
  br label %569

; <label>:485:                                    ; preds = %28
  %486 = load volatile i64*, i64** %9
  %487 = load i64, i64* %486, align 8
  %488 = load volatile i64*, i64** %14
  store i64 %487, i64* %488, align 8
  store i32 228647717, i32* %27
  br label %569

; <label>:489:                                    ; preds = %28
  %490 = load volatile i64*, i64** %14
  %491 = load i64, i64* %490, align 8
  ret i64 %491

; <label>:492:                                    ; preds = %28
  %493 = alloca i64, align 8
  %494 = alloca %"class.std::_Hashtable.19"*, align 8
  %495 = alloca %class.Pos*, align 8
  %496 = alloca i64, align 8
  %497 = alloca i64, align 8
  %498 = alloca %"struct.std::__detail::_Hash_node.35"*, align 8
  %499 = alloca i64, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %494, align 8
  store %class.Pos* %1, %class.Pos** %495, align 8
  %500 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %494, align 8
  %501 = bitcast %"class.std::_Hashtable.19"* %500 to %"struct.std::__detail::_Hash_code_base.21"*
  %502 = load %class.Pos*, %class.Pos** %495, align 8
  %503 = call i64 @_ZNKSt8__detail15_Hash_code_baseI3PosSt4pairIKS1_iENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS3_(%"struct.std::__detail::_Hash_code_base.21"* %501, %class.Pos* dereferenceable(16) %502)
  store i64 %503, i64* %496, align 8
  %504 = load %class.Pos*, %class.Pos** %495, align 8
  %505 = load i64, i64* %496, align 8
  %506 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERS2_m(%"class.std::_Hashtable.19"* %500, %class.Pos* dereferenceable(16) %504, i64 %505)
  store i64 %506, i64* %497, align 8
  %507 = load i64, i64* %497, align 8
  %508 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_beginEm(%"class.std::_Hashtable.19"* %500, i64 %507)
  store %"struct.std::__detail::_Hash_node.35"* %508, %"struct.std::__detail::_Hash_node.35"** %498, align 8
  %509 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %498, align 8
  %510 = icmp ne %"struct.std::__detail::_Hash_node.35"* %509, null
  store i32 1977916134, i32* %27
  br label %569

; <label>:511:                                    ; preds = %28
  %512 = load volatile i64*, i64** %9
  store i64 0, i64* %512, align 8
  store i32 2066969625, i32* %27
  br label %569

; <label>:513:                                    ; preds = %28
  %514 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8
  %515 = bitcast %"class.std::_Hashtable.19"* %514 to %"struct.std::__detail::_Hashtable_base.20"*
  %516 = load volatile %class.Pos**, %class.Pos*** %13
  %517 = load %class.Pos*, %class.Pos** %516, align 8
  %518 = load volatile i64*, i64** %12
  %519 = load i64, i64* %518, align 8
  %520 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %521 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %520, align 8
  %522 = call zeroext i1 @_ZNKSt8__detail15_Hashtable_baseI3PosSt4pairIKS1_iENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS3_mPNS_10_Hash_nodeIS4_Lb1EEE(%"struct.std::__detail::_Hashtable_base.20"* %515, %class.Pos* dereferenceable(16) %517, i64 %519, %"struct.std::__detail::_Hash_node.35"* %521)
  store i32 -826890167, i32* %27
  br label %569

; <label>:523:                                    ; preds = %28
  %524 = load volatile i64*, i64** %9
  %525 = load i64, i64* %524, align 8
  %526 = sub i64 0, 1287470700144262596
  %527 = sub i64 %526, %525
  %528 = add i64 %527, 1287470700144262596
  %529 = sub i64 0, %525
  %530 = sub i64 %528, -2372863756280783991
  %531 = add i64 %530, 1
  %532 = add i64 %531, -2372863756280783991
  %533 = add i64 %528, 1
  %534 = sub i64 0, 4110516678034066788
  %535 = sub i64 %534, %525
  %536 = add i64 %535, 4110516678034066788
  %537 = sub i64 0, %525
  %538 = sub i64 0, %536
  %539 = sub i64 0, 1
  %540 = add i64 %538, %539
  %541 = sub i64 0, %540
  %542 = add i64 %536, 1
  %543 = sub i64 %525, 3139936933693848828
  %544 = add i64 %543, 1
  %545 = add i64 %544, 3139936933693848828
  %546 = add i64 %525, 1
  %547 = load volatile i64*, i64** %9
  store i64 %545, i64* %547, align 8
  store i32 1629126562, i32* %27
  br label %569

; <label>:548:                                    ; preds = %28
  %549 = load volatile i64*, i64** %9
  %550 = load i64, i64* %549, align 8
  %551 = icmp ne i64 %550, 0
  store i32 1063669279, i32* %27
  br label %569

; <label>:552:                                    ; preds = %28
  store i32 1857305700, i32* %27
  br label %569

; <label>:553:                                    ; preds = %28
  %554 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %555 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %554, align 8
  %556 = bitcast %"struct.std::__detail::_Hash_node.35"* %555 to %"struct.std::__detail::_Hash_node_base"*
  %557 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %556, i32 0, i32 0
  %558 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %557, align 8
  %559 = icmp ne %"struct.std::__detail::_Hash_node_base"* %558, null
  store i32 1264611907, i32* %27
  br label %569

; <label>:560:                                    ; preds = %28
  %561 = load volatile %"struct.std::__detail::_Hash_node.35"**, %"struct.std::__detail::_Hash_node.35"*** %10
  %562 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %561, align 8
  %563 = call %"struct.std::__detail::_Hash_node.35"* @_ZNKSt8__detail10_Hash_nodeISt4pairIK3PosiELb1EE7_M_nextEv(%"struct.std::__detail::_Hash_node.35"* %562) #3
  %564 = load volatile %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %8
  %565 = call i64 @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEPNS5_10_Hash_nodeIS3_Lb1EEE(%"class.std::_Hashtable.19"* %564, %"struct.std::__detail::_Hash_node.35"* %563) #3
  %566 = load volatile i64*, i64** %11
  %567 = load i64, i64* %566, align 8
  %568 = icmp ne i64 %565, %567
  store i32 828298862, i32* %27
  br label %569

; <label>:569:                                    ; preds = %560, %553, %552, %548, %523, %513, %511, %492, %485, %480, %479, %478, %475, %451, %423, %420, %399, %384, %383, %382, %354, %327, %324, %305, %290, %289, %253, %225, %222, %186, %159, %158, %141, %113, %111, %108, %51, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_Hash_node.35"* @_ZNKSt10_HashtableI3PosSt4pairIKS0_iESaIS3_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_beginEm(%"class.std::_Hashtable.19"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.std::__detail::_Hash_node.35"*
  %4 = alloca i1
  %5 = alloca %"struct.std::__detail::_Hash_node_base"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.805
  %9 = load i32, i32* @y.806
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -759055687, i32* %17
  %18 = alloca %"struct.std::__detail::_Hash_node.35"*
  br label %19

; <label>:19:                                     ; preds = %2, %190
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -759055687, label %22
    i32 -1409322475, label %30
    i32 -1694298263, label %59
    i32 -1146364264, label %62
    i32 -876307044, label %90
    i32 962767885, label %123
    i32 -97220538, label %125
    i32 1670920860, label %141
    i32 -1530776183, label %168
    i32 -267976465, label %169
    i32 -928028277, label %171
    i32 -1901836791, label %183
    i32 -797536968, label %189
  ]

; <label>:21:                                     ; preds = %19
  br label %190

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1409322475, i32 -928028277
  store i32 %29, i32* %17
  br label %190

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::_Hashtable.19"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"struct.std::__detail::_Hash_node_base"** %33, %"struct.std::__detail::_Hash_node_base"*** %5
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %31, align 8
  store i64 %1, i64* %32, align 8
  %34 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %31, align 8
  %35 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %34, i32 0, i32 0
  %36 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %35, align 8
  %37 = load i64, i64* %32, align 8
  %38 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %36, i64 %37
  %39 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %38, align 8
  %40 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5
  store %"struct.std::__detail::_Hash_node_base"* %39, %"struct.std::__detail::_Hash_node_base"** %40, align 8
  %41 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5
  %42 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %41, align 8
  %43 = icmp ne %"struct.std::__detail::_Hash_node_base"* %42, null
  store i1 %43, i1* %4
  %44 = load i32, i32* @x.805
  %45 = load i32, i32* @y.806
  %46 = sub i32 %44, 1076157164
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1076157164
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1694298263, i32 -928028277
  store i32 %58, i32* %17
  br label %190

; <label>:59:                                     ; preds = %19
  %60 = load volatile i1, i1* %4
  %61 = select i1 %60, i32 -1146364264, i32 -97220538
  store i32 %61, i32* %17
  br label %190

; <label>:62:                                     ; preds = %19
  %63 = load i32, i32* @x.805
  %64 = load i32, i32* @y.806
  %65 = sub i32 %63, 1454275970
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1454275970
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -876307044, i32 -1901836791
  store i32 %89, i32* %17
  br label %190

; <label>:90:                                     ; preds = %19
  %91 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5
  %92 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %91, align 8
  %93 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %92, i32 0, i32 0
  %94 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %93, align 8
  %95 = bitcast %"struct.std::__detail::_Hash_node_base"* %94 to %"struct.std::__detail::_Hash_node.35"*
  store %"struct.std::__detail::_Hash_node.35"* %95, %"struct.std::__detail::_Hash_node.35"** %3
  %96 = load i32, i32* @x.805
  %97 = load i32, i32* @y.806
  %98 = add i32 %96, 1370347559
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 1370347559
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 962767885, i32 -1901836791
  store i32 %122, i32* %17
  br label %190

; <label>:123:                                    ; preds = %19
  store i32 -267976465, i32* %17
  %124 = load volatile %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %3
  store %"struct.std::__detail::_Hash_node.35"* %124, %"struct.std::__detail::_Hash_node.35"** %18
  br label %190

; <label>:125:                                    ; preds = %19
  %126 = load i32, i32* @x.805
  %127 = load i32, i32* @y.806
  %128 = sub i32 %126, -1597426363
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -1597426363
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  %140 = select i1 %138, i32 1670920860, i32 -797536968
  store i32 %140, i32* %17
  br label %190

; <label>:141:                                    ; preds = %19
  %142 = load i32, i32* @x.805
  %143 = load i32, i32* @y.806
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  %167 = select i1 %165, i32 -1530776183, i32 -797536968
  store i32 %167, i32* %17
  br label %190

; <label>:168:                                    ; preds = %19
  store i32 -267976465, i32* %17
  store %"struct.std::__detail::_Hash_node.35"* null, %"struct.std::__detail::_Hash_node.35"** %18
  br label %190

; <label>:169:                                    ; preds = %19
  %170 = load %"struct.std::__detail::_Hash_node.35"*, %"struct.std::__detail::_Hash_node.35"** %18
  ret %"struct.std::__detail::_Hash_node.35"* %170

; <label>:171:                                    ; preds = %19
  %172 = alloca %"class.std::_Hashtable.19"*, align 8
  %173 = alloca i64, align 8
  %174 = alloca %"struct.std::__detail::_Hash_node_base"*, align 8
  store %"class.std::_Hashtable.19"* %0, %"class.std::_Hashtable.19"** %172, align 8
  store i64 %1, i64* %173, align 8
  %175 = load %"class.std::_Hashtable.19"*, %"class.std::_Hashtable.19"** %172, align 8
  %176 = getelementptr inbounds %"class.std::_Hashtable.19", %"class.std::_Hashtable.19"* %175, i32 0, i32 0
  %177 = load %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %176, align 8
  %178 = load i64, i64* %173, align 8
  %179 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %177, i64 %178
  %180 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %179, align 8
  store %"struct.std::__detail::_Hash_node_base"* %180, %"struct.std::__detail::_Hash_node_base"** %174, align 8
  %181 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %174, align 8
  %182 = icmp ne %"struct.std::__detail::_Hash_node_base"* %181, null
  store i32 -1409322475, i32* %17
  br label %190

; <label>:183:                                    ; preds = %19
  %184 = load volatile %"struct.std::__detail::_Hash_node_base"**, %"struct.std::__detail::_Hash_node_base"*** %5
  %185 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %184, align 8
  %186 = getelementptr inbounds %"struct.std::__detail::_Hash_node_base", %"struct.std::__detail::_Hash_node_base"* %185, i32 0, i32 0
  %187 = load %"struct.std::__detail::_Hash_node_base"*, %"struct.std::__detail::_Hash_node_base"** %186, align 8
  %188 = bitcast %"struct.std::__detail::_Hash_node_base"* %187 to %"struct.std::__detail::_Hash_node.35"*
  store i32 -876307044, i32* %17
  br label %190

; <label>:189:                                    ; preds = %19
  store i32 1670920860, i32* %17
  br label %190

; <label>:190:                                    ; preds = %189, %183, %171, %168, %141, %125, %123, %90, %62, %59, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE9push_backERKS0_(%"class.std::deque"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %class.Pos*
  %4 = alloca %class.Pos*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %class.Pos*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store %class.Pos* %1, %class.Pos** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load %class.Pos*, %class.Pos** %13, align 8
  store %class.Pos* %14, %class.Pos** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load %class.Pos*, %class.Pos** %19, align 8
  %21 = getelementptr inbounds %class.Pos, %class.Pos* %20, i64 -1
  store %class.Pos* %21, %class.Pos** %3
  %22 = alloca i32
  store i32 1734740113, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %117
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1734740113, label %26
    i32 -1645844855, label %31
    i32 1406480746, label %47
    i32 -256412939, label %93
    i32 1132083212, label %94
    i32 1762973763, label %97
    i32 -1953780487, label %98
  ]

; <label>:25:                                     ; preds = %23
  br label %117

; <label>:26:                                     ; preds = %23
  %27 = load volatile %class.Pos*, %class.Pos** %4
  %28 = load volatile %class.Pos*, %class.Pos** %3
  %29 = icmp ne %class.Pos* %27, %28
  %30 = select i1 %29, i32 -1645844855, i32 1132083212
  store i32 %30, i32* %22
  br label %117

; <label>:31:                                     ; preds = %23
  %32 = load i32, i32* @x.807
  %33 = load i32, i32* @y.808
  %34 = sub i32 %32, 1948161980
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1948161980
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1406480746, i32 -1953780487
  store i32 %46, i32* %22
  br label %117

; <label>:47:                                     ; preds = %23
  %48 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %49 = bitcast %"class.std::deque"* %48 to %"class.std::_Deque_base"*
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %50 to %"class.std::allocator.32"*
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %53 = bitcast %"class.std::deque"* %52 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 0
  %57 = load %class.Pos*, %class.Pos** %56, align 8
  %58 = load %class.Pos*, %class.Pos** %7, align 8
  call void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1) %51, %class.Pos* %57, %class.Pos* dereferenceable(16) %58)
  %59 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %60 = bitcast %"class.std::deque"* %59 to %"class.std::_Deque_base"*
  %61 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %61, i32 0, i32 3
  %63 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %62, i32 0, i32 0
  %64 = load %class.Pos*, %class.Pos** %63, align 8
  %65 = getelementptr inbounds %class.Pos, %class.Pos* %64, i32 1
  store %class.Pos* %65, %class.Pos** %63, align 8
  %66 = load i32, i32* @x.807
  %67 = load i32, i32* @y.808
  %68 = sub i32 %66, -1897701703
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -1897701703
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -256412939, i32 -1953780487
  store i32 %92, i32* %22
  br label %117

; <label>:93:                                     ; preds = %23
  store i32 1762973763, i32* %22
  br label %117

; <label>:94:                                     ; preds = %23
  %95 = load %class.Pos*, %class.Pos** %7, align 8
  %96 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeI3PosSaIS0_EE16_M_push_back_auxIJRKS0_EEEvDpOT_(%"class.std::deque"* %96, %class.Pos* dereferenceable(16) %95)
  store i32 1762973763, i32* %22
  br label %117

; <label>:97:                                     ; preds = %23
  ret void

; <label>:98:                                     ; preds = %23
  %99 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %100 = bitcast %"class.std::deque"* %99 to %"class.std::_Deque_base"*
  %101 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %100, i32 0, i32 0
  %102 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %101 to %"class.std::allocator.32"*
  %103 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %104 = bitcast %"class.std::deque"* %103 to %"class.std::_Deque_base"*
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %105, i32 0, i32 3
  %107 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %106, i32 0, i32 0
  %108 = load %class.Pos*, %class.Pos** %107, align 8
  %109 = load %class.Pos*, %class.Pos** %7, align 8
  call void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1) %102, %class.Pos* %108, %class.Pos* dereferenceable(16) %109)
  %110 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %111 = bitcast %"class.std::deque"* %110 to %"class.std::_Deque_base"*
  %112 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %112, i32 0, i32 3
  %114 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %113, i32 0, i32 0
  %115 = load %class.Pos*, %class.Pos** %114, align 8
  %116 = getelementptr inbounds %class.Pos, %class.Pos* %115, i32 1
  store %class.Pos* %116, %class.Pos** %114, align 8
  store i32 1406480746, i32* %22
  br label %117

; <label>:117:                                    ; preds = %98, %94, %93, %47, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI3PosSaIS0_EE16_M_push_back_auxIJRKS0_EEEvDpOT_(%"class.std::deque"*, %class.Pos* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %class.Pos*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %class.Pos* %1, %class.Pos** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeI3PosSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call %class.Pos* @_ZNSt11_Deque_baseI3PosSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load %class.Pos**, %class.Pos*** %13, align 8
  %15 = getelementptr inbounds %class.Pos*, %class.Pos** %14, i64 1
  store %class.Pos* %9, %class.Pos** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %17 to %"class.std::allocator.32"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load %class.Pos*, %class.Pos** %22, align 8
  %24 = load %class.Pos*, %class.Pos** %4, align 8
  %25 = call dereferenceable(16) %class.Pos* @_ZSt7forwardIRK3PosEOT_RNSt16remove_referenceIS3_E4typeE(%class.Pos* dereferenceable(16) %24) #3
  invoke void @_ZNSt16allocator_traitsISaI3PosEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.32"* dereferenceable(1) %18, %class.Pos* %23, %class.Pos* dereferenceable(16) %25)
          to label %26 unwind label %87

; <label>:26:                                     ; preds = %2
  %27 = load i32, i32* @x.809
  %28 = load i32, i32* @y.810
  %29 = add i32 %27, 1034680010
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1034680010
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %310

; <label>:41:                                     ; preds = %26, %310
  %42 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 3
  %49 = load %class.Pos**, %class.Pos*** %48, align 8
  %50 = getelementptr inbounds %class.Pos*, %class.Pos** %49, i64 1
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %44, %class.Pos** %50) #3
  %51 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %52, i32 0, i32 3
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %53, i32 0, i32 1
  %55 = load %class.Pos*, %class.Pos** %54, align 8
  %56 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %57, i32 0, i32 3
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 0
  store %class.Pos* %55, %class.Pos** %59, align 8
  %60 = load i32, i32* @x.809
  %61 = load i32, i32* @y.810
  %62 = add i32 %60, -1379451697
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -1379451697
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %310

; <label>:86:                                     ; preds = %41
  br label %258

; <label>:87:                                     ; preds = %2
  %88 = load i32, i32* @x.809
  %89 = load i32, i32* @y.810
  %90 = add i32 %88, -150945295
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -150945295
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %329

; <label>:102:                                    ; preds = %87, %329
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %5, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %6, align 4
  %106 = load i32, i32* @x.809
  %107 = load i32, i32* @y.810
  %108 = sub i32 %106, 759623394
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 759623394
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %329

; <label>:132:                                    ; preds = %102
  br label %133

; <label>:133:                                    ; preds = %132
  %134 = load i32, i32* @x.809
  %135 = load i32, i32* @y.810
  %136 = sub i32 0, 1
  %137 = add i32 %134, %136
  %138 = sub i32 %134, 1
  %139 = mul i32 %134, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %135, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  br i1 %145, label %147, label %333

; <label>:147:                                    ; preds = %133, %333
  %148 = load i8*, i8** %5, align 8
  %149 = call i8* @__cxa_begin_catch(i8* %148) #3
  %150 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %151 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %152 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %152, i32 0, i32 3
  %154 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %153, i32 0, i32 3
  %155 = load %class.Pos**, %class.Pos*** %154, align 8
  %156 = getelementptr inbounds %class.Pos*, %class.Pos** %155, i64 1
  %157 = load %class.Pos*, %class.Pos** %156, align 8
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %150, %class.Pos* %157) #3
  %158 = load i32, i32* @x.809
  %159 = load i32, i32* @y.810
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 true, true
  %170 = and i1 %167, true
  %171 = and i1 %165, %169
  %172 = and i1 %168, true
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 true, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  br i1 %181, label %183, label %333

; <label>:183:                                    ; preds = %147
  invoke void @__cxa_rethrow() #12
          to label %309 unwind label %184

; <label>:184:                                    ; preds = %183
  %185 = load i32, i32* @x.809
  %186 = load i32, i32* @y.810
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %344

; <label>:198:                                    ; preds = %184, %344
  %199 = landingpad { i8*, i32 }
          cleanup
  %200 = extractvalue { i8*, i32 } %199, 0
  store i8* %200, i8** %5, align 8
  %201 = extractvalue { i8*, i32 } %199, 1
  store i32 %201, i32* %6, align 4
  %202 = load i32, i32* @x.809
  %203 = load i32, i32* @y.810
  %204 = sub i32 0, 1
  %205 = add i32 %202, %204
  %206 = sub i32 %202, 1
  %207 = mul i32 %202, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %203, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  br i1 %213, label %215, label %344

; <label>:215:                                    ; preds = %198
  invoke void @__cxa_end_catch()
          to label %216 unwind label %306

; <label>:216:                                    ; preds = %215
  %217 = load i32, i32* @x.809
  %218 = load i32, i32* @y.810
  %219 = add i32 %217, 1908593363
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, 1908593363
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 true, true
  %230 = and i1 %227, true
  %231 = and i1 %225, %229
  %232 = and i1 %228, true
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 true, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  br i1 %241, label %243, label %348

; <label>:243:                                    ; preds = %216, %348
  %244 = load i32, i32* @x.809
  %245 = load i32, i32* @y.810
  %246 = sub i32 0, 1
  %247 = add i32 %244, %246
  %248 = sub i32 %244, 1
  %249 = mul i32 %244, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %245, 10
  %253 = and i1 %251, %252
  %254 = xor i1 %251, %252
  %255 = or i1 %253, %254
  %256 = or i1 %251, %252
  br i1 %255, label %257, label %348

; <label>:257:                                    ; preds = %243
  br label %301

; <label>:258:                                    ; preds = %86
  %259 = load i32, i32* @x.809
  %260 = load i32, i32* @y.810
  %261 = sub i32 %259, 18687023
  %262 = sub i32 %261, 1
  %263 = add i32 %262, 18687023
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  br i1 %271, label %273, label %349

; <label>:273:                                    ; preds = %258, %349
  %274 = load i32, i32* @x.809
  %275 = load i32, i32* @y.810
  %276 = sub i32 %274, -1114947777
  %277 = sub i32 %276, 1
  %278 = add i32 %277, -1114947777
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = xor i1 %282, true
  %285 = xor i1 %283, true
  %286 = xor i1 false, true
  %287 = and i1 %284, false
  %288 = and i1 %282, %286
  %289 = and i1 %285, false
  %290 = and i1 %283, %286
  %291 = or i1 %287, %288
  %292 = or i1 %289, %290
  %293 = xor i1 %291, %292
  %294 = or i1 %284, %285
  %295 = xor i1 %294, true
  %296 = or i1 false, %286
  %297 = and i1 %295, %296
  %298 = or i1 %293, %297
  %299 = or i1 %282, %283
  br i1 %298, label %300, label %349

; <label>:300:                                    ; preds = %273
  ret void

; <label>:301:                                    ; preds = %257
  %302 = load i8*, i8** %5, align 8
  %303 = load i32, i32* %6, align 4
  %304 = insertvalue { i8*, i32 } undef, i8* %302, 0
  %305 = insertvalue { i8*, i32 } %304, i32 %303, 1
  resume { i8*, i32 } %305

; <label>:306:                                    ; preds = %215
  %307 = landingpad { i8*, i32 }
          catch i8* null
  %308 = extractvalue { i8*, i32 } %307, 0
  call void @__clang_call_terminate(i8* %308) #9
  unreachable

; <label>:309:                                    ; preds = %183
  unreachable

; <label>:310:                                    ; preds = %41, %26
  %311 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %312 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %311, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %312, i32 0, i32 3
  %314 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %315 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %315, i32 0, i32 3
  %317 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %316, i32 0, i32 3
  %318 = load %class.Pos**, %class.Pos*** %317, align 8
  %319 = getelementptr inbounds %class.Pos*, %class.Pos** %318, i64 1
  call void @_ZNSt15_Deque_iteratorI3PosRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %313, %class.Pos** %319) #3
  %320 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %321 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %320, i32 0, i32 0
  %322 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %321, i32 0, i32 3
  %323 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %322, i32 0, i32 1
  %324 = load %class.Pos*, %class.Pos** %323, align 8
  %325 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %326 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %326, i32 0, i32 3
  %328 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %327, i32 0, i32 0
  store %class.Pos* %324, %class.Pos** %328, align 8
  br label %41

; <label>:329:                                    ; preds = %102, %87
  %330 = landingpad { i8*, i32 }
          catch i8* null
  %331 = extractvalue { i8*, i32 } %330, 0
  store i8* %331, i8** %5, align 8
  %332 = extractvalue { i8*, i32 } %330, 1
  store i32 %332, i32* %6, align 4
  br label %102

; <label>:333:                                    ; preds = %147, %133
  %334 = load i8*, i8** %5, align 8
  %335 = call i8* @__cxa_begin_catch(i8* %334) #3
  %336 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %337 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %338 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %337, i32 0, i32 0
  %339 = getelementptr inbounds %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl", %"struct.std::_Deque_base<Pos, std::allocator<Pos> >::_Deque_impl"* %338, i32 0, i32 3
  %340 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %339, i32 0, i32 3
  %341 = load %class.Pos**, %class.Pos*** %340, align 8
  %342 = getelementptr inbounds %class.Pos*, %class.Pos** %341, i64 1
  %343 = load %class.Pos*, %class.Pos** %342, align 8
  call void @_ZNSt11_Deque_baseI3PosSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %336, %class.Pos* %343) #3
  br label %147

; <label>:344:                                    ; preds = %198, %184
  %345 = landingpad { i8*, i32 }
          cleanup
  %346 = extractvalue { i8*, i32 } %345, 0
  store i8* %346, i8** %5, align 8
  %347 = extractvalue { i8*, i32 } %345, 1
  store i32 %347, i32* %6, align 4
  br label %198

; <label>:348:                                    ; preds = %243, %216
  br label %243

; <label>:349:                                    ; preds = %273, %258
  br label %273
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s291792835.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
