; ModuleID = 'Project_CodeNet_C++1400/p00747/s637424217.cpp'
source_filename = "Project_CodeNet_C++1400/p00747/s637424217.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"* }
%"class.std::allocator" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl" }
%"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl" = type { %"class.std::deque.8"**, i64, %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10" }
%"class.std::deque.8" = type { %"class.std::_Deque_base.9" }
%"class.std::_Deque_base.9" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"struct.std::_Deque_iterator.10" = type { %"class.std::deque.8"*, %"class.std::deque.8"*, %"class.std::deque.8"*, %"class.std::deque.8"** }
%"class.std::initializer_list" = type { %"class.std::deque.8"*, i64 }
%"class.std::initializer_list.11" = type { i32*, i64 }
%"class.std::allocator.5" = type { i8 }
%"class.std::initializer_list.12" = type { %"class.std::vector"*, i64 }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector"* }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"struct.std::_Deque_iterator.19" = type { i32*, i32*, i32*, i32** }
%"class.__gnu_cxx::__normal_iterator.20" = type { i32* }
%"class.std::allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }
%"class.std::allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.17" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.std::move_iterator" = type { i32* }

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_ = comdat any

$_ZNSaISt5dequeIiSaIiEEEC2Ev = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EEC2ESt16initializer_listIS1_ERKS2_ = comdat any

$_ZNSaISt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNKSt5dequeIS_IiSaIiEESaIS1_EE5emptyEv = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE5frontEv = comdat any

$_ZNSt5dequeIiSaIiEEC2ERKS1_ = comdat any

$_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2ESt16initializer_listIS1_ERKS2_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS1_ = comdat any

$_ZNSt5dequeIiSaIiEEixEm = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE9push_backEOS1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEppEv = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE9pop_frontEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag = comdat any

$_ZNKSt16initializer_listIiE5beginEv = comdat any

$_ZNKSt16initializer_listIiE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZSt7advanceIPKimEvRT_T0_ = comdat any

$_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv = comdat any

$_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_ = comdat any

$_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_ = comdat any

$_ZSt4copyIPKiPiET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_ = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_ = comdat any

$_ZNKSt16initializer_listIiE4sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EEC2ERKS3_ = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag = comdat any

$_ZNKSt16initializer_listISt5dequeIiSaIiEEE5beginEv = comdat any

$_ZNKSt16initializer_listISt5dequeIiSaIiEEE3endEv = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EED2Ev = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE11_Deque_implC2ERKS3_ = comdat any

$_ZNSaISt5dequeIiSaIiEEEC2ERKS2_ = comdat any

$_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2ERKS4_ = comdat any

$_ZSt8distanceIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_ = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_initialize_mapEm = comdat any

$_ZSt7advanceIPKSt5dequeIiSaIiEEmEvRT_T0_ = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE14_S_buffer_sizeEv = comdat any

$_ZSt22__uninitialized_copy_aIPKSt5dequeIiSaIiEEPS2_S2_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorISt5dequeIiSaIiEERS3_PS3_ES3_EvT_S7_RSaIT0_E = comdat any

$_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_ = comdat any

$_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ES4_PS4_ = comdat any

$_ZSt10__distanceIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E17iterator_categoryERKS6_ = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_create_nodesEPPS2_S6_ = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_deallocate_mapEPPS2_m = comdat any

$_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_ = comdat any

$_ZNKSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPSt5dequeIiSaIiEEEE8allocateERS4_m = comdat any

$_ZNSaIPSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNKSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPSt5dequeIiSaIiEEEC2IS1_EERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_destroy_nodesEPPS2_S6_ = comdat any

$_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE18_M_deallocate_nodeEPS2_ = comdat any

$_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZNSt16allocator_traitsISaIPSt5dequeIiSaIiEEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE10deallocateEPS4_m = comdat any

$_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E14_S_buffer_sizeEv = comdat any

$_ZSt9__advanceIPKSt5dequeIiSaIiEElEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZSt18uninitialized_copyIPKSt5dequeIiSaIiEEPS2_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt5dequeIiSaIiEEPS4_EET0_T_S9_S8_ = comdat any

$_ZSt10_ConstructISt5dequeIiSaIiEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt5dequeIiSaIiEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt5dequeIiSaIiEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5dequeIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt5dequeIiSaIiEEEvPT_ = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorISt5dequeIiSaIiEERS3_PS3_EEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyISt15_Deque_iteratorISt5dequeIiSaIiEERS5_PS5_EEEvT_S9_ = comdat any

$_ZStneISt5dequeIiSaIiEERS2_PS2_EbRKSt15_Deque_iteratorIT_T0_T1_ESB_ = comdat any

$_ZNKSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EdeEv = comdat any

$_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EppEv = comdat any

$_ZSteqISt5dequeIiSaIiEERS2_PS2_EbRKSt15_Deque_iteratorIT_T0_T1_ESB_ = comdat any

$_ZNKSt16initializer_listISt5dequeIiSaIiEEE4sizeEv = comdat any

$_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE11_Deque_implD2Ev = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_ = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE5beginEv = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE3endEv = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ = comdat any

$_ZSt8_DestroyIPSt5dequeIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt5dequeIiSaIiEE4sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_m = comdat any

$_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E = comdat any

$_ZNKSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNKSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_ = comdat any

$_ZSt18uninitialized_copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIiRKiPS3_ES2_IiRiPiEEET0_T_SB_SA_ = comdat any

$_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_ = comdat any

$_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_ = comdat any

$_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRKiPS4_ES3_IiRiPiEEET0_T_SC_SB_ = comdat any

$_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_ = comdat any

$_ZNKSt15_Deque_iteratorIiRKiPS0_EdeEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_EppEv = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEppEv = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_E11_M_set_nodeEPPi = comdat any

$_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_ = comdat any

$_ZNSt10_Iter_baseISt15_Deque_iteratorIiRiPiELb0EE7_S_baseES3_ = comdat any

$_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2ERKS3_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag = comdat any

$_ZNKSt16initializer_listISt6vectorIiSaIiEEE5beginEv = comdat any

$_ZNKSt16initializer_listISt6vectorIiSaIiEEE3endEv = comdat any

$_ZSt8distanceIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_ = comdat any

$_ZSt22__uninitialized_copy_aIPKSt6vectorIiSaIiEEPS2_S2_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt10__distanceIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E17iterator_categoryERKS6_ = comdat any

$_ZSt18uninitialized_copyIPKSt6vectorIiSaIiEEPS2_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_ = comdat any

$_ZNKSt16initializer_listISt6vectorIiSaIiEEE4sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNKSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEixEl = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEplEl = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEpLEl = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE9constructIS3_JS3_EEEvPT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_ = comdat any

$_ZSt13copy_backwardIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_ = comdat any

$_ZSt12__miter_baseIPPSt5dequeIiSaIiEEENSt11_Miter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt13__copy_move_aILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_ = comdat any

$_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_ = comdat any

$_ZNSt10_Iter_baseIPPSt5dequeIiSaIiEELb0EE7_S_baseES4_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_ = comdat any

$_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZNSt5dequeIS_IiSaIiEESaIS1_EE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE7destroyIS3_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.ref.tmp = private constant [2 x i32] zeroinitializer, align 4
@.ref.tmp.1 = private constant [2 x i32] [i32 1, i32 1], align 4
@.ref.tmp.2 = private constant [2 x i32] [i32 0, i32 -1], align 4
@.ref.tmp.3 = private constant [2 x i32] [i32 1, i32 1], align 4
@.ref.tmp.4 = private constant [2 x i32] [i32 0, i32 -1], align 4
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s637424217.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca %"class.std::vector", align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca %"class.std::vector.0", align 8
  %8 = alloca %"class.std::vector", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::allocator", align 1
  %11 = alloca %"class.std::allocator.2", align 1
  %12 = alloca %"class.std::vector.0", align 8
  %13 = alloca %"class.std::vector", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::allocator", align 1
  %16 = alloca %"class.std::allocator.2", align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::vector.0", align 8
  %22 = alloca %"class.std::vector", align 8
  %23 = alloca i32, align 4
  %24 = alloca %"class.std::allocator", align 1
  %25 = alloca %"class.std::allocator.2", align 1
  %26 = alloca %"class.std::deque", align 8
  %27 = alloca %"class.std::initializer_list", align 8
  %28 = alloca [1 x %"class.std::deque.8"], align 8
  %29 = alloca %"class.std::deque.8"*, align 8
  %30 = alloca %"class.std::initializer_list.11", align 8
  %31 = alloca %"class.std::allocator", align 1
  %32 = alloca i1, align 1
  %33 = alloca %"class.std::allocator.5", align 1
  %34 = alloca %"class.std::deque.8", align 8
  %35 = alloca %"class.std::vector.0", align 8
  %36 = alloca %"class.std::initializer_list.12", align 8
  %37 = alloca [2 x %"class.std::vector"], align 8
  %38 = alloca %"class.std::vector"*, align 8
  %39 = alloca %"class.std::initializer_list.11", align 8
  %40 = alloca %"class.std::allocator", align 1
  %41 = alloca %"class.std::initializer_list.11", align 8
  %42 = alloca %"class.std::allocator", align 1
  %43 = alloca i1, align 1
  %44 = alloca %"class.std::allocator.2", align 1
  %45 = alloca %"class.std::vector.0", align 8
  %46 = alloca %"class.std::initializer_list.12", align 8
  %47 = alloca [2 x %"class.std::vector"], align 8
  %48 = alloca %"class.std::vector"*, align 8
  %49 = alloca %"class.std::initializer_list.11", align 8
  %50 = alloca %"class.std::allocator", align 1
  %51 = alloca %"class.std::initializer_list.11", align 8
  %52 = alloca %"class.std::allocator", align 1
  %53 = alloca i1, align 1
  %54 = alloca %"class.std::allocator.2", align 1
  %55 = alloca %"class.std::vector.0"*, align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %58 = alloca %"class.std::vector", align 8
  %59 = alloca %"class.std::deque.8", align 8
  %60 = alloca %"class.std::initializer_list.11", align 8
  %61 = alloca [2 x i32], align 4
  %62 = alloca %"class.std::allocator", align 1
  %63 = alloca %"class.std::vector.0"*, align 8
  %64 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.std::vector", align 8
  %67 = alloca %"class.std::deque.8", align 8
  %68 = alloca %"class.std::initializer_list.11", align 8
  %69 = alloca [2 x i32], align 4
  %70 = alloca %"class.std::allocator", align 1
  %71 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %2) #3
  br label %72

; <label>:72:                                     ; preds = %2190, %0
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %3)
          to label %75 unwind label %135

; <label>:75:                                     ; preds = %73
  %76 = load i32, i32* @x.6
  %77 = load i32, i32* @y.7
  %78 = add i32 %76, 1459096569
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 1459096569
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %2295

; <label>:102:                                    ; preds = %75, %2295
  %103 = load i32, i32* @x.6
  %104 = load i32, i32* @y.7
  %105 = add i32 %103, 69258225
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 69258225
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %2295

; <label>:129:                                    ; preds = %102
  %130 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %74, i32* dereferenceable(4) %4)
          to label %131 unwind label %135

; <label>:131:                                    ; preds = %129
  %132 = load i32, i32* %3, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %168

; <label>:134:                                    ; preds = %131
  br label %2195

; <label>:135:                                    ; preds = %2235, %129, %73
  %136 = load i32, i32* @x.6
  %137 = load i32, i32* @y.7
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %2296

; <label>:149:                                    ; preds = %135, %2296
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %5, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %6, align 4
  %153 = load i32, i32* @x.6
  %154 = load i32, i32* @y.7
  %155 = add i32 %153, -1216124018
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, -1216124018
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %2296

; <label>:167:                                    ; preds = %149
  br label %2247

; <label>:168:                                    ; preds = %131
  %169 = load i32, i32* %4, align 4
  %170 = sext i32 %169 to i64
  %171 = load i32, i32* %3, align 4
  %172 = sub i32 %171, 1975911939
  %173 = add i32 %172, 1
  %174 = add i32 %173, 1975911939
  %175 = add nsw i32 %171, 1
  %176 = sext i32 %174 to i64
  store i32 1, i32* %9, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %10) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"* %8, i64 %176, i32* dereferenceable(4) %9, %"class.std::allocator"* dereferenceable(1) %10)
          to label %177 unwind label %370

; <label>:177:                                    ; preds = %168
  %178 = load i32, i32* @x.6
  %179 = load i32, i32* @y.7
  %180 = add i32 %178, -1699413273
  %181 = sub i32 %180, 1
  %182 = sub i32 %181, -1699413273
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %2300

; <label>:192:                                    ; preds = %177, %2300
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %11) #3
  %193 = load i32, i32* @x.6
  %194 = load i32, i32* @y.7
  %195 = sub i32 0, 1
  %196 = add i32 %193, %195
  %197 = sub i32 %193, 1
  %198 = mul i32 %193, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %194, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  br i1 %204, label %206, label %2300

; <label>:206:                                    ; preds = %192
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"* %7, i64 %170, %"class.std::vector"* dereferenceable(24) %8, %"class.std::allocator.2"* dereferenceable(1) %11)
          to label %207 unwind label %374

; <label>:207:                                    ; preds = %206
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %11) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %8) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %10) #3
  %208 = load i32, i32* %4, align 4
  %209 = sub i32 0, 1
  %210 = sub i32 %208, %209
  %211 = add nsw i32 %208, 1
  %212 = sext i32 %210 to i64
  %213 = load i32, i32* %3, align 4
  %214 = sext i32 %213 to i64
  store i32 1, i32* %14, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %15) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"* %13, i64 %214, i32* dereferenceable(4) %14, %"class.std::allocator"* dereferenceable(1) %15)
          to label %215 unwind label %421

; <label>:215:                                    ; preds = %207
  %216 = load i32, i32* @x.6
  %217 = load i32, i32* @y.7
  %218 = sub i32 %216, -715328720
  %219 = sub i32 %218, 1
  %220 = add i32 %219, -715328720
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = xor i1 %224, true
  %227 = xor i1 %225, true
  %228 = xor i1 true, true
  %229 = and i1 %226, true
  %230 = and i1 %224, %228
  %231 = and i1 %227, true
  %232 = and i1 %225, %228
  %233 = or i1 %229, %230
  %234 = or i1 %231, %232
  %235 = xor i1 %233, %234
  %236 = or i1 %226, %227
  %237 = xor i1 %236, true
  %238 = or i1 true, %228
  %239 = and i1 %237, %238
  %240 = or i1 %235, %239
  %241 = or i1 %224, %225
  br i1 %240, label %242, label %2301

; <label>:242:                                    ; preds = %215, %2301
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %16) #3
  %243 = load i32, i32* @x.6
  %244 = load i32, i32* @y.7
  %245 = sub i32 0, 1
  %246 = add i32 %243, %245
  %247 = sub i32 %243, 1
  %248 = mul i32 %243, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %244, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 true, true
  %255 = and i1 %252, true
  %256 = and i1 %250, %254
  %257 = and i1 %253, true
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 true, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  br i1 %266, label %268, label %2301

; <label>:268:                                    ; preds = %242
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"* %12, i64 %212, %"class.std::vector"* dereferenceable(24) %13, %"class.std::allocator.2"* dereferenceable(1) %16)
          to label %269 unwind label %425

; <label>:269:                                    ; preds = %268
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %16) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %13) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %15) #3
  store i32 1, i32* %17, align 4
  br label %270

; <label>:270:                                    ; preds = %369, %269
  %271 = load i32, i32* %17, align 4
  %272 = load i32, i32* %3, align 4
  %273 = icmp slt i32 %271, %272
  br i1 %273, label %274, label %506

; <label>:274:                                    ; preds = %270
  %275 = load i32, i32* @x.6
  %276 = load i32, i32* @y.7
  %277 = sub i32 %275, -1735751536
  %278 = sub i32 %277, 1
  %279 = add i32 %278, -1735751536
  %280 = sub i32 %275, 1
  %281 = mul i32 %275, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %276, 10
  %285 = xor i1 %283, true
  %286 = xor i1 %284, true
  %287 = xor i1 false, true
  %288 = and i1 %285, false
  %289 = and i1 %283, %287
  %290 = and i1 %286, false
  %291 = and i1 %284, %287
  %292 = or i1 %288, %289
  %293 = or i1 %290, %291
  %294 = xor i1 %292, %293
  %295 = or i1 %285, %286
  %296 = xor i1 %295, true
  %297 = or i1 false, %287
  %298 = and i1 %296, %297
  %299 = or i1 %294, %298
  %300 = or i1 %283, %284
  br i1 %299, label %301, label %2302

; <label>:301:                                    ; preds = %274, %2302
  %302 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %7, i64 0) #3
  %303 = load i32, i32* %17, align 4
  %304 = sext i32 %303 to i64
  %305 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %302, i64 %304) #3
  %306 = load i32, i32* @x.6
  %307 = load i32, i32* @y.7
  %308 = add i32 %306, 2102540558
  %309 = sub i32 %308, 1
  %310 = sub i32 %309, 2102540558
  %311 = sub i32 %306, 1
  %312 = mul i32 %306, %310
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %307, 10
  %316 = and i1 %314, %315
  %317 = xor i1 %314, %315
  %318 = or i1 %316, %317
  %319 = or i1 %314, %315
  br i1 %318, label %320, label %2302

; <label>:320:                                    ; preds = %301
  %321 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %305)
          to label %322 unwind label %502

; <label>:322:                                    ; preds = %320
  br label %323

; <label>:323:                                    ; preds = %322
  %324 = load i32, i32* @x.6
  %325 = load i32, i32* @y.7
  %326 = sub i32 %324, -2126957858
  %327 = sub i32 %326, 1
  %328 = add i32 %327, -2126957858
  %329 = sub i32 %324, 1
  %330 = mul i32 %324, %328
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %325, 10
  %334 = and i1 %332, %333
  %335 = xor i1 %332, %333
  %336 = or i1 %334, %335
  %337 = or i1 %332, %333
  br i1 %336, label %338, label %2307

; <label>:338:                                    ; preds = %323, %2307
  %339 = load i32, i32* %17, align 4
  %340 = add i32 %339, 1354216508
  %341 = add i32 %340, 1
  %342 = sub i32 %341, 1354216508
  %343 = add nsw i32 %339, 1
  store i32 %342, i32* %17, align 4
  %344 = load i32, i32* @x.6
  %345 = load i32, i32* @y.7
  %346 = sub i32 0, 1
  %347 = add i32 %344, %346
  %348 = sub i32 %344, 1
  %349 = mul i32 %344, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %345, 10
  %353 = xor i1 %351, true
  %354 = xor i1 %352, true
  %355 = xor i1 false, true
  %356 = and i1 %353, false
  %357 = and i1 %351, %355
  %358 = and i1 %354, false
  %359 = and i1 %352, %355
  %360 = or i1 %356, %357
  %361 = or i1 %358, %359
  %362 = xor i1 %360, %361
  %363 = or i1 %353, %354
  %364 = xor i1 %363, true
  %365 = or i1 false, %355
  %366 = and i1 %364, %365
  %367 = or i1 %362, %366
  %368 = or i1 %351, %352
  br i1 %367, label %369, label %2307

; <label>:369:                                    ; preds = %338
  br label %270

; <label>:370:                                    ; preds = %168
  %371 = landingpad { i8*, i32 }
          cleanup
  %372 = extractvalue { i8*, i32 } %371, 0
  store i8* %372, i8** %5, align 8
  %373 = extractvalue { i8*, i32 } %371, 1
  store i32 %373, i32* %6, align 4
  br label %378

; <label>:374:                                    ; preds = %206
  %375 = landingpad { i8*, i32 }
          cleanup
  %376 = extractvalue { i8*, i32 } %375, 0
  store i8* %376, i8** %5, align 8
  %377 = extractvalue { i8*, i32 } %375, 1
  store i32 %377, i32* %6, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %11) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %8) #3
  br label %378

; <label>:378:                                    ; preds = %374, %370
  %379 = load i32, i32* @x.6
  %380 = load i32, i32* @y.7
  %381 = sub i32 %379, -940449511
  %382 = sub i32 %381, 1
  %383 = add i32 %382, -940449511
  %384 = sub i32 %379, 1
  %385 = mul i32 %379, %383
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %380, 10
  %389 = and i1 %387, %388
  %390 = xor i1 %387, %388
  %391 = or i1 %389, %390
  %392 = or i1 %387, %388
  br i1 %391, label %393, label %2322

; <label>:393:                                    ; preds = %378, %2322
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %10) #3
  %394 = load i32, i32* @x.6
  %395 = load i32, i32* @y.7
  %396 = add i32 %394, -1489461958
  %397 = sub i32 %396, 1
  %398 = sub i32 %397, -1489461958
  %399 = sub i32 %394, 1
  %400 = mul i32 %394, %398
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %395, 10
  %404 = xor i1 %402, true
  %405 = xor i1 %403, true
  %406 = xor i1 false, true
  %407 = and i1 %404, false
  %408 = and i1 %402, %406
  %409 = and i1 %405, false
  %410 = and i1 %403, %406
  %411 = or i1 %407, %408
  %412 = or i1 %409, %410
  %413 = xor i1 %411, %412
  %414 = or i1 %404, %405
  %415 = xor i1 %414, true
  %416 = or i1 false, %406
  %417 = and i1 %415, %416
  %418 = or i1 %413, %417
  %419 = or i1 %402, %403
  br i1 %418, label %420, label %2322

; <label>:420:                                    ; preds = %393
  br label %2247

; <label>:421:                                    ; preds = %207
  %422 = landingpad { i8*, i32 }
          cleanup
  %423 = extractvalue { i8*, i32 } %422, 0
  store i8* %423, i8** %5, align 8
  %424 = extractvalue { i8*, i32 } %422, 1
  store i32 %424, i32* %6, align 4
  br label %471

; <label>:425:                                    ; preds = %268
  %426 = load i32, i32* @x.6
  %427 = load i32, i32* @y.7
  %428 = sub i32 %426, -1689568827
  %429 = sub i32 %428, 1
  %430 = add i32 %429, -1689568827
  %431 = sub i32 %426, 1
  %432 = mul i32 %426, %430
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %427, 10
  %436 = xor i1 %434, true
  %437 = xor i1 %435, true
  %438 = xor i1 false, true
  %439 = and i1 %436, false
  %440 = and i1 %434, %438
  %441 = and i1 %437, false
  %442 = and i1 %435, %438
  %443 = or i1 %439, %440
  %444 = or i1 %441, %442
  %445 = xor i1 %443, %444
  %446 = or i1 %436, %437
  %447 = xor i1 %446, true
  %448 = or i1 false, %438
  %449 = and i1 %447, %448
  %450 = or i1 %445, %449
  %451 = or i1 %434, %435
  br i1 %450, label %452, label %2323

; <label>:452:                                    ; preds = %425, %2323
  %453 = landingpad { i8*, i32 }
          cleanup
  %454 = extractvalue { i8*, i32 } %453, 0
  store i8* %454, i8** %5, align 8
  %455 = extractvalue { i8*, i32 } %453, 1
  store i32 %455, i32* %6, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %16) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %13) #3
  %456 = load i32, i32* @x.6
  %457 = load i32, i32* @y.7
  %458 = sub i32 %456, -1509342571
  %459 = sub i32 %458, 1
  %460 = add i32 %459, -1509342571
  %461 = sub i32 %456, 1
  %462 = mul i32 %456, %460
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %457, 10
  %466 = and i1 %464, %465
  %467 = xor i1 %464, %465
  %468 = or i1 %466, %467
  %469 = or i1 %464, %465
  br i1 %468, label %470, label %2323

; <label>:470:                                    ; preds = %452
  br label %471

; <label>:471:                                    ; preds = %470, %421
  %472 = load i32, i32* @x.6
  %473 = load i32, i32* @y.7
  %474 = add i32 %472, -102763543
  %475 = sub i32 %474, 1
  %476 = sub i32 %475, -102763543
  %477 = sub i32 %472, 1
  %478 = mul i32 %472, %476
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %473, 10
  %482 = and i1 %480, %481
  %483 = xor i1 %480, %481
  %484 = or i1 %482, %483
  %485 = or i1 %480, %481
  br i1 %484, label %486, label %2327

; <label>:486:                                    ; preds = %471, %2327
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %15) #3
  %487 = load i32, i32* @x.6
  %488 = load i32, i32* @y.7
  %489 = sub i32 %487, 802148507
  %490 = sub i32 %489, 1
  %491 = add i32 %490, 802148507
  %492 = sub i32 %487, 1
  %493 = mul i32 %487, %491
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %488, 10
  %497 = and i1 %495, %496
  %498 = xor i1 %495, %496
  %499 = or i1 %497, %498
  %500 = or i1 %495, %496
  br i1 %499, label %501, label %2327

; <label>:501:                                    ; preds = %486
  br label %2194

; <label>:502:                                    ; preds = %537, %516, %320
  %503 = landingpad { i8*, i32 }
          cleanup
  %504 = extractvalue { i8*, i32 } %503, 0
  store i8* %504, i8** %5, align 8
  %505 = extractvalue { i8*, i32 } %503, 1
  store i32 %505, i32* %6, align 4
  br label %2193

; <label>:506:                                    ; preds = %270
  store i32 1, i32* %18, align 4
  br label %507

; <label>:507:                                    ; preds = %588, %506
  %508 = load i32, i32* %18, align 4
  %509 = load i32, i32* %4, align 4
  %510 = icmp slt i32 %508, %509
  br i1 %510, label %511, label %589

; <label>:511:                                    ; preds = %507
  store i32 0, i32* %19, align 4
  br label %512

; <label>:512:                                    ; preds = %525, %511
  %513 = load i32, i32* %19, align 4
  %514 = load i32, i32* %3, align 4
  %515 = icmp slt i32 %513, %514
  br i1 %515, label %516, label %532

; <label>:516:                                    ; preds = %512
  %517 = load i32, i32* %18, align 4
  %518 = sext i32 %517 to i64
  %519 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %12, i64 %518) #3
  %520 = load i32, i32* %19, align 4
  %521 = sext i32 %520 to i64
  %522 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %519, i64 %521) #3
  %523 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %522)
          to label %524 unwind label %502

; <label>:524:                                    ; preds = %516
  br label %525

; <label>:525:                                    ; preds = %524
  %526 = load i32, i32* %19, align 4
  %527 = sub i32 0, %526
  %528 = sub i32 0, 1
  %529 = add i32 %527, %528
  %530 = sub i32 0, %529
  %531 = add nsw i32 %526, 1
  store i32 %530, i32* %19, align 4
  br label %512

; <label>:532:                                    ; preds = %512
  store i32 1, i32* %20, align 4
  br label %533

; <label>:533:                                    ; preds = %546, %532
  %534 = load i32, i32* %20, align 4
  %535 = load i32, i32* %3, align 4
  %536 = icmp slt i32 %534, %535
  br i1 %536, label %537, label %551

; <label>:537:                                    ; preds = %533
  %538 = load i32, i32* %18, align 4
  %539 = sext i32 %538 to i64
  %540 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %7, i64 %539) #3
  %541 = load i32, i32* %20, align 4
  %542 = sext i32 %541 to i64
  %543 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %540, i64 %542) #3
  %544 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %543)
          to label %545 unwind label %502

; <label>:545:                                    ; preds = %537
  br label %546

; <label>:546:                                    ; preds = %545
  %547 = load i32, i32* %20, align 4
  %548 = sub i32 0, 1
  %549 = sub i32 %547, %548
  %550 = add nsw i32 %547, 1
  store i32 %549, i32* %20, align 4
  br label %533

; <label>:551:                                    ; preds = %533
  br label %552

; <label>:552:                                    ; preds = %551
  %553 = load i32, i32* @x.6
  %554 = load i32, i32* @y.7
  %555 = sub i32 %553, -815668492
  %556 = sub i32 %555, 1
  %557 = add i32 %556, -815668492
  %558 = sub i32 %553, 1
  %559 = mul i32 %553, %557
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %554, 10
  %563 = and i1 %561, %562
  %564 = xor i1 %561, %562
  %565 = or i1 %563, %564
  %566 = or i1 %561, %562
  br i1 %565, label %567, label %2328

; <label>:567:                                    ; preds = %552, %2328
  %568 = load i32, i32* %18, align 4
  %569 = sub i32 0, %568
  %570 = sub i32 0, 1
  %571 = add i32 %569, %570
  %572 = sub i32 0, %571
  %573 = add nsw i32 %568, 1
  store i32 %572, i32* %18, align 4
  %574 = load i32, i32* @x.6
  %575 = load i32, i32* @y.7
  %576 = add i32 %574, -1952979046
  %577 = sub i32 %576, 1
  %578 = sub i32 %577, -1952979046
  %579 = sub i32 %574, 1
  %580 = mul i32 %574, %578
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %575, 10
  %584 = and i1 %582, %583
  %585 = xor i1 %582, %583
  %586 = or i1 %584, %585
  %587 = or i1 %582, %583
  br i1 %586, label %588, label %2328

; <label>:588:                                    ; preds = %567
  br label %507

; <label>:589:                                    ; preds = %507
  %590 = load i32, i32* %4, align 4
  %591 = sext i32 %590 to i64
  %592 = load i32, i32* %3, align 4
  %593 = sext i32 %592 to i64
  store i32 2147483647, i32* %23, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %24) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"* %22, i64 %593, i32* dereferenceable(4) %23, %"class.std::allocator"* dereferenceable(1) %24)
          to label %594 unwind label %951

; <label>:594:                                    ; preds = %589
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %25) #3
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"* %21, i64 %591, %"class.std::vector"* dereferenceable(24) %22, %"class.std::allocator.2"* dereferenceable(1) %25)
          to label %595 unwind label %1008

; <label>:595:                                    ; preds = %594
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %25) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %22) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %24) #3
  %596 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 0) #3
  %597 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %596, i64 0) #3
  store i32 1, i32* %597, align 4
  %598 = getelementptr inbounds [1 x %"class.std::deque.8"], [1 x %"class.std::deque.8"]* %28, i64 0, i64 0
  store i1 true, i1* %32, align 1
  store %"class.std::deque.8"* %598, %"class.std::deque.8"** %29, align 8
  %599 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %30, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp, i64 0, i64 0), i32** %599, align 8
  %600 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %30, i32 0, i32 1
  store i64 2, i64* %600, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %31) #3
  %601 = bitcast %"class.std::initializer_list.11"* %30 to { i32*, i64 }*
  %602 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %601, i32 0, i32 0
  %603 = load i32*, i32** %602, align 8
  %604 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %601, i32 0, i32 1
  %605 = load i64, i64* %604, align 8
  invoke void @_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::deque.8"* %598, i32* %603, i64 %605, %"class.std::allocator"* dereferenceable(1) %31)
          to label %606 unwind label %1013

; <label>:606:                                    ; preds = %595
  store i1 false, i1* %32, align 1
  %607 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %27, i32 0, i32 0
  %608 = getelementptr inbounds [1 x %"class.std::deque.8"], [1 x %"class.std::deque.8"]* %28, i64 0, i64 0
  store %"class.std::deque.8"* %608, %"class.std::deque.8"** %607, align 8
  %609 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %27, i32 0, i32 1
  store i64 1, i64* %609, align 8
  call void @_ZNSaISt5dequeIiSaIiEEEC2Ev(%"class.std::allocator.5"* %33) #3
  %610 = bitcast %"class.std::initializer_list"* %27 to { %"class.std::deque.8"*, i64 }*
  %611 = getelementptr inbounds { %"class.std::deque.8"*, i64 }, { %"class.std::deque.8"*, i64 }* %610, i32 0, i32 0
  %612 = load %"class.std::deque.8"*, %"class.std::deque.8"** %611, align 8
  %613 = getelementptr inbounds { %"class.std::deque.8"*, i64 }, { %"class.std::deque.8"*, i64 }* %610, i32 0, i32 1
  %614 = load i64, i64* %613, align 8
  invoke void @_ZNSt5dequeIS_IiSaIiEESaIS1_EEC2ESt16initializer_listIS1_ERKS2_(%"class.std::deque"* %26, %"class.std::deque.8"* %612, i64 %614, %"class.std::allocator.5"* dereferenceable(1) %33)
          to label %615 unwind label %1047

; <label>:615:                                    ; preds = %606
  call void @_ZNSaISt5dequeIiSaIiEEED2Ev(%"class.std::allocator.5"* %33) #3
  %616 = getelementptr inbounds [1 x %"class.std::deque.8"], [1 x %"class.std::deque.8"]* %28, i32 0, i32 0
  %617 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %616, i64 1
  br label %618

; <label>:618:                                    ; preds = %618, %615
  %619 = phi %"class.std::deque.8"* [ %617, %615 ], [ %620, %618 ]
  %620 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %619, i64 -1
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %620) #3
  %621 = icmp eq %"class.std::deque.8"* %620, %616
  br i1 %621, label %622, label %618

; <label>:622:                                    ; preds = %618
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %31) #3
  br label %623

; <label>:623:                                    ; preds = %1985, %622
  %624 = load i32, i32* @x.6
  %625 = load i32, i32* @y.7
  %626 = sub i32 0, 1
  %627 = add i32 %624, %626
  %628 = sub i32 %624, 1
  %629 = mul i32 %624, %627
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %625, 10
  %633 = xor i1 %631, true
  %634 = xor i1 %632, true
  %635 = xor i1 true, true
  %636 = and i1 %633, true
  %637 = and i1 %631, %635
  %638 = and i1 %634, true
  %639 = and i1 %632, %635
  %640 = or i1 %636, %637
  %641 = or i1 %638, %639
  %642 = xor i1 %640, %641
  %643 = or i1 %633, %634
  %644 = xor i1 %643, true
  %645 = or i1 true, %635
  %646 = and i1 %644, %645
  %647 = or i1 %642, %646
  %648 = or i1 %631, %632
  br i1 %647, label %649, label %2337

; <label>:649:                                    ; preds = %623, %2337
  %650 = call zeroext i1 @_ZNKSt5dequeIS_IiSaIiEESaIS1_EE5emptyEv(%"class.std::deque"* %26) #3
  %651 = xor i1 %650, true
  %652 = and i1 true, %651
  %653 = xor i1 true, true
  %654 = and i1 %650, %653
  %655 = or i1 %652, %654
  %656 = xor i1 %650, true
  %657 = load i32, i32* @x.6
  %658 = load i32, i32* @y.7
  %659 = sub i32 %657, 1481932465
  %660 = sub i32 %659, 1
  %661 = add i32 %660, 1481932465
  %662 = sub i32 %657, 1
  %663 = mul i32 %657, %661
  %664 = urem i32 %663, 2
  %665 = icmp eq i32 %664, 0
  %666 = icmp slt i32 %658, 10
  %667 = and i1 %665, %666
  %668 = xor i1 %665, %666
  %669 = or i1 %667, %668
  %670 = or i1 %665, %666
  br i1 %669, label %671, label %2337

; <label>:671:                                    ; preds = %649
  br i1 %655, label %672, label %2031

; <label>:672:                                    ; preds = %671
  %673 = call dereferenceable(80) %"class.std::deque.8"* @_ZNSt5dequeIS_IiSaIiEESaIS1_EE5frontEv(%"class.std::deque"* %26) #3
  invoke void @_ZNSt5dequeIiSaIiEEC2ERKS1_(%"class.std::deque.8"* %34, %"class.std::deque.8"* dereferenceable(80) %673)
          to label %674 unwind label %1111

; <label>:674:                                    ; preds = %672
  %675 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %37, i64 0, i64 0
  store i1 true, i1* %43, align 1
  store %"class.std::vector"* %675, %"class.std::vector"** %38, align 8
  %676 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %39, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.1, i64 0, i64 0), i32** %676, align 8
  %677 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %39, i32 0, i32 1
  store i64 2, i64* %677, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %40) #3
  %678 = bitcast %"class.std::initializer_list.11"* %39 to { i32*, i64 }*
  %679 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %678, i32 0, i32 0
  %680 = load i32*, i32** %679, align 8
  %681 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %678, i32 0, i32 1
  %682 = load i64, i64* %681, align 8
  invoke void @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::vector"* %675, i32* %680, i64 %682, %"class.std::allocator"* dereferenceable(1) %40)
          to label %683 unwind label %1115

; <label>:683:                                    ; preds = %674
  %684 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %675, i64 1
  store %"class.std::vector"* %684, %"class.std::vector"** %38, align 8
  %685 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %41, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.2, i64 0, i64 0), i32** %685, align 8
  %686 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %41, i32 0, i32 1
  store i64 2, i64* %686, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %42) #3
  %687 = bitcast %"class.std::initializer_list.11"* %41 to { i32*, i64 }*
  %688 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %687, i32 0, i32 0
  %689 = load i32*, i32** %688, align 8
  %690 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %687, i32 0, i32 1
  %691 = load i64, i64* %690, align 8
  invoke void @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::vector"* %684, i32* %689, i64 %691, %"class.std::allocator"* dereferenceable(1) %42)
          to label %692 unwind label %1119

; <label>:692:                                    ; preds = %683
  store i1 false, i1* %43, align 1
  %693 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %36, i32 0, i32 0
  %694 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %37, i64 0, i64 0
  store %"class.std::vector"* %694, %"class.std::vector"** %693, align 8
  %695 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %36, i32 0, i32 1
  store i64 2, i64* %695, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %44) #3
  %696 = bitcast %"class.std::initializer_list.12"* %36 to { %"class.std::vector"*, i64 }*
  %697 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %696, i32 0, i32 0
  %698 = load %"class.std::vector"*, %"class.std::vector"** %697, align 8
  %699 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %696, i32 0, i32 1
  %700 = load i64, i64* %699, align 8
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2ESt16initializer_listIS1_ERKS2_(%"class.std::vector.0"* %35, %"class.std::vector"* %698, i64 %700, %"class.std::allocator.2"* dereferenceable(1) %44)
          to label %701 unwind label %1165

; <label>:701:                                    ; preds = %692
  %702 = load i32, i32* @x.6
  %703 = load i32, i32* @y.7
  %704 = sub i32 0, 1
  %705 = add i32 %702, %704
  %706 = sub i32 %702, 1
  %707 = mul i32 %702, %705
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %703, 10
  %711 = and i1 %709, %710
  %712 = xor i1 %709, %710
  %713 = or i1 %711, %712
  %714 = or i1 %709, %710
  br i1 %713, label %715, label %2372

; <label>:715:                                    ; preds = %701, %2372
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %44) #3
  %716 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %37, i32 0, i32 0
  %717 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %716, i64 2
  %718 = load i32, i32* @x.6
  %719 = load i32, i32* @y.7
  %720 = sub i32 %718, 562541791
  %721 = sub i32 %720, 1
  %722 = add i32 %721, 562541791
  %723 = sub i32 %718, 1
  %724 = mul i32 %718, %722
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %719, 10
  %728 = xor i1 %726, true
  %729 = xor i1 %727, true
  %730 = xor i1 false, true
  %731 = and i1 %728, false
  %732 = and i1 %726, %730
  %733 = and i1 %729, false
  %734 = and i1 %727, %730
  %735 = or i1 %731, %732
  %736 = or i1 %733, %734
  %737 = xor i1 %735, %736
  %738 = or i1 %728, %729
  %739 = xor i1 %738, true
  %740 = or i1 false, %730
  %741 = and i1 %739, %740
  %742 = or i1 %737, %741
  %743 = or i1 %726, %727
  br i1 %742, label %744, label %2372

; <label>:744:                                    ; preds = %715
  br label %745

; <label>:745:                                    ; preds = %745, %744
  %746 = phi %"class.std::vector"* [ %717, %744 ], [ %747, %745 ]
  %747 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %746, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %747) #3
  %748 = icmp eq %"class.std::vector"* %747, %716
  br i1 %748, label %749, label %745

; <label>:749:                                    ; preds = %745
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %42) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %40) #3
  %750 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %47, i64 0, i64 0
  store i1 true, i1* %53, align 1
  store %"class.std::vector"* %750, %"class.std::vector"** %48, align 8
  %751 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %49, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.3, i64 0, i64 0), i32** %751, align 8
  %752 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %49, i32 0, i32 1
  store i64 2, i64* %752, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %50) #3
  %753 = bitcast %"class.std::initializer_list.11"* %49 to { i32*, i64 }*
  %754 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %753, i32 0, i32 0
  %755 = load i32*, i32** %754, align 8
  %756 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %753, i32 0, i32 1
  %757 = load i64, i64* %756, align 8
  invoke void @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::vector"* %750, i32* %755, i64 %757, %"class.std::allocator"* dereferenceable(1) %50)
          to label %758 unwind label %1377

; <label>:758:                                    ; preds = %749
  %759 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %750, i64 1
  store %"class.std::vector"* %759, %"class.std::vector"** %48, align 8
  %760 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %51, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.4, i64 0, i64 0), i32** %760, align 8
  %761 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %51, i32 0, i32 1
  store i64 2, i64* %761, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %52) #3
  %762 = bitcast %"class.std::initializer_list.11"* %51 to { i32*, i64 }*
  %763 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %762, i32 0, i32 0
  %764 = load i32*, i32** %763, align 8
  %765 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %762, i32 0, i32 1
  %766 = load i64, i64* %765, align 8
  invoke void @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::vector"* %759, i32* %764, i64 %766, %"class.std::allocator"* dereferenceable(1) %52)
          to label %767 unwind label %1411

; <label>:767:                                    ; preds = %758
  %768 = load i32, i32* @x.6
  %769 = load i32, i32* @y.7
  %770 = add i32 %768, 524150838
  %771 = sub i32 %770, 1
  %772 = sub i32 %771, 524150838
  %773 = sub i32 %768, 1
  %774 = mul i32 %768, %772
  %775 = urem i32 %774, 2
  %776 = icmp eq i32 %775, 0
  %777 = icmp slt i32 %769, 10
  %778 = and i1 %776, %777
  %779 = xor i1 %776, %777
  %780 = or i1 %778, %779
  %781 = or i1 %776, %777
  br i1 %780, label %782, label %2375

; <label>:782:                                    ; preds = %767, %2375
  store i1 false, i1* %53, align 1
  %783 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %46, i32 0, i32 0
  %784 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %47, i64 0, i64 0
  store %"class.std::vector"* %784, %"class.std::vector"** %783, align 8
  %785 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %46, i32 0, i32 1
  store i64 2, i64* %785, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %54) #3
  %786 = bitcast %"class.std::initializer_list.12"* %46 to { %"class.std::vector"*, i64 }*
  %787 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %786, i32 0, i32 0
  %788 = load %"class.std::vector"*, %"class.std::vector"** %787, align 8
  %789 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %786, i32 0, i32 1
  %790 = load i64, i64* %789, align 8
  %791 = load i32, i32* @x.6
  %792 = load i32, i32* @y.7
  %793 = sub i32 %791, -1990502691
  %794 = sub i32 %793, 1
  %795 = add i32 %794, -1990502691
  %796 = sub i32 %791, 1
  %797 = mul i32 %791, %795
  %798 = urem i32 %797, 2
  %799 = icmp eq i32 %798, 0
  %800 = icmp slt i32 %792, 10
  %801 = xor i1 %799, true
  %802 = xor i1 %800, true
  %803 = xor i1 false, true
  %804 = and i1 %801, false
  %805 = and i1 %799, %803
  %806 = and i1 %802, false
  %807 = and i1 %800, %803
  %808 = or i1 %804, %805
  %809 = or i1 %806, %807
  %810 = xor i1 %808, %809
  %811 = or i1 %801, %802
  %812 = xor i1 %811, true
  %813 = or i1 false, %803
  %814 = and i1 %812, %813
  %815 = or i1 %810, %814
  %816 = or i1 %799, %800
  br i1 %815, label %817, label %2375

; <label>:817:                                    ; preds = %782
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2ESt16initializer_listIS1_ERKS2_(%"class.std::vector.0"* %45, %"class.std::vector"* %788, i64 %790, %"class.std::allocator.2"* dereferenceable(1) %54)
          to label %818 unwind label %1415

; <label>:818:                                    ; preds = %817
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %54) #3
  %819 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %47, i32 0, i32 0
  %820 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %819, i64 2
  br label %821

; <label>:821:                                    ; preds = %854, %818
  %822 = phi %"class.std::vector"* [ %820, %818 ], [ %838, %854 ]
  %823 = load i32, i32* @x.6
  %824 = load i32, i32* @y.7
  %825 = add i32 %823, -1574787784
  %826 = sub i32 %825, 1
  %827 = sub i32 %826, -1574787784
  %828 = sub i32 %823, 1
  %829 = mul i32 %823, %827
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %824, 10
  %833 = and i1 %831, %832
  %834 = xor i1 %831, %832
  %835 = or i1 %833, %834
  %836 = or i1 %831, %832
  br i1 %835, label %837, label %2384

; <label>:837:                                    ; preds = %821, %2384
  %838 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %822, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %838) #3
  %839 = icmp eq %"class.std::vector"* %838, %819
  %840 = load i32, i32* @x.6
  %841 = load i32, i32* @y.7
  %842 = sub i32 %840, -2094047059
  %843 = sub i32 %842, 1
  %844 = add i32 %843, -2094047059
  %845 = sub i32 %840, 1
  %846 = mul i32 %840, %844
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %841, 10
  %850 = and i1 %848, %849
  %851 = xor i1 %848, %849
  %852 = or i1 %850, %851
  %853 = or i1 %848, %849
  br i1 %852, label %854, label %2384

; <label>:854:                                    ; preds = %837
  br i1 %839, label %855, label %821

; <label>:855:                                    ; preds = %854
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %52) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %50) #3
  store %"class.std::vector.0"* %35, %"class.std::vector.0"** %55, align 8
  %856 = load %"class.std::vector.0"*, %"class.std::vector.0"** %55, align 8
  %857 = call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE5beginEv(%"class.std::vector.0"* %856) #3
  %858 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %56, i32 0, i32 0
  store %"class.std::vector"* %857, %"class.std::vector"** %858, align 8
  %859 = load %"class.std::vector.0"*, %"class.std::vector.0"** %55, align 8
  %860 = call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv(%"class.std::vector.0"* %859) #3
  %861 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %57, i32 0, i32 0
  store %"class.std::vector"* %860, %"class.std::vector"** %861, align 8
  br label %862

; <label>:862:                                    ; preds = %1691, %855
  %863 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %56, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %57) #3
  br i1 %863, label %864, label %1692

; <label>:864:                                    ; preds = %862
  %865 = call dereferenceable(24) %"class.std::vector"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %56) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector"* %58, %"class.std::vector"* dereferenceable(24) %865)
          to label %866 unwind label %1568

; <label>:866:                                    ; preds = %864
  %867 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %868 = load i32, i32* %867, align 4
  %869 = sext i32 %868 to i64
  %870 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %7, i64 %869) #3
  %871 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %872 = load i32, i32* %871, align 4
  %873 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %58, i64 0) #3
  %874 = load i32, i32* %873, align 4
  %875 = sub i32 0, %872
  %876 = sub i32 0, %874
  %877 = add i32 %875, %876
  %878 = sub i32 0, %877
  %879 = add nsw i32 %872, %874
  %880 = sext i32 %878 to i64
  %881 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %870, i64 %880) #3
  %882 = load i32, i32* %881, align 4
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %884, label %1581

; <label>:884:                                    ; preds = %866
  %885 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %886 = load i32, i32* %885, align 4
  %887 = sext i32 %886 to i64
  %888 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %887) #3
  %889 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %890 = load i32, i32* %889, align 4
  %891 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %58, i64 1) #3
  %892 = load i32, i32* %891, align 4
  %893 = add i32 %890, -1104914341
  %894 = add i32 %893, %892
  %895 = sub i32 %894, -1104914341
  %896 = add nsw i32 %890, %892
  %897 = sext i32 %895 to i64
  %898 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %888, i64 %897) #3
  %899 = load i32, i32* %898, align 4
  %900 = icmp eq i32 %899, 2147483647
  br i1 %900, label %901, label %1581

; <label>:901:                                    ; preds = %884
  %902 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %903 = load i32, i32* %902, align 4
  %904 = sext i32 %903 to i64
  %905 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %904) #3
  %906 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %907 = load i32, i32* %906, align 4
  %908 = sext i32 %907 to i64
  %909 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %905, i64 %908) #3
  %910 = load i32, i32* %909, align 4
  %911 = sub i32 %910, 1802082032
  %912 = add i32 %911, 1
  %913 = add i32 %912, 1802082032
  %914 = add nsw i32 %910, 1
  %915 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %916 = load i32, i32* %915, align 4
  %917 = sext i32 %916 to i64
  %918 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %917) #3
  %919 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %920 = load i32, i32* %919, align 4
  %921 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %58, i64 1) #3
  %922 = load i32, i32* %921, align 4
  %923 = add i32 %920, 1672256687
  %924 = add i32 %923, %922
  %925 = sub i32 %924, 1672256687
  %926 = add nsw i32 %920, %922
  %927 = sext i32 %925 to i64
  %928 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %918, i64 %927) #3
  store i32 %913, i32* %928, align 4
  %929 = getelementptr inbounds [2 x i32], [2 x i32]* %61, i64 0, i64 0
  %930 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %931 = load i32, i32* %930, align 4
  store i32 %931, i32* %929, align 4
  %932 = getelementptr inbounds i32, i32* %929, i64 1
  %933 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %934 = load i32, i32* %933, align 4
  %935 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %58, i64 1) #3
  %936 = load i32, i32* %935, align 4
  %937 = sub i32 %934, -109785128
  %938 = add i32 %937, %936
  %939 = add i32 %938, -109785128
  %940 = add nsw i32 %934, %936
  store i32 %939, i32* %932, align 4
  %941 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %60, i32 0, i32 0
  %942 = getelementptr inbounds [2 x i32], [2 x i32]* %61, i64 0, i64 0
  store i32* %942, i32** %941, align 8
  %943 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %60, i32 0, i32 1
  store i64 2, i64* %943, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %62) #3
  %944 = bitcast %"class.std::initializer_list.11"* %60 to { i32*, i64 }*
  %945 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %944, i32 0, i32 0
  %946 = load i32*, i32** %945, align 8
  %947 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %944, i32 0, i32 1
  %948 = load i64, i64* %947, align 8
  invoke void @_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::deque.8"* %59, i32* %946, i64 %948, %"class.std::allocator"* dereferenceable(1) %62)
          to label %949 unwind label %1572

; <label>:949:                                    ; preds = %901
  invoke void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE9push_backEOS1_(%"class.std::deque"* %26, %"class.std::deque.8"* dereferenceable(80) %59)
          to label %950 unwind label %1576

; <label>:950:                                    ; preds = %949
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %59) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %62) #3
  br label %1581

; <label>:951:                                    ; preds = %589
  %952 = load i32, i32* @x.6
  %953 = load i32, i32* @y.7
  %954 = sub i32 0, 1
  %955 = add i32 %952, %954
  %956 = sub i32 %952, 1
  %957 = mul i32 %952, %955
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %953, 10
  %961 = xor i1 %959, true
  %962 = xor i1 %960, true
  %963 = xor i1 true, true
  %964 = and i1 %961, true
  %965 = and i1 %959, %963
  %966 = and i1 %962, true
  %967 = and i1 %960, %963
  %968 = or i1 %964, %965
  %969 = or i1 %966, %967
  %970 = xor i1 %968, %969
  %971 = or i1 %961, %962
  %972 = xor i1 %971, true
  %973 = or i1 true, %963
  %974 = and i1 %972, %973
  %975 = or i1 %970, %974
  %976 = or i1 %959, %960
  br i1 %975, label %977, label %2387

; <label>:977:                                    ; preds = %951, %2387
  %978 = landingpad { i8*, i32 }
          cleanup
  %979 = extractvalue { i8*, i32 } %978, 0
  store i8* %979, i8** %5, align 8
  %980 = extractvalue { i8*, i32 } %978, 1
  store i32 %980, i32* %6, align 4
  %981 = load i32, i32* @x.6
  %982 = load i32, i32* @y.7
  %983 = add i32 %981, -825188695
  %984 = sub i32 %983, 1
  %985 = sub i32 %984, -825188695
  %986 = sub i32 %981, 1
  %987 = mul i32 %981, %985
  %988 = urem i32 %987, 2
  %989 = icmp eq i32 %988, 0
  %990 = icmp slt i32 %982, 10
  %991 = xor i1 %989, true
  %992 = xor i1 %990, true
  %993 = xor i1 false, true
  %994 = and i1 %991, false
  %995 = and i1 %989, %993
  %996 = and i1 %992, false
  %997 = and i1 %990, %993
  %998 = or i1 %994, %995
  %999 = or i1 %996, %997
  %1000 = xor i1 %998, %999
  %1001 = or i1 %991, %992
  %1002 = xor i1 %1001, true
  %1003 = or i1 false, %993
  %1004 = and i1 %1002, %1003
  %1005 = or i1 %1000, %1004
  %1006 = or i1 %989, %990
  br i1 %1005, label %1007, label %2387

; <label>:1007:                                   ; preds = %977
  br label %1012

; <label>:1008:                                   ; preds = %594
  %1009 = landingpad { i8*, i32 }
          cleanup
  %1010 = extractvalue { i8*, i32 } %1009, 0
  store i8* %1010, i8** %5, align 8
  %1011 = extractvalue { i8*, i32 } %1009, 1
  store i32 %1011, i32* %6, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %25) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %22) #3
  br label %1012

; <label>:1012:                                   ; preds = %1008, %1007
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %24) #3
  br label %2193

; <label>:1013:                                   ; preds = %595
  %1014 = load i32, i32* @x.6
  %1015 = load i32, i32* @y.7
  %1016 = sub i32 %1014, 1413360875
  %1017 = sub i32 %1016, 1
  %1018 = add i32 %1017, 1413360875
  %1019 = sub i32 %1014, 1
  %1020 = mul i32 %1014, %1018
  %1021 = urem i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  %1023 = icmp slt i32 %1015, 10
  %1024 = and i1 %1022, %1023
  %1025 = xor i1 %1022, %1023
  %1026 = or i1 %1024, %1025
  %1027 = or i1 %1022, %1023
  br i1 %1026, label %1028, label %2391

; <label>:1028:                                   ; preds = %1013, %2391
  %1029 = landingpad { i8*, i32 }
          cleanup
  %1030 = extractvalue { i8*, i32 } %1029, 0
  store i8* %1030, i8** %5, align 8
  %1031 = extractvalue { i8*, i32 } %1029, 1
  store i32 %1031, i32* %6, align 4
  %1032 = load i32, i32* @x.6
  %1033 = load i32, i32* @y.7
  %1034 = sub i32 %1032, 1036932423
  %1035 = sub i32 %1034, 1
  %1036 = add i32 %1035, 1036932423
  %1037 = sub i32 %1032, 1
  %1038 = mul i32 %1032, %1036
  %1039 = urem i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = icmp slt i32 %1033, 10
  %1042 = and i1 %1040, %1041
  %1043 = xor i1 %1040, %1041
  %1044 = or i1 %1042, %1043
  %1045 = or i1 %1040, %1041
  br i1 %1044, label %1046, label %2391

; <label>:1046:                                   ; preds = %1028
  br label %1058

; <label>:1047:                                   ; preds = %606
  %1048 = landingpad { i8*, i32 }
          cleanup
  %1049 = extractvalue { i8*, i32 } %1048, 0
  store i8* %1049, i8** %5, align 8
  %1050 = extractvalue { i8*, i32 } %1048, 1
  store i32 %1050, i32* %6, align 4
  call void @_ZNSaISt5dequeIiSaIiEEED2Ev(%"class.std::allocator.5"* %33) #3
  %1051 = getelementptr inbounds [1 x %"class.std::deque.8"], [1 x %"class.std::deque.8"]* %28, i32 0, i32 0
  %1052 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %1051, i64 1
  br label %1053

; <label>:1053:                                   ; preds = %1053, %1047
  %1054 = phi %"class.std::deque.8"* [ %1052, %1047 ], [ %1055, %1053 ]
  %1055 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %1054, i64 -1
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %1055) #3
  %1056 = icmp eq %"class.std::deque.8"* %1055, %1051
  br i1 %1056, label %1057, label %1053

; <label>:1057:                                   ; preds = %1053
  br label %1058

; <label>:1058:                                   ; preds = %1057, %1046
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %31) #3
  %1059 = load i1, i1* %32, align 1
  br i1 %1059, label %1060, label %1110

; <label>:1060:                                   ; preds = %1058
  %1061 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %1062 = icmp eq %"class.std::deque.8"* %598, %1061
  br i1 %1062, label %1109, label %1063

; <label>:1063:                                   ; preds = %1108, %1060
  %1064 = phi %"class.std::deque.8"* [ %1061, %1060 ], [ %1080, %1108 ]
  %1065 = load i32, i32* @x.6
  %1066 = load i32, i32* @y.7
  %1067 = add i32 %1065, 285222462
  %1068 = sub i32 %1067, 1
  %1069 = sub i32 %1068, 285222462
  %1070 = sub i32 %1065, 1
  %1071 = mul i32 %1065, %1069
  %1072 = urem i32 %1071, 2
  %1073 = icmp eq i32 %1072, 0
  %1074 = icmp slt i32 %1066, 10
  %1075 = and i1 %1073, %1074
  %1076 = xor i1 %1073, %1074
  %1077 = or i1 %1075, %1076
  %1078 = or i1 %1073, %1074
  br i1 %1077, label %1079, label %2395

; <label>:1079:                                   ; preds = %1063, %2395
  %1080 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %1064, i64 -1
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %1080) #3
  %1081 = icmp eq %"class.std::deque.8"* %1080, %598
  %1082 = load i32, i32* @x.6
  %1083 = load i32, i32* @y.7
  %1084 = sub i32 %1082, 1391425339
  %1085 = sub i32 %1084, 1
  %1086 = add i32 %1085, 1391425339
  %1087 = sub i32 %1082, 1
  %1088 = mul i32 %1082, %1086
  %1089 = urem i32 %1088, 2
  %1090 = icmp eq i32 %1089, 0
  %1091 = icmp slt i32 %1083, 10
  %1092 = xor i1 %1090, true
  %1093 = xor i1 %1091, true
  %1094 = xor i1 true, true
  %1095 = and i1 %1092, true
  %1096 = and i1 %1090, %1094
  %1097 = and i1 %1093, true
  %1098 = and i1 %1091, %1094
  %1099 = or i1 %1095, %1096
  %1100 = or i1 %1097, %1098
  %1101 = xor i1 %1099, %1100
  %1102 = or i1 %1092, %1093
  %1103 = xor i1 %1102, true
  %1104 = or i1 true, %1094
  %1105 = and i1 %1103, %1104
  %1106 = or i1 %1101, %1105
  %1107 = or i1 %1090, %1091
  br i1 %1106, label %1108, label %2395

; <label>:1108:                                   ; preds = %1079
  br i1 %1081, label %1109, label %1063

; <label>:1109:                                   ; preds = %1108, %1060
  br label %1110

; <label>:1110:                                   ; preds = %1109, %1058
  br label %2192

; <label>:1111:                                   ; preds = %2147, %672
  %1112 = landingpad { i8*, i32 }
          cleanup
  %1113 = extractvalue { i8*, i32 } %1112, 0
  store i8* %1113, i8** %5, align 8
  %1114 = extractvalue { i8*, i32 } %1112, 1
  store i32 %1114, i32* %6, align 4
  br label %2191

; <label>:1115:                                   ; preds = %674
  %1116 = landingpad { i8*, i32 }
          cleanup
  %1117 = extractvalue { i8*, i32 } %1116, 0
  store i8* %1117, i8** %5, align 8
  %1118 = extractvalue { i8*, i32 } %1116, 1
  store i32 %1118, i32* %6, align 4
  br label %1313

; <label>:1119:                                   ; preds = %683
  %1120 = load i32, i32* @x.6
  %1121 = load i32, i32* @y.7
  %1122 = sub i32 %1120, 1850593642
  %1123 = sub i32 %1122, 1
  %1124 = add i32 %1123, 1850593642
  %1125 = sub i32 %1120, 1
  %1126 = mul i32 %1120, %1124
  %1127 = urem i32 %1126, 2
  %1128 = icmp eq i32 %1127, 0
  %1129 = icmp slt i32 %1121, 10
  %1130 = and i1 %1128, %1129
  %1131 = xor i1 %1128, %1129
  %1132 = or i1 %1130, %1131
  %1133 = or i1 %1128, %1129
  br i1 %1132, label %1134, label %2398

; <label>:1134:                                   ; preds = %1119, %2398
  %1135 = landingpad { i8*, i32 }
          cleanup
  %1136 = extractvalue { i8*, i32 } %1135, 0
  store i8* %1136, i8** %5, align 8
  %1137 = extractvalue { i8*, i32 } %1135, 1
  store i32 %1137, i32* %6, align 4
  %1138 = load i32, i32* @x.6
  %1139 = load i32, i32* @y.7
  %1140 = add i32 %1138, -1115420709
  %1141 = sub i32 %1140, 1
  %1142 = sub i32 %1141, -1115420709
  %1143 = sub i32 %1138, 1
  %1144 = mul i32 %1138, %1142
  %1145 = urem i32 %1144, 2
  %1146 = icmp eq i32 %1145, 0
  %1147 = icmp slt i32 %1139, 10
  %1148 = xor i1 %1146, true
  %1149 = xor i1 %1147, true
  %1150 = xor i1 true, true
  %1151 = and i1 %1148, true
  %1152 = and i1 %1146, %1150
  %1153 = and i1 %1149, true
  %1154 = and i1 %1147, %1150
  %1155 = or i1 %1151, %1152
  %1156 = or i1 %1153, %1154
  %1157 = xor i1 %1155, %1156
  %1158 = or i1 %1148, %1149
  %1159 = xor i1 %1158, true
  %1160 = or i1 true, %1150
  %1161 = and i1 %1159, %1160
  %1162 = or i1 %1157, %1161
  %1163 = or i1 %1146, %1147
  br i1 %1162, label %1164, label %2398

; <label>:1164:                                   ; preds = %1134
  br label %1258

; <label>:1165:                                   ; preds = %692
  %1166 = landingpad { i8*, i32 }
          cleanup
  %1167 = extractvalue { i8*, i32 } %1166, 0
  store i8* %1167, i8** %5, align 8
  %1168 = extractvalue { i8*, i32 } %1166, 1
  store i32 %1168, i32* %6, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %44) #3
  %1169 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %37, i32 0, i32 0
  %1170 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1169, i64 2
  br label %1171

; <label>:1171:                                   ; preds = %1202, %1165
  %1172 = phi %"class.std::vector"* [ %1170, %1165 ], [ %1187, %1202 ]
  %1173 = load i32, i32* @x.6
  %1174 = load i32, i32* @y.7
  %1175 = sub i32 0, 1
  %1176 = add i32 %1173, %1175
  %1177 = sub i32 %1173, 1
  %1178 = mul i32 %1173, %1176
  %1179 = urem i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = icmp slt i32 %1174, 10
  %1182 = and i1 %1180, %1181
  %1183 = xor i1 %1180, %1181
  %1184 = or i1 %1182, %1183
  %1185 = or i1 %1180, %1181
  br i1 %1184, label %1186, label %2402

; <label>:1186:                                   ; preds = %1171, %2402
  %1187 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1172, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %1187) #3
  %1188 = icmp eq %"class.std::vector"* %1187, %1169
  %1189 = load i32, i32* @x.6
  %1190 = load i32, i32* @y.7
  %1191 = sub i32 0, 1
  %1192 = add i32 %1189, %1191
  %1193 = sub i32 %1189, 1
  %1194 = mul i32 %1189, %1192
  %1195 = urem i32 %1194, 2
  %1196 = icmp eq i32 %1195, 0
  %1197 = icmp slt i32 %1190, 10
  %1198 = and i1 %1196, %1197
  %1199 = xor i1 %1196, %1197
  %1200 = or i1 %1198, %1199
  %1201 = or i1 %1196, %1197
  br i1 %1200, label %1202, label %2402

; <label>:1202:                                   ; preds = %1186
  br i1 %1188, label %1203, label %1171

; <label>:1203:                                   ; preds = %1202
  %1204 = load i32, i32* @x.6
  %1205 = load i32, i32* @y.7
  %1206 = sub i32 %1204, 753525751
  %1207 = sub i32 %1206, 1
  %1208 = add i32 %1207, 753525751
  %1209 = sub i32 %1204, 1
  %1210 = mul i32 %1204, %1208
  %1211 = urem i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  %1213 = icmp slt i32 %1205, 10
  %1214 = xor i1 %1212, true
  %1215 = xor i1 %1213, true
  %1216 = xor i1 false, true
  %1217 = and i1 %1214, false
  %1218 = and i1 %1212, %1216
  %1219 = and i1 %1215, false
  %1220 = and i1 %1213, %1216
  %1221 = or i1 %1217, %1218
  %1222 = or i1 %1219, %1220
  %1223 = xor i1 %1221, %1222
  %1224 = or i1 %1214, %1215
  %1225 = xor i1 %1224, true
  %1226 = or i1 false, %1216
  %1227 = and i1 %1225, %1226
  %1228 = or i1 %1223, %1227
  %1229 = or i1 %1212, %1213
  br i1 %1228, label %1230, label %2405

; <label>:1230:                                   ; preds = %1203, %2405
  %1231 = load i32, i32* @x.6
  %1232 = load i32, i32* @y.7
  %1233 = add i32 %1231, 2073139596
  %1234 = sub i32 %1233, 1
  %1235 = sub i32 %1234, 2073139596
  %1236 = sub i32 %1231, 1
  %1237 = mul i32 %1231, %1235
  %1238 = urem i32 %1237, 2
  %1239 = icmp eq i32 %1238, 0
  %1240 = icmp slt i32 %1232, 10
  %1241 = xor i1 %1239, true
  %1242 = xor i1 %1240, true
  %1243 = xor i1 false, true
  %1244 = and i1 %1241, false
  %1245 = and i1 %1239, %1243
  %1246 = and i1 %1242, false
  %1247 = and i1 %1240, %1243
  %1248 = or i1 %1244, %1245
  %1249 = or i1 %1246, %1247
  %1250 = xor i1 %1248, %1249
  %1251 = or i1 %1241, %1242
  %1252 = xor i1 %1251, true
  %1253 = or i1 false, %1243
  %1254 = and i1 %1252, %1253
  %1255 = or i1 %1250, %1254
  %1256 = or i1 %1239, %1240
  br i1 %1255, label %1257, label %2405

; <label>:1257:                                   ; preds = %1230
  br label %1258

; <label>:1258:                                   ; preds = %1257, %1164
  %1259 = load i32, i32* @x.6
  %1260 = load i32, i32* @y.7
  %1261 = sub i32 %1259, 1315270919
  %1262 = sub i32 %1261, 1
  %1263 = add i32 %1262, 1315270919
  %1264 = sub i32 %1259, 1
  %1265 = mul i32 %1259, %1263
  %1266 = urem i32 %1265, 2
  %1267 = icmp eq i32 %1266, 0
  %1268 = icmp slt i32 %1260, 10
  %1269 = xor i1 %1267, true
  %1270 = xor i1 %1268, true
  %1271 = xor i1 false, true
  %1272 = and i1 %1269, false
  %1273 = and i1 %1267, %1271
  %1274 = and i1 %1270, false
  %1275 = and i1 %1268, %1271
  %1276 = or i1 %1272, %1273
  %1277 = or i1 %1274, %1275
  %1278 = xor i1 %1276, %1277
  %1279 = or i1 %1269, %1270
  %1280 = xor i1 %1279, true
  %1281 = or i1 false, %1271
  %1282 = and i1 %1280, %1281
  %1283 = or i1 %1278, %1282
  %1284 = or i1 %1267, %1268
  br i1 %1283, label %1285, label %2406

; <label>:1285:                                   ; preds = %1258, %2406
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %42) #3
  %1286 = load i32, i32* @x.6
  %1287 = load i32, i32* @y.7
  %1288 = sub i32 %1286, -2026286163
  %1289 = sub i32 %1288, 1
  %1290 = add i32 %1289, -2026286163
  %1291 = sub i32 %1286, 1
  %1292 = mul i32 %1286, %1290
  %1293 = urem i32 %1292, 2
  %1294 = icmp eq i32 %1293, 0
  %1295 = icmp slt i32 %1287, 10
  %1296 = xor i1 %1294, true
  %1297 = xor i1 %1295, true
  %1298 = xor i1 false, true
  %1299 = and i1 %1296, false
  %1300 = and i1 %1294, %1298
  %1301 = and i1 %1297, false
  %1302 = and i1 %1295, %1298
  %1303 = or i1 %1299, %1300
  %1304 = or i1 %1301, %1302
  %1305 = xor i1 %1303, %1304
  %1306 = or i1 %1296, %1297
  %1307 = xor i1 %1306, true
  %1308 = or i1 false, %1298
  %1309 = and i1 %1307, %1308
  %1310 = or i1 %1305, %1309
  %1311 = or i1 %1294, %1295
  br i1 %1310, label %1312, label %2406

; <label>:1312:                                   ; preds = %1285
  br label %1313

; <label>:1313:                                   ; preds = %1312, %1115
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %40) #3
  %1314 = load i1, i1* %43, align 1
  br i1 %1314, label %1315, label %1323

; <label>:1315:                                   ; preds = %1313
  %1316 = load %"class.std::vector"*, %"class.std::vector"** %38, align 8
  %1317 = icmp eq %"class.std::vector"* %675, %1316
  br i1 %1317, label %1322, label %1318

; <label>:1318:                                   ; preds = %1318, %1315
  %1319 = phi %"class.std::vector"* [ %1316, %1315 ], [ %1320, %1318 ]
  %1320 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1319, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %1320) #3
  %1321 = icmp eq %"class.std::vector"* %1320, %675
  br i1 %1321, label %1322, label %1318

; <label>:1322:                                   ; preds = %1318, %1315
  br label %1323

; <label>:1323:                                   ; preds = %1322, %1313
  %1324 = load i32, i32* @x.6
  %1325 = load i32, i32* @y.7
  %1326 = sub i32 0, 1
  %1327 = add i32 %1324, %1326
  %1328 = sub i32 %1324, 1
  %1329 = mul i32 %1324, %1327
  %1330 = urem i32 %1329, 2
  %1331 = icmp eq i32 %1330, 0
  %1332 = icmp slt i32 %1325, 10
  %1333 = xor i1 %1331, true
  %1334 = xor i1 %1332, true
  %1335 = xor i1 false, true
  %1336 = and i1 %1333, false
  %1337 = and i1 %1331, %1335
  %1338 = and i1 %1334, false
  %1339 = and i1 %1332, %1335
  %1340 = or i1 %1336, %1337
  %1341 = or i1 %1338, %1339
  %1342 = xor i1 %1340, %1341
  %1343 = or i1 %1333, %1334
  %1344 = xor i1 %1343, true
  %1345 = or i1 false, %1335
  %1346 = and i1 %1344, %1345
  %1347 = or i1 %1342, %1346
  %1348 = or i1 %1331, %1332
  br i1 %1347, label %1349, label %2407

; <label>:1349:                                   ; preds = %1323, %2407
  %1350 = load i32, i32* @x.6
  %1351 = load i32, i32* @y.7
  %1352 = sub i32 %1350, 1958817588
  %1353 = sub i32 %1352, 1
  %1354 = add i32 %1353, 1958817588
  %1355 = sub i32 %1350, 1
  %1356 = mul i32 %1350, %1354
  %1357 = urem i32 %1356, 2
  %1358 = icmp eq i32 %1357, 0
  %1359 = icmp slt i32 %1351, 10
  %1360 = xor i1 %1358, true
  %1361 = xor i1 %1359, true
  %1362 = xor i1 false, true
  %1363 = and i1 %1360, false
  %1364 = and i1 %1358, %1362
  %1365 = and i1 %1361, false
  %1366 = and i1 %1359, %1362
  %1367 = or i1 %1363, %1364
  %1368 = or i1 %1365, %1366
  %1369 = xor i1 %1367, %1368
  %1370 = or i1 %1360, %1361
  %1371 = xor i1 %1370, true
  %1372 = or i1 false, %1362
  %1373 = and i1 %1371, %1372
  %1374 = or i1 %1369, %1373
  %1375 = or i1 %1358, %1359
  br i1 %1374, label %1376, label %2407

; <label>:1376:                                   ; preds = %1349
  br label %1988

; <label>:1377:                                   ; preds = %749
  %1378 = load i32, i32* @x.6
  %1379 = load i32, i32* @y.7
  %1380 = sub i32 %1378, 1165407224
  %1381 = sub i32 %1380, 1
  %1382 = add i32 %1381, 1165407224
  %1383 = sub i32 %1378, 1
  %1384 = mul i32 %1378, %1382
  %1385 = urem i32 %1384, 2
  %1386 = icmp eq i32 %1385, 0
  %1387 = icmp slt i32 %1379, 10
  %1388 = and i1 %1386, %1387
  %1389 = xor i1 %1386, %1387
  %1390 = or i1 %1388, %1389
  %1391 = or i1 %1386, %1387
  br i1 %1390, label %1392, label %2408

; <label>:1392:                                   ; preds = %1377, %2408
  %1393 = landingpad { i8*, i32 }
          cleanup
  %1394 = extractvalue { i8*, i32 } %1393, 0
  store i8* %1394, i8** %5, align 8
  %1395 = extractvalue { i8*, i32 } %1393, 1
  store i32 %1395, i32* %6, align 4
  %1396 = load i32, i32* @x.6
  %1397 = load i32, i32* @y.7
  %1398 = add i32 %1396, -1356602698
  %1399 = sub i32 %1398, 1
  %1400 = sub i32 %1399, -1356602698
  %1401 = sub i32 %1396, 1
  %1402 = mul i32 %1396, %1400
  %1403 = urem i32 %1402, 2
  %1404 = icmp eq i32 %1403, 0
  %1405 = icmp slt i32 %1397, 10
  %1406 = and i1 %1404, %1405
  %1407 = xor i1 %1404, %1405
  %1408 = or i1 %1406, %1407
  %1409 = or i1 %1404, %1405
  br i1 %1408, label %1410, label %2408

; <label>:1410:                                   ; preds = %1392
  br label %1457

; <label>:1411:                                   ; preds = %758
  %1412 = landingpad { i8*, i32 }
          cleanup
  %1413 = extractvalue { i8*, i32 } %1412, 0
  store i8* %1413, i8** %5, align 8
  %1414 = extractvalue { i8*, i32 } %1412, 1
  store i32 %1414, i32* %6, align 4
  br label %1456

; <label>:1415:                                   ; preds = %817
  %1416 = landingpad { i8*, i32 }
          cleanup
  %1417 = extractvalue { i8*, i32 } %1416, 0
  store i8* %1417, i8** %5, align 8
  %1418 = extractvalue { i8*, i32 } %1416, 1
  store i32 %1418, i32* %6, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %54) #3
  %1419 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %47, i32 0, i32 0
  %1420 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1419, i64 2
  br label %1421

; <label>:1421:                                   ; preds = %1421, %1415
  %1422 = phi %"class.std::vector"* [ %1420, %1415 ], [ %1423, %1421 ]
  %1423 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1422, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %1423) #3
  %1424 = icmp eq %"class.std::vector"* %1423, %1419
  br i1 %1424, label %1425, label %1421

; <label>:1425:                                   ; preds = %1421
  %1426 = load i32, i32* @x.6
  %1427 = load i32, i32* @y.7
  %1428 = sub i32 %1426, 636997159
  %1429 = sub i32 %1428, 1
  %1430 = add i32 %1429, 636997159
  %1431 = sub i32 %1426, 1
  %1432 = mul i32 %1426, %1430
  %1433 = urem i32 %1432, 2
  %1434 = icmp eq i32 %1433, 0
  %1435 = icmp slt i32 %1427, 10
  %1436 = and i1 %1434, %1435
  %1437 = xor i1 %1434, %1435
  %1438 = or i1 %1436, %1437
  %1439 = or i1 %1434, %1435
  br i1 %1438, label %1440, label %2412

; <label>:1440:                                   ; preds = %1425, %2412
  %1441 = load i32, i32* @x.6
  %1442 = load i32, i32* @y.7
  %1443 = sub i32 %1441, -984387182
  %1444 = sub i32 %1443, 1
  %1445 = add i32 %1444, -984387182
  %1446 = sub i32 %1441, 1
  %1447 = mul i32 %1441, %1445
  %1448 = urem i32 %1447, 2
  %1449 = icmp eq i32 %1448, 0
  %1450 = icmp slt i32 %1442, 10
  %1451 = and i1 %1449, %1450
  %1452 = xor i1 %1449, %1450
  %1453 = or i1 %1451, %1452
  %1454 = or i1 %1449, %1450
  br i1 %1453, label %1455, label %2412

; <label>:1455:                                   ; preds = %1440
  br label %1456

; <label>:1456:                                   ; preds = %1455, %1411
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %52) #3
  br label %1457

; <label>:1457:                                   ; preds = %1456, %1410
  %1458 = load i32, i32* @x.6
  %1459 = load i32, i32* @y.7
  %1460 = sub i32 %1458, 1857462353
  %1461 = sub i32 %1460, 1
  %1462 = add i32 %1461, 1857462353
  %1463 = sub i32 %1458, 1
  %1464 = mul i32 %1458, %1462
  %1465 = urem i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = icmp slt i32 %1459, 10
  %1468 = and i1 %1466, %1467
  %1469 = xor i1 %1466, %1467
  %1470 = or i1 %1468, %1469
  %1471 = or i1 %1466, %1467
  br i1 %1470, label %1472, label %2413

; <label>:1472:                                   ; preds = %1457, %2413
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %50) #3
  %1473 = load i1, i1* %53, align 1
  %1474 = load i32, i32* @x.6
  %1475 = load i32, i32* @y.7
  %1476 = sub i32 %1474, -1083690448
  %1477 = sub i32 %1476, 1
  %1478 = add i32 %1477, -1083690448
  %1479 = sub i32 %1474, 1
  %1480 = mul i32 %1474, %1478
  %1481 = urem i32 %1480, 2
  %1482 = icmp eq i32 %1481, 0
  %1483 = icmp slt i32 %1475, 10
  %1484 = and i1 %1482, %1483
  %1485 = xor i1 %1482, %1483
  %1486 = or i1 %1484, %1485
  %1487 = or i1 %1482, %1483
  br i1 %1486, label %1488, label %2413

; <label>:1488:                                   ; preds = %1472
  br i1 %1473, label %1489, label %1526

; <label>:1489:                                   ; preds = %1488
  %1490 = load %"class.std::vector"*, %"class.std::vector"** %48, align 8
  %1491 = icmp eq %"class.std::vector"* %750, %1490
  br i1 %1491, label %1525, label %1492

; <label>:1492:                                   ; preds = %1524, %1489
  %1493 = phi %"class.std::vector"* [ %1490, %1489 ], [ %1508, %1524 ]
  %1494 = load i32, i32* @x.6
  %1495 = load i32, i32* @y.7
  %1496 = sub i32 0, 1
  %1497 = add i32 %1494, %1496
  %1498 = sub i32 %1494, 1
  %1499 = mul i32 %1494, %1497
  %1500 = urem i32 %1499, 2
  %1501 = icmp eq i32 %1500, 0
  %1502 = icmp slt i32 %1495, 10
  %1503 = and i1 %1501, %1502
  %1504 = xor i1 %1501, %1502
  %1505 = or i1 %1503, %1504
  %1506 = or i1 %1501, %1502
  br i1 %1505, label %1507, label %2415

; <label>:1507:                                   ; preds = %1492, %2415
  %1508 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1493, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %1508) #3
  %1509 = icmp eq %"class.std::vector"* %1508, %750
  %1510 = load i32, i32* @x.6
  %1511 = load i32, i32* @y.7
  %1512 = sub i32 %1510, -1194928339
  %1513 = sub i32 %1512, 1
  %1514 = add i32 %1513, -1194928339
  %1515 = sub i32 %1510, 1
  %1516 = mul i32 %1510, %1514
  %1517 = urem i32 %1516, 2
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp slt i32 %1511, 10
  %1520 = and i1 %1518, %1519
  %1521 = xor i1 %1518, %1519
  %1522 = or i1 %1520, %1521
  %1523 = or i1 %1518, %1519
  br i1 %1522, label %1524, label %2415

; <label>:1524:                                   ; preds = %1507
  br i1 %1509, label %1525, label %1492

; <label>:1525:                                   ; preds = %1524, %1489
  br label %1526

; <label>:1526:                                   ; preds = %1525, %1488
  %1527 = load i32, i32* @x.6
  %1528 = load i32, i32* @y.7
  %1529 = sub i32 0, 1
  %1530 = add i32 %1527, %1529
  %1531 = sub i32 %1527, 1
  %1532 = mul i32 %1527, %1530
  %1533 = urem i32 %1532, 2
  %1534 = icmp eq i32 %1533, 0
  %1535 = icmp slt i32 %1528, 10
  %1536 = xor i1 %1534, true
  %1537 = xor i1 %1535, true
  %1538 = xor i1 false, true
  %1539 = and i1 %1536, false
  %1540 = and i1 %1534, %1538
  %1541 = and i1 %1537, false
  %1542 = and i1 %1535, %1538
  %1543 = or i1 %1539, %1540
  %1544 = or i1 %1541, %1542
  %1545 = xor i1 %1543, %1544
  %1546 = or i1 %1536, %1537
  %1547 = xor i1 %1546, true
  %1548 = or i1 false, %1538
  %1549 = and i1 %1547, %1548
  %1550 = or i1 %1545, %1549
  %1551 = or i1 %1534, %1535
  br i1 %1550, label %1552, label %2418

; <label>:1552:                                   ; preds = %1526, %2418
  %1553 = load i32, i32* @x.6
  %1554 = load i32, i32* @y.7
  %1555 = sub i32 %1553, 1816962099
  %1556 = sub i32 %1555, 1
  %1557 = add i32 %1556, 1816962099
  %1558 = sub i32 %1553, 1
  %1559 = mul i32 %1553, %1557
  %1560 = urem i32 %1559, 2
  %1561 = icmp eq i32 %1560, 0
  %1562 = icmp slt i32 %1554, 10
  %1563 = and i1 %1561, %1562
  %1564 = xor i1 %1561, %1562
  %1565 = or i1 %1563, %1564
  %1566 = or i1 %1561, %1562
  br i1 %1565, label %1567, label %2418

; <label>:1567:                                   ; preds = %1552
  br label %1987

; <label>:1568:                                   ; preds = %1760, %864
  %1569 = landingpad { i8*, i32 }
          cleanup
  %1570 = extractvalue { i8*, i32 } %1569, 0
  store i8* %1570, i8** %5, align 8
  %1571 = extractvalue { i8*, i32 } %1569, 1
  store i32 %1571, i32* %6, align 4
  br label %1986

; <label>:1572:                                   ; preds = %901
  %1573 = landingpad { i8*, i32 }
          cleanup
  %1574 = extractvalue { i8*, i32 } %1573, 0
  store i8* %1574, i8** %5, align 8
  %1575 = extractvalue { i8*, i32 } %1573, 1
  store i32 %1575, i32* %6, align 4
  br label %1580

; <label>:1576:                                   ; preds = %949
  %1577 = landingpad { i8*, i32 }
          cleanup
  %1578 = extractvalue { i8*, i32 } %1577, 0
  store i8* %1578, i8** %5, align 8
  %1579 = extractvalue { i8*, i32 } %1577, 1
  store i32 %1579, i32* %6, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %59) #3
  br label %1580

; <label>:1580:                                   ; preds = %1576, %1572
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %62) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %58) #3
  br label %1986

; <label>:1581:                                   ; preds = %950, %884, %866
  %1582 = load i32, i32* @x.6
  %1583 = load i32, i32* @y.7
  %1584 = sub i32 %1582, -708844955
  %1585 = sub i32 %1584, 1
  %1586 = add i32 %1585, -708844955
  %1587 = sub i32 %1582, 1
  %1588 = mul i32 %1582, %1586
  %1589 = urem i32 %1588, 2
  %1590 = icmp eq i32 %1589, 0
  %1591 = icmp slt i32 %1583, 10
  %1592 = xor i1 %1590, true
  %1593 = xor i1 %1591, true
  %1594 = xor i1 false, true
  %1595 = and i1 %1592, false
  %1596 = and i1 %1590, %1594
  %1597 = and i1 %1593, false
  %1598 = and i1 %1591, %1594
  %1599 = or i1 %1595, %1596
  %1600 = or i1 %1597, %1598
  %1601 = xor i1 %1599, %1600
  %1602 = or i1 %1592, %1593
  %1603 = xor i1 %1602, true
  %1604 = or i1 false, %1594
  %1605 = and i1 %1603, %1604
  %1606 = or i1 %1601, %1605
  %1607 = or i1 %1590, %1591
  br i1 %1606, label %1608, label %2419

; <label>:1608:                                   ; preds = %1581, %2419
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %58) #3
  %1609 = load i32, i32* @x.6
  %1610 = load i32, i32* @y.7
  %1611 = add i32 %1609, -1617114571
  %1612 = sub i32 %1611, 1
  %1613 = sub i32 %1612, -1617114571
  %1614 = sub i32 %1609, 1
  %1615 = mul i32 %1609, %1613
  %1616 = urem i32 %1615, 2
  %1617 = icmp eq i32 %1616, 0
  %1618 = icmp slt i32 %1610, 10
  %1619 = xor i1 %1617, true
  %1620 = xor i1 %1618, true
  %1621 = xor i1 false, true
  %1622 = and i1 %1619, false
  %1623 = and i1 %1617, %1621
  %1624 = and i1 %1620, false
  %1625 = and i1 %1618, %1621
  %1626 = or i1 %1622, %1623
  %1627 = or i1 %1624, %1625
  %1628 = xor i1 %1626, %1627
  %1629 = or i1 %1619, %1620
  %1630 = xor i1 %1629, true
  %1631 = or i1 false, %1621
  %1632 = and i1 %1630, %1631
  %1633 = or i1 %1628, %1632
  %1634 = or i1 %1617, %1618
  br i1 %1633, label %1635, label %2419

; <label>:1635:                                   ; preds = %1608
  br label %1636

; <label>:1636:                                   ; preds = %1635
  %1637 = load i32, i32* @x.6
  %1638 = load i32, i32* @y.7
  %1639 = add i32 %1637, -2004075839
  %1640 = sub i32 %1639, 1
  %1641 = sub i32 %1640, -2004075839
  %1642 = sub i32 %1637, 1
  %1643 = mul i32 %1637, %1641
  %1644 = urem i32 %1643, 2
  %1645 = icmp eq i32 %1644, 0
  %1646 = icmp slt i32 %1638, 10
  %1647 = xor i1 %1645, true
  %1648 = xor i1 %1646, true
  %1649 = xor i1 false, true
  %1650 = and i1 %1647, false
  %1651 = and i1 %1645, %1649
  %1652 = and i1 %1648, false
  %1653 = and i1 %1646, %1649
  %1654 = or i1 %1650, %1651
  %1655 = or i1 %1652, %1653
  %1656 = xor i1 %1654, %1655
  %1657 = or i1 %1647, %1648
  %1658 = xor i1 %1657, true
  %1659 = or i1 false, %1649
  %1660 = and i1 %1658, %1659
  %1661 = or i1 %1656, %1660
  %1662 = or i1 %1645, %1646
  br i1 %1661, label %1663, label %2420

; <label>:1663:                                   ; preds = %1636, %2420
  %1664 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %56) #3
  %1665 = load i32, i32* @x.6
  %1666 = load i32, i32* @y.7
  %1667 = add i32 %1665, 533196178
  %1668 = sub i32 %1667, 1
  %1669 = sub i32 %1668, 533196178
  %1670 = sub i32 %1665, 1
  %1671 = mul i32 %1665, %1669
  %1672 = urem i32 %1671, 2
  %1673 = icmp eq i32 %1672, 0
  %1674 = icmp slt i32 %1666, 10
  %1675 = xor i1 %1673, true
  %1676 = xor i1 %1674, true
  %1677 = xor i1 false, true
  %1678 = and i1 %1675, false
  %1679 = and i1 %1673, %1677
  %1680 = and i1 %1676, false
  %1681 = and i1 %1674, %1677
  %1682 = or i1 %1678, %1679
  %1683 = or i1 %1680, %1681
  %1684 = xor i1 %1682, %1683
  %1685 = or i1 %1675, %1676
  %1686 = xor i1 %1685, true
  %1687 = or i1 false, %1677
  %1688 = and i1 %1686, %1687
  %1689 = or i1 %1684, %1688
  %1690 = or i1 %1673, %1674
  br i1 %1689, label %1691, label %2420

; <label>:1691:                                   ; preds = %1663
  br label %862

; <label>:1692:                                   ; preds = %862
  store %"class.std::vector.0"* %45, %"class.std::vector.0"** %63, align 8
  %1693 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  %1694 = call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE5beginEv(%"class.std::vector.0"* %1693) #3
  %1695 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  store %"class.std::vector"* %1694, %"class.std::vector"** %1695, align 8
  %1696 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  %1697 = call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv(%"class.std::vector.0"* %1696) #3
  %1698 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  store %"class.std::vector"* %1697, %"class.std::vector"** %1698, align 8
  br label %1699

; <label>:1699:                                   ; preds = %1983, %1692
  %1700 = load i32, i32* @x.6
  %1701 = load i32, i32* @y.7
  %1702 = sub i32 0, 1
  %1703 = add i32 %1700, %1702
  %1704 = sub i32 %1700, 1
  %1705 = mul i32 %1700, %1703
  %1706 = urem i32 %1705, 2
  %1707 = icmp eq i32 %1706, 0
  %1708 = icmp slt i32 %1701, 10
  %1709 = and i1 %1707, %1708
  %1710 = xor i1 %1707, %1708
  %1711 = or i1 %1709, %1710
  %1712 = or i1 %1707, %1708
  br i1 %1711, label %1713, label %2422

; <label>:1713:                                   ; preds = %1699, %2422
  %1714 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %64, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %65) #3
  %1715 = load i32, i32* @x.6
  %1716 = load i32, i32* @y.7
  %1717 = sub i32 %1715, 831257450
  %1718 = sub i32 %1717, 1
  %1719 = add i32 %1718, 831257450
  %1720 = sub i32 %1715, 1
  %1721 = mul i32 %1715, %1719
  %1722 = urem i32 %1721, 2
  %1723 = icmp eq i32 %1722, 0
  %1724 = icmp slt i32 %1716, 10
  %1725 = and i1 %1723, %1724
  %1726 = xor i1 %1723, %1724
  %1727 = or i1 %1725, %1726
  %1728 = or i1 %1723, %1724
  br i1 %1727, label %1729, label %2422

; <label>:1729:                                   ; preds = %1713
  br i1 %1714, label %1730, label %1985

; <label>:1730:                                   ; preds = %1729
  %1731 = load i32, i32* @x.6
  %1732 = load i32, i32* @y.7
  %1733 = sub i32 %1731, -1717392471
  %1734 = sub i32 %1733, 1
  %1735 = add i32 %1734, -1717392471
  %1736 = sub i32 %1731, 1
  %1737 = mul i32 %1731, %1735
  %1738 = urem i32 %1737, 2
  %1739 = icmp eq i32 %1738, 0
  %1740 = icmp slt i32 %1732, 10
  %1741 = and i1 %1739, %1740
  %1742 = xor i1 %1739, %1740
  %1743 = or i1 %1741, %1742
  %1744 = or i1 %1739, %1740
  br i1 %1743, label %1745, label %2424

; <label>:1745:                                   ; preds = %1730, %2424
  %1746 = call dereferenceable(24) %"class.std::vector"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %64) #3
  %1747 = load i32, i32* @x.6
  %1748 = load i32, i32* @y.7
  %1749 = sub i32 0, 1
  %1750 = add i32 %1747, %1749
  %1751 = sub i32 %1747, 1
  %1752 = mul i32 %1747, %1750
  %1753 = urem i32 %1752, 2
  %1754 = icmp eq i32 %1753, 0
  %1755 = icmp slt i32 %1748, 10
  %1756 = and i1 %1754, %1755
  %1757 = xor i1 %1754, %1755
  %1758 = or i1 %1756, %1757
  %1759 = or i1 %1754, %1755
  br i1 %1758, label %1760, label %2424

; <label>:1760:                                   ; preds = %1745
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector"* %66, %"class.std::vector"* dereferenceable(24) %1746)
          to label %1761 unwind label %1568

; <label>:1761:                                   ; preds = %1760
  %1762 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %1763 = load i32, i32* %1762, align 4
  %1764 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %66, i64 0) #3
  %1765 = load i32, i32* %1764, align 4
  %1766 = sub i32 0, %1763
  %1767 = sub i32 0, %1765
  %1768 = add i32 %1766, %1767
  %1769 = sub i32 0, %1768
  %1770 = add nsw i32 %1763, %1765
  %1771 = sext i32 %1769 to i64
  %1772 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %12, i64 %1771) #3
  %1773 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %1774 = load i32, i32* %1773, align 4
  %1775 = sext i32 %1774 to i64
  %1776 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %1772, i64 %1775) #3
  %1777 = load i32, i32* %1776, align 4
  %1778 = icmp eq i32 %1777, 0
  br i1 %1778, label %1779, label %1982

; <label>:1779:                                   ; preds = %1761
  %1780 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %1781 = load i32, i32* %1780, align 4
  %1782 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %66, i64 1) #3
  %1783 = load i32, i32* %1782, align 4
  %1784 = sub i32 0, %1781
  %1785 = sub i32 0, %1783
  %1786 = add i32 %1784, %1785
  %1787 = sub i32 0, %1786
  %1788 = add nsw i32 %1781, %1783
  %1789 = sext i32 %1787 to i64
  %1790 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %1789) #3
  %1791 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %1792 = load i32, i32* %1791, align 4
  %1793 = sext i32 %1792 to i64
  %1794 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %1790, i64 %1793) #3
  %1795 = load i32, i32* %1794, align 4
  %1796 = icmp eq i32 %1795, 2147483647
  br i1 %1796, label %1797, label %1982

; <label>:1797:                                   ; preds = %1779
  %1798 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %1799 = load i32, i32* %1798, align 4
  %1800 = sext i32 %1799 to i64
  %1801 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %1800) #3
  %1802 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %1803 = load i32, i32* %1802, align 4
  %1804 = sext i32 %1803 to i64
  %1805 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %1801, i64 %1804) #3
  %1806 = load i32, i32* %1805, align 4
  %1807 = sub i32 %1806, 1753613187
  %1808 = add i32 %1807, 1
  %1809 = add i32 %1808, 1753613187
  %1810 = add nsw i32 %1806, 1
  %1811 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %1812 = load i32, i32* %1811, align 4
  %1813 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %66, i64 1) #3
  %1814 = load i32, i32* %1813, align 4
  %1815 = sub i32 %1812, 882988028
  %1816 = add i32 %1815, %1814
  %1817 = add i32 %1816, 882988028
  %1818 = add nsw i32 %1812, %1814
  %1819 = sext i32 %1817 to i64
  %1820 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %1819) #3
  %1821 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %1822 = load i32, i32* %1821, align 4
  %1823 = sext i32 %1822 to i64
  %1824 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %1820, i64 %1823) #3
  store i32 %1809, i32* %1824, align 4
  %1825 = getelementptr inbounds [2 x i32], [2 x i32]* %69, i64 0, i64 0
  %1826 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 0) #3
  %1827 = load i32, i32* %1826, align 4
  %1828 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %66, i64 1) #3
  %1829 = load i32, i32* %1828, align 4
  %1830 = sub i32 %1827, 643318245
  %1831 = add i32 %1830, %1829
  %1832 = add i32 %1831, 643318245
  %1833 = add nsw i32 %1827, %1829
  store i32 %1832, i32* %1825, align 4
  %1834 = getelementptr inbounds i32, i32* %1825, i64 1
  %1835 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"* %34, i64 1) #3
  %1836 = load i32, i32* %1835, align 4
  store i32 %1836, i32* %1834, align 4
  %1837 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %68, i32 0, i32 0
  %1838 = getelementptr inbounds [2 x i32], [2 x i32]* %69, i64 0, i64 0
  store i32* %1838, i32** %1837, align 8
  %1839 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %68, i32 0, i32 1
  store i64 2, i64* %1839, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %70) #3
  %1840 = bitcast %"class.std::initializer_list.11"* %68 to { i32*, i64 }*
  %1841 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1840, i32 0, i32 0
  %1842 = load i32*, i32** %1841, align 8
  %1843 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1840, i32 0, i32 1
  %1844 = load i64, i64* %1843, align 8
  invoke void @_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::deque.8"* %67, i32* %1842, i64 %1844, %"class.std::allocator"* dereferenceable(1) %70)
          to label %1845 unwind label %1931

; <label>:1845:                                   ; preds = %1797
  %1846 = load i32, i32* @x.6
  %1847 = load i32, i32* @y.7
  %1848 = sub i32 %1846, 804192608
  %1849 = sub i32 %1848, 1
  %1850 = add i32 %1849, 804192608
  %1851 = sub i32 %1846, 1
  %1852 = mul i32 %1846, %1850
  %1853 = urem i32 %1852, 2
  %1854 = icmp eq i32 %1853, 0
  %1855 = icmp slt i32 %1847, 10
  %1856 = xor i1 %1854, true
  %1857 = xor i1 %1855, true
  %1858 = xor i1 true, true
  %1859 = and i1 %1856, true
  %1860 = and i1 %1854, %1858
  %1861 = and i1 %1857, true
  %1862 = and i1 %1855, %1858
  %1863 = or i1 %1859, %1860
  %1864 = or i1 %1861, %1862
  %1865 = xor i1 %1863, %1864
  %1866 = or i1 %1856, %1857
  %1867 = xor i1 %1866, true
  %1868 = or i1 true, %1858
  %1869 = and i1 %1867, %1868
  %1870 = or i1 %1865, %1869
  %1871 = or i1 %1854, %1855
  br i1 %1870, label %1872, label %2426

; <label>:1872:                                   ; preds = %1845, %2426
  %1873 = load i32, i32* @x.6
  %1874 = load i32, i32* @y.7
  %1875 = sub i32 %1873, -1005852083
  %1876 = sub i32 %1875, 1
  %1877 = add i32 %1876, -1005852083
  %1878 = sub i32 %1873, 1
  %1879 = mul i32 %1873, %1877
  %1880 = urem i32 %1879, 2
  %1881 = icmp eq i32 %1880, 0
  %1882 = icmp slt i32 %1874, 10
  %1883 = xor i1 %1881, true
  %1884 = xor i1 %1882, true
  %1885 = xor i1 false, true
  %1886 = and i1 %1883, false
  %1887 = and i1 %1881, %1885
  %1888 = and i1 %1884, false
  %1889 = and i1 %1882, %1885
  %1890 = or i1 %1886, %1887
  %1891 = or i1 %1888, %1889
  %1892 = xor i1 %1890, %1891
  %1893 = or i1 %1883, %1884
  %1894 = xor i1 %1893, true
  %1895 = or i1 false, %1885
  %1896 = and i1 %1894, %1895
  %1897 = or i1 %1892, %1896
  %1898 = or i1 %1881, %1882
  br i1 %1897, label %1899, label %2426

; <label>:1899:                                   ; preds = %1872
  invoke void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE9push_backEOS1_(%"class.std::deque"* %26, %"class.std::deque.8"* dereferenceable(80) %67)
          to label %1900 unwind label %1977

; <label>:1900:                                   ; preds = %1899
  %1901 = load i32, i32* @x.6
  %1902 = load i32, i32* @y.7
  %1903 = sub i32 %1901, 2089216587
  %1904 = sub i32 %1903, 1
  %1905 = add i32 %1904, 2089216587
  %1906 = sub i32 %1901, 1
  %1907 = mul i32 %1901, %1905
  %1908 = urem i32 %1907, 2
  %1909 = icmp eq i32 %1908, 0
  %1910 = icmp slt i32 %1902, 10
  %1911 = and i1 %1909, %1910
  %1912 = xor i1 %1909, %1910
  %1913 = or i1 %1911, %1912
  %1914 = or i1 %1909, %1910
  br i1 %1913, label %1915, label %2427

; <label>:1915:                                   ; preds = %1900, %2427
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %67) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %70) #3
  %1916 = load i32, i32* @x.6
  %1917 = load i32, i32* @y.7
  %1918 = add i32 %1916, 1684767180
  %1919 = sub i32 %1918, 1
  %1920 = sub i32 %1919, 1684767180
  %1921 = sub i32 %1916, 1
  %1922 = mul i32 %1916, %1920
  %1923 = urem i32 %1922, 2
  %1924 = icmp eq i32 %1923, 0
  %1925 = icmp slt i32 %1917, 10
  %1926 = and i1 %1924, %1925
  %1927 = xor i1 %1924, %1925
  %1928 = or i1 %1926, %1927
  %1929 = or i1 %1924, %1925
  br i1 %1928, label %1930, label %2427

; <label>:1930:                                   ; preds = %1915
  br label %1982

; <label>:1931:                                   ; preds = %1797
  %1932 = load i32, i32* @x.6
  %1933 = load i32, i32* @y.7
  %1934 = add i32 %1932, -461613476
  %1935 = sub i32 %1934, 1
  %1936 = sub i32 %1935, -461613476
  %1937 = sub i32 %1932, 1
  %1938 = mul i32 %1932, %1936
  %1939 = urem i32 %1938, 2
  %1940 = icmp eq i32 %1939, 0
  %1941 = icmp slt i32 %1933, 10
  %1942 = xor i1 %1940, true
  %1943 = xor i1 %1941, true
  %1944 = xor i1 false, true
  %1945 = and i1 %1942, false
  %1946 = and i1 %1940, %1944
  %1947 = and i1 %1943, false
  %1948 = and i1 %1941, %1944
  %1949 = or i1 %1945, %1946
  %1950 = or i1 %1947, %1948
  %1951 = xor i1 %1949, %1950
  %1952 = or i1 %1942, %1943
  %1953 = xor i1 %1952, true
  %1954 = or i1 false, %1944
  %1955 = and i1 %1953, %1954
  %1956 = or i1 %1951, %1955
  %1957 = or i1 %1940, %1941
  br i1 %1956, label %1958, label %2428

; <label>:1958:                                   ; preds = %1931, %2428
  %1959 = landingpad { i8*, i32 }
          cleanup
  %1960 = extractvalue { i8*, i32 } %1959, 0
  store i8* %1960, i8** %5, align 8
  %1961 = extractvalue { i8*, i32 } %1959, 1
  store i32 %1961, i32* %6, align 4
  %1962 = load i32, i32* @x.6
  %1963 = load i32, i32* @y.7
  %1964 = sub i32 %1962, -1506411761
  %1965 = sub i32 %1964, 1
  %1966 = add i32 %1965, -1506411761
  %1967 = sub i32 %1962, 1
  %1968 = mul i32 %1962, %1966
  %1969 = urem i32 %1968, 2
  %1970 = icmp eq i32 %1969, 0
  %1971 = icmp slt i32 %1963, 10
  %1972 = and i1 %1970, %1971
  %1973 = xor i1 %1970, %1971
  %1974 = or i1 %1972, %1973
  %1975 = or i1 %1970, %1971
  br i1 %1974, label %1976, label %2428

; <label>:1976:                                   ; preds = %1958
  br label %1981

; <label>:1977:                                   ; preds = %1899
  %1978 = landingpad { i8*, i32 }
          cleanup
  %1979 = extractvalue { i8*, i32 } %1978, 0
  store i8* %1979, i8** %5, align 8
  %1980 = extractvalue { i8*, i32 } %1978, 1
  store i32 %1980, i32* %6, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %67) #3
  br label %1981

; <label>:1981:                                   ; preds = %1977, %1976
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %70) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %66) #3
  br label %1986

; <label>:1982:                                   ; preds = %1930, %1779, %1761
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %66) #3
  br label %1983

; <label>:1983:                                   ; preds = %1982
  %1984 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %64) #3
  br label %1699

; <label>:1985:                                   ; preds = %1729
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE9pop_frontEv(%"class.std::deque"* %26) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %45) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %35) #3
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %34) #3
  br label %623

; <label>:1986:                                   ; preds = %1981, %1580, %1568
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %45) #3
  br label %1987

; <label>:1987:                                   ; preds = %1986, %1567
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %35) #3
  br label %1988

; <label>:1988:                                   ; preds = %1987, %1376
  %1989 = load i32, i32* @x.6
  %1990 = load i32, i32* @y.7
  %1991 = add i32 %1989, -480264440
  %1992 = sub i32 %1991, 1
  %1993 = sub i32 %1992, -480264440
  %1994 = sub i32 %1989, 1
  %1995 = mul i32 %1989, %1993
  %1996 = urem i32 %1995, 2
  %1997 = icmp eq i32 %1996, 0
  %1998 = icmp slt i32 %1990, 10
  %1999 = and i1 %1997, %1998
  %2000 = xor i1 %1997, %1998
  %2001 = or i1 %1999, %2000
  %2002 = or i1 %1997, %1998
  br i1 %2001, label %2003, label %2432

; <label>:2003:                                   ; preds = %1988, %2432
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %34) #3
  %2004 = load i32, i32* @x.6
  %2005 = load i32, i32* @y.7
  %2006 = sub i32 %2004, -521209586
  %2007 = sub i32 %2006, 1
  %2008 = add i32 %2007, -521209586
  %2009 = sub i32 %2004, 1
  %2010 = mul i32 %2004, %2008
  %2011 = urem i32 %2010, 2
  %2012 = icmp eq i32 %2011, 0
  %2013 = icmp slt i32 %2005, 10
  %2014 = xor i1 %2012, true
  %2015 = xor i1 %2013, true
  %2016 = xor i1 false, true
  %2017 = and i1 %2014, false
  %2018 = and i1 %2012, %2016
  %2019 = and i1 %2015, false
  %2020 = and i1 %2013, %2016
  %2021 = or i1 %2017, %2018
  %2022 = or i1 %2019, %2020
  %2023 = xor i1 %2021, %2022
  %2024 = or i1 %2014, %2015
  %2025 = xor i1 %2024, true
  %2026 = or i1 false, %2016
  %2027 = and i1 %2025, %2026
  %2028 = or i1 %2023, %2027
  %2029 = or i1 %2012, %2013
  br i1 %2028, label %2030, label %2432

; <label>:2030:                                   ; preds = %2003
  br label %2191

; <label>:2031:                                   ; preds = %671
  %2032 = load i32, i32* @x.6
  %2033 = load i32, i32* @y.7
  %2034 = sub i32 0, 1
  %2035 = add i32 %2032, %2034
  %2036 = sub i32 %2032, 1
  %2037 = mul i32 %2032, %2035
  %2038 = urem i32 %2037, 2
  %2039 = icmp eq i32 %2038, 0
  %2040 = icmp slt i32 %2033, 10
  %2041 = xor i1 %2039, true
  %2042 = xor i1 %2040, true
  %2043 = xor i1 true, true
  %2044 = and i1 %2041, true
  %2045 = and i1 %2039, %2043
  %2046 = and i1 %2042, true
  %2047 = and i1 %2040, %2043
  %2048 = or i1 %2044, %2045
  %2049 = or i1 %2046, %2047
  %2050 = xor i1 %2048, %2049
  %2051 = or i1 %2041, %2042
  %2052 = xor i1 %2051, true
  %2053 = or i1 true, %2043
  %2054 = and i1 %2052, %2053
  %2055 = or i1 %2050, %2054
  %2056 = or i1 %2039, %2040
  br i1 %2055, label %2057, label %2433

; <label>:2057:                                   ; preds = %2031, %2433
  %2058 = load i32, i32* %4, align 4
  %2059 = sub i32 0, 1
  %2060 = add i32 %2058, %2059
  %2061 = sub nsw i32 %2058, 1
  %2062 = sext i32 %2060 to i64
  %2063 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %2062) #3
  %2064 = load i32, i32* %3, align 4
  %2065 = sub i32 %2064, 855884885
  %2066 = sub i32 %2065, 1
  %2067 = add i32 %2066, 855884885
  %2068 = sub nsw i32 %2064, 1
  %2069 = sext i32 %2067 to i64
  %2070 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2063, i64 %2069) #3
  %2071 = load i32, i32* %2070, align 4
  %2072 = icmp eq i32 %2071, 2147483647
  %2073 = load i32, i32* @x.6
  %2074 = load i32, i32* @y.7
  %2075 = add i32 %2073, -1485409575
  %2076 = sub i32 %2075, 1
  %2077 = sub i32 %2076, -1485409575
  %2078 = sub i32 %2073, 1
  %2079 = mul i32 %2073, %2077
  %2080 = urem i32 %2079, 2
  %2081 = icmp eq i32 %2080, 0
  %2082 = icmp slt i32 %2074, 10
  %2083 = and i1 %2081, %2082
  %2084 = xor i1 %2081, %2082
  %2085 = or i1 %2083, %2084
  %2086 = or i1 %2081, %2082
  br i1 %2085, label %2087, label %2433

; <label>:2087:                                   ; preds = %2057
  br i1 %2072, label %2088, label %2103

; <label>:2088:                                   ; preds = %2087
  %2089 = load i32, i32* %4, align 4
  %2090 = sub i32 %2089, -2079332326
  %2091 = sub i32 %2090, 1
  %2092 = add i32 %2091, -2079332326
  %2093 = sub nsw i32 %2089, 1
  %2094 = sext i32 %2092 to i64
  %2095 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %2094) #3
  %2096 = load i32, i32* %3, align 4
  %2097 = add i32 %2096, 1677722760
  %2098 = sub i32 %2097, 1
  %2099 = sub i32 %2098, 1677722760
  %2100 = sub nsw i32 %2096, 1
  %2101 = sext i32 %2099 to i64
  %2102 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2095, i64 %2101) #3
  store i32 0, i32* %2102, align 4
  br label %2103

; <label>:2103:                                   ; preds = %2088, %2087
  %2104 = load i32, i32* @x.6
  %2105 = load i32, i32* @y.7
  %2106 = add i32 %2104, -570807755
  %2107 = sub i32 %2106, 1
  %2108 = sub i32 %2107, -570807755
  %2109 = sub i32 %2104, 1
  %2110 = mul i32 %2104, %2108
  %2111 = urem i32 %2110, 2
  %2112 = icmp eq i32 %2111, 0
  %2113 = icmp slt i32 %2105, 10
  %2114 = and i1 %2112, %2113
  %2115 = xor i1 %2112, %2113
  %2116 = or i1 %2114, %2115
  %2117 = or i1 %2112, %2113
  br i1 %2116, label %2118, label %2456

; <label>:2118:                                   ; preds = %2103, %2456
  %2119 = load i32, i32* %4, align 4
  %2120 = add i32 %2119, 1351321563
  %2121 = sub i32 %2120, 1
  %2122 = sub i32 %2121, 1351321563
  %2123 = sub nsw i32 %2119, 1
  %2124 = sext i32 %2122 to i64
  %2125 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %2124) #3
  %2126 = load i32, i32* %3, align 4
  %2127 = sub i32 %2126, 540809304
  %2128 = sub i32 %2127, 1
  %2129 = add i32 %2128, 540809304
  %2130 = sub nsw i32 %2126, 1
  %2131 = sext i32 %2129 to i64
  %2132 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2125, i64 %2131) #3
  %2133 = load i32, i32* @x.6
  %2134 = load i32, i32* @y.7
  %2135 = sub i32 %2133, -838675405
  %2136 = sub i32 %2135, 1
  %2137 = add i32 %2136, -838675405
  %2138 = sub i32 %2133, 1
  %2139 = mul i32 %2133, %2137
  %2140 = urem i32 %2139, 2
  %2141 = icmp eq i32 %2140, 0
  %2142 = icmp slt i32 %2134, 10
  %2143 = and i1 %2141, %2142
  %2144 = xor i1 %2141, %2142
  %2145 = or i1 %2143, %2144
  %2146 = or i1 %2141, %2142
  br i1 %2145, label %2147, label %2456

; <label>:2147:                                   ; preds = %2118
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %2, i32* dereferenceable(4) %2132)
          to label %2148 unwind label %1111

; <label>:2148:                                   ; preds = %2147
  %2149 = load i32, i32* @x.6
  %2150 = load i32, i32* @y.7
  %2151 = add i32 %2149, 594341212
  %2152 = sub i32 %2151, 1
  %2153 = sub i32 %2152, 594341212
  %2154 = sub i32 %2149, 1
  %2155 = mul i32 %2149, %2153
  %2156 = urem i32 %2155, 2
  %2157 = icmp eq i32 %2156, 0
  %2158 = icmp slt i32 %2150, 10
  %2159 = and i1 %2157, %2158
  %2160 = xor i1 %2157, %2158
  %2161 = or i1 %2159, %2160
  %2162 = or i1 %2157, %2158
  br i1 %2161, label %2163, label %2506

; <label>:2163:                                   ; preds = %2148, %2506
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EED2Ev(%"class.std::deque"* %26) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %21) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %12) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %7) #3
  %2164 = load i32, i32* @x.6
  %2165 = load i32, i32* @y.7
  %2166 = add i32 %2164, -1131590948
  %2167 = sub i32 %2166, 1
  %2168 = sub i32 %2167, -1131590948
  %2169 = sub i32 %2164, 1
  %2170 = mul i32 %2164, %2168
  %2171 = urem i32 %2170, 2
  %2172 = icmp eq i32 %2171, 0
  %2173 = icmp slt i32 %2165, 10
  %2174 = xor i1 %2172, true
  %2175 = xor i1 %2173, true
  %2176 = xor i1 true, true
  %2177 = and i1 %2174, true
  %2178 = and i1 %2172, %2176
  %2179 = and i1 %2175, true
  %2180 = and i1 %2173, %2176
  %2181 = or i1 %2177, %2178
  %2182 = or i1 %2179, %2180
  %2183 = xor i1 %2181, %2182
  %2184 = or i1 %2174, %2175
  %2185 = xor i1 %2184, true
  %2186 = or i1 true, %2176
  %2187 = and i1 %2185, %2186
  %2188 = or i1 %2183, %2187
  %2189 = or i1 %2172, %2173
  br i1 %2188, label %2190, label %2506

; <label>:2190:                                   ; preds = %2163
  br label %72

; <label>:2191:                                   ; preds = %2030, %1111
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EED2Ev(%"class.std::deque"* %26) #3
  br label %2192

; <label>:2192:                                   ; preds = %2191, %1110
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %21) #3
  br label %2193

; <label>:2193:                                   ; preds = %2192, %1012, %502
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %12) #3
  br label %2194

; <label>:2194:                                   ; preds = %2193, %501
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %7) #3
  br label %2247

; <label>:2195:                                   ; preds = %134
  store i32 0, i32* %71, align 4
  br label %2196

; <label>:2196:                                   ; preds = %2238, %2195
  %2197 = load i32, i32* %71, align 4
  %2198 = sext i32 %2197 to i64
  %2199 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %2) #3
  %2200 = icmp ult i64 %2198, %2199
  br i1 %2200, label %2201, label %2245

; <label>:2201:                                   ; preds = %2196
  %2202 = load i32, i32* @x.6
  %2203 = load i32, i32* @y.7
  %2204 = add i32 %2202, -1753852556
  %2205 = sub i32 %2204, 1
  %2206 = sub i32 %2205, -1753852556
  %2207 = sub i32 %2202, 1
  %2208 = mul i32 %2202, %2206
  %2209 = urem i32 %2208, 2
  %2210 = icmp eq i32 %2209, 0
  %2211 = icmp slt i32 %2203, 10
  %2212 = and i1 %2210, %2211
  %2213 = xor i1 %2210, %2211
  %2214 = or i1 %2212, %2213
  %2215 = or i1 %2210, %2211
  br i1 %2214, label %2216, label %2507

; <label>:2216:                                   ; preds = %2201, %2507
  %2217 = load i32, i32* %71, align 4
  %2218 = sext i32 %2217 to i64
  %2219 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2, i64 %2218) #3
  %2220 = load i32, i32* %2219, align 4
  %2221 = load i32, i32* @x.6
  %2222 = load i32, i32* @y.7
  %2223 = sub i32 %2221, -2103044898
  %2224 = sub i32 %2223, 1
  %2225 = add i32 %2224, -2103044898
  %2226 = sub i32 %2221, 1
  %2227 = mul i32 %2221, %2225
  %2228 = urem i32 %2227, 2
  %2229 = icmp eq i32 %2228, 0
  %2230 = icmp slt i32 %2222, 10
  %2231 = and i1 %2229, %2230
  %2232 = xor i1 %2229, %2230
  %2233 = or i1 %2231, %2232
  %2234 = or i1 %2229, %2230
  br i1 %2233, label %2235, label %2507

; <label>:2235:                                   ; preds = %2216
  %2236 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %2220)
          to label %2237 unwind label %135

; <label>:2237:                                   ; preds = %2235
  br label %2238

; <label>:2238:                                   ; preds = %2237
  %2239 = load i32, i32* %71, align 4
  %2240 = sub i32 0, %2239
  %2241 = sub i32 0, 1
  %2242 = add i32 %2240, %2241
  %2243 = sub i32 0, %2242
  %2244 = add nsw i32 %2239, 1
  store i32 %2243, i32* %71, align 4
  br label %2196

; <label>:2245:                                   ; preds = %2196
  store i32 0, i32* %1, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %2) #3
  %2246 = load i32, i32* %1, align 4
  ret i32 %2246

; <label>:2247:                                   ; preds = %2194, %420, %167
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %2) #3
  br label %2248

; <label>:2248:                                   ; preds = %2247
  %2249 = load i32, i32* @x.6
  %2250 = load i32, i32* @y.7
  %2251 = sub i32 %2249, 1912170535
  %2252 = sub i32 %2251, 1
  %2253 = add i32 %2252, 1912170535
  %2254 = sub i32 %2249, 1
  %2255 = mul i32 %2249, %2253
  %2256 = urem i32 %2255, 2
  %2257 = icmp eq i32 %2256, 0
  %2258 = icmp slt i32 %2250, 10
  %2259 = xor i1 %2257, true
  %2260 = xor i1 %2258, true
  %2261 = xor i1 false, true
  %2262 = and i1 %2259, false
  %2263 = and i1 %2257, %2261
  %2264 = and i1 %2260, false
  %2265 = and i1 %2258, %2261
  %2266 = or i1 %2262, %2263
  %2267 = or i1 %2264, %2265
  %2268 = xor i1 %2266, %2267
  %2269 = or i1 %2259, %2260
  %2270 = xor i1 %2269, true
  %2271 = or i1 false, %2261
  %2272 = and i1 %2270, %2271
  %2273 = or i1 %2268, %2272
  %2274 = or i1 %2257, %2258
  br i1 %2273, label %2275, label %2512

; <label>:2275:                                   ; preds = %2248, %2512
  %2276 = load i8*, i8** %5, align 8
  %2277 = load i32, i32* %6, align 4
  %2278 = insertvalue { i8*, i32 } undef, i8* %2276, 0
  %2279 = insertvalue { i8*, i32 } %2278, i32 %2277, 1
  %2280 = load i32, i32* @x.6
  %2281 = load i32, i32* @y.7
  %2282 = sub i32 %2280, 1300606116
  %2283 = sub i32 %2282, 1
  %2284 = add i32 %2283, 1300606116
  %2285 = sub i32 %2280, 1
  %2286 = mul i32 %2280, %2284
  %2287 = urem i32 %2286, 2
  %2288 = icmp eq i32 %2287, 0
  %2289 = icmp slt i32 %2281, 10
  %2290 = and i1 %2288, %2289
  %2291 = xor i1 %2288, %2289
  %2292 = or i1 %2290, %2291
  %2293 = or i1 %2288, %2289
  br i1 %2292, label %2294, label %2512

; <label>:2294:                                   ; preds = %2275
  resume { i8*, i32 } %2279

; <label>:2295:                                   ; preds = %102, %75
  br label %102

; <label>:2296:                                   ; preds = %149, %135
  %2297 = landingpad { i8*, i32 }
          cleanup
  %2298 = extractvalue { i8*, i32 } %2297, 0
  store i8* %2298, i8** %5, align 8
  %2299 = extractvalue { i8*, i32 } %2297, 1
  store i32 %2299, i32* %6, align 4
  br label %149

; <label>:2300:                                   ; preds = %192, %177
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %11) #3
  br label %192

; <label>:2301:                                   ; preds = %242, %215
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %16) #3
  br label %242

; <label>:2302:                                   ; preds = %301, %274
  %2303 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %7, i64 0) #3
  %2304 = load i32, i32* %17, align 4
  %2305 = sext i32 %2304 to i64
  %2306 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2303, i64 %2305) #3
  br label %301

; <label>:2307:                                   ; preds = %338, %323
  %2308 = load i32, i32* %17, align 4
  %2309 = shl i32 %2308, 1
  %2310 = sub i32 0, -732366421
  %2311 = sub i32 %2310, %2308
  %2312 = add i32 %2311, -732366421
  %2313 = sub i32 0, %2308
  %2314 = add i32 %2312, -1305612111
  %2315 = add i32 %2314, 1
  %2316 = sub i32 %2315, -1305612111
  %2317 = add i32 %2312, 1
  %2318 = sub i32 %2308, -983681039
  %2319 = add i32 %2318, 1
  %2320 = add i32 %2319, -983681039
  %2321 = add nsw i32 %2308, 1
  store i32 %2320, i32* %17, align 4
  br label %338

; <label>:2322:                                   ; preds = %393, %378
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %10) #3
  br label %393

; <label>:2323:                                   ; preds = %452, %425
  %2324 = landingpad { i8*, i32 }
          cleanup
  %2325 = extractvalue { i8*, i32 } %2324, 0
  store i8* %2325, i8** %5, align 8
  %2326 = extractvalue { i8*, i32 } %2324, 1
  store i32 %2326, i32* %6, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %16) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %13) #3
  br label %452

; <label>:2327:                                   ; preds = %486, %471
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %15) #3
  br label %486

; <label>:2328:                                   ; preds = %567, %552
  %2329 = load i32, i32* %18, align 4
  %2330 = shl i32 %2329, 1
  %2331 = shl i32 %2329, 1
  %2332 = shl i32 %2329, 1
  %2333 = add i32 %2329, -2125139027
  %2334 = add i32 %2333, 1
  %2335 = sub i32 %2334, -2125139027
  %2336 = add nsw i32 %2329, 1
  store i32 %2335, i32* %18, align 4
  br label %567

; <label>:2337:                                   ; preds = %649, %623
  %2338 = call zeroext i1 @_ZNKSt5dequeIS_IiSaIiEESaIS1_EE5emptyEv(%"class.std::deque"* %26) #3
  %2339 = sub i1 false, true
  %2340 = add i1 %2338, %2339
  %2341 = sub i1 %2338, true
  %2342 = mul i1 %2340, true
  %2343 = shl i1 %2338, true
  %2344 = sub i1 false, true
  %2345 = sub i1 %2344, %2338
  %2346 = add i1 %2345, true
  %2347 = sub i1 false, %2338
  %2348 = sub i1 false, true
  %2349 = sub i1 %2346, %2348
  %2350 = add i1 %2346, true
  %2351 = shl i1 %2338, true
  %2352 = add i1 %2338, false
  %2353 = sub i1 %2352, true
  %2354 = sub i1 %2353, false
  %2355 = sub i1 %2338, true
  %2356 = mul i1 %2354, true
  %2357 = sub i1 false, false
  %2358 = sub i1 %2357, %2338
  %2359 = add i1 %2358, false
  %2360 = sub i1 false, %2338
  %2361 = sub i1 %2359, true
  %2362 = add i1 %2361, true
  %2363 = add i1 %2362, true
  %2364 = add i1 %2359, true
  %2365 = shl i1 %2338, true
  %2366 = xor i1 %2338, true
  %2367 = and i1 true, %2366
  %2368 = xor i1 true, true
  %2369 = and i1 %2338, %2368
  %2370 = or i1 %2367, %2369
  %2371 = xor i1 %2338, true
  br label %649

; <label>:2372:                                   ; preds = %715, %701
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %44) #3
  %2373 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %37, i32 0, i32 0
  %2374 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2373, i64 2
  br label %715

; <label>:2375:                                   ; preds = %782, %767
  store i1 false, i1* %53, align 1
  %2376 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %46, i32 0, i32 0
  %2377 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %47, i64 0, i64 0
  store %"class.std::vector"* %2377, %"class.std::vector"** %2376, align 8
  %2378 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %46, i32 0, i32 1
  store i64 2, i64* %2378, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %54) #3
  %2379 = bitcast %"class.std::initializer_list.12"* %46 to { %"class.std::vector"*, i64 }*
  %2380 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %2379, i32 0, i32 0
  %2381 = load %"class.std::vector"*, %"class.std::vector"** %2380, align 8
  %2382 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %2379, i32 0, i32 1
  %2383 = load i64, i64* %2382, align 8
  br label %782

; <label>:2384:                                   ; preds = %837, %821
  %2385 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %822, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %2385) #3
  %2386 = icmp eq %"class.std::vector"* %2385, %819
  br label %837

; <label>:2387:                                   ; preds = %977, %951
  %2388 = landingpad { i8*, i32 }
          cleanup
  %2389 = extractvalue { i8*, i32 } %2388, 0
  store i8* %2389, i8** %5, align 8
  %2390 = extractvalue { i8*, i32 } %2388, 1
  store i32 %2390, i32* %6, align 4
  br label %977

; <label>:2391:                                   ; preds = %1028, %1013
  %2392 = landingpad { i8*, i32 }
          cleanup
  %2393 = extractvalue { i8*, i32 } %2392, 0
  store i8* %2393, i8** %5, align 8
  %2394 = extractvalue { i8*, i32 } %2392, 1
  store i32 %2394, i32* %6, align 4
  br label %1028

; <label>:2395:                                   ; preds = %1079, %1063
  %2396 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %1064, i64 -1
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %2396) #3
  %2397 = icmp eq %"class.std::deque.8"* %2396, %598
  br label %1079

; <label>:2398:                                   ; preds = %1134, %1119
  %2399 = landingpad { i8*, i32 }
          cleanup
  %2400 = extractvalue { i8*, i32 } %2399, 0
  store i8* %2400, i8** %5, align 8
  %2401 = extractvalue { i8*, i32 } %2399, 1
  store i32 %2401, i32* %6, align 4
  br label %1134

; <label>:2402:                                   ; preds = %1186, %1171
  %2403 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1172, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %2403) #3
  %2404 = icmp eq %"class.std::vector"* %2403, %1169
  br label %1186

; <label>:2405:                                   ; preds = %1230, %1203
  br label %1230

; <label>:2406:                                   ; preds = %1285, %1258
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %42) #3
  br label %1285

; <label>:2407:                                   ; preds = %1349, %1323
  br label %1349

; <label>:2408:                                   ; preds = %1392, %1377
  %2409 = landingpad { i8*, i32 }
          cleanup
  %2410 = extractvalue { i8*, i32 } %2409, 0
  store i8* %2410, i8** %5, align 8
  %2411 = extractvalue { i8*, i32 } %2409, 1
  store i32 %2411, i32* %6, align 4
  br label %1392

; <label>:2412:                                   ; preds = %1440, %1425
  br label %1440

; <label>:2413:                                   ; preds = %1472, %1457
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %50) #3
  %2414 = load i1, i1* %53, align 1
  br label %1472

; <label>:2415:                                   ; preds = %1507, %1492
  %2416 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1493, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %2416) #3
  %2417 = icmp eq %"class.std::vector"* %2416, %750
  br label %1507

; <label>:2418:                                   ; preds = %1552, %1526
  br label %1552

; <label>:2419:                                   ; preds = %1608, %1581
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %58) #3
  br label %1608

; <label>:2420:                                   ; preds = %1663, %1636
  %2421 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %56) #3
  br label %1663

; <label>:2422:                                   ; preds = %1713, %1699
  %2423 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %64, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %65) #3
  br label %1713

; <label>:2424:                                   ; preds = %1745, %1730
  %2425 = call dereferenceable(24) %"class.std::vector"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %64) #3
  br label %1745

; <label>:2426:                                   ; preds = %1872, %1845
  br label %1872

; <label>:2427:                                   ; preds = %1915, %1900
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %67) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %70) #3
  br label %1915

; <label>:2428:                                   ; preds = %1958, %1931
  %2429 = landingpad { i8*, i32 }
          cleanup
  %2430 = extractvalue { i8*, i32 } %2429, 0
  store i8* %2430, i8** %5, align 8
  %2431 = extractvalue { i8*, i32 } %2429, 1
  store i32 %2431, i32* %6, align 4
  br label %1958

; <label>:2432:                                   ; preds = %2003, %1988
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %34) #3
  br label %2003

; <label>:2433:                                   ; preds = %2057, %2031
  %2434 = load i32, i32* %4, align 4
  %2435 = shl i32 %2434, 1
  %2436 = sub i32 0, 1
  %2437 = add i32 %2434, %2436
  %2438 = sub nsw i32 %2434, 1
  %2439 = sext i32 %2437 to i64
  %2440 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %2439) #3
  %2441 = load i32, i32* %3, align 4
  %2442 = sub i32 %2441, -683945993
  %2443 = sub i32 %2442, 1
  %2444 = add i32 %2443, -683945993
  %2445 = sub i32 %2441, 1
  %2446 = mul i32 %2444, 1
  %2447 = shl i32 %2441, 1
  %2448 = add i32 %2441, -396801800
  %2449 = sub i32 %2448, 1
  %2450 = sub i32 %2449, -396801800
  %2451 = sub nsw i32 %2441, 1
  %2452 = sext i32 %2450 to i64
  %2453 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2440, i64 %2452) #3
  %2454 = load i32, i32* %2453, align 4
  %2455 = icmp eq i32 %2454, 2147483647
  br label %2057

; <label>:2456:                                   ; preds = %2118, %2103
  %2457 = load i32, i32* %4, align 4
  %2458 = add i32 %2457, 1371614202
  %2459 = sub i32 %2458, 1
  %2460 = sub i32 %2459, 1371614202
  %2461 = sub i32 %2457, 1
  %2462 = mul i32 %2460, 1
  %2463 = sub i32 0, 1
  %2464 = add i32 %2457, %2463
  %2465 = sub nsw i32 %2457, 1
  %2466 = sext i32 %2464 to i64
  %2467 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %21, i64 %2466) #3
  %2468 = load i32, i32* %3, align 4
  %2469 = sub i32 0, %2468
  %2470 = add i32 0, %2469
  %2471 = sub i32 0, %2468
  %2472 = add i32 %2470, 1996824309
  %2473 = add i32 %2472, 1
  %2474 = sub i32 %2473, 1996824309
  %2475 = add i32 %2470, 1
  %2476 = sub i32 0, %2468
  %2477 = add i32 0, %2476
  %2478 = sub i32 0, %2468
  %2479 = sub i32 0, 1
  %2480 = sub i32 %2477, %2479
  %2481 = add i32 %2477, 1
  %2482 = add i32 0, -465029235
  %2483 = sub i32 %2482, %2468
  %2484 = sub i32 %2483, -465029235
  %2485 = sub i32 0, %2468
  %2486 = sub i32 0, %2484
  %2487 = sub i32 0, 1
  %2488 = add i32 %2486, %2487
  %2489 = sub i32 0, %2488
  %2490 = add i32 %2484, 1
  %2491 = shl i32 %2468, 1
  %2492 = add i32 0, 1035040913
  %2493 = sub i32 %2492, %2468
  %2494 = sub i32 %2493, 1035040913
  %2495 = sub i32 0, %2468
  %2496 = sub i32 0, %2494
  %2497 = sub i32 0, 1
  %2498 = add i32 %2496, %2497
  %2499 = sub i32 0, %2498
  %2500 = add i32 %2494, 1
  %2501 = sub i32 0, 1
  %2502 = add i32 %2468, %2501
  %2503 = sub nsw i32 %2468, 1
  %2504 = sext i32 %2502 to i64
  %2505 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2467, i64 %2504) #3
  br label %2118

; <label>:2506:                                   ; preds = %2163, %2148
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EED2Ev(%"class.std::deque"* %26) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %21) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %12) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %7) #3
  br label %2163

; <label>:2507:                                   ; preds = %2216, %2201
  %2508 = load i32, i32* %71, align 4
  %2509 = sext i32 %2508 to i64
  %2510 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %2, i64 %2509) #3
  %2511 = load i32, i32* %2510, align 4
  br label %2216

; <label>:2512:                                   ; preds = %2275, %2248
  %2513 = load i8*, i8** %5, align 8
  %2514 = load i32, i32* %6, align 4
  %2515 = insertvalue { i8*, i32 } undef, i8* %2513, 0
  %2516 = insertvalue { i8*, i32 } %2515, i32 %2514, 1
  br label %2275
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"*, i64, i32* dereferenceable(4), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %60

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.12
  %19 = load i32, i32* @y.13
  %20 = add i32 %18, 214909854
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, 214909854
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %112

; <label>:32:                                     ; preds = %17, %112
  %33 = load i32, i32* @x.12
  %34 = load i32, i32* @y.13
  %35 = add i32 %33, -514859822
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -514859822
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %112

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %4
  %61 = load i32, i32* @x.12
  %62 = load i32, i32* @y.13
  %63 = sub i32 %61, 169137323
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 169137323
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %113

; <label>:75:                                     ; preds = %60, %113
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %9, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %10, align 4
  %79 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %79) #3
  %80 = load i32, i32* @x.12
  %81 = load i32, i32* @y.13
  %82 = sub i32 %80, 823389606
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 823389606
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %113

; <label>:106:                                    ; preds = %75
  br label %107

; <label>:107:                                    ; preds = %106
  %108 = load i8*, i8** %9, align 8
  %109 = load i32, i32* %10, align 4
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  resume { i8*, i32 } %111

; <label>:112:                                    ; preds = %32, %17
  br label %32

; <label>:113:                                    ; preds = %75, %60
  %114 = landingpad { i8*, i32 }
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %9, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %10, align 4
  %117 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %117) #3
  br label %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.14
  %5 = load i32, i32* @y.15
  %6 = add i32 %4, 2014394766
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2014394766
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1402494421, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1402494421, label %18
    i32 -744113237, label %26
    i32 -2053059532, label %45
    i32 -1529935866, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -744113237, i32 -1529935866
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %27, align 8
  %28 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %27, align 8
  %29 = bitcast %"class.std::allocator.2"* %28 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %29) #3
  %30 = load i32, i32* @x.14
  %31 = load i32, i32* @y.15
  %32 = sub i32 %30, -1077231249
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1077231249
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -2053059532, i32 -1529935866
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %47, align 8
  %48 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %47, align 8
  %49 = bitcast %"class.std::allocator.2"* %48 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %49) #3
  store i32 -744113237, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"*, i64, %"class.std::vector"* dereferenceable(24), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"* %12, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.0"* %11, i64 %15, %"class.std::vector"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.18
  %5 = load i32, i32* @y.19
  %6 = sub i32 %4, -1270829279
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1270829279
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1652570995, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1652570995, label %18
    i32 -1983534851, label %38
    i32 937341864, label %68
    i32 -657700382, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1983534851, i32 -657700382
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  %41 = bitcast %"class.std::allocator.2"* %40 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %41) #3
  %42 = load i32, i32* @x.18
  %43 = load i32, i32* @y.19
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 937341864, i32 -657700382
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %70, align 8
  %71 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %70, align 8
  %72 = bitcast %"class.std::allocator.2"* %71 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %72) #3
  store i32 -1983534851, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.20
  %3 = load i32, i32* @y.21
  %4 = sub i32 %2, -448019120
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -448019120
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %54

; <label>:16:                                     ; preds = %1, %54
  %17 = alloca %"class.std::vector"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %17, align 8
  %20 = load %"class.std::vector"*, %"class.std::vector"** %17, align 8
  %21 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %30 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %29) #3
  %31 = load i32, i32* @x.20
  %32 = load i32, i32* @y.21
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %54

; <label>:44:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %24, i32* %28, %"class.std::allocator"* dereferenceable(1) %30)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  %46 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %46) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %18, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %19, align 4
  %51 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %53) #10
  unreachable

; <label>:54:                                     ; preds = %16, %1
  %55 = alloca %"class.std::vector"*, align 8
  %56 = alloca i8*
  %57 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %55, align 8
  %58 = load %"class.std::vector"*, %"class.std::vector"** %55, align 8
  %59 = bitcast %"class.std::vector"* %58 to %"struct.std::_Vector_base"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %"class.std::vector"* %58 to %"struct.std::_Vector_base"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast %"class.std::vector"* %58 to %"struct.std::_Vector_base"*
  %68 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %67) #3
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %9, i64 %10
  ret %"class.std::vector"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::deque.8"*, i32*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::initializer_list.11", align 8
  %6 = alloca %"class.std::deque.8"*, align 8
  %7 = alloca %"class.std::allocator"*, align 8
  %8 = alloca %"struct.std::forward_iterator_tag", align 1
  %9 = alloca %"struct.std::random_access_iterator_tag", align 1
  %10 = alloca i8*
  %11 = alloca i32
  %12 = bitcast %"class.std::initializer_list.11"* %5 to { i32*, i64 }*
  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 0
  store i32* %1, i32** %13, align 8
  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 1
  store i64 %2, i64* %14, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %6, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %7, align 8
  %15 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %16 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %17 = load %"class.std::allocator"*, %"class.std::allocator"** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_(%"class.std::_Deque_base.9"* %16, %"class.std::allocator"* dereferenceable(1) %17)
  %18 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.11"* %5) #3
  %19 = call i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list.11"* %5) #3
  %20 = bitcast %"struct.std::random_access_iterator_tag"* %9 to %"struct.std::forward_iterator_tag"*
  invoke void @_ZNSt5dequeIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag(%"class.std::deque.8"* %15, i32* %18, i32* %19)
          to label %21 unwind label %64

; <label>:21:                                     ; preds = %4
  %22 = load i32, i32* @x.28
  %23 = load i32, i32* @y.29
  %24 = sub i32 %22, -2012355114
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -2012355114
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %74

; <label>:48:                                     ; preds = %21, %74
  %49 = load i32, i32* @x.28
  %50 = load i32, i32* @y.29
  %51 = sub i32 %49, -37576354
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -37576354
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %74

; <label>:63:                                     ; preds = %48
  ret void

; <label>:64:                                     ; preds = %4
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %10, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %11, align 4
  %68 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %68) #3
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %10, align 8
  %71 = load i32, i32* %11, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  resume { i8*, i32 } %73

; <label>:74:                                     ; preds = %48, %21
  br label %48
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5dequeIiSaIiEEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.30
  %5 = load i32, i32* @y.31
  %6 = add i32 %4, 592867838
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 592867838
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 158293674, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 158293674, label %18
    i32 -1734427506, label %26
    i32 -1149504361, label %57
    i32 1772326920, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1734427506, i32 1772326920
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %27, align 8
  %28 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %27, align 8
  %29 = bitcast %"class.std::allocator.5"* %28 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %29) #3
  %30 = load i32, i32* @x.30
  %31 = load i32, i32* @y.31
  %32 = add i32 %30, -1186576601
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1186576601
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1149504361, i32 1772326920
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %59, align 8
  %60 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %59, align 8
  %61 = bitcast %"class.std::allocator.5"* %60 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %61) #3
  store i32 -1734427506, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EEC2ESt16initializer_listIS1_ERKS2_(%"class.std::deque"*, %"class.std::deque.8"*, i64, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.32
  %6 = load i32, i32* @y.33
  %7 = sub i32 %5, -361561783
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -361561783
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %144

; <label>:31:                                     ; preds = %4, %144
  %32 = alloca %"class.std::initializer_list", align 8
  %33 = alloca %"class.std::deque"*, align 8
  %34 = alloca %"class.std::allocator.5"*, align 8
  %35 = alloca %"struct.std::forward_iterator_tag", align 1
  %36 = alloca %"struct.std::random_access_iterator_tag", align 1
  %37 = alloca i8*
  %38 = alloca i32
  %39 = bitcast %"class.std::initializer_list"* %32 to { %"class.std::deque.8"*, i64 }*
  %40 = getelementptr inbounds { %"class.std::deque.8"*, i64 }, { %"class.std::deque.8"*, i64 }* %39, i32 0, i32 0
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %40, align 8
  %41 = getelementptr inbounds { %"class.std::deque.8"*, i64 }, { %"class.std::deque.8"*, i64 }* %39, i32 0, i32 1
  store i64 %2, i64* %41, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %33, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %34, align 8
  %42 = load %"class.std::deque"*, %"class.std::deque"** %33, align 8
  %43 = bitcast %"class.std::deque"* %42 to %"class.std::_Deque_base"*
  %44 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %34, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EEC2ERKS3_(%"class.std::_Deque_base"* %43, %"class.std::allocator.5"* dereferenceable(1) %44)
  %45 = call %"class.std::deque.8"* @_ZNKSt16initializer_listISt5dequeIiSaIiEEE5beginEv(%"class.std::initializer_list"* %32) #3
  %46 = call %"class.std::deque.8"* @_ZNKSt16initializer_listISt5dequeIiSaIiEEE3endEv(%"class.std::initializer_list"* %32) #3
  %47 = bitcast %"struct.std::random_access_iterator_tag"* %36 to %"struct.std::forward_iterator_tag"*
  %48 = load i32, i32* @x.32
  %49 = load i32, i32* @y.33
  %50 = add i32 %48, 207817381
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 207817381
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %144

; <label>:62:                                     ; preds = %31
  invoke void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::deque"* %42, %"class.std::deque.8"* %45, %"class.std::deque.8"* %46)
          to label %63 unwind label %64

; <label>:63:                                     ; preds = %62
  ret void

; <label>:64:                                     ; preds = %62
  %65 = load i32, i32* @x.32
  %66 = load i32, i32* @y.33
  %67 = add i32 %65, -986576028
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -986576028
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %161

; <label>:91:                                     ; preds = %64, %161
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %37, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %38, align 4
  %95 = bitcast %"class.std::deque"* %42 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EED2Ev(%"class.std::_Deque_base"* %95) #3
  %96 = load i32, i32* @x.32
  %97 = load i32, i32* @y.33
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %161

; <label>:109:                                    ; preds = %91
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i32, i32* @x.32
  %112 = load i32, i32* @y.33
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %166

; <label>:124:                                    ; preds = %110, %166
  %125 = load i8*, i8** %37, align 8
  %126 = load i32, i32* %38, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  %129 = load i32, i32* @x.32
  %130 = load i32, i32* @y.33
  %131 = sub i32 %129, -886628806
  %132 = sub i32 %131, 1
  %133 = add i32 %132, -886628806
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %166

; <label>:143:                                    ; preds = %124
  resume { i8*, i32 } %128

; <label>:144:                                    ; preds = %31, %4
  %145 = alloca %"class.std::initializer_list", align 8
  %146 = alloca %"class.std::deque"*, align 8
  %147 = alloca %"class.std::allocator.5"*, align 8
  %148 = alloca %"struct.std::forward_iterator_tag", align 1
  %149 = alloca %"struct.std::random_access_iterator_tag", align 1
  %150 = alloca i8*
  %151 = alloca i32
  %152 = bitcast %"class.std::initializer_list"* %145 to { %"class.std::deque.8"*, i64 }*
  %153 = getelementptr inbounds { %"class.std::deque.8"*, i64 }, { %"class.std::deque.8"*, i64 }* %152, i32 0, i32 0
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %153, align 8
  %154 = getelementptr inbounds { %"class.std::deque.8"*, i64 }, { %"class.std::deque.8"*, i64 }* %152, i32 0, i32 1
  store i64 %2, i64* %154, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %146, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %147, align 8
  %155 = load %"class.std::deque"*, %"class.std::deque"** %146, align 8
  %156 = bitcast %"class.std::deque"* %155 to %"class.std::_Deque_base"*
  %157 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %147, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EEC2ERKS3_(%"class.std::_Deque_base"* %156, %"class.std::allocator.5"* dereferenceable(1) %157)
  %158 = call %"class.std::deque.8"* @_ZNKSt16initializer_listISt5dequeIiSaIiEEE5beginEv(%"class.std::initializer_list"* %145) #3
  %159 = call %"class.std::deque.8"* @_ZNKSt16initializer_listISt5dequeIiSaIiEEE3endEv(%"class.std::initializer_list"* %145) #3
  %160 = bitcast %"struct.std::random_access_iterator_tag"* %149 to %"struct.std::forward_iterator_tag"*
  br label %31

; <label>:161:                                    ; preds = %91, %64
  %162 = landingpad { i8*, i32 }
          cleanup
  %163 = extractvalue { i8*, i32 } %162, 0
  store i8* %163, i8** %37, align 8
  %164 = extractvalue { i8*, i32 } %162, 1
  store i32 %164, i32* %38, align 4
  %165 = bitcast %"class.std::deque"* %42 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EED2Ev(%"class.std::_Deque_base"* %165) #3
  br label %91

; <label>:166:                                    ; preds = %124, %110
  %167 = load i8*, i8** %37, align 8
  %168 = load i32, i32* %38, align 4
  %169 = insertvalue { i8*, i32 } undef, i8* %167, 0
  %170 = insertvalue { i8*, i32 } %169, i32 %168, 1
  br label %124
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5dequeIiSaIiEEED2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.34
  %5 = load i32, i32* @y.35
  %6 = sub i32 %4, 2069165899
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2069165899
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1041261659, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1041261659, label %18
    i32 1745690091, label %38
    i32 608087848, label %57
    i32 801259078, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1745690091, i32 801259078
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %39, align 8
  %40 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %39, align 8
  %41 = bitcast %"class.std::allocator.5"* %40 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %41) #3
  %42 = load i32, i32* @x.34
  %43 = load i32, i32* @y.35
  %44 = sub i32 %42, 1750827577
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1750827577
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 608087848, i32 801259078
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %59, align 8
  %60 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %59, align 8
  %61 = bitcast %"class.std::allocator.5"* %60 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %61) #3
  store i32 1745690091, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque.8"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %2, align 8
  %7 = load %"class.std::deque.8"*, %"class.std::deque.8"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque.8"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque.8"* %7) #3
  %8 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %9 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque.8"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator"* dereferenceable(1) %9)
          to label %10 unwind label %41

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.36
  %12 = load i32, i32* @y.37
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %48

; <label>:24:                                     ; preds = %10, %48
  %25 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %25) #3
  %26 = load i32, i32* @x.36
  %27 = load i32, i32* @y.37
  %28 = add i32 %26, -1854061044
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -1854061044
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %48

; <label>:40:                                     ; preds = %24
  ret void

; <label>:41:                                     ; preds = %1
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %5, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %6, align 4
  %45 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %45) #3
  br label %46

; <label>:46:                                     ; preds = %41
  %47 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %47) #10
  unreachable

; <label>:48:                                     ; preds = %24, %10
  %49 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %49) #3
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIS_IiSaIiEESaIS1_EE5emptyEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqISt5dequeIiSaIiEERS2_PS2_EbRKSt15_Deque_iteratorIT_T0_T1_ESB_(%"struct.std::_Deque_iterator.10"* dereferenceable(32) %6, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque.8"* @_ZNSt5dequeIS_IiSaIiEESaIS1_EE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE5beginEv(%"struct.std::_Deque_iterator.10"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(80) %"class.std::deque.8"* @_ZNKSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EdeEv(%"struct.std::_Deque_iterator.10"* %3) #3
  ret %"class.std::deque.8"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2ERKS1_(%"class.std::deque.8"*, %"class.std::deque.8"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque.8"*, align 8
  %4 = alloca %"class.std::deque.8"*, align 8
  %5 = alloca %"class.std::allocator", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"struct.std::_Deque_iterator.19", align 8
  %9 = alloca %"struct.std::_Deque_iterator.19", align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %3, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %4, align 8
  %12 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %13 = bitcast %"class.std::deque.8"* %12 to %"class.std::_Deque_base.9"*
  %14 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %15 = bitcast %"class.std::deque.8"* %14 to %"class.std::_Deque_base.9"*
  %16 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator"* sret %5, %"class.std::allocator"* dereferenceable(1) %16)
  %17 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %18 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque.8"* %17) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_m(%"class.std::_Deque_base.9"* %13, %"class.std::allocator"* dereferenceable(1) %5, i64 %18)
          to label %19 unwind label %70

; <label>:19:                                     ; preds = %2
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %5) #3
  %20 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  call void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.19"* sret %8, %"class.std::deque.8"* %20) #3
  %21 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  call void @_ZNKSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.19"* sret %9, %"class.std::deque.8"* %21) #3
  %22 = bitcast %"class.std::deque.8"* %12 to %"class.std::_Deque_base.9"*
  %23 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %23, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %10, %"struct.std::_Deque_iterator"* dereferenceable(32) %24) #3
  %25 = bitcast %"class.std::deque.8"* %12 to %"class.std::_Deque_base.9"*
  %26 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %25) #3
  invoke void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %11, %"struct.std::_Deque_iterator.19"* byval align 8 %8, %"struct.std::_Deque_iterator.19"* byval align 8 %9, %"struct.std::_Deque_iterator"* %10, %"class.std::allocator"* dereferenceable(1) %26)
          to label %27 unwind label %74

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* @x.42
  %29 = load i32, i32* @y.43
  %30 = add i32 %28, -178611100
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -178611100
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %84

; <label>:42:                                     ; preds = %27, %84
  %43 = load i32, i32* @x.42
  %44 = load i32, i32* @y.43
  %45 = sub i32 %43, 131594569
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 131594569
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %84

; <label>:69:                                     ; preds = %42
  ret void

; <label>:70:                                     ; preds = %2
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %6, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %7, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %5) #3
  br label %79

; <label>:74:                                     ; preds = %19
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %6, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %7, align 4
  %78 = bitcast %"class.std::deque.8"* %12 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %78) #3
  br label %79

; <label>:79:                                     ; preds = %74, %70
  %80 = load i8*, i8** %6, align 8
  %81 = load i32, i32* %7, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  resume { i8*, i32 } %83

; <label>:84:                                     ; preds = %42, %27
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::vector"*, i32*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::initializer_list.11", align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"class.std::allocator"*, align 8
  %8 = alloca %"struct.std::forward_iterator_tag", align 1
  %9 = alloca %"struct.std::random_access_iterator_tag", align 1
  %10 = alloca i8*
  %11 = alloca i32
  %12 = bitcast %"class.std::initializer_list.11"* %5 to { i32*, i64 }*
  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 0
  store i32* %1, i32** %13, align 8
  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 1
  store i64 %2, i64* %14, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %7, align 8
  %15 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %16 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %17 = load %"class.std::allocator"*, %"class.std::allocator"** %7, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base"* %16, %"class.std::allocator"* dereferenceable(1) %17) #3
  %18 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.11"* %5) #3
  %19 = call i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list.11"* %5) #3
  %20 = bitcast %"struct.std::random_access_iterator_tag"* %9 to %"struct.std::forward_iterator_tag"*
  invoke void @_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag(%"class.std::vector"* %15, i32* %18, i32* %19)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %4
  ret void

; <label>:22:                                     ; preds = %4
  %23 = load i32, i32* @x.44
  %24 = load i32, i32* @y.45
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %61

; <label>:36:                                     ; preds = %22, %61
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %10, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %11, align 4
  %40 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %40) #3
  %41 = load i32, i32* @x.44
  %42 = load i32, i32* @y.45
  %43 = sub i32 %41, -448547382
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -448547382
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %61

; <label>:55:                                     ; preds = %36
  br label %56

; <label>:56:                                     ; preds = %55
  %57 = load i8*, i8** %10, align 8
  %58 = load i32, i32* %11, align 4
  %59 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %60 = insertvalue { i8*, i32 } %59, i32 %58, 1
  resume { i8*, i32 } %60

; <label>:61:                                     ; preds = %36, %22
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %10, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %11, align 4
  %65 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %65) #3
  br label %36
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2ESt16initializer_listIS1_ERKS2_(%"class.std::vector.0"*, %"class.std::vector"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::initializer_list.12", align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca %"class.std::allocator.2"*, align 8
  %8 = alloca %"struct.std::forward_iterator_tag", align 1
  %9 = alloca %"struct.std::random_access_iterator_tag", align 1
  %10 = alloca i8*
  %11 = alloca i32
  %12 = bitcast %"class.std::initializer_list.12"* %5 to { %"class.std::vector"*, i64 }*
  %13 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %12, i32 0, i32 0
  store %"class.std::vector"* %1, %"class.std::vector"** %13, align 8
  %14 = getelementptr inbounds { %"class.std::vector"*, i64 }, { %"class.std::vector"*, i64 }* %12, i32 0, i32 1
  store i64 %2, i64* %14, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %7, align 8
  %15 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %16 = bitcast %"class.std::vector.0"* %15 to %"struct.std::_Vector_base.1"*
  %17 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %7, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base.1"* %16, %"class.std::allocator.2"* dereferenceable(1) %17) #3
  %18 = call %"class.std::vector"* @_ZNKSt16initializer_listISt6vectorIiSaIiEEE5beginEv(%"class.std::initializer_list.12"* %5) #3
  %19 = call %"class.std::vector"* @_ZNKSt16initializer_listISt6vectorIiSaIiEEE3endEv(%"class.std::initializer_list.12"* %5) #3
  %20 = bitcast %"struct.std::random_access_iterator_tag"* %9 to %"struct.std::forward_iterator_tag"*
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::vector.0"* %15, %"class.std::vector"* %18, %"class.std::vector"* %19)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %4
  ret void

; <label>:22:                                     ; preds = %4
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %10, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %11, align 4
  %26 = bitcast %"class.std::vector.0"* %15 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %26) #3
  br label %27

; <label>:27:                                     ; preds = %22
  %28 = load i32, i32* @x.46
  %29 = load i32, i32* @y.47
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %85

; <label>:53:                                     ; preds = %27, %85
  %54 = load i8*, i8** %10, align 8
  %55 = load i32, i32* %11, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  %58 = load i32, i32* @x.46
  %59 = load i32, i32* @y.47
  %60 = add i32 %58, -1826939813
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -1826939813
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %85

; <label>:84:                                     ; preds = %53
  resume { i8*, i32 } %57

; <label>:85:                                     ; preds = %53, %27
  %86 = load i8*, i8** %10, align 8
  %87 = load i32, i32* %11, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  br label %53
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  ret %"class.std::vector"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.50
  %6 = load i32, i32* @y.51
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -901572590, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -901572590, label %18
    i32 -2089905544, label %38
    i32 1771501435, label %74
    i32 -1518145816, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2089905544, i32 -1518145816
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %43, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %39, %"class.std::vector"** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %46 = load %"class.std::vector"*, %"class.std::vector"** %45, align 8
  store %"class.std::vector"* %46, %"class.std::vector"** %2
  %47 = load i32, i32* @x.50
  %48 = load i32, i32* @y.51
  %49 = sub i32 %47, 1306210029
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1306210029
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1771501435, i32 -1518145816
  store i32 %73, i32* %14
  br label %85

; <label>:74:                                     ; preds = %15
  %75 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %78 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %78, align 8
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %78, align 8
  %80 = bitcast %"class.std::vector.0"* %79 to %"struct.std::_Vector_base.1"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %81, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %77, %"class.std::vector"** dereferenceable(8) %82) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  %84 = load %"class.std::vector"*, %"class.std::vector"** %83, align 8
  store i32 -2089905544, i32* %14
  br label %85

; <label>:85:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  %11 = icmp ne %"class.std::vector"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.54
  %6 = load i32, i32* @y.55
  %7 = add i32 %5, -1789131955
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1789131955
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1491768923, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1491768923, label %19
    i32 1243338240, label %27
    i32 897325301, label %47
    i32 -1569832745, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1243338240, i32 -1569832745
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %31 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  store %"class.std::vector"* %31, %"class.std::vector"** %2
  %32 = load i32, i32* @x.54
  %33 = load i32, i32* @y.55
  %34 = add i32 %32, -772132569
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -772132569
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 897325301, i32 -1569832745
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %50, align 8
  %51 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %50, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %51, i32 0, i32 0
  %53 = load %"class.std::vector"*, %"class.std::vector"** %52, align 8
  store i32 1243338240, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.56
  %4 = load i32, i32* @y.57
  %5 = add i32 %3, -299416843
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -299416843
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %107

; <label>:29:                                     ; preds = %2, %107
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %"class.std::allocator", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %31, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %38 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %39 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %39) #3
  %41 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator"* sret %32, %"class.std::allocator"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.56
  %45 = load i32, i32* @y.57
  %46 = sub i32 %44, 335171033
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 335171033
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %107

; <label>:70:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base"* %38, i64 %40, %"class.std::allocator"* dereferenceable(1) %32)
          to label %71 unwind label %93

; <label>:71:                                     ; preds = %70
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %32) #3
  %72 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %73 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector"* %72) #3
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %35, i32 0, i32 0
  store i32* %73, i32** %74, align 8
  %75 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %76 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector"* %75) #3
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %36, i32 0, i32 0
  store i32* %76, i32** %77, align 8
  %78 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %83 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %82) #3
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %35, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %36, i32 0, i32 0
  %87 = load i32*, i32** %86, align 8
  %88 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32* %85, i32* %87, i32* %81, %"class.std::allocator"* dereferenceable(1) %83)
          to label %89 unwind label %97

; <label>:89:                                     ; preds = %71
  %90 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %91, i32 0, i32 1
  store i32* %88, i32** %92, align 8
  ret void

; <label>:93:                                     ; preds = %70
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %33, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %34, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %32) #3
  br label %102

; <label>:97:                                     ; preds = %71
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %33, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %34, align 4
  %101 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %101) #3
  br label %102

; <label>:102:                                    ; preds = %97, %93
  %103 = load i8*, i8** %33, align 8
  %104 = load i32, i32* %34, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  resume { i8*, i32 } %106

; <label>:107:                                    ; preds = %29, %2
  %108 = alloca %"class.std::vector"*, align 8
  %109 = alloca %"class.std::vector"*, align 8
  %110 = alloca %"class.std::allocator", align 1
  %111 = alloca i8*
  %112 = alloca i32
  %113 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %114 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %108, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %109, align 8
  %115 = load %"class.std::vector"*, %"class.std::vector"** %108, align 8
  %116 = bitcast %"class.std::vector"* %115 to %"struct.std::_Vector_base"*
  %117 = load %"class.std::vector"*, %"class.std::vector"** %109, align 8
  %118 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %117) #3
  %119 = load %"class.std::vector"*, %"class.std::vector"** %109, align 8
  %120 = bitcast %"class.std::vector"* %119 to %"struct.std::_Vector_base"*
  %121 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %120) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator"* sret %110, %"class.std::allocator"* dereferenceable(1) %121)
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEEixEm(%"class.std::deque.8"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::deque.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %6 = bitcast %"class.std::deque.8"* %5 to %"class.std::_Deque_base.9"*
  %7 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  %9 = load i64, i64* %4, align 8
  %10 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEixEl(%"struct.std::_Deque_iterator"* %8, i64 %9) #3
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE9push_backEOS1_(%"class.std::deque"*, %"class.std::deque.8"* dereferenceable(80)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.60
  %6 = load i32, i32* @y.61
  %7 = add i32 %5, 241568741
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 241568741
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 312818329, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 312818329, label %19
    i32 -1645142602, label %27
    i32 -551343927, label %48
    i32 -1761907034, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1645142602, i32 -1761907034
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  %29 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %29, align 8
  %30 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %31 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %32 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque.8"* dereferenceable(80) %31) #3
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::deque"* %30, %"class.std::deque.8"* dereferenceable(80) %32)
  %33 = load i32, i32* @x.60
  %34 = load i32, i32* @y.61
  %35 = sub i32 %33, -1838105619
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1838105619
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -551343927, i32 -1761907034
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::deque"*, align 8
  %51 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %50, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %51, align 8
  %52 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  %53 = load %"class.std::deque.8"*, %"class.std::deque.8"** %51, align 8
  %54 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque.8"* dereferenceable(80) %53) #3
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::deque"* %52, %"class.std::deque.8"* dereferenceable(80) %54)
  store i32 -1645142602, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.62
  %6 = load i32, i32* @y.63
  %7 = sub i32 %5, 844789872
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 844789872
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1627822031, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1627822031, label %19
    i32 1525301097, label %27
    i32 451092547, label %60
    i32 -1821037720, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1525301097, i32 -1821037720
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %33 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %32, i32 1
  store %"class.std::vector"* %33, %"class.std::vector"** %31, align 8
  %34 = load i32, i32* @x.62
  %35 = load i32, i32* @y.63
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 451092547, i32 -1821037720
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  %66 = load %"class.std::vector"*, %"class.std::vector"** %65, align 8
  %67 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %66, i32 1
  store %"class.std::vector"* %67, %"class.std::vector"** %65, align 8
  store i32 1525301097, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %6, i32 0, i32 0
  %8 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %11, i32 0, i32 2
  %13 = load %"class.std::deque.8"*, %"class.std::deque.8"** %12, align 8
  %14 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %13, i64 -1
  %15 = icmp ne %"class.std::deque.8"* %8, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %18 to %"class.std::allocator.5"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %22, i32 0, i32 0
  %24 = load %"class.std::deque.8"*, %"class.std::deque.8"** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.5"* dereferenceable(1) %19, %"class.std::deque.8"* %24)
          to label %25 unwind label %76

; <label>:25:                                     ; preds = %16
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %28, i32 0, i32 0
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %31 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %30, i32 1
  store %"class.std::deque.8"* %31, %"class.std::deque.8"** %29, align 8
  br label %75

; <label>:32:                                     ; preds = %1
  %33 = load i32, i32* @x.64
  %34 = load i32, i32* @y.65
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %109

; <label>:46:                                     ; preds = %32, %109
  %47 = load i32, i32* @x.64
  %48 = load i32, i32* @y.65
  %49 = add i32 %47, -1283636358
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1283636358
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %109

; <label>:73:                                     ; preds = %46
  invoke void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %73
  br label %75

; <label>:75:                                     ; preds = %74, %25
  ret void

; <label>:76:                                     ; preds = %73, %16
  %77 = load i32, i32* @x.64
  %78 = load i32, i32* @y.65
  %79 = add i32 %77, 613454896
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, 613454896
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %110

; <label>:91:                                     ; preds = %76, %110
  %92 = landingpad { i8*, i32 }
          catch i8* null
  %93 = extractvalue { i8*, i32 } %92, 0
  call void @__clang_call_terminate(i8* %93) #10
  %94 = load i32, i32* @x.64
  %95 = load i32, i32* @y.65
  %96 = sub i32 %94, -2099986329
  %97 = sub i32 %96, 1
  %98 = add i32 %97, -2099986329
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %110

; <label>:108:                                    ; preds = %91
  unreachable

; <label>:109:                                    ; preds = %46, %32
  br label %46

; <label>:110:                                    ; preds = %91, %76
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  call void @__clang_call_terminate(i8* %112) #10
  br label %91
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.66
  %3 = load i32, i32* @y.67
  %4 = add i32 %2, -922585586
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -922585586
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %138

; <label>:16:                                     ; preds = %1, %138
  %17 = alloca %"class.std::vector.0"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %17, align 8
  %20 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %21 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"class.std::vector"*, %"class.std::vector"** %23, align 8
  %25 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"class.std::vector"*, %"class.std::vector"** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  %30 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %29) #3
  %31 = load i32, i32* @x.66
  %32 = load i32, i32* @y.67
  %33 = sub i32 %31, 493171405
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 493171405
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %138

; <label>:45:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector"* %24, %"class.std::vector"* %28, %"class.std::allocator.2"* dereferenceable(1) %30)
          to label %46 unwind label %48

; <label>:46:                                     ; preds = %45
  %47 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %47) #3
  ret void

; <label>:48:                                     ; preds = %45
  %49 = load i32, i32* @x.66
  %50 = load i32, i32* @y.67
  %51 = add i32 %49, 1134004087
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1134004087
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %153

; <label>:75:                                     ; preds = %48, %153
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %18, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %19, align 4
  %79 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %79) #3
  %80 = load i32, i32* @x.66
  %81 = load i32, i32* @y.67
  %82 = add i32 %80, 402095488
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 402095488
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %153

; <label>:94:                                     ; preds = %75
  br label %95

; <label>:95:                                     ; preds = %94
  %96 = load i32, i32* @x.66
  %97 = load i32, i32* @y.67
  %98 = sub i32 %96, 1993147723
  %99 = sub i32 %98, 1
  %100 = add i32 %99, 1993147723
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %158

; <label>:110:                                    ; preds = %95, %158
  %111 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %111) #10
  %112 = load i32, i32* @x.66
  %113 = load i32, i32* @y.67
  %114 = sub i32 0, 1
  %115 = add i32 %112, %114
  %116 = sub i32 %112, 1
  %117 = mul i32 %112, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %113, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %158

; <label>:137:                                    ; preds = %110
  unreachable

; <label>:138:                                    ; preds = %16, %1
  %139 = alloca %"class.std::vector.0"*, align 8
  %140 = alloca i8*
  %141 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %139, align 8
  %142 = load %"class.std::vector.0"*, %"class.std::vector.0"** %139, align 8
  %143 = bitcast %"class.std::vector.0"* %142 to %"struct.std::_Vector_base.1"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %144, i32 0, i32 0
  %146 = load %"class.std::vector"*, %"class.std::vector"** %145, align 8
  %147 = bitcast %"class.std::vector.0"* %142 to %"struct.std::_Vector_base.1"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %148, i32 0, i32 1
  %150 = load %"class.std::vector"*, %"class.std::vector"** %149, align 8
  %151 = bitcast %"class.std::vector.0"* %142 to %"struct.std::_Vector_base.1"*
  %152 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %151) #3
  br label %16

; <label>:153:                                    ; preds = %75, %48
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  store i8* %155, i8** %18, align 8
  %156 = extractvalue { i8*, i32 } %154, 1
  store i32 %156, i32* %19, align 4
  %157 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %157) #3
  br label %75

; <label>:158:                                    ; preds = %110, %95
  %159 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %159) #10
  br label %110
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.68
  %9 = load i32, i32* @y.69
  %10 = add i32 %8, -1008730922
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1008730922
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -295216866, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %124
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -295216866, label %22
    i32 67514869, label %42
    i32 -1060895926, label %85
    i32 239176681, label %88
    i32 1937190554, label %106
    i32 1032406860, label %110
    i32 -410650108, label %111
  ]

; <label>:21:                                     ; preds = %19
  br label %124

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 67514869, i32 -410650108
  store i32 %41, i32* %18
  br label %124

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector"*, align 8
  %44 = alloca i32*, align 8
  store i32** %44, i32*** %5
  store %"class.std::vector"* %0, %"class.std::vector"** %43, align 8
  %45 = load volatile i32**, i32*** %5
  store i32* %1, i32** %45, align 8
  %46 = load %"class.std::vector"*, %"class.std::vector"** %43, align 8
  store %"class.std::vector"* %46, %"class.std::vector"** %4
  %47 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %48 = bitcast %"class.std::vector"* %47 to %"struct.std::_Vector_base"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %49, i32 0, i32 1
  %51 = load i32*, i32** %50, align 8
  %52 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %53 = bitcast %"class.std::vector"* %52 to %"struct.std::_Vector_base"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %54, i32 0, i32 2
  %56 = load i32*, i32** %55, align 8
  %57 = icmp ne i32* %51, %56
  store i1 %57, i1* %3
  %58 = load i32, i32* @x.68
  %59 = load i32, i32* @y.69
  %60 = add i32 %58, -20909377
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -20909377
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1060895926, i32 -410650108
  store i32 %84, i32* %18
  br label %124

; <label>:85:                                     ; preds = %19
  %86 = load volatile i1, i1* %3
  %87 = select i1 %86, i32 239176681, i32 1937190554
  store i32 %87, i32* %18
  br label %124

; <label>:88:                                     ; preds = %19
  %89 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %90 = bitcast %"class.std::vector"* %89 to %"struct.std::_Vector_base"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %92 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %91 to %"class.std::allocator"*
  %93 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %94 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %95, i32 0, i32 1
  %97 = load i32*, i32** %96, align 8
  %98 = load volatile i32**, i32*** %5
  %99 = load i32*, i32** %98, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %92, i32* %97, i32* dereferenceable(4) %99)
  %100 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %101 = bitcast %"class.std::vector"* %100 to %"struct.std::_Vector_base"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %102, i32 0, i32 1
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds i32, i32* %104, i32 1
  store i32* %105, i32** %103, align 8
  store i32 1032406860, i32* %18
  br label %124

; <label>:106:                                    ; preds = %19
  %107 = load volatile i32**, i32*** %5
  %108 = load i32*, i32** %107, align 8
  %109 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector"* %109, i32* dereferenceable(4) %108)
  store i32 1032406860, i32* %18
  br label %124

; <label>:110:                                    ; preds = %19
  ret void

; <label>:111:                                    ; preds = %19
  %112 = alloca %"class.std::vector"*, align 8
  %113 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %112, align 8
  store i32* %1, i32** %113, align 8
  %114 = load %"class.std::vector"*, %"class.std::vector"** %112, align 8
  %115 = bitcast %"class.std::vector"* %114 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %116, i32 0, i32 1
  %118 = load i32*, i32** %117, align 8
  %119 = bitcast %"class.std::vector"* %114 to %"struct.std::_Vector_base"*
  %120 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %120, i32 0, i32 2
  %122 = load i32*, i32** %121, align 8
  %123 = icmp ne i32* %118, %122
  store i32 67514869, i32* %18
  br label %124

; <label>:124:                                    ; preds = %111, %106, %88, %85, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator.10", align 8
  %4 = alloca %"struct.std::_Deque_iterator.10", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE5beginEv(%"struct.std::_Deque_iterator.10"* sret %3, %"class.std::deque"* %7) #3
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE3endEv(%"struct.std::_Deque_iterator.10"* sret %4, %"class.std::deque"* %7) #3
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #3
  invoke void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator.10"* %3, %"struct.std::_Deque_iterator.10"* %4, %"class.std::allocator.5"* dereferenceable(1) %9)
          to label %10 unwind label %54

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.70
  %12 = load i32, i32* @y.71
  %13 = add i32 %11, -2125454153
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -2125454153
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %115

; <label>:37:                                     ; preds = %10, %115
  %38 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EED2Ev(%"class.std::_Deque_base"* %38) #3
  %39 = load i32, i32* @x.70
  %40 = load i32, i32* @y.71
  %41 = sub i32 %39, -1193874925
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1193874925
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %115

; <label>:53:                                     ; preds = %37
  ret void

; <label>:54:                                     ; preds = %1
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %5, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %6, align 4
  %58 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EED2Ev(%"class.std::_Deque_base"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i32, i32* @x.70
  %61 = load i32, i32* @y.71
  %62 = add i32 %60, 268505706
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 268505706
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %117

; <label>:86:                                     ; preds = %59, %117
  %87 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %87) #10
  %88 = load i32, i32* @x.70
  %89 = load i32, i32* @y.71
  %90 = sub i32 %88, 315092536
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 315092536
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %117

; <label>:114:                                    ; preds = %86
  unreachable

; <label>:115:                                    ; preds = %37, %10
  %116 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EED2Ev(%"class.std::_Deque_base"* %116) #3
  br label %37

; <label>:117:                                    ; preds = %86, %59
  %118 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %118) #10
  br label %86
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, -4919039230341341882
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -4919039230341341882
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 4
  ret i64 %18
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.74
  %5 = load i32, i32* @y.75
  %6 = sub i32 %4, 1480214188
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1480214188
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1123659423, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1123659423, label %18
    i32 -1455490388, label %38
    i32 430990880, label %68
    i32 909161857, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1455490388, i32 909161857
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %39, align 8
  %40 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.74
  %43 = load i32, i32* @y.75
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 430990880, i32 909161857
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %70, align 8
  %71 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72)
  store i32 -1455490388, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.76
  %5 = load i32, i32* @y.77
  %6 = add i32 %4, -1551318341
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1551318341
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -27261440, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %58
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -27261440, label %18
    i32 699737691, label %26
    i32 -55300662, label %55
    i32 -1756756508, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %58

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 699737691, i32 -1756756508
  store i32 %25, i32* %14
  br label %58

; <label>:26:                                     ; preds = %15
  %27 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  %28 = load i32, i32* @x.76
  %29 = load i32, i32* @y.77
  %30 = add i32 %28, 649895756
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 649895756
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -55300662, i32 -1756756508
  store i32 %54, i32* %14
  br label %58

; <label>:55:                                     ; preds = %15
  unreachable

; <label>:56:                                     ; preds = %15
  %57 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  store i32 699737691, i32* %14
  br label %58

; <label>:58:                                     ; preds = %56, %26, %18, %17
  br label %15
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.86
  %3 = load i32, i32* @y.87
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %71

; <label>:27:                                     ; preds = %1, %71
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %31 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = ptrtoint i32* %37 to i64
  %42 = ptrtoint i32* %40 to i64
  %43 = add i64 %41, 1801340041993717886
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, 1801340041993717886
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 4
  %48 = load i32, i32* @x.86
  %49 = load i32, i32* @y.87
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %71

; <label>:61:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %31, i32* %34, i64 %47)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %63) #3
  ret void

; <label>:64:                                     ; preds = %61
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %29, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %30, align 4
  %68 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %68) #3
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %70) #10
  unreachable

; <label>:71:                                     ; preds = %27, %1
  %72 = alloca %"struct.std::_Vector_base"*, align 8
  %73 = alloca i8*
  %74 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %72, align 8
  %75 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %76, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79, i32 0, i32 2
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = ptrtoint i32* %81 to i64
  %86 = ptrtoint i32* %84 to i64
  %87 = sub i64 0, %86
  %88 = add i64 %85, %87
  %89 = sub i64 %85, %86
  %90 = add i64 %88, -9067040490243040589
  %91 = sub i64 %90, 4
  %92 = sub i64 %91, -9067040490243040589
  %93 = sub i64 %88, 4
  %94 = mul i64 %92, 4
  %95 = sdiv exact i64 %88, 4
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.88
  %6 = load i32, i32* @y.89
  %7 = sub i32 %5, 404837348
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 404837348
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 157849362, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 157849362, label %19
    i32 -1850201012, label %39
    i32 -772165505, label %70
    i32 -234235297, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1850201012, i32 -234235297
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load i32*, i32** %40, align 8
  %43 = load i32*, i32** %41, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %42, i32* %43)
  %44 = load i32, i32* @x.88
  %45 = load i32, i32* @y.89
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -772165505, i32 -234235297
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca i32*, align 8
  %73 = alloca i32*, align 8
  store i32* %0, i32** %72, align 8
  store i32* %1, i32** %73, align 8
  %74 = load i32*, i32** %72, align 8
  %75 = load i32*, i32** %73, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %74, i32* %75)
  store i32 -1850201012, i32* %15
  br label %76

; <label>:76:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.90
  %6 = load i32, i32* @y.91
  %7 = add i32 %5, 407954743
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 407954743
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1446673240, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1446673240, label %19
    i32 -1637235915, label %39
    i32 -1131807964, label %57
    i32 481063308, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1637235915, i32 481063308
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load i32, i32* @x.90
  %43 = load i32, i32* @y.91
  %44 = sub i32 %42, -2145165508
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -2145165508
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1131807964, i32 481063308
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca i32*, align 8
  %60 = alloca i32*, align 8
  store i32* %0, i32** %59, align 8
  store i32* %1, i32** %60, align 8
  store i32 -1637235915, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -184773892, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %131
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -184773892, label %15
    i32 317588741, label %19
    i32 510725274, label %47
    i32 -206344333, label %67
    i32 -1408367732, label %68
    i32 490642820, label %96
    i32 -423080034, label %123
    i32 1651565478, label %124
    i32 1348835145, label %130
  ]

; <label>:14:                                     ; preds = %12
  br label %131

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 317588741, i32 -1408367732
  store i32 %18, i32* %11
  br label %131

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.92
  %21 = load i32, i32* @y.93
  %22 = sub i32 %20, 667730281
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 667730281
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 510725274, i32 1651565478
  store i32 %46, i32* %11
  br label %131

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %49 to %"class.std::allocator"*
  %51 = load i32*, i32** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1) %50, i32* %51, i64 %52)
  %53 = load i32, i32* @x.92
  %54 = load i32, i32* @y.93
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -206344333, i32 1651565478
  store i32 %66, i32* %11
  br label %131

; <label>:67:                                     ; preds = %12
  store i32 -1408367732, i32* %11
  br label %131

; <label>:68:                                     ; preds = %12
  %69 = load i32, i32* @x.92
  %70 = load i32, i32* @y.93
  %71 = sub i32 %69, -476048351
  %72 = sub i32 %71, 1
  %73 = add i32 %72, -476048351
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 490642820, i32 1348835145
  store i32 %95, i32* %11
  br label %131

; <label>:96:                                     ; preds = %12
  %97 = load i32, i32* @x.92
  %98 = load i32, i32* @y.93
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 -423080034, i32 1348835145
  store i32 %122, i32* %11
  br label %131

; <label>:123:                                    ; preds = %12
  ret void

; <label>:124:                                    ; preds = %12
  %125 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %126 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %126 to %"class.std::allocator"*
  %128 = load i32*, i32** %7, align 8
  %129 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1) %127, i32* %128, i64 %129)
  store i32 510725274, i32* %11
  br label %131

; <label>:130:                                    ; preds = %12
  store i32 490642820, i32* %11
  br label %131

; <label>:131:                                    ; preds = %130, %124, %96, %68, %67, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.98
  %7 = load i32, i32* @y.99
  %8 = sub i32 %6, 445126933
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 445126933
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2000071435, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2000071435, label %20
    i32 -603810093, label %40
    i32 -1063953574, label %62
    i32 -17969716, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -603810093, i32 -17969716
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %41, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = bitcast i32* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.98
  %48 = load i32, i32* @y.99
  %49 = sub i32 %47, 1726113773
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1726113773
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1063953574, i32 -17969716
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %65 = alloca i32*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %64, align 8
  store i32* %1, i32** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %64, align 8
  %68 = load i32*, i32** %65, align 8
  %69 = bitcast i32* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -603810093, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.100
  %5 = load i32, i32* @y.101
  %6 = sub i32 %4, -116040834
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -116040834
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -398298734, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -398298734, label %18
    i32 -661340983, label %26
    i32 1754829419, label %55
    i32 255629142, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -661340983, i32 255629142
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.100
  %30 = load i32, i32* @y.101
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1754829419, i32 255629142
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %57, align 8
  store i32 -661340983, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.102
  %5 = load i32, i32* @y.103
  %6 = sub i32 %4, -1637807268
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1637807268
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %107

; <label>:18:                                     ; preds = %3, %107
  %19 = alloca %"struct.std::_Vector_base"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %21, align 8
  %24 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %19, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %24, i32 0, i32 0
  %26 = load %"class.std::allocator"*, %"class.std::allocator"** %21, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %25, %"class.std::allocator"* dereferenceable(1) %26) #3
  %27 = load i64, i64* %20, align 8
  %28 = load i32, i32* @x.102
  %29 = load i32, i32* @y.103
  %30 = add i32 %28, 1986075540
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1986075540
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %107

; <label>:54:                                     ; preds = %18
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base"* %24, i64 %27)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %54
  ret void

; <label>:56:                                     ; preds = %54
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %22, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %23, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %25) #3
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* @x.102
  %62 = load i32, i32* @y.103
  %63 = add i32 %61, -303728458
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -303728458
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %117

; <label>:87:                                     ; preds = %60, %117
  %88 = load i8*, i8** %22, align 8
  %89 = load i32, i32* %23, align 4
  %90 = insertvalue { i8*, i32 } undef, i8* %88, 0
  %91 = insertvalue { i8*, i32 } %90, i32 %89, 1
  %92 = load i32, i32* @x.102
  %93 = load i32, i32* @y.103
  %94 = add i32 %92, 1496984565
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 1496984565
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %117

; <label>:106:                                    ; preds = %87
  resume { i8*, i32 } %91

; <label>:107:                                    ; preds = %18, %3
  %108 = alloca %"struct.std::_Vector_base"*, align 8
  %109 = alloca i64, align 8
  %110 = alloca %"class.std::allocator"*, align 8
  %111 = alloca i8*
  %112 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %108, align 8
  store i64 %1, i64* %109, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %110, align 8
  %113 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %108, align 8
  %114 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %113, i32 0, i32 0
  %115 = load %"class.std::allocator"*, %"class.std::allocator"** %110, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %114, %"class.std::allocator"* dereferenceable(1) %115) #3
  %116 = load i64, i64* %109, align 8
  br label %18

; <label>:117:                                    ; preds = %87, %60
  %118 = load i8*, i8** %22, align 8
  %119 = load i32, i32* %23, align 4
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  br label %87
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.104
  %7 = load i32, i32* @y.105
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1453510352, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1453510352, label %19
    i32 2122155966, label %39
    i32 733718247, label %71
    i32 -656764971, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2122155966, i32 -656764971
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i32* %2, i32** %42, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %44 = bitcast %"class.std::vector"* %43 to %"struct.std::_Vector_base"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = load i64, i64* %41, align 8
  %49 = load i32*, i32** %42, align 8
  %50 = bitcast %"class.std::vector"* %43 to %"struct.std::_Vector_base"*
  %51 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %50) #3
  %52 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %47, i64 %48, i32* dereferenceable(4) %49, %"class.std::allocator"* dereferenceable(1) %51)
  %53 = bitcast %"class.std::vector"* %43 to %"struct.std::_Vector_base"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %54, i32 0, i32 1
  store i32* %52, i32** %55, align 8
  %56 = load i32, i32* @x.104
  %57 = load i32, i32* @y.105
  %58 = sub i32 %56, 1959982798
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1959982798
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 733718247, i32 -656764971
  store i32 %70, i32* %15
  br label %89

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector"*, align 8
  %74 = alloca i64, align 8
  %75 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  store i64 %1, i64* %74, align 8
  store i32* %2, i32** %75, align 8
  %76 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %77 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = load i64, i64* %74, align 8
  %82 = load i32*, i32** %75, align 8
  %83 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %84 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %83) #3
  %85 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %80, i64 %81, i32* dereferenceable(4) %82, %"class.std::allocator"* dereferenceable(1) %84)
  %86 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 1
  store i32* %85, i32** %88, align 8
  store i32 2122155966, i32* %15
  br label %89

; <label>:89:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.108
  %6 = load i32, i32* @y.109
  %7 = add i32 %5, -1201219126
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1201219126
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1905413974, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1905413974, label %19
    i32 -2086044980, label %39
    i32 -1823747919, label %74
    i32 -438875626, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2086044980, i32 -438875626
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 0
  store i32* %44, i32** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 1
  store i32* %49, i32** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 2
  store i32* %56, i32** %58, align 8
  %59 = load i32, i32* @x.108
  %60 = load i32, i32* @y.109
  %61 = sub i32 %59, -1427387323
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1427387323
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1823747919, i32 -438875626
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base"*, align 8
  %77 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %78, i64 %79)
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  store i32* %80, i32** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %86, i32 0, i32 1
  store i32* %85, i32** %87, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = load i64, i64* %77, align 8
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %93, i32 0, i32 2
  store i32* %92, i32** %94, align 8
  store i32 -2086044980, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.110
  %6 = load i32, i32* @y.111
  %7 = sub i32 %5, -588761994
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -588761994
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1342406148, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1342406148, label %19
    i32 1011672987, label %39
    i32 -1107734742, label %57
    i32 736252727, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1011672987, i32 736252727
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %40, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %40, align 8
  %43 = load i32, i32* @x.110
  %44 = load i32, i32* @y.111
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1107734742, i32 736252727
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %60 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %59, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %59, align 8
  store i32 1011672987, i32* %15
  br label %62

; <label>:62:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.112
  %10 = load i32, i32* @y.113
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -392530542, i32* %18
  %19 = alloca i32*
  br label %20

; <label>:20:                                     ; preds = %2, %147
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -392530542, label %23
    i32 -1899658497, label %31
    i32 -1980651488, label %66
    i32 -740677445, label %69
    i32 -1397489230, label %96
    i32 -134784891, label %129
    i32 1965278939, label %131
    i32 -812858405, label %132
    i32 950482501, label %134
    i32 1816162044, label %140
  ]

; <label>:22:                                     ; preds = %20
  br label %147

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1899658497, i32 950482501
  store i32 %30, i32* %18
  br label %147

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  %34 = load volatile i64*, i64** %6
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::_Vector_base"* %35, %"struct.std::_Vector_base"** %5
  %36 = load volatile i64*, i64** %6
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.112
  %40 = load i32, i32* @y.113
  %41 = add i32 %39, 1153028591
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1153028591
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1980651488, i32 950482501
  store i32 %65, i32* %18
  br label %147

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -740677445, i32 1965278939
  store i32 %68, i32* %18
  br label %147

; <label>:69:                                     ; preds = %20
  %70 = load i32, i32* @x.112
  %71 = load i32, i32* @y.113
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 -1397489230, i32 1816162044
  store i32 %95, i32* %18
  br label %147

; <label>:96:                                     ; preds = %20
  %97 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %98 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %97, i32 0, i32 0
  %99 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %98 to %"class.std::allocator"*
  %100 = load volatile i64*, i64** %6
  %101 = load i64, i64* %100, align 8
  %102 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %99, i64 %101)
  store i32* %102, i32** %3
  %103 = load i32, i32* @x.112
  %104 = load i32, i32* @y.113
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -134784891, i32 1816162044
  store i32 %128, i32* %18
  br label %147

; <label>:129:                                    ; preds = %20
  store i32 -812858405, i32* %18
  %130 = load volatile i32*, i32** %3
  store i32* %130, i32** %19
  br label %147

; <label>:131:                                    ; preds = %20
  store i32 -812858405, i32* %18
  store i32* null, i32** %19
  br label %147

; <label>:132:                                    ; preds = %20
  %133 = load i32*, i32** %19
  ret i32* %133

; <label>:134:                                    ; preds = %20
  %135 = alloca %"struct.std::_Vector_base"*, align 8
  %136 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %135, align 8
  store i64 %1, i64* %136, align 8
  %137 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %135, align 8
  %138 = load i64, i64* %136, align 8
  %139 = icmp ne i64 %138, 0
  store i32 -1899658497, i32* %18
  br label %147

; <label>:140:                                    ; preds = %20
  %141 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %142 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %141, i32 0, i32 0
  %143 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %142 to %"class.std::allocator"*
  %144 = load volatile i64*, i64** %6
  %145 = load i64, i64* %144, align 8
  %146 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %143, i64 %145)
  store i32 -1397489230, i32* %18
  br label %147

; <label>:147:                                    ; preds = %140, %134, %131, %129, %96, %69, %66, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -978408140, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -978408140, label %16
    i32 893407182, label %21
    i32 1326462560, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 893407182, i32 1326462560
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 4
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32*
  ret i32* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.124
  %8 = load i32, i32* @y.125
  %9 = add i32 %7, 229967075
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 229967075
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1331570772, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %74
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1331570772, label %21
    i32 1956176811, label %41
    i32 -1252094995, label %64
    i32 195058794, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %74

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1956176811, i32 195058794
  store i32 %40, i32* %17
  br label %74

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i64 %1, i64* %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load i32*, i32** %44, align 8
  %48 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %45, i64 %46, i32* dereferenceable(4) %47)
  store i32* %48, i32** %4
  %49 = load i32, i32* @x.124
  %50 = load i32, i32* @y.125
  %51 = sub i32 %49, 1340754216
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1340754216
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1252094995, i32 195058794
  store i32 %63, i32* %17
  br label %74

; <label>:64:                                     ; preds = %18
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca i32*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i32*, align 8
  store i32* %0, i32** %67, align 8
  store i64 %1, i64* %68, align 8
  store i32* %2, i32** %69, align 8
  %70 = load i32*, i32** %67, align 8
  %71 = load i64, i64* %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %70, i64 %71, i32* dereferenceable(4) %72)
  store i32 1956176811, i32* %17
  br label %74

; <label>:74:                                     ; preds = %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i1
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  %10 = load i32*, i32** %7, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = load i64, i64* %6, align 8
  store i64 %12, i64* %9, align 8
  %13 = alloca i32
  store i32 -391170241, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %93
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -391170241, label %17
    i32 1246690484, label %45
    i32 -487679680, label %74
    i32 255989484, label %77
    i32 219038184, label %80
    i32 -190986065, label %88
    i32 -125319408, label %90
  ]

; <label>:16:                                     ; preds = %14
  br label %93

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* @x.128
  %19 = load i32, i32* @y.129
  %20 = add i32 %18, 1029559435
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, 1029559435
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 1246690484, i32 -125319408
  store i32 %44, i32* %13
  br label %93

; <label>:45:                                     ; preds = %14
  %46 = load i64, i64* %9, align 8
  %47 = icmp ugt i64 %46, 0
  store i1 %47, i1* %4
  %48 = load i32, i32* @x.128
  %49 = load i32, i32* @y.129
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -487679680, i32 -125319408
  store i32 %73, i32* %13
  br label %93

; <label>:74:                                     ; preds = %14
  %75 = load volatile i1, i1* %4
  %76 = select i1 %75, i32 255989484, i32 -190986065
  store i32 %76, i32* %13
  br label %93

; <label>:77:                                     ; preds = %14
  %78 = load i32, i32* %8, align 4
  %79 = load i32*, i32** %5, align 8
  store i32 %78, i32* %79, align 4
  store i32 219038184, i32* %13
  br label %93

; <label>:80:                                     ; preds = %14
  %81 = load i64, i64* %9, align 8
  %82 = add i64 %81, -8745057122188196873
  %83 = add i64 %82, -1
  %84 = sub i64 %83, -8745057122188196873
  %85 = add i64 %81, -1
  store i64 %84, i64* %9, align 8
  %86 = load i32*, i32** %5, align 8
  %87 = getelementptr inbounds i32, i32* %86, i32 1
  store i32* %87, i32** %5, align 8
  store i32 -391170241, i32* %13
  br label %93

; <label>:88:                                     ; preds = %14
  %89 = load i32*, i32** %5, align 8
  ret i32* %89

; <label>:90:                                     ; preds = %14
  %91 = load i64, i64* %9, align 8
  %92 = icmp ugt i64 %91, 0
  store i32 1246690484, i32* %13
  br label %93

; <label>:93:                                     ; preds = %90, %80, %77, %74, %45, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.134
  %5 = load i32, i32* @y.135
  %6 = add i32 %4, -1820203374
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1820203374
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1080169328, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1080169328, label %18
    i32 -2078569452, label %38
    i32 -504889883, label %55
    i32 -856519730, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2078569452, i32 -856519730
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %41 = load i32, i32* @x.134
  %42 = load i32, i32* @y.135
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -504889883, i32 -856519730
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  store i32 -2078569452, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %55

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.138
  %15 = load i32, i32* @y.139
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %118

; <label>:39:                                     ; preds = %13, %118
  %40 = load i32, i32* @x.138
  %41 = load i32, i32* @y.139
  %42 = add i32 %40, -628307476
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -628307476
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %118

; <label>:54:                                     ; preds = %39
  ret void

; <label>:55:                                     ; preds = %3
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %7, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10) #3
  br label %59

; <label>:59:                                     ; preds = %55
  %60 = load i32, i32* @x.138
  %61 = load i32, i32* @y.139
  %62 = add i32 %60, 1728808896
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 1728808896
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %119

; <label>:86:                                     ; preds = %59, %119
  %87 = load i8*, i8** %7, align 8
  %88 = load i32, i32* %8, align 4
  %89 = insertvalue { i8*, i32 } undef, i8* %87, 0
  %90 = insertvalue { i8*, i32 } %89, i32 %88, 1
  %91 = load i32, i32* @x.138
  %92 = load i32, i32* @y.139
  %93 = add i32 %91, 892714680
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 892714680
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %119

; <label>:117:                                    ; preds = %86
  resume { i8*, i32 } %90

; <label>:118:                                    ; preds = %39, %13
  br label %39

; <label>:119:                                    ; preds = %86, %59
  %120 = load i8*, i8** %7, align 8
  %121 = load i32, i32* %8, align 4
  %122 = insertvalue { i8*, i32 } undef, i8* %120, 0
  %123 = insertvalue { i8*, i32 } %122, i32 %121, 1
  br label %86
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.0"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.140
  %7 = load i32, i32* @y.141
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 349614890, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 349614890, label %19
    i32 -1193330739, label %39
    i32 -2039102911, label %70
    i32 575424704, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1193330739, i32 575424704
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  store i64 %1, i64* %41, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %42, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %44 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8
  %48 = load i64, i64* %41, align 8
  %49 = load %"class.std::vector"*, %"class.std::vector"** %42, align 8
  %50 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %51 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %50) #3
  %52 = call %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"* %47, i64 %48, %"class.std::vector"* dereferenceable(24) %49, %"class.std::allocator.2"* dereferenceable(1) %51)
  %53 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %54, i32 0, i32 1
  store %"class.std::vector"* %52, %"class.std::vector"** %55, align 8
  %56 = load i32, i32* @x.140
  %57 = load i32, i32* @y.141
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -2039102911, i32 575424704
  store i32 %69, i32* %15
  br label %88

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::vector.0"*, align 8
  %73 = alloca i64, align 8
  %74 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %72, align 8
  store i64 %1, i64* %73, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %74, align 8
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  %76 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %77, i32 0, i32 0
  %79 = load %"class.std::vector"*, %"class.std::vector"** %78, align 8
  %80 = load i64, i64* %73, align 8
  %81 = load %"class.std::vector"*, %"class.std::vector"** %74, align 8
  %82 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %83 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %82) #3
  %84 = call %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"* %79, i64 %80, %"class.std::vector"* dereferenceable(24) %81, %"class.std::allocator.2"* dereferenceable(1) %83)
  %85 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %86, i32 0, i32 1
  store %"class.std::vector"* %84, %"class.std::vector"** %87, align 8
  store i32 -1193330739, i32* %15
  br label %88

; <label>:88:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector"*, %"class.std::vector"** %13, align 8
  %15 = ptrtoint %"class.std::vector"* %11 to i64
  %16 = ptrtoint %"class.std::vector"* %14 to i64
  %17 = sub i64 %15, 2554797474307432002
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 2554797474307432002
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %5, %"class.std::vector"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.142
  %26 = load i32, i32* @y.143
  %27 = sub i32 %25, 808790513
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 808790513
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %72

; <label>:39:                                     ; preds = %24, %72
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %3, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %4, align 4
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %43) #3
  %44 = load i32, i32* @x.142
  %45 = load i32, i32* @y.143
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %72

; <label>:69:                                     ; preds = %39
  br label %70

; <label>:70:                                     ; preds = %69
  %71 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %71) #10
  unreachable

; <label>:72:                                     ; preds = %39, %24
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %76) #3
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector"* null, %"class.std::vector"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector"* null, %"class.std::vector"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector"* null, %"class.std::vector"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.146
  %6 = load i32, i32* @y.147
  %7 = sub i32 %5, 109941809
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 109941809
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -130880378, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -130880378, label %19
    i32 747591919, label %39
    i32 -1595692559, label %73
    i32 -1396199227, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 747591919, i32 -1396199227
  store i32 %38, i32* %15
  br label %94

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.1"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %45, i32 0, i32 0
  store %"class.std::vector"* %44, %"class.std::vector"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::vector"*, %"class.std::vector"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %50, i32 0, i32 1
  store %"class.std::vector"* %49, %"class.std::vector"** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load %"class.std::vector"*, %"class.std::vector"** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %57, i32 0, i32 2
  store %"class.std::vector"* %56, %"class.std::vector"** %58, align 8
  %59 = load i32, i32* @x.146
  %60 = load i32, i32* @y.147
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -1595692559, i32 -1396199227
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.1"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %80, i32 0, i32 0
  store %"class.std::vector"* %79, %"class.std::vector"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::vector"*, %"class.std::vector"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %85, i32 0, i32 1
  store %"class.std::vector"* %84, %"class.std::vector"** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load %"class.std::vector"*, %"class.std::vector"** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %92, i32 0, i32 2
  store %"class.std::vector"* %91, %"class.std::vector"** %93, align 8
  store i32 747591919, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.148
  %5 = load i32, i32* @y.149
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 998363769, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 998363769, label %17
    i32 1754653413, label %37
    i32 743106702, label %68
    i32 714526353, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1754653413, i32 714526353
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %39 to %"class.std::allocator.2"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %40) #3
  %41 = load i32, i32* @x.148
  %42 = load i32, i32* @y.149
  %43 = sub i32 %41, 311253473
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 311253473
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 743106702, i32 714526353
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %70, align 8
  %72 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %71 to %"class.std::allocator.2"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %72) #3
  store i32 1754653413, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca %"struct.std::_Vector_base.1"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5, align 8
  store %"struct.std::_Vector_base.1"* %7, %"struct.std::_Vector_base.1"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1855539710, i32* %9
  %10 = alloca %"class.std::vector"*
  br label %11

; <label>:11:                                     ; preds = %2, %71
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1855539710, label %14
    i32 -1311881361, label %18
    i32 -537942007, label %24
    i32 1126446922, label %39
    i32 -1036048091, label %67
    i32 1880610292, label %68
    i32 678768277, label %70
  ]

; <label>:13:                                     ; preds = %11
  br label %71

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1311881361, i32 -537942007
  store i32 %17, i32* %9
  br label %71

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20 to %"class.std::allocator.2"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1) %21, i64 %22)
  store i32 1880610292, i32* %9
  store %"class.std::vector"* %23, %"class.std::vector"** %10
  br label %71

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.154
  %26 = load i32, i32* @y.155
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 1126446922, i32 678768277
  store i32 %38, i32* %9
  br label %71

; <label>:39:                                     ; preds = %11
  %40 = load i32, i32* @x.154
  %41 = load i32, i32* @y.155
  %42 = sub i32 %40, -1567378044
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1567378044
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1036048091, i32 678768277
  store i32 %66, i32* %9
  br label %71

; <label>:67:                                     ; preds = %11
  store i32 1880610292, i32* %9
  store %"class.std::vector"* null, %"class.std::vector"** %10
  br label %71

; <label>:68:                                     ; preds = %11
  %69 = load %"class.std::vector"*, %"class.std::vector"** %10
  ret %"class.std::vector"* %69

; <label>:70:                                     ; preds = %11
  store i32 1126446922, i32* %9
  br label %71

; <label>:71:                                     ; preds = %70, %67, %39, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %"class.std::vector"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -2026326365, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %131
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2026326365, label %17
    i32 1857177748, label %22
    i32 -2124062385, label %37
    i32 386427143, label %53
    i32 880523772, label %54
    i32 -995229715, label %70
    i32 385277425, label %101
    i32 1413546458, label %103
    i32 -431091779, label %104
  ]

; <label>:16:                                     ; preds = %14
  br label %131

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 1857177748, i32 880523772
  store i32 %21, i32* %13
  br label %131

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.158
  %24 = load i32, i32* @y.159
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -2124062385, i32 1413546458
  store i32 %36, i32* %13
  br label %131

; <label>:37:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.158
  %39 = load i32, i32* @y.159
  %40 = sub i32 %38, -1631617010
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1631617010
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 386427143, i32 1413546458
  store i32 %52, i32* %13
  br label %131

; <label>:53:                                     ; preds = %14
  unreachable

; <label>:54:                                     ; preds = %14
  %55 = load i32, i32* @x.158
  %56 = load i32, i32* @y.159
  %57 = add i32 %55, 1369697699
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1369697699
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -995229715, i32 -431091779
  store i32 %69, i32* %13
  br label %131

; <label>:70:                                     ; preds = %14
  %71 = load i64, i64* %8, align 8
  %72 = mul i64 %71, 24
  %73 = call i8* @_Znwm(i64 %72)
  %74 = bitcast i8* %73 to %"class.std::vector"*
  store %"class.std::vector"* %74, %"class.std::vector"** %4
  %75 = load i32, i32* @x.158
  %76 = load i32, i32* @y.159
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  %100 = select i1 %98, i32 385277425, i32 -431091779
  store i32 %100, i32* %13
  br label %131

; <label>:101:                                    ; preds = %14
  %102 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  ret %"class.std::vector"* %102

; <label>:103:                                    ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -2124062385, i32* %13
  br label %131

; <label>:104:                                    ; preds = %14
  %105 = load i64, i64* %8, align 8
  %106 = sub i64 0, 4142511040574073088
  %107 = sub i64 %106, %105
  %108 = add i64 %107, 4142511040574073088
  %109 = sub i64 0, %105
  %110 = add i64 %108, 7298827005455003450
  %111 = add i64 %110, 24
  %112 = sub i64 %111, 7298827005455003450
  %113 = add i64 %108, 24
  %114 = sub i64 %105, 3508954003850641735
  %115 = sub i64 %114, 24
  %116 = add i64 %115, 3508954003850641735
  %117 = sub i64 %105, 24
  %118 = mul i64 %116, 24
  %119 = shl i64 %105, 24
  %120 = sub i64 0, %105
  %121 = add i64 0, %120
  %122 = sub i64 0, %105
  %123 = add i64 %121, 1172690961127398832
  %124 = add i64 %123, 24
  %125 = sub i64 %124, 1172690961127398832
  %126 = add i64 %121, 24
  %127 = shl i64 %105, 24
  %128 = mul i64 %105, 24
  %129 = call i8* @_Znwm(i64 %128)
  %130 = bitcast i8* %129 to %"class.std::vector"*
  store i32 -995229715, i32* %13
  br label %131

; <label>:131:                                    ; preds = %104, %103, %70, %54, %37, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.162
  %9 = load i32, i32* @y.163
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 459983584, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 459983584, label %21
    i32 -1334290289, label %41
    i32 -471497180, label %77
    i32 724696321, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1334290289, i32 724696321
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::vector"*, align 8
  %45 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %44, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %45, align 8
  %46 = load %"class.std::vector"*, %"class.std::vector"** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load %"class.std::vector"*, %"class.std::vector"** %44, align 8
  %49 = call %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"* %46, i64 %47, %"class.std::vector"* dereferenceable(24) %48)
  store %"class.std::vector"* %49, %"class.std::vector"** %5
  %50 = load i32, i32* @x.162
  %51 = load i32, i32* @y.163
  %52 = sub i32 %50, -339205413
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -339205413
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -471497180, i32 724696321
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  ret %"class.std::vector"* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca %"class.std::vector"*, align 8
  %81 = alloca i64, align 8
  %82 = alloca %"class.std::vector"*, align 8
  %83 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %80, align 8
  store i64 %1, i64* %81, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %82, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %83, align 8
  %84 = load %"class.std::vector"*, %"class.std::vector"** %80, align 8
  %85 = load i64, i64* %81, align 8
  %86 = load %"class.std::vector"*, %"class.std::vector"** %82, align 8
  %87 = call %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"* %84, i64 %85, %"class.std::vector"* dereferenceable(24) %86)
  store i32 -1334290289, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.164
  %6 = load i32, i32* @y.165
  %7 = add i32 %5, 584903573
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 584903573
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1513154213, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1513154213, label %19
    i32 1073162570, label %39
    i32 -893925602, label %58
    i32 109497824, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1073162570, i32 109497824
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %40, align 8
  %41 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %42 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %43, %"class.std::allocator.2"** %2
  %44 = load i32, i32* @x.164
  %45 = load i32, i32* @y.165
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -893925602, i32 109497824
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %61, align 8
  %62 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %63 to %"class.std::allocator.2"*
  store i32 1073162570, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.166
  %8 = load i32, i32* @y.167
  %9 = add i32 %7, 1391690758
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1391690758
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1121205813, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1121205813, label %21
    i32 1232927342, label %29
    i32 1147012341, label %65
    i32 -1847448692, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1232927342, i32 -1847448692
  store i32 %28, i32* %17
  br label %76

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector"*, align 8
  %33 = alloca i8, align 1
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %35 = load i64, i64* %31, align 8
  %36 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %37 = call %"class.std::vector"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_(%"class.std::vector"* %34, i64 %35, %"class.std::vector"* dereferenceable(24) %36)
  store %"class.std::vector"* %37, %"class.std::vector"** %4
  %38 = load i32, i32* @x.166
  %39 = load i32, i32* @y.167
  %40 = add i32 %38, 1329237302
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1329237302
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1147012341, i32 -1847448692
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  ret %"class.std::vector"* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"class.std::vector"*, align 8
  %71 = alloca i8, align 1
  store %"class.std::vector"* %0, %"class.std::vector"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %70, align 8
  %75 = call %"class.std::vector"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_(%"class.std::vector"* %72, i64 %73, %"class.std::vector"* dereferenceable(24) %74)
  store i32 1232927342, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  store %"class.std::vector"* %10, %"class.std::vector"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %103, %3
  %12 = load i32, i32* @x.168
  %13 = load i32, i32* @y.169
  %14 = add i32 %12, -794104611
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, -794104611
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %304

; <label>:26:                                     ; preds = %11, %304
  %27 = load i64, i64* %5, align 8
  %28 = icmp ugt i64 %27, 0
  %29 = load i32, i32* @x.168
  %30 = load i32, i32* @y.169
  %31 = sub i32 %29, 1938996631
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1938996631
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %304

; <label>:43:                                     ; preds = %26
  br i1 %28, label %44, label %174

; <label>:44:                                     ; preds = %43
  %45 = load i32, i32* @x.168
  %46 = load i32, i32* @y.169
  %47 = sub i32 %45, -524708998
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -524708998
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %307

; <label>:71:                                     ; preds = %44, %307
  %72 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %73 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %72) #3
  %74 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %75 = load i32, i32* @x.168
  %76 = load i32, i32* @y.169
  %77 = add i32 %75, 1011211819
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 1011211819
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %307

; <label>:101:                                    ; preds = %71
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::vector"* %73, %"class.std::vector"* dereferenceable(24) %74)
          to label %102 unwind label %110

; <label>:102:                                    ; preds = %101
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = load i64, i64* %5, align 8
  %105 = sub i64 0, -1
  %106 = sub i64 %104, %105
  %107 = add i64 %104, -1
  store i64 %106, i64* %5, align 8
  %108 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %109 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %108, i32 1
  store %"class.std::vector"* %109, %"class.std::vector"** %7, align 8
  br label %11

; <label>:110:                                    ; preds = %101
  %111 = load i32, i32* @x.168
  %112 = load i32, i32* @y.169
  %113 = sub i32 %111, -438050747
  %114 = sub i32 %113, 1
  %115 = add i32 %114, -438050747
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %311

; <label>:137:                                    ; preds = %110, %311
  %138 = landingpad { i8*, i32 }
          catch i8* null
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %8, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %9, align 4
  %141 = load i32, i32* @x.168
  %142 = load i32, i32* @y.169
  %143 = sub i32 %141, -1565729574
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -1565729574
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %311

; <label>:167:                                    ; preds = %137
  br label %168

; <label>:168:                                    ; preds = %167
  %169 = load i8*, i8** %8, align 8
  %170 = call i8* @__cxa_begin_catch(i8* %169) #3
  %171 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %172 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector"* %171, %"class.std::vector"* %172)
          to label %173 unwind label %217

; <label>:173:                                    ; preds = %168
  invoke void @__cxa_rethrow() #12
          to label %273 unwind label %217

; <label>:174:                                    ; preds = %43
  %175 = load i32, i32* @x.168
  %176 = load i32, i32* @y.169
  %177 = sub i32 %175, 1801996609
  %178 = sub i32 %177, 1
  %179 = add i32 %178, 1801996609
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %315

; <label>:189:                                    ; preds = %174, %315
  %190 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %191 = load i32, i32* @x.168
  %192 = load i32, i32* @y.169
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 true, true
  %203 = and i1 %200, true
  %204 = and i1 %198, %202
  %205 = and i1 %201, true
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 true, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  br i1 %214, label %216, label %315

; <label>:216:                                    ; preds = %189
  ret %"class.std::vector"* %190

; <label>:217:                                    ; preds = %173, %168
  %218 = landingpad { i8*, i32 }
          cleanup
  %219 = extractvalue { i8*, i32 } %218, 0
  store i8* %219, i8** %8, align 8
  %220 = extractvalue { i8*, i32 } %218, 1
  store i32 %220, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %221 unwind label %270

; <label>:221:                                    ; preds = %217
  br label %223
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:223:                                    ; preds = %221
  %224 = load i32, i32* @x.168
  %225 = load i32, i32* @y.169
  %226 = sub i32 %224, 1042854292
  %227 = sub i32 %226, 1
  %228 = add i32 %227, 1042854292
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = xor i1 %232, true
  %235 = xor i1 %233, true
  %236 = xor i1 true, true
  %237 = and i1 %234, true
  %238 = and i1 %232, %236
  %239 = and i1 %235, true
  %240 = and i1 %233, %236
  %241 = or i1 %237, %238
  %242 = or i1 %239, %240
  %243 = xor i1 %241, %242
  %244 = or i1 %234, %235
  %245 = xor i1 %244, true
  %246 = or i1 true, %236
  %247 = and i1 %245, %246
  %248 = or i1 %243, %247
  %249 = or i1 %232, %233
  br i1 %248, label %250, label %317

; <label>:250:                                    ; preds = %223, %317
  %251 = load i8*, i8** %8, align 8
  %252 = load i32, i32* %9, align 4
  %253 = insertvalue { i8*, i32 } undef, i8* %251, 0
  %254 = insertvalue { i8*, i32 } %253, i32 %252, 1
  %255 = load i32, i32* @x.168
  %256 = load i32, i32* @y.169
  %257 = add i32 %255, 1936721163
  %258 = sub i32 %257, 1
  %259 = sub i32 %258, 1936721163
  %260 = sub i32 %255, 1
  %261 = mul i32 %255, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %256, 10
  %265 = and i1 %263, %264
  %266 = xor i1 %263, %264
  %267 = or i1 %265, %266
  %268 = or i1 %263, %264
  br i1 %267, label %269, label %317

; <label>:269:                                    ; preds = %250
  resume { i8*, i32 } %254

; <label>:270:                                    ; preds = %217
  %271 = landingpad { i8*, i32 }
          catch i8* null
  %272 = extractvalue { i8*, i32 } %271, 0
  call void @__clang_call_terminate(i8* %272) #10
  unreachable

; <label>:273:                                    ; preds = %173
  %274 = load i32, i32* @x.168
  %275 = load i32, i32* @y.169
  %276 = sub i32 %274, 905719264
  %277 = sub i32 %276, 1
  %278 = add i32 %277, 905719264
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = and i1 %282, %283
  %285 = xor i1 %282, %283
  %286 = or i1 %284, %285
  %287 = or i1 %282, %283
  br i1 %286, label %288, label %322

; <label>:288:                                    ; preds = %273, %322
  %289 = load i32, i32* @x.168
  %290 = load i32, i32* @y.169
  %291 = add i32 %289, -1506458468
  %292 = sub i32 %291, 1
  %293 = sub i32 %292, -1506458468
  %294 = sub i32 %289, 1
  %295 = mul i32 %289, %293
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %290, 10
  %299 = and i1 %297, %298
  %300 = xor i1 %297, %298
  %301 = or i1 %299, %300
  %302 = or i1 %297, %298
  br i1 %301, label %303, label %322

; <label>:303:                                    ; preds = %288
  unreachable

; <label>:304:                                    ; preds = %26, %11
  %305 = load i64, i64* %5, align 8
  %306 = icmp ugt i64 %305, 0
  br label %26

; <label>:307:                                    ; preds = %71, %44
  %308 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %309 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %308) #3
  %310 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  br label %71

; <label>:311:                                    ; preds = %137, %110
  %312 = landingpad { i8*, i32 }
          catch i8* null
  %313 = extractvalue { i8*, i32 } %312, 0
  store i8* %313, i8** %8, align 8
  %314 = extractvalue { i8*, i32 } %312, 1
  store i32 %314, i32* %9, align 4
  br label %137

; <label>:315:                                    ; preds = %189, %174
  %316 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  br label %189

; <label>:317:                                    ; preds = %250, %223
  %318 = load i8*, i8** %8, align 8
  %319 = load i32, i32* %9, align 4
  %320 = insertvalue { i8*, i32 } undef, i8* %318, 0
  %321 = insertvalue { i8*, i32 } %320, i32 %319, 1
  br label %250

; <label>:322:                                    ; preds = %288, %273
  br label %288
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.170
  %6 = load i32, i32* @y.171
  %7 = sub i32 %5, 1146210911
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1146210911
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 823613579, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 823613579, label %19
    i32 1133463054, label %27
    i32 -3072929, label %61
    i32 -2069561740, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1133463054, i32 -2069561740
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %31 = bitcast %"class.std::vector"* %30 to i8*
  %32 = bitcast i8* %31 to %"class.std::vector"*
  %33 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %34 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector"* dereferenceable(24) %33) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector"* %32, %"class.std::vector"* dereferenceable(24) %34)
  %35 = load i32, i32* @x.170
  %36 = load i32, i32* @y.171
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -3072929, i32 -2069561740
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector"*, align 8
  %64 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %64, align 8
  %65 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %66 = bitcast %"class.std::vector"* %65 to i8*
  %67 = bitcast i8* %66 to %"class.std::vector"*
  %68 = load %"class.std::vector"*, %"class.std::vector"** %64, align 8
  %69 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector"* dereferenceable(24) %68) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector"* %67, %"class.std::vector"* dereferenceable(24) %69)
  store i32 1133463054, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector"*
  ret %"class.std::vector"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector"*, %"class.std::vector"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.174
  %6 = load i32, i32* @y.175
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1532184644, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1532184644, label %18
    i32 -1723740949, label %26
    i32 1436352087, label %58
    i32 -645589872, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1723740949, i32 -645589872
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector"*, align 8
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %27, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %27, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector"* %29, %"class.std::vector"* %30)
  %31 = load i32, i32* @x.174
  %32 = load i32, i32* @y.175
  %33 = sub i32 %31, -849705211
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -849705211
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1436352087, i32 -645589872
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::vector"*, align 8
  %61 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %60, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %61, align 8
  %62 = load %"class.std::vector"*, %"class.std::vector"** %60, align 8
  %63 = load %"class.std::vector"*, %"class.std::vector"** %61, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector"* %62, %"class.std::vector"* %63)
  store i32 -1723740949, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector"*, %"class.std::vector"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = alloca i32
  store i32 530604937, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %146
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 530604937, label %9
    i32 335674480, label %14
    i32 -1094630376, label %29
    i32 -1151967654, label %46
    i32 23669221, label %47
    i32 67057087, label %63
    i32 379984388, label %93
    i32 401553309, label %94
    i32 -1967414542, label %110
    i32 1339640291, label %138
    i32 -335475542, label %139
    i32 -1065944329, label %142
    i32 677841955, label %145
  ]

; <label>:8:                                      ; preds = %6
  br label %146

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %12 = icmp ne %"class.std::vector"* %10, %11
  %13 = select i1 %12, i32 335674480, i32 401553309
  store i32 %13, i32* %5
  br label %146

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.178
  %16 = load i32, i32* @y.179
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1094630376, i32 -335475542
  store i32 %28, i32* %5
  br label %146

; <label>:29:                                     ; preds = %6
  %30 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %31 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %30) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector"* %31)
  %32 = load i32, i32* @x.178
  %33 = load i32, i32* @y.179
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1151967654, i32 -335475542
  store i32 %45, i32* %5
  br label %146

; <label>:46:                                     ; preds = %6
  store i32 23669221, i32* %5
  br label %146

; <label>:47:                                     ; preds = %6
  %48 = load i32, i32* @x.178
  %49 = load i32, i32* @y.179
  %50 = add i32 %48, 703752130
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 703752130
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 67057087, i32 -1065944329
  store i32 %62, i32* %5
  br label %146

; <label>:63:                                     ; preds = %6
  %64 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %65 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %64, i32 1
  store %"class.std::vector"* %65, %"class.std::vector"** %3, align 8
  %66 = load i32, i32* @x.178
  %67 = load i32, i32* @y.179
  %68 = sub i32 %66, -224459153
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -224459153
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 379984388, i32 -1065944329
  store i32 %92, i32* %5
  br label %146

; <label>:93:                                     ; preds = %6
  store i32 530604937, i32* %5
  br label %146

; <label>:94:                                     ; preds = %6
  %95 = load i32, i32* @x.178
  %96 = load i32, i32* @y.179
  %97 = add i32 %95, 1962014821
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 1962014821
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -1967414542, i32 677841955
  store i32 %109, i32* %5
  br label %146

; <label>:110:                                    ; preds = %6
  %111 = load i32, i32* @x.178
  %112 = load i32, i32* @y.179
  %113 = sub i32 %111, -764017317
  %114 = sub i32 %113, 1
  %115 = add i32 %114, -764017317
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  %137 = select i1 %135, i32 1339640291, i32 677841955
  store i32 %137, i32* %5
  br label %146

; <label>:138:                                    ; preds = %6
  ret void

; <label>:139:                                    ; preds = %6
  %140 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %141 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %140) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector"* %141)
  store i32 -1094630376, i32* %5
  br label %146

; <label>:142:                                    ; preds = %6
  %143 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %144 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %143, i32 1
  store %"class.std::vector"* %144, %"class.std::vector"** %3, align 8
  store i32 67057087, i32* %5
  br label %146

; <label>:145:                                    ; preds = %6
  store i32 -1967414542, i32* %5
  br label %146

; <label>:146:                                    ; preds = %145, %142, %139, %110, %94, %93, %63, %47, %46, %29, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector"*) #5 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"*, %"class.std::vector"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.182
  %11 = load i32, i32* @y.183
  %12 = add i32 %10, 939468455
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 939468455
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -795629725, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %197
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -795629725, label %24
    i32 -1401094849, label %32
    i32 1357481037, label %57
    i32 -2057121782, label %60
    i32 -1443113951, label %88
    i32 -1089353003, label %123
    i32 -338317352, label %124
    i32 -1765409303, label %152
    i32 368180686, label %180
    i32 -46638620, label %181
    i32 -1179102220, label %188
    i32 -2086453464, label %196
  ]

; <label>:23:                                     ; preds = %21
  br label %197

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1401094849, i32 -46638620
  store i32 %31, i32* %20
  br label %197

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.1"*, align 8
  %34 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"** %34, %"class.std::vector"*** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %33, align 8
  %36 = load volatile %"class.std::vector"**, %"class.std::vector"*** %7
  store %"class.std::vector"* %1, %"class.std::vector"** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %33, align 8
  store %"struct.std::_Vector_base.1"* %38, %"struct.std::_Vector_base.1"** %5
  %39 = load volatile %"class.std::vector"**, %"class.std::vector"*** %7
  %40 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8
  %41 = icmp ne %"class.std::vector"* %40, null
  store i1 %41, i1* %4
  %42 = load i32, i32* @x.182
  %43 = load i32, i32* @y.183
  %44 = add i32 %42, -1187973694
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1187973694
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1357481037, i32 -46638620
  store i32 %56, i32* %20
  br label %197

; <label>:57:                                     ; preds = %21
  %58 = load volatile i1, i1* %4
  %59 = select i1 %58, i32 -2057121782, i32 -338317352
  store i32 %59, i32* %20
  br label %197

; <label>:60:                                     ; preds = %21
  %61 = load i32, i32* @x.182
  %62 = load i32, i32* @y.183
  %63 = sub i32 %61, 1984658954
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 1984658954
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1443113951, i32 -1179102220
  store i32 %87, i32* %20
  br label %197

; <label>:88:                                     ; preds = %21
  %89 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %90 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %89, i32 0, i32 0
  %91 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %90 to %"class.std::allocator.2"*
  %92 = load volatile %"class.std::vector"**, %"class.std::vector"*** %7
  %93 = load %"class.std::vector"*, %"class.std::vector"** %92, align 8
  %94 = load volatile i64*, i64** %6
  %95 = load i64, i64* %94, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1) %91, %"class.std::vector"* %93, i64 %95)
  %96 = load i32, i32* @x.182
  %97 = load i32, i32* @y.183
  %98 = sub i32 %96, 1225655357
  %99 = sub i32 %98, 1
  %100 = add i32 %99, 1225655357
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 -1089353003, i32 -1179102220
  store i32 %122, i32* %20
  br label %197

; <label>:123:                                    ; preds = %21
  store i32 -338317352, i32* %20
  br label %197

; <label>:124:                                    ; preds = %21
  %125 = load i32, i32* @x.182
  %126 = load i32, i32* @y.183
  %127 = add i32 %125, -823304630
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -823304630
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  %151 = select i1 %149, i32 -1765409303, i32 -2086453464
  store i32 %151, i32* %20
  br label %197

; <label>:152:                                    ; preds = %21
  %153 = load i32, i32* @x.182
  %154 = load i32, i32* @y.183
  %155 = sub i32 %153, -1675165271
  %156 = sub i32 %155, 1
  %157 = add i32 %156, -1675165271
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 true, true
  %166 = and i1 %163, true
  %167 = and i1 %161, %165
  %168 = and i1 %164, true
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 true, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  %179 = select i1 %177, i32 368180686, i32 -2086453464
  store i32 %179, i32* %20
  br label %197

; <label>:180:                                    ; preds = %21
  ret void

; <label>:181:                                    ; preds = %21
  %182 = alloca %"struct.std::_Vector_base.1"*, align 8
  %183 = alloca %"class.std::vector"*, align 8
  %184 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %182, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %183, align 8
  store i64 %2, i64* %184, align 8
  %185 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %182, align 8
  %186 = load %"class.std::vector"*, %"class.std::vector"** %183, align 8
  %187 = icmp ne %"class.std::vector"* %186, null
  store i32 -1401094849, i32* %20
  br label %197

; <label>:188:                                    ; preds = %21
  %189 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %190 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %189, i32 0, i32 0
  %191 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %190 to %"class.std::allocator.2"*
  %192 = load volatile %"class.std::vector"**, %"class.std::vector"*** %7
  %193 = load %"class.std::vector"*, %"class.std::vector"** %192, align 8
  %194 = load volatile i64*, i64** %6
  %195 = load i64, i64* %194, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1) %191, %"class.std::vector"* %193, i64 %195)
  store i32 -1443113951, i32* %20
  br label %197

; <label>:196:                                    ; preds = %21
  store i32 -1765409303, i32* %20
  br label %197

; <label>:197:                                    ; preds = %196, %188, %181, %152, %124, %123, %88, %60, %57, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::vector"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"* %8, %"class.std::vector"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::vector"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %9 = bitcast %"class.std::vector"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector"*, %"class.std::vector"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.188
  %7 = load i32, i32* @y.189
  %8 = sub i32 %6, 1739188156
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1739188156
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1917366353, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1917366353, label %20
    i32 532184447, label %28
    i32 404181241, label %61
    i32 -77835775, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 532184447, i32 -77835775
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %30, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %31, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %33 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector"* %32, %"class.std::vector"* %33)
  %34 = load i32, i32* @x.188
  %35 = load i32, i32* @y.189
  %36 = sub i32 %34, 1444876760
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1444876760
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 404181241, i32 -77835775
  store i32 %60, i32* %16
  br label %68

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.std::vector"*, align 8
  %64 = alloca %"class.std::vector"*, align 8
  %65 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %64, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %65, align 8
  %66 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %67 = load %"class.std::vector"*, %"class.std::vector"** %64, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector"* %66, %"class.std::vector"* %67)
  store i32 532184447, i32* %16
  br label %68

; <label>:68:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_(%"class.std::_Deque_base.9"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base.9"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag(%"class.std::deque.8"*, i32*, i32*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"struct.std::_Deque_iterator", align 8
  %14 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %15 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %16 = load i32*, i32** %6, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = call i64 @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32* %16, i32* %17)
  store i64 %18, i64* %8, align 8
  %19 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %20 = load i64, i64* %8, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.9"* %19, i64 %20)
  %21 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %22 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %22, i32 0, i32 2
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %23, i32 0, i32 3
  %25 = load i32**, i32*** %24, align 8
  store i32** %25, i32*** %9, align 8
  br label %26

; <label>:26:                                     ; preds = %89, %3
  %27 = load i32**, i32*** %9, align 8
  %28 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %29 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 3
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 3
  %32 = load i32**, i32*** %31, align 8
  %33 = icmp ult i32** %27, %32
  br i1 %33, label %34, label %108

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.192
  %36 = load i32, i32* @y.193
  %37 = sub i32 %35, 1196150465
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1196150465
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %135

; <label>:49:                                     ; preds = %34, %135
  %50 = load i32*, i32** %6, align 8
  store i32* %50, i32** %10, align 8
  %51 = call i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #3
  %52 = load i32, i32* @x.192
  %53 = load i32, i32* @y.193
  %54 = sub i32 %52, -690802879
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -690802879
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %135

; <label>:78:                                     ; preds = %49
  invoke void @_ZSt7advanceIPKimEvRT_T0_(i32** dereferenceable(8) %10, i64 %51)
          to label %79 unwind label %92

; <label>:79:                                     ; preds = %78
  %80 = load i32*, i32** %6, align 8
  %81 = load i32*, i32** %10, align 8
  %82 = load i32**, i32*** %9, align 8
  %83 = load i32*, i32** %82, align 8
  %84 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %85 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %84) #3
  %86 = invoke i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32* %80, i32* %81, i32* %83, %"class.std::allocator"* dereferenceable(1) %85)
          to label %87 unwind label %92

; <label>:87:                                     ; preds = %79
  %88 = load i32*, i32** %10, align 8
  store i32* %88, i32** %6, align 8
  br label %89

; <label>:89:                                     ; preds = %87
  %90 = load i32**, i32*** %9, align 8
  %91 = getelementptr inbounds i32*, i32** %90, i32 1
  store i32** %91, i32*** %9, align 8
  br label %26

; <label>:92:                                     ; preds = %108, %79, %78
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %11, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %12, align 4
  br label %96

; <label>:96:                                     ; preds = %92
  %97 = load i8*, i8** %11, align 8
  %98 = call i8* @__cxa_begin_catch(i8* %97) #3
  %99 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %100 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %100, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %13, %"struct.std::_Deque_iterator"* dereferenceable(32) %101) #3
  %102 = load i32**, i32*** %9, align 8
  %103 = load i32*, i32** %102, align 8
  %104 = load i32**, i32*** %9, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_(%"struct.std::_Deque_iterator"* %14, i32* %103, i32** %104) #3
  %105 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %106 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %105) #3
  invoke void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E(%"struct.std::_Deque_iterator"* %13, %"struct.std::_Deque_iterator"* %14, %"class.std::allocator"* dereferenceable(1) %106)
          to label %107 unwind label %120

; <label>:107:                                    ; preds = %96
  invoke void @__cxa_rethrow() #12
          to label %134 unwind label %120

; <label>:108:                                    ; preds = %26
  %109 = load i32*, i32** %6, align 8
  %110 = load i32*, i32** %7, align 8
  %111 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %112 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %112, i32 0, i32 3
  %114 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %113, i32 0, i32 1
  %115 = load i32*, i32** %114, align 8
  %116 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %117 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %116) #3
  %118 = invoke i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32* %109, i32* %110, i32* %115, %"class.std::allocator"* dereferenceable(1) %117)
          to label %119 unwind label %92

; <label>:119:                                    ; preds = %108
  br label %125

; <label>:120:                                    ; preds = %107, %96
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %11, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %124 unwind label %131

; <label>:124:                                    ; preds = %120
  br label %126

; <label>:125:                                    ; preds = %119
  ret void

; <label>:126:                                    ; preds = %124
  %127 = load i8*, i8** %11, align 8
  %128 = load i32, i32* %12, align 4
  %129 = insertvalue { i8*, i32 } undef, i8* %127, 0
  %130 = insertvalue { i8*, i32 } %129, i32 %128, 1
  resume { i8*, i32 } %130

; <label>:131:                                    ; preds = %120
  %132 = landingpad { i8*, i32 }
          catch i8* null
  %133 = extractvalue { i8*, i32 } %132, 0
  call void @__clang_call_terminate(i8* %133) #10
  unreachable

; <label>:134:                                    ; preds = %107
  unreachable

; <label>:135:                                    ; preds = %49, %34
  %136 = load i32*, i32** %6, align 8
  store i32* %136, i32** %10, align 8
  %137 = call i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #3
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.11"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.194
  %6 = load i32, i32* @y.195
  %7 = add i32 %5, -191440005
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -191440005
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1579984631, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1579984631, label %19
    i32 1791245838, label %27
    i32 286576735, label %47
    i32 487374901, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1791245838, i32 487374901
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list.11"*, align 8
  store %"class.std::initializer_list.11"* %0, %"class.std::initializer_list.11"** %28, align 8
  %29 = load %"class.std::initializer_list.11"*, %"class.std::initializer_list.11"** %28, align 8
  %30 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.194
  %33 = load i32, i32* @y.195
  %34 = add i32 %32, -2115471522
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -2115471522
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 286576735, i32 487374901
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i32*, i32** %2
  ret i32* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::initializer_list.11"*, align 8
  store %"class.std::initializer_list.11"* %0, %"class.std::initializer_list.11"** %50, align 8
  %51 = load %"class.std::initializer_list.11"*, %"class.std::initializer_list.11"** %50, align 8
  %52 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %51, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  store i32 1791245838, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list.11"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.196
  %6 = load i32, i32* @y.197
  %7 = sub i32 %5, 87348944
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 87348944
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1105904893, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1105904893, label %19
    i32 150208673, label %27
    i32 997877724, label %48
    i32 1620093041, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 150208673, i32 1620093041
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list.11"*, align 8
  store %"class.std::initializer_list.11"* %0, %"class.std::initializer_list.11"** %28, align 8
  %29 = load %"class.std::initializer_list.11"*, %"class.std::initializer_list.11"** %28, align 8
  %30 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.11"* %29) #3
  %31 = call i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list.11"* %29) #3
  %32 = getelementptr inbounds i32, i32* %30, i64 %31
  store i32* %32, i32** %2
  %33 = load i32, i32* @x.196
  %34 = load i32, i32* @y.197
  %35 = sub i32 %33, 593207069
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 593207069
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 997877724, i32 1620093041
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile i32*, i32** %2
  ret i32* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::initializer_list.11"*, align 8
  store %"class.std::initializer_list.11"* %0, %"class.std::initializer_list.11"** %51, align 8
  %52 = load %"class.std::initializer_list.11"*, %"class.std::initializer_list.11"** %51, align 8
  %53 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.11"* %52) #3
  %54 = call i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list.11"* %52) #3
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  store i32 150208673, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.std::_Deque_base.9"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.198
  %7 = load i32, i32* @y.199
  %8 = add i32 %6, -6817300
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -6817300
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 436994341, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %86
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 436994341, label %20
    i32 1471869309, label %28
    i32 394529031, label %51
    i32 -1850437892, label %54
    i32 763051776, label %76
    i32 1147160986, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %86

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1471869309, i32 1147160986
  store i32 %27, i32* %16
  br label %86

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %29, align 8
  %30 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %29, align 8
  store %"class.std::_Deque_base.9"* %30, %"class.std::_Deque_base.9"** %3
  %31 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %32 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 0
  %34 = load i32**, i32*** %33, align 8
  %35 = icmp ne i32** %34, null
  store i1 %35, i1* %2
  %36 = load i32, i32* @x.198
  %37 = load i32, i32* @y.199
  %38 = sub i32 %36, -346519352
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -346519352
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 394529031, i32 1147160986
  store i32 %50, i32* %16
  br label %86

; <label>:51:                                     ; preds = %17
  %52 = load volatile i1, i1* %2
  %53 = select i1 %52, i32 -1850437892, i32 763051776
  store i32 %53, i32* %16
  br label %86

; <label>:54:                                     ; preds = %17
  %55 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %56 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %56, i32 0, i32 2
  %58 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %57, i32 0, i32 3
  %59 = load i32**, i32*** %58, align 8
  %60 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %61 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 3
  %63 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %62, i32 0, i32 3
  %64 = load i32**, i32*** %63, align 8
  %65 = getelementptr inbounds i32*, i32** %64, i64 1
  %66 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"* %66, i32** %59, i32** %65) #3
  %67 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %68 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 0
  %70 = load i32**, i32*** %69, align 8
  %71 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %72 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"* %75, i32** %70, i64 %74) #3
  store i32 763051776, i32* %16
  br label %86

; <label>:76:                                     ; preds = %17
  %77 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %78 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %77, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %78) #3
  ret void

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %80, align 8
  %81 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %80, align 8
  %82 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 0
  %84 = load i32**, i32*** %83, align 8
  %85 = icmp ne i32** %84, null
  store i32 1471869309, i32* %16
  br label %86

; <label>:86:                                     ; preds = %79, %54, %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %10) #3
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store i32** null, i32*** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = load i32*, i32** %4, align 8
  call void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32* %7, i32* %8)
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.9"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base.9"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = sub i64 0, 1
  %17 = sub i64 %15, %16
  %18 = add i64 %15, 1
  store i64 %17, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %19 = load i64, i64* %5, align 8
  %20 = sub i64 0, %19
  %21 = sub i64 0, 2
  %22 = add i64 %20, %21
  %23 = sub i64 0, %22
  %24 = add i64 %19, 2
  store i64 %23, i64* %7, align 8
  %25 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base.9"* %12, i64 %31)
  %33 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33, i32 0, i32 0
  store i32** %32, i32*** %34, align 8
  %35 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, i32 0, i32 0
  %37 = load i32**, i32*** %36, align 8
  %38 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = add i64 %40, 1830301115350547651
  %43 = sub i64 %42, %41
  %44 = sub i64 %43, 1830301115350547651
  %45 = sub i64 %40, %41
  %46 = udiv i64 %44, 2
  %47 = getelementptr inbounds i32*, i32** %37, i64 %46
  store i32** %47, i32*** %8, align 8
  %48 = load i32**, i32*** %8, align 8
  %49 = load i64, i64* %5, align 8
  %50 = getelementptr inbounds i32*, i32** %48, i64 %49
  store i32** %50, i32*** %9, align 8
  %51 = load i32**, i32*** %8, align 8
  %52 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base.9"* %12, i32** %51, i32** %52)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %2
  br label %105

; <label>:54:                                     ; preds = %2
  %55 = load i32, i32* @x.206
  %56 = load i32, i32* @y.207
  %57 = add i32 %55, -166223004
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -166223004
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %181

; <label>:69:                                     ; preds = %54, %181
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %10, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %11, align 4
  %73 = load i32, i32* @x.206
  %74 = load i32, i32* @y.207
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %181

; <label>:86:                                     ; preds = %69
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = load i8*, i8** %10, align 8
  %89 = call i8* @__cxa_begin_catch(i8* %88) #3
  %90 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %90, i32 0, i32 0
  %92 = load i32**, i32*** %91, align 8
  %93 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %93, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"* %12, i32** %92, i64 %95) #3
  %96 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %96, i32 0, i32 0
  store i32** null, i32*** %97, align 8
  %98 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %98, i32 0, i32 1
  store i64 0, i64* %99, align 8
  invoke void @__cxa_rethrow() #12
          to label %180 unwind label %100

; <label>:100:                                    ; preds = %87
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %10, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %104 unwind label %177

; <label>:104:                                    ; preds = %100
  br label %172

; <label>:105:                                    ; preds = %53
  %106 = load i32, i32* @x.206
  %107 = load i32, i32* @y.207
  %108 = add i32 %106, -1688627065
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, -1688627065
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %185

; <label>:120:                                    ; preds = %105, %185
  %121 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %121, i32 0, i32 2
  %123 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %122, i32** %123) #3
  %124 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %124, i32 0, i32 3
  %126 = load i32**, i32*** %9, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %125, i32** %127) #3
  %128 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %128, i32 0, i32 2
  %130 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %129, i32 0, i32 1
  %131 = load i32*, i32** %130, align 8
  %132 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %132, i32 0, i32 2
  %134 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %133, i32 0, i32 0
  store i32* %131, i32** %134, align 8
  %135 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %135, i32 0, i32 3
  %137 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %136, i32 0, i32 1
  %138 = load i32*, i32** %137, align 8
  %139 = load i64, i64* %4, align 8
  %140 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %141 = urem i64 %139, %140
  %142 = getelementptr inbounds i32, i32* %138, i64 %141
  %143 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %143, i32 0, i32 3
  %145 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %144, i32 0, i32 0
  store i32* %142, i32** %145, align 8
  %146 = load i32, i32* @x.206
  %147 = load i32, i32* @y.207
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 true, true
  %158 = and i1 %155, true
  %159 = and i1 %153, %157
  %160 = and i1 %156, true
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 true, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %185

; <label>:171:                                    ; preds = %120
  ret void

; <label>:172:                                    ; preds = %104
  %173 = load i8*, i8** %10, align 8
  %174 = load i32, i32* %11, align 4
  %175 = insertvalue { i8*, i32 } undef, i8* %173, 0
  %176 = insertvalue { i8*, i32 } %175, i32 %174, 1
  resume { i8*, i32 } %176

; <label>:177:                                    ; preds = %100
  %178 = landingpad { i8*, i32 }
          catch i8* null
  %179 = extractvalue { i8*, i32 } %178, 0
  call void @__clang_call_terminate(i8* %179) #10
  unreachable

; <label>:180:                                    ; preds = %87
  unreachable

; <label>:181:                                    ; preds = %69, %54
  %182 = landingpad { i8*, i32 }
          catch i8* null
  %183 = extractvalue { i8*, i32 } %182, 0
  store i8* %183, i8** %10, align 8
  %184 = extractvalue { i8*, i32 } %182, 1
  store i32 %184, i32* %11, align 4
  br label %69

; <label>:185:                                    ; preds = %120, %105
  %186 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %186, i32 0, i32 2
  %188 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %187, i32** %188) #3
  %189 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %189, i32 0, i32 3
  %191 = load i32**, i32*** %9, align 8
  %192 = getelementptr inbounds i32*, i32** %191, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %190, i32** %192) #3
  %193 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %193, i32 0, i32 2
  %195 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %194, i32 0, i32 1
  %196 = load i32*, i32** %195, align 8
  %197 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %197, i32 0, i32 2
  %199 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %198, i32 0, i32 0
  store i32* %196, i32** %199, align 8
  %200 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %200, i32 0, i32 3
  %202 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %201, i32 0, i32 1
  %203 = load i32*, i32** %202, align 8
  %204 = load i64, i64* %4, align 8
  %205 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %206 = shl i64 %204, %205
  %207 = add i64 %204, 8895823546549138439
  %208 = sub i64 %207, %205
  %209 = sub i64 %208, 8895823546549138439
  %210 = sub i64 %204, %205
  %211 = mul i64 %209, %205
  %212 = sub i64 %204, 8982519586942222192
  %213 = sub i64 %212, %205
  %214 = add i64 %213, 8982519586942222192
  %215 = sub i64 %204, %205
  %216 = mul i64 %214, %205
  %217 = sub i64 0, %205
  %218 = add i64 %204, %217
  %219 = sub i64 %204, %205
  %220 = mul i64 %218, %205
  %221 = shl i64 %204, %205
  %222 = urem i64 %204, %205
  %223 = getelementptr inbounds i32, i32* %203, i64 %222
  %224 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %224, i32 0, i32 3
  %226 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %225, i32 0, i32 0
  store i32* %223, i32** %226, align 8
  br label %120
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7advanceIPKimEvRT_T0_(i32** dereferenceable(8), i64) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.208
  %6 = load i32, i32* @y.209
  %7 = add i32 %5, -1350689062
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1350689062
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1308988429, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1308988429, label %19
    i32 888143208, label %27
    i32 1816178844, label %52
    i32 2019229621, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 888143208, i32 2019229621
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"struct.std::random_access_iterator_tag", align 1
  %32 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i32** %0, i32*** %28, align 8
  store i64 %1, i64* %29, align 8
  %33 = load i64, i64* %29, align 8
  store i64 %33, i64* %30, align 8
  %34 = load i32**, i32*** %28, align 8
  %35 = load i64, i64* %30, align 8
  %36 = load i32**, i32*** %28, align 8
  call void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8) %36)
  call void @_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag(i32** dereferenceable(8) %34, i64 %35)
  %37 = load i32, i32* @x.208
  %38 = load i32, i32* @y.209
  %39 = sub i32 %37, -2010802495
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -2010802495
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1816178844, i32 2019229621
  store i32 %51, i32* %15
  br label %63

; <label>:52:                                     ; preds = %16
  ret void

; <label>:53:                                     ; preds = %16
  %54 = alloca i32**, align 8
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  %57 = alloca %"struct.std::random_access_iterator_tag", align 1
  %58 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i32** %0, i32*** %54, align 8
  store i64 %1, i64* %55, align 8
  %59 = load i64, i64* %55, align 8
  store i64 %59, i64* %56, align 8
  %60 = load i32**, i32*** %54, align 8
  %61 = load i64, i64* %56, align 8
  %62 = load i32**, i32*** %54, align 8
  call void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8) %62)
  call void @_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag(i32** dereferenceable(8) %60, i64 %61)
  store i32 888143208, i32* %15
  br label %63

; <label>:63:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %2, align 8
  %3 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  %6 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %4, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #3
  call void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.218
  %6 = load i32, i32* @y.219
  %7 = add i32 %5, -1467265669
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1467265669
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -68419319, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -68419319, label %19
    i32 2097071485, label %39
    i32 1672353485, label %74
    i32 1061338696, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2097071485, i32 1061338696
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %41, align 8
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %43, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 1
  %48 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 1
  %50 = load i32*, i32** %49, align 8
  store i32* %50, i32** %47, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 2
  %52 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %52, i32 0, i32 2
  %54 = load i32*, i32** %53, align 8
  store i32* %54, i32** %51, align 8
  %55 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %56 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %56, i32 0, i32 3
  %58 = load i32**, i32*** %57, align 8
  store i32** %58, i32*** %55, align 8
  %59 = load i32, i32* @x.218
  %60 = load i32, i32* @y.219
  %61 = add i32 %59, -2064987509
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -2064987509
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 1672353485, i32 1061338696
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Deque_iterator"*, align 8
  %77 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %76, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %77, align 8
  %78 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 0
  %80 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %80, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  store i32* %82, i32** %79, align 8
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 1
  %84 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 1
  %86 = load i32*, i32** %85, align 8
  store i32* %86, i32** %83, align 8
  %87 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 2
  %88 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %88, i32 0, i32 2
  %90 = load i32*, i32** %89, align 8
  store i32* %90, i32** %87, align 8
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 3
  %92 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %93 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %92, i32 0, i32 3
  %94 = load i32**, i32*** %93, align 8
  store i32** %94, i32*** %91, align 8
  store i32 2097071485, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_(%"struct.std::_Deque_iterator"*, i32*, i32**) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  store i32* %9, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 1
  %11 = load i32**, i32*** %6, align 8
  %12 = load i32*, i32** %11, align 8
  store i32* %12, i32** %10, align 8
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 2
  %14 = load i32**, i32*** %6, align 8
  %15 = load i32*, i32** %14, align 8
  %16 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %17 = getelementptr inbounds i32, i32* %15, i64 %16
  store i32* %17, i32** %13, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 3
  %19 = load i32**, i32*** %6, align 8
  store i32** %19, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32*, i32*) #5 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %6 = load i32*, i32** %5, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = ptrtoint i32* %6 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, -8226898845042631793
  %11 = sub i64 %10, %9
  %12 = add i64 %11, -8226898845042631793
  %13 = sub i64 %8, %9
  %14 = sdiv exact i64 %12, 4
  ret i64 %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca i32**, align 8
  store i32** %0, i32*** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3
  %6 = alloca i32
  store i32 2018744764, i32* %6
  %7 = alloca i64
  br label %8

; <label>:8:                                      ; preds = %1, %66
  %9 = load i32, i32* %6
  switch i32 %9, label %10 [
    i32 2018744764, label %11
    i32 -645617595, label %15
    i32 296011064, label %18
    i32 130083229, label %19
    i32 -2010369002, label %47
    i32 -433901902, label %63
    i32 -1259893993, label %65
  ]

; <label>:10:                                     ; preds = %8
  br label %66

; <label>:11:                                     ; preds = %8
  %12 = load volatile i64, i64* %3
  %13 = icmp ult i64 %12, 512
  %14 = select i1 %13, i32 -645617595, i32 296011064
  store i32 %14, i32* %6
  br label %66

; <label>:15:                                     ; preds = %8
  %16 = load i64, i64* %4, align 8
  %17 = udiv i64 512, %16
  store i32 130083229, i32* %6
  store i64 %17, i64* %7
  br label %66

; <label>:18:                                     ; preds = %8
  store i32 130083229, i32* %6
  store i64 1, i64* %7
  br label %66

; <label>:19:                                     ; preds = %8
  %20 = load i64, i64* %7
  store i64 %20, i64* %2
  %21 = load i32, i32* @x.226
  %22 = load i32, i32* @y.227
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -2010369002, i32 -1259893993
  store i32 %46, i32* %6
  br label %66

; <label>:47:                                     ; preds = %8
  %48 = load i32, i32* @x.226
  %49 = load i32, i32* @y.227
  %50 = sub i32 %48, -1745217023
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1745217023
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -433901902, i32 -1259893993
  store i32 %62, i32* %6
  br label %66

; <label>:63:                                     ; preds = %8
  %64 = load volatile i64, i64* %2
  ret i64 %64

; <label>:65:                                     ; preds = %8
  store i32 -2010369002, i32* %6
  br label %66

; <label>:66:                                     ; preds = %65, %47, %19, %18, %15, %11, %10
  br label %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -186211534, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -186211534, label %17
    i32 543086320, label %22
    i32 -499008688, label %24
    i32 -1452125683, label %40
    i32 489936129, label %57
    i32 -724072077, label %58
    i32 909607064, label %86
    i32 -2069846035, label %114
    i32 394230815, label %116
    i32 143384642, label %118
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 543086320, i32 -499008688
  store i32 %21, i32* %13
  br label %120

; <label>:22:                                     ; preds = %14
  %23 = load i64*, i64** %8, align 8
  store i64* %23, i64** %6, align 8
  store i32 -724072077, i32* %13
  br label %120

; <label>:24:                                     ; preds = %14
  %25 = load i32, i32* @x.228
  %26 = load i32, i32* @y.229
  %27 = sub i32 %25, 482554527
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 482554527
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 -1452125683, i32 394230815
  store i32 %39, i32* %13
  br label %120

; <label>:40:                                     ; preds = %14
  %41 = load i64*, i64** %7, align 8
  store i64* %41, i64** %6, align 8
  %42 = load i32, i32* @x.228
  %43 = load i32, i32* @y.229
  %44 = add i32 %42, -754535260
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -754535260
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 489936129, i32 394230815
  store i32 %56, i32* %13
  br label %120

; <label>:57:                                     ; preds = %14
  store i32 -724072077, i32* %13
  br label %120

; <label>:58:                                     ; preds = %14
  %59 = load i32, i32* @x.228
  %60 = load i32, i32* @y.229
  %61 = add i32 %59, -323756366
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -323756366
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 909607064, i32 143384642
  store i32 %85, i32* %13
  br label %120

; <label>:86:                                     ; preds = %14
  %87 = load i64*, i64** %6, align 8
  store i64* %87, i64** %3
  %88 = load i32, i32* @x.228
  %89 = load i32, i32* @y.229
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -2069846035, i32 143384642
  store i32 %113, i32* %13
  br label %120

; <label>:114:                                    ; preds = %14
  %115 = load volatile i64*, i64** %3
  ret i64* %115

; <label>:116:                                    ; preds = %14
  %117 = load i64*, i64** %7, align 8
  store i64* %117, i64** %6, align 8
  store i32 -1452125683, i32* %13
  br label %120

; <label>:118:                                    ; preds = %14
  %119 = load i64*, i64** %6, align 8
  store i32 909607064, i32* %13
  br label %120

; <label>:120:                                    ; preds = %118, %116, %86, %58, %57, %40, %24, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base.9"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.230
  %4 = load i32, i32* @y.231
  %5 = add i32 %3, -1939904697
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1939904697
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %146

; <label>:29:                                     ; preds = %2, %146
  %30 = alloca %"class.std::_Deque_base.9"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.13", align 1
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %30, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.13"* sret %32, %"class.std::_Deque_base.9"* %35) #3
  %36 = load i64, i64* %31, align 8
  %37 = load i32, i32* @x.230
  %38 = load i32, i32* @y.231
  %39 = add i32 %37, 782488733
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 782488733
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %146

; <label>:63:                                     ; preds = %29
  %64 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.13"* dereferenceable(1) %32, i64 %36)
          to label %65 unwind label %108

; <label>:65:                                     ; preds = %63
  %66 = load i32, i32* @x.230
  %67 = load i32, i32* @y.231
  %68 = add i32 %66, 1206705548
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 1206705548
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %154

; <label>:80:                                     ; preds = %65, %154
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.13"* %32) #3
  %81 = load i32, i32* @x.230
  %82 = load i32, i32* @y.231
  %83 = sub i32 %81, -1639199579
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -1639199579
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %154

; <label>:107:                                    ; preds = %80
  ret i32** %64

; <label>:108:                                    ; preds = %63
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %33, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %34, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.13"* %32) #3
  br label %112

; <label>:112:                                    ; preds = %108
  %113 = load i32, i32* @x.230
  %114 = load i32, i32* @y.231
  %115 = sub i32 %113, 157683133
  %116 = sub i32 %115, 1
  %117 = add i32 %116, 157683133
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %155

; <label>:127:                                    ; preds = %112, %155
  %128 = load i8*, i8** %33, align 8
  %129 = load i32, i32* %34, align 4
  %130 = insertvalue { i8*, i32 } undef, i8* %128, 0
  %131 = insertvalue { i8*, i32 } %130, i32 %129, 1
  %132 = load i32, i32* @x.230
  %133 = load i32, i32* @y.231
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %155

; <label>:145:                                    ; preds = %127
  resume { i8*, i32 } %131

; <label>:146:                                    ; preds = %29, %2
  %147 = alloca %"class.std::_Deque_base.9"*, align 8
  %148 = alloca i64, align 8
  %149 = alloca %"class.std::allocator.13", align 1
  %150 = alloca i8*
  %151 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %147, align 8
  store i64 %1, i64* %148, align 8
  %152 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %147, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.13"* sret %149, %"class.std::_Deque_base.9"* %152) #3
  %153 = load i64, i64* %148, align 8
  br label %29

; <label>:154:                                    ; preds = %80, %65
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.13"* %32) #3
  br label %80

; <label>:155:                                    ; preds = %127, %112
  %156 = load i8*, i8** %33, align 8
  %157 = load i32, i32* %34, align 4
  %158 = insertvalue { i8*, i32 } undef, i8* %156, 0
  %159 = insertvalue { i8*, i32 } %158, i32 %157, 1
  br label %127
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base.9"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base.9"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %61, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %73

; <label>:16:                                     ; preds = %12
  %17 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base.9"* %10)
          to label %18 unwind label %64

; <label>:18:                                     ; preds = %16
  %19 = load i32, i32* @x.232
  %20 = load i32, i32* @y.233
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %172

; <label>:32:                                     ; preds = %18, %172
  %33 = load i32**, i32*** %7, align 8
  store i32* %17, i32** %33, align 8
  %34 = load i32, i32* @x.232
  %35 = load i32, i32* @y.233
  %36 = sub i32 %34, -669461603
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -669461603
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %172

; <label>:60:                                     ; preds = %32
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load i32**, i32*** %7, align 8
  %63 = getelementptr inbounds i32*, i32** %62, i32 1
  store i32** %63, i32*** %7, align 8
  br label %12

; <label>:64:                                     ; preds = %16
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %8, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %9, align 4
  br label %68

; <label>:68:                                     ; preds = %64
  %69 = load i8*, i8** %8, align 8
  %70 = call i8* @__cxa_begin_catch(i8* %69) #3
  %71 = load i32**, i32*** %5, align 8
  %72 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"* %10, i32** %71, i32** %72) #3
  invoke void @__cxa_rethrow() #12
          to label %171 unwind label %116

; <label>:73:                                     ; preds = %12
  %74 = load i32, i32* @x.232
  %75 = load i32, i32* @y.233
  %76 = sub i32 %74, -1120286730
  %77 = sub i32 %76, 1
  %78 = add i32 %77, -1120286730
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %174

; <label>:100:                                    ; preds = %73, %174
  %101 = load i32, i32* @x.232
  %102 = load i32, i32* @y.233
  %103 = sub i32 %101, 348821479
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 348821479
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %174

; <label>:115:                                    ; preds = %100
  br label %162

; <label>:116:                                    ; preds = %68
  %117 = load i32, i32* @x.232
  %118 = load i32, i32* @y.233
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %175

; <label>:142:                                    ; preds = %116, %175
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %8, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %9, align 4
  %146 = load i32, i32* @x.232
  %147 = load i32, i32* @y.233
  %148 = sub i32 %146, -696674312
  %149 = sub i32 %148, 1
  %150 = add i32 %149, -696674312
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %175

; <label>:160:                                    ; preds = %142
  invoke void @__cxa_end_catch()
          to label %161 unwind label %168

; <label>:161:                                    ; preds = %160
  br label %163

; <label>:162:                                    ; preds = %115
  ret void

; <label>:163:                                    ; preds = %161
  %164 = load i8*, i8** %8, align 8
  %165 = load i32, i32* %9, align 4
  %166 = insertvalue { i8*, i32 } undef, i8* %164, 0
  %167 = insertvalue { i8*, i32 } %166, i32 %165, 1
  resume { i8*, i32 } %167

; <label>:168:                                    ; preds = %160
  %169 = landingpad { i8*, i32 }
          catch i8* null
  %170 = extractvalue { i8*, i32 } %169, 0
  call void @__clang_call_terminate(i8* %170) #10
  unreachable

; <label>:171:                                    ; preds = %68
  unreachable

; <label>:172:                                    ; preds = %32, %18
  %173 = load i32**, i32*** %7, align 8
  store i32* %17, i32** %173, align 8
  br label %32

; <label>:174:                                    ; preds = %100, %73
  br label %100

; <label>:175:                                    ; preds = %142, %116
  %176 = landingpad { i8*, i32 }
          cleanup
  %177 = extractvalue { i8*, i32 } %176, 0
  store i8* %177, i8** %8, align 8
  %178 = extractvalue { i8*, i32 } %176, 1
  store i32 %178, i32* %9, align 4
  br label %142
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"*, i32**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base.9"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.13", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.13"* sret %7, %"class.std::_Deque_base.9"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.13"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.13"* %7) #3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.234
  %16 = load i32, i32* @y.235
  %17 = sub i32 %15, -23188133
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -23188133
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %62

; <label>:29:                                     ; preds = %14, %62
  %30 = landingpad { i8*, i32 }
          catch i8* null
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %8, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.13"* %7) #3
  %33 = load i32, i32* @x.234
  %34 = load i32, i32* @y.235
  %35 = sub i32 %33, -1370267690
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1370267690
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %62

; <label>:59:                                     ; preds = %29
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %61) #10
  unreachable

; <label>:62:                                     ; preds = %29, %14
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %8, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.13"* %7) #3
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.13"* noalias sret, %"class.std::_Deque_base.9"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.238
  %6 = load i32, i32* @y.239
  %7 = sub i32 %5, 1801128952
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1801128952
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1784085748, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1784085748, label %19
    i32 -913294856, label %27
    i32 -1973847363, label %58
    i32 1406416546, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -913294856, i32 1406416546
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %1, %"class.std::_Deque_base.9"** %28, align 8
  %29 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %28, align 8
  %30 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %29) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.13"* %0, %"class.std::allocator"* dereferenceable(1) %30) #3
  %31 = load i32, i32* @x.238
  %32 = load i32, i32* @y.239
  %33 = add i32 %31, -1383242951
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1383242951
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1973847363, i32 1406416546
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %1, %"class.std::_Deque_base.9"** %60, align 8
  %61 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %60, align 8
  %62 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %61) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.13"* %0, %"class.std::allocator"* dereferenceable(1) %62) #3
  store i32 -913294856, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.13"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.13"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  %3 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %4 = bitcast %"class.std::allocator.13"* %3 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.14"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %2, align 8
  %3 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.13"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.248
  %5 = load i32, i32* @y.249
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 523656585, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 523656585, label %17
    i32 987351178, label %37
    i32 -592976534, label %55
    i32 466658805, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 987351178, i32 466658805
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %38, align 8
  %40 = load i32, i32* @x.248
  %41 = load i32, i32* @y.249
  %42 = sub i32 %40, 1403669955
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1403669955
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -592976534, i32 466658805
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %57, align 8
  store i32 987351178, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1113764277, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %84
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1113764277, label %16
    i32 734502672, label %21
    i32 -198799026, label %49
    i32 786907538, label %77
    i32 1500260134, label %78
    i32 -1528068386, label %83
  ]

; <label>:15:                                     ; preds = %13
  br label %84

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 734502672, i32 1500260134
  store i32 %20, i32* %12
  br label %84

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.250
  %23 = load i32, i32* @y.251
  %24 = sub i32 %22, 1991754432
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 1991754432
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -198799026, i32 -1528068386
  store i32 %48, i32* %12
  br label %84

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %50 = load i32, i32* @x.250
  %51 = load i32, i32* @y.251
  %52 = sub i32 %50, 469234297
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 469234297
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 786907538, i32 -1528068386
  store i32 %76, i32* %12
  br label %84

; <label>:77:                                     ; preds = %13
  unreachable

; <label>:78:                                     ; preds = %13
  %79 = load i64, i64* %7, align 8
  %80 = mul i64 %79, 8
  %81 = call i8* @_Znwm(i64 %80)
  %82 = bitcast i8* %81 to i32**
  ret i32** %82

; <label>:83:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -198799026, i32* %12
  br label %84

; <label>:84:                                     ; preds = %83, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.252
  %5 = load i32, i32* @y.253
  %6 = add i32 %4, -575567657
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -575567657
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1229545575, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1229545575, label %18
    i32 -852968096, label %26
    i32 -97805562, label %43
    i32 -1941718493, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -852968096, i32 -1941718493
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %27, align 8
  %29 = load i32, i32* @x.252
  %30 = load i32, i32* @y.253
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -97805562, i32 -1941718493
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret i64 2305843009213693951

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %45, align 8
  store i32 -852968096, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base.9"*) #0 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.256
  %6 = load i32, i32* @y.257
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -883871258, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -883871258, label %18
    i32 -1488628003, label %38
    i32 -447136531, label %60
    i32 644235147, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1488628003, i32 644235147
  store i32 %37, i32* %14
  br label %69

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %39, align 8
  %40 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41 to %"class.std::allocator"*
  %43 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %44 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %42, i64 %43)
  store i32* %44, i32** %2
  %45 = load i32, i32* @x.256
  %46 = load i32, i32* @y.257
  %47 = sub i32 %45, -669527382
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -669527382
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -447136531, i32 644235147
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  %61 = load volatile i32*, i32** %2
  ret i32* %61

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %63, align 8
  %64 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %65 to %"class.std::allocator"*
  %67 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %68 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %66, i64 %67)
  store i32 -1488628003, i32* %14
  br label %69

; <label>:69:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"*, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Deque_base.9"*
  %6 = alloca %"class.std::_Deque_base.9"*, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %6, align 8
  store i32** %1, i32*** %7, align 8
  store i32** %2, i32*** %8, align 8
  %10 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %6, align 8
  store %"class.std::_Deque_base.9"* %10, %"class.std::_Deque_base.9"** %5
  %11 = load i32**, i32*** %7, align 8
  store i32** %11, i32*** %9, align 8
  %12 = alloca i32
  store i32 1430699701, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %181
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1430699701, label %16
    i32 501024083, label %43
    i32 -280376707, label %74
    i32 -636599639, label %77
    i32 -2129187465, label %81
    i32 -938073881, label %109
    i32 78822647, label %139
    i32 -1359712350, label %140
    i32 406143463, label %156
    i32 1249133215, label %172
    i32 -1680825521, label %173
    i32 -966204977, label %177
    i32 326366679, label %180
  ]

; <label>:15:                                     ; preds = %13
  br label %181

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* @x.258
  %18 = load i32, i32* @y.259
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 501024083, i32 -1680825521
  store i32 %42, i32* %12
  br label %181

; <label>:43:                                     ; preds = %13
  %44 = load i32**, i32*** %9, align 8
  %45 = load i32**, i32*** %8, align 8
  %46 = icmp ult i32** %44, %45
  store i1 %46, i1* %4
  %47 = load i32, i32* @x.258
  %48 = load i32, i32* @y.259
  %49 = add i32 %47, 1408381344
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1408381344
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -280376707, i32 -1680825521
  store i32 %73, i32* %12
  br label %181

; <label>:74:                                     ; preds = %13
  %75 = load volatile i1, i1* %4
  %76 = select i1 %75, i32 -636599639, i32 -1359712350
  store i32 %76, i32* %12
  br label %181

; <label>:77:                                     ; preds = %13
  %78 = load i32**, i32*** %9, align 8
  %79 = load i32*, i32** %78, align 8
  %80 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %5
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base.9"* %80, i32* %79) #3
  store i32 -2129187465, i32* %12
  br label %181

; <label>:81:                                     ; preds = %13
  %82 = load i32, i32* @x.258
  %83 = load i32, i32* @y.259
  %84 = sub i32 %82, 260073284
  %85 = sub i32 %84, 1
  %86 = add i32 %85, 260073284
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -938073881, i32 -966204977
  store i32 %108, i32* %12
  br label %181

; <label>:109:                                    ; preds = %13
  %110 = load i32**, i32*** %9, align 8
  %111 = getelementptr inbounds i32*, i32** %110, i32 1
  store i32** %111, i32*** %9, align 8
  %112 = load i32, i32* @x.258
  %113 = load i32, i32* @y.259
  %114 = sub i32 %112, 394051149
  %115 = sub i32 %114, 1
  %116 = add i32 %115, 394051149
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 78822647, i32 -966204977
  store i32 %138, i32* %12
  br label %181

; <label>:139:                                    ; preds = %13
  store i32 1430699701, i32* %12
  br label %181

; <label>:140:                                    ; preds = %13
  %141 = load i32, i32* @x.258
  %142 = load i32, i32* @y.259
  %143 = sub i32 %141, 548010691
  %144 = sub i32 %143, 1
  %145 = add i32 %144, 548010691
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  %155 = select i1 %153, i32 406143463, i32 326366679
  store i32 %155, i32* %12
  br label %181

; <label>:156:                                    ; preds = %13
  %157 = load i32, i32* @x.258
  %158 = load i32, i32* @y.259
  %159 = sub i32 %157, 1462500284
  %160 = sub i32 %159, 1
  %161 = add i32 %160, 1462500284
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  %171 = select i1 %169, i32 1249133215, i32 326366679
  store i32 %171, i32* %12
  br label %181

; <label>:172:                                    ; preds = %13
  ret void

; <label>:173:                                    ; preds = %13
  %174 = load i32**, i32*** %9, align 8
  %175 = load i32**, i32*** %8, align 8
  %176 = icmp ult i32** %174, %175
  store i32 501024083, i32* %12
  br label %181

; <label>:177:                                    ; preds = %13
  %178 = load i32**, i32*** %9, align 8
  %179 = getelementptr inbounds i32*, i32** %178, i32 1
  store i32** %179, i32*** %9, align 8
  store i32 -938073881, i32* %12
  br label %181

; <label>:180:                                    ; preds = %13
  store i32 406143463, i32* %12
  br label %181

; <label>:181:                                    ; preds = %180, %177, %173, %156, %140, %139, %109, %81, %77, %74, %43, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base.9"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.260
  %4 = load i32, i32* @y.261
  %5 = add i32 %3, -968788470
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -968788470
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %68

; <label>:29:                                     ; preds = %2, %68
  %30 = alloca %"class.std::_Deque_base.9"*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %30, align 8
  store i32* %1, i32** %31, align 8
  %32 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %30, align 8
  %33 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33 to %"class.std::allocator"*
  %35 = load i32*, i32** %31, align 8
  %36 = load i32, i32* @x.260
  %37 = load i32, i32* @y.261
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %68

; <label>:61:                                     ; preds = %29
  %62 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %61
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1) %34, i32* %35, i64 %62)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %63
  ret void

; <label>:65:                                     ; preds = %63, %61
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #10
  unreachable

; <label>:68:                                     ; preds = %29, %2
  %69 = alloca %"class.std::_Deque_base.9"*, align 8
  %70 = alloca i32*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %69, align 8
  store i32* %1, i32** %70, align 8
  %71 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %69, align 8
  %72 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72 to %"class.std::allocator"*
  %74 = load i32*, i32** %70, align 8
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.13"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.262
  %7 = load i32, i32* @y.263
  %8 = add i32 %6, 814165553
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 814165553
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1976592517, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1976592517, label %20
    i32 1223744574, label %28
    i32 853445879, label %50
    i32 -543120949, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1223744574, i32 -543120949
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.13"*, align 8
  %30 = alloca i32**, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %29, align 8
  store i32** %1, i32*** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %29, align 8
  %33 = bitcast %"class.std::allocator.13"* %32 to %"class.__gnu_cxx::new_allocator.14"*
  %34 = load i32**, i32*** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.14"* %33, i32** %34, i64 %35)
  %36 = load i32, i32* @x.262
  %37 = load i32, i32* @y.263
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 853445879, i32 -543120949
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::allocator.13"*, align 8
  %53 = alloca i32**, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %52, align 8
  store i32** %1, i32*** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %52, align 8
  %56 = bitcast %"class.std::allocator.13"* %55 to %"class.__gnu_cxx::new_allocator.14"*
  %57 = load i32**, i32*** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.14"* %56, i32** %57, i64 %58)
  store i32 1223744574, i32* %16
  br label %59

; <label>:59:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.14"*, i32**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.266
  %2 = load i32, i32* @y.267
  %3 = add i32 %1, 937928884
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, 937928884
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %77

; <label>:27:                                     ; preds = %0, %77
  %28 = load i32, i32* @x.266
  %29 = load i32, i32* @y.267
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %77

; <label>:41:                                     ; preds = %27
  %42 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %43 unwind label %44

; <label>:43:                                     ; preds = %41
  ret i64 %42

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* @x.266
  %46 = load i32, i32* @y.267
  %47 = add i32 %45, -1265747099
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1265747099
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %78

; <label>:59:                                     ; preds = %44, %78
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #10
  %62 = load i32, i32* @x.266
  %63 = load i32, i32* @y.267
  %64 = add i32 %62, -1549589972
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -1549589972
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %78

; <label>:76:                                     ; preds = %59
  unreachable

; <label>:77:                                     ; preds = %27, %0
  br label %27

; <label>:78:                                     ; preds = %59, %44
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  call void @__clang_call_terminate(i8* %80) #10
  br label %59
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag(i32** dereferenceable(8), i64) #5 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca i32**, align 8
  %5 = alloca i64, align 8
  store i32** %0, i32*** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 %6
  store i32* %9, i32** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt4copyIPKiPiET0_T_S4_S3_(i32* %7, i32* %8, i32* %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPKiPiET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_(i32*) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i32**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.284
  %12 = load i32, i32* @y.285
  %13 = add i32 %11, 946324062
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 946324062
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -1674564952, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %242
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1674564952, label %25
    i32 -534829167, label %45
    i32 1126286660, label %93
    i32 -966264698, label %96
    i32 -870890397, label %106
    i32 1617613002, label %122
    i32 10668009, label %154
    i32 -285405865, label %156
    i32 -1772416817, label %236
  ]

; <label>:24:                                     ; preds = %22
  br label %242

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -534829167, i32 -285405865
  store i32 %44, i32* %21
  br label %242

; <label>:45:                                     ; preds = %22
  %46 = alloca i32*, align 8
  store i32** %46, i32*** %8
  %47 = alloca i32*, align 8
  %48 = alloca i32*, align 8
  store i32** %48, i32*** %7
  %49 = alloca i64, align 8
  store i64* %49, i64** %6
  %50 = load volatile i32**, i32*** %8
  store i32* %0, i32** %50, align 8
  store i32* %1, i32** %47, align 8
  %51 = load volatile i32**, i32*** %7
  store i32* %2, i32** %51, align 8
  %52 = load i32*, i32** %47, align 8
  %53 = load volatile i32**, i32*** %8
  %54 = load i32*, i32** %53, align 8
  %55 = ptrtoint i32* %52 to i64
  %56 = ptrtoint i32* %54 to i64
  %57 = sub i64 %55, -5614870381477164604
  %58 = sub i64 %57, %56
  %59 = add i64 %58, -5614870381477164604
  %60 = sub i64 %55, %56
  %61 = sdiv exact i64 %59, 4
  %62 = load volatile i64*, i64** %6
  store i64 %61, i64* %62, align 8
  %63 = load volatile i64*, i64** %6
  %64 = load i64, i64* %63, align 8
  %65 = icmp ne i64 %64, 0
  store i1 %65, i1* %5
  %66 = load i32, i32* @x.284
  %67 = load i32, i32* @y.285
  %68 = add i32 %66, -2003754214
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -2003754214
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 1126286660, i32 -285405865
  store i32 %92, i32* %21
  br label %242

; <label>:93:                                     ; preds = %22
  %94 = load volatile i1, i1* %5
  %95 = select i1 %94, i32 -966264698, i32 -870890397
  store i32 %95, i32* %21
  br label %242

; <label>:96:                                     ; preds = %22
  %97 = load volatile i32**, i32*** %7
  %98 = load i32*, i32** %97, align 8
  %99 = bitcast i32* %98 to i8*
  %100 = load volatile i32**, i32*** %8
  %101 = load i32*, i32** %100, align 8
  %102 = bitcast i32* %101 to i8*
  %103 = load volatile i64*, i64** %6
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 4, %104
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %99, i8* %102, i64 %105, i32 4, i1 false)
  store i32 -870890397, i32* %21
  br label %242

; <label>:106:                                    ; preds = %22
  %107 = load i32, i32* @x.284
  %108 = load i32, i32* @y.285
  %109 = sub i32 %107, -1280645729
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -1280645729
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 1617613002, i32 -1772416817
  store i32 %121, i32* %21
  br label %242

; <label>:122:                                    ; preds = %22
  %123 = load volatile i32**, i32*** %7
  %124 = load i32*, i32** %123, align 8
  %125 = load volatile i64*, i64** %6
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds i32, i32* %124, i64 %126
  store i32* %127, i32** %4
  %128 = load i32, i32* @x.284
  %129 = load i32, i32* @y.285
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 false, true
  %140 = and i1 %137, false
  %141 = and i1 %135, %139
  %142 = and i1 %138, false
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 false, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 10668009, i32 -1772416817
  store i32 %153, i32* %21
  br label %242

; <label>:154:                                    ; preds = %22
  %155 = load volatile i32*, i32** %4
  ret i32* %155

; <label>:156:                                    ; preds = %22
  %157 = alloca i32*, align 8
  %158 = alloca i32*, align 8
  %159 = alloca i32*, align 8
  %160 = alloca i64, align 8
  store i32* %0, i32** %157, align 8
  store i32* %1, i32** %158, align 8
  store i32* %2, i32** %159, align 8
  %161 = load i32*, i32** %158, align 8
  %162 = load i32*, i32** %157, align 8
  %163 = ptrtoint i32* %161 to i64
  %164 = ptrtoint i32* %162 to i64
  %165 = sub i64 0, %163
  %166 = add i64 0, %165
  %167 = sub i64 0, %163
  %168 = sub i64 0, %164
  %169 = sub i64 %166, %168
  %170 = add i64 %166, %164
  %171 = add i64 0, 9199611666753628477
  %172 = sub i64 %171, %163
  %173 = sub i64 %172, 9199611666753628477
  %174 = sub i64 0, %163
  %175 = sub i64 0, %164
  %176 = sub i64 %173, %175
  %177 = add i64 %173, %164
  %178 = shl i64 %163, %164
  %179 = shl i64 %163, %164
  %180 = sub i64 %163, -6889165883830688418
  %181 = sub i64 %180, %164
  %182 = add i64 %181, -6889165883830688418
  %183 = sub i64 %163, %164
  %184 = mul i64 %182, %164
  %185 = sub i64 0, %164
  %186 = add i64 %163, %185
  %187 = sub i64 %163, %164
  %188 = mul i64 %186, %164
  %189 = sub i64 0, %163
  %190 = add i64 0, %189
  %191 = sub i64 0, %163
  %192 = add i64 %190, -7214520118289591312
  %193 = add i64 %192, %164
  %194 = sub i64 %193, -7214520118289591312
  %195 = add i64 %190, %164
  %196 = sub i64 0, %164
  %197 = add i64 %163, %196
  %198 = sub i64 %163, %164
  %199 = sub i64 0, 4
  %200 = add i64 %197, %199
  %201 = sub i64 %197, 4
  %202 = mul i64 %200, 4
  %203 = sub i64 0, -1755109232815258981
  %204 = sub i64 %203, %197
  %205 = add i64 %204, -1755109232815258981
  %206 = sub i64 0, %197
  %207 = sub i64 0, %205
  %208 = sub i64 0, 4
  %209 = add i64 %207, %208
  %210 = sub i64 0, %209
  %211 = add i64 %205, 4
  %212 = shl i64 %197, 4
  %213 = add i64 %197, 2965808509091934755
  %214 = sub i64 %213, 4
  %215 = sub i64 %214, 2965808509091934755
  %216 = sub i64 %197, 4
  %217 = mul i64 %215, 4
  %218 = sub i64 %197, 7520420012421018808
  %219 = sub i64 %218, 4
  %220 = add i64 %219, 7520420012421018808
  %221 = sub i64 %197, 4
  %222 = mul i64 %220, 4
  %223 = add i64 0, 6699501897002243913
  %224 = sub i64 %223, %197
  %225 = sub i64 %224, 6699501897002243913
  %226 = sub i64 0, %197
  %227 = sub i64 0, %225
  %228 = sub i64 0, 4
  %229 = add i64 %227, %228
  %230 = sub i64 0, %229
  %231 = add i64 %225, 4
  %232 = shl i64 %197, 4
  %233 = sdiv exact i64 %197, 4
  store i64 %233, i64* %160, align 8
  %234 = load i64, i64* %160, align 8
  %235 = icmp ne i64 %234, 0
  store i32 -534829167, i32* %21
  br label %242

; <label>:236:                                    ; preds = %22
  %237 = load volatile i32**, i32*** %7
  %238 = load i32*, i32** %237, align 8
  %239 = load volatile i64*, i64** %6
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds i32, i32* %238, i64 %240
  store i32 1617613002, i32* %21
  br label %242

; <label>:242:                                    ; preds = %236, %156, %122, %106, %96, %93, %45, %25, %24
  br label %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #0 comdat {
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %4, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #3
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_(%"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list.11"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.292
  %6 = load i32, i32* @y.293
  %7 = sub i32 %5, -867970877
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -867970877
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1059574241, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1059574241, label %19
    i32 2005797597, label %27
    i32 -1750659119, label %46
    i32 -2007469454, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2005797597, i32 -2007469454
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list.11"*, align 8
  store %"class.std::initializer_list.11"* %0, %"class.std::initializer_list.11"** %28, align 8
  %29 = load %"class.std::initializer_list.11"*, %"class.std::initializer_list.11"** %28, align 8
  %30 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.292
  %33 = load i32, i32* @y.293
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1750659119, i32 -2007469454
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i64, i64* %2
  ret i64 %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::initializer_list.11"*, align 8
  store %"class.std::initializer_list.11"* %0, %"class.std::initializer_list.11"** %49, align 8
  %50 = load %"class.std::initializer_list.11"*, %"class.std::initializer_list.11"** %49, align 8
  %51 = getelementptr inbounds %"class.std::initializer_list.11", %"class.std::initializer_list.11"* %50, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  store i32 2005797597, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque.8"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %5, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque.8"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %3, align 8
  %4 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %5 = bitcast %"class.std::deque.8"* %4 to %"class.std::_Deque_base.9"*
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque.8"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %3, align 8
  %4 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %5 = bitcast %"class.std::deque.8"* %4 to %"class.std::_Deque_base.9"*
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.302
  %5 = load i32, i32* @y.303
  %6 = sub i32 %4, 530351545
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 530351545
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 836406541, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 836406541, label %18
    i32 54834871, label %38
    i32 -1769126948, label %67
    i32 1759208093, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 54834871, i32 1759208093
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %41 = load i32, i32* @x.302
  %42 = load i32, i32* @y.303
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1769126948, i32 1759208093
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %69, align 8
  store i32 54834871, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.304
  %5 = load i32, i32* @y.305
  %6 = add i32 %4, 118643770
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 118643770
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1893371379, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1893371379, label %18
    i32 -638017200, label %26
    i32 1502857367, label %56
    i32 -1691635725, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -638017200, i32 -1691635725
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %29 = load i32, i32* @x.304
  %30 = load i32, i32* @y.305
  %31 = sub i32 %29, -1551619796
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1551619796
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1502857367, i32 -1691635725
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  store i32 -638017200, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EEC2ERKS3_(%"class.std::_Deque_base"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE11_Deque_implC2ERKS3_(%"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %6, %"class.std::allocator.5"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::deque"*, %"class.std::deque.8"*, %"class.std::deque.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::deque.8"*, align 8
  %7 = alloca %"class.std::deque.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::deque.8"**, align 8
  %10 = alloca %"class.std::deque.8"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"struct.std::_Deque_iterator.10", align 8
  %14 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %6, align 8
  store %"class.std::deque.8"* %2, %"class.std::deque.8"** %7, align 8
  %15 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %16 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %17 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %18 = call i64 @_ZSt8distanceIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_(%"class.std::deque.8"* %16, %"class.std::deque.8"* %17)
  store i64 %18, i64* %8, align 8
  %19 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %20 = load i64, i64* %8, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %19, i64 %20)
  %21 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %22, i32 0, i32 2
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %23, i32 0, i32 3
  %25 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %24, align 8
  store %"class.std::deque.8"** %25, %"class.std::deque.8"*** %9, align 8
  br label %26

; <label>:26:                                     ; preds = %141, %3
  %27 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %9, align 8
  %28 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %29, i32 0, i32 3
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %30, i32 0, i32 3
  %32 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %31, align 8
  %33 = icmp ult %"class.std::deque.8"** %27, %32
  br i1 %33, label %34, label %202

; <label>:34:                                     ; preds = %26
  %35 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  store %"class.std::deque.8"* %35, %"class.std::deque.8"** %10, align 8
  %36 = call i64 @_ZNSt5dequeIS_IiSaIiEESaIS1_EE14_S_buffer_sizeEv() #3
  invoke void @_ZSt7advanceIPKSt5dequeIiSaIiEEmEvRT_T0_(%"class.std::deque.8"** dereferenceable(8) %10, i64 %36)
          to label %37 unwind label %144

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* @x.308
  %39 = load i32, i32* @y.309
  %40 = sub i32 %38, -1956091681
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1956091681
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %395

; <label>:64:                                     ; preds = %37, %395
  %65 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %66 = load %"class.std::deque.8"*, %"class.std::deque.8"** %10, align 8
  %67 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %9, align 8
  %68 = load %"class.std::deque.8"*, %"class.std::deque.8"** %67, align 8
  %69 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %70 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %69) #3
  %71 = load i32, i32* @x.308
  %72 = load i32, i32* @y.309
  %73 = sub i32 %71, -925876523
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -925876523
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %395

; <label>:85:                                     ; preds = %64
  %86 = invoke %"class.std::deque.8"* @_ZSt22__uninitialized_copy_aIPKSt5dequeIiSaIiEEPS2_S2_ET0_T_S7_S6_RSaIT1_E(%"class.std::deque.8"* %65, %"class.std::deque.8"* %66, %"class.std::deque.8"* %68, %"class.std::allocator.5"* dereferenceable(1) %70)
          to label %87 unwind label %144

; <label>:87:                                     ; preds = %85
  %88 = load i32, i32* @x.308
  %89 = load i32, i32* @y.309
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %402

; <label>:113:                                    ; preds = %87, %402
  %114 = load %"class.std::deque.8"*, %"class.std::deque.8"** %10, align 8
  store %"class.std::deque.8"* %114, %"class.std::deque.8"** %6, align 8
  %115 = load i32, i32* @x.308
  %116 = load i32, i32* @y.309
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %402

; <label>:140:                                    ; preds = %113
  br label %141

; <label>:141:                                    ; preds = %140
  %142 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %9, align 8
  %143 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %142, i32 1
  store %"class.std::deque.8"** %143, %"class.std::deque.8"*** %9, align 8
  br label %26

; <label>:144:                                    ; preds = %202, %85, %34
  %145 = load i32, i32* @x.308
  %146 = load i32, i32* @y.309
  %147 = add i32 %145, 1829118243
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 1829118243
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %404

; <label>:159:                                    ; preds = %144, %404
  %160 = landingpad { i8*, i32 }
          catch i8* null
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %11, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %12, align 4
  %163 = load i32, i32* @x.308
  %164 = load i32, i32* @y.309
  %165 = sub i32 %163, -1473395545
  %166 = sub i32 %165, 1
  %167 = add i32 %166, -1473395545
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %404

; <label>:189:                                    ; preds = %159
  br label %190

; <label>:190:                                    ; preds = %189
  %191 = load i8*, i8** %11, align 8
  %192 = call i8* @__cxa_begin_catch(i8* %191) #3
  %193 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %194 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %193, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %194, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %13, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %195) #3
  %196 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %9, align 8
  %197 = load %"class.std::deque.8"*, %"class.std::deque.8"** %196, align 8
  %198 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %9, align 8
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ES4_PS4_(%"struct.std::_Deque_iterator.10"* %14, %"class.std::deque.8"* %197, %"class.std::deque.8"** %198) #3
  %199 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %200 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %199) #3
  invoke void @_ZSt8_DestroyISt15_Deque_iteratorISt5dequeIiSaIiEERS3_PS3_ES3_EvT_S7_RSaIT0_E(%"struct.std::_Deque_iterator.10"* %13, %"struct.std::_Deque_iterator.10"* %14, %"class.std::allocator.5"* dereferenceable(1) %200)
          to label %201 unwind label %214

; <label>:201:                                    ; preds = %190
  invoke void @__cxa_rethrow() #12
          to label %352 unwind label %214

; <label>:202:                                    ; preds = %26
  %203 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %204 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %205 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %206 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %205, i32 0, i32 0
  %207 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %206, i32 0, i32 3
  %208 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %207, i32 0, i32 1
  %209 = load %"class.std::deque.8"*, %"class.std::deque.8"** %208, align 8
  %210 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %211 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %210) #3
  %212 = invoke %"class.std::deque.8"* @_ZSt22__uninitialized_copy_aIPKSt5dequeIiSaIiEEPS2_S2_ET0_T_S7_S6_RSaIT1_E(%"class.std::deque.8"* %203, %"class.std::deque.8"* %204, %"class.std::deque.8"* %209, %"class.std::allocator.5"* dereferenceable(1) %211)
          to label %213 unwind label %144

; <label>:213:                                    ; preds = %202
  br label %291

; <label>:214:                                    ; preds = %201, %190
  %215 = load i32, i32* @x.308
  %216 = load i32, i32* @y.309
  %217 = add i32 %215, -1385242097
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, -1385242097
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  br i1 %227, label %229, label %408

; <label>:229:                                    ; preds = %214, %408
  %230 = landingpad { i8*, i32 }
          cleanup
  %231 = extractvalue { i8*, i32 } %230, 0
  store i8* %231, i8** %11, align 8
  %232 = extractvalue { i8*, i32 } %230, 1
  store i32 %232, i32* %12, align 4
  %233 = load i32, i32* @x.308
  %234 = load i32, i32* @y.309
  %235 = add i32 %233, 59360491
  %236 = sub i32 %235, 1
  %237 = sub i32 %236, 59360491
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = and i1 %241, %242
  %244 = xor i1 %241, %242
  %245 = or i1 %243, %244
  %246 = or i1 %241, %242
  br i1 %245, label %247, label %408

; <label>:247:                                    ; preds = %229
  invoke void @__cxa_end_catch()
          to label %248 unwind label %349

; <label>:248:                                    ; preds = %247
  %249 = load i32, i32* @x.308
  %250 = load i32, i32* @y.309
  %251 = add i32 %249, -18598372
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, -18598372
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = xor i1 %257, true
  %260 = xor i1 %258, true
  %261 = xor i1 true, true
  %262 = and i1 %259, true
  %263 = and i1 %257, %261
  %264 = and i1 %260, true
  %265 = and i1 %258, %261
  %266 = or i1 %262, %263
  %267 = or i1 %264, %265
  %268 = xor i1 %266, %267
  %269 = or i1 %259, %260
  %270 = xor i1 %269, true
  %271 = or i1 true, %261
  %272 = and i1 %270, %271
  %273 = or i1 %268, %272
  %274 = or i1 %257, %258
  br i1 %273, label %275, label %412

; <label>:275:                                    ; preds = %248, %412
  %276 = load i32, i32* @x.308
  %277 = load i32, i32* @y.309
  %278 = sub i32 %276, 1555725537
  %279 = sub i32 %278, 1
  %280 = add i32 %279, 1555725537
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = and i1 %284, %285
  %287 = xor i1 %284, %285
  %288 = or i1 %286, %287
  %289 = or i1 %284, %285
  br i1 %288, label %290, label %412

; <label>:290:                                    ; preds = %275
  br label %344

; <label>:291:                                    ; preds = %213
  %292 = load i32, i32* @x.308
  %293 = load i32, i32* @y.309
  %294 = sub i32 0, 1
  %295 = add i32 %292, %294
  %296 = sub i32 %292, 1
  %297 = mul i32 %292, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %293, 10
  %301 = xor i1 %299, true
  %302 = xor i1 %300, true
  %303 = xor i1 true, true
  %304 = and i1 %301, true
  %305 = and i1 %299, %303
  %306 = and i1 %302, true
  %307 = and i1 %300, %303
  %308 = or i1 %304, %305
  %309 = or i1 %306, %307
  %310 = xor i1 %308, %309
  %311 = or i1 %301, %302
  %312 = xor i1 %311, true
  %313 = or i1 true, %303
  %314 = and i1 %312, %313
  %315 = or i1 %310, %314
  %316 = or i1 %299, %300
  br i1 %315, label %317, label %413

; <label>:317:                                    ; preds = %291, %413
  %318 = load i32, i32* @x.308
  %319 = load i32, i32* @y.309
  %320 = sub i32 0, 1
  %321 = add i32 %318, %320
  %322 = sub i32 %318, 1
  %323 = mul i32 %318, %321
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %319, 10
  %327 = xor i1 %325, true
  %328 = xor i1 %326, true
  %329 = xor i1 false, true
  %330 = and i1 %327, false
  %331 = and i1 %325, %329
  %332 = and i1 %328, false
  %333 = and i1 %326, %329
  %334 = or i1 %330, %331
  %335 = or i1 %332, %333
  %336 = xor i1 %334, %335
  %337 = or i1 %327, %328
  %338 = xor i1 %337, true
  %339 = or i1 false, %329
  %340 = and i1 %338, %339
  %341 = or i1 %336, %340
  %342 = or i1 %325, %326
  br i1 %341, label %343, label %413

; <label>:343:                                    ; preds = %317
  ret void

; <label>:344:                                    ; preds = %290
  %345 = load i8*, i8** %11, align 8
  %346 = load i32, i32* %12, align 4
  %347 = insertvalue { i8*, i32 } undef, i8* %345, 0
  %348 = insertvalue { i8*, i32 } %347, i32 %346, 1
  resume { i8*, i32 } %348

; <label>:349:                                    ; preds = %247
  %350 = landingpad { i8*, i32 }
          catch i8* null
  %351 = extractvalue { i8*, i32 } %350, 0
  call void @__clang_call_terminate(i8* %351) #10
  unreachable

; <label>:352:                                    ; preds = %201
  %353 = load i32, i32* @x.308
  %354 = load i32, i32* @y.309
  %355 = add i32 %353, -1232526964
  %356 = sub i32 %355, 1
  %357 = sub i32 %356, -1232526964
  %358 = sub i32 %353, 1
  %359 = mul i32 %353, %357
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %354, 10
  %363 = xor i1 %361, true
  %364 = xor i1 %362, true
  %365 = xor i1 true, true
  %366 = and i1 %363, true
  %367 = and i1 %361, %365
  %368 = and i1 %364, true
  %369 = and i1 %362, %365
  %370 = or i1 %366, %367
  %371 = or i1 %368, %369
  %372 = xor i1 %370, %371
  %373 = or i1 %363, %364
  %374 = xor i1 %373, true
  %375 = or i1 true, %365
  %376 = and i1 %374, %375
  %377 = or i1 %372, %376
  %378 = or i1 %361, %362
  br i1 %377, label %379, label %414

; <label>:379:                                    ; preds = %352, %414
  %380 = load i32, i32* @x.308
  %381 = load i32, i32* @y.309
  %382 = add i32 %380, -173724929
  %383 = sub i32 %382, 1
  %384 = sub i32 %383, -173724929
  %385 = sub i32 %380, 1
  %386 = mul i32 %380, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %381, 10
  %390 = and i1 %388, %389
  %391 = xor i1 %388, %389
  %392 = or i1 %390, %391
  %393 = or i1 %388, %389
  br i1 %392, label %394, label %414

; <label>:394:                                    ; preds = %379
  unreachable

; <label>:395:                                    ; preds = %64, %37
  %396 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %397 = load %"class.std::deque.8"*, %"class.std::deque.8"** %10, align 8
  %398 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %9, align 8
  %399 = load %"class.std::deque.8"*, %"class.std::deque.8"** %398, align 8
  %400 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %401 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %400) #3
  br label %64

; <label>:402:                                    ; preds = %113, %87
  %403 = load %"class.std::deque.8"*, %"class.std::deque.8"** %10, align 8
  store %"class.std::deque.8"* %403, %"class.std::deque.8"** %6, align 8
  br label %113

; <label>:404:                                    ; preds = %159, %144
  %405 = landingpad { i8*, i32 }
          catch i8* null
  %406 = extractvalue { i8*, i32 } %405, 0
  store i8* %406, i8** %11, align 8
  %407 = extractvalue { i8*, i32 } %405, 1
  store i32 %407, i32* %12, align 4
  br label %159

; <label>:408:                                    ; preds = %229, %214
  %409 = landingpad { i8*, i32 }
          cleanup
  %410 = extractvalue { i8*, i32 } %409, 0
  store i8* %410, i8** %11, align 8
  %411 = extractvalue { i8*, i32 } %409, 1
  store i32 %411, i32* %12, align 4
  br label %229

; <label>:412:                                    ; preds = %275, %248
  br label %275

; <label>:413:                                    ; preds = %317, %291
  br label %317

; <label>:414:                                    ; preds = %379, %352
  br label %379
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque.8"* @_ZNKSt16initializer_listISt5dequeIiSaIiEEE5beginEv(%"class.std::initializer_list"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.310
  %6 = load i32, i32* @y.311
  %7 = add i32 %5, 1814472873
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1814472873
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1094734216, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1094734216, label %19
    i32 169995710, label %27
    i32 -320032251, label %47
    i32 -996365667, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 169995710, i32 -996365667
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %28, align 8
  %29 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %28, align 8
  %30 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %29, i32 0, i32 0
  %31 = load %"class.std::deque.8"*, %"class.std::deque.8"** %30, align 8
  store %"class.std::deque.8"* %31, %"class.std::deque.8"** %2
  %32 = load i32, i32* @x.310
  %33 = load i32, i32* @y.311
  %34 = add i32 %32, -541111003
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -541111003
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -320032251, i32 -996365667
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %2
  ret %"class.std::deque.8"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %50, align 8
  %51 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %50, align 8
  %52 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %51, i32 0, i32 0
  %53 = load %"class.std::deque.8"*, %"class.std::deque.8"** %52, align 8
  store i32 169995710, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque.8"* @_ZNKSt16initializer_listISt5dequeIiSaIiEEE3endEv(%"class.std::initializer_list"*) #5 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = call %"class.std::deque.8"* @_ZNKSt16initializer_listISt5dequeIiSaIiEEE5beginEv(%"class.std::initializer_list"* %3) #3
  %5 = call i64 @_ZNKSt16initializer_listISt5dequeIiSaIiEEE4sizeEv(%"class.std::initializer_list"* %3) #3
  %6 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %4, i64 %5
  ret %"class.std::deque.8"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::deque.8"**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %8, align 8
  store %"class.std::deque.8"** %9, %"class.std::deque.8"*** %2
  %10 = alloca i32
  store i32 1274207160, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %166
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1274207160, label %14
    i32 1655465515, label %18
    i32 -843714283, label %45
    i32 57760290, label %82
    i32 588845735, label %83
    i32 -1272638415, label %110
    i32 -860664226, label %140
    i32 2049153808, label %141
    i32 2036973980, label %163
  ]

; <label>:13:                                     ; preds = %11
  br label %166

; <label>:14:                                     ; preds = %11
  %15 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %2
  %16 = icmp ne %"class.std::deque.8"** %15, null
  %17 = select i1 %16, i32 1655465515, i32 588845735
  store i32 %17, i32* %10
  br label %166

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.314
  %20 = load i32, i32* @y.315
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -843714283, i32 2049153808
  store i32 %44, i32* %10
  br label %166

; <label>:45:                                     ; preds = %11
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %47, i32 0, i32 2
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %48, i32 0, i32 3
  %50 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %49, align 8
  %51 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %52, i32 0, i32 3
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %53, i32 0, i32 3
  %55 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %54, align 8
  %56 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %55, i64 1
  %57 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_destroy_nodesEPPS2_S6_(%"class.std::_Deque_base"* %57, %"class.std::deque.8"** %50, %"class.std::deque.8"** %56) #3
  %58 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %59 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %59, i32 0, i32 0
  %61 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %60, align 8
  %62 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_deallocate_mapEPPS2_m(%"class.std::_Deque_base"* %66, %"class.std::deque.8"** %61, i64 %65) #3
  %67 = load i32, i32* @x.314
  %68 = load i32, i32* @y.315
  %69 = add i32 %67, 471693527
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 471693527
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 57760290, i32 2049153808
  store i32 %81, i32* %10
  br label %166

; <label>:82:                                     ; preds = %11
  store i32 588845735, i32* %10
  br label %166

; <label>:83:                                     ; preds = %11
  %84 = load i32, i32* @x.314
  %85 = load i32, i32* @y.315
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 -1272638415, i32 2036973980
  store i32 %109, i32* %10
  br label %166

; <label>:110:                                    ; preds = %11
  %111 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %112 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %111, i32 0, i32 0
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %112) #3
  %113 = load i32, i32* @x.314
  %114 = load i32, i32* @y.315
  %115 = sub i32 %113, 24210108
  %116 = sub i32 %115, 1
  %117 = add i32 %116, 24210108
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 false, true
  %126 = and i1 %123, false
  %127 = and i1 %121, %125
  %128 = and i1 %124, false
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 false, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 -860664226, i32 2036973980
  store i32 %139, i32* %10
  br label %166

; <label>:140:                                    ; preds = %11
  ret void

; <label>:141:                                    ; preds = %11
  %142 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %143 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %143, i32 0, i32 2
  %145 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %144, i32 0, i32 3
  %146 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %145, align 8
  %147 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %148 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %148, i32 0, i32 3
  %150 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %149, i32 0, i32 3
  %151 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %150, align 8
  %152 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %151, i64 1
  %153 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_destroy_nodesEPPS2_S6_(%"class.std::_Deque_base"* %153, %"class.std::deque.8"** %146, %"class.std::deque.8"** %152) #3
  %154 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %155 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %155, i32 0, i32 0
  %157 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %156, align 8
  %158 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %159 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %159, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_deallocate_mapEPPS2_m(%"class.std::_Deque_base"* %162, %"class.std::deque.8"** %157, i64 %161) #3
  store i32 -843714283, i32* %10
  br label %166

; <label>:163:                                    ; preds = %11
  %164 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %165 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %164, i32 0, i32 0
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %165) #3
  store i32 -1272638415, i32* %10
  br label %166

; <label>:166:                                    ; preds = %163, %141, %110, %83, %82, %45, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE11_Deque_implC2ERKS3_(%"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.316
  %6 = load i32, i32* @y.317
  %7 = sub i32 %5, 158893980
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 158893980
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 461918850, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 461918850, label %19
    i32 -2095433427, label %27
    i32 -957571421, label %52
    i32 1812661527, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2095433427, i32 1812661527
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*, align 8
  %29 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %0, %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"** %28, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %29, align 8
  %30 = load %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*, %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %30 to %"class.std::allocator.5"*
  %32 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %29, align 8
  call void @_ZNSaISt5dequeIiSaIiEEEC2ERKS2_(%"class.std::allocator.5"* %31, %"class.std::allocator.5"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %30, i32 0, i32 0
  store %"class.std::deque.8"** null, %"class.std::deque.8"*** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %30, i32 0, i32 1
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %30, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2Ev(%"struct.std::_Deque_iterator.10"* %35) #3
  %36 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %30, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2Ev(%"struct.std::_Deque_iterator.10"* %36) #3
  %37 = load i32, i32* @x.316
  %38 = load i32, i32* @y.317
  %39 = sub i32 %37, 1170605171
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1170605171
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -957571421, i32 1812661527
  store i32 %51, i32* %15
  br label %63

; <label>:52:                                     ; preds = %16
  ret void

; <label>:53:                                     ; preds = %16
  %54 = alloca %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*, align 8
  %55 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %0, %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"** %54, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %55, align 8
  %56 = load %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*, %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"** %54, align 8
  %57 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %56 to %"class.std::allocator.5"*
  %58 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %55, align 8
  call void @_ZNSaISt5dequeIiSaIiEEEC2ERKS2_(%"class.std::allocator.5"* %57, %"class.std::allocator.5"* dereferenceable(1) %58) #3
  %59 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %56, i32 0, i32 0
  store %"class.std::deque.8"** null, %"class.std::deque.8"*** %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %56, i32 0, i32 1
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %56, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2Ev(%"struct.std::_Deque_iterator.10"* %61) #3
  %62 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %56, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2Ev(%"struct.std::_Deque_iterator.10"* %62) #3
  store i32 -2095433427, i32* %15
  br label %63

; <label>:63:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5dequeIiSaIiEEEC2ERKS2_(%"class.std::allocator.5"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.318
  %6 = load i32, i32* @y.319
  %7 = add i32 %5, 603840448
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 603840448
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -294519499, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -294519499, label %19
    i32 1333924116, label %39
    i32 -2093377169, label %73
    i32 -443836719, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1333924116, i32 -443836719
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.5"*, align 8
  %41 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %40, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %41, align 8
  %42 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  %43 = bitcast %"class.std::allocator.5"* %42 to %"class.__gnu_cxx::new_allocator.6"*
  %44 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %41, align 8
  %45 = bitcast %"class.std::allocator.5"* %44 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.6"* %43, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %45) #3
  %46 = load i32, i32* @x.318
  %47 = load i32, i32* @y.319
  %48 = add i32 %46, -492685049
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -492685049
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -2093377169, i32 -443836719
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::allocator.5"*, align 8
  %76 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %75, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %76, align 8
  %77 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %75, align 8
  %78 = bitcast %"class.std::allocator.5"* %77 to %"class.__gnu_cxx::new_allocator.6"*
  %79 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %76, align 8
  %80 = bitcast %"class.std::allocator.5"* %79 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.6"* %78, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %80) #3
  store i32 1333924116, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2Ev(%"struct.std::_Deque_iterator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.320
  %5 = load i32, i32* @y.321
  %6 = add i32 %4, 1378969862
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1378969862
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1870834672, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1870834672, label %18
    i32 -1124374032, label %38
    i32 1003250202, label %72
    i32 1909366254, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1124374032, i32 1909366254
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %39, align 8
  %40 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %40, i32 0, i32 0
  store %"class.std::deque.8"* null, %"class.std::deque.8"** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %40, i32 0, i32 1
  store %"class.std::deque.8"* null, %"class.std::deque.8"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %40, i32 0, i32 2
  store %"class.std::deque.8"* null, %"class.std::deque.8"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %40, i32 0, i32 3
  store %"class.std::deque.8"** null, %"class.std::deque.8"*** %44, align 8
  %45 = load i32, i32* @x.320
  %46 = load i32, i32* @y.321
  %47 = add i32 %45, -345687371
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -345687371
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1003250202, i32 1909366254
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %74, align 8
  %75 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %75, i32 0, i32 0
  store %"class.std::deque.8"* null, %"class.std::deque.8"** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %75, i32 0, i32 1
  store %"class.std::deque.8"* null, %"class.std::deque.8"** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %75, i32 0, i32 2
  store %"class.std::deque.8"* null, %"class.std::deque.8"** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %75, i32 0, i32 3
  store %"class.std::deque.8"** null, %"class.std::deque.8"*** %79, align 8
  store i32 -1124374032, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.322
  %6 = load i32, i32* @y.323
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 82249838, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 82249838, label %18
    i32 -1620113220, label %38
    i32 -2145021042, label %69
    i32 73605374, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1620113220, i32 73605374
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %40 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %1, %"class.__gnu_cxx::new_allocator.6"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %42 = load i32, i32* @x.322
  %43 = load i32, i32* @y.323
  %44 = add i32 %42, -1442218820
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1442218820
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -2145021042, i32 73605374
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %72 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %71, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %1, %"class.__gnu_cxx::new_allocator.6"** %72, align 8
  %73 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %71, align 8
  store i32 -1620113220, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_(%"class.std::deque.8"*, %"class.std::deque.8"*) #0 comdat {
  %3 = alloca %"class.std::deque.8"*, align 8
  %4 = alloca %"class.std::deque.8"*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %3, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %4, align 8
  %7 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %8 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  call void @_ZSt19__iterator_categoryIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"class.std::deque.8"** dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag(%"class.std::deque.8"* %7, %"class.std::deque.8"* %8)
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.326
  %4 = load i32, i32* @y.327
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %278

; <label>:28:                                     ; preds = %2, %278
  %29 = alloca %"class.std::_Deque_base"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"class.std::deque.8"**, align 8
  %35 = alloca %"class.std::deque.8"**, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %29, align 8
  store i64 %1, i64* %30, align 8
  %38 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %29, align 8
  %39 = load i64, i64* %30, align 8
  %40 = call i64 @_ZSt16__deque_buf_sizem(i64 80)
  %41 = udiv i64 %39, %40
  %42 = sub i64 0, %41
  %43 = sub i64 0, 1
  %44 = add i64 %42, %43
  %45 = sub i64 0, %44
  %46 = add i64 %41, 1
  store i64 %45, i64* %31, align 8
  store i64 8, i64* %32, align 8
  %47 = load i64, i64* %31, align 8
  %48 = sub i64 0, 2
  %49 = sub i64 %47, %48
  %50 = add i64 %47, 2
  store i64 %49, i64* %33, align 8
  %51 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %32, i64* dereferenceable(8) %33)
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %53, i32 0, i32 1
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = call %"class.std::deque.8"** @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %38, i64 %57)
  %59 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %59, i32 0, i32 0
  store %"class.std::deque.8"** %58, %"class.std::deque.8"*** %60, align 8
  %61 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %61, i32 0, i32 0
  %63 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %31, align 8
  %68 = sub i64 %66, -7149771059818955053
  %69 = sub i64 %68, %67
  %70 = add i64 %69, -7149771059818955053
  %71 = sub i64 %66, %67
  %72 = udiv i64 %70, 2
  %73 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %63, i64 %72
  store %"class.std::deque.8"** %73, %"class.std::deque.8"*** %34, align 8
  %74 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %34, align 8
  %75 = load i64, i64* %31, align 8
  %76 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %74, i64 %75
  store %"class.std::deque.8"** %76, %"class.std::deque.8"*** %35, align 8
  %77 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %34, align 8
  %78 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %35, align 8
  %79 = load i32, i32* @x.326
  %80 = load i32, i32* @y.327
  %81 = add i32 %79, -1332512727
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, -1332512727
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %278

; <label>:93:                                     ; preds = %28
  invoke void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_create_nodesEPPS2_S6_(%"class.std::_Deque_base"* %38, %"class.std::deque.8"** %77, %"class.std::deque.8"** %78)
          to label %94 unwind label %95

; <label>:94:                                     ; preds = %93
  br label %201

; <label>:95:                                     ; preds = %93
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %36, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %37, align 4
  br label %99

; <label>:99:                                     ; preds = %95
  %100 = load i8*, i8** %36, align 8
  %101 = call i8* @__cxa_begin_catch(i8* %100) #3
  %102 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %102, i32 0, i32 0
  %104 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %103, align 8
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %105, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_deallocate_mapEPPS2_m(%"class.std::_Deque_base"* %38, %"class.std::deque.8"** %104, i64 %107) #3
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %108, i32 0, i32 0
  store %"class.std::deque.8"** null, %"class.std::deque.8"*** %109, align 8
  %110 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %110, i32 0, i32 1
  store i64 0, i64* %111, align 8
  invoke void @__cxa_rethrow() #12
          to label %277 unwind label %112

; <label>:112:                                    ; preds = %99
  %113 = load i32, i32* @x.326
  %114 = load i32, i32* @y.327
  %115 = add i32 %113, -1366173722
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -1366173722
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %413

; <label>:127:                                    ; preds = %112, %413
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %36, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %37, align 4
  %131 = load i32, i32* @x.326
  %132 = load i32, i32* @y.327
  %133 = sub i32 %131, -273492720
  %134 = sub i32 %133, 1
  %135 = add i32 %134, -273492720
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %413

; <label>:145:                                    ; preds = %127
  invoke void @__cxa_end_catch()
          to label %146 unwind label %274

; <label>:146:                                    ; preds = %145
  %147 = load i32, i32* @x.326
  %148 = load i32, i32* @y.327
  %149 = add i32 %147, 409423500
  %150 = sub i32 %149, 1
  %151 = sub i32 %150, 409423500
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  br i1 %171, label %173, label %417

; <label>:173:                                    ; preds = %146, %417
  %174 = load i32, i32* @x.326
  %175 = load i32, i32* @y.327
  %176 = add i32 %174, -1448321084
  %177 = sub i32 %176, 1
  %178 = sub i32 %177, -1448321084
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = xor i1 %182, true
  %185 = xor i1 %183, true
  %186 = xor i1 false, true
  %187 = and i1 %184, false
  %188 = and i1 %182, %186
  %189 = and i1 %185, false
  %190 = and i1 %183, %186
  %191 = or i1 %187, %188
  %192 = or i1 %189, %190
  %193 = xor i1 %191, %192
  %194 = or i1 %184, %185
  %195 = xor i1 %194, true
  %196 = or i1 false, %186
  %197 = and i1 %195, %196
  %198 = or i1 %193, %197
  %199 = or i1 %182, %183
  br i1 %198, label %200, label %417

; <label>:200:                                    ; preds = %173
  br label %227

; <label>:201:                                    ; preds = %94
  %202 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %202, i32 0, i32 2
  %204 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %34, align 8
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %203, %"class.std::deque.8"** %204) #3
  %205 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %206 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %205, i32 0, i32 3
  %207 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %35, align 8
  %208 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %207, i64 -1
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %206, %"class.std::deque.8"** %208) #3
  %209 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %209, i32 0, i32 2
  %211 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %210, i32 0, i32 1
  %212 = load %"class.std::deque.8"*, %"class.std::deque.8"** %211, align 8
  %213 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %214 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %213, i32 0, i32 2
  %215 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %214, i32 0, i32 0
  store %"class.std::deque.8"* %212, %"class.std::deque.8"** %215, align 8
  %216 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %216, i32 0, i32 3
  %218 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %217, i32 0, i32 1
  %219 = load %"class.std::deque.8"*, %"class.std::deque.8"** %218, align 8
  %220 = load i64, i64* %30, align 8
  %221 = call i64 @_ZSt16__deque_buf_sizem(i64 80)
  %222 = urem i64 %220, %221
  %223 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %219, i64 %222
  %224 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %224, i32 0, i32 3
  %226 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %225, i32 0, i32 0
  store %"class.std::deque.8"* %223, %"class.std::deque.8"** %226, align 8
  ret void

; <label>:227:                                    ; preds = %200
  %228 = load i32, i32* @x.326
  %229 = load i32, i32* @y.327
  %230 = sub i32 %228, 1287564817
  %231 = sub i32 %230, 1
  %232 = add i32 %231, 1287564817
  %233 = sub i32 %228, 1
  %234 = mul i32 %228, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %229, 10
  %238 = xor i1 %236, true
  %239 = xor i1 %237, true
  %240 = xor i1 false, true
  %241 = and i1 %238, false
  %242 = and i1 %236, %240
  %243 = and i1 %239, false
  %244 = and i1 %237, %240
  %245 = or i1 %241, %242
  %246 = or i1 %243, %244
  %247 = xor i1 %245, %246
  %248 = or i1 %238, %239
  %249 = xor i1 %248, true
  %250 = or i1 false, %240
  %251 = and i1 %249, %250
  %252 = or i1 %247, %251
  %253 = or i1 %236, %237
  br i1 %252, label %254, label %418

; <label>:254:                                    ; preds = %227, %418
  %255 = load i8*, i8** %36, align 8
  %256 = load i32, i32* %37, align 4
  %257 = insertvalue { i8*, i32 } undef, i8* %255, 0
  %258 = insertvalue { i8*, i32 } %257, i32 %256, 1
  %259 = load i32, i32* @x.326
  %260 = load i32, i32* @y.327
  %261 = sub i32 %259, 1151189822
  %262 = sub i32 %261, 1
  %263 = add i32 %262, 1151189822
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  br i1 %271, label %273, label %418

; <label>:273:                                    ; preds = %254
  resume { i8*, i32 } %258

; <label>:274:                                    ; preds = %145
  %275 = landingpad { i8*, i32 }
          catch i8* null
  %276 = extractvalue { i8*, i32 } %275, 0
  call void @__clang_call_terminate(i8* %276) #10
  unreachable

; <label>:277:                                    ; preds = %99
  unreachable

; <label>:278:                                    ; preds = %28, %2
  %279 = alloca %"class.std::_Deque_base"*, align 8
  %280 = alloca i64, align 8
  %281 = alloca i64, align 8
  %282 = alloca i64, align 8
  %283 = alloca i64, align 8
  %284 = alloca %"class.std::deque.8"**, align 8
  %285 = alloca %"class.std::deque.8"**, align 8
  %286 = alloca i8*
  %287 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %279, align 8
  store i64 %1, i64* %280, align 8
  %288 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %279, align 8
  %289 = load i64, i64* %280, align 8
  %290 = call i64 @_ZSt16__deque_buf_sizem(i64 80)
  %291 = shl i64 %289, %290
  %292 = add i64 %289, 5589242475618947317
  %293 = sub i64 %292, %290
  %294 = sub i64 %293, 5589242475618947317
  %295 = sub i64 %289, %290
  %296 = mul i64 %294, %290
  %297 = add i64 0, -4332222656391000146
  %298 = sub i64 %297, %289
  %299 = sub i64 %298, -4332222656391000146
  %300 = sub i64 0, %289
  %301 = sub i64 0, %299
  %302 = sub i64 0, %290
  %303 = add i64 %301, %302
  %304 = sub i64 0, %303
  %305 = add i64 %299, %290
  %306 = add i64 0, -4194107910551472070
  %307 = sub i64 %306, %289
  %308 = sub i64 %307, -4194107910551472070
  %309 = sub i64 0, %289
  %310 = sub i64 0, %308
  %311 = sub i64 0, %290
  %312 = add i64 %310, %311
  %313 = sub i64 0, %312
  %314 = add i64 %308, %290
  %315 = shl i64 %289, %290
  %316 = shl i64 %289, %290
  %317 = udiv i64 %289, %290
  %318 = shl i64 %317, 1
  %319 = sub i64 0, -5888205433890439424
  %320 = sub i64 %319, %317
  %321 = add i64 %320, -5888205433890439424
  %322 = sub i64 0, %317
  %323 = sub i64 0, 1
  %324 = sub i64 %321, %323
  %325 = add i64 %321, 1
  %326 = shl i64 %317, 1
  %327 = shl i64 %317, 1
  %328 = sub i64 %317, 2869831140170827581
  %329 = sub i64 %328, 1
  %330 = add i64 %329, 2869831140170827581
  %331 = sub i64 %317, 1
  %332 = mul i64 %330, 1
  %333 = add i64 %317, 3922402498507691956
  %334 = add i64 %333, 1
  %335 = sub i64 %334, 3922402498507691956
  %336 = add i64 %317, 1
  store i64 %335, i64* %281, align 8
  store i64 8, i64* %282, align 8
  %337 = load i64, i64* %281, align 8
  %338 = sub i64 %337, -8324013697466125461
  %339 = sub i64 %338, 2
  %340 = add i64 %339, -8324013697466125461
  %341 = sub i64 %337, 2
  %342 = mul i64 %340, 2
  %343 = sub i64 0, %337
  %344 = add i64 0, %343
  %345 = sub i64 0, %337
  %346 = sub i64 %344, -6788119572730266983
  %347 = add i64 %346, 2
  %348 = add i64 %347, -6788119572730266983
  %349 = add i64 %344, 2
  %350 = sub i64 0, %337
  %351 = add i64 0, %350
  %352 = sub i64 0, %337
  %353 = sub i64 %351, -3071146573667294879
  %354 = add i64 %353, 2
  %355 = add i64 %354, -3071146573667294879
  %356 = add i64 %351, 2
  %357 = sub i64 %337, 8594712517997291909
  %358 = sub i64 %357, 2
  %359 = add i64 %358, 8594712517997291909
  %360 = sub i64 %337, 2
  %361 = mul i64 %359, 2
  %362 = sub i64 %337, -210978067860961454
  %363 = add i64 %362, 2
  %364 = add i64 %363, -210978067860961454
  %365 = add i64 %337, 2
  store i64 %364, i64* %283, align 8
  %366 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %282, i64* dereferenceable(8) %283)
  %367 = load i64, i64* %366, align 8
  %368 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %288, i32 0, i32 0
  %369 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %368, i32 0, i32 1
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %288, i32 0, i32 0
  %371 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %370, i32 0, i32 1
  %372 = load i64, i64* %371, align 8
  %373 = call %"class.std::deque.8"** @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %288, i64 %372)
  %374 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %288, i32 0, i32 0
  %375 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %374, i32 0, i32 0
  store %"class.std::deque.8"** %373, %"class.std::deque.8"*** %375, align 8
  %376 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %288, i32 0, i32 0
  %377 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %376, i32 0, i32 0
  %378 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %377, align 8
  %379 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %288, i32 0, i32 0
  %380 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %379, i32 0, i32 1
  %381 = load i64, i64* %380, align 8
  %382 = load i64, i64* %281, align 8
  %383 = sub i64 0, %382
  %384 = add i64 %381, %383
  %385 = sub i64 %381, %382
  %386 = mul i64 %384, %382
  %387 = shl i64 %381, %382
  %388 = sub i64 %381, 4656041057362042811
  %389 = sub i64 %388, %382
  %390 = add i64 %389, 4656041057362042811
  %391 = sub i64 %381, %382
  %392 = shl i64 %390, 2
  %393 = add i64 %390, 4202887545798424725
  %394 = sub i64 %393, 2
  %395 = sub i64 %394, 4202887545798424725
  %396 = sub i64 %390, 2
  %397 = mul i64 %395, 2
  %398 = sub i64 0, 2
  %399 = add i64 %390, %398
  %400 = sub i64 %390, 2
  %401 = mul i64 %399, 2
  %402 = shl i64 %390, 2
  %403 = shl i64 %390, 2
  %404 = shl i64 %390, 2
  %405 = shl i64 %390, 2
  %406 = udiv i64 %390, 2
  %407 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %378, i64 %406
  store %"class.std::deque.8"** %407, %"class.std::deque.8"*** %284, align 8
  %408 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %284, align 8
  %409 = load i64, i64* %281, align 8
  %410 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %408, i64 %409
  store %"class.std::deque.8"** %410, %"class.std::deque.8"*** %285, align 8
  %411 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %284, align 8
  %412 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %285, align 8
  br label %28

; <label>:413:                                    ; preds = %127, %112
  %414 = landingpad { i8*, i32 }
          cleanup
  %415 = extractvalue { i8*, i32 } %414, 0
  store i8* %415, i8** %36, align 8
  %416 = extractvalue { i8*, i32 } %414, 1
  store i32 %416, i32* %37, align 4
  br label %127

; <label>:417:                                    ; preds = %173, %146
  br label %173

; <label>:418:                                    ; preds = %254, %227
  %419 = load i8*, i8** %36, align 8
  %420 = load i32, i32* %37, align 4
  %421 = insertvalue { i8*, i32 } undef, i8* %419, 0
  %422 = insertvalue { i8*, i32 } %421, i32 %420, 1
  br label %254
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7advanceIPKSt5dequeIiSaIiEEmEvRT_T0_(%"class.std::deque.8"** dereferenceable(8), i64) #0 comdat {
  %3 = alloca %"class.std::deque.8"**, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  %7 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load i64, i64* %4, align 8
  store i64 %8, i64* %5, align 8
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %3, align 8
  %10 = load i64, i64* %5, align 8
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %3, align 8
  call void @_ZSt19__iterator_categoryIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"class.std::deque.8"** dereferenceable(8) %11)
  call void @_ZSt9__advanceIPKSt5dequeIiSaIiEElEvRT_T0_St26random_access_iterator_tag(%"class.std::deque.8"** dereferenceable(8) %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt5dequeIS_IiSaIiEESaIS1_EE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 80)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = load i32, i32* @x.330
  %5 = load i32, i32* @y.331
  %6 = sub i32 %4, 892424941
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 892424941
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %47

; <label>:30:                                     ; preds = %3, %47
  %31 = landingpad { i8*, i32 }
          catch i8* null
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @__clang_call_terminate(i8* %32) #10
  %33 = load i32, i32* @x.330
  %34 = load i32, i32* @y.331
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %47

; <label>:46:                                     ; preds = %30
  unreachable

; <label>:47:                                     ; preds = %30, %3
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #10
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"* @_ZSt22__uninitialized_copy_aIPKSt5dequeIiSaIiEEPS2_S2_ET0_T_S7_S6_RSaIT1_E(%"class.std::deque.8"*, %"class.std::deque.8"*, %"class.std::deque.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::deque.8"*, align 8
  %7 = alloca %"class.std::deque.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %5, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %6, align 8
  store %"class.std::deque.8"* %2, %"class.std::deque.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %9 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %10 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %11 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %12 = call %"class.std::deque.8"* @_ZSt18uninitialized_copyIPKSt5dequeIiSaIiEEPS2_ET0_T_S7_S6_(%"class.std::deque.8"* %9, %"class.std::deque.8"* %10, %"class.std::deque.8"* %11)
  ret %"class.std::deque.8"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorISt5dequeIiSaIiEERS3_PS3_ES3_EvT_S7_RSaIT0_E(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator.10", align 8
  %6 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %4, align 8
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %5, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %6, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %1) #3
  call void @_ZSt8_DestroyISt15_Deque_iteratorISt5dequeIiSaIiEERS3_PS3_EEvT_S7_(%"struct.std::_Deque_iterator.10"* %5, %"struct.std::_Deque_iterator.10"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.338
  %6 = load i32, i32* @y.339
  %7 = add i32 %5, -442150840
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -442150840
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1080676196, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %107
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1080676196, label %19
    i32 1315514611, label %39
    i32 -2097390797, label %86
    i32 1579276118, label %87
  ]

; <label>:18:                                     ; preds = %16
  br label %107

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1315514611, i32 1579276118
  store i32 %38, i32* %15
  br label %107

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %40, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %41, align 8
  %42 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %44, i32 0, i32 0
  %46 = load %"class.std::deque.8"*, %"class.std::deque.8"** %45, align 8
  store %"class.std::deque.8"* %46, %"class.std::deque.8"** %43, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %42, i32 0, i32 1
  %48 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %48, i32 0, i32 1
  %50 = load %"class.std::deque.8"*, %"class.std::deque.8"** %49, align 8
  store %"class.std::deque.8"* %50, %"class.std::deque.8"** %47, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %42, i32 0, i32 2
  %52 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %41, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %52, i32 0, i32 2
  %54 = load %"class.std::deque.8"*, %"class.std::deque.8"** %53, align 8
  store %"class.std::deque.8"* %54, %"class.std::deque.8"** %51, align 8
  %55 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %42, i32 0, i32 3
  %56 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %41, align 8
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %56, i32 0, i32 3
  %58 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %57, align 8
  store %"class.std::deque.8"** %58, %"class.std::deque.8"*** %55, align 8
  %59 = load i32, i32* @x.338
  %60 = load i32, i32* @y.339
  %61 = sub i32 %59, 2143199175
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 2143199175
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -2097390797, i32 1579276118
  store i32 %85, i32* %15
  br label %107

; <label>:86:                                     ; preds = %16
  ret void

; <label>:87:                                     ; preds = %16
  %88 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %89 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %88, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %89, align 8
  %90 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %88, align 8
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %90, i32 0, i32 0
  %92 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %89, align 8
  %93 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %92, i32 0, i32 0
  %94 = load %"class.std::deque.8"*, %"class.std::deque.8"** %93, align 8
  store %"class.std::deque.8"* %94, %"class.std::deque.8"** %91, align 8
  %95 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %90, i32 0, i32 1
  %96 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %89, align 8
  %97 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %96, i32 0, i32 1
  %98 = load %"class.std::deque.8"*, %"class.std::deque.8"** %97, align 8
  store %"class.std::deque.8"* %98, %"class.std::deque.8"** %95, align 8
  %99 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %90, i32 0, i32 2
  %100 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %89, align 8
  %101 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %100, i32 0, i32 2
  %102 = load %"class.std::deque.8"*, %"class.std::deque.8"** %101, align 8
  store %"class.std::deque.8"* %102, %"class.std::deque.8"** %99, align 8
  %103 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %90, i32 0, i32 3
  %104 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %89, align 8
  %105 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %104, i32 0, i32 3
  %106 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %105, align 8
  store %"class.std::deque.8"** %106, %"class.std::deque.8"*** %103, align 8
  store i32 1315514611, i32* %15
  br label %107

; <label>:107:                                    ; preds = %87, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ES4_PS4_(%"struct.std::_Deque_iterator.10"*, %"class.std::deque.8"*, %"class.std::deque.8"**) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %4, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %5, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %6, align 8
  %7 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %7, i32 0, i32 0
  %9 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  store %"class.std::deque.8"* %9, %"class.std::deque.8"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %7, i32 0, i32 1
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %12 = load %"class.std::deque.8"*, %"class.std::deque.8"** %11, align 8
  store %"class.std::deque.8"* %12, %"class.std::deque.8"** %10, align 8
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %7, i32 0, i32 2
  %14 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %15 = load %"class.std::deque.8"*, %"class.std::deque.8"** %14, align 8
  %16 = call i64 @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E14_S_buffer_sizeEv() #3
  %17 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %15, i64 %16
  store %"class.std::deque.8"* %17, %"class.std::deque.8"** %13, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %7, i32 0, i32 3
  %19 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  store %"class.std::deque.8"** %19, %"class.std::deque.8"*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt10__distanceIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag(%"class.std::deque.8"*, %"class.std::deque.8"*) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.342
  %7 = load i32, i32* @y.343
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1040614242, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %111
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1040614242, label %19
    i32 -1427321767, label %27
    i32 1453774733, label %54
    i32 -2059333271, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %111

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1427321767, i32 -2059333271
  store i32 %26, i32* %15
  br label %111

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::random_access_iterator_tag", align 1
  %29 = alloca %"class.std::deque.8"*, align 8
  %30 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %29, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %30, align 8
  %31 = load %"class.std::deque.8"*, %"class.std::deque.8"** %30, align 8
  %32 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %33 = ptrtoint %"class.std::deque.8"* %31 to i64
  %34 = ptrtoint %"class.std::deque.8"* %32 to i64
  %35 = add i64 %33, 3282839727084130552
  %36 = sub i64 %35, %34
  %37 = sub i64 %36, 3282839727084130552
  %38 = sub i64 %33, %34
  %39 = sdiv exact i64 %37, 80
  store i64 %39, i64* %3
  %40 = load i32, i32* @x.342
  %41 = load i32, i32* @y.343
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1453774733, i32 -2059333271
  store i32 %53, i32* %15
  br label %111

; <label>:54:                                     ; preds = %16
  %55 = load volatile i64, i64* %3
  ret i64 %55

; <label>:56:                                     ; preds = %16
  %57 = alloca %"struct.std::random_access_iterator_tag", align 1
  %58 = alloca %"class.std::deque.8"*, align 8
  %59 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %58, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %59, align 8
  %60 = load %"class.std::deque.8"*, %"class.std::deque.8"** %59, align 8
  %61 = load %"class.std::deque.8"*, %"class.std::deque.8"** %58, align 8
  %62 = ptrtoint %"class.std::deque.8"* %60 to i64
  %63 = ptrtoint %"class.std::deque.8"* %61 to i64
  %64 = sub i64 0, %63
  %65 = add i64 %62, %64
  %66 = sub i64 %62, %63
  %67 = mul i64 %65, %63
  %68 = sub i64 0, %62
  %69 = add i64 0, %68
  %70 = sub i64 0, %62
  %71 = add i64 %69, 8456554652217436477
  %72 = add i64 %71, %63
  %73 = sub i64 %72, 8456554652217436477
  %74 = add i64 %69, %63
  %75 = add i64 %62, -3498359471420505422
  %76 = sub i64 %75, %63
  %77 = sub i64 %76, -3498359471420505422
  %78 = sub i64 %62, %63
  %79 = sub i64 %77, 1101978577532684782
  %80 = sub i64 %79, 80
  %81 = add i64 %80, 1101978577532684782
  %82 = sub i64 %77, 80
  %83 = mul i64 %81, 80
  %84 = add i64 %77, 5370567884831092314
  %85 = sub i64 %84, 80
  %86 = sub i64 %85, 5370567884831092314
  %87 = sub i64 %77, 80
  %88 = mul i64 %86, 80
  %89 = sub i64 0, %77
  %90 = add i64 0, %89
  %91 = sub i64 0, %77
  %92 = sub i64 0, %90
  %93 = sub i64 0, 80
  %94 = add i64 %92, %93
  %95 = sub i64 0, %94
  %96 = add i64 %90, 80
  %97 = sub i64 0, 80
  %98 = add i64 %77, %97
  %99 = sub i64 %77, 80
  %100 = mul i64 %98, 80
  %101 = add i64 0, -7873229390396539616
  %102 = sub i64 %101, %77
  %103 = sub i64 %102, -7873229390396539616
  %104 = sub i64 0, %77
  %105 = sub i64 0, %103
  %106 = sub i64 0, 80
  %107 = add i64 %105, %106
  %108 = sub i64 0, %107
  %109 = add i64 %103, 80
  %110 = sdiv exact i64 %77, 80
  store i32 -1427321767, i32* %15
  br label %111

; <label>:111:                                    ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPKSt5dequeIiSaIiEEENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"class.std::deque.8"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.16", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE20_M_get_map_allocatorEv(%"class.std::allocator.16"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke %"class.std::deque.8"** @_ZNSt16allocator_traitsISaIPSt5dequeIiSaIiEEEE8allocateERS4_m(%"class.std::allocator.16"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %66

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.346
  %13 = load i32, i32* @y.347
  %14 = sub i32 %12, 813718130
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 813718130
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %75

; <label>:38:                                     ; preds = %11, %75
  call void @_ZNSaIPSt5dequeIiSaIiEEED2Ev(%"class.std::allocator.16"* %5) #3
  %39 = load i32, i32* @x.346
  %40 = load i32, i32* @y.347
  %41 = sub i32 %39, -588646179
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -588646179
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %75

; <label>:65:                                     ; preds = %38
  ret %"class.std::deque.8"** %10

; <label>:66:                                     ; preds = %2
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %6, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %7, align 4
  call void @_ZNSaIPSt5dequeIiSaIiEEED2Ev(%"class.std::allocator.16"* %5) #3
  br label %70

; <label>:70:                                     ; preds = %66
  %71 = load i8*, i8** %6, align 8
  %72 = load i32, i32* %7, align 4
  %73 = insertvalue { i8*, i32 } undef, i8* %71, 0
  %74 = insertvalue { i8*, i32 } %73, i32 %72, 1
  resume { i8*, i32 } %74

; <label>:75:                                     ; preds = %38, %11
  call void @_ZNSaIPSt5dequeIiSaIiEEED2Ev(%"class.std::allocator.16"* %5) #3
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_create_nodesEPPS2_S6_(%"class.std::_Deque_base"*, %"class.std::deque.8"**, %"class.std::deque.8"**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  %7 = alloca %"class.std::deque.8"**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %5, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  store %"class.std::deque.8"** %11, %"class.std::deque.8"*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %90, %3
  %13 = load i32, i32* @x.348
  %14 = load i32, i32* @y.349
  %15 = add i32 %13, 877582854
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 877582854
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %282

; <label>:39:                                     ; preds = %12, %282
  %40 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  %41 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %42 = icmp ult %"class.std::deque.8"** %40, %41
  %43 = load i32, i32* @x.348
  %44 = load i32, i32* @y.349
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %282

; <label>:56:                                     ; preds = %39
  br i1 %42, label %57, label %102

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* @x.348
  %59 = load i32, i32* @y.349
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %286

; <label>:71:                                     ; preds = %57, %286
  %72 = load i32, i32* @x.348
  %73 = load i32, i32* @y.349
  %74 = add i32 %72, -940324571
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -940324571
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %286

; <label>:86:                                     ; preds = %71
  %87 = invoke %"class.std::deque.8"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %88 unwind label %93

; <label>:88:                                     ; preds = %86
  %89 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  store %"class.std::deque.8"* %87, %"class.std::deque.8"** %89, align 8
  br label %90

; <label>:90:                                     ; preds = %88
  %91 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  %92 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %91, i32 1
  store %"class.std::deque.8"** %92, %"class.std::deque.8"*** %7, align 8
  br label %12

; <label>:93:                                     ; preds = %86
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %8, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %9, align 4
  br label %97

; <label>:97:                                     ; preds = %93
  %98 = load i8*, i8** %8, align 8
  %99 = call i8* @__cxa_begin_catch(i8* %98) #3
  %100 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %101 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_destroy_nodesEPPS2_S6_(%"class.std::_Deque_base"* %10, %"class.std::deque.8"** %100, %"class.std::deque.8"** %101) #3
  invoke void @__cxa_rethrow() #12
          to label %281 unwind label %144

; <label>:102:                                    ; preds = %56
  %103 = load i32, i32* @x.348
  %104 = load i32, i32* @y.349
  %105 = sub i32 %103, -1436413009
  %106 = sub i32 %105, 1
  %107 = add i32 %106, -1436413009
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %287

; <label>:117:                                    ; preds = %102, %287
  %118 = load i32, i32* @x.348
  %119 = load i32, i32* @y.349
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %287

; <label>:143:                                    ; preds = %117
  br label %190

; <label>:144:                                    ; preds = %97
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %8, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %148 unwind label %225

; <label>:148:                                    ; preds = %144
  %149 = load i32, i32* @x.348
  %150 = load i32, i32* @y.349
  %151 = add i32 %149, -175572714
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, -175572714
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 true, true
  %162 = and i1 %159, true
  %163 = and i1 %157, %161
  %164 = and i1 %160, true
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 true, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  br i1 %173, label %175, label %288

; <label>:175:                                    ; preds = %148, %288
  %176 = load i32, i32* @x.348
  %177 = load i32, i32* @y.349
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %288

; <label>:189:                                    ; preds = %175
  br label %191

; <label>:190:                                    ; preds = %143
  ret void

; <label>:191:                                    ; preds = %189
  %192 = load i32, i32* @x.348
  %193 = load i32, i32* @y.349
  %194 = sub i32 %192, 1443623142
  %195 = sub i32 %194, 1
  %196 = add i32 %195, 1443623142
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  br i1 %204, label %206, label %289

; <label>:206:                                    ; preds = %191, %289
  %207 = load i8*, i8** %8, align 8
  %208 = load i32, i32* %9, align 4
  %209 = insertvalue { i8*, i32 } undef, i8* %207, 0
  %210 = insertvalue { i8*, i32 } %209, i32 %208, 1
  %211 = load i32, i32* @x.348
  %212 = load i32, i32* @y.349
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %289

; <label>:224:                                    ; preds = %206
  resume { i8*, i32 } %210

; <label>:225:                                    ; preds = %144
  %226 = load i32, i32* @x.348
  %227 = load i32, i32* @y.349
  %228 = sub i32 0, 1
  %229 = add i32 %226, %228
  %230 = sub i32 %226, 1
  %231 = mul i32 %226, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %227, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 true, true
  %238 = and i1 %235, true
  %239 = and i1 %233, %237
  %240 = and i1 %236, true
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 true, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  br i1 %249, label %251, label %294

; <label>:251:                                    ; preds = %225, %294
  %252 = landingpad { i8*, i32 }
          catch i8* null
  %253 = extractvalue { i8*, i32 } %252, 0
  call void @__clang_call_terminate(i8* %253) #10
  %254 = load i32, i32* @x.348
  %255 = load i32, i32* @y.349
  %256 = add i32 %254, -1745672263
  %257 = sub i32 %256, 1
  %258 = sub i32 %257, -1745672263
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = xor i1 %262, true
  %265 = xor i1 %263, true
  %266 = xor i1 false, true
  %267 = and i1 %264, false
  %268 = and i1 %262, %266
  %269 = and i1 %265, false
  %270 = and i1 %263, %266
  %271 = or i1 %267, %268
  %272 = or i1 %269, %270
  %273 = xor i1 %271, %272
  %274 = or i1 %264, %265
  %275 = xor i1 %274, true
  %276 = or i1 false, %266
  %277 = and i1 %275, %276
  %278 = or i1 %273, %277
  %279 = or i1 %262, %263
  br i1 %278, label %280, label %294

; <label>:280:                                    ; preds = %251
  unreachable

; <label>:281:                                    ; preds = %97
  unreachable

; <label>:282:                                    ; preds = %39, %12
  %283 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  %284 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %285 = icmp ult %"class.std::deque.8"** %283, %284
  br label %39

; <label>:286:                                    ; preds = %71, %57
  br label %71

; <label>:287:                                    ; preds = %117, %102
  br label %117

; <label>:288:                                    ; preds = %175, %148
  br label %175

; <label>:289:                                    ; preds = %206, %191
  %290 = load i8*, i8** %8, align 8
  %291 = load i32, i32* %9, align 4
  %292 = insertvalue { i8*, i32 } undef, i8* %290, 0
  %293 = insertvalue { i8*, i32 } %292, i32 %291, 1
  br label %206

; <label>:294:                                    ; preds = %251, %225
  %295 = landingpad { i8*, i32 }
          catch i8* null
  %296 = extractvalue { i8*, i32 } %295, 0
  call void @__clang_call_terminate(i8* %296) #10
  br label %251
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_deallocate_mapEPPS2_m(%"class.std::_Deque_base"*, %"class.std::deque.8"**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.16", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE20_M_get_map_allocatorEv(%"class.std::allocator.16"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPSt5dequeIiSaIiEEEE10deallocateERS4_PS3_m(%"class.std::allocator.16"* dereferenceable(1) %7, %"class.std::deque.8"** %11, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  call void @_ZNSaIPSt5dequeIiSaIiEEED2Ev(%"class.std::allocator.16"* %7) #3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.350
  %16 = load i32, i32* @y.351
  %17 = add i32 %15, -163089075
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, -163089075
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %49

; <label>:29:                                     ; preds = %14, %49
  %30 = landingpad { i8*, i32 }
          catch i8* null
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %8, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %9, align 4
  call void @_ZNSaIPSt5dequeIiSaIiEEED2Ev(%"class.std::allocator.16"* %7) #3
  %33 = load i32, i32* @x.350
  %34 = load i32, i32* @y.351
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %49

; <label>:46:                                     ; preds = %29
  br label %47

; <label>:47:                                     ; preds = %46
  %48 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %48) #10
  unreachable

; <label>:49:                                     ; preds = %29, %14
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %8, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %9, align 4
  call void @_ZNSaIPSt5dequeIiSaIiEEED2Ev(%"class.std::allocator.16"* %7) #3
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"*, %"class.std::deque.8"**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %4 = alloca %"class.std::deque.8"**, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %3, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %3, align 8
  %6 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 3
  store %"class.std::deque.8"** %6, %"class.std::deque.8"*** %7, align 8
  %8 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %4, align 8
  %9 = load %"class.std::deque.8"*, %"class.std::deque.8"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 1
  store %"class.std::deque.8"* %9, %"class.std::deque.8"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 1
  %12 = load %"class.std::deque.8"*, %"class.std::deque.8"** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 2
  store %"class.std::deque.8"* %14, %"class.std::deque.8"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE20_M_get_map_allocatorEv(%"class.std::allocator.16"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPSt5dequeIiSaIiEEEC2IS1_EERKSaIT_E(%"class.std::allocator.16"* %0, %"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZNSt16allocator_traitsISaIPSt5dequeIiSaIiEEEE8allocateERS4_m(%"class.std::allocator.16"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::deque.8"** @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %6, i64 %7, i8* null)
  ret %"class.std::deque.8"** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPSt5dequeIiSaIiEEED2Ev(%"class.std::allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.358
  %5 = load i32, i32* @y.359
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1878356502, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1878356502, label %17
    i32 387875118, label %37
    i32 -1766918592, label %56
    i32 1811307139, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 387875118, i32 1811307139
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %38, align 8
  %39 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %38, align 8
  %40 = bitcast %"class.std::allocator.16"* %39 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.17"* %40) #3
  %41 = load i32, i32* @x.358
  %42 = load i32, i32* @y.359
  %43 = sub i32 %41, 1740110278
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1740110278
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1766918592, i32 1811307139
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %58, align 8
  %59 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %58, align 8
  %60 = bitcast %"class.std::allocator.16"* %59 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.17"* %60) #3
  store i32 387875118, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPSt5dequeIiSaIiEEEC2IS1_EERKSaIT_E(%"class.std::allocator.16"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.362
  %6 = load i32, i32* @y.363
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1259602298, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1259602298, label %18
    i32 -477910080, label %26
    i32 -1909946080, label %58
    i32 -849269335, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -477910080, i32 -849269335
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.16"*, align 8
  %28 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %27, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %28, align 8
  %29 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %27, align 8
  %30 = bitcast %"class.std::allocator.16"* %29 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %30) #3
  %31 = load i32, i32* @x.362
  %32 = load i32, i32* @y.363
  %33 = add i32 %31, -1279598181
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1279598181
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1909946080, i32 -849269335
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::allocator.16"*, align 8
  %61 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %60, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %61, align 8
  %62 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %60, align 8
  %63 = bitcast %"class.std::allocator.16"* %62 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %63) #3
  store i32 -477910080, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::deque.8"**
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.366
  %10 = load i32, i32* @y.367
  %11 = sub i32 %9, -1762259128
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1762259128
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -92008764, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %148
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -92008764, label %23
    i32 -1680779614, label %43
    i32 -314316758, label %68
    i32 -2104843689, label %71
    i32 -229849496, label %72
    i32 132176282, label %88
    i32 988153254, label %120
    i32 249986501, label %122
    i32 133481851, label %130
  ]

; <label>:22:                                     ; preds = %20
  br label %148

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1680779614, i32 249986501
  store i32 %42, i32* %19
  br label %148

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %6
  %46 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %44, align 8
  %47 = load volatile i64*, i64** %6
  store i64 %1, i64* %47, align 8
  store i8* %2, i8** %46, align 8
  %48 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %44, align 8
  %49 = load volatile i64*, i64** %6
  %50 = load i64, i64* %49, align 8
  %51 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %48) #3
  %52 = icmp ugt i64 %50, %51
  store i1 %52, i1* %5
  %53 = load i32, i32* @x.366
  %54 = load i32, i32* @y.367
  %55 = sub i32 %53, -1563143485
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1563143485
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -314316758, i32 249986501
  store i32 %67, i32* %19
  br label %148

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %5
  %70 = select i1 %69, i32 -2104843689, i32 -229849496
  store i32 %70, i32* %19
  br label %148

; <label>:71:                                     ; preds = %20
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:72:                                     ; preds = %20
  %73 = load i32, i32* @x.366
  %74 = load i32, i32* @y.367
  %75 = add i32 %73, -867728073
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -867728073
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 132176282, i32 133481851
  store i32 %87, i32* %19
  br label %148

; <label>:88:                                     ; preds = %20
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 %90, 8
  %92 = call i8* @_Znwm(i64 %91)
  %93 = bitcast i8* %92 to %"class.std::deque.8"**
  store %"class.std::deque.8"** %93, %"class.std::deque.8"*** %4
  %94 = load i32, i32* @x.366
  %95 = load i32, i32* @y.367
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 true, true
  %106 = and i1 %103, true
  %107 = and i1 %101, %105
  %108 = and i1 %104, true
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 true, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 988153254, i32 133481851
  store i32 %119, i32* %19
  br label %148

; <label>:120:                                    ; preds = %20
  %121 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  ret %"class.std::deque.8"** %121

; <label>:122:                                    ; preds = %20
  %123 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %124 = alloca i64, align 8
  %125 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %123, align 8
  store i64 %1, i64* %124, align 8
  store i8* %2, i8** %125, align 8
  %126 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %123, align 8
  %127 = load i64, i64* %124, align 8
  %128 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %126) #3
  %129 = icmp ugt i64 %127, %128
  store i32 -1680779614, i32* %19
  br label %148

; <label>:130:                                    ; preds = %20
  %131 = load volatile i64*, i64** %6
  %132 = load i64, i64* %131, align 8
  %133 = shl i64 %132, 8
  %134 = sub i64 0, 8
  %135 = add i64 %132, %134
  %136 = sub i64 %132, 8
  %137 = mul i64 %135, 8
  %138 = shl i64 %132, 8
  %139 = add i64 %132, -2742237186264109329
  %140 = sub i64 %139, 8
  %141 = sub i64 %140, -2742237186264109329
  %142 = sub i64 %132, 8
  %143 = mul i64 %141, 8
  %144 = shl i64 %132, 8
  %145 = mul i64 %132, 8
  %146 = call i8* @_Znwm(i64 %145)
  %147 = bitcast i8* %146 to %"class.std::deque.8"**
  store i32 132176282, i32* %19
  br label %148

; <label>:148:                                    ; preds = %130, %122, %88, %72, %68, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 80)
  %7 = call %"class.std::deque.8"* @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.5"* dereferenceable(1) %5, i64 %6)
  ret %"class.std::deque.8"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_destroy_nodesEPPS2_S6_(%"class.std::_Deque_base"*, %"class.std::deque.8"**, %"class.std::deque.8"**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  %7 = alloca %"class.std::deque.8"**, align 8
  %8 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %6, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  store %"class.std::deque.8"** %10, %"class.std::deque.8"*** %8, align 8
  %11 = alloca i32
  store i32 418003525, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %61
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 418003525, label %15
    i32 -646541317, label %20
    i32 -518928028, label %24
    i32 1001983870, label %27
    i32 -1111356970, label %43
    i32 1574453557, label %59
    i32 -1770806898, label %60
  ]

; <label>:14:                                     ; preds = %12
  br label %61

; <label>:15:                                     ; preds = %12
  %16 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %8, align 8
  %17 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  %18 = icmp ult %"class.std::deque.8"** %16, %17
  %19 = select i1 %18, i32 -646541317, i32 1001983870
  store i32 %19, i32* %11
  br label %61

; <label>:20:                                     ; preds = %12
  %21 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %8, align 8
  %22 = load %"class.std::deque.8"*, %"class.std::deque.8"** %21, align 8
  %23 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE18_M_deallocate_nodeEPS2_(%"class.std::_Deque_base"* %23, %"class.std::deque.8"* %22) #3
  store i32 -518928028, i32* %11
  br label %61

; <label>:24:                                     ; preds = %12
  %25 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %8, align 8
  %26 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %25, i32 1
  store %"class.std::deque.8"** %26, %"class.std::deque.8"*** %8, align 8
  store i32 418003525, i32* %11
  br label %61

; <label>:27:                                     ; preds = %12
  %28 = load i32, i32* @x.374
  %29 = load i32, i32* @y.375
  %30 = add i32 %28, -1777219786
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1777219786
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1111356970, i32 -1770806898
  store i32 %42, i32* %11
  br label %61

; <label>:43:                                     ; preds = %12
  %44 = load i32, i32* @x.374
  %45 = load i32, i32* @y.375
  %46 = add i32 %44, 671828956
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 671828956
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1574453557, i32 -1770806898
  store i32 %58, i32* %11
  br label %61

; <label>:59:                                     ; preds = %12
  ret void

; <label>:60:                                     ; preds = %12
  store i32 -1111356970, i32* %11
  br label %61

; <label>:61:                                     ; preds = %60, %43, %27, %24, %20, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"* @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::deque.8"* @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %"class.std::deque.8"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"* @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::deque.8"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -1135000233, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %93
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1135000233, label %17
    i32 -985456492, label %22
    i32 759259547, label %23
    i32 -650651858, label %50
    i32 -540641047, label %70
    i32 891486839, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %93

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -985456492, i32 759259547
  store i32 %21, i32* %13
  br label %93

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.378
  %25 = load i32, i32* @y.379
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -650651858, i32 891486839
  store i32 %49, i32* %13
  br label %93

; <label>:50:                                     ; preds = %14
  %51 = load i64, i64* %8, align 8
  %52 = mul i64 %51, 80
  %53 = call i8* @_Znwm(i64 %52)
  %54 = bitcast i8* %53 to %"class.std::deque.8"*
  store %"class.std::deque.8"* %54, %"class.std::deque.8"** %4
  %55 = load i32, i32* @x.378
  %56 = load i32, i32* @y.379
  %57 = add i32 %55, -1635727476
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -1635727476
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -540641047, i32 891486839
  store i32 %69, i32* %13
  br label %93

; <label>:70:                                     ; preds = %14
  %71 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  ret %"class.std::deque.8"* %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = add i64 0, -6936532860312478393
  %75 = sub i64 %74, %73
  %76 = sub i64 %75, -6936532860312478393
  %77 = sub i64 0, %73
  %78 = add i64 %76, 6566401488901418608
  %79 = add i64 %78, 80
  %80 = sub i64 %79, 6566401488901418608
  %81 = add i64 %76, 80
  %82 = shl i64 %73, 80
  %83 = sub i64 0, -5307745909111455345
  %84 = sub i64 %83, %73
  %85 = add i64 %84, -5307745909111455345
  %86 = sub i64 0, %73
  %87 = sub i64 0, 80
  %88 = sub i64 %85, %87
  %89 = add i64 %85, 80
  %90 = mul i64 %73, 80
  %91 = call i8* @_Znwm(i64 %90)
  %92 = bitcast i8* %91 to %"class.std::deque.8"*
  store i32 -650651858, i32* %13
  br label %93

; <label>:93:                                     ; preds = %72, %50, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.380
  %5 = load i32, i32* @y.381
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -587116866, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -587116866, label %17
    i32 761838272, label %37
    i32 441642077, label %67
    i32 -1540406983, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 761838272, i32 -1540406983
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %40 = load i32, i32* @x.380
  %41 = load i32, i32* @y.381
  %42 = add i32 %40, -2106329646
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -2106329646
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 441642077, i32 -1540406983
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret i64 230584300921369395

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %69, align 8
  store i32 761838272, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE18_M_deallocate_nodeEPS2_(%"class.std::_Deque_base"*, %"class.std::deque.8"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.382
  %4 = load i32, i32* @y.383
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %97

; <label>:16:                                     ; preds = %2, %97
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %18, align 8
  %19 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %20 to %"class.std::allocator.5"*
  %22 = load %"class.std::deque.8"*, %"class.std::deque.8"** %18, align 8
  %23 = load i32, i32* @x.382
  %24 = load i32, i32* @y.383
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %97

; <label>:48:                                     ; preds = %16
  %49 = invoke i64 @_ZSt16__deque_buf_sizem(i64 80)
          to label %50 unwind label %52

; <label>:50:                                     ; preds = %48
  invoke void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.5"* dereferenceable(1) %21, %"class.std::deque.8"* %22, i64 %49)
          to label %51 unwind label %52

; <label>:51:                                     ; preds = %50
  ret void

; <label>:52:                                     ; preds = %50, %48
  %53 = load i32, i32* @x.382
  %54 = load i32, i32* @y.383
  %55 = add i32 %53, -295373972
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -295373972
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %104

; <label>:67:                                     ; preds = %52, %104
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  call void @__clang_call_terminate(i8* %69) #10
  %70 = load i32, i32* @x.382
  %71 = load i32, i32* @y.383
  %72 = sub i32 %70, -984232908
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -984232908
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %104

; <label>:96:                                     ; preds = %67
  unreachable

; <label>:97:                                     ; preds = %16, %2
  %98 = alloca %"class.std::_Deque_base"*, align 8
  %99 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %98, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %99, align 8
  %100 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %98, align 8
  %101 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %100, i32 0, i32 0
  %102 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %101 to %"class.std::allocator.5"*
  %103 = load %"class.std::deque.8"*, %"class.std::deque.8"** %99, align 8
  br label %16

; <label>:104:                                    ; preds = %67, %52
  %105 = landingpad { i8*, i32 }
          catch i8* null
  %106 = extractvalue { i8*, i32 } %105, 0
  call void @__clang_call_terminate(i8* %106) #10
  br label %67
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.5"* dereferenceable(1), %"class.std::deque.8"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.6"* %8, %"class.std::deque.8"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.6"*, %"class.std::deque.8"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %9 = bitcast %"class.std::deque.8"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPSt5dequeIiSaIiEEEE10deallocateERS4_PS3_m(%"class.std::allocator.16"* dereferenceable(1), %"class.std::deque.8"**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.388
  %7 = load i32, i32* @y.389
  %8 = sub i32 %6, -43256286
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -43256286
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -946287926, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -946287926, label %20
    i32 1213418131, label %40
    i32 -273842207, label %75
    i32 1867089941, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1213418131, i32 1867089941
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.16"*, align 8
  %42 = alloca %"class.std::deque.8"**, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %41, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %41, align 8
  %45 = bitcast %"class.std::allocator.16"* %44 to %"class.__gnu_cxx::new_allocator.17"*
  %46 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.17"* %45, %"class.std::deque.8"** %46, i64 %47)
  %48 = load i32, i32* @x.388
  %49 = load i32, i32* @y.389
  %50 = sub i32 %48, 1259538953
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1259538953
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -273842207, i32 1867089941
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.16"*, align 8
  %78 = alloca %"class.std::deque.8"**, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %77, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %77, align 8
  %81 = bitcast %"class.std::allocator.16"* %80 to %"class.__gnu_cxx::new_allocator.17"*
  %82 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.17"* %81, %"class.std::deque.8"** %82, i64 %83)
  store i32 1213418131, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPSt5dequeIiSaIiEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.17"*, %"class.std::deque.8"**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %8 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %9 = bitcast %"class.std::deque.8"** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 80)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9__advanceIPKSt5dequeIiSaIiEElEvRT_T0_St26random_access_iterator_tag(%"class.std::deque.8"** dereferenceable(8), i64) #5 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca %"class.std::deque.8"**, align 8
  %5 = alloca i64, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %4, align 8
  %8 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %9 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %8, i64 %6
  store %"class.std::deque.8"* %9, %"class.std::deque.8"** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"* @_ZSt18uninitialized_copyIPKSt5dequeIiSaIiEEPS2_ET0_T_S7_S6_(%"class.std::deque.8"*, %"class.std::deque.8"*, %"class.std::deque.8"*) #0 comdat {
  %4 = alloca %"class.std::deque.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.396
  %8 = load i32, i32* @y.397
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1826213452, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1826213452, label %20
    i32 2137544845, label %28
    i32 303982847, label %64
    i32 1468984333, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2137544845, i32 1468984333
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::deque.8"*, align 8
  %30 = alloca %"class.std::deque.8"*, align 8
  %31 = alloca %"class.std::deque.8"*, align 8
  %32 = alloca i8, align 1
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %29, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %30, align 8
  store %"class.std::deque.8"* %2, %"class.std::deque.8"** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %34 = load %"class.std::deque.8"*, %"class.std::deque.8"** %30, align 8
  %35 = load %"class.std::deque.8"*, %"class.std::deque.8"** %31, align 8
  %36 = call %"class.std::deque.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt5dequeIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::deque.8"* %33, %"class.std::deque.8"* %34, %"class.std::deque.8"* %35)
  store %"class.std::deque.8"* %36, %"class.std::deque.8"** %4
  %37 = load i32, i32* @x.396
  %38 = load i32, i32* @y.397
  %39 = sub i32 %37, -767891593
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -767891593
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 303982847, i32 1468984333
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  ret %"class.std::deque.8"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::deque.8"*, align 8
  %68 = alloca %"class.std::deque.8"*, align 8
  %69 = alloca %"class.std::deque.8"*, align 8
  %70 = alloca i8, align 1
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %67, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %68, align 8
  store %"class.std::deque.8"* %2, %"class.std::deque.8"** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %"class.std::deque.8"*, %"class.std::deque.8"** %67, align 8
  %72 = load %"class.std::deque.8"*, %"class.std::deque.8"** %68, align 8
  %73 = load %"class.std::deque.8"*, %"class.std::deque.8"** %69, align 8
  %74 = call %"class.std::deque.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt5dequeIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::deque.8"* %71, %"class.std::deque.8"* %72, %"class.std::deque.8"* %73)
  store i32 2137544845, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt5dequeIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::deque.8"*, %"class.std::deque.8"*, %"class.std::deque.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::deque.8"*, align 8
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::deque.8"*, align 8
  %7 = alloca %"class.std::deque.8"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %4, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %5, align 8
  store %"class.std::deque.8"* %2, %"class.std::deque.8"** %6, align 8
  %10 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  store %"class.std::deque.8"* %10, %"class.std::deque.8"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %93, %3
  %12 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %13 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %14 = icmp ne %"class.std::deque.8"* %12, %13
  br i1 %14, label %15, label %104

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.398
  %17 = load i32, i32* @y.399
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %17, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %215

; <label>:29:                                     ; preds = %15, %215
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %31 = call %"class.std::deque.8"* @_ZSt11__addressofISt5dequeIiSaIiEEEPT_RS3_(%"class.std::deque.8"* dereferenceable(80) %30) #3
  %32 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %33 = load i32, i32* @x.398
  %34 = load i32, i32* @y.399
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %215

; <label>:46:                                     ; preds = %29
  invoke void @_ZSt10_ConstructISt5dequeIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::deque.8"* %31, %"class.std::deque.8"* dereferenceable(80) %32)
          to label %47 unwind label %94

; <label>:47:                                     ; preds = %46
  br label %48

; <label>:48:                                     ; preds = %47
  %49 = load i32, i32* @x.398
  %50 = load i32, i32* @y.399
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %219

; <label>:62:                                     ; preds = %48, %219
  %63 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %64 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %63, i32 1
  store %"class.std::deque.8"* %64, %"class.std::deque.8"** %4, align 8
  %65 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %66 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %65, i32 1
  store %"class.std::deque.8"* %66, %"class.std::deque.8"** %7, align 8
  %67 = load i32, i32* @x.398
  %68 = load i32, i32* @y.399
  %69 = sub i32 %67, -1531975906
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -1531975906
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %219

; <label>:93:                                     ; preds = %62
  br label %11

; <label>:94:                                     ; preds = %46
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %8, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %9, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i8*, i8** %8, align 8
  %100 = call i8* @__cxa_begin_catch(i8* %99) #3
  %101 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %102 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt5dequeIiSaIiEEEvT_S4_(%"class.std::deque.8"* %101, %"class.std::deque.8"* %102)
          to label %103 unwind label %106

; <label>:103:                                    ; preds = %98
  invoke void @__cxa_rethrow() #12
          to label %214 unwind label %106

; <label>:104:                                    ; preds = %11
  %105 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  ret %"class.std::deque.8"* %105

; <label>:106:                                    ; preds = %103, %98
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %8, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %110 unwind label %211

; <label>:110:                                    ; preds = %106
  br label %165
                                                  ; No predecessors!
  %112 = load i32, i32* @x.398
  %113 = load i32, i32* @y.399
  %114 = sub i32 0, 1
  %115 = add i32 %112, %114
  %116 = sub i32 %112, 1
  %117 = mul i32 %112, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %113, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %224

; <label>:137:                                    ; preds = %111, %224
  call void @llvm.trap()
  %138 = load i32, i32* @x.398
  %139 = load i32, i32* @y.399
  %140 = sub i32 %138, -264059990
  %141 = sub i32 %140, 1
  %142 = add i32 %141, -264059990
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %224

; <label>:164:                                    ; preds = %137
  unreachable

; <label>:165:                                    ; preds = %110
  %166 = load i32, i32* @x.398
  %167 = load i32, i32* @y.399
  %168 = sub i32 0, 1
  %169 = add i32 %166, %168
  %170 = sub i32 %166, 1
  %171 = mul i32 %166, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %167, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  br i1 %177, label %179, label %225

; <label>:179:                                    ; preds = %165, %225
  %180 = load i8*, i8** %8, align 8
  %181 = load i32, i32* %9, align 4
  %182 = insertvalue { i8*, i32 } undef, i8* %180, 0
  %183 = insertvalue { i8*, i32 } %182, i32 %181, 1
  %184 = load i32, i32* @x.398
  %185 = load i32, i32* @y.399
  %186 = add i32 %184, -597695744
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, -597695744
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 true, true
  %197 = and i1 %194, true
  %198 = and i1 %192, %196
  %199 = and i1 %195, true
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 true, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  br i1 %208, label %210, label %225

; <label>:210:                                    ; preds = %179
  resume { i8*, i32 } %183

; <label>:211:                                    ; preds = %106
  %212 = landingpad { i8*, i32 }
          catch i8* null
  %213 = extractvalue { i8*, i32 } %212, 0
  call void @__clang_call_terminate(i8* %213) #10
  unreachable

; <label>:214:                                    ; preds = %103
  unreachable

; <label>:215:                                    ; preds = %29, %15
  %216 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %217 = call %"class.std::deque.8"* @_ZSt11__addressofISt5dequeIiSaIiEEEPT_RS3_(%"class.std::deque.8"* dereferenceable(80) %216) #3
  %218 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  br label %29

; <label>:219:                                    ; preds = %62, %48
  %220 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %221 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %220, i32 1
  store %"class.std::deque.8"* %221, %"class.std::deque.8"** %4, align 8
  %222 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %223 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %222, i32 1
  store %"class.std::deque.8"* %223, %"class.std::deque.8"** %7, align 8
  br label %62

; <label>:224:                                    ; preds = %137, %111
  call void @llvm.trap()
  br label %137

; <label>:225:                                    ; preds = %179, %165
  %226 = load i8*, i8** %8, align 8
  %227 = load i32, i32* %9, align 4
  %228 = insertvalue { i8*, i32 } undef, i8* %226, 0
  %229 = insertvalue { i8*, i32 } %228, i32 %227, 1
  br label %179
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt5dequeIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::deque.8"*, %"class.std::deque.8"* dereferenceable(80)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.400
  %6 = load i32, i32* @y.401
  %7 = sub i32 %5, 1366823144
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1366823144
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -579677682, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -579677682, label %19
    i32 1784003488, label %27
    i32 1915780920, label %50
    i32 -1705715292, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1784003488, i32 -1705715292
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque.8"*, align 8
  %29 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %28, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %29, align 8
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %28, align 8
  %31 = bitcast %"class.std::deque.8"* %30 to i8*
  %32 = bitcast i8* %31 to %"class.std::deque.8"*
  %33 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %34 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardIRKSt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::deque.8"* dereferenceable(80) %33) #3
  call void @_ZNSt5dequeIiSaIiEEC2ERKS1_(%"class.std::deque.8"* %32, %"class.std::deque.8"* dereferenceable(80) %34)
  %35 = load i32, i32* @x.400
  %36 = load i32, i32* @y.401
  %37 = add i32 %35, -1525971658
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1525971658
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1915780920, i32 -1705715292
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::deque.8"*, align 8
  %53 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %52, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %53, align 8
  %54 = load %"class.std::deque.8"*, %"class.std::deque.8"** %52, align 8
  %55 = bitcast %"class.std::deque.8"* %54 to i8*
  %56 = bitcast i8* %55 to %"class.std::deque.8"*
  %57 = load %"class.std::deque.8"*, %"class.std::deque.8"** %53, align 8
  %58 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardIRKSt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::deque.8"* dereferenceable(80) %57) #3
  call void @_ZNSt5dequeIiSaIiEEC2ERKS1_(%"class.std::deque.8"* %56, %"class.std::deque.8"* dereferenceable(80) %58)
  store i32 1784003488, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque.8"* @_ZSt11__addressofISt5dequeIiSaIiEEEPT_RS3_(%"class.std::deque.8"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.402
  %6 = load i32, i32* @y.403
  %7 = sub i32 %5, 1574804218
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1574804218
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -364794033, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -364794033, label %19
    i32 -906553211, label %39
    i32 -2131563814, label %71
    i32 -1426241573, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -906553211, i32 -1426241573
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %40, align 8
  %41 = load %"class.std::deque.8"*, %"class.std::deque.8"** %40, align 8
  %42 = bitcast %"class.std::deque.8"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::deque.8"*
  store %"class.std::deque.8"* %43, %"class.std::deque.8"** %2
  %44 = load i32, i32* @x.402
  %45 = load i32, i32* @y.403
  %46 = add i32 %44, -478762963
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -478762963
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -2131563814, i32 -1426241573
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %2
  ret %"class.std::deque.8"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %74, align 8
  %75 = load %"class.std::deque.8"*, %"class.std::deque.8"** %74, align 8
  %76 = bitcast %"class.std::deque.8"* %75 to i8*
  %77 = bitcast i8* %76 to %"class.std::deque.8"*
  store i32 -906553211, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5dequeIiSaIiEEEvT_S4_(%"class.std::deque.8"*, %"class.std::deque.8"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.404
  %6 = load i32, i32* @y.405
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1375427637, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1375427637, label %18
    i32 -1923723281, label %26
    i32 1561446275, label %45
    i32 -429394899, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1923723281, i32 -429394899
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque.8"*, align 8
  %28 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %27, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %28, align 8
  %29 = load %"class.std::deque.8"*, %"class.std::deque.8"** %27, align 8
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5dequeIiSaIiEEEEvT_S6_(%"class.std::deque.8"* %29, %"class.std::deque.8"* %30)
  %31 = load i32, i32* @x.404
  %32 = load i32, i32* @y.405
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1561446275, i32 -429394899
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::deque.8"*, align 8
  %48 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %47, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %48, align 8
  %49 = load %"class.std::deque.8"*, %"class.std::deque.8"** %47, align 8
  %50 = load %"class.std::deque.8"*, %"class.std::deque.8"** %48, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5dequeIiSaIiEEEEvT_S6_(%"class.std::deque.8"* %49, %"class.std::deque.8"* %50)
  store i32 -1923723281, i32* %14
  br label %51

; <label>:51:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardIRKSt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::deque.8"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.406
  %6 = load i32, i32* @y.407
  %7 = sub i32 %5, -112533588
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -112533588
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1755809327, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1755809327, label %19
    i32 989635718, label %39
    i32 -539300112, label %68
    i32 848024587, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 989635718, i32 848024587
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %40, align 8
  %41 = load %"class.std::deque.8"*, %"class.std::deque.8"** %40, align 8
  store %"class.std::deque.8"* %41, %"class.std::deque.8"** %2
  %42 = load i32, i32* @x.406
  %43 = load i32, i32* @y.407
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -539300112, i32 848024587
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %2
  ret %"class.std::deque.8"* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %71, align 8
  %72 = load %"class.std::deque.8"*, %"class.std::deque.8"** %71, align 8
  store i32 989635718, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5dequeIiSaIiEEEEvT_S6_(%"class.std::deque.8"*, %"class.std::deque.8"*) #0 comdat align 2 {
  %3 = alloca %"class.std::deque.8"**
  %4 = alloca %"class.std::deque.8"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.408
  %8 = load i32, i32* @y.409
  %9 = sub i32 %7, -460519868
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -460519868
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -647940387, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %129
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -647940387, label %21
    i32 939170885, label %41
    i32 -1441880531, label %60
    i32 2048009854, label %61
    i32 -1608227807, label %68
    i32 1205310784, label %72
    i32 -1422551110, label %99
    i32 1414541104, label %119
    i32 112234171, label %120
    i32 1585019104, label %121
    i32 -1573352563, label %124
  ]

; <label>:20:                                     ; preds = %18
  br label %129

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 939170885, i32 1585019104
  store i32 %40, i32* %17
  br label %129

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"** %42, %"class.std::deque.8"*** %4
  %43 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"** %43, %"class.std::deque.8"*** %3
  %44 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %44, align 8
  %45 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %3
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %45, align 8
  %46 = load i32, i32* @x.408
  %47 = load i32, i32* @y.409
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1441880531, i32 1585019104
  store i32 %59, i32* %17
  br label %129

; <label>:60:                                     ; preds = %18
  store i32 2048009854, i32* %17
  br label %129

; <label>:61:                                     ; preds = %18
  %62 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  %63 = load %"class.std::deque.8"*, %"class.std::deque.8"** %62, align 8
  %64 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %3
  %65 = load %"class.std::deque.8"*, %"class.std::deque.8"** %64, align 8
  %66 = icmp ne %"class.std::deque.8"* %63, %65
  %67 = select i1 %66, i32 -1608227807, i32 112234171
  store i32 %67, i32* %17
  br label %129

; <label>:68:                                     ; preds = %18
  %69 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  %70 = load %"class.std::deque.8"*, %"class.std::deque.8"** %69, align 8
  %71 = call %"class.std::deque.8"* @_ZSt11__addressofISt5dequeIiSaIiEEEPT_RS3_(%"class.std::deque.8"* dereferenceable(80) %70) #3
  call void @_ZSt8_DestroyISt5dequeIiSaIiEEEvPT_(%"class.std::deque.8"* %71)
  store i32 1205310784, i32* %17
  br label %129

; <label>:72:                                     ; preds = %18
  %73 = load i32, i32* @x.408
  %74 = load i32, i32* @y.409
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 -1422551110, i32 -1573352563
  store i32 %98, i32* %17
  br label %129

; <label>:99:                                     ; preds = %18
  %100 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  %101 = load %"class.std::deque.8"*, %"class.std::deque.8"** %100, align 8
  %102 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %101, i32 1
  %103 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  store %"class.std::deque.8"* %102, %"class.std::deque.8"** %103, align 8
  %104 = load i32, i32* @x.408
  %105 = load i32, i32* @y.409
  %106 = sub i32 %104, -297668679
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -297668679
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 1414541104, i32 -1573352563
  store i32 %118, i32* %17
  br label %129

; <label>:119:                                    ; preds = %18
  store i32 2048009854, i32* %17
  br label %129

; <label>:120:                                    ; preds = %18
  ret void

; <label>:121:                                    ; preds = %18
  %122 = alloca %"class.std::deque.8"*, align 8
  %123 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %122, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %123, align 8
  store i32 939170885, i32* %17
  br label %129

; <label>:124:                                    ; preds = %18
  %125 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  %126 = load %"class.std::deque.8"*, %"class.std::deque.8"** %125, align 8
  %127 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %126, i32 1
  %128 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  store %"class.std::deque.8"* %127, %"class.std::deque.8"** %128, align 8
  store i32 -1422551110, i32* %17
  br label %129

; <label>:129:                                    ; preds = %124, %121, %119, %99, %72, %68, %61, %60, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt5dequeIiSaIiEEEvPT_(%"class.std::deque.8"*) #5 comdat {
  %2 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %2, align 8
  %3 = load %"class.std::deque.8"*, %"class.std::deque.8"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorISt5dequeIiSaIiEERS3_PS3_EEvT_S7_(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*) #0 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.10", align 8
  %4 = alloca %"struct.std::_Deque_iterator.10", align 8
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %3, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %4, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %1) #3
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyISt15_Deque_iteratorISt5dequeIiSaIiEERS5_PS5_EEEvT_S9_(%"struct.std::_Deque_iterator.10"* %3, %"struct.std::_Deque_iterator.10"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyISt15_Deque_iteratorISt5dequeIiSaIiEERS5_PS5_EEEvT_S9_(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*) #5 comdat align 2 {
  %3 = alloca i32
  store i32 755439904, i32* %3
  br label %4

; <label>:4:                                      ; preds = %2, %16
  %5 = load i32, i32* %3
  switch i32 %5, label %6 [
    i32 755439904, label %7
    i32 -2002415338, label %10
    i32 -1088880566, label %13
    i32 1224230355, label %15
  ]

; <label>:6:                                      ; preds = %4
  br label %16

; <label>:7:                                      ; preds = %4
  %8 = call zeroext i1 @_ZStneISt5dequeIiSaIiEERS2_PS2_EbRKSt15_Deque_iteratorIT_T0_T1_ESB_(%"struct.std::_Deque_iterator.10"* dereferenceable(32) %0, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %1) #3
  %9 = select i1 %8, i32 -2002415338, i32 1224230355
  store i32 %9, i32* %3
  br label %16

; <label>:10:                                     ; preds = %4
  %11 = call dereferenceable(80) %"class.std::deque.8"* @_ZNKSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EdeEv(%"struct.std::_Deque_iterator.10"* %0) #3
  %12 = call %"class.std::deque.8"* @_ZSt11__addressofISt5dequeIiSaIiEEEPT_RS3_(%"class.std::deque.8"* dereferenceable(80) %11) #3
  call void @_ZSt8_DestroyISt5dequeIiSaIiEEEvPT_(%"class.std::deque.8"* %12)
  store i32 -1088880566, i32* %3
  br label %16

; <label>:13:                                     ; preds = %4
  %14 = call dereferenceable(32) %"struct.std::_Deque_iterator.10"* @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EppEv(%"struct.std::_Deque_iterator.10"* %0) #3
  store i32 755439904, i32* %3
  br label %16

; <label>:15:                                     ; preds = %4
  ret void

; <label>:16:                                     ; preds = %13, %10, %7, %6
  br label %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStneISt5dequeIiSaIiEERS2_PS2_EbRKSt15_Deque_iteratorIT_T0_T1_ESB_(%"struct.std::_Deque_iterator.10"* dereferenceable(32), %"struct.std::_Deque_iterator.10"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %3, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %3, align 8
  %6 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4, align 8
  %7 = call zeroext i1 @_ZSteqISt5dequeIiSaIiEERS2_PS2_EbRKSt15_Deque_iteratorIT_T0_T1_ESB_(%"struct.std::_Deque_iterator.10"* dereferenceable(32) %5, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %6) #3
  %8 = xor i1 %7, true
  %9 = and i1 false, %8
  %10 = xor i1 false, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, false
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque.8"* @_ZNKSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EdeEv(%"struct.std::_Deque_iterator.10"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.418
  %6 = load i32, i32* @y.419
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 459109620, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 459109620, label %18
    i32 772837216, label %26
    i32 907905903, label %57
    i32 307854376, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 772837216, i32 307854376
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %27, align 8
  %28 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %28, i32 0, i32 0
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  store %"class.std::deque.8"* %30, %"class.std::deque.8"** %2
  %31 = load i32, i32* @x.418
  %32 = load i32, i32* @y.419
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 907905903, i32 307854376
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %2
  ret %"class.std::deque.8"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %60, align 8
  %61 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %61, i32 0, i32 0
  %63 = load %"class.std::deque.8"*, %"class.std::deque.8"** %62, align 8
  store i32 772837216, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator.10"* @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EppEv(%"struct.std::_Deque_iterator.10"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque.8"*
  %3 = alloca %"class.std::deque.8"*
  %4 = alloca %"struct.std::_Deque_iterator.10"*
  %5 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %5, align 8
  store %"struct.std::_Deque_iterator.10"* %6, %"struct.std::_Deque_iterator.10"** %4
  %7 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %7, i32 0, i32 0
  %9 = load %"class.std::deque.8"*, %"class.std::deque.8"** %8, align 8
  %10 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %9, i32 1
  store %"class.std::deque.8"* %10, %"class.std::deque.8"** %8, align 8
  %11 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %11, i32 0, i32 0
  %13 = load %"class.std::deque.8"*, %"class.std::deque.8"** %12, align 8
  store %"class.std::deque.8"* %13, %"class.std::deque.8"** %3
  %14 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %14, i32 0, i32 2
  %16 = load %"class.std::deque.8"*, %"class.std::deque.8"** %15, align 8
  store %"class.std::deque.8"* %16, %"class.std::deque.8"** %2
  %17 = alloca i32
  store i32 2017702972, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %39
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2017702972, label %21
    i32 -887348984, label %26
    i32 -1762115247, label %37
  ]

; <label>:20:                                     ; preds = %18
  br label %39

; <label>:21:                                     ; preds = %18
  %22 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %3
  %23 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %2
  %24 = icmp eq %"class.std::deque.8"* %22, %23
  %25 = select i1 %24, i32 -887348984, i32 -1762115247
  store i32 %25, i32* %17
  br label %39

; <label>:26:                                     ; preds = %18
  %27 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %27, i32 0, i32 3
  %29 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %28, align 8
  %30 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %29, i64 1
  %31 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %31, %"class.std::deque.8"** %30) #3
  %32 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %32, i32 0, i32 1
  %34 = load %"class.std::deque.8"*, %"class.std::deque.8"** %33, align 8
  %35 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %35, i32 0, i32 0
  store %"class.std::deque.8"* %34, %"class.std::deque.8"** %36, align 8
  store i32 -1762115247, i32* %17
  br label %39

; <label>:37:                                     ; preds = %18
  %38 = load volatile %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4
  ret %"struct.std::_Deque_iterator.10"* %38

; <label>:39:                                     ; preds = %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqISt5dequeIiSaIiEERS2_PS2_EbRKSt15_Deque_iteratorIT_T0_T1_ESB_(%"struct.std::_Deque_iterator.10"* dereferenceable(32), %"struct.std::_Deque_iterator.10"* dereferenceable(32)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.422
  %7 = load i32, i32* @y.423
  %8 = add i32 %6, -2146645264
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -2146645264
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1951223069, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1951223069, label %20
    i32 -1826625372, label %28
    i32 -914113142, label %53
    i32 1974315807, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1826625372, i32 1974315807
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %29, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %30, align 8
  %31 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %31, i32 0, i32 0
  %33 = load %"class.std::deque.8"*, %"class.std::deque.8"** %32, align 8
  %34 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %30, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %34, i32 0, i32 0
  %36 = load %"class.std::deque.8"*, %"class.std::deque.8"** %35, align 8
  %37 = icmp eq %"class.std::deque.8"* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.422
  %39 = load i32, i32* @y.423
  %40 = add i32 %38, -281544468
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -281544468
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -914113142, i32 1974315807
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i1, i1* %3
  ret i1 %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %57 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %56, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %57, align 8
  %58 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %56, align 8
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %58, i32 0, i32 0
  %60 = load %"class.std::deque.8"*, %"class.std::deque.8"** %59, align 8
  %61 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %57, align 8
  %62 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %61, i32 0, i32 0
  %63 = load %"class.std::deque.8"*, %"class.std::deque.8"** %62, align 8
  %64 = icmp eq %"class.std::deque.8"* %60, %63
  store i32 -1826625372, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listISt5dequeIiSaIiEEE4sizeEv(%"class.std::initializer_list"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.424
  %6 = load i32, i32* @y.425
  %7 = add i32 %5, -1643103313
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1643103313
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1095982716, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1095982716, label %19
    i32 413545304, label %39
    i32 -662450325, label %58
    i32 461662587, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 413545304, i32 461662587
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %40, align 8
  %41 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %40, align 8
  %42 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %41, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.424
  %45 = load i32, i32* @y.425
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -662450325, i32 461662587
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %61, align 8
  %62 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %61, align 8
  %63 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %62, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  store i32 413545304, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %0, %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"*, %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt5dequeIiSaIiEEED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_(%"class.std::deque"*, %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"struct.std::_Deque_iterator.10", align 8
  %8 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %6, align 8
  %9 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %7, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %1) #3
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %8, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %2) #3
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(%"class.std::deque"* %9, %"struct.std::_Deque_iterator.10"* %7, %"struct.std::_Deque_iterator.10"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE5beginEv(%"struct.std::_Deque_iterator.10"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.430
  %6 = load i32, i32* @y.431
  %7 = add i32 %5, 235009621
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 235009621
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 916368525, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 916368525, label %19
    i32 -1248882479, label %27
    i32 -388259045, label %48
    i32 336385643, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1248882479, i32 336385643
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %31, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %32) #3
  %33 = load i32, i32* @x.430
  %34 = load i32, i32* @y.431
  %35 = sub i32 %33, 1823106005
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1823106005
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -388259045, i32 336385643
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %50, align 8
  %51 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  %52 = bitcast %"class.std::deque"* %51 to %"class.std::_Deque_base"*
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %53, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %54) #3
  store i32 -1248882479, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE3endEv(%"struct.std::_Deque_iterator.10"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.432
  %6 = load i32, i32* @y.433
  %7 = add i32 %5, 2069278037
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2069278037
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -164798967, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -164798967, label %19
    i32 -2033750407, label %39
    i32 42726125, label %72
    i32 2029068595, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2033750407, i32 2029068595
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %40, align 8
  %41 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %43, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %44) #3
  %45 = load i32, i32* @x.432
  %46 = load i32, i32* @y.433
  %47 = add i32 %45, -264128935
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -264128935
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 42726125, i32 2029068595
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %74, align 8
  %75 = load %"class.std::deque"*, %"class.std::deque"** %74, align 8
  %76 = bitcast %"class.std::deque"* %75 to %"class.std::_Deque_base"*
  %77 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %77, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_EC2ERKS5_(%"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %78) #3
  store i32 -2033750407, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(%"class.std::deque"*, %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*) #0 comdat align 2 {
  %4 = alloca %"class.std::deque"*
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  store %"class.std::deque"* %7, %"class.std::deque"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %1, i32 0, i32 3
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %9, i64 1
  store %"class.std::deque.8"** %10, %"class.std::deque.8"*** %6, align 8
  %11 = alloca i32
  store i32 -346378694, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %65
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -346378694, label %15
    i32 1964349546, label %21
    i32 180416107, label %31
    i32 66381251, label %34
    i32 2039569111, label %41
    i32 239228063, label %56
    i32 -199045630, label %64
  ]

; <label>:14:                                     ; preds = %12
  br label %65

; <label>:15:                                     ; preds = %12
  %16 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %2, i32 0, i32 3
  %18 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  %19 = icmp ult %"class.std::deque.8"** %16, %18
  %20 = select i1 %19, i32 1964349546, i32 66381251
  store i32 %20, i32* %11
  br label %65

; <label>:21:                                     ; preds = %12
  %22 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %23 = load %"class.std::deque.8"*, %"class.std::deque.8"** %22, align 8
  %24 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %25 = load %"class.std::deque.8"*, %"class.std::deque.8"** %24, align 8
  %26 = call i64 @_ZNSt5dequeIS_IiSaIiEESaIS1_EE14_S_buffer_sizeEv() #3
  %27 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %25, i64 %26
  %28 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #3
  call void @_ZSt8_DestroyIPSt5dequeIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::deque.8"* %23, %"class.std::deque.8"* %27, %"class.std::allocator.5"* dereferenceable(1) %30)
  store i32 180416107, i32* %11
  br label %65

; <label>:31:                                     ; preds = %12
  %32 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %33 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %32, i32 1
  store %"class.std::deque.8"** %33, %"class.std::deque.8"*** %6, align 8
  store i32 -346378694, i32* %11
  br label %65

; <label>:34:                                     ; preds = %12
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %1, i32 0, i32 3
  %36 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %2, i32 0, i32 3
  %38 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %37, align 8
  %39 = icmp ne %"class.std::deque.8"** %36, %38
  %40 = select i1 %39, i32 2039569111, i32 239228063
  store i32 %40, i32* %11
  br label %65

; <label>:41:                                     ; preds = %12
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %1, i32 0, i32 0
  %43 = load %"class.std::deque.8"*, %"class.std::deque.8"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %1, i32 0, i32 2
  %45 = load %"class.std::deque.8"*, %"class.std::deque.8"** %44, align 8
  %46 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %47 = bitcast %"class.std::deque"* %46 to %"class.std::_Deque_base"*
  %48 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %47) #3
  call void @_ZSt8_DestroyIPSt5dequeIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::deque.8"* %43, %"class.std::deque.8"* %45, %"class.std::allocator.5"* dereferenceable(1) %48)
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %2, i32 0, i32 1
  %50 = load %"class.std::deque.8"*, %"class.std::deque.8"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %2, i32 0, i32 0
  %52 = load %"class.std::deque.8"*, %"class.std::deque.8"** %51, align 8
  %53 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %54 = bitcast %"class.std::deque"* %53 to %"class.std::_Deque_base"*
  %55 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %54) #3
  call void @_ZSt8_DestroyIPSt5dequeIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::deque.8"* %50, %"class.std::deque.8"* %52, %"class.std::allocator.5"* dereferenceable(1) %55)
  store i32 -199045630, i32* %11
  br label %65

; <label>:56:                                     ; preds = %12
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %1, i32 0, i32 0
  %58 = load %"class.std::deque.8"*, %"class.std::deque.8"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %2, i32 0, i32 0
  %60 = load %"class.std::deque.8"*, %"class.std::deque.8"** %59, align 8
  %61 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %62 = bitcast %"class.std::deque"* %61 to %"class.std::_Deque_base"*
  %63 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %62) #3
  call void @_ZSt8_DestroyIPSt5dequeIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::deque.8"* %58, %"class.std::deque.8"* %60, %"class.std::allocator.5"* dereferenceable(1) %63)
  store i32 -199045630, i32* %11
  br label %65

; <label>:64:                                     ; preds = %12
  ret void

; <label>:65:                                     ; preds = %56, %41, %34, %31, %21, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5dequeIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::deque.8"*, %"class.std::deque.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::deque.8"*, align 8
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %4, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %8 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  call void @_ZSt8_DestroyIPSt5dequeIiSaIiEEEvT_S4_(%"class.std::deque.8"* %7, %"class.std::deque.8"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator"* noalias sret, %"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %3, align 8
  %4 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator"* sret %0, %"class.std::allocator"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque.8"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.440
  %6 = load i32, i32* @y.441
  %7 = add i32 %5, 1917017620
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1917017620
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1132397987, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1132397987, label %19
    i32 1446442590, label %39
    i32 -1659989135, label %76
    i32 1419469906, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1446442590, i32 1419469906
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %40, align 8
  %41 = load %"class.std::deque.8"*, %"class.std::deque.8"** %40, align 8
  %42 = bitcast %"class.std::deque.8"* %41 to %"class.std::_Deque_base.9"*
  %43 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = bitcast %"class.std::deque.8"* %41 to %"class.std::_Deque_base.9"*
  %46 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 2
  %48 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %44, %"struct.std::_Deque_iterator"* dereferenceable(32) %47) #3
  store i64 %48, i64* %2
  %49 = load i32, i32* @x.440
  %50 = load i32, i32* @y.441
  %51 = sub i32 %49, -1910271445
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1910271445
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1659989135, i32 1419469906
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  %77 = load volatile i64, i64* %2
  ret i64 %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %79, align 8
  %80 = load %"class.std::deque.8"*, %"class.std::deque.8"** %79, align 8
  %81 = bitcast %"class.std::deque.8"* %80 to %"class.std::_Deque_base.9"*
  %82 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = bitcast %"class.std::deque.8"* %80 to %"class.std::_Deque_base.9"*
  %85 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %85, i32 0, i32 2
  %87 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %83, %"struct.std::_Deque_iterator"* dereferenceable(32) %86) #3
  store i32 1446442590, i32* %15
  br label %88

; <label>:88:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_m(%"class.std::_Deque_base.9"*, %"class.std::allocator"* dereferenceable(1), i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base.9"*, align 8
  %5 = alloca %"class.std::allocator"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %4, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %4, align 8
  %10 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %5, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.9"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEiET0_T_S9_S8_RSaIT1_E(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.444
  %9 = load i32, i32* @y.445
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1171727611, i32* %17
  br label %18

; <label>:18:                                     ; preds = %5, %63
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1171727611, label %21
    i32 485815874, label %29
    i32 -1831283229, label %53
    i32 -1666253608, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %63

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 485815874, i32 -1666253608
  store i32 %28, i32* %17
  br label %63

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::allocator"*, align 8
  %31 = alloca %"struct.std::_Deque_iterator.19", align 8
  %32 = alloca %"struct.std::_Deque_iterator.19", align 8
  %33 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator"* %4, %"class.std::allocator"** %30, align 8
  %34 = bitcast %"struct.std::_Deque_iterator.19"* %31 to i8*
  %35 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 32, i32 8, i1 false)
  %36 = bitcast %"struct.std::_Deque_iterator.19"* %32 to i8*
  %37 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %33, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt18uninitialized_copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %31, %"struct.std::_Deque_iterator.19"* byval align 8 %32, %"struct.std::_Deque_iterator"* %33)
  %38 = load i32, i32* @x.444
  %39 = load i32, i32* @y.445
  %40 = add i32 %38, -1602132658
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1602132658
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1831283229, i32 -1666253608
  store i32 %52, i32* %17
  br label %63

; <label>:53:                                     ; preds = %18
  ret void

; <label>:54:                                     ; preds = %18
  %55 = alloca %"class.std::allocator"*, align 8
  %56 = alloca %"struct.std::_Deque_iterator.19", align 8
  %57 = alloca %"struct.std::_Deque_iterator.19", align 8
  %58 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator"* %4, %"class.std::allocator"** %55, align 8
  %59 = bitcast %"struct.std::_Deque_iterator.19"* %56 to i8*
  %60 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 32, i32 8, i1 false)
  %61 = bitcast %"struct.std::_Deque_iterator.19"* %57 to i8*
  %62 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %58, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt18uninitialized_copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %56, %"struct.std::_Deque_iterator.19"* byval align 8 %57, %"struct.std::_Deque_iterator"* %58)
  store i32 485815874, i32* %17
  br label %63

; <label>:63:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.19"* noalias sret, %"class.std::deque.8"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.446
  %6 = load i32, i32* @y.447
  %7 = add i32 %5, 779147391
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 779147391
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 413852947, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 413852947, label %19
    i32 -254190420, label %27
    i32 -1660341729, label %60
    i32 1914055447, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -254190420, i32 1914055447
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %28, align 8
  %29 = load %"class.std::deque.8"*, %"class.std::deque.8"** %28, align 8
  %30 = bitcast %"class.std::deque.8"* %29 to %"class.std::_Deque_base.9"*
  %31 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load i32, i32* @x.446
  %34 = load i32, i32* @y.447
  %35 = sub i32 %33, 971245751
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 971245751
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1660341729, i32 1914055447
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %62, align 8
  %63 = load %"class.std::deque.8"*, %"class.std::deque.8"** %62, align 8
  %64 = bitcast %"class.std::deque.8"* %63 to %"class.std::_Deque_base.9"*
  %65 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %65, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %66) #3
  store i32 -254190420, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.19"* noalias sret, %"class.std::deque.8"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %3, align 8
  %4 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %5 = bitcast %"class.std::deque.8"* %4 to %"class.std::_Deque_base.9"*
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator"* noalias sret, %"class.std::allocator"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %3, align 8
  %4 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %0, %"class.std::allocator"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.452
  %6 = load i32, i32* @y.453
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1557995378, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1557995378, label %18
    i32 -186936717, label %38
    i32 -657491414, label %59
    i32 1049684912, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -186936717, i32 1049684912
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator"*, align 8
  %40 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %39, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %40, align 8
  %41 = load %"class.std::allocator"*, %"class.std::allocator"** %39, align 8
  %42 = bitcast %"class.std::allocator"* %41 to %"class.__gnu_cxx::new_allocator"*
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %44 = bitcast %"class.std::allocator"* %43 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %42, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.452
  %46 = load i32, i32* @y.453
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -657491414, i32 1049684912
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator"*, align 8
  %62 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %61, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %62, align 8
  %63 = load %"class.std::allocator"*, %"class.std::allocator"** %61, align 8
  %64 = bitcast %"class.std::allocator"* %63 to %"class.__gnu_cxx::new_allocator"*
  %65 = load %"class.std::allocator"*, %"class.std::allocator"** %62, align 8
  %66 = bitcast %"class.std::allocator"* %65 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %64, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %66) #3
  store i32 -186936717, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.454
  %7 = load i32, i32* @y.455
  %8 = add i32 %6, -1751682873
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1751682873
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 34142612, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %370
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 34142612, label %20
    i32 -845026930, label %40
    i32 1579170545, label %123
    i32 -1229023883, label %125
  ]

; <label>:19:                                     ; preds = %17
  br label %370

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -845026930, i32 -1229023883
  store i32 %39, i32* %16
  br label %370

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  %42 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %41, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %42, align 8
  %43 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 3
  %46 = load i32**, i32*** %45, align 8
  %47 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %42, align 8
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 3
  %49 = load i32**, i32*** %48, align 8
  %50 = ptrtoint i32** %46 to i64
  %51 = ptrtoint i32** %49 to i64
  %52 = add i64 %50, 3662642904521087758
  %53 = sub i64 %52, %51
  %54 = sub i64 %53, 3662642904521087758
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 8
  %57 = sub i64 %56, -7523828517442141941
  %58 = sub i64 %57, 1
  %59 = add i64 %58, -7523828517442141941
  %60 = sub nsw i64 %56, 1
  %61 = mul nsw i64 %43, %59
  %62 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %63 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %62, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %66 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %65, i32 0, i32 1
  %67 = load i32*, i32** %66, align 8
  %68 = ptrtoint i32* %64 to i64
  %69 = ptrtoint i32* %67 to i64
  %70 = add i64 %68, 164264107808997016
  %71 = sub i64 %70, %69
  %72 = sub i64 %71, 164264107808997016
  %73 = sub i64 %68, %69
  %74 = sdiv exact i64 %72, 4
  %75 = sub i64 0, %74
  %76 = sub i64 %61, %75
  %77 = add nsw i64 %61, %74
  %78 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %42, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 2
  %80 = load i32*, i32** %79, align 8
  %81 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %42, align 8
  %82 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %81, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = ptrtoint i32* %80 to i64
  %85 = ptrtoint i32* %83 to i64
  %86 = sub i64 %84, -7256197526839757069
  %87 = sub i64 %86, %85
  %88 = add i64 %87, -7256197526839757069
  %89 = sub i64 %84, %85
  %90 = sdiv exact i64 %88, 4
  %91 = sub i64 0, %76
  %92 = sub i64 0, %90
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add nsw i64 %76, %90
  store i64 %94, i64* %3
  %96 = load i32, i32* @x.454
  %97 = load i32, i32* @y.455
  %98 = sub i32 %96, -1620756454
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -1620756454
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 1579170545, i32 -1229023883
  store i32 %122, i32* %16
  br label %370

; <label>:123:                                    ; preds = %17
  %124 = load volatile i64, i64* %3
  ret i64 %124

; <label>:125:                                    ; preds = %17
  %126 = alloca %"struct.std::_Deque_iterator"*, align 8
  %127 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %126, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %127, align 8
  %128 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %129 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %126, align 8
  %130 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %129, i32 0, i32 3
  %131 = load i32**, i32*** %130, align 8
  %132 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %127, align 8
  %133 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %132, i32 0, i32 3
  %134 = load i32**, i32*** %133, align 8
  %135 = ptrtoint i32** %131 to i64
  %136 = ptrtoint i32** %134 to i64
  %137 = shl i64 %135, %136
  %138 = sub i64 %135, -5854087787228822071
  %139 = sub i64 %138, %136
  %140 = add i64 %139, -5854087787228822071
  %141 = sub i64 %135, %136
  %142 = mul i64 %140, %136
  %143 = sub i64 0, 2087269963018448359
  %144 = sub i64 %143, %135
  %145 = add i64 %144, 2087269963018448359
  %146 = sub i64 0, %135
  %147 = sub i64 0, %145
  %148 = sub i64 0, %136
  %149 = add i64 %147, %148
  %150 = sub i64 0, %149
  %151 = add i64 %145, %136
  %152 = sub i64 %135, -4542706026598594340
  %153 = sub i64 %152, %136
  %154 = add i64 %153, -4542706026598594340
  %155 = sub i64 %135, %136
  %156 = sub i64 %154, 8640145498414715545
  %157 = sub i64 %156, 8
  %158 = add i64 %157, 8640145498414715545
  %159 = sub i64 %154, 8
  %160 = mul i64 %158, 8
  %161 = sdiv exact i64 %154, 8
  %162 = shl i64 %161, 1
  %163 = sub i64 0, %161
  %164 = add i64 0, %163
  %165 = sub i64 0, %161
  %166 = sub i64 0, 1
  %167 = sub i64 %164, %166
  %168 = add i64 %164, 1
  %169 = shl i64 %161, 1
  %170 = sub i64 %161, 8948923245888092178
  %171 = sub i64 %170, 1
  %172 = add i64 %171, 8948923245888092178
  %173 = sub i64 %161, 1
  %174 = mul i64 %172, 1
  %175 = add i64 0, -2284039388985645184
  %176 = sub i64 %175, %161
  %177 = sub i64 %176, -2284039388985645184
  %178 = sub i64 0, %161
  %179 = sub i64 %177, -5669776364530533476
  %180 = add i64 %179, 1
  %181 = add i64 %180, -5669776364530533476
  %182 = add i64 %177, 1
  %183 = sub i64 0, 1
  %184 = add i64 %161, %183
  %185 = sub nsw i64 %161, 1
  %186 = sub i64 %128, 8733813697881987642
  %187 = sub i64 %186, %184
  %188 = add i64 %187, 8733813697881987642
  %189 = sub i64 %128, %184
  %190 = mul i64 %188, %184
  %191 = sub i64 0, %184
  %192 = add i64 %128, %191
  %193 = sub i64 %128, %184
  %194 = mul i64 %192, %184
  %195 = add i64 0, 5506076486882927843
  %196 = sub i64 %195, %128
  %197 = sub i64 %196, 5506076486882927843
  %198 = sub i64 0, %128
  %199 = sub i64 0, %197
  %200 = sub i64 0, %184
  %201 = add i64 %199, %200
  %202 = sub i64 0, %201
  %203 = add i64 %197, %184
  %204 = sub i64 %128, 8034198478167081025
  %205 = sub i64 %204, %184
  %206 = add i64 %205, 8034198478167081025
  %207 = sub i64 %128, %184
  %208 = mul i64 %206, %184
  %209 = add i64 %128, 6048900500820138894
  %210 = sub i64 %209, %184
  %211 = sub i64 %210, 6048900500820138894
  %212 = sub i64 %128, %184
  %213 = mul i64 %211, %184
  %214 = mul nsw i64 %128, %184
  %215 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %126, align 8
  %216 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %215, i32 0, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %126, align 8
  %219 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %218, i32 0, i32 1
  %220 = load i32*, i32** %219, align 8
  %221 = ptrtoint i32* %217 to i64
  %222 = ptrtoint i32* %220 to i64
  %223 = shl i64 %221, %222
  %224 = sub i64 0, %221
  %225 = add i64 0, %224
  %226 = sub i64 0, %221
  %227 = sub i64 0, %225
  %228 = sub i64 0, %222
  %229 = add i64 %227, %228
  %230 = sub i64 0, %229
  %231 = add i64 %225, %222
  %232 = sub i64 %221, 4063338089095273002
  %233 = sub i64 %232, %222
  %234 = add i64 %233, 4063338089095273002
  %235 = sub i64 %221, %222
  %236 = add i64 %234, -7246544981232445335
  %237 = sub i64 %236, 4
  %238 = sub i64 %237, -7246544981232445335
  %239 = sub i64 %234, 4
  %240 = mul i64 %238, 4
  %241 = shl i64 %234, 4
  %242 = sub i64 %234, 8971925909259732428
  %243 = sub i64 %242, 4
  %244 = add i64 %243, 8971925909259732428
  %245 = sub i64 %234, 4
  %246 = mul i64 %244, 4
  %247 = shl i64 %234, 4
  %248 = sub i64 0, -6474037775882003378
  %249 = sub i64 %248, %234
  %250 = add i64 %249, -6474037775882003378
  %251 = sub i64 0, %234
  %252 = sub i64 0, %250
  %253 = sub i64 0, 4
  %254 = add i64 %252, %253
  %255 = sub i64 0, %254
  %256 = add i64 %250, 4
  %257 = sdiv exact i64 %234, 4
  %258 = add i64 0, 6502440386248094928
  %259 = sub i64 %258, %214
  %260 = sub i64 %259, 6502440386248094928
  %261 = sub i64 0, %214
  %262 = add i64 %260, 3956093683576189995
  %263 = add i64 %262, %257
  %264 = sub i64 %263, 3956093683576189995
  %265 = add i64 %260, %257
  %266 = add i64 %214, -8766626997775100639
  %267 = add i64 %266, %257
  %268 = sub i64 %267, -8766626997775100639
  %269 = add nsw i64 %214, %257
  %270 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %127, align 8
  %271 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %270, i32 0, i32 2
  %272 = load i32*, i32** %271, align 8
  %273 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %127, align 8
  %274 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %273, i32 0, i32 0
  %275 = load i32*, i32** %274, align 8
  %276 = ptrtoint i32* %272 to i64
  %277 = ptrtoint i32* %275 to i64
  %278 = sub i64 %276, -1967211434077645080
  %279 = sub i64 %278, %277
  %280 = add i64 %279, -1967211434077645080
  %281 = sub i64 %276, %277
  %282 = mul i64 %280, %277
  %283 = sub i64 0, %277
  %284 = add i64 %276, %283
  %285 = sub i64 %276, %277
  %286 = mul i64 %284, %277
  %287 = shl i64 %276, %277
  %288 = shl i64 %276, %277
  %289 = shl i64 %276, %277
  %290 = add i64 %276, -3397946725995078627
  %291 = sub i64 %290, %277
  %292 = sub i64 %291, -3397946725995078627
  %293 = sub i64 %276, %277
  %294 = sub i64 0, -8322133680648525188
  %295 = sub i64 %294, %292
  %296 = add i64 %295, -8322133680648525188
  %297 = sub i64 0, %292
  %298 = add i64 %296, 6312329212530214344
  %299 = add i64 %298, 4
  %300 = sub i64 %299, 6312329212530214344
  %301 = add i64 %296, 4
  %302 = shl i64 %292, 4
  %303 = sub i64 %292, -583881271021381758
  %304 = sub i64 %303, 4
  %305 = add i64 %304, -583881271021381758
  %306 = sub i64 %292, 4
  %307 = mul i64 %305, 4
  %308 = sub i64 %292, -4497888769302588736
  %309 = sub i64 %308, 4
  %310 = add i64 %309, -4497888769302588736
  %311 = sub i64 %292, 4
  %312 = mul i64 %310, 4
  %313 = sdiv exact i64 %292, 4
  %314 = sub i64 0, %268
  %315 = add i64 0, %314
  %316 = sub i64 0, %268
  %317 = sub i64 %315, 861555517276871637
  %318 = add i64 %317, %313
  %319 = add i64 %318, 861555517276871637
  %320 = add i64 %315, %313
  %321 = sub i64 0, %268
  %322 = add i64 0, %321
  %323 = sub i64 0, %268
  %324 = sub i64 0, %322
  %325 = sub i64 0, %313
  %326 = add i64 %324, %325
  %327 = sub i64 0, %326
  %328 = add i64 %322, %313
  %329 = sub i64 0, %268
  %330 = add i64 0, %329
  %331 = sub i64 0, %268
  %332 = sub i64 0, %330
  %333 = sub i64 0, %313
  %334 = add i64 %332, %333
  %335 = sub i64 0, %334
  %336 = add i64 %330, %313
  %337 = add i64 %268, 7727806498861023962
  %338 = sub i64 %337, %313
  %339 = sub i64 %338, 7727806498861023962
  %340 = sub i64 %268, %313
  %341 = mul i64 %339, %313
  %342 = shl i64 %268, %313
  %343 = sub i64 0, %313
  %344 = add i64 %268, %343
  %345 = sub i64 %268, %313
  %346 = mul i64 %344, %313
  %347 = sub i64 0, -4361725804250955662
  %348 = sub i64 %347, %268
  %349 = add i64 %348, -4361725804250955662
  %350 = sub i64 0, %268
  %351 = add i64 %349, -6602696032724765482
  %352 = add i64 %351, %313
  %353 = sub i64 %352, -6602696032724765482
  %354 = add i64 %349, %313
  %355 = sub i64 0, %268
  %356 = add i64 0, %355
  %357 = sub i64 0, %268
  %358 = sub i64 0, %356
  %359 = sub i64 0, %313
  %360 = add i64 %358, %359
  %361 = sub i64 0, %360
  %362 = add i64 %356, %313
  %363 = sub i64 0, %313
  %364 = add i64 %268, %363
  %365 = sub i64 %268, %313
  %366 = mul i64 %364, %313
  %367 = sub i64 0, %313
  %368 = sub i64 %268, %367
  %369 = add nsw i64 %268, %313
  store i32 -845026930, i32* %16
  br label %370

; <label>:370:                                    ; preds = %125, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt18uninitialized_copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator"*) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.456
  %8 = load i32, i32* @y.457
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1705661111, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %62
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1705661111, label %20
    i32 336558379, label %28
    i32 602358138, label %52
    i32 -1632388307, label %53
  ]

; <label>:19:                                     ; preds = %17
  br label %62

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 336558379, i32 -1632388307
  store i32 %27, i32* %16
  br label %62

; <label>:28:                                     ; preds = %17
  %29 = alloca i8, align 1
  %30 = alloca %"struct.std::_Deque_iterator.19", align 8
  %31 = alloca %"struct.std::_Deque_iterator.19", align 8
  %32 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 1, i8* %29, align 1
  %33 = bitcast %"struct.std::_Deque_iterator.19"* %30 to i8*
  %34 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 32, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Deque_iterator.19"* %31 to i8*
  %36 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %32, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIiRKiPS3_ES2_IiRiPiEEET0_T_SB_SA_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %30, %"struct.std::_Deque_iterator.19"* byval align 8 %31, %"struct.std::_Deque_iterator"* %32)
  %37 = load i32, i32* @x.456
  %38 = load i32, i32* @y.457
  %39 = add i32 %37, -373336740
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -373336740
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 602358138, i32 -1632388307
  store i32 %51, i32* %16
  br label %62

; <label>:52:                                     ; preds = %17
  ret void

; <label>:53:                                     ; preds = %17
  %54 = alloca i8, align 1
  %55 = alloca %"struct.std::_Deque_iterator.19", align 8
  %56 = alloca %"struct.std::_Deque_iterator.19", align 8
  %57 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 1, i8* %54, align 1
  %58 = bitcast %"struct.std::_Deque_iterator.19"* %55 to i8*
  %59 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 32, i32 8, i1 false)
  %60 = bitcast %"struct.std::_Deque_iterator.19"* %56 to i8*
  %61 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %57, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIiRKiPS3_ES2_IiRiPiEEET0_T_SB_SA_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %55, %"struct.std::_Deque_iterator.19"* byval align 8 %56, %"struct.std::_Deque_iterator"* %57)
  store i32 336558379, i32* %16
  br label %62

; <label>:62:                                     ; preds = %53, %28, %20, %19
  br label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIiRKiPS3_ES2_IiRiPiEEET0_T_SB_SA_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.458
  %8 = load i32, i32* @y.459
  %9 = sub i32 %7, 497655792
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 497655792
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1720885227, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %72
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1720885227, label %21
    i32 845412786, label %41
    i32 1919664468, label %63
    i32 -1845855814, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %72

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 845412786, i32 -1845855814
  store i32 %40, i32* %17
  br label %72

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::_Deque_iterator.19", align 8
  %43 = alloca %"struct.std::_Deque_iterator.19", align 8
  %44 = alloca %"struct.std::_Deque_iterator", align 8
  %45 = bitcast %"struct.std::_Deque_iterator.19"* %42 to i8*
  %46 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 32, i32 8, i1 false)
  %47 = bitcast %"struct.std::_Deque_iterator.19"* %43 to i8*
  %48 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %44, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %42, %"struct.std::_Deque_iterator.19"* byval align 8 %43, %"struct.std::_Deque_iterator"* %44)
  %49 = load i32, i32* @x.458
  %50 = load i32, i32* @y.459
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1919664468, i32 -1845855814
  store i32 %62, i32* %17
  br label %72

; <label>:63:                                     ; preds = %18
  ret void

; <label>:64:                                     ; preds = %18
  %65 = alloca %"struct.std::_Deque_iterator.19", align 8
  %66 = alloca %"struct.std::_Deque_iterator.19", align 8
  %67 = alloca %"struct.std::_Deque_iterator", align 8
  %68 = bitcast %"struct.std::_Deque_iterator.19"* %65 to i8*
  %69 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 32, i32 8, i1 false)
  %70 = bitcast %"struct.std::_Deque_iterator.19"* %66 to i8*
  %71 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %67, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %65, %"struct.std::_Deque_iterator.19"* byval align 8 %66, %"struct.std::_Deque_iterator"* %67)
  store i32 845412786, i32* %17
  br label %72

; <label>:72:                                     ; preds = %64, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4copyISt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET0_T_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator"*) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.460
  %8 = load i32, i32* @y.461
  %9 = sub i32 %7, 970435865
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 970435865
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 442878209, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %77
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 442878209, label %21
    i32 238592356, label %29
    i32 395599366, label %66
    i32 1226964815, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %77

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 238592356, i32 1226964815
  store i32 %28, i32* %17
  br label %77

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::_Deque_iterator.19", align 8
  %31 = alloca %"struct.std::_Deque_iterator.19", align 8
  %32 = alloca %"struct.std::_Deque_iterator.19", align 8
  %33 = alloca %"struct.std::_Deque_iterator.19", align 8
  %34 = alloca %"struct.std::_Deque_iterator", align 8
  %35 = bitcast %"struct.std::_Deque_iterator.19"* %31 to i8*
  %36 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 32, i32 8, i1 false)
  call void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %30, %"struct.std::_Deque_iterator.19"* byval align 8 %31)
  %37 = bitcast %"struct.std::_Deque_iterator.19"* %33 to i8*
  %38 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 32, i32 8, i1 false)
  call void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %32, %"struct.std::_Deque_iterator.19"* byval align 8 %33)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %34, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %30, %"struct.std::_Deque_iterator.19"* byval align 8 %32, %"struct.std::_Deque_iterator"* %34)
  %39 = load i32, i32* @x.460
  %40 = load i32, i32* @y.461
  %41 = add i32 %39, -1308937662
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1308937662
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 395599366, i32 1226964815
  store i32 %65, i32* %17
  br label %77

; <label>:66:                                     ; preds = %18
  ret void

; <label>:67:                                     ; preds = %18
  %68 = alloca %"struct.std::_Deque_iterator.19", align 8
  %69 = alloca %"struct.std::_Deque_iterator.19", align 8
  %70 = alloca %"struct.std::_Deque_iterator.19", align 8
  %71 = alloca %"struct.std::_Deque_iterator.19", align 8
  %72 = alloca %"struct.std::_Deque_iterator", align 8
  %73 = bitcast %"struct.std::_Deque_iterator.19"* %69 to i8*
  %74 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 32, i32 8, i1 false)
  call void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %68, %"struct.std::_Deque_iterator.19"* byval align 8 %69)
  %75 = bitcast %"struct.std::_Deque_iterator.19"* %71 to i8*
  %76 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 32, i32 8, i1 false)
  call void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %70, %"struct.std::_Deque_iterator.19"* byval align 8 %71)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %72, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %68, %"struct.std::_Deque_iterator.19"* byval align 8 %70, %"struct.std::_Deque_iterator"* %72)
  store i32 238592356, i32* %17
  br label %77

; <label>:77:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__copy_move_a2ILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator"*) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.462
  %8 = load i32, i32* @y.463
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -299556981, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -299556981, label %20
    i32 1951698086, label %28
    i32 -1503692283, label %53
    i32 -367407672, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1951698086, i32 -367407672
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Deque_iterator.19", align 8
  %30 = alloca %"struct.std::_Deque_iterator.19", align 8
  %31 = alloca %"struct.std::_Deque_iterator.19", align 8
  %32 = alloca %"struct.std::_Deque_iterator.19", align 8
  %33 = alloca %"struct.std::_Deque_iterator", align 8
  %34 = alloca %"struct.std::_Deque_iterator", align 8
  %35 = bitcast %"struct.std::_Deque_iterator.19"* %30 to i8*
  %36 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 32, i32 8, i1 false)
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %29, %"struct.std::_Deque_iterator.19"* byval align 8 %30)
  %37 = bitcast %"struct.std::_Deque_iterator.19"* %32 to i8*
  %38 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 32, i32 8, i1 false)
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %31, %"struct.std::_Deque_iterator.19"* byval align 8 %32)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %34, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %33, %"struct.std::_Deque_iterator"* %34)
  call void @_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %29, %"struct.std::_Deque_iterator.19"* byval align 8 %31, %"struct.std::_Deque_iterator"* %33)
  %39 = load i32, i32* @x.462
  %40 = load i32, i32* @y.463
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1503692283, i32 -367407672
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  ret void

; <label>:54:                                     ; preds = %17
  %55 = alloca %"struct.std::_Deque_iterator.19", align 8
  %56 = alloca %"struct.std::_Deque_iterator.19", align 8
  %57 = alloca %"struct.std::_Deque_iterator.19", align 8
  %58 = alloca %"struct.std::_Deque_iterator.19", align 8
  %59 = alloca %"struct.std::_Deque_iterator", align 8
  %60 = alloca %"struct.std::_Deque_iterator", align 8
  %61 = bitcast %"struct.std::_Deque_iterator.19"* %56 to i8*
  %62 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 32, i32 8, i1 false)
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %55, %"struct.std::_Deque_iterator.19"* byval align 8 %56)
  %63 = bitcast %"struct.std::_Deque_iterator.19"* %58 to i8*
  %64 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 32, i32 8, i1 false)
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* sret %57, %"struct.std::_Deque_iterator.19"* byval align 8 %58)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %60, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* sret %59, %"struct.std::_Deque_iterator"* %60)
  call void @_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %55, %"struct.std::_Deque_iterator.19"* byval align 8 %57, %"struct.std::_Deque_iterator"* %59)
  store i32 1951698086, i32* %16
  br label %65

; <label>:65:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt12__miter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.19", align 8
  %4 = bitcast %"struct.std::_Deque_iterator.19"* %3 to i8*
  %5 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 32, i32 8, i1 false)
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.19"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %3)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIiRKiPS1_ES0_IiRiPiEET1_T0_S9_S8_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator"*) #0 comdat {
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::_Deque_iterator.19", align 8
  %7 = alloca %"struct.std::_Deque_iterator.19", align 8
  %8 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 0, i8* %5, align 1
  %9 = bitcast %"struct.std::_Deque_iterator.19"* %6 to i8*
  %10 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 32, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Deque_iterator.19"* %7 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %8, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRKiPS4_ES3_IiRiPiEEET0_T_SC_SB_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %6, %"struct.std::_Deque_iterator.19"* byval align 8 %7, %"struct.std::_Deque_iterator"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt12__niter_baseISt15_Deque_iteratorIiRKiPS1_EENSt11_Niter_baseIT_E13iterator_typeES6_(%"struct.std::_Deque_iterator.19"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.468
  %6 = load i32, i32* @y.469
  %7 = sub i32 %5, 116867601
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 116867601
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 988310068, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 988310068, label %19
    i32 525393684, label %39
    i32 1969390190, label %69
    i32 1357166062, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 525393684, i32 1357166062
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator.19", align 8
  %41 = bitcast %"struct.std::_Deque_iterator.19"* %40 to i8*
  %42 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 32, i32 8, i1 false)
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.19"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %40)
  %43 = load i32, i32* @x.468
  %44 = load i32, i32* @y.469
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1969390190, i32 1357166062
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca %"struct.std::_Deque_iterator.19", align 8
  %72 = bitcast %"struct.std::_Deque_iterator.19"* %71 to i8*
  %73 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 32, i32 8, i1 false)
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.19"* sret %0, %"struct.std::_Deque_iterator.19"* byval align 8 %71)
  store i32 525393684, i32* %15
  br label %74

; <label>:74:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt12__niter_baseISt15_Deque_iteratorIiRiPiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*) #0 comdat {
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #3
  call void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRiPiELb0EE7_S_baseES3_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator"* %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIiRKiPS4_ES3_IiRiPiEEET0_T_SC_SB_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator.19"* byval align 8, %"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.472
  %9 = load i32, i32* @y.473
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 483004038, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 483004038, label %21
    i32 -746475116, label %41
    i32 1637219466, label %71
    i32 -539153241, label %72
    i32 -1970875505, label %77
    i32 -833541356, label %83
    i32 677686816, label %91
    i32 -1283656746, label %92
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -746475116, i32 -1283656746
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca i64, align 8
  store i64* %42, i64** %5
  %43 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.19"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.19"* dereferenceable(32) %1) #3
  %44 = load volatile i64*, i64** %5
  store i64 %43, i64* %44, align 8
  %45 = load i32, i32* @x.472
  %46 = load i32, i32* @y.473
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1637219466, i32 -1283656746
  store i32 %70, i32* %17
  br label %95

; <label>:71:                                     ; preds = %18
  store i32 -539153241, i32* %17
  br label %95

; <label>:72:                                     ; preds = %18
  %73 = load volatile i64*, i64** %5
  %74 = load i64, i64* %73, align 8
  %75 = icmp sgt i64 %74, 0
  %76 = select i1 %75, i32 -1970875505, i32 677686816
  store i32 %76, i32* %17
  br label %95

; <label>:77:                                     ; preds = %18
  %78 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRKiPS0_EdeEv(%"struct.std::_Deque_iterator.19"* %1) #3
  %79 = load i32, i32* %78, align 4
  %80 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  store i32 %79, i32* %80, align 4
  %81 = call dereferenceable(32) %"struct.std::_Deque_iterator.19"* @_ZNSt15_Deque_iteratorIiRKiPS0_EppEv(%"struct.std::_Deque_iterator.19"* %1) #3
  %82 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"* %3) #3
  store i32 -833541356, i32* %17
  br label %95

; <label>:83:                                     ; preds = %18
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 2450734079748236250
  %87 = add i64 %86, -1
  %88 = sub i64 %87, 2450734079748236250
  %89 = add nsw i64 %85, -1
  %90 = load volatile i64*, i64** %5
  store i64 %88, i64* %90, align 8
  store i32 -539153241, i32* %17
  br label %95

; <label>:91:                                     ; preds = %18
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  ret void

; <label>:92:                                     ; preds = %18
  %93 = alloca i64, align 8
  %94 = call i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.19"* dereferenceable(32) %2, %"struct.std::_Deque_iterator.19"* dereferenceable(32) %1) #3
  store i64 %94, i64* %93, align 8
  store i32 -746475116, i32* %17
  br label %95

; <label>:95:                                     ; preds = %92, %83, %77, %72, %71, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiIiRKiPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator.19"* dereferenceable(32), %"struct.std::_Deque_iterator.19"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.19"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.19"*, align 8
  store %"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator.19"** %3, align 8
  store %"struct.std::_Deque_iterator.19"* %1, %"struct.std::_Deque_iterator.19"** %4, align 8
  %5 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #3
  %6 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %3, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %6, i32 0, i32 3
  %8 = load i32**, i32*** %7, align 8
  %9 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %9, i32 0, i32 3
  %11 = load i32**, i32*** %10, align 8
  %12 = ptrtoint i32** %8 to i64
  %13 = ptrtoint i32** %11 to i64
  %14 = sub i64 %12, -5860104429024983318
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -5860104429024983318
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  %19 = sub i64 %18, 3367816405620501650
  %20 = sub i64 %19, 1
  %21 = add i64 %20, 3367816405620501650
  %22 = sub nsw i64 %18, 1
  %23 = mul nsw i64 %5, %21
  %24 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %3, align 8
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %24, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %3, align 8
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %27, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  %30 = ptrtoint i32* %26 to i64
  %31 = ptrtoint i32* %29 to i64
  %32 = add i64 %30, -3399443969927027631
  %33 = sub i64 %32, %31
  %34 = sub i64 %33, -3399443969927027631
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 4
  %37 = sub i64 0, %36
  %38 = sub i64 %23, %37
  %39 = add nsw i64 %23, %36
  %40 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %40, i32 0, i32 2
  %42 = load i32*, i32** %41, align 8
  %43 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = ptrtoint i32* %42 to i64
  %47 = ptrtoint i32* %45 to i64
  %48 = add i64 %46, 3772031982553440101
  %49 = sub i64 %48, %47
  %50 = sub i64 %49, 3772031982553440101
  %51 = sub i64 %46, %47
  %52 = sdiv exact i64 %50, 4
  %53 = sub i64 0, %52
  %54 = sub i64 %38, %53
  %55 = add nsw i64 %38, %52
  ret i64 %54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRKiPS0_EdeEv(%"struct.std::_Deque_iterator.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator.19"*, align 8
  store %"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator.19"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator.19"* @_ZNSt15_Deque_iteratorIiRKiPS0_EppEv(%"struct.std::_Deque_iterator.19"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i32*
  %4 = alloca %"struct.std::_Deque_iterator.19"*
  %5 = alloca %"struct.std::_Deque_iterator.19"*, align 8
  store %"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator.19"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %5, align 8
  store %"struct.std::_Deque_iterator.19"* %6, %"struct.std::_Deque_iterator.19"** %4
  %7 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i32 1
  store i32* %10, i32** %8, align 8
  %11 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %3
  %14 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %14, i32 0, i32 2
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %2
  %17 = alloca i32
  store i32 -1417639401, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %39
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1417639401, label %21
    i32 1307600189, label %26
    i32 -1697205536, label %37
  ]

; <label>:20:                                     ; preds = %18
  br label %39

; <label>:21:                                     ; preds = %18
  %22 = load volatile i32*, i32** %3
  %23 = load volatile i32*, i32** %2
  %24 = icmp eq i32* %22, %23
  %25 = select i1 %24, i32 1307600189, i32 -1697205536
  store i32 %25, i32* %17
  br label %39

; <label>:26:                                     ; preds = %18
  %27 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %27, i32 0, i32 3
  %29 = load i32**, i32*** %28, align 8
  %30 = getelementptr inbounds i32*, i32** %29, i64 1
  %31 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  call void @_ZNSt15_Deque_iteratorIiRKiPS0_E11_M_set_nodeEPPi(%"struct.std::_Deque_iterator.19"* %31, i32** %30) #3
  %32 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %32, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %35, i32 0, i32 0
  store i32* %34, i32** %36, align 8
  store i32 -1697205536, i32* %17
  br label %39

; <label>:37:                                     ; preds = %18
  %38 = load volatile %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %4
  ret %"struct.std::_Deque_iterator.19"* %38

; <label>:39:                                     ; preds = %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEppEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i32*
  %4 = alloca %"struct.std::_Deque_iterator"*
  %5 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5, align 8
  store %"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"** %4
  %7 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i32 1
  store i32* %10, i32** %8, align 8
  %11 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %3
  %14 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 2
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %2
  %17 = alloca i32
  store i32 -342594007, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %148
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -342594007, label %21
    i32 759362969, label %26
    i32 811754416, label %42
    i32 1751474554, label %79
    i32 2048477965, label %80
    i32 604263411, label %107
    i32 1102961196, label %134
    i32 902805593, label %136
    i32 -482722506, label %147
  ]

; <label>:20:                                     ; preds = %18
  br label %148

; <label>:21:                                     ; preds = %18
  %22 = load volatile i32*, i32** %3
  %23 = load volatile i32*, i32** %2
  %24 = icmp eq i32* %22, %23
  %25 = select i1 %24, i32 759362969, i32 2048477965
  store i32 %25, i32* %17
  br label %148

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.482
  %28 = load i32, i32* @y.483
  %29 = sub i32 %27, -402090238
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -402090238
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 811754416, i32 902805593
  store i32 %41, i32* %17
  br label %148

; <label>:42:                                     ; preds = %18
  %43 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 3
  %45 = load i32**, i32*** %44, align 8
  %46 = getelementptr inbounds i32*, i32** %45, i64 1
  %47 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %47, i32** %46) #3
  %48 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 1
  %50 = load i32*, i32** %49, align 8
  %51 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 0
  store i32* %50, i32** %52, align 8
  %53 = load i32, i32* @x.482
  %54 = load i32, i32* @y.483
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1751474554, i32 902805593
  store i32 %78, i32* %17
  br label %148

; <label>:79:                                     ; preds = %18
  store i32 2048477965, i32* %17
  br label %148

; <label>:80:                                     ; preds = %18
  %81 = load i32, i32* @x.482
  %82 = load i32, i32* @y.483
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 604263411, i32 -482722506
  store i32 %106, i32* %17
  br label %148

; <label>:107:                                    ; preds = %18
  %108 = load i32, i32* @x.482
  %109 = load i32, i32* @y.483
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 1102961196, i32 -482722506
  store i32 %133, i32* %17
  br label %148

; <label>:134:                                    ; preds = %18
  %135 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  ret %"struct.std::_Deque_iterator"* %135

; <label>:136:                                    ; preds = %18
  %137 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %138 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %137, i32 0, i32 3
  %139 = load i32**, i32*** %138, align 8
  %140 = getelementptr inbounds i32*, i32** %139, i64 1
  %141 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %141, i32** %140) #3
  %142 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %143 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %142, i32 0, i32 1
  %144 = load i32*, i32** %143, align 8
  %145 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %146 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %145, i32 0, i32 0
  store i32* %144, i32** %146, align 8
  store i32 811754416, i32* %17
  br label %148

; <label>:147:                                    ; preds = %18
  store i32 604263411, i32* %17
  br label %148

; <label>:148:                                    ; preds = %147, %136, %107, %80, %79, %42, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.484
  %2 = load i32, i32* @y.485
  %3 = add i32 %1, -102718983
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, -102718983
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %65

; <label>:15:                                     ; preds = %0, %65
  %16 = load i32, i32* @x.484
  %17 = load i32, i32* @y.485
  %18 = add i32 %16, -520055843
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, -520055843
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %65

; <label>:30:                                     ; preds = %15
  %31 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %32 unwind label %62

; <label>:32:                                     ; preds = %30
  %33 = load i32, i32* @x.484
  %34 = load i32, i32* @y.485
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %66

; <label>:46:                                     ; preds = %32, %66
  %47 = load i32, i32* @x.484
  %48 = load i32, i32* @y.485
  %49 = sub i32 %47, -1133977686
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1133977686
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %66

; <label>:61:                                     ; preds = %46
  ret i64 %31

; <label>:62:                                     ; preds = %30
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #10
  unreachable

; <label>:65:                                     ; preds = %15, %0
  br label %15

; <label>:66:                                     ; preds = %46, %32
  br label %46
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRKiPS0_E11_M_set_nodeEPPi(%"struct.std::_Deque_iterator.19"*, i32**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.19"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator.19"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRKiPS0_E14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRKiPS1_ELb0EE7_S_baseES4_(%"struct.std::_Deque_iterator.19"* noalias sret, %"struct.std::_Deque_iterator.19"* byval align 8) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.488
  %6 = load i32, i32* @y.489
  %7 = sub i32 %5, 368764281
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 368764281
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1569846535, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %48
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1569846535, label %19
    i32 1505522363, label %27
    i32 1658493369, label %44
    i32 1859241098, label %45
  ]

; <label>:18:                                     ; preds = %16
  br label %48

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1505522363, i32 1859241098
  store i32 %26, i32* %15
  br label %48

; <label>:27:                                     ; preds = %16
  %28 = bitcast %"struct.std::_Deque_iterator.19"* %0 to i8*
  %29 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 32, i32 8, i1 false)
  %30 = load i32, i32* @x.488
  %31 = load i32, i32* @y.489
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1658493369, i32 1859241098
  store i32 %43, i32* %15
  br label %48

; <label>:44:                                     ; preds = %16
  ret void

; <label>:45:                                     ; preds = %16
  %46 = bitcast %"struct.std::_Deque_iterator.19"* %0 to i8*
  %47 = bitcast %"struct.std::_Deque_iterator.19"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 32, i32 8, i1 false)
  store i32 1505522363, i32* %15
  br label %48

; <label>:48:                                     ; preds = %45, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Iter_baseISt15_Deque_iteratorIiRiPiELb0EE7_S_baseES3_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRKiPS0_EC2ERKS_IiRiPiE(%"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.19"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator.19"* %0, %"struct.std::_Deque_iterator.19"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.19"*, %"struct.std::_Deque_iterator.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag(%"class.std::vector"*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.496
  %7 = load i32, i32* @y.497
  %8 = sub i32 %6, -1537142580
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1537142580
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1291773997, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %130
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1291773997, label %20
    i32 134590829, label %28
    i32 -2063376296, label %92
    i32 1353320410, label %93
  ]

; <label>:19:                                     ; preds = %17
  br label %130

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 134590829, i32 1353320410
  store i32 %27, i32* %16
  br label %130

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::forward_iterator_tag", align 1
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  %34 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = load i32*, i32** %32, align 8
  %37 = call i64 @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32* %35, i32* %36)
  store i64 %37, i64* %33, align 8
  %38 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %39 = load i64, i64* %33, align 8
  %40 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %38, i64 %39)
  %41 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 0
  store i32* %40, i32** %43, align 8
  %44 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = load i64, i64* %33, align 8
  %49 = getelementptr inbounds i32, i32* %47, i64 %48
  %50 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %51, i32 0, i32 2
  store i32* %49, i32** %52, align 8
  %53 = load i32*, i32** %31, align 8
  %54 = load i32*, i32** %32, align 8
  %55 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %56, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %60 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %59) #3
  %61 = call i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32* %53, i32* %54, i32* %58, %"class.std::allocator"* dereferenceable(1) %60)
  %62 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %63, i32 0, i32 1
  store i32* %61, i32** %64, align 8
  %65 = load i32, i32* @x.496
  %66 = load i32, i32* @y.497
  %67 = add i32 %65, 1375134373
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 1375134373
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 -2063376296, i32 1353320410
  store i32 %91, i32* %16
  br label %130

; <label>:92:                                     ; preds = %17
  ret void

; <label>:93:                                     ; preds = %17
  %94 = alloca %"struct.std::forward_iterator_tag", align 1
  %95 = alloca %"class.std::vector"*, align 8
  %96 = alloca i32*, align 8
  %97 = alloca i32*, align 8
  %98 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %95, align 8
  store i32* %1, i32** %96, align 8
  store i32* %2, i32** %97, align 8
  %99 = load %"class.std::vector"*, %"class.std::vector"** %95, align 8
  %100 = load i32*, i32** %96, align 8
  %101 = load i32*, i32** %97, align 8
  %102 = call i64 @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32* %100, i32* %101)
  store i64 %102, i64* %98, align 8
  %103 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %104 = load i64, i64* %98, align 8
  %105 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %103, i64 %104)
  %106 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %107 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %107, i32 0, i32 0
  store i32* %105, i32** %108, align 8
  %109 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %110, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = load i64, i64* %98, align 8
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  %115 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %116, i32 0, i32 2
  store i32* %114, i32** %117, align 8
  %118 = load i32*, i32** %96, align 8
  %119 = load i32*, i32** %97, align 8
  %120 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %121, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %125 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %124) #3
  %126 = call i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32* %118, i32* %119, i32* %123, %"class.std::allocator"* dereferenceable(1) %125)
  %127 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %127, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %128, i32 0, i32 1
  store i32* %126, i32** %129, align 8
  store i32 134590829, i32* %16
  br label %130

; <label>:130:                                    ; preds = %93, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base.1"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::vector.0"*, %"class.std::vector"*, %"class.std::vector"*) #0 comdat align 2 {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %7, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %12 = call i64 @_ZSt8distanceIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_(%"class.std::vector"* %10, %"class.std::vector"* %11)
  store i64 %12, i64* %8, align 8
  %13 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %14 = load i64, i64* %8, align 8
  %15 = call %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %13, i64 %14)
  %16 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %17, i32 0, i32 0
  store %"class.std::vector"* %15, %"class.std::vector"** %18, align 8
  %19 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20, i32 0, i32 0
  %22 = load %"class.std::vector"*, %"class.std::vector"** %21, align 8
  %23 = load i64, i64* %8, align 8
  %24 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %22, i64 %23
  %25 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %26, i32 0, i32 2
  store %"class.std::vector"* %24, %"class.std::vector"** %27, align 8
  %28 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %30 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %31, i32 0, i32 0
  %33 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %34 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %35 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %34) #3
  %36 = call %"class.std::vector"* @_ZSt22__uninitialized_copy_aIPKSt6vectorIiSaIiEEPS2_S2_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector"* %28, %"class.std::vector"* %29, %"class.std::vector"* %33, %"class.std::allocator.2"* dereferenceable(1) %35)
  %37 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %38, i32 0, i32 1
  store %"class.std::vector"* %36, %"class.std::vector"** %39, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZNKSt16initializer_listISt6vectorIiSaIiEEE5beginEv(%"class.std::initializer_list.12"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.502
  %6 = load i32, i32* @y.503
  %7 = sub i32 %5, 1962468057
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1962468057
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 183659729, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 183659729, label %19
    i32 -1367539433, label %27
    i32 1527543764, label %47
    i32 -2143822450, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1367539433, i32 -2143822450
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list.12"*, align 8
  store %"class.std::initializer_list.12"* %0, %"class.std::initializer_list.12"** %28, align 8
  %29 = load %"class.std::initializer_list.12"*, %"class.std::initializer_list.12"** %28, align 8
  %30 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %29, i32 0, i32 0
  %31 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  store %"class.std::vector"* %31, %"class.std::vector"** %2
  %32 = load i32, i32* @x.502
  %33 = load i32, i32* @y.503
  %34 = add i32 %32, 1549606815
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1549606815
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1527543764, i32 -2143822450
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::initializer_list.12"*, align 8
  store %"class.std::initializer_list.12"* %0, %"class.std::initializer_list.12"** %50, align 8
  %51 = load %"class.std::initializer_list.12"*, %"class.std::initializer_list.12"** %50, align 8
  %52 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %51, i32 0, i32 0
  %53 = load %"class.std::vector"*, %"class.std::vector"** %52, align 8
  store i32 -1367539433, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZNKSt16initializer_listISt6vectorIiSaIiEEE3endEv(%"class.std::initializer_list.12"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.504
  %6 = load i32, i32* @y.505
  %7 = add i32 %5, -2037611920
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2037611920
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1543287081, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1543287081, label %19
    i32 373976369, label %39
    i32 -1076149293, label %71
    i32 42566939, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 373976369, i32 42566939
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::initializer_list.12"*, align 8
  store %"class.std::initializer_list.12"* %0, %"class.std::initializer_list.12"** %40, align 8
  %41 = load %"class.std::initializer_list.12"*, %"class.std::initializer_list.12"** %40, align 8
  %42 = call %"class.std::vector"* @_ZNKSt16initializer_listISt6vectorIiSaIiEEE5beginEv(%"class.std::initializer_list.12"* %41) #3
  %43 = call i64 @_ZNKSt16initializer_listISt6vectorIiSaIiEEE4sizeEv(%"class.std::initializer_list.12"* %41) #3
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %42, i64 %43
  store %"class.std::vector"* %44, %"class.std::vector"** %2
  %45 = load i32, i32* @x.504
  %46 = load i32, i32* @y.505
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1076149293, i32 42566939
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::initializer_list.12"*, align 8
  store %"class.std::initializer_list.12"* %0, %"class.std::initializer_list.12"** %74, align 8
  %75 = load %"class.std::initializer_list.12"*, %"class.std::initializer_list.12"** %74, align 8
  %76 = call %"class.std::vector"* @_ZNKSt16initializer_listISt6vectorIiSaIiEEE5beginEv(%"class.std::initializer_list.12"* %75) #3
  %77 = call i64 @_ZNKSt16initializer_listISt6vectorIiSaIiEEE4sizeEv(%"class.std::initializer_list.12"* %75) #3
  %78 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %76, i64 %77
  store i32 373976369, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_(%"class.std::vector"*, %"class.std::vector"*) #0 comdat {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  call void @_ZSt19__iterator_categoryIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"class.std::vector"** dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag(%"class.std::vector"* %7, %"class.std::vector"* %8)
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt22__uninitialized_copy_aIPKSt6vectorIiSaIiEEPS2_S2_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.508
  %9 = load i32, i32* @y.509
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -122900392, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -122900392, label %21
    i32 -1994830062, label %29
    i32 1673035083, label %64
    i32 -420178219, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1994830062, i32 -420178219
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %"class.std::vector"*, align 8
  %33 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %31, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %32, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %33, align 8
  %34 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %35 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %36 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %37 = call %"class.std::vector"* @_ZSt18uninitialized_copyIPKSt6vectorIiSaIiEEPS2_ET0_T_S7_S6_(%"class.std::vector"* %34, %"class.std::vector"* %35, %"class.std::vector"* %36)
  store %"class.std::vector"* %37, %"class.std::vector"** %5
  %38 = load i32, i32* @x.508
  %39 = load i32, i32* @y.509
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1673035083, i32 -420178219
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  ret %"class.std::vector"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"class.std::vector"*, align 8
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca %"class.std::vector"*, align 8
  %70 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %67, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %68, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %69, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %70, align 8
  %71 = load %"class.std::vector"*, %"class.std::vector"** %67, align 8
  %72 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %73 = load %"class.std::vector"*, %"class.std::vector"** %69, align 8
  %74 = call %"class.std::vector"* @_ZSt18uninitialized_copyIPKSt6vectorIiSaIiEEPS2_ET0_T_S7_S6_(%"class.std::vector"* %71, %"class.std::vector"* %72, %"class.std::vector"* %73)
  store i32 -1994830062, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt10__distanceIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E15difference_typeES6_S6_St26random_access_iterator_tag(%"class.std::vector"*, %"class.std::vector"*) #5 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = ptrtoint %"class.std::vector"* %6 to i64
  %9 = ptrtoint %"class.std::vector"* %7 to i64
  %10 = sub i64 0, %9
  %11 = add i64 %8, %10
  %12 = sub i64 %8, %9
  %13 = sdiv exact i64 %11, 24
  ret i64 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPKSt6vectorIiSaIiEEENSt15iterator_traitsIT_E17iterator_categoryERKS6_(%"class.std::vector"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"class.std::vector"**, align 8
  store %"class.std::vector"** %0, %"class.std::vector"*** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt18uninitialized_copyIPKSt6vectorIiSaIiEEPS2_ET0_T_S7_S6_(%"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"*) #0 comdat {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %11 = call %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* %8, %"class.std::vector"* %9, %"class.std::vector"* %10)
  ret %"class.std::vector"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.516
  %5 = load i32, i32* @y.517
  %6 = sub i32 %4, -1256971202
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1256971202
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %106

; <label>:30:                                     ; preds = %3, %106
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %"class.std::vector"*, align 8
  %33 = alloca %"class.std::vector"*, align 8
  %34 = alloca %"class.std::vector"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %31, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %32, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %33, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %33, align 8
  store %"class.std::vector"* %37, %"class.std::vector"** %34, align 8
  %38 = load i32, i32* @x.516
  %39 = load i32, i32* @y.517
  %40 = sub i32 %38, 961317934
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 961317934
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %106

; <label>:64:                                     ; preds = %30
  br label %65

; <label>:65:                                     ; preds = %74, %64
  %66 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %67 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %68 = icmp ne %"class.std::vector"* %66, %67
  br i1 %68, label %69, label %89

; <label>:69:                                     ; preds = %65
  %70 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  %71 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %70) #3
  %72 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::vector"* %71, %"class.std::vector"* dereferenceable(24) %72)
          to label %73 unwind label %79

; <label>:73:                                     ; preds = %69
  br label %74

; <label>:74:                                     ; preds = %73
  %75 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %76 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %75, i32 1
  store %"class.std::vector"* %76, %"class.std::vector"** %31, align 8
  %77 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  %78 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %77, i32 1
  store %"class.std::vector"* %78, %"class.std::vector"** %34, align 8
  br label %65

; <label>:79:                                     ; preds = %69
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %35, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %36, align 4
  br label %83

; <label>:83:                                     ; preds = %79
  %84 = load i8*, i8** %35, align 8
  %85 = call i8* @__cxa_begin_catch(i8* %84) #3
  %86 = load %"class.std::vector"*, %"class.std::vector"** %33, align 8
  %87 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector"* %86, %"class.std::vector"* %87)
          to label %88 unwind label %91

; <label>:88:                                     ; preds = %83
  invoke void @__cxa_rethrow() #12
          to label %105 unwind label %91

; <label>:89:                                     ; preds = %65
  %90 = load %"class.std::vector"*, %"class.std::vector"** %34, align 8
  ret %"class.std::vector"* %90

; <label>:91:                                     ; preds = %88, %83
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %35, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %95 unwind label %102

; <label>:95:                                     ; preds = %91
  br label %97
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:97:                                     ; preds = %95
  %98 = load i8*, i8** %35, align 8
  %99 = load i32, i32* %36, align 4
  %100 = insertvalue { i8*, i32 } undef, i8* %98, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  resume { i8*, i32 } %101

; <label>:102:                                    ; preds = %91
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #10
  unreachable

; <label>:105:                                    ; preds = %88
  unreachable

; <label>:106:                                    ; preds = %30, %3
  %107 = alloca %"class.std::vector"*, align 8
  %108 = alloca %"class.std::vector"*, align 8
  %109 = alloca %"class.std::vector"*, align 8
  %110 = alloca %"class.std::vector"*, align 8
  %111 = alloca i8*
  %112 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %107, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %108, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %109, align 8
  %113 = load %"class.std::vector"*, %"class.std::vector"** %109, align 8
  store %"class.std::vector"* %113, %"class.std::vector"** %110, align 8
  br label %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listISt6vectorIiSaIiEEE4sizeEv(%"class.std::initializer_list.12"*) #5 comdat align 2 {
  %2 = alloca %"class.std::initializer_list.12"*, align 8
  store %"class.std::initializer_list.12"* %0, %"class.std::initializer_list.12"** %2, align 8
  %3 = load %"class.std::initializer_list.12"*, %"class.std::initializer_list.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list.12", %"class.std::initializer_list.12"* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::vector"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::vector"** %1, %"class.std::vector"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector"**, %"class.std::vector"*** %4, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::vector"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.524
  %6 = load i32, i32* @y.525
  %7 = add i32 %5, -952110983
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -952110983
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1360700515, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1360700515, label %19
    i32 -444526321, label %39
    i32 -1904733865, label %70
    i32 562201223, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -444526321, i32 562201223
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42 to %"class.std::allocator"*
  store %"class.std::allocator"* %43, %"class.std::allocator"** %2
  %44 = load i32, i32* @x.524
  %45 = load i32, i32* @y.525
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1904733865, i32 562201223
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %73, align 8
  %74 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75 to %"class.std::allocator"*
  store i32 -444526321, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.526
  %9 = load i32, i32* @y.527
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1307661417, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1307661417, label %21
    i32 1346615232, label %29
    i32 621374058, label %74
    i32 -116098410, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1346615232, i32 -116098410
  store i32 %28, i32* %17
  br label %95

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %32 = alloca i32*, align 8
  %33 = alloca %"class.std::allocator"*, align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %30, i32 0, i32 0
  store i32* %0, i32** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %31, i32 0, i32 0
  store i32* %1, i32** %37, align 8
  store i32* %2, i32** %32, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %33, align 8
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %34 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %35 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load i32*, i32** %32, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %34, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %35, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %44, i32* %46, i32* %42)
  store i32* %47, i32** %5
  %48 = load i32, i32* @x.526
  %49 = load i32, i32* @y.527
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 621374058, i32 -116098410
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile i32*, i32** %5
  ret i32* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %79 = alloca i32*, align 8
  %80 = alloca %"class.std::allocator"*, align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %77, i32 0, i32 0
  store i32* %0, i32** %83, align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %78, i32 0, i32 0
  store i32* %1, i32** %84, align 8
  store i32* %2, i32** %79, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %80, align 8
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %81 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %82 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load i32*, i32** %79, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %81, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %82, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %91, i32* %93, i32* %89)
  store i32 1346615232, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.20"* %2, i32** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.530
  %6 = load i32, i32* @y.531
  %7 = add i32 %5, 1754232867
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1754232867
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1456633052, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1456633052, label %19
    i32 1916376940, label %39
    i32 158219191, label %64
    i32 1845290250, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1916376940, i32 1845290250
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %44 = bitcast %"class.std::vector"* %43 to %"struct.std::_Vector_base"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 1
  %47 = load i32*, i32** %46, align 8
  store i32* %47, i32** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.20"* %40, i32** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %40, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  store i32* %49, i32** %2
  %50 = load i32, i32* @x.530
  %51 = load i32, i32* @y.531
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 158219191, i32 1845290250
  store i32 %63, i32* %15
  br label %77

; <label>:64:                                     ; preds = %16
  %65 = load volatile i32*, i32** %2
  ret i32* %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %68, align 8
  %70 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %71 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72, i32 0, i32 1
  %74 = load i32*, i32** %73, align 8
  store i32* %74, i32** %69, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.20"* %67, i32** dereferenceable(8) %69) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %67, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  store i32 1916376940, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.532
  %8 = load i32, i32* @y.533
  %9 = sub i32 %7, -1710033716
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1710033716
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 80804423, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 80804423, label %21
    i32 -909189913, label %41
    i32 -250413347, label %75
    i32 344856702, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -909189913, i32 344856702
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %44 = alloca i32*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %42, i32 0, i32 0
  store i32* %0, i32** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %43, i32 0, i32 0
  store i32* %1, i32** %49, align 8
  store i32* %2, i32** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i32*, i32** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %46, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %47, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32* %56, i32* %58, i32* %54)
  store i32* %59, i32** %4
  %60 = load i32, i32* @x.532
  %61 = load i32, i32* @y.533
  %62 = sub i32 %60, -1607746635
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1607746635
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 -250413347, i32 344856702
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile i32*, i32** %4
  ret i32* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %80 = alloca i32*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %78, i32 0, i32 0
  store i32* %0, i32** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %79, i32 0, i32 0
  store i32* %1, i32** %85, align 8
  store i32* %2, i32** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %83 to i8*
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load i32*, i32** %80, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %82, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %83, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32* %92, i32* %94, i32* %90)
  store i32 -909189913, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %4, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %8, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %7, i32 0, i32 0
  store i32* %17, i32** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %9, i32 0, i32 0
  store i32* %23, i32** %24, align 8
  %25 = load i32*, i32** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %7, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %9, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32* %27, i32* %29, i32* %25)
  ret i32* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %21)
  %23 = call i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32* %15, i32* %20, i32* %22)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  store i32* %0, i32** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %4, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  store i32* %10, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.542
  %6 = load i32, i32* @y.543
  %7 = add i32 %5, -599458784
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -599458784
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2146750740, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2146750740, label %19
    i32 1792816526, label %39
    i32 -884005771, label %62
    i32 1408338770, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1792816526, i32 1408338770
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %40, i32 0, i32 0
  store i32* %0, i32** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %41 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %41, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32* %46)
  store i32* %47, i32** %2
  %48 = load i32, i32* @x.542
  %49 = load i32, i32* @y.543
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -884005771, i32 1408338770
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile i32*, i32** %2
  ret i32* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %65, i32 0, i32 0
  store i32* %0, i32** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %66 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %66, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32* %71)
  store i32 1792816526, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.544
  %6 = load i32, i32* @y.545
  %7 = sub i32 %5, -523686311
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -523686311
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1704182196, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1704182196, label %19
    i32 -1193874976, label %27
    i32 -1458026064, label %58
    i32 38045678, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1193874976, i32 38045678
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %28, i32 0, i32 0
  store i32* %0, i32** %29, align 8
  %30 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %28) #3
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.544
  %33 = load i32, i32* @y.545
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1458026064, i32 38045678
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %61, i32 0, i32 0
  store i32* %0, i32** %62, align 8
  %63 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %61) #3
  %64 = load i32*, i32** %63, align 8
  store i32 -1193874976, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.548
  %6 = load i32, i32* @y.549
  %7 = sub i32 %5, 1987146245
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1987146245
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 677741310, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 677741310, label %19
    i32 325297156, label %39
    i32 893535771, label %62
    i32 -132407889, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 325297156, i32 -132407889
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %41, i32 0, i32 0
  store i32* %0, i32** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %40 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %40, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %2
  %47 = load i32, i32* @x.548
  %48 = load i32, i32* @y.549
  %49 = sub i32 %47, 1961324089
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1961324089
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 893535771, i32 -132407889
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile i32*, i32** %2
  ret i32* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %66, i32 0, i32 0
  store i32* %0, i32** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %65 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %65, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  store i32 325297156, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.20"*, i32** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEixEl(%"struct.std::_Deque_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = load i64, i64* %4, align 8
  call void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* sret %5, %"struct.std::_Deque_iterator"* %6, i64 %7) #3
  %8 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %5) #3
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorIiRiPiEplEl(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, i64) #5 comdat align 2 {
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  store i64 %2, i64* %5, align 8
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load i64, i64* %5, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"* %6, i64 %8) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEpLEl(%"struct.std::_Deque_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Deque_iterator"*
  %5 = alloca %"struct.std::_Deque_iterator"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %5, align 8
  store i64 %1, i64* %6, align 8
  %9 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %5, align 8
  store %"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator"** %4
  %10 = load i64, i64* %6, align 8
  %11 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = ptrtoint i32* %13 to i64
  %18 = ptrtoint i32* %16 to i64
  %19 = sub i64 0, %18
  %20 = add i64 %17, %19
  %21 = sub i64 %17, %18
  %22 = sdiv exact i64 %20, 4
  %23 = sub i64 0, %22
  %24 = sub i64 %10, %23
  %25 = add nsw i64 %10, %22
  store i64 %24, i64* %7, align 8
  %26 = load i64, i64* %7, align 8
  store i64 %26, i64* %3
  %27 = alloca i32
  store i32 108304144, i32* %27
  %28 = alloca i64
  br label %29

; <label>:29:                                     ; preds = %2, %97
  %30 = load i32, i32* %27
  switch i32 %30, label %31 [
    i32 108304144, label %32
    i32 479940444, label %36
    i32 -1890264901, label %41
    i32 1076769869, label %47
    i32 2031760855, label %51
    i32 1229968143, label %55
    i32 -472637654, label %74
    i32 -839910866, label %95
  ]

; <label>:31:                                     ; preds = %29
  br label %97

; <label>:32:                                     ; preds = %29
  %33 = load volatile i64, i64* %3
  %34 = icmp sge i64 %33, 0
  %35 = select i1 %34, i32 479940444, i32 1076769869
  store i32 %35, i32* %27
  br label %97

; <label>:36:                                     ; preds = %29
  %37 = load i64, i64* %7, align 8
  %38 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %39 = icmp slt i64 %37, %38
  %40 = select i1 %39, i32 -1890264901, i32 1076769869
  store i32 %40, i32* %27
  br label %97

; <label>:41:                                     ; preds = %29
  %42 = load i64, i64* %6, align 8
  %43 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %42
  store i32* %46, i32** %44, align 8
  store i32 -839910866, i32* %27
  br label %97

; <label>:47:                                     ; preds = %29
  %48 = load i64, i64* %7, align 8
  %49 = icmp sgt i64 %48, 0
  %50 = select i1 %49, i32 2031760855, i32 1229968143
  store i32 %50, i32* %27
  br label %97

; <label>:51:                                     ; preds = %29
  %52 = load i64, i64* %7, align 8
  %53 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %54 = sdiv i64 %52, %53
  store i32 -472637654, i32* %27
  store i64 %54, i64* %28
  br label %97

; <label>:55:                                     ; preds = %29
  %56 = load i64, i64* %7, align 8
  %57 = add i64 0, -2496573809611177847
  %58 = sub i64 %57, %56
  %59 = sub i64 %58, -2496573809611177847
  %60 = sub nsw i64 0, %56
  %61 = sub i64 %59, -8156719215585268777
  %62 = sub i64 %61, 1
  %63 = add i64 %62, -8156719215585268777
  %64 = sub nsw i64 %59, 1
  %65 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %66 = udiv i64 %63, %65
  %67 = sub i64 0, %66
  %68 = add i64 0, %67
  %69 = sub nsw i64 0, %66
  %70 = add i64 %68, -3084831093668237272
  %71 = sub i64 %70, 1
  %72 = sub i64 %71, -3084831093668237272
  %73 = sub nsw i64 %68, 1
  store i32 -472637654, i32* %27
  store i64 %72, i64* %28
  br label %97

; <label>:74:                                     ; preds = %29
  %75 = load i64, i64* %28
  store i64 %75, i64* %8, align 8
  %76 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %76, i32 0, i32 3
  %78 = load i32**, i32*** %77, align 8
  %79 = load i64, i64* %8, align 8
  %80 = getelementptr inbounds i32*, i32** %78, i64 %79
  %81 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %81, i32** %80) #3
  %82 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %82, i32 0, i32 1
  %84 = load i32*, i32** %83, align 8
  %85 = load i64, i64* %7, align 8
  %86 = load i64, i64* %8, align 8
  %87 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %88 = mul nsw i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %85, %89
  %91 = sub nsw i64 %85, %88
  %92 = getelementptr inbounds i32, i32* %84, i64 %90
  %93 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  %94 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %93, i32 0, i32 0
  store i32* %92, i32** %94, align 8
  store i32 -839910866, i32* %27
  br label %97

; <label>:95:                                     ; preds = %29
  %96 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4
  ret %"struct.std::_Deque_iterator"* %96

; <label>:97:                                     ; preds = %74, %55, %51, %47, %41, %36, %32, %31
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::deque"*, %"class.std::deque.8"* dereferenceable(80)) #0 comdat align 2 {
  %3 = alloca %"class.std::deque.8"*
  %4 = alloca %"class.std::deque.8"*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %12, i32 0, i32 0
  %14 = load %"class.std::deque.8"*, %"class.std::deque.8"** %13, align 8
  store %"class.std::deque.8"* %14, %"class.std::deque.8"** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %18, i32 0, i32 2
  %20 = load %"class.std::deque.8"*, %"class.std::deque.8"** %19, align 8
  %21 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %20, i64 -1
  store %"class.std::deque.8"* %21, %"class.std::deque.8"** %3
  %22 = alloca i32
  store i32 -678368857, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %132
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -678368857, label %26
    i32 -1286022657, label %31
    i32 1305828664, label %59
    i32 774445853, label %106
    i32 -715475410, label %107
    i32 -1150729124, label %111
    i32 -2091871740, label %112
  ]

; <label>:25:                                     ; preds = %23
  br label %132

; <label>:26:                                     ; preds = %23
  %27 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  %28 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %3
  %29 = icmp ne %"class.std::deque.8"* %27, %28
  %30 = select i1 %29, i32 -1286022657, i32 -715475410
  store i32 %30, i32* %22
  br label %132

; <label>:31:                                     ; preds = %23
  %32 = load i32, i32* @x.558
  %33 = load i32, i32* @y.559
  %34 = sub i32 %32, -1795139533
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1795139533
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1305828664, i32 -2091871740
  store i32 %58, i32* %22
  br label %132

; <label>:59:                                     ; preds = %23
  %60 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %61 = bitcast %"class.std::deque"* %60 to %"class.std::_Deque_base"*
  %62 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %62 to %"class.std::allocator.5"*
  %64 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %65 = bitcast %"class.std::deque"* %64 to %"class.std::_Deque_base"*
  %66 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %66, i32 0, i32 3
  %68 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %67, i32 0, i32 0
  %69 = load %"class.std::deque.8"*, %"class.std::deque.8"** %68, align 8
  %70 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %71 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::deque.8"* dereferenceable(80) %70) #3
  call void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %63, %"class.std::deque.8"* %69, %"class.std::deque.8"* dereferenceable(80) %71)
  %72 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %74, i32 0, i32 3
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %75, i32 0, i32 0
  %77 = load %"class.std::deque.8"*, %"class.std::deque.8"** %76, align 8
  %78 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %77, i32 1
  store %"class.std::deque.8"* %78, %"class.std::deque.8"** %76, align 8
  %79 = load i32, i32* @x.558
  %80 = load i32, i32* @y.559
  %81 = sub i32 %79, -1929017387
  %82 = sub i32 %81, 1
  %83 = add i32 %82, -1929017387
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 774445853, i32 -2091871740
  store i32 %105, i32* %22
  br label %132

; <label>:106:                                    ; preds = %23
  store i32 -1150729124, i32* %22
  br label %132

; <label>:107:                                    ; preds = %23
  %108 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %109 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::deque.8"* dereferenceable(80) %108) #3
  %110 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_(%"class.std::deque"* %110, %"class.std::deque.8"* dereferenceable(80) %109)
  store i32 -1150729124, i32* %22
  br label %132

; <label>:111:                                    ; preds = %23
  ret void

; <label>:112:                                    ; preds = %23
  %113 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %114 = bitcast %"class.std::deque"* %113 to %"class.std::_Deque_base"*
  %115 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %114, i32 0, i32 0
  %116 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %115 to %"class.std::allocator.5"*
  %117 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %118 = bitcast %"class.std::deque"* %117 to %"class.std::_Deque_base"*
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %119, i32 0, i32 3
  %121 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %120, i32 0, i32 0
  %122 = load %"class.std::deque.8"*, %"class.std::deque.8"** %121, align 8
  %123 = load %"class.std::deque.8"*, %"class.std::deque.8"** %7, align 8
  %124 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::deque.8"* dereferenceable(80) %123) #3
  call void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %116, %"class.std::deque.8"* %122, %"class.std::deque.8"* dereferenceable(80) %124)
  %125 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %126 = bitcast %"class.std::deque"* %125 to %"class.std::_Deque_base"*
  %127 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %127, i32 0, i32 3
  %129 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %128, i32 0, i32 0
  %130 = load %"class.std::deque.8"*, %"class.std::deque.8"** %129, align 8
  %131 = getelementptr inbounds %"class.std::deque.8", %"class.std::deque.8"* %130, i32 1
  store %"class.std::deque.8"* %131, %"class.std::deque.8"** %129, align 8
  store i32 1305828664, i32* %22
  br label %132

; <label>:132:                                    ; preds = %112, %107, %106, %59, %31, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque.8"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque.8"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %2, align 8
  %3 = load %"class.std::deque.8"*, %"class.std::deque.8"** %2, align 8
  ret %"class.std::deque.8"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %"class.std::deque.8"*, %"class.std::deque.8"* dereferenceable(80)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %5, align 8
  store %"class.std::deque.8"* %2, %"class.std::deque.8"** %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %10 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %11 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::deque.8"* dereferenceable(80) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %8, %"class.std::deque.8"* %9, %"class.std::deque.8"* dereferenceable(80) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::deque.8"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.564
  %6 = load i32, i32* @y.565
  %7 = sub i32 %5, 798154156
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 798154156
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1576571341, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1576571341, label %19
    i32 2069720752, label %39
    i32 -1066917570, label %57
    i32 -371451048, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2069720752, i32 -371451048
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %40, align 8
  %41 = load %"class.std::deque.8"*, %"class.std::deque.8"** %40, align 8
  store %"class.std::deque.8"* %41, %"class.std::deque.8"** %2
  %42 = load i32, i32* @x.564
  %43 = load i32, i32* @y.565
  %44 = add i32 %42, 877036643
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 877036643
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1066917570, i32 -371451048
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %2
  ret %"class.std::deque.8"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %60, align 8
  %61 = load %"class.std::deque.8"*, %"class.std::deque.8"** %60, align 8
  store i32 2069720752, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_(%"class.std::deque"*, %"class.std::deque.8"* dereferenceable(80)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque.8"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call %"class.std::deque.8"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %12, i32 0, i32 3
  %14 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %13, align 8
  %15 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %14, i64 1
  store %"class.std::deque.8"* %9, %"class.std::deque.8"** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %17 to %"class.std::allocator.5"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %21, i32 0, i32 0
  %23 = load %"class.std::deque.8"*, %"class.std::deque.8"** %22, align 8
  %24 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  %25 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::deque.8"* dereferenceable(80) %24) #3
  invoke void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, %"class.std::deque.8"* %23, %"class.std::deque.8"* dereferenceable(80) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %32, i32 0, i32 3
  %34 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %33, align 8
  %35 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %34, i64 1
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %29, %"class.std::deque.8"** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %38, i32 0, i32 1
  %40 = load %"class.std::deque.8"*, %"class.std::deque.8"** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %43, i32 0, i32 0
  store %"class.std::deque.8"* %40, %"class.std::deque.8"** %44, align 8
  br label %65

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i8*, i8** %5, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #3
  %52 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %53 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %55, i32 0, i32 3
  %57 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %56, align 8
  %58 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %57, i64 1
  %59 = load %"class.std::deque.8"*, %"class.std::deque.8"** %58, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE18_M_deallocate_nodeEPS2_(%"class.std::_Deque_base"* %52, %"class.std::deque.8"* %59) #3
  invoke void @__cxa_rethrow() #12
          to label %74 unwind label %60

; <label>:60:                                     ; preds = %49
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %64 unwind label %71

; <label>:64:                                     ; preds = %60
  br label %66

; <label>:65:                                     ; preds = %26
  ret void

; <label>:66:                                     ; preds = %64
  %67 = load i8*, i8** %5, align 8
  %68 = load i32, i32* %6, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  resume { i8*, i32 } %70

; <label>:71:                                     ; preds = %60
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  call void @__clang_call_terminate(i8* %73) #10
  unreachable

; <label>:74:                                     ; preds = %49
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %"class.std::deque.8"*, %"class.std::deque.8"* dereferenceable(80)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::deque.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %5, align 8
  store %"class.std::deque.8"* %2, %"class.std::deque.8"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %9 = bitcast %"class.std::deque.8"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.std::deque.8"*
  %11 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  %12 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt7forwardISt5dequeIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::deque.8"* dereferenceable(80) %11) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque.8"* %10, %"class.std::deque.8"* dereferenceable(80) %12)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque.8"*, %"class.std::deque.8"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.570
  %6 = load i32, i32* @y.571
  %7 = add i32 %5, 816160350
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 816160350
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1133164854, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1133164854, label %19
    i32 -409526920, label %27
    i32 701284439, label %62
    i32 1389573500, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -409526920, i32 1389573500
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque.8"*, align 8
  %29 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %28, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %29, align 8
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %28, align 8
  %31 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  %32 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %33 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque.8"* dereferenceable(80) %32) #3
  %34 = bitcast %"class.std::deque.8"* %33 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base.9"* %31, %"class.std::_Deque_base.9"* dereferenceable(80) %34)
  %35 = load i32, i32* @x.570
  %36 = load i32, i32* @y.571
  %37 = sub i32 %35, 564099207
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 564099207
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 701284439, i32 1389573500
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::deque.8"*, align 8
  %65 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %64, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %65, align 8
  %66 = load %"class.std::deque.8"*, %"class.std::deque.8"** %64, align 8
  %67 = bitcast %"class.std::deque.8"* %66 to %"class.std::_Deque_base.9"*
  %68 = load %"class.std::deque.8"*, %"class.std::deque.8"** %65, align 8
  %69 = call dereferenceable(80) %"class.std::deque.8"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque.8"* dereferenceable(80) %68) #3
  %70 = bitcast %"class.std::deque.8"* %69 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base.9"* %67, %"class.std::_Deque_base.9"* dereferenceable(80) %70)
  store i32 -409526920, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base.9"*, align 8
  %4 = alloca %"class.std::_Deque_base.9"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %3, align 8
  store %"class.std::_Deque_base.9"* %1, %"class.std::_Deque_base.9"** %4, align 8
  %7 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3, align 8
  %8 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base.9"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base.9"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base.9"* %7, %"class.std::_Deque_base.9"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base.9"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base.9"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %2, align 8
  %3 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %2, align 8
  ret %"class.std::_Deque_base.9"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base.9"*, align 8
  %5 = alloca %"class.std::_Deque_base.9"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %4, align 8
  store %"class.std::_Deque_base.9"* %1, %"class.std::_Deque_base.9"** %5, align 8
  %8 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.9"* %8, i64 0)
          to label %13 unwind label %64

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %68

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* @x.576
  %21 = load i32, i32* @y.577
  %22 = add i32 %20, -2022080449
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -2022080449
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %103

; <label>:46:                                     ; preds = %19, %103
  %47 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %8, i32 0, i32 0
  %48 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %5, align 8
  %49 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %48, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %49) #3
  %50 = load i32, i32* @x.576
  %51 = load i32, i32* @y.577
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %103

; <label>:63:                                     ; preds = %46
  br label %68

; <label>:64:                                     ; preds = %2
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %6, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %69

; <label>:68:                                     ; preds = %63, %13
  ret void

; <label>:69:                                     ; preds = %64
  %70 = load i32, i32* @x.576
  %71 = load i32, i32* @y.577
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %107

; <label>:83:                                     ; preds = %69, %107
  %84 = load i8*, i8** %6, align 8
  %85 = load i32, i32* %7, align 4
  %86 = insertvalue { i8*, i32 } undef, i8* %84, 0
  %87 = insertvalue { i8*, i32 } %86, i32 %85, 1
  %88 = load i32, i32* @x.576
  %89 = load i32, i32* @y.577
  %90 = sub i32 %88, 359206246
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 359206246
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %107

; <label>:102:                                    ; preds = %83
  resume { i8*, i32 } %87

; <label>:103:                                    ; preds = %46, %19
  %104 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %8, i32 0, i32 0
  %105 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %5, align 8
  %106 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %105, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %104, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %106) #3
  br label %46

; <label>:107:                                    ; preds = %83, %69
  %108 = load i8*, i8** %6, align 8
  %109 = load i32, i32* %7, align 4
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  br label %83
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  ret %"class.std::allocator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.580
  %6 = load i32, i32* @y.581
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -433288278, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %88
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -433288278, label %18
    i32 -604114544, label %38
    i32 -488336688, label %76
    i32 486867473, label %77
  ]

; <label>:17:                                     ; preds = %15
  br label %88

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -604114544, i32 486867473
  store i32 %37, i32* %14
  br label %88

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %40 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %40, align 8
  %41 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %42 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41 to %"class.std::allocator"*
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %44 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1) %43) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %42, %"class.std::allocator"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 0
  store i32** null, i32*** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 1
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %47) #3
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %48) #3
  %49 = load i32, i32* @x.580
  %50 = load i32, i32* @y.581
  %51 = add i32 %49, 964886344
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 964886344
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -488336688, i32 486867473
  store i32 %75, i32* %14
  br label %88

; <label>:76:                                     ; preds = %15
  ret void

; <label>:77:                                     ; preds = %15
  %78 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %79 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %78, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %79, align 8
  %80 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %78, align 8
  %81 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80 to %"class.std::allocator"*
  %82 = load %"class.std::allocator"*, %"class.std::allocator"** %79, align 8
  %83 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1) %82) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %81, %"class.std::allocator"* dereferenceable(1) %83) #3
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 0
  store i32** null, i32*** %84, align 8
  %85 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 1
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %86) #3
  %87 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %87) #3
  store i32 -604114544, i32* %14
  br label %88

; <label>:88:                                     ; preds = %77, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.586
  %6 = load i32, i32* @y.587
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1821025207, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1821025207, label %18
    i32 1903107379, label %26
    i32 -471714383, label %54
    i32 2016584415, label %55
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1903107379, i32 2016584415
  store i32 %25, i32* %14
  br label %69

; <label>:26:                                     ; preds = %15
  %27 = alloca i32***, align 8
  %28 = alloca i32***, align 8
  %29 = alloca i32**, align 8
  store i32*** %0, i32**** %27, align 8
  store i32*** %1, i32**** %28, align 8
  %30 = load i32***, i32**** %27, align 8
  %31 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %30) #3
  %32 = load i32**, i32*** %31, align 8
  store i32** %32, i32*** %29, align 8
  %33 = load i32***, i32**** %28, align 8
  %34 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %33) #3
  %35 = load i32**, i32*** %34, align 8
  %36 = load i32***, i32**** %27, align 8
  store i32** %35, i32*** %36, align 8
  %37 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %29) #3
  %38 = load i32**, i32*** %37, align 8
  %39 = load i32***, i32**** %28, align 8
  store i32** %38, i32*** %39, align 8
  %40 = load i32, i32* @x.586
  %41 = load i32, i32* @y.587
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -471714383, i32 2016584415
  store i32 %53, i32* %14
  br label %69

; <label>:54:                                     ; preds = %15
  ret void

; <label>:55:                                     ; preds = %15
  %56 = alloca i32***, align 8
  %57 = alloca i32***, align 8
  %58 = alloca i32**, align 8
  store i32*** %0, i32**** %56, align 8
  store i32*** %1, i32**** %57, align 8
  %59 = load i32***, i32**** %56, align 8
  %60 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %59) #3
  %61 = load i32**, i32*** %60, align 8
  store i32** %61, i32*** %58, align 8
  %62 = load i32***, i32**** %57, align 8
  %63 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %62) #3
  %64 = load i32**, i32*** %63, align 8
  %65 = load i32***, i32**** %56, align 8
  store i32** %64, i32*** %65, align 8
  %66 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %58) #3
  %67 = load i32**, i32*** %66, align 8
  %68 = load i32***, i32**** %57, align 8
  store i32** %67, i32*** %68, align 8
  store i32 1903107379, i32* %14
  br label %69

; <label>:69:                                     ; preds = %55, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.588
  %6 = load i32, i32* @y.589
  %7 = sub i32 %5, -1067690221
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1067690221
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 486564712, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 486564712, label %19
    i32 1552940492, label %39
    i32 -593666512, label %80
    i32 14061471, label %81
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1552940492, i32 14061471
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64, align 8
  store i64* %0, i64** %40, align 8
  store i64* %1, i64** %41, align 8
  %43 = load i64*, i64** %40, align 8
  %44 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %43) #3
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = load i64*, i64** %41, align 8
  %47 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %46) #3
  %48 = load i64, i64* %47, align 8
  %49 = load i64*, i64** %40, align 8
  store i64 %48, i64* %49, align 8
  %50 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %42) #3
  %51 = load i64, i64* %50, align 8
  %52 = load i64*, i64** %41, align 8
  store i64 %51, i64* %52, align 8
  %53 = load i32, i32* @x.588
  %54 = load i32, i32* @y.589
  %55 = add i32 %53, -356132040
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -356132040
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -593666512, i32 14061471
  store i32 %79, i32* %15
  br label %95

; <label>:80:                                     ; preds = %16
  ret void

; <label>:81:                                     ; preds = %16
  %82 = alloca i64*, align 8
  %83 = alloca i64*, align 8
  %84 = alloca i64, align 8
  store i64* %0, i64** %82, align 8
  store i64* %1, i64** %83, align 8
  %85 = load i64*, i64** %82, align 8
  %86 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %85) #3
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %84, align 8
  %88 = load i64*, i64** %83, align 8
  %89 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %88) #3
  %90 = load i64, i64* %89, align 8
  %91 = load i64*, i64** %82, align 8
  store i64 %90, i64* %91, align 8
  %92 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %84) #3
  %93 = load i64, i64* %92, align 8
  %94 = load i64*, i64** %83, align 8
  store i64 %93, i64* %94, align 8
  store i32 1552940492, i32* %15
  br label %95

; <label>:95:                                     ; preds = %81, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.590
  %6 = load i32, i32* @y.591
  %7 = add i32 %5, -1960848727
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1960848727
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2084078649, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2084078649, label %19
    i32 -1395310664, label %27
    i32 944993534, label %44
    i32 1014414139, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1395310664, i32 1014414139
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  %29 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  store %"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"** %2
  %30 = load i32, i32* @x.590
  %31 = load i32, i32* @y.591
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 944993534, i32 1014414139
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2
  ret %"struct.std::_Deque_iterator"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %47, align 8
  %48 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %47, align 8
  store i32 -1395310664, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #5 comdat {
  %2 = alloca i32***
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.592
  %6 = load i32, i32* @y.593
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -247320616, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -247320616, label %18
    i32 -1047040388, label %38
    i32 -1731516074, label %67
    i32 1141480980, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1047040388, i32 1141480980
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca i32***, align 8
  store i32*** %0, i32**** %39, align 8
  %40 = load i32***, i32**** %39, align 8
  store i32*** %40, i32**** %2
  %41 = load i32, i32* @x.592
  %42 = load i32, i32* @y.593
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1731516074, i32 1141480980
  store i32 %66, i32* %14
  br label %72

; <label>:67:                                     ; preds = %15
  %68 = load volatile i32***, i32**** %2
  ret i32*** %68

; <label>:69:                                     ; preds = %15
  %70 = alloca i32***, align 8
  store i32*** %0, i32**** %70, align 8
  %71 = load i32***, i32**** %70, align 8
  store i32 -1047040388, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.596
  %9 = load i32, i32* @y.597
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1969900306, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %298
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1969900306, label %21
    i32 -1149353800, label %41
    i32 -899809082, label %94
    i32 -1873920942, label %97
    i32 -724288990, label %124
    i32 -1277327802, label %155
    i32 -49249339, label %156
    i32 -1859694605, label %184
    i32 -1284039999, label %211
    i32 -609949009, label %212
    i32 -1532037234, label %293
    i32 -513244714, label %297
  ]

; <label>:20:                                     ; preds = %18
  br label %298

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1149353800, i32 -609949009
  store i32 %40, i32* %17
  br label %298

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::deque"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %42, align 8
  %44 = load volatile i64*, i64** %5
  store i64 %1, i64* %44, align 8
  %45 = load %"class.std::deque"*, %"class.std::deque"** %42, align 8
  store %"class.std::deque"* %45, %"class.std::deque"** %4
  %46 = load volatile i64*, i64** %5
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1396743182215110054
  %49 = add i64 %48, 1
  %50 = sub i64 %49, -1396743182215110054
  %51 = add i64 %47, 1
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %53 = bitcast %"class.std::deque"* %52 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %58 = bitcast %"class.std::deque"* %57 to %"class.std::_Deque_base"*
  %59 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %59, i32 0, i32 3
  %61 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %60, i32 0, i32 3
  %62 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %61, align 8
  %63 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %64 = bitcast %"class.std::deque"* %63 to %"class.std::_Deque_base"*
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %65, i32 0, i32 0
  %67 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %66, align 8
  %68 = ptrtoint %"class.std::deque.8"** %62 to i64
  %69 = ptrtoint %"class.std::deque.8"** %67 to i64
  %70 = sub i64 %68, -724695539317565906
  %71 = sub i64 %70, %69
  %72 = add i64 %71, -724695539317565906
  %73 = sub i64 %68, %69
  %74 = sdiv exact i64 %72, 8
  %75 = sub i64 0, %74
  %76 = add i64 %56, %75
  %77 = sub i64 %56, %74
  %78 = icmp ugt i64 %50, %76
  store i1 %78, i1* %3
  %79 = load i32, i32* @x.596
  %80 = load i32, i32* @y.597
  %81 = sub i32 %79, 897351199
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 897351199
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 -899809082, i32 -609949009
  store i32 %93, i32* %17
  br label %298

; <label>:94:                                     ; preds = %18
  %95 = load volatile i1, i1* %3
  %96 = select i1 %95, i32 -1873920942, i32 -49249339
  store i32 %96, i32* %17
  br label %298

; <label>:97:                                     ; preds = %18
  %98 = load i32, i32* @x.596
  %99 = load i32, i32* @y.597
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -724288990, i32 -1532037234
  store i32 %123, i32* %17
  br label %298

; <label>:124:                                    ; preds = %18
  %125 = load volatile i64*, i64** %5
  %126 = load i64, i64* %125, align 8
  %127 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE17_M_reallocate_mapEmb(%"class.std::deque"* %127, i64 %126, i1 zeroext false)
  %128 = load i32, i32* @x.596
  %129 = load i32, i32* @y.597
  %130 = add i32 %128, -1725128048
  %131 = sub i32 %130, 1
  %132 = sub i32 %131, -1725128048
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 false, true
  %141 = and i1 %138, false
  %142 = and i1 %136, %140
  %143 = and i1 %139, false
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 false, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  %154 = select i1 %152, i32 -1277327802, i32 -1532037234
  store i32 %154, i32* %17
  br label %298

; <label>:155:                                    ; preds = %18
  store i32 -49249339, i32* %17
  br label %298

; <label>:156:                                    ; preds = %18
  %157 = load i32, i32* @x.596
  %158 = load i32, i32* @y.597
  %159 = add i32 %157, 67522538
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, 67522538
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 false, true
  %170 = and i1 %167, false
  %171 = and i1 %165, %169
  %172 = and i1 %168, false
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 false, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  %183 = select i1 %181, i32 -1859694605, i32 -513244714
  store i32 %183, i32* %17
  br label %298

; <label>:184:                                    ; preds = %18
  %185 = load i32, i32* @x.596
  %186 = load i32, i32* @y.597
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 false, true
  %197 = and i1 %194, false
  %198 = and i1 %192, %196
  %199 = and i1 %195, false
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 false, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  %210 = select i1 %208, i32 -1284039999, i32 -513244714
  store i32 %210, i32* %17
  br label %298

; <label>:211:                                    ; preds = %18
  ret void

; <label>:212:                                    ; preds = %18
  %213 = alloca %"class.std::deque"*, align 8
  %214 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %213, align 8
  store i64 %1, i64* %214, align 8
  %215 = load %"class.std::deque"*, %"class.std::deque"** %213, align 8
  %216 = load i64, i64* %214, align 8
  %217 = add i64 0, -3361756344044641172
  %218 = sub i64 %217, %216
  %219 = sub i64 %218, -3361756344044641172
  %220 = sub i64 0, %216
  %221 = sub i64 0, %219
  %222 = sub i64 0, 1
  %223 = add i64 %221, %222
  %224 = sub i64 0, %223
  %225 = add i64 %219, 1
  %226 = sub i64 %216, 1638318858905866062
  %227 = sub i64 %226, 1
  %228 = add i64 %227, 1638318858905866062
  %229 = sub i64 %216, 1
  %230 = mul i64 %228, 1
  %231 = sub i64 0, 1
  %232 = sub i64 %216, %231
  %233 = add i64 %216, 1
  %234 = bitcast %"class.std::deque"* %215 to %"class.std::_Deque_base"*
  %235 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %234, i32 0, i32 0
  %236 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %235, i32 0, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.std::deque"* %215 to %"class.std::_Deque_base"*
  %239 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %238, i32 0, i32 0
  %240 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %239, i32 0, i32 3
  %241 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %240, i32 0, i32 3
  %242 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %241, align 8
  %243 = bitcast %"class.std::deque"* %215 to %"class.std::_Deque_base"*
  %244 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %244, i32 0, i32 0
  %246 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %245, align 8
  %247 = ptrtoint %"class.std::deque.8"** %242 to i64
  %248 = ptrtoint %"class.std::deque.8"** %246 to i64
  %249 = shl i64 %247, %248
  %250 = sub i64 %247, 4930991319867354727
  %251 = sub i64 %250, %248
  %252 = add i64 %251, 4930991319867354727
  %253 = sub i64 %247, %248
  %254 = mul i64 %252, %248
  %255 = shl i64 %247, %248
  %256 = sub i64 0, %248
  %257 = add i64 %247, %256
  %258 = sub i64 %247, %248
  %259 = mul i64 %257, %248
  %260 = shl i64 %247, %248
  %261 = shl i64 %247, %248
  %262 = add i64 0, -5165139066061793902
  %263 = sub i64 %262, %247
  %264 = sub i64 %263, -5165139066061793902
  %265 = sub i64 0, %247
  %266 = sub i64 %264, -6084763491871621574
  %267 = add i64 %266, %248
  %268 = add i64 %267, -6084763491871621574
  %269 = add i64 %264, %248
  %270 = sub i64 0, %248
  %271 = add i64 %247, %270
  %272 = sub i64 %247, %248
  %273 = add i64 0, 8668281517496864346
  %274 = sub i64 %273, %271
  %275 = sub i64 %274, 8668281517496864346
  %276 = sub i64 0, %271
  %277 = add i64 %275, -7828129511613762379
  %278 = add i64 %277, 8
  %279 = sub i64 %278, -7828129511613762379
  %280 = add i64 %275, 8
  %281 = sdiv exact i64 %271, 8
  %282 = sub i64 %237, -8323464222022308923
  %283 = sub i64 %282, %281
  %284 = add i64 %283, -8323464222022308923
  %285 = sub i64 %237, %281
  %286 = mul i64 %284, %281
  %287 = shl i64 %237, %281
  %288 = add i64 %237, -3192161113711797039
  %289 = sub i64 %288, %281
  %290 = sub i64 %289, -3192161113711797039
  %291 = sub i64 %237, %281
  %292 = icmp ugt i64 %232, %290
  store i32 -1149353800, i32* %17
  br label %298

; <label>:293:                                    ; preds = %18
  %294 = load volatile i64*, i64** %5
  %295 = load i64, i64* %294, align 8
  %296 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE17_M_reallocate_mapEmb(%"class.std::deque"* %296, i64 %295, i1 zeroext false)
  store i32 -724288990, i32* %17
  br label %298

; <label>:297:                                    ; preds = %18
  store i32 -1859694605, i32* %17
  br label %298

; <label>:298:                                    ; preds = %297, %293, %212, %184, %156, %155, %124, %97, %94, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca %"class.std::deque.8"**
  %8 = alloca %"class.std::deque.8"**
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca %"class.std::deque"*
  %12 = alloca %"class.std::deque"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.std::deque.8"**, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %12, align 8
  store i64 %1, i64* %13, align 8
  %20 = zext i1 %2 to i8
  store i8 %20, i8* %14, align 1
  %21 = load %"class.std::deque"*, %"class.std::deque"** %12, align 8
  store %"class.std::deque"* %21, %"class.std::deque"** %11
  %22 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %23 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  %24 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %24, i32 0, i32 3
  %26 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %25, i32 0, i32 3
  %27 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %26, align 8
  %28 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %30, i32 0, i32 2
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %31, i32 0, i32 3
  %33 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %32, align 8
  %34 = ptrtoint %"class.std::deque.8"** %27 to i64
  %35 = ptrtoint %"class.std::deque.8"** %33 to i64
  %36 = add i64 %34, 1401910345661630325
  %37 = sub i64 %36, %35
  %38 = sub i64 %37, 1401910345661630325
  %39 = sub i64 %34, %35
  %40 = sdiv exact i64 %38, 8
  %41 = add i64 %40, -5689087742069208000
  %42 = add i64 %41, 1
  %43 = sub i64 %42, -5689087742069208000
  %44 = add nsw i64 %40, 1
  store i64 %43, i64* %15, align 8
  %45 = load i64, i64* %15, align 8
  %46 = load i64, i64* %13, align 8
  %47 = sub i64 0, %45
  %48 = sub i64 0, %46
  %49 = add i64 %47, %48
  %50 = sub i64 0, %49
  %51 = add i64 %45, %46
  store i64 %50, i64* %16, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %53 = bitcast %"class.std::deque"* %52 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %10
  %57 = load i64, i64* %16, align 8
  %58 = mul i64 2, %57
  store i64 %58, i64* %9
  %59 = alloca i32
  store i32 1240165593, i32* %59
  %60 = alloca i64
  %61 = alloca i64
  br label %62

; <label>:62:                                     ; preds = %3, %531
  %63 = load i32, i32* %59
  switch i32 %63, label %64 [
    i32 1240165593, label %65
    i32 -1424294613, label %70
    i32 -654687119, label %91
    i32 1605096863, label %93
    i32 -1321173347, label %94
    i32 1120107279, label %107
    i32 1792300243, label %123
    i32 511917554, label %141
    i32 1504041055, label %142
    i32 -1482328904, label %157
    i32 1200800842, label %218
    i32 -1381830659, label %221
    i32 1514075575, label %236
    i32 1995652652, label %264
    i32 321638404, label %266
    i32 1054109989, label %267
    i32 -702600728, label %284
    i32 311755134, label %340
    i32 -1109591979, label %341
    i32 1769733277, label %355
    i32 910111229, label %488
    i32 270149076, label %490
  ]

; <label>:64:                                     ; preds = %62
  br label %531

; <label>:65:                                     ; preds = %62
  %66 = load volatile i64, i64* %10
  %67 = load volatile i64, i64* %9
  %68 = icmp ugt i64 %66, %67
  %69 = select i1 %68, i32 -1424294613, i32 1504041055
  store i32 %69, i32* %59
  br label %531

; <label>:70:                                     ; preds = %62
  %71 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %72 = bitcast %"class.std::deque"* %71 to %"class.std::_Deque_base"*
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %73, i32 0, i32 0
  %75 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %74, align 8
  %76 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %77 = bitcast %"class.std::deque"* %76 to %"class.std::_Deque_base"*
  %78 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %78, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = load i64, i64* %16, align 8
  %82 = sub i64 %80, 1206427097533952415
  %83 = sub i64 %82, %81
  %84 = add i64 %83, 1206427097533952415
  %85 = sub i64 %80, %81
  %86 = udiv i64 %84, 2
  %87 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %75, i64 %86
  store %"class.std::deque.8"** %87, %"class.std::deque.8"*** %8
  %88 = load i8, i8* %14, align 1
  %89 = trunc i8 %88 to i1
  %90 = select i1 %89, i32 -654687119, i32 1605096863
  store i32 %90, i32* %59
  br label %531

; <label>:91:                                     ; preds = %62
  %92 = load i64, i64* %13, align 8
  store i32 -1321173347, i32* %59
  store i64 %92, i64* %60
  br label %531

; <label>:93:                                     ; preds = %62
  store i32 -1321173347, i32* %59
  store i64 0, i64* %60
  br label %531

; <label>:94:                                     ; preds = %62
  %95 = load i64, i64* %60
  %96 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %8
  %97 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %96, i64 %95
  store %"class.std::deque.8"** %97, %"class.std::deque.8"*** %17, align 8
  %98 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  %99 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %100 = bitcast %"class.std::deque"* %99 to %"class.std::_Deque_base"*
  %101 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %101, i32 0, i32 2
  %103 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %102, i32 0, i32 3
  %104 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %103, align 8
  %105 = icmp ult %"class.std::deque.8"** %98, %104
  %106 = select i1 %105, i32 1120107279, i32 1792300243
  store i32 %106, i32* %59
  br label %531

; <label>:107:                                    ; preds = %62
  %108 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %109 = bitcast %"class.std::deque"* %108 to %"class.std::_Deque_base"*
  %110 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %110, i32 0, i32 2
  %112 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %111, i32 0, i32 3
  %113 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %112, align 8
  %114 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %115 = bitcast %"class.std::deque"* %114 to %"class.std::_Deque_base"*
  %116 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %116, i32 0, i32 3
  %118 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %117, i32 0, i32 3
  %119 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %118, align 8
  %120 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %119, i64 1
  %121 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  %122 = call %"class.std::deque.8"** @_ZSt4copyIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_(%"class.std::deque.8"** %113, %"class.std::deque.8"** %120, %"class.std::deque.8"** %121)
  store i32 511917554, i32* %59
  br label %531

; <label>:123:                                    ; preds = %62
  %124 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %125 = bitcast %"class.std::deque"* %124 to %"class.std::_Deque_base"*
  %126 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %126, i32 0, i32 2
  %128 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %127, i32 0, i32 3
  %129 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %128, align 8
  %130 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %131 = bitcast %"class.std::deque"* %130 to %"class.std::_Deque_base"*
  %132 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %132, i32 0, i32 3
  %134 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %133, i32 0, i32 3
  %135 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %134, align 8
  %136 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %135, i64 1
  %137 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  %138 = load i64, i64* %15, align 8
  %139 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %137, i64 %138
  %140 = call %"class.std::deque.8"** @_ZSt13copy_backwardIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_(%"class.std::deque.8"** %129, %"class.std::deque.8"** %136, %"class.std::deque.8"** %139)
  store i32 511917554, i32* %59
  br label %531

; <label>:141:                                    ; preds = %62
  store i32 -1109591979, i32* %59
  br label %531

; <label>:142:                                    ; preds = %62
  %143 = load i32, i32* @x.598
  %144 = load i32, i32* @y.599
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  %156 = select i1 %154, i32 -1482328904, i32 1769733277
  store i32 %156, i32* %59
  br label %531

; <label>:157:                                    ; preds = %62
  %158 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %159 = bitcast %"class.std::deque"* %158 to %"class.std::_Deque_base"*
  %160 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %160, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %164 = bitcast %"class.std::deque"* %163 to %"class.std::_Deque_base"*
  %165 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %165, i32 0, i32 1
  %167 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %166, i64* dereferenceable(8) %13)
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %162, 8967975380353296999
  %170 = add i64 %169, %168
  %171 = add i64 %170, 8967975380353296999
  %172 = add i64 %162, %168
  %173 = sub i64 0, %171
  %174 = sub i64 0, 2
  %175 = add i64 %173, %174
  %176 = sub i64 0, %175
  %177 = add i64 %171, 2
  store i64 %176, i64* %18, align 8
  %178 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %179 = bitcast %"class.std::deque"* %178 to %"class.std::_Deque_base"*
  %180 = load i64, i64* %18, align 8
  %181 = call %"class.std::deque.8"** @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %179, i64 %180)
  store %"class.std::deque.8"** %181, %"class.std::deque.8"*** %19, align 8
  %182 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %19, align 8
  %183 = load i64, i64* %18, align 8
  %184 = load i64, i64* %16, align 8
  %185 = sub i64 0, %184
  %186 = add i64 %183, %185
  %187 = sub i64 %183, %184
  %188 = udiv i64 %186, 2
  %189 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %182, i64 %188
  store %"class.std::deque.8"** %189, %"class.std::deque.8"*** %7
  %190 = load i8, i8* %14, align 1
  %191 = trunc i8 %190 to i1
  store i1 %191, i1* %6
  %192 = load i32, i32* @x.598
  %193 = load i32, i32* @y.599
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  %217 = select i1 %215, i32 1200800842, i32 1769733277
  store i32 %217, i32* %59
  br label %531

; <label>:218:                                    ; preds = %62
  %219 = load volatile i1, i1* %6
  %220 = select i1 %219, i32 -1381830659, i32 321638404
  store i32 %220, i32* %59
  br label %531

; <label>:221:                                    ; preds = %62
  %222 = load i32, i32* @x.598
  %223 = load i32, i32* @y.599
  %224 = sub i32 0, 1
  %225 = add i32 %222, %224
  %226 = sub i32 %222, 1
  %227 = mul i32 %222, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %223, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  %235 = select i1 %233, i32 1514075575, i32 910111229
  store i32 %235, i32* %59
  br label %531

; <label>:236:                                    ; preds = %62
  %237 = load i64, i64* %13, align 8
  store i64 %237, i64* %5
  %238 = load i32, i32* @x.598
  %239 = load i32, i32* @y.599
  %240 = sub i32 0, 1
  %241 = add i32 %238, %240
  %242 = sub i32 %238, 1
  %243 = mul i32 %238, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %239, 10
  %247 = xor i1 %245, true
  %248 = xor i1 %246, true
  %249 = xor i1 true, true
  %250 = and i1 %247, true
  %251 = and i1 %245, %249
  %252 = and i1 %248, true
  %253 = and i1 %246, %249
  %254 = or i1 %250, %251
  %255 = or i1 %252, %253
  %256 = xor i1 %254, %255
  %257 = or i1 %247, %248
  %258 = xor i1 %257, true
  %259 = or i1 true, %249
  %260 = and i1 %258, %259
  %261 = or i1 %256, %260
  %262 = or i1 %245, %246
  %263 = select i1 %261, i32 1995652652, i32 910111229
  store i32 %263, i32* %59
  br label %531

; <label>:264:                                    ; preds = %62
  store i32 1054109989, i32* %59
  %265 = load volatile i64, i64* %5
  store i64 %265, i64* %61
  br label %531

; <label>:266:                                    ; preds = %62
  store i32 1054109989, i32* %59
  store i64 0, i64* %61
  br label %531

; <label>:267:                                    ; preds = %62
  %268 = load i64, i64* %61
  store i64 %268, i64* %4
  %269 = load i32, i32* @x.598
  %270 = load i32, i32* @y.599
  %271 = sub i32 %269, 365300869
  %272 = sub i32 %271, 1
  %273 = add i32 %272, 365300869
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = and i1 %277, %278
  %280 = xor i1 %277, %278
  %281 = or i1 %279, %280
  %282 = or i1 %277, %278
  %283 = select i1 %281, i32 -702600728, i32 270149076
  store i32 %283, i32* %59
  br label %531

; <label>:284:                                    ; preds = %62
  %285 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %7
  %286 = load volatile i64, i64* %4
  %287 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %285, i64 %286
  store %"class.std::deque.8"** %287, %"class.std::deque.8"*** %17, align 8
  %288 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %289 = bitcast %"class.std::deque"* %288 to %"class.std::_Deque_base"*
  %290 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %289, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %290, i32 0, i32 2
  %292 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %291, i32 0, i32 3
  %293 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %292, align 8
  %294 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %295 = bitcast %"class.std::deque"* %294 to %"class.std::_Deque_base"*
  %296 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %295, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %296, i32 0, i32 3
  %298 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %297, i32 0, i32 3
  %299 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %298, align 8
  %300 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %299, i64 1
  %301 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  %302 = call %"class.std::deque.8"** @_ZSt4copyIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_(%"class.std::deque.8"** %293, %"class.std::deque.8"** %300, %"class.std::deque.8"** %301)
  %303 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %304 = bitcast %"class.std::deque"* %303 to %"class.std::_Deque_base"*
  %305 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %306 = bitcast %"class.std::deque"* %305 to %"class.std::_Deque_base"*
  %307 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %307, i32 0, i32 0
  %309 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %308, align 8
  %310 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %311 = bitcast %"class.std::deque"* %310 to %"class.std::_Deque_base"*
  %312 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %311, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %312, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_deallocate_mapEPPS2_m(%"class.std::_Deque_base"* %304, %"class.std::deque.8"** %309, i64 %314) #3
  %315 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %19, align 8
  %316 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %317 = bitcast %"class.std::deque"* %316 to %"class.std::_Deque_base"*
  %318 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %318, i32 0, i32 0
  store %"class.std::deque.8"** %315, %"class.std::deque.8"*** %319, align 8
  %320 = load i64, i64* %18, align 8
  %321 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %322 = bitcast %"class.std::deque"* %321 to %"class.std::_Deque_base"*
  %323 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %323, i32 0, i32 1
  store i64 %320, i64* %324, align 8
  %325 = load i32, i32* @x.598
  %326 = load i32, i32* @y.599
  %327 = sub i32 %325, 1803137056
  %328 = sub i32 %327, 1
  %329 = add i32 %328, 1803137056
  %330 = sub i32 %325, 1
  %331 = mul i32 %325, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %326, 10
  %335 = and i1 %333, %334
  %336 = xor i1 %333, %334
  %337 = or i1 %335, %336
  %338 = or i1 %333, %334
  %339 = select i1 %337, i32 311755134, i32 270149076
  store i32 %339, i32* %59
  br label %531

; <label>:340:                                    ; preds = %62
  store i32 -1109591979, i32* %59
  br label %531

; <label>:341:                                    ; preds = %62
  %342 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %343 = bitcast %"class.std::deque"* %342 to %"class.std::_Deque_base"*
  %344 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %343, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %344, i32 0, i32 2
  %346 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %345, %"class.std::deque.8"** %346) #3
  %347 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %348 = bitcast %"class.std::deque"* %347 to %"class.std::_Deque_base"*
  %349 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %348, i32 0, i32 0
  %350 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %349, i32 0, i32 3
  %351 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  %352 = load i64, i64* %15, align 8
  %353 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %351, i64 %352
  %354 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %353, i64 -1
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %350, %"class.std::deque.8"** %354) #3
  ret void

; <label>:355:                                    ; preds = %62
  %356 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %357 = bitcast %"class.std::deque"* %356 to %"class.std::_Deque_base"*
  %358 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %357, i32 0, i32 0
  %359 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %358, i32 0, i32 1
  %360 = load i64, i64* %359, align 8
  %361 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %362 = bitcast %"class.std::deque"* %361 to %"class.std::_Deque_base"*
  %363 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %362, i32 0, i32 0
  %364 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %363, i32 0, i32 1
  %365 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %364, i64* dereferenceable(8) %13)
  %366 = load i64, i64* %365, align 8
  %367 = sub i64 0, 4666181495196441364
  %368 = sub i64 %367, %360
  %369 = add i64 %368, 4666181495196441364
  %370 = sub i64 0, %360
  %371 = sub i64 0, %366
  %372 = sub i64 %369, %371
  %373 = add i64 %369, %366
  %374 = sub i64 %360, 4903686028361173657
  %375 = sub i64 %374, %366
  %376 = add i64 %375, 4903686028361173657
  %377 = sub i64 %360, %366
  %378 = mul i64 %376, %366
  %379 = add i64 0, 4688651872844851774
  %380 = sub i64 %379, %360
  %381 = sub i64 %380, 4688651872844851774
  %382 = sub i64 0, %360
  %383 = add i64 %381, 3091474633105323304
  %384 = add i64 %383, %366
  %385 = sub i64 %384, 3091474633105323304
  %386 = add i64 %381, %366
  %387 = add i64 %360, 2784844024210902229
  %388 = add i64 %387, %366
  %389 = sub i64 %388, 2784844024210902229
  %390 = add i64 %360, %366
  %391 = sub i64 %389, -1938971142461649808
  %392 = sub i64 %391, 2
  %393 = add i64 %392, -1938971142461649808
  %394 = sub i64 %389, 2
  %395 = mul i64 %393, 2
  %396 = sub i64 0, %389
  %397 = add i64 0, %396
  %398 = sub i64 0, %389
  %399 = sub i64 %397, 6004851233166595694
  %400 = add i64 %399, 2
  %401 = add i64 %400, 6004851233166595694
  %402 = add i64 %397, 2
  %403 = sub i64 %389, -2722558438662160476
  %404 = sub i64 %403, 2
  %405 = add i64 %404, -2722558438662160476
  %406 = sub i64 %389, 2
  %407 = mul i64 %405, 2
  %408 = add i64 0, 4758039749583855054
  %409 = sub i64 %408, %389
  %410 = sub i64 %409, 4758039749583855054
  %411 = sub i64 0, %389
  %412 = sub i64 0, %410
  %413 = sub i64 0, 2
  %414 = add i64 %412, %413
  %415 = sub i64 0, %414
  %416 = add i64 %410, 2
  %417 = sub i64 0, %389
  %418 = add i64 0, %417
  %419 = sub i64 0, %389
  %420 = sub i64 0, %418
  %421 = sub i64 0, 2
  %422 = add i64 %420, %421
  %423 = sub i64 0, %422
  %424 = add i64 %418, 2
  %425 = shl i64 %389, 2
  %426 = sub i64 0, -4492040436598077952
  %427 = sub i64 %426, %389
  %428 = add i64 %427, -4492040436598077952
  %429 = sub i64 0, %389
  %430 = add i64 %428, -7218263344344286324
  %431 = add i64 %430, 2
  %432 = sub i64 %431, -7218263344344286324
  %433 = add i64 %428, 2
  %434 = add i64 %389, 1264667538020473621
  %435 = add i64 %434, 2
  %436 = sub i64 %435, 1264667538020473621
  %437 = add i64 %389, 2
  store i64 %436, i64* %18, align 8
  %438 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %439 = bitcast %"class.std::deque"* %438 to %"class.std::_Deque_base"*
  %440 = load i64, i64* %18, align 8
  %441 = call %"class.std::deque.8"** @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %439, i64 %440)
  store %"class.std::deque.8"** %441, %"class.std::deque.8"*** %19, align 8
  %442 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %19, align 8
  %443 = load i64, i64* %18, align 8
  %444 = load i64, i64* %16, align 8
  %445 = add i64 0, 4872205582132680862
  %446 = sub i64 %445, %443
  %447 = sub i64 %446, 4872205582132680862
  %448 = sub i64 0, %443
  %449 = sub i64 0, %444
  %450 = sub i64 %447, %449
  %451 = add i64 %447, %444
  %452 = add i64 %443, 6332191455944505025
  %453 = sub i64 %452, %444
  %454 = sub i64 %453, 6332191455944505025
  %455 = sub i64 %443, %444
  %456 = sub i64 %454, 3443353479098638435
  %457 = sub i64 %456, 2
  %458 = add i64 %457, 3443353479098638435
  %459 = sub i64 %454, 2
  %460 = mul i64 %458, 2
  %461 = sub i64 0, %454
  %462 = add i64 0, %461
  %463 = sub i64 0, %454
  %464 = sub i64 0, %462
  %465 = sub i64 0, 2
  %466 = add i64 %464, %465
  %467 = sub i64 0, %466
  %468 = add i64 %462, 2
  %469 = sub i64 0, 2
  %470 = add i64 %454, %469
  %471 = sub i64 %454, 2
  %472 = mul i64 %470, 2
  %473 = sub i64 0, %454
  %474 = add i64 0, %473
  %475 = sub i64 0, %454
  %476 = sub i64 0, 2
  %477 = sub i64 %474, %476
  %478 = add i64 %474, 2
  %479 = sub i64 %454, 742611346205505168
  %480 = sub i64 %479, 2
  %481 = add i64 %480, 742611346205505168
  %482 = sub i64 %454, 2
  %483 = mul i64 %481, 2
  %484 = udiv i64 %454, 2
  %485 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %442, i64 %484
  %486 = load i8, i8* %14, align 1
  %487 = trunc i8 %486 to i1
  store i32 -1482328904, i32* %59
  br label %531

; <label>:488:                                    ; preds = %62
  %489 = load i64, i64* %13, align 8
  store i32 1514075575, i32* %59
  br label %531

; <label>:490:                                    ; preds = %62
  %491 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %7
  %492 = load volatile i64, i64* %4
  %493 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %491, i64 %492
  store %"class.std::deque.8"** %493, %"class.std::deque.8"*** %17, align 8
  %494 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %495 = bitcast %"class.std::deque"* %494 to %"class.std::_Deque_base"*
  %496 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %495, i32 0, i32 0
  %497 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %496, i32 0, i32 2
  %498 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %497, i32 0, i32 3
  %499 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %498, align 8
  %500 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %501 = bitcast %"class.std::deque"* %500 to %"class.std::_Deque_base"*
  %502 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %501, i32 0, i32 0
  %503 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %502, i32 0, i32 3
  %504 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %503, i32 0, i32 3
  %505 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %504, align 8
  %506 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %505, i64 1
  %507 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %17, align 8
  %508 = call %"class.std::deque.8"** @_ZSt4copyIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_(%"class.std::deque.8"** %499, %"class.std::deque.8"** %506, %"class.std::deque.8"** %507)
  %509 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %510 = bitcast %"class.std::deque"* %509 to %"class.std::_Deque_base"*
  %511 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %512 = bitcast %"class.std::deque"* %511 to %"class.std::_Deque_base"*
  %513 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %512, i32 0, i32 0
  %514 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %513, i32 0, i32 0
  %515 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %514, align 8
  %516 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %517 = bitcast %"class.std::deque"* %516 to %"class.std::_Deque_base"*
  %518 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %517, i32 0, i32 0
  %519 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %518, i32 0, i32 1
  %520 = load i64, i64* %519, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE17_M_deallocate_mapEPPS2_m(%"class.std::_Deque_base"* %510, %"class.std::deque.8"** %515, i64 %520) #3
  %521 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %19, align 8
  %522 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %523 = bitcast %"class.std::deque"* %522 to %"class.std::_Deque_base"*
  %524 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %523, i32 0, i32 0
  %525 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %524, i32 0, i32 0
  store %"class.std::deque.8"** %521, %"class.std::deque.8"*** %525, align 8
  %526 = load i64, i64* %18, align 8
  %527 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %528 = bitcast %"class.std::deque"* %527 to %"class.std::_Deque_base"*
  %529 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %528, i32 0, i32 0
  %530 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %529, i32 0, i32 1
  store i64 %526, i64* %530, align 8
  store i32 -702600728, i32* %59
  br label %531

; <label>:531:                                    ; preds = %490, %488, %355, %340, %284, %267, %266, %264, %236, %221, %218, %157, %142, %141, %123, %107, %94, %93, %91, %70, %65, %64
  br label %62
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt4copyIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #0 comdat {
  %4 = alloca %"class.std::deque.8"**, align 8
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %4, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %5, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %6, align 8
  %7 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %4, align 8
  %8 = call %"class.std::deque.8"** @_ZSt12__miter_baseIPPSt5dequeIiSaIiEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %7)
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %10 = call %"class.std::deque.8"** @_ZSt12__miter_baseIPPSt5dequeIiSaIiEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %9)
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %12 = call %"class.std::deque.8"** @_ZSt14__copy_move_a2ILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"** %8, %"class.std::deque.8"** %10, %"class.std::deque.8"** %11)
  ret %"class.std::deque.8"** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt13copy_backwardIPPSt5dequeIiSaIiEES4_ET0_T_S6_S5_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #0 comdat {
  %4 = alloca %"class.std::deque.8"**, align 8
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %4, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %5, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %6, align 8
  %7 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %4, align 8
  %8 = call %"class.std::deque.8"** @_ZSt12__miter_baseIPPSt5dequeIiSaIiEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %7)
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %10 = call %"class.std::deque.8"** @_ZSt12__miter_baseIPPSt5dequeIiSaIiEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %9)
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %12 = call %"class.std::deque.8"** @_ZSt23__copy_move_backward_a2ILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"** %8, %"class.std::deque.8"** %10, %"class.std::deque.8"** %11)
  ret %"class.std::deque.8"** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt14__copy_move_a2ILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #0 comdat {
  %4 = alloca %"class.std::deque.8"**, align 8
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %4, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %5, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %6, align 8
  %7 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %4, align 8
  %8 = call %"class.std::deque.8"** @_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %7)
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %10 = call %"class.std::deque.8"** @_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %9)
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %12 = call %"class.std::deque.8"** @_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %11)
  %13 = call %"class.std::deque.8"** @_ZSt13__copy_move_aILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"** %8, %"class.std::deque.8"** %10, %"class.std::deque.8"** %12)
  ret %"class.std::deque.8"** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt12__miter_baseIPPSt5dequeIiSaIiEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"**) #5 comdat {
  %2 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %2, align 8
  %3 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %2, align 8
  %4 = call %"class.std::deque.8"** @_ZNSt10_Iter_baseIPPSt5dequeIiSaIiEELb0EE7_S_baseES4_(%"class.std::deque.8"** %3)
  ret %"class.std::deque.8"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt13__copy_move_aILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #0 comdat {
  %4 = alloca %"class.std::deque.8"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.608
  %8 = load i32, i32* @y.609
  %9 = add i32 %7, -399243972
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -399243972
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1086067877, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1086067877, label %21
    i32 -531197176, label %41
    i32 1326080445, label %65
    i32 -2044986289, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -531197176, i32 -2044986289
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::deque.8"**, align 8
  %43 = alloca %"class.std::deque.8"**, align 8
  %44 = alloca %"class.std::deque.8"**, align 8
  %45 = alloca i8, align 1
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %42, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %43, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %42, align 8
  %47 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %43, align 8
  %48 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %44, align 8
  %49 = call %"class.std::deque.8"** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_(%"class.std::deque.8"** %46, %"class.std::deque.8"** %47, %"class.std::deque.8"** %48)
  store %"class.std::deque.8"** %49, %"class.std::deque.8"*** %4
  %50 = load i32, i32* @x.608
  %51 = load i32, i32* @y.609
  %52 = add i32 %50, -991148731
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -991148731
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1326080445, i32 -2044986289
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  ret %"class.std::deque.8"** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"class.std::deque.8"**, align 8
  %69 = alloca %"class.std::deque.8"**, align 8
  %70 = alloca %"class.std::deque.8"**, align 8
  %71 = alloca i8, align 1
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %68, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %69, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %68, align 8
  %73 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %69, align 8
  %74 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %70, align 8
  %75 = call %"class.std::deque.8"** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_(%"class.std::deque.8"** %72, %"class.std::deque.8"** %73, %"class.std::deque.8"** %74)
  store i32 -531197176, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"**) #0 comdat {
  %2 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %2, align 8
  %3 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %2, align 8
  %4 = call %"class.std::deque.8"** @_ZNSt10_Iter_baseIPPSt5dequeIiSaIiEELb0EE7_S_baseES4_(%"class.std::deque.8"** %3)
  ret %"class.std::deque.8"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque.8"** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %"class.std::deque.8"***
  %7 = alloca %"class.std::deque.8"***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.612
  %11 = load i32, i32* @y.613
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1326884804, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %229
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1326884804, label %23
    i32 208725627, label %31
    i32 -1932728431, label %66
    i32 524185753, label %69
    i32 1391868564, label %84
    i32 888979966, label %121
    i32 -45879221, label %122
    i32 -1533060186, label %128
    i32 2095666940, label %218
  ]

; <label>:22:                                     ; preds = %20
  br label %229

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 208725627, i32 -1533060186
  store i32 %30, i32* %19
  br label %229

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"*** %32, %"class.std::deque.8"**** %7
  %33 = alloca %"class.std::deque.8"**, align 8
  %34 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"*** %34, %"class.std::deque.8"**** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %7
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %36, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %33, align 8
  %37 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %6
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %37, align 8
  %38 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %33, align 8
  %39 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %7
  %40 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %39, align 8
  %41 = ptrtoint %"class.std::deque.8"** %38 to i64
  %42 = ptrtoint %"class.std::deque.8"** %40 to i64
  %43 = sub i64 0, %42
  %44 = add i64 %41, %43
  %45 = sub i64 %41, %42
  %46 = sdiv exact i64 %44, 8
  %47 = load volatile i64*, i64** %5
  store i64 %46, i64* %47, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.612
  %52 = load i32, i32* @y.613
  %53 = add i32 %51, -1745360655
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1745360655
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1932728431, i32 -1533060186
  store i32 %65, i32* %19
  br label %229

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 524185753, i32 -45879221
  store i32 %68, i32* %19
  br label %229

; <label>:69:                                     ; preds = %20
  %70 = load i32, i32* @x.612
  %71 = load i32, i32* @y.613
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 1391868564, i32 2095666940
  store i32 %83, i32* %19
  br label %229

; <label>:84:                                     ; preds = %20
  %85 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %6
  %86 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %85, align 8
  %87 = bitcast %"class.std::deque.8"** %86 to i8*
  %88 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %7
  %89 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %88, align 8
  %90 = bitcast %"class.std::deque.8"** %89 to i8*
  %91 = load volatile i64*, i64** %5
  %92 = load i64, i64* %91, align 8
  %93 = mul i64 8, %92
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %87, i8* %90, i64 %93, i32 8, i1 false)
  %94 = load i32, i32* @x.612
  %95 = load i32, i32* @y.613
  %96 = add i32 %94, 2058252757
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 2058252757
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 888979966, i32 2095666940
  store i32 %120, i32* %19
  br label %229

; <label>:121:                                    ; preds = %20
  store i32 -45879221, i32* %19
  br label %229

; <label>:122:                                    ; preds = %20
  %123 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %6
  %124 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %123, align 8
  %125 = load volatile i64*, i64** %5
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %124, i64 %126
  ret %"class.std::deque.8"** %127

; <label>:128:                                    ; preds = %20
  %129 = alloca %"class.std::deque.8"**, align 8
  %130 = alloca %"class.std::deque.8"**, align 8
  %131 = alloca %"class.std::deque.8"**, align 8
  %132 = alloca i64, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %129, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %130, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %131, align 8
  %133 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %130, align 8
  %134 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %129, align 8
  %135 = ptrtoint %"class.std::deque.8"** %133 to i64
  %136 = ptrtoint %"class.std::deque.8"** %134 to i64
  %137 = shl i64 %135, %136
  %138 = sub i64 %135, -4665376144822645741
  %139 = sub i64 %138, %136
  %140 = add i64 %139, -4665376144822645741
  %141 = sub i64 %135, %136
  %142 = mul i64 %140, %136
  %143 = sub i64 0, -2011219772993791723
  %144 = sub i64 %143, %135
  %145 = add i64 %144, -2011219772993791723
  %146 = sub i64 0, %135
  %147 = sub i64 0, %136
  %148 = sub i64 %145, %147
  %149 = add i64 %145, %136
  %150 = shl i64 %135, %136
  %151 = sub i64 %135, -7621682427153084747
  %152 = sub i64 %151, %136
  %153 = add i64 %152, -7621682427153084747
  %154 = sub i64 %135, %136
  %155 = mul i64 %153, %136
  %156 = sub i64 0, 6374925362403629410
  %157 = sub i64 %156, %135
  %158 = add i64 %157, 6374925362403629410
  %159 = sub i64 0, %135
  %160 = sub i64 0, %158
  %161 = sub i64 0, %136
  %162 = add i64 %160, %161
  %163 = sub i64 0, %162
  %164 = add i64 %158, %136
  %165 = sub i64 0, %135
  %166 = add i64 0, %165
  %167 = sub i64 0, %135
  %168 = sub i64 0, %166
  %169 = sub i64 0, %136
  %170 = add i64 %168, %169
  %171 = sub i64 0, %170
  %172 = add i64 %166, %136
  %173 = sub i64 0, %135
  %174 = add i64 0, %173
  %175 = sub i64 0, %135
  %176 = sub i64 %174, -6982215671550813621
  %177 = add i64 %176, %136
  %178 = add i64 %177, -6982215671550813621
  %179 = add i64 %174, %136
  %180 = sub i64 0, %136
  %181 = add i64 %135, %180
  %182 = sub i64 %135, %136
  %183 = sub i64 0, 8
  %184 = add i64 %181, %183
  %185 = sub i64 %181, 8
  %186 = mul i64 %184, 8
  %187 = add i64 %181, 4777785861443049588
  %188 = sub i64 %187, 8
  %189 = sub i64 %188, 4777785861443049588
  %190 = sub i64 %181, 8
  %191 = mul i64 %189, 8
  %192 = add i64 %181, -5451559798201569082
  %193 = sub i64 %192, 8
  %194 = sub i64 %193, -5451559798201569082
  %195 = sub i64 %181, 8
  %196 = mul i64 %194, 8
  %197 = shl i64 %181, 8
  %198 = shl i64 %181, 8
  %199 = sub i64 0, 4494822038099552913
  %200 = sub i64 %199, %181
  %201 = add i64 %200, 4494822038099552913
  %202 = sub i64 0, %181
  %203 = sub i64 %201, -7893394077495241369
  %204 = add i64 %203, 8
  %205 = add i64 %204, -7893394077495241369
  %206 = add i64 %201, 8
  %207 = sub i64 0, %181
  %208 = add i64 0, %207
  %209 = sub i64 0, %181
  %210 = sub i64 %208, 7823068092804607329
  %211 = add i64 %210, 8
  %212 = add i64 %211, 7823068092804607329
  %213 = add i64 %208, 8
  %214 = shl i64 %181, 8
  %215 = sdiv exact i64 %181, 8
  store i64 %215, i64* %132, align 8
  %216 = load i64, i64* %132, align 8
  %217 = icmp ne i64 %216, 0
  store i32 208725627, i32* %19
  br label %229

; <label>:218:                                    ; preds = %20
  %219 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %6
  %220 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %219, align 8
  %221 = bitcast %"class.std::deque.8"** %220 to i8*
  %222 = load volatile %"class.std::deque.8"***, %"class.std::deque.8"**** %7
  %223 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %222, align 8
  %224 = bitcast %"class.std::deque.8"** %223 to i8*
  %225 = load volatile i64*, i64** %5
  %226 = load i64, i64* %225, align 8
  %227 = shl i64 8, %226
  %228 = mul i64 8, %226
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %221, i8* %224, i64 %228, i32 8, i1 false)
  store i32 1391868564, i32* %19
  br label %229

; <label>:229:                                    ; preds = %218, %128, %121, %84, %69, %66, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque.8"** @_ZNSt10_Iter_baseIPPSt5dequeIiSaIiEELb0EE7_S_baseES4_(%"class.std::deque.8"**) #5 comdat align 2 {
  %2 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %2, align 8
  %3 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %2, align 8
  ret %"class.std::deque.8"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt23__copy_move_backward_a2ILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #0 comdat {
  %4 = alloca %"class.std::deque.8"**, align 8
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %4, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %5, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %6, align 8
  %7 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %4, align 8
  %8 = call %"class.std::deque.8"** @_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %7)
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %10 = call %"class.std::deque.8"** @_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %9)
  %11 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %12 = call %"class.std::deque.8"** @_ZSt12__niter_baseIPPSt5dequeIiSaIiEEENSt11_Niter_baseIT_E13iterator_typeES6_(%"class.std::deque.8"** %11)
  %13 = call %"class.std::deque.8"** @_ZSt22__copy_move_backward_aILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"** %8, %"class.std::deque.8"** %10, %"class.std::deque.8"** %12)
  ret %"class.std::deque.8"** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque.8"** @_ZSt22__copy_move_backward_aILb0EPPSt5dequeIiSaIiEES4_ET1_T0_S6_S5_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #0 comdat {
  %4 = alloca %"class.std::deque.8"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.618
  %8 = load i32, i32* @y.619
  %9 = add i32 %7, 1353382256
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1353382256
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -553460247, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -553460247, label %21
    i32 -1941487776, label %41
    i32 1963179196, label %76
    i32 982741301, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1941487776, i32 982741301
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::deque.8"**, align 8
  %43 = alloca %"class.std::deque.8"**, align 8
  %44 = alloca %"class.std::deque.8"**, align 8
  %45 = alloca i8, align 1
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %42, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %43, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %42, align 8
  %47 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %43, align 8
  %48 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %44, align 8
  %49 = call %"class.std::deque.8"** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_(%"class.std::deque.8"** %46, %"class.std::deque.8"** %47, %"class.std::deque.8"** %48)
  store %"class.std::deque.8"** %49, %"class.std::deque.8"*** %4
  %50 = load i32, i32* @x.618
  %51 = load i32, i32* @y.619
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1963179196, i32 982741301
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"class.std::deque.8"**, %"class.std::deque.8"*** %4
  ret %"class.std::deque.8"** %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::deque.8"**, align 8
  %80 = alloca %"class.std::deque.8"**, align 8
  %81 = alloca %"class.std::deque.8"**, align 8
  %82 = alloca i8, align 1
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %79, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %80, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %79, align 8
  %84 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %80, align 8
  %85 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %81, align 8
  %86 = call %"class.std::deque.8"** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_(%"class.std::deque.8"** %83, %"class.std::deque.8"** %84, %"class.std::deque.8"** %85)
  store i32 -1941487776, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque.8"** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt5dequeIiSaIiEEEEPT_PKS7_SA_S8_(%"class.std::deque.8"**, %"class.std::deque.8"**, %"class.std::deque.8"**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"class.std::deque.8"**, align 8
  %6 = alloca %"class.std::deque.8"**, align 8
  %7 = alloca %"class.std::deque.8"**, align 8
  %8 = alloca i64, align 8
  store %"class.std::deque.8"** %0, %"class.std::deque.8"*** %5, align 8
  store %"class.std::deque.8"** %1, %"class.std::deque.8"*** %6, align 8
  store %"class.std::deque.8"** %2, %"class.std::deque.8"*** %7, align 8
  %9 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %6, align 8
  %10 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %11 = ptrtoint %"class.std::deque.8"** %9 to i64
  %12 = ptrtoint %"class.std::deque.8"** %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 1954575392, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %139
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1954575392, label %22
    i32 -423408989, label %26
    i32 803295742, label %42
    i32 606445213, label %82
    i32 -111338606, label %83
    i32 1265104521, label %91
  ]

; <label>:21:                                     ; preds = %19
  br label %139

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -423408989, i32 -111338606
  store i32 %25, i32* %18
  br label %139

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.620
  %28 = load i32, i32* @y.621
  %29 = sub i32 %27, -1569294421
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -1569294421
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 803295742, i32 1265104521
  store i32 %41, i32* %18
  br label %139

; <label>:42:                                     ; preds = %19
  %43 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  %44 = load i64, i64* %8, align 8
  %45 = sub i64 0, -587175242869684480
  %46 = sub i64 %45, %44
  %47 = add i64 %46, -587175242869684480
  %48 = sub i64 0, %44
  %49 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %43, i64 %47
  %50 = bitcast %"class.std::deque.8"** %49 to i8*
  %51 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %52 = bitcast %"class.std::deque.8"** %51 to i8*
  %53 = load i64, i64* %8, align 8
  %54 = mul i64 8, %53
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %50, i8* %52, i64 %54, i32 8, i1 false)
  %55 = load i32, i32* @x.620
  %56 = load i32, i32* @y.621
  %57 = sub i32 %55, -304712504
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -304712504
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 606445213, i32 1265104521
  store i32 %81, i32* %18
  br label %139

; <label>:82:                                     ; preds = %19
  store i32 -111338606, i32* %18
  br label %139

; <label>:83:                                     ; preds = %19
  %84 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  %85 = load i64, i64* %8, align 8
  %86 = add i64 0, 2990120687200869686
  %87 = sub i64 %86, %85
  %88 = sub i64 %87, 2990120687200869686
  %89 = sub i64 0, %85
  %90 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %84, i64 %88
  ret %"class.std::deque.8"** %90

; <label>:91:                                     ; preds = %19
  %92 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %7, align 8
  %93 = load i64, i64* %8, align 8
  %94 = add i64 0, -5428207619327429500
  %95 = sub i64 %94, 0
  %96 = sub i64 %95, -5428207619327429500
  %97 = sub i64 0, 0
  %98 = sub i64 %96, 2092432026389662257
  %99 = add i64 %98, %93
  %100 = add i64 %99, 2092432026389662257
  %101 = add i64 %96, %93
  %102 = sub i64 0, 6186487933698316639
  %103 = sub i64 %102, %93
  %104 = add i64 %103, 6186487933698316639
  %105 = sub i64 0, %93
  %106 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %92, i64 %104
  %107 = bitcast %"class.std::deque.8"** %106 to i8*
  %108 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %5, align 8
  %109 = bitcast %"class.std::deque.8"** %108 to i8*
  %110 = load i64, i64* %8, align 8
  %111 = sub i64 0, 153562101739877569
  %112 = sub i64 %111, 8
  %113 = add i64 %112, 153562101739877569
  %114 = sub i64 0, 8
  %115 = sub i64 %113, 5503388598483836979
  %116 = add i64 %115, %110
  %117 = add i64 %116, 5503388598483836979
  %118 = add i64 %113, %110
  %119 = sub i64 0, 8
  %120 = add i64 0, %119
  %121 = sub i64 0, 8
  %122 = sub i64 0, %120
  %123 = sub i64 0, %110
  %124 = add i64 %122, %123
  %125 = sub i64 0, %124
  %126 = add i64 %120, %110
  %127 = sub i64 0, 8
  %128 = add i64 0, %127
  %129 = sub i64 0, 8
  %130 = sub i64 0, %110
  %131 = sub i64 %128, %130
  %132 = add i64 %128, %110
  %133 = sub i64 0, %110
  %134 = add i64 8, %133
  %135 = sub i64 8, %110
  %136 = mul i64 %134, %110
  %137 = shl i64 8, %110
  %138 = mul i64 8, %110
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %107, i8* %109, i64 %138, i32 8, i1 false)
  store i32 803295742, i32* %18
  br label %139

; <label>:139:                                    ; preds = %91, %82, %42, %26, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.5"* dereferenceable(1), %"class.std::deque.8"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.622
  %6 = load i32, i32* @y.623
  %7 = sub i32 %5, -819144953
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -819144953
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1964315433, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1964315433, label %19
    i32 -1086449309, label %27
    i32 -1019838712, label %47
    i32 1200566436, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1086449309, i32 1200566436
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  %29 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %28, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %29, align 8
  %30 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  %31 = bitcast %"class.std::allocator.5"* %30 to %"class.__gnu_cxx::new_allocator.6"*
  %32 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %31, %"class.std::deque.8"* %32)
  %33 = load i32, i32* @x.622
  %34 = load i32, i32* @y.623
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1019838712, i32 1200566436
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::allocator.5"*, align 8
  %50 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %49, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %50, align 8
  %51 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %49, align 8
  %52 = bitcast %"class.std::allocator.5"* %51 to %"class.__gnu_cxx::new_allocator.6"*
  %53 = load %"class.std::deque.8"*, %"class.std::deque.8"** %50, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %52, %"class.std::deque.8"* %53)
  store i32 -1086449309, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIS_IiSaIiEESaIS1_EE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.624
  %5 = load i32, i32* @y.625
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1454290379, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %132
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1454290379, label %17
    i32 1912222596, label %37
    i32 -1854490336, label %97
    i32 -1249034404, label %98
  ]

; <label>:16:                                     ; preds = %14
  br label %132

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1912222596, i32 -1249034404
  store i32 %36, i32* %13
  br label %132

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %38, align 8
  %39 = load %"class.std::deque"*, %"class.std::deque"** %38, align 8
  %40 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %41 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %40) #3
  %42 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %44, i32 0, i32 0
  %46 = load %"class.std::deque.8"*, %"class.std::deque.8"** %45, align 8
  call void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.5"* dereferenceable(1) %41, %"class.std::deque.8"* %46)
  %47 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %48 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %49, i32 0, i32 2
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %50, i32 0, i32 1
  %52 = load %"class.std::deque.8"*, %"class.std::deque.8"** %51, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE18_M_deallocate_nodeEPS2_(%"class.std::_Deque_base"* %47, %"class.std::deque.8"* %52) #3
  %53 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %54, i32 0, i32 2
  %56 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %58, i32 0, i32 3
  %60 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %59, align 8
  %61 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %60, i64 1
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %55, %"class.std::deque.8"** %61) #3
  %62 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %63, i32 0, i32 2
  %65 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %64, i32 0, i32 1
  %66 = load %"class.std::deque.8"*, %"class.std::deque.8"** %65, align 8
  %67 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %68, i32 0, i32 2
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %69, i32 0, i32 0
  store %"class.std::deque.8"* %66, %"class.std::deque.8"** %70, align 8
  %71 = load i32, i32* @x.624
  %72 = load i32, i32* @y.625
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -1854490336, i32 -1249034404
  store i32 %96, i32* %13
  br label %132

; <label>:97:                                     ; preds = %14
  ret void

; <label>:98:                                     ; preds = %14
  %99 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %99, align 8
  %100 = load %"class.std::deque"*, %"class.std::deque"** %99, align 8
  %101 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %102 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %101) #3
  %103 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %104, i32 0, i32 2
  %106 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %105, i32 0, i32 0
  %107 = load %"class.std::deque.8"*, %"class.std::deque.8"** %106, align 8
  call void @_ZNSt16allocator_traitsISaISt5dequeIiSaIiEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.5"* dereferenceable(1) %102, %"class.std::deque.8"* %107)
  %108 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %109 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %110 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %110, i32 0, i32 2
  %112 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %111, i32 0, i32 1
  %113 = load %"class.std::deque.8"*, %"class.std::deque.8"** %112, align 8
  call void @_ZNSt11_Deque_baseISt5dequeIiSaIiEESaIS2_EE18_M_deallocate_nodeEPS2_(%"class.std::_Deque_base"* %108, %"class.std::deque.8"* %113) #3
  %114 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %115 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %115, i32 0, i32 2
  %117 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %118 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %118, i32 0, i32 2
  %120 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %119, i32 0, i32 3
  %121 = load %"class.std::deque.8"**, %"class.std::deque.8"*** %120, align 8
  %122 = getelementptr inbounds %"class.std::deque.8"*, %"class.std::deque.8"** %121, i64 1
  call void @_ZNSt15_Deque_iteratorISt5dequeIiSaIiEERS2_PS2_E11_M_set_nodeEPS4_(%"struct.std::_Deque_iterator.10"* %116, %"class.std::deque.8"** %122) #3
  %123 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %124 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %123, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %124, i32 0, i32 2
  %126 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %125, i32 0, i32 1
  %127 = load %"class.std::deque.8"*, %"class.std::deque.8"** %126, align 8
  %128 = bitcast %"class.std::deque"* %100 to %"class.std::_Deque_base"*
  %129 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl", %"struct.std::_Deque_base<std::deque<int, std::allocator<int> >, std::allocator<std::deque<int, std::allocator<int> > > >::_Deque_impl"* %129, i32 0, i32 2
  %131 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %130, i32 0, i32 0
  store %"class.std::deque.8"* %127, %"class.std::deque.8"** %131, align 8
  store i32 1912222596, i32* %13
  br label %132

; <label>:132:                                    ; preds = %98, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeIiSaIiEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.6"*, %"class.std::deque.8"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"class.std::deque.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  %6 = load %"class.std::deque.8"*, %"class.std::deque.8"** %4, align 8
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %10) #3
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store i32* null, i32** %7, align 8
  %25 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = load i32*, i32** %6, align 8
  %34 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %35 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %34) #3
  %36 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %28, i32* %32, i32* %33, %"class.std::allocator"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store i32* %36, i32** %7, align 8
  %38 = load i32*, i32** %7, align 8
  %39 = getelementptr inbounds i32, i32* %38, i32 1
  store i32* %39, i32** %7, align 8
  br label %250

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load i32*, i32** %7, align 8
  %48 = icmp ne i32* %47, null
  br i1 %48, label %155, label %49

; <label>:49:                                     ; preds = %44
  %50 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %51 to %"class.std::allocator"*
  %53 = load i32*, i32** %6, align 8
  %54 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %10) #3
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1) %52, i32* %55)
          to label %56 unwind label %98

; <label>:56:                                     ; preds = %49
  %57 = load i32, i32* @x.630
  %58 = load i32, i32* @y.631
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %343

; <label>:70:                                     ; preds = %56, %343
  %71 = load i32, i32* @x.630
  %72 = load i32, i32* @y.631
  %73 = sub i32 %71, -1033935306
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -1033935306
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %343

; <label>:97:                                     ; preds = %70
  br label %190

; <label>:98:                                     ; preds = %248, %190, %155, %49
  %99 = load i32, i32* @x.630
  %100 = load i32, i32* @y.631
  %101 = sub i32 %99, 453220752
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 453220752
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %344

; <label>:125:                                    ; preds = %98, %344
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %8, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %9, align 4
  %129 = load i32, i32* @x.630
  %130 = load i32, i32* @y.631
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 true, true
  %141 = and i1 %138, true
  %142 = and i1 %136, %140
  %143 = and i1 %139, true
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 true, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %344

; <label>:154:                                    ; preds = %125
  invoke void @__cxa_end_catch()
          to label %249 unwind label %339

; <label>:155:                                    ; preds = %44
  %156 = load i32*, i32** %6, align 8
  %157 = load i32*, i32** %7, align 8
  %158 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %159 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %158) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %156, i32* %157, %"class.std::allocator"* dereferenceable(1) %159)
          to label %160 unwind label %98

; <label>:160:                                    ; preds = %155
  %161 = load i32, i32* @x.630
  %162 = load i32, i32* @y.631
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %348

; <label>:174:                                    ; preds = %160, %348
  %175 = load i32, i32* @x.630
  %176 = load i32, i32* @y.631
  %177 = add i32 %175, -946069554
  %178 = sub i32 %177, 1
  %179 = sub i32 %178, -946069554
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %348

; <label>:189:                                    ; preds = %174
  br label %190

; <label>:190:                                    ; preds = %189, %97
  %191 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %192 = load i32*, i32** %6, align 8
  %193 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %191, i32* %192, i64 %193)
          to label %194 unwind label %98

; <label>:194:                                    ; preds = %190
  %195 = load i32, i32* @x.630
  %196 = load i32, i32* @y.631
  %197 = sub i32 %195, 932207492
  %198 = sub i32 %197, 1
  %199 = add i32 %198, 932207492
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 true, true
  %208 = and i1 %205, true
  %209 = and i1 %203, %207
  %210 = and i1 %206, true
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 true, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  br i1 %219, label %221, label %349

; <label>:221:                                    ; preds = %194, %349
  %222 = load i32, i32* @x.630
  %223 = load i32, i32* @y.631
  %224 = sub i32 %222, 1280234129
  %225 = sub i32 %224, 1
  %226 = add i32 %225, 1280234129
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 false, true
  %235 = and i1 %232, false
  %236 = and i1 %230, %234
  %237 = and i1 %233, false
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 false, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  br i1 %246, label %248, label %349

; <label>:248:                                    ; preds = %221
  invoke void @__cxa_rethrow() #12
          to label %342 unwind label %98

; <label>:249:                                    ; preds = %154
  br label %334

; <label>:250:                                    ; preds = %37
  %251 = load i32, i32* @x.630
  %252 = load i32, i32* @y.631
  %253 = sub i32 0, 1
  %254 = add i32 %251, %253
  %255 = sub i32 %251, 1
  %256 = mul i32 %251, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %252, 10
  %260 = xor i1 %258, true
  %261 = xor i1 %259, true
  %262 = xor i1 true, true
  %263 = and i1 %260, true
  %264 = and i1 %258, %262
  %265 = and i1 %261, true
  %266 = and i1 %259, %262
  %267 = or i1 %263, %264
  %268 = or i1 %265, %266
  %269 = xor i1 %267, %268
  %270 = or i1 %260, %261
  %271 = xor i1 %270, true
  %272 = or i1 true, %262
  %273 = and i1 %271, %272
  %274 = or i1 %269, %273
  %275 = or i1 %258, %259
  br i1 %274, label %276, label %350

; <label>:276:                                    ; preds = %250, %350
  %277 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %278 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %277, i32 0, i32 0
  %279 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %278, i32 0, i32 0
  %280 = load i32*, i32** %279, align 8
  %281 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %282, i32 0, i32 1
  %284 = load i32*, i32** %283, align 8
  %285 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %286 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %285) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %280, i32* %284, %"class.std::allocator"* dereferenceable(1) %286)
  %287 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %288 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %289 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %288, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %289, i32 0, i32 0
  %291 = load i32*, i32** %290, align 8
  %292 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %293 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %292, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %293, i32 0, i32 2
  %295 = load i32*, i32** %294, align 8
  %296 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %297 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %296, i32 0, i32 0
  %298 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %297, i32 0, i32 0
  %299 = load i32*, i32** %298, align 8
  %300 = ptrtoint i32* %295 to i64
  %301 = ptrtoint i32* %299 to i64
  %302 = sub i64 0, %301
  %303 = add i64 %300, %302
  %304 = sub i64 %300, %301
  %305 = sdiv exact i64 %303, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %287, i32* %291, i64 %305)
  %306 = load i32*, i32** %6, align 8
  %307 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %308 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %307, i32 0, i32 0
  %309 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %308, i32 0, i32 0
  store i32* %306, i32** %309, align 8
  %310 = load i32*, i32** %7, align 8
  %311 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %312 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %311, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %312, i32 0, i32 1
  store i32* %310, i32** %313, align 8
  %314 = load i32*, i32** %6, align 8
  %315 = load i64, i64* %5, align 8
  %316 = getelementptr inbounds i32, i32* %314, i64 %315
  %317 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %318 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %318, i32 0, i32 2
  store i32* %316, i32** %319, align 8
  %320 = load i32, i32* @x.630
  %321 = load i32, i32* @y.631
  %322 = sub i32 0, 1
  %323 = add i32 %320, %322
  %324 = sub i32 %320, 1
  %325 = mul i32 %320, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %321, 10
  %329 = and i1 %327, %328
  %330 = xor i1 %327, %328
  %331 = or i1 %329, %330
  %332 = or i1 %327, %328
  br i1 %331, label %333, label %350

; <label>:333:                                    ; preds = %276
  ret void

; <label>:334:                                    ; preds = %249
  %335 = load i8*, i8** %8, align 8
  %336 = load i32, i32* %9, align 4
  %337 = insertvalue { i8*, i32 } undef, i8* %335, 0
  %338 = insertvalue { i8*, i32 } %337, i32 %336, 1
  resume { i8*, i32 } %338

; <label>:339:                                    ; preds = %154
  %340 = landingpad { i8*, i32 }
          catch i8* null
  %341 = extractvalue { i8*, i32 } %340, 0
  call void @__clang_call_terminate(i8* %341) #10
  unreachable

; <label>:342:                                    ; preds = %248
  unreachable

; <label>:343:                                    ; preds = %70, %56
  br label %70

; <label>:344:                                    ; preds = %125, %98
  %345 = landingpad { i8*, i32 }
          cleanup
  %346 = extractvalue { i8*, i32 } %345, 0
  store i8* %346, i8** %8, align 8
  %347 = extractvalue { i8*, i32 } %345, 1
  store i32 %347, i32* %9, align 4
  br label %125

; <label>:348:                                    ; preds = %174, %160
  br label %174

; <label>:349:                                    ; preds = %221, %194
  br label %221

; <label>:350:                                    ; preds = %276, %250
  %351 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %352 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %351, i32 0, i32 0
  %353 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %352, i32 0, i32 0
  %354 = load i32*, i32** %353, align 8
  %355 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %356 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %355, i32 0, i32 0
  %357 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %356, i32 0, i32 1
  %358 = load i32*, i32** %357, align 8
  %359 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %360 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %359) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %354, i32* %358, %"class.std::allocator"* dereferenceable(1) %360)
  %361 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %362 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %362, i32 0, i32 0
  %364 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %363, i32 0, i32 0
  %365 = load i32*, i32** %364, align 8
  %366 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %367 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %366, i32 0, i32 0
  %368 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %367, i32 0, i32 2
  %369 = load i32*, i32** %368, align 8
  %370 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %371 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %370, i32 0, i32 0
  %372 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %371, i32 0, i32 0
  %373 = load i32*, i32** %372, align 8
  %374 = ptrtoint i32* %369 to i64
  %375 = ptrtoint i32* %373 to i64
  %376 = shl i64 %374, %375
  %377 = sub i64 0, %375
  %378 = add i64 %374, %377
  %379 = sub i64 %374, %375
  %380 = mul i64 %378, %375
  %381 = shl i64 %374, %375
  %382 = shl i64 %374, %375
  %383 = add i64 %374, -1300330657158231984
  %384 = sub i64 %383, %375
  %385 = sub i64 %384, -1300330657158231984
  %386 = sub i64 %374, %375
  %387 = sub i64 0, %385
  %388 = add i64 0, %387
  %389 = sub i64 0, %385
  %390 = sub i64 %388, -7124452969280427834
  %391 = add i64 %390, 4
  %392 = add i64 %391, -7124452969280427834
  %393 = add i64 %388, 4
  %394 = add i64 %385, 6283088264088484860
  %395 = sub i64 %394, 4
  %396 = sub i64 %395, 6283088264088484860
  %397 = sub i64 %385, 4
  %398 = mul i64 %396, 4
  %399 = shl i64 %385, 4
  %400 = sub i64 0, %385
  %401 = add i64 0, %400
  %402 = sub i64 0, %385
  %403 = sub i64 0, 4
  %404 = sub i64 %401, %403
  %405 = add i64 %401, 4
  %406 = sub i64 %385, -8606346656816686398
  %407 = sub i64 %406, 4
  %408 = add i64 %407, -8606346656816686398
  %409 = sub i64 %385, 4
  %410 = mul i64 %408, 4
  %411 = shl i64 %385, 4
  %412 = shl i64 %385, 4
  %413 = sdiv exact i64 %385, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %361, i32* %365, i64 %413)
  %414 = load i32*, i32** %6, align 8
  %415 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %415, i32 0, i32 0
  %417 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %416, i32 0, i32 0
  store i32* %414, i32** %417, align 8
  %418 = load i32*, i32** %7, align 8
  %419 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %420 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %419, i32 0, i32 0
  %421 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %420, i32 0, i32 1
  store i32* %418, i32** %421, align 8
  %422 = load i32*, i32** %6, align 8
  %423 = load i64, i64* %5, align 8
  %424 = getelementptr inbounds i32, i32* %422, i64 %423
  %425 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %426 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %425, i32 0, i32 0
  %427 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %426, i32 0, i32 2
  store i32* %424, i32** %427, align 8
  br label %276
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector"*
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %12 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %12, %"class.std::vector"** %6
  %13 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %14 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"* %13) #3
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %15) #3
  %17 = sub i64 %14, -4138559624790994473
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -4138559624790994473
  %20 = sub i64 %14, %16
  store i64 %19, i64* %5
  %21 = load i64, i64* %8, align 8
  store i64 %21, i64* %4
  %22 = alloca i32
  store i32 -1751839643, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %62
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -1751839643, label %27
    i32 -906596017, label %32
    i32 -1504831555, label %34
    i32 1474255970, label %49
    i32 -1861444266, label %55
    i32 -1003207984, label %58
    i32 1467633306, label %60
  ]

; <label>:26:                                     ; preds = %24
  br label %62

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %5
  %29 = load volatile i64, i64* %4
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -906596017, i32 -1504831555
  store i32 %31, i32* %22
  br label %62

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %9, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #12
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %36 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %35) #3
  %37 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %38 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %37) #3
  store i64 %38, i64* %11, align 8
  %39 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %8)
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 0, %40
  %42 = sub i64 %36, %41
  %43 = add i64 %36, %40
  store i64 %42, i64* %10, align 8
  %44 = load i64, i64* %10, align 8
  %45 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %46 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %45) #3
  %47 = icmp ult i64 %44, %46
  %48 = select i1 %47, i32 -1861444266, i32 1474255970
  store i32 %48, i32* %22
  br label %62

; <label>:49:                                     ; preds = %24
  %50 = load i64, i64* %10, align 8
  %51 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %52 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"* %51) #3
  %53 = icmp ugt i64 %50, %52
  %54 = select i1 %53, i32 -1861444266, i32 -1003207984
  store i32 %54, i32* %22
  br label %62

; <label>:55:                                     ; preds = %24
  %56 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %57 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"* %56) #3
  store i32 1467633306, i32* %22
  store i64 %57, i64* %23
  br label %62

; <label>:58:                                     ; preds = %24
  %59 = load i64, i64* %10, align 8
  store i32 1467633306, i32* %22
  store i64 %59, i64* %23
  br label %62

; <label>:60:                                     ; preds = %24
  %61 = load i64, i64* %23
  ret i64 %61

; <label>:62:                                     ; preds = %58, %55, %49, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store i32* %12, i32** %13, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %20, i32* %22, i32* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.640
  %6 = load i32, i32* @y.641
  %7 = sub i32 %5, -1720653548
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1720653548
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 605527922, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 605527922, label %19
    i32 1157685928, label %39
    i32 1295593430, label %72
    i32 -575290748, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1157685928, i32 -575290748
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  %41 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %43 = bitcast %"class.std::allocator"* %42 to %"class.__gnu_cxx::new_allocator"*
  %44 = load i32*, i32** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator"* %43, i32* %44)
  %45 = load i32, i32* @x.640
  %46 = load i32, i32* @y.641
  %47 = add i32 %45, -1366033299
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1366033299
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1295593430, i32 -575290748
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::allocator"*, align 8
  %75 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %74, align 8
  store i32* %1, i32** %75, align 8
  %76 = load %"class.std::allocator"*, %"class.std::allocator"** %74, align 8
  %77 = bitcast %"class.std::allocator"* %76 to %"class.__gnu_cxx::new_allocator"*
  %78 = load i32*, i32** %75, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator"* %77, i32* %78)
  store i32 1157685928, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.646
  %9 = load i32, i32* @y.647
  %10 = add i32 %8, -1554059071
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1554059071
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1539794413, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %109
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1539794413, label %22
    i32 -263949467, label %42
    i32 650259398, label %88
    i32 -1427788177, label %90
  ]

; <label>:21:                                     ; preds = %19
  br label %109

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -263949467, i32 -1427788177
  store i32 %41, i32* %18
  br label %109

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"class.std::move_iterator", align 8
  %45 = alloca i32*, align 8
  %46 = alloca %"class.std::allocator"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store i32* %0, i32** %49, align 8
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %44, i32 0, i32 0
  store i32* %1, i32** %50, align 8
  store i32* %2, i32** %45, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %46, align 8
  %51 = bitcast %"class.std::move_iterator"* %47 to i8*
  %52 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.std::move_iterator"* %48 to i8*
  %54 = bitcast %"class.std::move_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load i32*, i32** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %57, i32* %59, i32* %55)
  store i32* %60, i32** %5
  %61 = load i32, i32* @x.646
  %62 = load i32, i32* @y.647
  %63 = add i32 %61, 957476508
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 957476508
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 650259398, i32 -1427788177
  store i32 %87, i32* %18
  br label %109

; <label>:88:                                     ; preds = %19
  %89 = load volatile i32*, i32** %5
  ret i32* %89

; <label>:90:                                     ; preds = %19
  %91 = alloca %"class.std::move_iterator", align 8
  %92 = alloca %"class.std::move_iterator", align 8
  %93 = alloca i32*, align 8
  %94 = alloca %"class.std::allocator"*, align 8
  %95 = alloca %"class.std::move_iterator", align 8
  %96 = alloca %"class.std::move_iterator", align 8
  %97 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %91, i32 0, i32 0
  store i32* %0, i32** %97, align 8
  %98 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %92, i32 0, i32 0
  store i32* %1, i32** %98, align 8
  store i32* %2, i32** %93, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %94, align 8
  %99 = bitcast %"class.std::move_iterator"* %95 to i8*
  %100 = bitcast %"class.std::move_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = bitcast %"class.std::move_iterator"* %96 to i8*
  %102 = bitcast %"class.std::move_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = load i32*, i32** %93, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %96, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %105, i32* %107, i32* %103)
  store i32 -263949467, i32* %18
  br label %109

; <label>:109:                                    ; preds = %90, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.648
  %6 = load i32, i32* @y.649
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1618797415, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1618797415, label %18
    i32 -2138504967, label %26
    i32 -860697578, label %59
    i32 -27788743, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2138504967, i32 -27788743
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator", align 8
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"* %27, i32* %29)
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %27, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.648
  %33 = load i32, i32* @y.649
  %34 = add i32 %32, -1588264762
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1588264762
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -860697578, i32 -27788743
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::move_iterator", align 8
  %63 = alloca i32*, align 8
  store i32* %0, i32** %63, align 8
  %64 = load i32*, i32** %63, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"* %62, i32* %64)
  %65 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %62, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  store i32 -2138504967, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %15, i32* %20, i32* %21)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.656
  %8 = load i32, i32* @y.657
  %9 = add i32 %7, -22155898
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -22155898
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1663737652, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %92
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1663737652, label %21
    i32 26218131, label %41
    i32 -869004212, label %79
    i32 -2093052487, label %81
  ]

; <label>:20:                                     ; preds = %18
  br label %92

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 26218131, i32 -2093052487
  store i32 %40, i32* %17
  br label %92

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %45)
  %47 = load i32*, i32** %43, align 8
  %48 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %47)
  %49 = load i32*, i32** %44, align 8
  %50 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %49)
  %51 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %46, i32* %48, i32* %50)
  store i32* %51, i32** %4
  %52 = load i32, i32* @x.656
  %53 = load i32, i32* @y.657
  %54 = add i32 %52, 545572588
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 545572588
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -869004212, i32 -2093052487
  store i32 %78, i32* %17
  br label %92

; <label>:79:                                     ; preds = %18
  %80 = load volatile i32*, i32** %4
  ret i32* %80

; <label>:81:                                     ; preds = %18
  %82 = alloca i32*, align 8
  %83 = alloca i32*, align 8
  %84 = alloca i32*, align 8
  store i32* %0, i32** %82, align 8
  store i32* %1, i32** %83, align 8
  store i32* %2, i32** %84, align 8
  %85 = load i32*, i32** %82, align 8
  %86 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %85)
  %87 = load i32*, i32** %83, align 8
  %88 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %87)
  %89 = load i32*, i32** %84, align 8
  %90 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %89)
  %91 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %86, i32* %88, i32* %90)
  store i32 26218131, i32* %17
  br label %92

; <label>:92:                                     ; preds = %81, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::move_iterator", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.660
  %8 = load i32, i32* @y.661
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1425171620, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1425171620, label %20
    i32 -1178235723, label %28
    i32 1247009437, label %64
    i32 1837135707, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1178235723, i32 1837135707
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8, align 1
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load i32*, i32** %29, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %33, i32* %34, i32* %35)
  store i32* %36, i32** %4
  %37 = load i32, i32* @x.660
  %38 = load i32, i32* @y.661
  %39 = add i32 %37, 1252941198
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1252941198
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1247009437, i32 1837135707
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i8, align 1
  store i32* %0, i32** %67, align 8
  store i32* %1, i32** %68, align 8
  store i32* %2, i32** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i32*, i32** %67, align 8
  %72 = load i32*, i32** %68, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %71, i32* %72, i32* %73)
  store i32 -1178235723, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32*, i32** %5, align 8
  %11 = ptrtoint i32* %9 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = add i64 %11, -3636332987461052107
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -3636332987461052107
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 4
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -1086274288, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1086274288, label %23
    i32 -1639452504, label %27
    i32 536168435, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -1639452504, i32 536168435
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32*, i32** %7, align 8
  %29 = bitcast i32* %28 to i8*
  %30 = load i32*, i32** %5, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 4, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  store i32 536168435, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32*, i32** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  ret i32* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.664
  %6 = load i32, i32* @y.665
  %7 = add i32 %5, 896417489
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 896417489
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1467654580, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1467654580, label %19
    i32 -1419604820, label %27
    i32 -1675827186, label %58
    i32 -2094606139, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1419604820, i32 -2094606139
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator", align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  store i32* %0, i32** %29, align 8
  %30 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"* %28)
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.664
  %32 = load i32, i32* @y.665
  %33 = add i32 %31, 774159371
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 774159371
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1675827186, i32 -2094606139
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator", align 8
  %62 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %61, i32 0, i32 0
  store i32* %0, i32** %62, align 8
  %63 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"* %61)
  store i32 -1419604820, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"*, i32*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.668
  %6 = load i32, i32* @y.669
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 122222991, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 122222991, label %18
    i32 -1111803821, label %38
    i32 1518453393, label %71
    i32 172075179, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1111803821, i32 172075179
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator"*, align 8
  %40 = alloca i32*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %39, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %41, i32 0, i32 0
  %43 = load i32*, i32** %40, align 8
  store i32* %43, i32** %42, align 8
  %44 = load i32, i32* @x.668
  %45 = load i32, i32* @y.669
  %46 = add i32 %44, -8606004
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -8606004
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1518453393, i32 172075179
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::move_iterator"*, align 8
  %74 = alloca i32*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %73, align 8
  store i32* %1, i32** %74, align 8
  %75 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %73, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %75, i32 0, i32 0
  %77 = load i32*, i32** %74, align 8
  store i32* %77, i32** %76, align 8
  store i32 -1111803821, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator"*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.670
  %6 = load i32, i32* @y.671
  %7 = sub i32 %5, -762894405
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -762894405
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -674310185, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -674310185, label %19
    i32 116785035, label %27
    i32 -1161879136, label %57
    i32 -808573082, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 116785035, i32 -808573082
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %29 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %28, align 8
  %31 = load i32, i32* @x.670
  %32 = load i32, i32* @y.671
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1161879136, i32 -808573082
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %60 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %59, align 8
  store i32* %1, i32** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %59, align 8
  store i32 116785035, i32* %15
  br label %62

; <label>:62:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s637424217.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { argmemonly nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
