; ModuleID = 'Project_CodeNet_C++1400/p03256/s545954551.cpp'
source_filename = "Project_CodeNet_C++1400/p03256/s545954551.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::_Setprecision" = type { i32 }
%class.Solve = type { i32, i32, %"class.std::__cxx11::basic_string", %"class.std::vector" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl" = type { %"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl" = type { %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl" = type { %"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"* }
%"struct.Solve::edge" = type { i32, i32 }
%struct.SCC = type { i32, %"class.std::vector.13", %"class.std::vector.13", %"class.std::vector.18", %"class.std::vector.23", %"class.std::vector.18" }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"* }
%"class.std::vector.23" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.Solve::edge"* }
%"class.std::allocator.0" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.std::allocator.5" = type { i8 }
%class.anon = type { i8 }
%"class.__gnu_cxx::__normal_iterator.27" = type { %"struct.Solve::edge"* }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%"class.__gnu_cxx::__normal_iterator.29" = type { %"class.std::vector.3"* }
%"class.__gnu_cxx::__normal_iterator.28" = type { %"class.std::vector.3"* }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %class.anon }
%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.30" = type { %"class.std::vector.8"* }
%"class.std::move_iterator" = type { %"class.std::vector.3"* }
%"class.std::allocator.10" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.31" = type { %"class.std::vector.8"* }
%"class.std::move_iterator.32" = type { %"struct.Solve::edge"* }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %class.anon }
%"struct.__gnu_cxx::__ops::_Val_comp_iter" = type { %class.anon }
%"struct.std::_Bit_const_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"class.std::allocator.20" = type { i8 }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"class.std::allocator.24" = type { i8 }
%"class.__gnu_cxx::new_allocator.25" = type { i8 }
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"struct.std::iterator" = type { i8 }
%"class.std::move_iterator.33" = type { %"class.std::vector.18"* }
%"class.std::move_iterator.34" = type { i32* }

$_ZSt5fixedRSt8ios_base = comdat any

$_ZSt12setprecisioni = comdat any

$_ZN5SolveC2Ev = comdat any

$_ZN5Solve5solveEv = comdat any

$_ZN5SolveD2Ev = comdat any

$_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_ = comdat any

$_ZStaNRSt13_Ios_FmtflagsS_ = comdat any

$_ZStcoSt13_Ios_Fmtflags = comdat any

$_ZStoRRSt13_Ios_FmtflagsS_ = comdat any

$_ZStanSt13_Ios_FmtflagsS_ = comdat any

$_ZStorSt13_Ios_FmtflagsS_ = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEEC2Ev = comdat any

$_ZN5Solve5inputEv = comdat any

$_ZN3SCCC2Ei = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN3SCC8add_edgeEii = comdat any

$_ZN5Solve4convEii = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZN3SCC3sccEv = comdat any

$_ZN3SCCD2Ev = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6resizeEmRKS5_ = comdat any

$_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2Ev = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2EmRKS4_ = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEZNS2_5inputEvEUlS3_S3_E_EvT_SA_T0_ = comdat any

$_ZSt5beginISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_5beginEERT_ = comdat any

$_ZSt3endISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_3endEERT_ = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_ = comdat any

$_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEET_S9_S9_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE = comdat any

$_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEmRSA_ = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE3endEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2IPS7_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISF_SE_EE7__valueESB_E6__typeEEE = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE15_M_erase_at_endEPS5_ = comdat any

$_ZN9__gnu_cxxmiIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_ = comdat any

$_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6cbeginEv = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EEmRKS5_ = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS9_ = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS5_ = comdat any

$_ZN9__gnu_cxxmiIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_ = comdat any

$_ZSt22__uninitialized_move_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13move_backwardIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET0_T_S9_S8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv = comdat any

$_ZSt4fillIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEmS6_S6_ET_S8_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_ = comdat any

$_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE13_M_deallocateEPS6_m = comdat any

$_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIN5Solve4edgeESaIS3_EEEE17_S_select_on_copyERKS6_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EmRKS5_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEPS6_S6_ET0_T_SE_SD_RSaIT1_E = comdat any

$_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv = comdat any

$_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE37select_on_container_copy_constructionERKS5_ = comdat any

$_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEED2Ev = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEPS6_ET0_T_SE_SD_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEPS8_EET0_T_SG_SF_ = comdat any

$_ZN9__gnu_cxxneIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_ = comdat any

$_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEppEv = comdat any

$_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EEEvT_S6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv = comdat any

$_ZSt7forwardIRKSt6vectorIN5Solve4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2ERKS3_ = comdat any

$_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5Solve4edgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaIN5Solve4edgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorIN5Solve4edgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Solve4edgeESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EED2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Solve4edgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN5Solve4edgeEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIN5Solve4edgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Solve4edgeEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEED2Ev = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt13__copy_move_aILb0EPKN5Solve4edgeEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Solve4edgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIPN5Solve4edgeELb0EE7_S_baseES2_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt16allocator_traitsISaIN5Solve4edgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE10deallocateEPS2_m = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Solve4edgeESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorIN5Solve4edgeESaIS2_EEEvPT_ = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Solve4edgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZSt8_DestroyIPN5Solve4edgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Solve4edgeEEEvT_S5_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_S7_ET0_T_SB_SA_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEESt13move_iteratorIT_ES9_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_ET0_T_SB_SA_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIS3_IN5Solve4edgeESaIS5_EESaIS7_EEESA_EET0_T_SD_SC_ = comdat any

$_ZStneIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEbRKSt13move_iteratorIT_ESC_ = comdat any

$_ZSt10_ConstructISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEJS6_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEPT_RS7_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEppEv = comdat any

$_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvT_S8_ = comdat any

$_ZSteqIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEbRKSt13move_iteratorIT_ESC_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2EOS5_ = comdat any

$_ZSt4moveIRSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EOS6_ = comdat any

$_ZSt4moveIRSaISt6vectorIN5Solve4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2EOS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_ = comdat any

$_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_ = comdat any

$_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIS2_IN5Solve4edgeESaIS4_EESaIS6_EEEEvT_SA_ = comdat any

$_ZSt8_DestroyISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvPT_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEC2ES7_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_ = comdat any

$_ZSt12__miter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIS3_IN5Solve4edgeESaIS5_EESaIS7_EESA_EET0_T_SC_SB_ = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEaSEOS5_ = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13get_allocatorEv = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS4_ = comdat any

$_ZSt15__alloc_on_moveISaISt6vectorIN5Solve4edgeESaIS2_EEEEvRT_S7_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2ERKS5_ = comdat any

$_ZSt18__do_alloc_on_moveISaISt6vectorIN5Solve4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EELb0EE7_S_baseES7_ = comdat any

$_ZSt8__fill_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SD_RKSA_ = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEaSERKS5_ = comdat any

$_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE8capacityEv = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_ = comdat any

$_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEENS1_IPS6_SA_EEET0_T_SF_SE_ = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv = comdat any

$_ZSt4copyIPSt6vectorIN5Solve4edgeESaIS2_EES5_ET0_T_S7_S6_ = comdat any

$_ZSt22__uninitialized_copy_aIPSt6vectorIN5Solve4edgeESaIS2_EES5_S4_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEEvT_SB_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEEEvT_SD_ = comdat any

$_ZN9__gnu_cxxneIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEENS1_IPS6_SA_EEET1_T0_SF_SE_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESD_ = comdat any

$_ZSt13__copy_move_aILb0EPKSt6vectorIN5Solve4edgeESaIS2_EEPS4_ET1_T0_S9_S8_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt6vectorIN5Solve4edgeESaIS5_EEPS7_EET0_T_SC_SB_ = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EEaSERKS3_ = comdat any

$_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_ = comdat any

$_ZSt4copyIPN5Solve4edgeES2_ET0_T_S4_S3_ = comdat any

$_ZSt22__uninitialized_copy_aIPN5Solve4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPN5Solve4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPN5Solve4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb0EPN5Solve4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt18uninitialized_copyIPN5Solve4edgeES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Solve4edgeES4_EET0_T_S6_S5_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESB_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESA_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb0EE7_S_baseESB_ = comdat any

$_ZSt14__copy_move_a2ILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_ = comdat any

$_ZSt12__miter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_ = comdat any

$_ZSt13__copy_move_aILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN5Solve4edgeESaIS5_EES8_EET0_T_SA_S9_ = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIN5Solve4edgeESaIS2_EELb0EE7_S_baseES5_ = comdat any

$_ZSt18uninitialized_copyIPSt6vectorIN5Solve4edgeESaIS2_EES5_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5Solve4edgeESaIS4_EES7_EET0_T_S9_S8_ = comdat any

$_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJRS4_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRSt6vectorIN5Solve4edgeESaIS2_EEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEmS6_ET_S8_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIS2_IN5Solve4edgeESaIS4_EESaIS6_EEmS8_EET_SA_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEJRKS6_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEOT_RNSt16remove_referenceIS9_E4typeE = comdat any

$_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE8max_sizeERKS7_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE8allocateERS7_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8allocateEmPKv = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESt13move_iteratorIS7_EET0_T_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE10deallocateERS7_PS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE10deallocateEPS7_m = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS8_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEEC2Ev = comdat any

$_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE21_M_default_initializeEm = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIN5Solve4edgeESaIS2_EEmS4_ET_S6_T0_RSaIT1_E = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIN5Solve4edgeESaIS2_EEmET_S6_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN5Solve4edgeESaIS4_EEmEET_S8_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Solve4edgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEEC2Ev = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Solve4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Solve4edgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Solve4edgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Solve4edgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Solve4edgeEEE8max_sizeERKS2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Solve4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Solve4edgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Solve4edgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Solve4edgeEES5_EET0_T_S8_S7_ = comdat any

$_ZSt4copyISt13move_iteratorIPN5Solve4edgeEES3_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPN5Solve4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt13__copy_move_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Solve4edgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPN5Solve4edgeEELb1EE7_S_baseES4_ = comdat any

$_ZNKSt13move_iteratorIPN5Solve4edgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Solve4edgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE7destroyIS2_EEvPT_ = comdat any

$_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_15_Iter_comp_iterIT_EES6_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_T1_ = comdat any

$_ZSt4__lgl = comdat any

$_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_ = comdat any

$_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_ = comdat any

$_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_T0_ = comdat any

$_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_ = comdat any

$_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_ = comdat any

$_ZN9__gnu_cxxltIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_ = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_ = comdat any

$_ZZN5Solve5inputEvENKUlNS_4edgeES0_E_clES0_S0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_SD_T0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_SD_T0_ = comdat any

$_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_ = comdat any

$_ZSt4swapIN5Solve4edgeEEvRT_S3_ = comdat any

$_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_ = comdat any

$_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_ = comdat any

$_ZN9__gnu_cxxeqIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ = comdat any

$_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops14_Val_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_ = comdat any

$_ZN9__gnu_cxx5__ops15__val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS6_EE = comdat any

$_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIN5Solve4edgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_ = comdat any

$_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclIS3_NS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEEEEbRT_T0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_ = comdat any

$_ZNKSt6vectorIN5Solve4edgeESaIS1_EE6cbeginEv = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_ = comdat any

$_ZN9__gnu_cxxmiIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ = comdat any

$_ZNSt6vectorIN5Solve4edgeESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ = comdat any

$_ZSt8__uniqueIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops19_Iter_equal_to_iterEET_SB_SB_T0_ = comdat any

$_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv = comdat any

$_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops19_Iter_equal_to_iterEET_SB_SB_T0_ = comdat any

$_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPN5Solve4edgeESt6vectorIS5_SaIS5_EEEESA_EEbT_T0_ = comdat any

$_ZNK5Solve4edgeeqERKS0_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIbSaIbEEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm = comdat any

$_ZNSt6vectorIbSaIbEE6resizeEmb = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIbSaIbEED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEEC2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev = comdat any

$_ZNSaImEC2Ev = comdat any

$_ZNSt13_Bit_iteratorC2Ev = comdat any

$_ZNSaImED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv = comdat any

$_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZNKSt6vectorIbSaIbEE4sizeEv = comdat any

$_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator = comdat any

$_ZNSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNKSt13_Bit_iteratorplEl = comdat any

$_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratormRKb = comdat any

$_ZNSt6vectorIbSaIbEE3endEv = comdat any

$_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator = comdat any

$_ZStmiRKSt18_Bit_iterator_baseS1_ = comdat any

$_ZNKSt6vectorIbSaIbEE3endEv = comdat any

$_ZNKSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNSt13_Bit_iteratorpLEl = comdat any

$_ZNSt18_Bit_iterator_base7_M_incrEl = comdat any

$_ZNKSt6vectorIbSaIbEE6cbeginEv = comdat any

$_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb = comdat any

$_ZNKSt19_Bit_const_iterator13_M_const_castEv = comdat any

$_ZNKSt6vectorIbSaIbEE8capacityEv = comdat any

$_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_ = comdat any

$_ZSt4fillSt13_Bit_iteratorS_RKb = comdat any

$_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc = comdat any

$_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm = comdat any

$_ZSt11__addressofImEPT_RS0_ = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator = comdat any

$_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_ = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm = comdat any

$_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv = comdat any

$_ZNSt19_Bit_const_iteratorC2EPmj = comdat any

$_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_ = comdat any

$_ZNSt13_Bit_iteratormmEv = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt14_Bit_referenceaSERKS_ = comdat any

$_ZNSt18_Bit_iterator_base12_M_bump_downEv = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZNSt14_Bit_referenceaSEb = comdat any

$_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_ = comdat any

$_ZSt4fillIPmiEvT_S1_RKT0_ = comdat any

$_ZSt14__fill_bvectorSt13_Bit_iteratorS_b = comdat any

$_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_ = comdat any

$_ZNKSt18_Bit_iterator_baseneERKS_ = comdat any

$_ZNSt13_Bit_iteratorppEv = comdat any

$_ZNKSt18_Bit_iterator_baseeqERKS_ = comdat any

$_ZNSt18_Bit_iterator_base10_M_bump_upEv = comdat any

$_ZNKSt6vectorIbSaIbEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_ = comdat any

$_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaImEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZSt4copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_ = comdat any

$_ZNKSt19_Bit_const_iteratordeEv = comdat any

$_ZNSt19_Bit_const_iteratorppEv = comdat any

$_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_ = comdat any

$_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNSt6vectorIiSaIiEE5clearEv = comdat any

$_ZNSt6vectorIbSaIbEEixEm = comdat any

$_ZN3SCC3dfsEi = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZN3SCC4rdfsEii = comdat any

$_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEED2Ev = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"vector<bool>::_M_fill_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s545954551.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0
@x.674 = common global i32 0
@y.675 = common global i32 0
@x.676 = common global i32 0
@y.677 = common global i32 0
@x.678 = common global i32 0
@y.679 = common global i32 0
@x.680 = common global i32 0
@y.681 = common global i32 0
@x.682 = common global i32 0
@y.683 = common global i32 0
@x.684 = common global i32 0
@y.685 = common global i32 0
@x.686 = common global i32 0
@y.687 = common global i32 0
@x.688 = common global i32 0
@y.689 = common global i32 0
@x.690 = common global i32 0
@y.691 = common global i32 0
@x.692 = common global i32 0
@y.693 = common global i32 0
@x.694 = common global i32 0
@y.695 = common global i32 0
@x.696 = common global i32 0
@y.697 = common global i32 0
@x.698 = common global i32 0
@y.699 = common global i32 0
@x.700 = common global i32 0
@y.701 = common global i32 0
@x.702 = common global i32 0
@y.703 = common global i32 0
@x.704 = common global i32 0
@y.705 = common global i32 0
@x.706 = common global i32 0
@y.707 = common global i32 0
@x.708 = common global i32 0
@y.709 = common global i32 0
@x.710 = common global i32 0
@y.711 = common global i32 0
@x.712 = common global i32 0
@y.713 = common global i32 0
@x.714 = common global i32 0
@y.715 = common global i32 0
@x.716 = common global i32 0
@y.717 = common global i32 0
@x.718 = common global i32 0
@y.719 = common global i32 0
@x.720 = common global i32 0
@y.721 = common global i32 0
@x.722 = common global i32 0
@y.723 = common global i32 0
@x.724 = common global i32 0
@y.725 = common global i32 0
@x.726 = common global i32 0
@y.727 = common global i32 0
@x.728 = common global i32 0
@y.729 = common global i32 0
@x.730 = common global i32 0
@y.731 = common global i32 0
@x.732 = common global i32 0
@y.733 = common global i32 0
@x.734 = common global i32 0
@y.735 = common global i32 0
@x.736 = common global i32 0
@y.737 = common global i32 0
@x.738 = common global i32 0
@y.739 = common global i32 0
@x.740 = common global i32 0
@y.741 = common global i32 0
@x.742 = common global i32 0
@y.743 = common global i32 0
@x.744 = common global i32 0
@y.745 = common global i32 0
@x.746 = common global i32 0
@y.747 = common global i32 0
@x.748 = common global i32 0
@y.749 = common global i32 0
@x.750 = common global i32 0
@y.751 = common global i32 0
@x.752 = common global i32 0
@y.753 = common global i32 0
@x.754 = common global i32 0
@y.755 = common global i32 0
@x.756 = common global i32 0
@y.757 = common global i32 0
@x.758 = common global i32 0
@y.759 = common global i32 0
@x.760 = common global i32 0
@y.761 = common global i32 0
@x.762 = common global i32 0
@y.763 = common global i32 0
@x.764 = common global i32 0
@y.765 = common global i32 0
@x.766 = common global i32 0
@y.767 = common global i32 0
@x.768 = common global i32 0
@y.769 = common global i32 0
@x.770 = common global i32 0
@y.771 = common global i32 0
@x.772 = common global i32 0
@y.773 = common global i32 0
@x.774 = common global i32 0
@y.775 = common global i32 0
@x.776 = common global i32 0
@y.777 = common global i32 0
@x.778 = common global i32 0
@y.779 = common global i32 0
@x.780 = common global i32 0
@y.781 = common global i32 0
@x.782 = common global i32 0
@y.783 = common global i32 0
@x.784 = common global i32 0
@y.785 = common global i32 0
@x.786 = common global i32 0
@y.787 = common global i32 0
@x.788 = common global i32 0
@y.789 = common global i32 0
@x.790 = common global i32 0
@y.791 = common global i32 0
@x.792 = common global i32 0
@y.793 = common global i32 0
@x.794 = common global i32 0
@y.795 = common global i32 0
@x.796 = common global i32 0
@y.797 = common global i32 0
@x.798 = common global i32 0
@y.799 = common global i32 0
@x.800 = common global i32 0
@y.801 = common global i32 0
@x.802 = common global i32 0
@y.803 = common global i32 0
@x.804 = common global i32 0
@y.805 = common global i32 0
@x.806 = common global i32 0
@y.807 = common global i32 0
@x.808 = common global i32 0
@y.809 = common global i32 0
@x.810 = common global i32 0
@y.811 = common global i32 0
@x.812 = common global i32 0
@y.813 = common global i32 0
@x.814 = common global i32 0
@y.815 = common global i32 0
@x.816 = common global i32 0
@y.817 = common global i32 0
@x.818 = common global i32 0
@y.819 = common global i32 0
@x.820 = common global i32 0
@y.821 = common global i32 0
@x.822 = common global i32 0
@y.823 = common global i32 0
@x.824 = common global i32 0
@y.825 = common global i32 0
@x.826 = common global i32 0
@y.827 = common global i32 0
@x.828 = common global i32 0
@y.829 = common global i32 0
@x.830 = common global i32 0
@y.831 = common global i32 0
@x.832 = common global i32 0
@y.833 = common global i32 0
@x.834 = common global i32 0
@y.835 = common global i32 0
@x.836 = common global i32 0
@y.837 = common global i32 0
@x.838 = common global i32 0
@y.839 = common global i32 0
@x.840 = common global i32 0
@y.841 = common global i32 0
@x.842 = common global i32 0
@y.843 = common global i32 0
@x.844 = common global i32 0
@y.845 = common global i32 0
@x.846 = common global i32 0
@y.847 = common global i32 0
@x.848 = common global i32 0
@y.849 = common global i32 0
@x.850 = common global i32 0
@y.851 = common global i32 0
@x.852 = common global i32 0
@y.853 = common global i32 0
@x.854 = common global i32 0
@y.855 = common global i32 0
@x.856 = common global i32 0
@y.857 = common global i32 0
@x.858 = common global i32 0
@y.859 = common global i32 0
@x.860 = common global i32 0
@y.861 = common global i32 0
@x.862 = common global i32 0
@y.863 = common global i32 0
@x.864 = common global i32 0
@y.865 = common global i32 0
@x.866 = common global i32 0
@y.867 = common global i32 0
@x.868 = common global i32 0
@y.869 = common global i32 0
@x.870 = common global i32 0
@y.871 = common global i32 0
@x.872 = common global i32 0
@y.873 = common global i32 0
@x.874 = common global i32 0
@y.875 = common global i32 0
@x.876 = common global i32 0
@y.877 = common global i32 0
@x.878 = common global i32 0
@y.879 = common global i32 0
@x.880 = common global i32 0
@y.881 = common global i32 0
@x.882 = common global i32 0
@y.883 = common global i32 0
@x.884 = common global i32 0
@y.885 = common global i32 0
@x.886 = common global i32 0
@y.887 = common global i32 0
@x.888 = common global i32 0
@y.889 = common global i32 0
@x.890 = common global i32 0
@y.891 = common global i32 0
@x.892 = common global i32 0
@y.893 = common global i32 0
@x.894 = common global i32 0
@y.895 = common global i32 0
@x.896 = common global i32 0
@y.897 = common global i32 0
@x.898 = common global i32 0
@y.899 = common global i32 0
@x.900 = common global i32 0
@y.901 = common global i32 0
@x.902 = common global i32 0
@y.903 = common global i32 0
@x.904 = common global i32 0
@y.905 = common global i32 0
@x.906 = common global i32 0
@y.907 = common global i32 0
@x.908 = common global i32 0
@y.909 = common global i32 0
@x.910 = common global i32 0
@y.911 = common global i32 0
@x.912 = common global i32 0
@y.913 = common global i32 0
@x.914 = common global i32 0
@y.915 = common global i32 0
@x.916 = common global i32 0
@y.917 = common global i32 0
@x.918 = common global i32 0
@y.919 = common global i32 0
@x.920 = common global i32 0
@y.921 = common global i32 0
@x.922 = common global i32 0
@y.923 = common global i32 0
@x.924 = common global i32 0
@y.925 = common global i32 0
@x.926 = common global i32 0
@y.927 = common global i32 0
@x.928 = common global i32 0
@y.929 = common global i32 0
@x.930 = common global i32 0
@y.931 = common global i32 0
@x.932 = common global i32 0
@y.933 = common global i32 0
@x.934 = common global i32 0
@y.935 = common global i32 0
@x.936 = common global i32 0
@y.937 = common global i32 0
@x.938 = common global i32 0
@y.939 = common global i32 0
@x.940 = common global i32 0
@y.941 = common global i32 0
@x.942 = common global i32 0
@y.943 = common global i32 0
@x.944 = common global i32 0
@y.945 = common global i32 0
@x.946 = common global i32 0
@y.947 = common global i32 0
@x.948 = common global i32 0
@y.949 = common global i32 0
@x.950 = common global i32 0
@y.951 = common global i32 0
@x.952 = common global i32 0
@y.953 = common global i32 0
@x.954 = common global i32 0
@y.955 = common global i32 0
@x.956 = common global i32 0
@y.957 = common global i32 0
@x.958 = common global i32 0
@y.959 = common global i32 0
@x.960 = common global i32 0
@y.961 = common global i32 0
@x.962 = common global i32 0
@y.963 = common global i32 0
@x.964 = common global i32 0
@y.965 = common global i32 0
@x.966 = common global i32 0
@y.967 = common global i32 0
@x.968 = common global i32 0
@y.969 = common global i32 0
@x.970 = common global i32 0
@y.971 = common global i32 0
@x.972 = common global i32 0
@y.973 = common global i32 0
@x.974 = common global i32 0
@y.975 = common global i32 0
@x.976 = common global i32 0
@y.977 = common global i32 0
@x.978 = common global i32 0
@y.979 = common global i32 0
@x.980 = common global i32 0
@y.981 = common global i32 0
@x.982 = common global i32 0
@y.983 = common global i32 0
@x.984 = common global i32 0
@y.985 = common global i32 0
@x.986 = common global i32 0
@y.987 = common global i32 0
@x.988 = common global i32 0
@y.989 = common global i32 0
@x.990 = common global i32 0
@y.991 = common global i32 0
@x.992 = common global i32 0
@y.993 = common global i32 0
@x.994 = common global i32 0
@y.995 = common global i32 0
@x.996 = common global i32 0
@y.997 = common global i32 0
@x.998 = common global i32 0
@y.999 = common global i32 0
@x.1000 = common global i32 0
@y.1001 = common global i32 0
@x.1002 = common global i32 0
@y.1003 = common global i32 0
@x.1004 = common global i32 0
@y.1005 = common global i32 0
@x.1006 = common global i32 0
@y.1007 = common global i32 0
@x.1008 = common global i32 0
@y.1009 = common global i32 0
@x.1010 = common global i32 0
@y.1011 = common global i32 0
@x.1012 = common global i32 0
@y.1013 = common global i32 0
@x.1014 = common global i32 0
@y.1015 = common global i32 0
@x.1016 = common global i32 0
@y.1017 = common global i32 0
@x.1018 = common global i32 0
@y.1019 = common global i32 0
@x.1020 = common global i32 0
@y.1021 = common global i32 0
@x.1022 = common global i32 0
@y.1023 = common global i32 0
@x.1024 = common global i32 0
@y.1025 = common global i32 0
@x.1026 = common global i32 0
@y.1027 = common global i32 0
@x.1028 = common global i32 0
@y.1029 = common global i32 0
@x.1030 = common global i32 0
@y.1031 = common global i32 0
@x.1032 = common global i32 0
@y.1033 = common global i32 0
@x.1034 = common global i32 0
@y.1035 = common global i32 0
@x.1036 = common global i32 0
@y.1037 = common global i32 0
@x.1038 = common global i32 0
@y.1039 = common global i32 0
@x.1040 = common global i32 0
@y.1041 = common global i32 0
@x.1042 = common global i32 0
@y.1043 = common global i32 0
@x.1044 = common global i32 0
@y.1045 = common global i32 0
@x.1046 = common global i32 0
@y.1047 = common global i32 0
@x.1048 = common global i32 0
@y.1049 = common global i32 0
@x.1050 = common global i32 0
@y.1051 = common global i32 0
@x.1052 = common global i32 0
@y.1053 = common global i32 0
@x.1054 = common global i32 0
@y.1055 = common global i32 0
@x.1056 = common global i32 0
@y.1057 = common global i32 0
@x.1058 = common global i32 0
@y.1059 = common global i32 0
@x.1060 = common global i32 0
@y.1061 = common global i32 0
@x.1062 = common global i32 0
@y.1063 = common global i32 0
@x.1064 = common global i32 0
@y.1065 = common global i32 0
@x.1066 = common global i32 0
@y.1067 = common global i32 0
@x.1068 = common global i32 0
@y.1069 = common global i32 0
@x.1070 = common global i32 0
@y.1071 = common global i32 0
@x.1072 = common global i32 0
@y.1073 = common global i32 0
@x.1074 = common global i32 0
@y.1075 = common global i32 0
@x.1076 = common global i32 0
@y.1077 = common global i32 0
@x.1078 = common global i32 0
@y.1079 = common global i32 0
@x.1080 = common global i32 0
@y.1081 = common global i32 0
@x.1082 = common global i32 0
@y.1083 = common global i32 0
@x.1084 = common global i32 0
@y.1085 = common global i32 0
@x.1086 = common global i32 0
@y.1087 = common global i32 0
@x.1088 = common global i32 0
@y.1089 = common global i32 0
@x.1090 = common global i32 0
@y.1091 = common global i32 0
@x.1092 = common global i32 0
@y.1093 = common global i32 0
@x.1094 = common global i32 0
@y.1095 = common global i32 0
@x.1096 = common global i32 0
@y.1097 = common global i32 0
@x.1098 = common global i32 0
@y.1099 = common global i32 0
@x.1100 = common global i32 0
@y.1101 = common global i32 0
@x.1102 = common global i32 0
@y.1103 = common global i32 0
@x.1104 = common global i32 0
@y.1105 = common global i32 0
@x.1106 = common global i32 0
@y.1107 = common global i32 0
@x.1108 = common global i32 0
@y.1109 = common global i32 0
@x.1110 = common global i32 0
@y.1111 = common global i32 0
@x.1112 = common global i32 0
@y.1113 = common global i32 0
@x.1114 = common global i32 0
@y.1115 = common global i32 0
@x.1116 = common global i32 0
@y.1117 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca %"struct.std::_Setprecision", align 4
  %3 = alloca %class.Solve, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store i32 0, i32* %1, align 4
  %6 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %9
  %11 = bitcast i8* %10 to %"class.std::basic_ios"*
  %12 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %11, %"class.std::basic_ostream"* null)
  %13 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %14 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSt8ios_baseS0_E(%"class.std::basic_ostream"* @_ZSt4cout, %"class.std::ios_base"* (%"class.std::ios_base"*)* @_ZSt5fixedRSt8ios_base)
  %15 = call i32 @_ZSt12setprecisioni(i32 10)
  %16 = getelementptr inbounds %"struct.std::_Setprecision", %"struct.std::_Setprecision"* %2, i32 0, i32 0
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.std::_Setprecision", %"struct.std::_Setprecision"* %2, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St13_Setprecision(%"class.std::basic_ostream"* dereferenceable(272) %14, i32 %18)
  %20 = bitcast %class.Solve* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 64, i32 8, i1 false)
  call void @_ZN5SolveC2Ev(%class.Solve* %3) #3
  invoke void @_ZN5Solve5solveEv(%class.Solve* %3)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %0
  call void @_ZN5SolveD2Ev(%class.Solve* %3) #3
  ret i32 0

; <label>:22:                                     ; preds = %0
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %4, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %5, align 4
  call void @_ZN5SolveD2Ev(%class.Solve* %3) #3
  br label %26

; <label>:26:                                     ; preds = %22
  %27 = load i8*, i8** %4, align 8
  %28 = load i32, i32* %5, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St13_Setprecision(%"class.std::basic_ostream"* dereferenceable(272), i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSt8ios_baseS0_E(%"class.std::basic_ostream"*, %"class.std::ios_base"* (%"class.std::ios_base"*)*) #1

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(216) %"class.std::ios_base"* @_ZSt5fixedRSt8ios_base(%"class.std::ios_base"* dereferenceable(216)) #0 comdat {
  %2 = alloca %"class.std::ios_base"*, align 8
  store %"class.std::ios_base"* %0, %"class.std::ios_base"** %2, align 8
  %3 = load %"class.std::ios_base"*, %"class.std::ios_base"** %2, align 8
  %4 = call i32 @_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_(%"class.std::ios_base"* %3, i32 4, i32 260)
  %5 = load %"class.std::ios_base"*, %"class.std::ios_base"** %2, align 8
  ret %"class.std::ios_base"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZSt12setprecisioni(i32) #5 comdat {
  %2 = alloca %"struct.std::_Setprecision", align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.std::_Setprecision", %"struct.std::_Setprecision"* %2, i32 0, i32 0
  %5 = load i32, i32* %3, align 4
  store i32 %5, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.std::_Setprecision", %"struct.std::_Setprecision"* %2, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5SolveC2Ev(%class.Solve*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Solve*, align 8
  store %class.Solve* %0, %class.Solve** %2, align 8
  %3 = load %class.Solve*, %class.Solve** %2, align 8
  %4 = getelementptr inbounds %class.Solve, %class.Solve* %3, i32 0, i32 2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %4) #3
  %5 = getelementptr inbounds %class.Solve, %class.Solve* %3, i32 0, i32 3
  call void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEC2Ev(%"class.std::vector"* %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Solve5solveEv(%class.Solve*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Solve*, align 8
  %3 = alloca %struct.SCC, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"struct.Solve::edge", align 4
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca i32, align 4
  store %class.Solve* %0, %class.Solve** %2, align 8
  %13 = load %class.Solve*, %class.Solve** %2, align 8
  call void @_ZN5Solve5inputEv(%class.Solve* %13)
  %14 = getelementptr inbounds %class.Solve, %class.Solve* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = mul nsw i32 %15, 4
  call void @_ZN3SCCC2Ei(%struct.SCC* %3, i32 %16)
  store i32 0, i32* %4, align 4
  br label %17

; <label>:17:                                     ; preds = %327, %1
  %18 = load i32, i32* %4, align 4
  %19 = getelementptr inbounds %class.Solve, %class.Solve* %13, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %22, label %328

; <label>:22:                                     ; preds = %17
  %23 = load i32, i32* @x.14
  %24 = load i32, i32* @y.15
  %25 = sub i32 %23, 1043561505
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 1043561505
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %536

; <label>:37:                                     ; preds = %22, %536
  store i32 0, i32* %5, align 4
  %38 = load i32, i32* @x.14
  %39 = load i32, i32* @y.15
  %40 = add i32 %38, 1109343812
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1109343812
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %536

; <label>:52:                                     ; preds = %37
  br label %53

; <label>:53:                                     ; preds = %266, %52
  %54 = load i32, i32* %5, align 4
  %55 = icmp slt i32 %54, 4
  br i1 %55, label %56, label %267

; <label>:56:                                     ; preds = %53
  %57 = getelementptr inbounds %class.Solve, %class.Solve* %13, i32 0, i32 3
  %58 = load i32, i32* %4, align 4
  %59 = sext i32 %58 to i64
  %60 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %57, i64 %59) #3
  %61 = load i32, i32* %5, align 4
  %62 = sext i32 %61 to i64
  %63 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %60, i64 %62) #3
  store %"class.std::vector.8"* %63, %"class.std::vector.8"** %6, align 8
  %64 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %65 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %64) #3
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %65, %"struct.Solve::edge"** %66, align 8
  %67 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %68 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %67) #3
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Solve::edge"* %68, %"struct.Solve::edge"** %69, align 8
  br label %70

; <label>:70:                                     ; preds = %212, %56
  %71 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8) #3
  br i1 %71, label %72, label %217

; <label>:72:                                     ; preds = %70
  %73 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %74 = bitcast %"struct.Solve::edge"* %9 to i8*
  %75 = bitcast %"struct.Solve::edge"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 4, i1 false)
  %76 = load i32, i32* %4, align 4
  %77 = load i32, i32* %5, align 4
  %78 = invoke i32 @_ZN5Solve4convEii(%class.Solve* %13, i32 %76, i32 %77)
          to label %79 unwind label %213

; <label>:79:                                     ; preds = %72
  %80 = load i32, i32* @x.14
  %81 = load i32, i32* @y.15
  %82 = add i32 %80, 1135239307
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 1135239307
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %537

; <label>:94:                                     ; preds = %79, %537
  %95 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %9, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %9, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* @x.14
  %100 = load i32, i32* @y.15
  %101 = sub i32 %99, -74118692
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -74118692
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %537

; <label>:125:                                    ; preds = %94
  %126 = invoke i32 @_ZN5Solve4convEii(%class.Solve* %13, i32 %96, i32 %98)
          to label %127 unwind label %213

; <label>:127:                                    ; preds = %125
  invoke void @_ZN3SCC8add_edgeEii(%struct.SCC* %3, i32 %78, i32 %126)
          to label %128 unwind label %213

; <label>:128:                                    ; preds = %127
  %129 = load i32, i32* @x.14
  %130 = load i32, i32* @y.15
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %542

; <label>:142:                                    ; preds = %128, %542
  %143 = load i32, i32* @x.14
  %144 = load i32, i32* @y.15
  %145 = sub i32 %143, -1052245219
  %146 = sub i32 %145, 1
  %147 = add i32 %146, -1052245219
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %542

; <label>:169:                                    ; preds = %142
  br label %170

; <label>:170:                                    ; preds = %169
  %171 = load i32, i32* @x.14
  %172 = load i32, i32* @y.15
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %543

; <label>:184:                                    ; preds = %170, %543
  %185 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %186 = load i32, i32* @x.14
  %187 = load i32, i32* @y.15
  %188 = sub i32 %186, -345905792
  %189 = sub i32 %188, 1
  %190 = add i32 %189, -345905792
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  br i1 %210, label %212, label %543

; <label>:212:                                    ; preds = %184
  br label %70

; <label>:213:                                    ; preds = %403, %401, %398, %396, %358, %127, %125, %72
  %214 = landingpad { i8*, i32 }
          cleanup
  %215 = extractvalue { i8*, i32 } %214, 0
  store i8* %215, i8** %10, align 8
  %216 = extractvalue { i8*, i32 } %214, 1
  store i32 %216, i32* %11, align 4
  call void @_ZN3SCCD2Ev(%struct.SCC* %3) #3
  br label %502

; <label>:217:                                    ; preds = %70
  br label %218

; <label>:218:                                    ; preds = %217
  %219 = load i32, i32* @x.14
  %220 = load i32, i32* @y.15
  %221 = sub i32 %219, 460364049
  %222 = sub i32 %221, 1
  %223 = add i32 %222, 460364049
  %224 = sub i32 %219, 1
  %225 = mul i32 %219, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %220, 10
  %229 = and i1 %227, %228
  %230 = xor i1 %227, %228
  %231 = or i1 %229, %230
  %232 = or i1 %227, %228
  br i1 %231, label %233, label %545

; <label>:233:                                    ; preds = %218, %545
  %234 = load i32, i32* %5, align 4
  %235 = sub i32 0, %234
  %236 = sub i32 0, 1
  %237 = add i32 %235, %236
  %238 = sub i32 0, %237
  %239 = add nsw i32 %234, 1
  store i32 %238, i32* %5, align 4
  %240 = load i32, i32* @x.14
  %241 = load i32, i32* @y.15
  %242 = sub i32 %240, -1194434460
  %243 = sub i32 %242, 1
  %244 = add i32 %243, -1194434460
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = xor i1 %248, true
  %251 = xor i1 %249, true
  %252 = xor i1 false, true
  %253 = and i1 %250, false
  %254 = and i1 %248, %252
  %255 = and i1 %251, false
  %256 = and i1 %249, %252
  %257 = or i1 %253, %254
  %258 = or i1 %255, %256
  %259 = xor i1 %257, %258
  %260 = or i1 %250, %251
  %261 = xor i1 %260, true
  %262 = or i1 false, %252
  %263 = and i1 %261, %262
  %264 = or i1 %259, %263
  %265 = or i1 %248, %249
  br i1 %264, label %266, label %545

; <label>:266:                                    ; preds = %233
  br label %53

; <label>:267:                                    ; preds = %53
  br label %268

; <label>:268:                                    ; preds = %267
  %269 = load i32, i32* @x.14
  %270 = load i32, i32* @y.15
  %271 = sub i32 0, 1
  %272 = add i32 %269, %271
  %273 = sub i32 %269, 1
  %274 = mul i32 %269, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %270, 10
  %278 = xor i1 %276, true
  %279 = xor i1 %277, true
  %280 = xor i1 false, true
  %281 = and i1 %278, false
  %282 = and i1 %276, %280
  %283 = and i1 %279, false
  %284 = and i1 %277, %280
  %285 = or i1 %281, %282
  %286 = or i1 %283, %284
  %287 = xor i1 %285, %286
  %288 = or i1 %278, %279
  %289 = xor i1 %288, true
  %290 = or i1 false, %280
  %291 = and i1 %289, %290
  %292 = or i1 %287, %291
  %293 = or i1 %276, %277
  br i1 %292, label %294, label %590

; <label>:294:                                    ; preds = %268, %590
  %295 = load i32, i32* %4, align 4
  %296 = sub i32 0, %295
  %297 = sub i32 0, 1
  %298 = add i32 %296, %297
  %299 = sub i32 0, %298
  %300 = add nsw i32 %295, 1
  store i32 %299, i32* %4, align 4
  %301 = load i32, i32* @x.14
  %302 = load i32, i32* @y.15
  %303 = sub i32 %301, -932047491
  %304 = sub i32 %303, 1
  %305 = add i32 %304, -932047491
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = xor i1 %309, true
  %312 = xor i1 %310, true
  %313 = xor i1 true, true
  %314 = and i1 %311, true
  %315 = and i1 %309, %313
  %316 = and i1 %312, true
  %317 = and i1 %310, %313
  %318 = or i1 %314, %315
  %319 = or i1 %316, %317
  %320 = xor i1 %318, %319
  %321 = or i1 %311, %312
  %322 = xor i1 %321, true
  %323 = or i1 true, %313
  %324 = and i1 %322, %323
  %325 = or i1 %320, %324
  %326 = or i1 %309, %310
  br i1 %325, label %327, label %590

; <label>:327:                                    ; preds = %294
  br label %17

; <label>:328:                                    ; preds = %17
  %329 = load i32, i32* @x.14
  %330 = load i32, i32* @y.15
  %331 = add i32 %329, -805103081
  %332 = sub i32 %331, 1
  %333 = sub i32 %332, -805103081
  %334 = sub i32 %329, 1
  %335 = mul i32 %329, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %330, 10
  %339 = and i1 %337, %338
  %340 = xor i1 %337, %338
  %341 = or i1 %339, %340
  %342 = or i1 %337, %338
  br i1 %341, label %343, label %633

; <label>:343:                                    ; preds = %328, %633
  %344 = load i32, i32* @x.14
  %345 = load i32, i32* @y.15
  %346 = add i32 %344, 1502664395
  %347 = sub i32 %346, 1
  %348 = sub i32 %347, 1502664395
  %349 = sub i32 %344, 1
  %350 = mul i32 %344, %348
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %345, 10
  %354 = and i1 %352, %353
  %355 = xor i1 %352, %353
  %356 = or i1 %354, %355
  %357 = or i1 %352, %353
  br i1 %356, label %358, label %633

; <label>:358:                                    ; preds = %343
  %359 = invoke i32 @_ZN3SCC3sccEv(%struct.SCC* %3)
          to label %360 unwind label %213

; <label>:360:                                    ; preds = %358
  %361 = load i32, i32* @x.14
  %362 = load i32, i32* @y.15
  %363 = sub i32 %361, 93615295
  %364 = sub i32 %363, 1
  %365 = add i32 %364, 93615295
  %366 = sub i32 %361, 1
  %367 = mul i32 %361, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %362, 10
  %371 = and i1 %369, %370
  %372 = xor i1 %369, %370
  %373 = or i1 %371, %372
  %374 = or i1 %369, %370
  br i1 %373, label %375, label %634

; <label>:375:                                    ; preds = %360, %634
  store i32 %359, i32* %12, align 4
  %376 = load i32, i32* %12, align 4
  %377 = getelementptr inbounds %class.Solve, %class.Solve* %13, i32 0, i32 0
  %378 = load i32, i32* %377, align 8
  %379 = mul nsw i32 4, %378
  %380 = icmp eq i32 %376, %379
  %381 = load i32, i32* @x.14
  %382 = load i32, i32* @y.15
  %383 = add i32 %381, -176972645
  %384 = sub i32 %383, 1
  %385 = sub i32 %384, -176972645
  %386 = sub i32 %381, 1
  %387 = mul i32 %381, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %382, 10
  %391 = and i1 %389, %390
  %392 = xor i1 %389, %390
  %393 = or i1 %391, %392
  %394 = or i1 %389, %390
  br i1 %393, label %395, label %634

; <label>:395:                                    ; preds = %375
  br i1 %380, label %396, label %401

; <label>:396:                                    ; preds = %395
  %397 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0))
          to label %398 unwind label %213

; <label>:398:                                    ; preds = %396
  %399 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %397, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %400 unwind label %213

; <label>:400:                                    ; preds = %398
  br label %460

; <label>:401:                                    ; preds = %395
  %402 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0))
          to label %403 unwind label %213

; <label>:403:                                    ; preds = %401
  %404 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %402, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %405 unwind label %213

; <label>:405:                                    ; preds = %403
  %406 = load i32, i32* @x.14
  %407 = load i32, i32* @y.15
  %408 = sub i32 %406, -1272938190
  %409 = sub i32 %408, 1
  %410 = add i32 %409, -1272938190
  %411 = sub i32 %406, 1
  %412 = mul i32 %406, %410
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %407, 10
  %416 = xor i1 %414, true
  %417 = xor i1 %415, true
  %418 = xor i1 false, true
  %419 = and i1 %416, false
  %420 = and i1 %414, %418
  %421 = and i1 %417, false
  %422 = and i1 %415, %418
  %423 = or i1 %419, %420
  %424 = or i1 %421, %422
  %425 = xor i1 %423, %424
  %426 = or i1 %416, %417
  %427 = xor i1 %426, true
  %428 = or i1 false, %418
  %429 = and i1 %427, %428
  %430 = or i1 %425, %429
  %431 = or i1 %414, %415
  br i1 %430, label %432, label %659

; <label>:432:                                    ; preds = %405, %659
  %433 = load i32, i32* @x.14
  %434 = load i32, i32* @y.15
  %435 = add i32 %433, 139827638
  %436 = sub i32 %435, 1
  %437 = sub i32 %436, 139827638
  %438 = sub i32 %433, 1
  %439 = mul i32 %433, %437
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %434, 10
  %443 = xor i1 %441, true
  %444 = xor i1 %442, true
  %445 = xor i1 false, true
  %446 = and i1 %443, false
  %447 = and i1 %441, %445
  %448 = and i1 %444, false
  %449 = and i1 %442, %445
  %450 = or i1 %446, %447
  %451 = or i1 %448, %449
  %452 = xor i1 %450, %451
  %453 = or i1 %443, %444
  %454 = xor i1 %453, true
  %455 = or i1 false, %445
  %456 = and i1 %454, %455
  %457 = or i1 %452, %456
  %458 = or i1 %441, %442
  br i1 %457, label %459, label %659

; <label>:459:                                    ; preds = %432
  br label %460

; <label>:460:                                    ; preds = %459, %400
  %461 = load i32, i32* @x.14
  %462 = load i32, i32* @y.15
  %463 = sub i32 0, 1
  %464 = add i32 %461, %463
  %465 = sub i32 %461, 1
  %466 = mul i32 %461, %464
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %462, 10
  %470 = and i1 %468, %469
  %471 = xor i1 %468, %469
  %472 = or i1 %470, %471
  %473 = or i1 %468, %469
  br i1 %472, label %474, label %660

; <label>:474:                                    ; preds = %460, %660
  call void @_ZN3SCCD2Ev(%struct.SCC* %3) #3
  %475 = load i32, i32* @x.14
  %476 = load i32, i32* @y.15
  %477 = add i32 %475, 332882040
  %478 = sub i32 %477, 1
  %479 = sub i32 %478, 332882040
  %480 = sub i32 %475, 1
  %481 = mul i32 %475, %479
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %476, 10
  %485 = xor i1 %483, true
  %486 = xor i1 %484, true
  %487 = xor i1 false, true
  %488 = and i1 %485, false
  %489 = and i1 %483, %487
  %490 = and i1 %486, false
  %491 = and i1 %484, %487
  %492 = or i1 %488, %489
  %493 = or i1 %490, %491
  %494 = xor i1 %492, %493
  %495 = or i1 %485, %486
  %496 = xor i1 %495, true
  %497 = or i1 false, %487
  %498 = and i1 %496, %497
  %499 = or i1 %494, %498
  %500 = or i1 %483, %484
  br i1 %499, label %501, label %660

; <label>:501:                                    ; preds = %474
  ret void

; <label>:502:                                    ; preds = %213
  %503 = load i32, i32* @x.14
  %504 = load i32, i32* @y.15
  %505 = sub i32 0, 1
  %506 = add i32 %503, %505
  %507 = sub i32 %503, 1
  %508 = mul i32 %503, %506
  %509 = urem i32 %508, 2
  %510 = icmp eq i32 %509, 0
  %511 = icmp slt i32 %504, 10
  %512 = and i1 %510, %511
  %513 = xor i1 %510, %511
  %514 = or i1 %512, %513
  %515 = or i1 %510, %511
  br i1 %514, label %516, label %661

; <label>:516:                                    ; preds = %502, %661
  %517 = load i8*, i8** %10, align 8
  %518 = load i32, i32* %11, align 4
  %519 = insertvalue { i8*, i32 } undef, i8* %517, 0
  %520 = insertvalue { i8*, i32 } %519, i32 %518, 1
  %521 = load i32, i32* @x.14
  %522 = load i32, i32* @y.15
  %523 = add i32 %521, -615726071
  %524 = sub i32 %523, 1
  %525 = sub i32 %524, -615726071
  %526 = sub i32 %521, 1
  %527 = mul i32 %521, %525
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %522, 10
  %531 = and i1 %529, %530
  %532 = xor i1 %529, %530
  %533 = or i1 %531, %532
  %534 = or i1 %529, %530
  br i1 %533, label %535, label %661

; <label>:535:                                    ; preds = %516
  resume { i8*, i32 } %520

; <label>:536:                                    ; preds = %37, %22
  store i32 0, i32* %5, align 4
  br label %37

; <label>:537:                                    ; preds = %94, %79
  %538 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %9, i32 0, i32 0
  %539 = load i32, i32* %538, align 4
  %540 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %9, i32 0, i32 1
  %541 = load i32, i32* %540, align 4
  br label %94

; <label>:542:                                    ; preds = %142, %128
  br label %142

; <label>:543:                                    ; preds = %184, %170
  %544 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  br label %184

; <label>:545:                                    ; preds = %233, %218
  %546 = load i32, i32* %5, align 4
  %547 = sub i32 0, 2142330239
  %548 = sub i32 %547, %546
  %549 = add i32 %548, 2142330239
  %550 = sub i32 0, %546
  %551 = sub i32 0, %549
  %552 = sub i32 0, 1
  %553 = add i32 %551, %552
  %554 = sub i32 0, %553
  %555 = add i32 %549, 1
  %556 = sub i32 0, 1
  %557 = add i32 %546, %556
  %558 = sub i32 %546, 1
  %559 = mul i32 %557, 1
  %560 = shl i32 %546, 1
  %561 = add i32 0, -697828389
  %562 = sub i32 %561, %546
  %563 = sub i32 %562, -697828389
  %564 = sub i32 0, %546
  %565 = sub i32 0, 1
  %566 = sub i32 %563, %565
  %567 = add i32 %563, 1
  %568 = shl i32 %546, 1
  %569 = add i32 0, -1904279631
  %570 = sub i32 %569, %546
  %571 = sub i32 %570, -1904279631
  %572 = sub i32 0, %546
  %573 = add i32 %571, 1874147625
  %574 = add i32 %573, 1
  %575 = sub i32 %574, 1874147625
  %576 = add i32 %571, 1
  %577 = add i32 0, -1281375290
  %578 = sub i32 %577, %546
  %579 = sub i32 %578, -1281375290
  %580 = sub i32 0, %546
  %581 = sub i32 %579, -738412248
  %582 = add i32 %581, 1
  %583 = add i32 %582, -738412248
  %584 = add i32 %579, 1
  %585 = sub i32 0, %546
  %586 = sub i32 0, 1
  %587 = add i32 %585, %586
  %588 = sub i32 0, %587
  %589 = add nsw i32 %546, 1
  store i32 %588, i32* %5, align 4
  br label %233

; <label>:590:                                    ; preds = %294, %268
  %591 = load i32, i32* %4, align 4
  %592 = sub i32 0, 1
  %593 = add i32 %591, %592
  %594 = sub i32 %591, 1
  %595 = mul i32 %593, 1
  %596 = add i32 0, 1658615414
  %597 = sub i32 %596, %591
  %598 = sub i32 %597, 1658615414
  %599 = sub i32 0, %591
  %600 = sub i32 0, 1
  %601 = sub i32 %598, %600
  %602 = add i32 %598, 1
  %603 = sub i32 0, -2023386682
  %604 = sub i32 %603, %591
  %605 = add i32 %604, -2023386682
  %606 = sub i32 0, %591
  %607 = sub i32 0, %605
  %608 = sub i32 0, 1
  %609 = add i32 %607, %608
  %610 = sub i32 0, %609
  %611 = add i32 %605, 1
  %612 = sub i32 0, 1238713947
  %613 = sub i32 %612, %591
  %614 = add i32 %613, 1238713947
  %615 = sub i32 0, %591
  %616 = sub i32 0, 1
  %617 = sub i32 %614, %616
  %618 = add i32 %614, 1
  %619 = sub i32 0, 1
  %620 = add i32 %591, %619
  %621 = sub i32 %591, 1
  %622 = mul i32 %620, 1
  %623 = shl i32 %591, 1
  %624 = add i32 %591, 1749680713
  %625 = sub i32 %624, 1
  %626 = sub i32 %625, 1749680713
  %627 = sub i32 %591, 1
  %628 = mul i32 %626, 1
  %629 = add i32 %591, -1002006181
  %630 = add i32 %629, 1
  %631 = sub i32 %630, -1002006181
  %632 = add nsw i32 %591, 1
  store i32 %631, i32* %4, align 4
  br label %294

; <label>:633:                                    ; preds = %343, %328
  br label %343

; <label>:634:                                    ; preds = %375, %360
  store i32 %359, i32* %12, align 4
  %635 = load i32, i32* %12, align 4
  %636 = getelementptr inbounds %class.Solve, %class.Solve* %13, i32 0, i32 0
  %637 = load i32, i32* %636, align 8
  %638 = shl i32 4, %637
  %639 = sub i32 0, %637
  %640 = add i32 4, %639
  %641 = sub i32 4, %637
  %642 = mul i32 %640, %637
  %643 = sub i32 4, -281552696
  %644 = sub i32 %643, %637
  %645 = add i32 %644, -281552696
  %646 = sub i32 4, %637
  %647 = mul i32 %645, %637
  %648 = shl i32 4, %637
  %649 = shl i32 4, %637
  %650 = sub i32 0, 4
  %651 = add i32 0, %650
  %652 = sub i32 0, 4
  %653 = sub i32 %651, -1230930173
  %654 = add i32 %653, %637
  %655 = add i32 %654, -1230930173
  %656 = add i32 %651, %637
  %657 = mul nsw i32 4, %637
  %658 = icmp eq i32 %635, %657
  br label %375

; <label>:659:                                    ; preds = %432, %405
  br label %432

; <label>:660:                                    ; preds = %474, %460
  call void @_ZN3SCCD2Ev(%struct.SCC* %3) #3
  br label %474

; <label>:661:                                    ; preds = %516, %502
  %662 = load i8*, i8** %10, align 8
  %663 = load i32, i32* %11, align 4
  %664 = insertvalue { i8*, i32 } undef, i8* %662, 0
  %665 = insertvalue { i8*, i32 } %664, i32 %663, 1
  br label %516
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5SolveD2Ev(%class.Solve*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Solve*, align 8
  store %class.Solve* %0, %class.Solve** %2, align 8
  %3 = load %class.Solve*, %class.Solve** %2, align 8
  %4 = getelementptr inbounds %class.Solve, %class.Solve* %3, i32 0, i32 3
  call void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EED2Ev(%"class.std::vector"* %4) #3
  %5 = getelementptr inbounds %class.Solve, %class.Solve* %3, i32 0, i32 2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_(%"class.std::ios_base"*, i32, i32) #0 comdat align 2 {
  %4 = alloca %"class.std::ios_base"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %"class.std::ios_base"* %0, %"class.std::ios_base"** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %"class.std::ios_base"*, %"class.std::ios_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %7, align 4
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @_ZStcoSt13_Ios_Fmtflags(i32 %11)
  %13 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %8, i32 0, i32 3
  %14 = call dereferenceable(4) i32* @_ZStaNRSt13_Ios_FmtflagsS_(i32* dereferenceable(4) %13, i32 %12)
  %15 = load i32, i32* %5, align 4
  %16 = load i32, i32* %6, align 4
  %17 = call i32 @_ZStanSt13_Ios_FmtflagsS_(i32 %15, i32 %16)
  %18 = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %8, i32 0, i32 3
  %19 = call dereferenceable(4) i32* @_ZStoRRSt13_Ios_FmtflagsS_(i32* dereferenceable(4) %18, i32 %17)
  %20 = load i32, i32* %7, align 4
  ret i32 %20
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZStaNRSt13_Ios_FmtflagsS_(i32* dereferenceable(4), i32) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32*, i32** %3, align 8
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @_ZStanSt13_Ios_FmtflagsS_(i32 %6, i32 %7)
  %9 = load i32*, i32** %3, align 8
  store i32 %8, i32* %9, align 4
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZStcoSt13_Ios_Fmtflags(i32) #5 comdat {
  %2 = alloca i32
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.22
  %6 = load i32, i32* @y.23
  %7 = add i32 %5, 976351198
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 976351198
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -972799880, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %91
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -972799880, label %19
    i32 -1681003705, label %39
    i32 -1666210839, label %80
    i32 422079308, label %82
  ]

; <label>:18:                                     ; preds = %16
  br label %91

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1681003705, i32 422079308
  store i32 %38, i32* %15
  br label %91

; <label>:39:                                     ; preds = %16
  %40 = alloca i32, align 4
  store i32 %0, i32* %40, align 4
  %41 = load i32, i32* %40, align 4
  %42 = xor i32 %41, -1
  %43 = and i32 1736597475, %42
  %44 = xor i32 1736597475, -1
  %45 = and i32 %41, %44
  %46 = xor i32 -1, -1
  %47 = and i32 %46, 1736597475
  %48 = and i32 -1, %44
  %49 = or i32 %43, %45
  %50 = or i32 %47, %48
  %51 = xor i32 %49, %50
  %52 = xor i32 %41, -1
  store i32 %51, i32* %2
  %53 = load i32, i32* @x.22
  %54 = load i32, i32* @y.23
  %55 = sub i32 %53, 721024354
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 721024354
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1666210839, i32 422079308
  store i32 %79, i32* %15
  br label %91

; <label>:80:                                     ; preds = %16
  %81 = load volatile i32, i32* %2
  ret i32 %81

; <label>:82:                                     ; preds = %16
  %83 = alloca i32, align 4
  store i32 %0, i32* %83, align 4
  %84 = load i32, i32* %83, align 4
  %85 = xor i32 %84, -1
  %86 = and i32 -1, %85
  %87 = xor i32 -1, -1
  %88 = and i32 %84, %87
  %89 = or i32 %86, %88
  %90 = xor i32 %84, -1
  store i32 -1681003705, i32* %15
  br label %91

; <label>:91:                                     ; preds = %82, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZStoRRSt13_Ios_FmtflagsS_(i32* dereferenceable(4), i32) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32*, i32** %3, align 8
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @_ZStorSt13_Ios_FmtflagsS_(i32 %6, i32 %7)
  %9 = load i32*, i32** %3, align 8
  store i32 %8, i32* %9, align 4
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZStanSt13_Ios_FmtflagsS_(i32, i32) #5 comdat {
  %3 = alloca i32
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.26
  %7 = load i32, i32* @y.27
  %8 = add i32 %6, -423569628
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -423569628
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -761613056, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %94
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -761613056, label %20
    i32 1228063859, label %40
    i32 -323974498, label %63
    i32 1061690294, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %94

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1228063859, i32 1061690294
  store i32 %39, i32* %16
  br label %94

; <label>:40:                                     ; preds = %17
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  store i32 %0, i32* %41, align 4
  store i32 %1, i32* %42, align 4
  %43 = load i32, i32* %41, align 4
  %44 = load i32, i32* %42, align 4
  %45 = xor i32 %44, -1
  %46 = xor i32 %43, %45
  %47 = and i32 %46, %43
  %48 = and i32 %43, %44
  store i32 %47, i32* %3
  %49 = load i32, i32* @x.26
  %50 = load i32, i32* @y.27
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -323974498, i32 1061690294
  store i32 %62, i32* %16
  br label %94

; <label>:63:                                     ; preds = %17
  %64 = load volatile i32, i32* %3
  ret i32 %64

; <label>:65:                                     ; preds = %17
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  store i32 %0, i32* %66, align 4
  store i32 %1, i32* %67, align 4
  %68 = load i32, i32* %66, align 4
  %69 = load i32, i32* %67, align 4
  %70 = add i32 %68, -1198258237
  %71 = sub i32 %70, %69
  %72 = sub i32 %71, -1198258237
  %73 = sub i32 %68, %69
  %74 = mul i32 %72, %69
  %75 = shl i32 %68, %69
  %76 = sub i32 0, %68
  %77 = add i32 0, %76
  %78 = sub i32 0, %68
  %79 = sub i32 0, %77
  %80 = sub i32 0, %69
  %81 = add i32 %79, %80
  %82 = sub i32 0, %81
  %83 = add i32 %77, %69
  %84 = shl i32 %68, %69
  %85 = shl i32 %68, %69
  %86 = xor i32 %68, -1
  %87 = xor i32 %69, -1
  %88 = xor i32 1485075003, -1
  %89 = or i32 %86, %87
  %90 = or i32 1485075003, %88
  %91 = xor i32 %89, -1
  %92 = and i32 %91, %90
  %93 = and i32 %68, %69
  store i32 1228063859, i32* %16
  br label %94

; <label>:94:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZStorSt13_Ios_FmtflagsS_(i32, i32) #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = xor i32 %5, -1
  %8 = xor i32 %6, -1
  %9 = xor i32 -700391053, -1
  %10 = and i32 %7, -700391053
  %11 = and i32 %5, %9
  %12 = and i32 %8, -700391053
  %13 = and i32 %6, %9
  %14 = or i32 %10, %11
  %15 = or i32 %12, %13
  %16 = xor i32 %14, %15
  %17 = or i32 %7, %8
  %18 = xor i32 %17, -1
  %19 = or i32 -700391053, %9
  %20 = and i32 %18, %19
  %21 = or i32 %16, %20
  %22 = or i32 %5, %6
  ret i32 %21
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.30
  %8 = load i32, i32* @y.31
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %8, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %62

; <label>:32:                                     ; preds = %6, %62
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #10
  %35 = load i32, i32* @x.30
  %36 = load i32, i32* @y.31
  %37 = add i32 %35, 1718134575
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1718134575
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %32
  unreachable

; <label>:62:                                     ; preds = %32, %6
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #10
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.32
  %5 = load i32, i32* @y.33
  %6 = add i32 %4, -1392535503
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1392535503
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -568547465, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -568547465, label %18
    i32 -1049133499, label %38
    i32 1293438218, label %56
    i32 -2101003438, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1049133499, i32 -2101003438
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %39, align 8
  %40 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.32
  %43 = load i32, i32* @y.33
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1293438218, i32 -2101003438
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %58, align 8
  %59 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %60)
  store i32 -1049133499, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaISt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEEC2Ev(%"class.std::allocator.0"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEEC2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEEC2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEEC2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Solve5inputEv(%class.Solve*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Solve*, align 8
  %3 = alloca %"class.std::vector.3", align 8
  %4 = alloca %"class.std::allocator.5", align 1
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"struct.Solve::edge", align 4
  %11 = alloca %"struct.Solve::edge", align 4
  %12 = alloca %"struct.Solve::edge", align 4
  %13 = alloca %"struct.Solve::edge", align 4
  %14 = alloca %"struct.Solve::edge", align 4
  %15 = alloca %"struct.Solve::edge", align 4
  %16 = alloca %"struct.Solve::edge", align 4
  %17 = alloca %"struct.Solve::edge", align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %22 = alloca %class.anon, align 1
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %class.Solve* %0, %class.Solve** %2, align 8
  %30 = load %class.Solve*, %class.Solve** %2, align 8
  %31 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 0
  %32 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %31)
  %33 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 1
  %34 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %32, i32* dereferenceable(4) %33)
  %35 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %36 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %35)
  %37 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %38 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2Ev(%"class.std::allocator.5"* %4) #3
  invoke void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2EmRKS4_(%"class.std::vector.3"* %3, i64 4, %"class.std::allocator.5"* dereferenceable(1) %4)
          to label %41 unwind label %137

; <label>:41:                                     ; preds = %1
  invoke void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6resizeEmRKS5_(%"class.std::vector"* %37, i64 %40, %"class.std::vector.3"* dereferenceable(24) %3)
          to label %42 unwind label %141

; <label>:42:                                     ; preds = %41
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %3) #3
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %4) #3
  store i32 0, i32* %7, align 4
  br label %43

; <label>:43:                                     ; preds = %437, %42
  %44 = load i32, i32* %7, align 4
  %45 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %44, %46
  br i1 %47, label %48, label %443

; <label>:48:                                     ; preds = %43
  %49 = load i32, i32* @x.42
  %50 = load i32, i32* @y.43
  %51 = sub i32 %49, 266721303
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 266721303
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %720

; <label>:63:                                     ; preds = %48, %720
  %64 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %8)
  %65 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %64, i32* dereferenceable(4) %9)
  %66 = load i32, i32* %8, align 4
  %67 = sub i32 0, %66
  %68 = sub i32 0, -1
  %69 = add i32 %67, %68
  %70 = sub i32 0, %69
  %71 = add nsw i32 %66, -1
  store i32 %70, i32* %8, align 4
  %72 = load i32, i32* %9, align 4
  %73 = sub i32 0, %72
  %74 = sub i32 0, -1
  %75 = add i32 %73, %74
  %76 = sub i32 0, %75
  %77 = add nsw i32 %72, -1
  store i32 %76, i32* %9, align 4
  %78 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %79 = load i32, i32* %8, align 4
  %80 = sext i32 %79 to i64
  %81 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %78, i64 %80)
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %83, 65
  %85 = load i32, i32* @x.42
  %86 = load i32, i32* @y.43
  %87 = sub i32 %85, -1305836750
  %88 = sub i32 %87, 1
  %89 = add i32 %88, -1305836750
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %720

; <label>:111:                                    ; preds = %63
  br i1 %84, label %112, label %187

; <label>:112:                                    ; preds = %111
  %113 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %114 = load i32, i32* %9, align 4
  %115 = sext i32 %114 to i64
  %116 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %113, i64 %115)
  %117 = load i8, i8* %116, align 1
  %118 = sext i8 %117 to i32
  %119 = icmp eq i32 %118, 65
  br i1 %119, label %120, label %187

; <label>:120:                                    ; preds = %112
  %121 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %122 = load i32, i32* %8, align 4
  %123 = sext i32 %122 to i64
  %124 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %121, i64 %123) #3
  %125 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %124, i64 0) #3
  %126 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %10, i32 0, i32 0
  %127 = load i32, i32* %9, align 4
  store i32 %127, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %10, i32 0, i32 1
  store i32 1, i32* %128, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %125, %"struct.Solve::edge"* dereferenceable(8) %10)
  %129 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %130 = load i32, i32* %9, align 4
  %131 = sext i32 %130 to i64
  %132 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %129, i64 %131) #3
  %133 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %132, i64 0) #3
  %134 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %11, i32 0, i32 0
  %135 = load i32, i32* %8, align 4
  store i32 %135, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %11, i32 0, i32 1
  store i32 1, i32* %136, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %133, %"struct.Solve::edge"* dereferenceable(8) %11)
  br label %436

; <label>:137:                                    ; preds = %1
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %5, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %6, align 4
  br label %145

; <label>:141:                                    ; preds = %41
  %142 = landingpad { i8*, i32 }
          cleanup
  %143 = extractvalue { i8*, i32 } %142, 0
  store i8* %143, i8** %5, align 8
  %144 = extractvalue { i8*, i32 } %142, 1
  store i32 %144, i32* %6, align 4
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %3) #3
  br label %145

; <label>:145:                                    ; preds = %141, %137
  %146 = load i32, i32* @x.42
  %147 = load i32, i32* @y.43
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %757

; <label>:171:                                    ; preds = %145, %757
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %4) #3
  %172 = load i32, i32* @x.42
  %173 = load i32, i32* @y.43
  %174 = sub i32 %172, 887615169
  %175 = sub i32 %174, 1
  %176 = add i32 %175, 887615169
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %757

; <label>:186:                                    ; preds = %171
  br label %673

; <label>:187:                                    ; preds = %112, %111
  %188 = load i32, i32* @x.42
  %189 = load i32, i32* @y.43
  %190 = sub i32 %188, 1167547817
  %191 = sub i32 %190, 1
  %192 = add i32 %191, 1167547817
  %193 = sub i32 %188, 1
  %194 = mul i32 %188, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %189, 10
  %198 = xor i1 %196, true
  %199 = xor i1 %197, true
  %200 = xor i1 false, true
  %201 = and i1 %198, false
  %202 = and i1 %196, %200
  %203 = and i1 %199, false
  %204 = and i1 %197, %200
  %205 = or i1 %201, %202
  %206 = or i1 %203, %204
  %207 = xor i1 %205, %206
  %208 = or i1 %198, %199
  %209 = xor i1 %208, true
  %210 = or i1 false, %200
  %211 = and i1 %209, %210
  %212 = or i1 %207, %211
  %213 = or i1 %196, %197
  br i1 %212, label %214, label %758

; <label>:214:                                    ; preds = %187, %758
  %215 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %216 = load i32, i32* %8, align 4
  %217 = sext i32 %216 to i64
  %218 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %215, i64 %217)
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %220, 65
  %222 = load i32, i32* @x.42
  %223 = load i32, i32* @y.43
  %224 = sub i32 %222, 105301722
  %225 = sub i32 %224, 1
  %226 = add i32 %225, 105301722
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %758

; <label>:236:                                    ; preds = %214
  br i1 %221, label %237, label %304

; <label>:237:                                    ; preds = %236
  %238 = load i32, i32* @x.42
  %239 = load i32, i32* @y.43
  %240 = add i32 %238, 604633007
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 604633007
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 true, true
  %251 = and i1 %248, true
  %252 = and i1 %246, %250
  %253 = and i1 %249, true
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 true, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  br i1 %262, label %264, label %766

; <label>:264:                                    ; preds = %237, %766
  %265 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %266 = load i32, i32* %9, align 4
  %267 = sext i32 %266 to i64
  %268 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %265, i64 %267)
  %269 = load i8, i8* %268, align 1
  %270 = sext i8 %269 to i32
  %271 = icmp eq i32 %270, 66
  %272 = load i32, i32* @x.42
  %273 = load i32, i32* @y.43
  %274 = add i32 %272, 719614266
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, 719614266
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = and i1 %280, %281
  %283 = xor i1 %280, %281
  %284 = or i1 %282, %283
  %285 = or i1 %280, %281
  br i1 %284, label %286, label %766

; <label>:286:                                    ; preds = %264
  br i1 %271, label %287, label %304

; <label>:287:                                    ; preds = %286
  %288 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %289 = load i32, i32* %8, align 4
  %290 = sext i32 %289 to i64
  %291 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %288, i64 %290) #3
  %292 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %291, i64 1) #3
  %293 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %12, i32 0, i32 0
  %294 = load i32, i32* %9, align 4
  store i32 %294, i32* %293, align 4
  %295 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %12, i32 0, i32 1
  store i32 2, i32* %295, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %292, %"struct.Solve::edge"* dereferenceable(8) %12)
  %296 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %297 = load i32, i32* %9, align 4
  %298 = sext i32 %297 to i64
  %299 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %296, i64 %298) #3
  %300 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %299, i64 3) #3
  %301 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %13, i32 0, i32 0
  %302 = load i32, i32* %8, align 4
  store i32 %302, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %13, i32 0, i32 1
  store i32 0, i32* %303, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %300, %"struct.Solve::edge"* dereferenceable(8) %13)
  br label %395

; <label>:304:                                    ; preds = %286, %236
  %305 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %306 = load i32, i32* %8, align 4
  %307 = sext i32 %306 to i64
  %308 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %305, i64 %307)
  %309 = load i8, i8* %308, align 1
  %310 = sext i8 %309 to i32
  %311 = icmp eq i32 %310, 66
  br i1 %311, label %312, label %337

; <label>:312:                                    ; preds = %304
  %313 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %314 = load i32, i32* %9, align 4
  %315 = sext i32 %314 to i64
  %316 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %313, i64 %315)
  %317 = load i8, i8* %316, align 1
  %318 = sext i8 %317 to i32
  %319 = icmp eq i32 %318, 65
  br i1 %319, label %320, label %337

; <label>:320:                                    ; preds = %312
  %321 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %322 = load i32, i32* %8, align 4
  %323 = sext i32 %322 to i64
  %324 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %321, i64 %323) #3
  %325 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %324, i64 3) #3
  %326 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %14, i32 0, i32 0
  %327 = load i32, i32* %9, align 4
  store i32 %327, i32* %326, align 4
  %328 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %14, i32 0, i32 1
  store i32 0, i32* %328, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %325, %"struct.Solve::edge"* dereferenceable(8) %14)
  %329 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %330 = load i32, i32* %9, align 4
  %331 = sext i32 %330 to i64
  %332 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %329, i64 %331) #3
  %333 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %332, i64 1) #3
  %334 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %15, i32 0, i32 0
  %335 = load i32, i32* %8, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %15, i32 0, i32 1
  store i32 2, i32* %336, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %333, %"struct.Solve::edge"* dereferenceable(8) %15)
  br label %354

; <label>:337:                                    ; preds = %312, %304
  %338 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %339 = load i32, i32* %8, align 4
  %340 = sext i32 %339 to i64
  %341 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %338, i64 %340) #3
  %342 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %341, i64 2) #3
  %343 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %16, i32 0, i32 0
  %344 = load i32, i32* %9, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %16, i32 0, i32 1
  store i32 3, i32* %345, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %342, %"struct.Solve::edge"* dereferenceable(8) %16)
  %346 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %347 = load i32, i32* %9, align 4
  %348 = sext i32 %347 to i64
  %349 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %346, i64 %348) #3
  %350 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %349, i64 2) #3
  %351 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %17, i32 0, i32 0
  %352 = load i32, i32* %8, align 4
  store i32 %352, i32* %351, align 4
  %353 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %17, i32 0, i32 1
  store i32 3, i32* %353, align 4
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %350, %"struct.Solve::edge"* dereferenceable(8) %17)
  br label %354

; <label>:354:                                    ; preds = %337, %320
  %355 = load i32, i32* @x.42
  %356 = load i32, i32* @y.43
  %357 = sub i32 0, 1
  %358 = add i32 %355, %357
  %359 = sub i32 %355, 1
  %360 = mul i32 %355, %358
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %356, 10
  %364 = xor i1 %362, true
  %365 = xor i1 %363, true
  %366 = xor i1 false, true
  %367 = and i1 %364, false
  %368 = and i1 %362, %366
  %369 = and i1 %365, false
  %370 = and i1 %363, %366
  %371 = or i1 %367, %368
  %372 = or i1 %369, %370
  %373 = xor i1 %371, %372
  %374 = or i1 %364, %365
  %375 = xor i1 %374, true
  %376 = or i1 false, %366
  %377 = and i1 %375, %376
  %378 = or i1 %373, %377
  %379 = or i1 %362, %363
  br i1 %378, label %380, label %774

; <label>:380:                                    ; preds = %354, %774
  %381 = load i32, i32* @x.42
  %382 = load i32, i32* @y.43
  %383 = sub i32 0, 1
  %384 = add i32 %381, %383
  %385 = sub i32 %381, 1
  %386 = mul i32 %381, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %382, 10
  %390 = and i1 %388, %389
  %391 = xor i1 %388, %389
  %392 = or i1 %390, %391
  %393 = or i1 %388, %389
  br i1 %392, label %394, label %774

; <label>:394:                                    ; preds = %380
  br label %395

; <label>:395:                                    ; preds = %394, %287
  %396 = load i32, i32* @x.42
  %397 = load i32, i32* @y.43
  %398 = sub i32 0, 1
  %399 = add i32 %396, %398
  %400 = sub i32 %396, 1
  %401 = mul i32 %396, %399
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %397, 10
  %405 = and i1 %403, %404
  %406 = xor i1 %403, %404
  %407 = or i1 %405, %406
  %408 = or i1 %403, %404
  br i1 %407, label %409, label %775

; <label>:409:                                    ; preds = %395, %775
  %410 = load i32, i32* @x.42
  %411 = load i32, i32* @y.43
  %412 = sub i32 0, 1
  %413 = add i32 %410, %412
  %414 = sub i32 %410, 1
  %415 = mul i32 %410, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %411, 10
  %419 = xor i1 %417, true
  %420 = xor i1 %418, true
  %421 = xor i1 true, true
  %422 = and i1 %419, true
  %423 = and i1 %417, %421
  %424 = and i1 %420, true
  %425 = and i1 %418, %421
  %426 = or i1 %422, %423
  %427 = or i1 %424, %425
  %428 = xor i1 %426, %427
  %429 = or i1 %419, %420
  %430 = xor i1 %429, true
  %431 = or i1 true, %421
  %432 = and i1 %430, %431
  %433 = or i1 %428, %432
  %434 = or i1 %417, %418
  br i1 %433, label %435, label %775

; <label>:435:                                    ; preds = %409
  br label %436

; <label>:436:                                    ; preds = %435, %120
  br label %437

; <label>:437:                                    ; preds = %436
  %438 = load i32, i32* %7, align 4
  %439 = add i32 %438, -1044967039
  %440 = add i32 %439, 1
  %441 = sub i32 %440, -1044967039
  %442 = add nsw i32 %438, 1
  store i32 %441, i32* %7, align 4
  br label %43

; <label>:443:                                    ; preds = %43
  store i32 0, i32* %18, align 4
  br label %444

; <label>:444:                                    ; preds = %666, %443
  %445 = load i32, i32* %18, align 4
  %446 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 0
  %447 = load i32, i32* %446, align 8
  %448 = icmp slt i32 %445, %447
  br i1 %448, label %449, label %672

; <label>:449:                                    ; preds = %444
  store i32 0, i32* %19, align 4
  br label %450

; <label>:450:                                    ; preds = %611, %449
  %451 = load i32, i32* %19, align 4
  %452 = icmp slt i32 %451, 4
  br i1 %452, label %453, label %612

; <label>:453:                                    ; preds = %450
  %454 = load i32, i32* @x.42
  %455 = load i32, i32* @y.43
  %456 = sub i32 %454, -1478960189
  %457 = sub i32 %456, 1
  %458 = add i32 %457, -1478960189
  %459 = sub i32 %454, 1
  %460 = mul i32 %454, %458
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %455, 10
  %464 = xor i1 %462, true
  %465 = xor i1 %463, true
  %466 = xor i1 true, true
  %467 = and i1 %464, true
  %468 = and i1 %462, %466
  %469 = and i1 %465, true
  %470 = and i1 %463, %466
  %471 = or i1 %467, %468
  %472 = or i1 %469, %470
  %473 = xor i1 %471, %472
  %474 = or i1 %464, %465
  %475 = xor i1 %474, true
  %476 = or i1 true, %466
  %477 = and i1 %475, %476
  %478 = or i1 %473, %477
  %479 = or i1 %462, %463
  br i1 %478, label %480, label %776

; <label>:480:                                    ; preds = %453, %776
  %481 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %482 = load i32, i32* %18, align 4
  %483 = sext i32 %482 to i64
  %484 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %481, i64 %483) #3
  %485 = load i32, i32* %19, align 4
  %486 = sext i32 %485 to i64
  %487 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %484, i64 %486) #3
  %488 = call %"struct.Solve::edge"* @_ZSt5beginISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_5beginEERT_(%"class.std::vector.8"* dereferenceable(24) %487)
  %489 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %"struct.Solve::edge"* %488, %"struct.Solve::edge"** %489, align 8
  %490 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %491 = load i32, i32* %18, align 4
  %492 = sext i32 %491 to i64
  %493 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %490, i64 %492) #3
  %494 = load i32, i32* %19, align 4
  %495 = sext i32 %494 to i64
  %496 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %493, i64 %495) #3
  %497 = call %"struct.Solve::edge"* @_ZSt3endISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_3endEERT_(%"class.std::vector.8"* dereferenceable(24) %496)
  %498 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  store %"struct.Solve::edge"* %497, %"struct.Solve::edge"** %498, align 8
  %499 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %500 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %499, align 8
  %501 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  %502 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %501, align 8
  call void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEZNS2_5inputEvEUlS3_S3_E_EvT_SA_T0_(%"struct.Solve::edge"* %500, %"struct.Solve::edge"* %502)
  %503 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %504 = load i32, i32* %18, align 4
  %505 = sext i32 %504 to i64
  %506 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %503, i64 %505) #3
  %507 = load i32, i32* %19, align 4
  %508 = sext i32 %507 to i64
  %509 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %506, i64 %508) #3
  %510 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %511 = load i32, i32* %18, align 4
  %512 = sext i32 %511 to i64
  %513 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %510, i64 %512) #3
  %514 = load i32, i32* %19, align 4
  %515 = sext i32 %514 to i64
  %516 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %513, i64 %515) #3
  %517 = call %"struct.Solve::edge"* @_ZSt5beginISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_5beginEERT_(%"class.std::vector.8"* dereferenceable(24) %516)
  %518 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  store %"struct.Solve::edge"* %517, %"struct.Solve::edge"** %518, align 8
  %519 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %520 = load i32, i32* %18, align 4
  %521 = sext i32 %520 to i64
  %522 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %519, i64 %521) #3
  %523 = load i32, i32* %19, align 4
  %524 = sext i32 %523 to i64
  %525 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %522, i64 %524) #3
  %526 = call %"struct.Solve::edge"* @_ZSt3endISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_3endEERT_(%"class.std::vector.8"* dereferenceable(24) %525)
  %527 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  store %"struct.Solve::edge"* %526, %"struct.Solve::edge"** %527, align 8
  %528 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  %529 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %528, align 8
  %530 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  %531 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %530, align 8
  %532 = call %"struct.Solve::edge"* @_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEET_S9_S9_(%"struct.Solve::edge"* %529, %"struct.Solve::edge"* %531)
  %533 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %24, i32 0, i32 0
  store %"struct.Solve::edge"* %532, %"struct.Solve::edge"** %533, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.27"* %23, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %24) #3
  %534 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %535 = load i32, i32* %18, align 4
  %536 = sext i32 %535 to i64
  %537 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %534, i64 %536) #3
  %538 = load i32, i32* %19, align 4
  %539 = sext i32 %538 to i64
  %540 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %537, i64 %539) #3
  %541 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %540) #3
  %542 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Solve::edge"* %541, %"struct.Solve::edge"** %542, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.27"* %27, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %28) #3
  %543 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %23, i32 0, i32 0
  %544 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %543, align 8
  %545 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %27, i32 0, i32 0
  %546 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %545, align 8
  %547 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_(%"class.std::vector.8"* %509, %"struct.Solve::edge"* %544, %"struct.Solve::edge"* %546)
  %548 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %"struct.Solve::edge"* %547, %"struct.Solve::edge"** %548, align 8
  %549 = load i32, i32* @x.42
  %550 = load i32, i32* @y.43
  %551 = sub i32 %549, -1372532392
  %552 = sub i32 %551, 1
  %553 = add i32 %552, -1372532392
  %554 = sub i32 %549, 1
  %555 = mul i32 %549, %553
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %550, 10
  %559 = and i1 %557, %558
  %560 = xor i1 %557, %558
  %561 = or i1 %559, %560
  %562 = or i1 %557, %558
  br i1 %561, label %563, label %776

; <label>:563:                                    ; preds = %480
  br label %564

; <label>:564:                                    ; preds = %563
  %565 = load i32, i32* @x.42
  %566 = load i32, i32* @y.43
  %567 = add i32 %565, 1973189998
  %568 = sub i32 %567, 1
  %569 = sub i32 %568, 1973189998
  %570 = sub i32 %565, 1
  %571 = mul i32 %565, %569
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %566, 10
  %575 = xor i1 %573, true
  %576 = xor i1 %574, true
  %577 = xor i1 false, true
  %578 = and i1 %575, false
  %579 = and i1 %573, %577
  %580 = and i1 %576, false
  %581 = and i1 %574, %577
  %582 = or i1 %578, %579
  %583 = or i1 %580, %581
  %584 = xor i1 %582, %583
  %585 = or i1 %575, %576
  %586 = xor i1 %585, true
  %587 = or i1 false, %577
  %588 = and i1 %586, %587
  %589 = or i1 %584, %588
  %590 = or i1 %573, %574
  br i1 %589, label %591, label %845

; <label>:591:                                    ; preds = %564, %845
  %592 = load i32, i32* %19, align 4
  %593 = sub i32 0, %592
  %594 = sub i32 0, 1
  %595 = add i32 %593, %594
  %596 = sub i32 0, %595
  %597 = add nsw i32 %592, 1
  store i32 %596, i32* %19, align 4
  %598 = load i32, i32* @x.42
  %599 = load i32, i32* @y.43
  %600 = sub i32 0, 1
  %601 = add i32 %598, %600
  %602 = sub i32 %598, 1
  %603 = mul i32 %598, %601
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %599, 10
  %607 = and i1 %605, %606
  %608 = xor i1 %605, %606
  %609 = or i1 %607, %608
  %610 = or i1 %605, %606
  br i1 %609, label %611, label %845

; <label>:611:                                    ; preds = %591
  br label %450

; <label>:612:                                    ; preds = %450
  %613 = load i32, i32* @x.42
  %614 = load i32, i32* @y.43
  %615 = add i32 %613, -643203309
  %616 = sub i32 %615, 1
  %617 = sub i32 %616, -643203309
  %618 = sub i32 %613, 1
  %619 = mul i32 %613, %617
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %614, 10
  %623 = xor i1 %621, true
  %624 = xor i1 %622, true
  %625 = xor i1 true, true
  %626 = and i1 %623, true
  %627 = and i1 %621, %625
  %628 = and i1 %624, true
  %629 = and i1 %622, %625
  %630 = or i1 %626, %627
  %631 = or i1 %628, %629
  %632 = xor i1 %630, %631
  %633 = or i1 %623, %624
  %634 = xor i1 %633, true
  %635 = or i1 true, %625
  %636 = and i1 %634, %635
  %637 = or i1 %632, %636
  %638 = or i1 %621, %622
  br i1 %637, label %639, label %864

; <label>:639:                                    ; preds = %612, %864
  %640 = load i32, i32* @x.42
  %641 = load i32, i32* @y.43
  %642 = sub i32 0, 1
  %643 = add i32 %640, %642
  %644 = sub i32 %640, 1
  %645 = mul i32 %640, %643
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %641, 10
  %649 = xor i1 %647, true
  %650 = xor i1 %648, true
  %651 = xor i1 false, true
  %652 = and i1 %649, false
  %653 = and i1 %647, %651
  %654 = and i1 %650, false
  %655 = and i1 %648, %651
  %656 = or i1 %652, %653
  %657 = or i1 %654, %655
  %658 = xor i1 %656, %657
  %659 = or i1 %649, %650
  %660 = xor i1 %659, true
  %661 = or i1 false, %651
  %662 = and i1 %660, %661
  %663 = or i1 %658, %662
  %664 = or i1 %647, %648
  br i1 %663, label %665, label %864

; <label>:665:                                    ; preds = %639
  br label %666

; <label>:666:                                    ; preds = %665
  %667 = load i32, i32* %18, align 4
  %668 = sub i32 %667, -102107145
  %669 = add i32 %668, 1
  %670 = add i32 %669, -102107145
  %671 = add nsw i32 %667, 1
  store i32 %670, i32* %18, align 4
  br label %444

; <label>:672:                                    ; preds = %444
  ret void

; <label>:673:                                    ; preds = %186
  %674 = load i32, i32* @x.42
  %675 = load i32, i32* @y.43
  %676 = add i32 %674, 785155747
  %677 = sub i32 %676, 1
  %678 = sub i32 %677, 785155747
  %679 = sub i32 %674, 1
  %680 = mul i32 %674, %678
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %675, 10
  %684 = xor i1 %682, true
  %685 = xor i1 %683, true
  %686 = xor i1 true, true
  %687 = and i1 %684, true
  %688 = and i1 %682, %686
  %689 = and i1 %685, true
  %690 = and i1 %683, %686
  %691 = or i1 %687, %688
  %692 = or i1 %689, %690
  %693 = xor i1 %691, %692
  %694 = or i1 %684, %685
  %695 = xor i1 %694, true
  %696 = or i1 true, %686
  %697 = and i1 %695, %696
  %698 = or i1 %693, %697
  %699 = or i1 %682, %683
  br i1 %698, label %700, label %865

; <label>:700:                                    ; preds = %673, %865
  %701 = load i8*, i8** %5, align 8
  %702 = load i32, i32* %6, align 4
  %703 = insertvalue { i8*, i32 } undef, i8* %701, 0
  %704 = insertvalue { i8*, i32 } %703, i32 %702, 1
  %705 = load i32, i32* @x.42
  %706 = load i32, i32* @y.43
  %707 = add i32 %705, 1581966891
  %708 = sub i32 %707, 1
  %709 = sub i32 %708, 1581966891
  %710 = sub i32 %705, 1
  %711 = mul i32 %705, %709
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %706, 10
  %715 = and i1 %713, %714
  %716 = xor i1 %713, %714
  %717 = or i1 %715, %716
  %718 = or i1 %713, %714
  br i1 %717, label %719, label %865

; <label>:719:                                    ; preds = %700
  resume { i8*, i32 } %704

; <label>:720:                                    ; preds = %63, %48
  %721 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %8)
  %722 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %721, i32* dereferenceable(4) %9)
  %723 = load i32, i32* %8, align 4
  %724 = sub i32 0, 1965134063
  %725 = sub i32 %724, %723
  %726 = add i32 %725, 1965134063
  %727 = sub i32 0, %723
  %728 = sub i32 0, -1
  %729 = sub i32 %726, %728
  %730 = add i32 %726, -1
  %731 = shl i32 %723, -1
  %732 = sub i32 0, %723
  %733 = sub i32 0, -1
  %734 = add i32 %732, %733
  %735 = sub i32 0, %734
  %736 = add nsw i32 %723, -1
  store i32 %735, i32* %8, align 4
  %737 = load i32, i32* %9, align 4
  %738 = sub i32 0, %737
  %739 = add i32 0, %738
  %740 = sub i32 0, %737
  %741 = sub i32 0, %739
  %742 = sub i32 0, -1
  %743 = add i32 %741, %742
  %744 = sub i32 0, %743
  %745 = add i32 %739, -1
  %746 = sub i32 %737, 332511693
  %747 = add i32 %746, -1
  %748 = add i32 %747, 332511693
  %749 = add nsw i32 %737, -1
  store i32 %748, i32* %9, align 4
  %750 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %751 = load i32, i32* %8, align 4
  %752 = sext i32 %751 to i64
  %753 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %750, i64 %752)
  %754 = load i8, i8* %753, align 1
  %755 = sext i8 %754 to i32
  %756 = icmp eq i32 %755, 65
  br label %63

; <label>:757:                                    ; preds = %171, %145
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %4) #3
  br label %171

; <label>:758:                                    ; preds = %214, %187
  %759 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %760 = load i32, i32* %8, align 4
  %761 = sext i32 %760 to i64
  %762 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %759, i64 %761)
  %763 = load i8, i8* %762, align 1
  %764 = sext i8 %763 to i32
  %765 = icmp eq i32 %764, 65
  br label %214

; <label>:766:                                    ; preds = %264, %237
  %767 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 2
  %768 = load i32, i32* %9, align 4
  %769 = sext i32 %768 to i64
  %770 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %767, i64 %769)
  %771 = load i8, i8* %770, align 1
  %772 = sext i8 %771 to i32
  %773 = icmp eq i32 %772, 66
  br label %264

; <label>:774:                                    ; preds = %380, %354
  br label %380

; <label>:775:                                    ; preds = %409, %395
  br label %409

; <label>:776:                                    ; preds = %480, %453
  %777 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %778 = load i32, i32* %18, align 4
  %779 = sext i32 %778 to i64
  %780 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %777, i64 %779) #3
  %781 = load i32, i32* %19, align 4
  %782 = sext i32 %781 to i64
  %783 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %780, i64 %782) #3
  %784 = call %"struct.Solve::edge"* @_ZSt5beginISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_5beginEERT_(%"class.std::vector.8"* dereferenceable(24) %783)
  %785 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %"struct.Solve::edge"* %784, %"struct.Solve::edge"** %785, align 8
  %786 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %787 = load i32, i32* %18, align 4
  %788 = sext i32 %787 to i64
  %789 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %786, i64 %788) #3
  %790 = load i32, i32* %19, align 4
  %791 = sext i32 %790 to i64
  %792 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %789, i64 %791) #3
  %793 = call %"struct.Solve::edge"* @_ZSt3endISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_3endEERT_(%"class.std::vector.8"* dereferenceable(24) %792)
  %794 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  store %"struct.Solve::edge"* %793, %"struct.Solve::edge"** %794, align 8
  %795 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %796 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %795, align 8
  %797 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  %798 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %797, align 8
  call void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEZNS2_5inputEvEUlS3_S3_E_EvT_SA_T0_(%"struct.Solve::edge"* %796, %"struct.Solve::edge"* %798)
  %799 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %800 = load i32, i32* %18, align 4
  %801 = sext i32 %800 to i64
  %802 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %799, i64 %801) #3
  %803 = load i32, i32* %19, align 4
  %804 = sext i32 %803 to i64
  %805 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %802, i64 %804) #3
  %806 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %807 = load i32, i32* %18, align 4
  %808 = sext i32 %807 to i64
  %809 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %806, i64 %808) #3
  %810 = load i32, i32* %19, align 4
  %811 = sext i32 %810 to i64
  %812 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %809, i64 %811) #3
  %813 = call %"struct.Solve::edge"* @_ZSt5beginISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_5beginEERT_(%"class.std::vector.8"* dereferenceable(24) %812)
  %814 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  store %"struct.Solve::edge"* %813, %"struct.Solve::edge"** %814, align 8
  %815 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %816 = load i32, i32* %18, align 4
  %817 = sext i32 %816 to i64
  %818 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %815, i64 %817) #3
  %819 = load i32, i32* %19, align 4
  %820 = sext i32 %819 to i64
  %821 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %818, i64 %820) #3
  %822 = call %"struct.Solve::edge"* @_ZSt3endISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_3endEERT_(%"class.std::vector.8"* dereferenceable(24) %821)
  %823 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  store %"struct.Solve::edge"* %822, %"struct.Solve::edge"** %823, align 8
  %824 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  %825 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %824, align 8
  %826 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  %827 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %826, align 8
  %828 = call %"struct.Solve::edge"* @_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEET_S9_S9_(%"struct.Solve::edge"* %825, %"struct.Solve::edge"* %827)
  %829 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %24, i32 0, i32 0
  store %"struct.Solve::edge"* %828, %"struct.Solve::edge"** %829, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.27"* %23, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %24) #3
  %830 = getelementptr inbounds %class.Solve, %class.Solve* %30, i32 0, i32 3
  %831 = load i32, i32* %18, align 4
  %832 = sext i32 %831 to i64
  %833 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"* %830, i64 %832) #3
  %834 = load i32, i32* %19, align 4
  %835 = sext i32 %834 to i64
  %836 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %833, i64 %835) #3
  %837 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %836) #3
  %838 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Solve::edge"* %837, %"struct.Solve::edge"** %838, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.27"* %27, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %28) #3
  %839 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %23, i32 0, i32 0
  %840 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %839, align 8
  %841 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %27, i32 0, i32 0
  %842 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %841, align 8
  %843 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_(%"class.std::vector.8"* %805, %"struct.Solve::edge"* %840, %"struct.Solve::edge"* %842)
  %844 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %"struct.Solve::edge"* %843, %"struct.Solve::edge"** %844, align 8
  br label %480

; <label>:845:                                    ; preds = %591, %564
  %846 = load i32, i32* %19, align 4
  %847 = sub i32 0, %846
  %848 = add i32 0, %847
  %849 = sub i32 0, %846
  %850 = add i32 %848, -1321956900
  %851 = add i32 %850, 1
  %852 = sub i32 %851, -1321956900
  %853 = add i32 %848, 1
  %854 = sub i32 0, 1
  %855 = add i32 %846, %854
  %856 = sub i32 %846, 1
  %857 = mul i32 %855, 1
  %858 = shl i32 %846, 1
  %859 = sub i32 0, %846
  %860 = sub i32 0, 1
  %861 = add i32 %859, %860
  %862 = sub i32 0, %861
  %863 = add nsw i32 %846, 1
  store i32 %862, i32* %19, align 4
  br label %591

; <label>:864:                                    ; preds = %639, %612
  br label %639

; <label>:865:                                    ; preds = %700, %673
  %866 = load i8*, i8** %5, align 8
  %867 = load i32, i32* %6, align 4
  %868 = insertvalue { i8*, i32 } undef, i8* %866, 0
  %869 = insertvalue { i8*, i32 } %868, i32 %867, 1
  br label %700
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCCC2Ei(%struct.SCC*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.SCC*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  store %struct.SCC* %0, %struct.SCC** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %struct.SCC*, %struct.SCC** %3, align 8
  %8 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 1
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.13"* %8) #3
  %9 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 2
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.13"* %9) #3
  %10 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.18"* %10) #3
  %11 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 4
  call void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.23"* %11) #3
  %12 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 5
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.18"* %12) #3
  %13 = load i32, i32* %4, align 4
  %14 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 1
  %16 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.13"* %15, i64 %18)
          to label %19 unwind label %130

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.44
  %21 = load i32, i32* @y.45
  %22 = sub i32 %20, 902689909
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 902689909
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %139

; <label>:46:                                     ; preds = %19, %139
  %47 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 2
  %48 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = load i32, i32* @x.44
  %52 = load i32, i32* @y.45
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %139

; <label>:64:                                     ; preds = %46
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.13"* %47, i64 %50)
          to label %65 unwind label %130

; <label>:65:                                     ; preds = %64
  %66 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 4
  %67 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = sext i32 %68 to i64
  invoke void @_ZNSt6vectorIbSaIbEE6resizeEmb(%"class.std::vector.23"* %66, i64 %69, i1 zeroext false)
          to label %70 unwind label %130

; <label>:70:                                     ; preds = %65
  %71 = load i32, i32* @x.44
  %72 = load i32, i32* @y.45
  %73 = add i32 %71, 609897454
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 609897454
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %144

; <label>:97:                                     ; preds = %70, %144
  %98 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 5
  %99 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = sext i32 %100 to i64
  %102 = load i32, i32* @x.44
  %103 = load i32, i32* @y.45
  %104 = add i32 %102, -56164066
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -56164066
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %144

; <label>:128:                                    ; preds = %97
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.18"* %98, i64 %101)
          to label %129 unwind label %130

; <label>:129:                                    ; preds = %128
  ret void

; <label>:130:                                    ; preds = %128, %65, %64, %2
  %131 = landingpad { i8*, i32 }
          cleanup
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %5, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %6, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.18"* %12) #3
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.23"* %11) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.18"* %10) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.13"* %9) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.13"* %8) #3
  br label %134

; <label>:134:                                    ; preds = %130
  %135 = load i8*, i8** %5, align 8
  %136 = load i32, i32* %6, align 4
  %137 = insertvalue { i8*, i32 } undef, i8* %135, 0
  %138 = insertvalue { i8*, i32 } %137, i32 %136, 1
  resume { i8*, i32 } %138

; <label>:139:                                    ; preds = %46, %19
  %140 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 2
  %141 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = sext i32 %142 to i64
  br label %46

; <label>:144:                                    ; preds = %97, %70
  %145 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 5
  %146 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = sext i32 %147 to i64
  br label %97
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.46
  %7 = load i32, i32* @y.47
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -583918400, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -583918400, label %19
    i32 -850711096, label %39
    i32 -754966884, label %76
    i32 -16216969, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -850711096, i32 -16216969
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"class.std::vector.3"*, %"class.std::vector.3"** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %46, i64 %47
  store %"class.std::vector.3"* %48, %"class.std::vector.3"** %3
  %49 = load i32, i32* @x.46
  %50 = load i32, i32* @y.47
  %51 = add i32 %49, 305504281
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 305504281
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -754966884, i32 -16216969
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  %77 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %3
  ret %"class.std::vector.3"* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.std::vector"*, align 8
  %80 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"class.std::vector"*, %"class.std::vector"** %79, align 8
  %82 = bitcast %"class.std::vector"* %81 to %"struct.std::_Vector_base"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::vector.3"*, %"class.std::vector.3"** %84, align 8
  %86 = load i64, i64* %80, align 8
  %87 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %85, i64 %86
  store i32 -850711096, i32* %15
  br label %88

; <label>:88:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %9, i64 %10
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.Solve::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  ret %"struct.Solve::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.Solve::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  ret %"struct.Solve::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.54
  %7 = load i32, i32* @y.55
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -175637140, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -175637140, label %19
    i32 -46664742, label %27
    i32 558384557, label %64
    i32 -1744963806, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -46664742, i32 -1744963806
  store i32 %26, i32* %15
  br label %76

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %31 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %30) #3
  %32 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %31, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29, align 8
  %34 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %33) #3
  %35 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %34, align 8
  %36 = icmp ne %"struct.Solve::edge"* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.54
  %38 = load i32, i32* @y.55
  %39 = add i32 %37, -852626180
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -852626180
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 558384557, i32 -1744963806
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %69 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  %70 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %69) #3
  %71 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %70, align 8
  %72 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %73 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %72) #3
  %74 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %73, align 8
  %75 = icmp ne %"struct.Solve::edge"* %71, %74
  store i32 -46664742, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  ret %"struct.Solve::edge"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCC8add_edgeEii(%struct.SCC*, i32, i32) #0 comdat align 2 {
  %4 = alloca %struct.SCC*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.SCC* %0, %struct.SCC** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.SCC*, %struct.SCC** %4, align 8
  %8 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 1
  %9 = load i32, i32* %5, align 4
  %10 = sext i32 %9 to i64
  %11 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %8, i64 %10) #3
  call void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.18"* %11, i32* dereferenceable(4) %6)
  %12 = getelementptr inbounds %struct.SCC, %struct.SCC* %7, i32 0, i32 2
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %12, i64 %14) #3
  call void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.18"* %15, i32* dereferenceable(4) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZN5Solve4convEii(%class.Solve*, i32, i32) #5 comdat align 2 {
  %4 = alloca %class.Solve*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Solve* %0, %class.Solve** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Solve*, %class.Solve** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = load i32, i32* %6, align 4
  %10 = getelementptr inbounds %class.Solve, %class.Solve* %7, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = mul nsw i32 %9, %11
  %13 = add i32 %8, -1659166890
  %14 = add i32 %13, %12
  %15 = sub i32 %14, -1659166890
  %16 = add nsw i32 %8, %12
  ret i32 %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %5, i32 1
  store %"struct.Solve::edge"* %6, %"struct.Solve::edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN3SCC3sccEv(%struct.SCC*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %struct.SCC*
  %4 = alloca %struct.SCC*, align 8
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca %"struct.std::_Bit_reference", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"struct.std::_Bit_reference", align 8
  store %struct.SCC* %0, %struct.SCC** %4, align 8
  %16 = load %struct.SCC*, %struct.SCC** %4, align 8
  store %struct.SCC* %16, %struct.SCC** %3
  %17 = load volatile %struct.SCC*, %struct.SCC** %3
  %18 = getelementptr inbounds %struct.SCC, %struct.SCC* %17, i32 0, i32 4
  %19 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %18) #3
  %20 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  %22 = extractvalue { i64*, i32 } %19, 0
  store i64* %22, i64** %21, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  %24 = extractvalue { i64*, i32 } %19, 1
  store i32 %24, i32* %23, align 8
  %25 = load volatile %struct.SCC*, %struct.SCC** %3
  %26 = getelementptr inbounds %struct.SCC, %struct.SCC* %25, i32 0, i32 4
  %27 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"* %26) #3
  %28 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 0
  %30 = extractvalue { i64*, i32 } %27, 0
  store i64* %30, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 1
  %32 = extractvalue { i64*, i32 } %27, 1
  store i32 %32, i32* %31, align 8
  store i8 0, i8* %7, align 1
  %33 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %35, i32 %37, i64* %40, i32 %42, i8* dereferenceable(1) %7)
  %43 = load volatile %struct.SCC*, %struct.SCC** %3
  %44 = getelementptr inbounds %struct.SCC, %struct.SCC* %43, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEE5clearEv(%"class.std::vector.18"* %44) #3
  store i32 0, i32* %8, align 4
  %45 = alloca i32
  store i32 -2044949945, i32* %45
  br label %46

; <label>:46:                                     ; preds = %1, %422
  %47 = load i32, i32* %45
  switch i32 %47, label %48 [
    i32 -2044949945, label %49
    i32 2092332878, label %65
    i32 -1308584827, label %98
    i32 -29619521, label %101
    i32 540886523, label %114
    i32 -3862930, label %117
    i32 -765675263, label %132
    i32 2124149824, label %160
    i32 809962601, label %161
    i32 975360544, label %167
    i32 1967258029, label %194
    i32 -452187860, label %254
    i32 -1639968784, label %255
    i32 1622473711, label %259
    i32 -836675441, label %277
    i32 675121324, label %290
    i32 -1059796778, label %291
    i32 315901280, label %306
    i32 -1630706975, label %327
    i32 1870075591, label %328
    i32 -1673497, label %330
    i32 -601781585, label %336
    i32 389207167, label %337
    i32 -184346735, label %401
  ]

; <label>:48:                                     ; preds = %46
  br label %422

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* @x.64
  %51 = load i32, i32* @y.65
  %52 = add i32 %50, -229627906
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -229627906
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 2092332878, i32 -1673497
  store i32 %64, i32* %45
  br label %422

; <label>:65:                                     ; preds = %46
  %66 = load i32, i32* %8, align 4
  %67 = load volatile %struct.SCC*, %struct.SCC** %3
  %68 = getelementptr inbounds %struct.SCC, %struct.SCC* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp slt i32 %66, %69
  store i1 %70, i1* %2
  %71 = load i32, i32* @x.64
  %72 = load i32, i32* @y.65
  %73 = sub i32 %71, -1067420224
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -1067420224
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -1308584827, i32 -1673497
  store i32 %97, i32* %45
  br label %422

; <label>:98:                                     ; preds = %46
  %99 = load volatile i1, i1* %2
  %100 = select i1 %99, i32 -29619521, i32 975360544
  store i32 %100, i32* %45
  br label %422

; <label>:101:                                    ; preds = %46
  %102 = load volatile %struct.SCC*, %struct.SCC** %3
  %103 = getelementptr inbounds %struct.SCC, %struct.SCC* %102, i32 0, i32 4
  %104 = load i32, i32* %8, align 4
  %105 = sext i32 %104 to i64
  %106 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.23"* %103, i64 %105)
  %107 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %108 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %107, i32 0, i32 0
  %109 = extractvalue { i64*, i64 } %106, 0
  store i64* %109, i64** %108, align 8
  %110 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %107, i32 0, i32 1
  %111 = extractvalue { i64*, i64 } %106, 1
  store i64 %111, i64* %110, align 8
  %112 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %9) #3
  %113 = select i1 %112, i32 -3862930, i32 540886523
  store i32 %113, i32* %45
  br label %422

; <label>:114:                                    ; preds = %46
  %115 = load i32, i32* %8, align 4
  %116 = load volatile %struct.SCC*, %struct.SCC** %3
  call void @_ZN3SCC3dfsEi(%struct.SCC* %116, i32 %115)
  store i32 -3862930, i32* %45
  br label %422

; <label>:117:                                    ; preds = %46
  %118 = load i32, i32* @x.64
  %119 = load i32, i32* @y.65
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 -765675263, i32 -601781585
  store i32 %131, i32* %45
  br label %422

; <label>:132:                                    ; preds = %46
  %133 = load i32, i32* @x.64
  %134 = load i32, i32* @y.65
  %135 = sub i32 %133, 376515109
  %136 = sub i32 %135, 1
  %137 = add i32 %136, 376515109
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  %159 = select i1 %157, i32 2124149824, i32 -601781585
  store i32 %159, i32* %45
  br label %422

; <label>:160:                                    ; preds = %46
  store i32 809962601, i32* %45
  br label %422

; <label>:161:                                    ; preds = %46
  %162 = load i32, i32* %8, align 4
  %163 = sub i32 %162, -536434354
  %164 = add i32 %163, 1
  %165 = add i32 %164, -536434354
  %166 = add nsw i32 %162, 1
  store i32 %165, i32* %8, align 4
  store i32 -2044949945, i32* %45
  br label %422

; <label>:167:                                    ; preds = %46
  %168 = load i32, i32* @x.64
  %169 = load i32, i32* @y.65
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  %193 = select i1 %191, i32 1967258029, i32 389207167
  store i32 %193, i32* %45
  br label %422

; <label>:194:                                    ; preds = %46
  %195 = load volatile %struct.SCC*, %struct.SCC** %3
  %196 = getelementptr inbounds %struct.SCC, %struct.SCC* %195, i32 0, i32 4
  %197 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %196) #3
  %198 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %199 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %198, i32 0, i32 0
  %200 = extractvalue { i64*, i32 } %197, 0
  store i64* %200, i64** %199, align 8
  %201 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %198, i32 0, i32 1
  %202 = extractvalue { i64*, i32 } %197, 1
  store i32 %202, i32* %201, align 8
  %203 = load volatile %struct.SCC*, %struct.SCC** %3
  %204 = getelementptr inbounds %struct.SCC, %struct.SCC* %203, i32 0, i32 4
  %205 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"* %204) #3
  %206 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %207 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %206, i32 0, i32 0
  %208 = extractvalue { i64*, i32 } %205, 0
  store i64* %208, i64** %207, align 8
  %209 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %206, i32 0, i32 1
  %210 = extractvalue { i64*, i32 } %205, 1
  store i32 %210, i32* %209, align 8
  store i8 0, i8* %12, align 1
  %211 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %212 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %211, i32 0, i32 0
  %213 = load i64*, i64** %212, align 8
  %214 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %211, i32 0, i32 1
  %215 = load i32, i32* %214, align 8
  %216 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %217 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %216, i32 0, i32 0
  %218 = load i64*, i64** %217, align 8
  %219 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %216, i32 0, i32 1
  %220 = load i32, i32* %219, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %213, i32 %215, i64* %218, i32 %220, i8* dereferenceable(1) %12)
  store i32 0, i32* %13, align 4
  %221 = load volatile %struct.SCC*, %struct.SCC** %3
  %222 = getelementptr inbounds %struct.SCC, %struct.SCC* %221, i32 0, i32 3
  %223 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %222) #3
  %224 = sub i64 0, 1
  %225 = add i64 %223, %224
  %226 = sub i64 %223, 1
  %227 = trunc i64 %225 to i32
  store i32 %227, i32* %14, align 4
  %228 = load i32, i32* @x.64
  %229 = load i32, i32* @y.65
  %230 = sub i32 0, 1
  %231 = add i32 %228, %230
  %232 = sub i32 %228, 1
  %233 = mul i32 %228, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %229, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 true, true
  %240 = and i1 %237, true
  %241 = and i1 %235, %239
  %242 = and i1 %238, true
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 true, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  %253 = select i1 %251, i32 -452187860, i32 389207167
  store i32 %253, i32* %45
  br label %422

; <label>:254:                                    ; preds = %46
  store i32 -1639968784, i32* %45
  br label %422

; <label>:255:                                    ; preds = %46
  %256 = load i32, i32* %14, align 4
  %257 = icmp sge i32 %256, 0
  %258 = select i1 %257, i32 1622473711, i32 1870075591
  store i32 %258, i32* %45
  br label %422

; <label>:259:                                    ; preds = %46
  %260 = load volatile %struct.SCC*, %struct.SCC** %3
  %261 = getelementptr inbounds %struct.SCC, %struct.SCC* %260, i32 0, i32 4
  %262 = load volatile %struct.SCC*, %struct.SCC** %3
  %263 = getelementptr inbounds %struct.SCC, %struct.SCC* %262, i32 0, i32 3
  %264 = load i32, i32* %14, align 4
  %265 = sext i32 %264 to i64
  %266 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"* %263, i64 %265) #3
  %267 = load i32, i32* %266, align 4
  %268 = sext i32 %267 to i64
  %269 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.23"* %261, i64 %268)
  %270 = bitcast %"struct.std::_Bit_reference"* %15 to { i64*, i64 }*
  %271 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %270, i32 0, i32 0
  %272 = extractvalue { i64*, i64 } %269, 0
  store i64* %272, i64** %271, align 8
  %273 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %270, i32 0, i32 1
  %274 = extractvalue { i64*, i64 } %269, 1
  store i64 %274, i64* %273, align 8
  %275 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %15) #3
  %276 = select i1 %275, i32 675121324, i32 -836675441
  store i32 %276, i32* %45
  br label %422

; <label>:277:                                    ; preds = %46
  %278 = load volatile %struct.SCC*, %struct.SCC** %3
  %279 = getelementptr inbounds %struct.SCC, %struct.SCC* %278, i32 0, i32 3
  %280 = load i32, i32* %14, align 4
  %281 = sext i32 %280 to i64
  %282 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"* %279, i64 %281) #3
  %283 = load i32, i32* %282, align 4
  %284 = load i32, i32* %13, align 4
  %285 = add i32 %284, -298782678
  %286 = add i32 %285, 1
  %287 = sub i32 %286, -298782678
  %288 = add nsw i32 %284, 1
  store i32 %287, i32* %13, align 4
  %289 = load volatile %struct.SCC*, %struct.SCC** %3
  call void @_ZN3SCC4rdfsEii(%struct.SCC* %289, i32 %283, i32 %284)
  store i32 675121324, i32* %45
  br label %422

; <label>:290:                                    ; preds = %46
  store i32 -1059796778, i32* %45
  br label %422

; <label>:291:                                    ; preds = %46
  %292 = load i32, i32* @x.64
  %293 = load i32, i32* @y.65
  %294 = sub i32 0, 1
  %295 = add i32 %292, %294
  %296 = sub i32 %292, 1
  %297 = mul i32 %292, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %293, 10
  %301 = and i1 %299, %300
  %302 = xor i1 %299, %300
  %303 = or i1 %301, %302
  %304 = or i1 %299, %300
  %305 = select i1 %303, i32 315901280, i32 -184346735
  store i32 %305, i32* %45
  br label %422

; <label>:306:                                    ; preds = %46
  %307 = load i32, i32* %14, align 4
  %308 = add i32 %307, -1780194181
  %309 = add i32 %308, -1
  %310 = sub i32 %309, -1780194181
  %311 = add nsw i32 %307, -1
  store i32 %310, i32* %14, align 4
  %312 = load i32, i32* @x.64
  %313 = load i32, i32* @y.65
  %314 = add i32 %312, 1661469851
  %315 = sub i32 %314, 1
  %316 = sub i32 %315, 1661469851
  %317 = sub i32 %312, 1
  %318 = mul i32 %312, %316
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %313, 10
  %322 = and i1 %320, %321
  %323 = xor i1 %320, %321
  %324 = or i1 %322, %323
  %325 = or i1 %320, %321
  %326 = select i1 %324, i32 -1630706975, i32 -184346735
  store i32 %326, i32* %45
  br label %422

; <label>:327:                                    ; preds = %46
  store i32 -1639968784, i32* %45
  br label %422

; <label>:328:                                    ; preds = %46
  %329 = load i32, i32* %13, align 4
  ret i32 %329

; <label>:330:                                    ; preds = %46
  %331 = load i32, i32* %8, align 4
  %332 = load volatile %struct.SCC*, %struct.SCC** %3
  %333 = getelementptr inbounds %struct.SCC, %struct.SCC* %332, i32 0, i32 0
  %334 = load i32, i32* %333, align 8
  %335 = icmp slt i32 %331, %334
  store i32 2092332878, i32* %45
  br label %422

; <label>:336:                                    ; preds = %46
  store i32 -765675263, i32* %45
  br label %422

; <label>:337:                                    ; preds = %46
  %338 = load volatile %struct.SCC*, %struct.SCC** %3
  %339 = getelementptr inbounds %struct.SCC, %struct.SCC* %338, i32 0, i32 4
  %340 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %339) #3
  %341 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %342 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %341, i32 0, i32 0
  %343 = extractvalue { i64*, i32 } %340, 0
  store i64* %343, i64** %342, align 8
  %344 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %341, i32 0, i32 1
  %345 = extractvalue { i64*, i32 } %340, 1
  store i32 %345, i32* %344, align 8
  %346 = load volatile %struct.SCC*, %struct.SCC** %3
  %347 = getelementptr inbounds %struct.SCC, %struct.SCC* %346, i32 0, i32 4
  %348 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"* %347) #3
  %349 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %350 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %349, i32 0, i32 0
  %351 = extractvalue { i64*, i32 } %348, 0
  store i64* %351, i64** %350, align 8
  %352 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %349, i32 0, i32 1
  %353 = extractvalue { i64*, i32 } %348, 1
  store i32 %353, i32* %352, align 8
  store i8 0, i8* %12, align 1
  %354 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %355 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %354, i32 0, i32 0
  %356 = load i64*, i64** %355, align 8
  %357 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %354, i32 0, i32 1
  %358 = load i32, i32* %357, align 8
  %359 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %360 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %359, i32 0, i32 0
  %361 = load i64*, i64** %360, align 8
  %362 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %359, i32 0, i32 1
  %363 = load i32, i32* %362, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %356, i32 %358, i64* %361, i32 %363, i8* dereferenceable(1) %12)
  store i32 0, i32* %13, align 4
  %364 = load volatile %struct.SCC*, %struct.SCC** %3
  %365 = getelementptr inbounds %struct.SCC, %struct.SCC* %364, i32 0, i32 3
  %366 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %365) #3
  %367 = sub i64 0, %366
  %368 = add i64 0, %367
  %369 = sub i64 0, %366
  %370 = sub i64 %368, 9183713656709086449
  %371 = add i64 %370, 1
  %372 = add i64 %371, 9183713656709086449
  %373 = add i64 %368, 1
  %374 = sub i64 0, 1722897860388319723
  %375 = sub i64 %374, %366
  %376 = add i64 %375, 1722897860388319723
  %377 = sub i64 0, %366
  %378 = sub i64 %376, -488825186375897476
  %379 = add i64 %378, 1
  %380 = add i64 %379, -488825186375897476
  %381 = add i64 %376, 1
  %382 = sub i64 0, -9151440116995176608
  %383 = sub i64 %382, %366
  %384 = add i64 %383, -9151440116995176608
  %385 = sub i64 0, %366
  %386 = sub i64 0, %384
  %387 = sub i64 0, 1
  %388 = add i64 %386, %387
  %389 = sub i64 0, %388
  %390 = add i64 %384, 1
  %391 = sub i64 0, 1
  %392 = add i64 %366, %391
  %393 = sub i64 %366, 1
  %394 = mul i64 %392, 1
  %395 = shl i64 %366, 1
  %396 = add i64 %366, -7127488767825016010
  %397 = sub i64 %396, 1
  %398 = sub i64 %397, -7127488767825016010
  %399 = sub i64 %366, 1
  %400 = trunc i64 %398 to i32
  store i32 %400, i32* %14, align 4
  store i32 1967258029, i32* %45
  br label %422

; <label>:401:                                    ; preds = %46
  %402 = load i32, i32* %14, align 4
  %403 = add i32 0, -1449564811
  %404 = sub i32 %403, %402
  %405 = sub i32 %404, -1449564811
  %406 = sub i32 0, %402
  %407 = add i32 %405, 1820218368
  %408 = add i32 %407, -1
  %409 = sub i32 %408, 1820218368
  %410 = add i32 %405, -1
  %411 = sub i32 %402, -317818839
  %412 = sub i32 %411, -1
  %413 = add i32 %412, -317818839
  %414 = sub i32 %402, -1
  %415 = mul i32 %413, -1
  %416 = shl i32 %402, -1
  %417 = sub i32 0, %402
  %418 = sub i32 0, -1
  %419 = add i32 %417, %418
  %420 = sub i32 0, %419
  %421 = add nsw i32 %402, -1
  store i32 %420, i32* %14, align 4
  store i32 315901280, i32* %45
  br label %422

; <label>:422:                                    ; preds = %401, %337, %336, %330, %327, %306, %291, %290, %277, %259, %255, %254, %194, %167, %161, %160, %132, %117, %114, %101, %98, %65, %49, %48
  br label %46
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3SCCD2Ev(%struct.SCC*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %struct.SCC*, align 8
  store %struct.SCC* %0, %struct.SCC** %2, align 8
  %3 = load %struct.SCC*, %struct.SCC** %2, align 8
  %4 = getelementptr inbounds %struct.SCC, %struct.SCC* %3, i32 0, i32 5
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.18"* %4) #3
  %5 = getelementptr inbounds %struct.SCC, %struct.SCC* %3, i32 0, i32 4
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.23"* %5) #3
  %6 = getelementptr inbounds %struct.SCC, %struct.SCC* %3, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.18"* %6) #3
  %7 = getelementptr inbounds %struct.SCC, %struct.SCC* %3, i32 0, i32 2
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.13"* %7) #3
  %8 = getelementptr inbounds %struct.SCC, %struct.SCC* %3, i32 0, i32 1
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.13"* %8) #3
  ret void
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6resizeEmRKS5_(%"class.std::vector"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector"*
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.3"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store i64 %1, i64* %8, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %9, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %13, %"class.std::vector"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %16 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 1563498885, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %144
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1563498885, label %21
    i32 -1258153102, label %26
    i32 1018314974, label %42
    i32 -565119505, label %48
    i32 1553991313, label %63
    i32 150122045, label %87
    i32 744720529, label %88
    i32 2092175478, label %116
    i32 -1748110652, label %132
    i32 -1069869927, label %133
    i32 2037437177, label %134
    i32 -200932324, label %143
  ]

; <label>:20:                                     ; preds = %18
  br label %144

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 -1258153102, i32 1018314974
  store i32 %25, i32* %17
  br label %144

; <label>:26:                                     ; preds = %18
  %27 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %28 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE3endEv(%"class.std::vector"* %27) #3
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %11, i32 0, i32 0
  store %"class.std::vector.3"* %28, %"class.std::vector.3"** %29, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2IPS7_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISF_SE_EE7__valueESB_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.29"* %10, %"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %11) #3
  %30 = load i64, i64* %8, align 8
  %31 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %32 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %31) #3
  %33 = sub i64 0, %32
  %34 = add i64 %30, %33
  %35 = sub i64 %30, %32
  %36 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %10, i32 0, i32 0
  %38 = load %"class.std::vector.3"*, %"class.std::vector.3"** %37, align 8
  %39 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %40 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEmRSA_(%"class.std::vector"* %39, %"class.std::vector.3"* %38, i64 %34, %"class.std::vector.3"* dereferenceable(24) %36)
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %12, i32 0, i32 0
  store %"class.std::vector.3"* %40, %"class.std::vector.3"** %41, align 8
  store i32 -1069869927, i32* %17
  br label %144

; <label>:42:                                     ; preds = %18
  %43 = load i64, i64* %8, align 8
  %44 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %45 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %44) #3
  %46 = icmp ult i64 %43, %45
  %47 = select i1 %46, i32 -565119505, i32 744720529
  store i32 %47, i32* %17
  br label %144

; <label>:48:                                     ; preds = %18
  %49 = load i32, i32* @x.68
  %50 = load i32, i32* @y.69
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1553991313, i32 2037437177
  store i32 %62, i32* %17
  br label %144

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %65 = bitcast %"class.std::vector"* %64 to %"struct.std::_Vector_base"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"class.std::vector.3"*, %"class.std::vector.3"** %67, align 8
  %69 = load i64, i64* %8, align 8
  %70 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %68, i64 %69
  %71 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  call void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector"* %71, %"class.std::vector.3"* %70) #3
  %72 = load i32, i32* @x.68
  %73 = load i32, i32* @y.69
  %74 = sub i32 %72, 1473903536
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 1473903536
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 150122045, i32 2037437177
  store i32 %86, i32* %17
  br label %144

; <label>:87:                                     ; preds = %18
  store i32 744720529, i32* %17
  br label %144

; <label>:88:                                     ; preds = %18
  %89 = load i32, i32* @x.68
  %90 = load i32, i32* @y.69
  %91 = add i32 %89, 172143166
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, 172143166
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 2092175478, i32 -200932324
  store i32 %115, i32* %17
  br label %144

; <label>:116:                                    ; preds = %18
  %117 = load i32, i32* @x.68
  %118 = load i32, i32* @y.69
  %119 = sub i32 %117, 1620677003
  %120 = sub i32 %119, 1
  %121 = add i32 %120, 1620677003
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 -1748110652, i32 -200932324
  store i32 %131, i32* %17
  br label %144

; <label>:132:                                    ; preds = %18
  store i32 -1069869927, i32* %17
  br label %144

; <label>:133:                                    ; preds = %18
  ret void

; <label>:134:                                    ; preds = %18
  %135 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %136 = bitcast %"class.std::vector"* %135 to %"struct.std::_Vector_base"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %137, i32 0, i32 0
  %139 = load %"class.std::vector.3"*, %"class.std::vector.3"** %138, align 8
  %140 = load i64, i64* %8, align 8
  %141 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %139, i64 %140
  %142 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  call void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector"* %142, %"class.std::vector.3"* %141) #3
  store i32 1553991313, i32* %17
  br label %144

; <label>:143:                                    ; preds = %18
  store i32 2092175478, i32* %17
  br label %144

; <label>:144:                                    ; preds = %143, %134, %132, %116, %88, %87, %63, %48, %42, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2EmRKS4_(%"class.std::vector.3"*, i64, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.72
  %5 = load i32, i32* @y.73
  %6 = sub i32 %4, -828158502
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -828158502
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %137

; <label>:18:                                     ; preds = %3, %137
  %19 = alloca %"class.std::vector.3"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator.5"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %21, align 8
  %24 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %25 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %26 = load i64, i64* %20, align 8
  %27 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %21, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.4"* %25, i64 %26, %"class.std::allocator.5"* dereferenceable(1) %27)
  %28 = load i64, i64* %20, align 8
  %29 = load i32, i32* @x.72
  %30 = load i32, i32* @y.73
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %137

; <label>:42:                                     ; preds = %18
  invoke void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE21_M_default_initializeEm(%"class.std::vector.3"* %24, i64 %28)
          to label %43 unwind label %85

; <label>:43:                                     ; preds = %42
  %44 = load i32, i32* @x.72
  %45 = load i32, i32* @y.73
  %46 = add i32 %44, -1102176588
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1102176588
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %148

; <label>:58:                                     ; preds = %43, %148
  %59 = load i32, i32* @x.72
  %60 = load i32, i32* @y.73
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %148

; <label>:84:                                     ; preds = %58
  ret void

; <label>:85:                                     ; preds = %42
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %22, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %23, align 4
  %89 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %89) #3
  br label %90

; <label>:90:                                     ; preds = %85
  %91 = load i32, i32* @x.72
  %92 = load i32, i32* @y.73
  %93 = sub i32 %91, -1227648962
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -1227648962
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %149

; <label>:117:                                    ; preds = %90, %149
  %118 = load i8*, i8** %22, align 8
  %119 = load i32, i32* %23, align 4
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  %122 = load i32, i32* @x.72
  %123 = load i32, i32* @y.73
  %124 = add i32 %122, 403528820
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, 403528820
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %149

; <label>:136:                                    ; preds = %117
  resume { i8*, i32 } %121

; <label>:137:                                    ; preds = %18, %3
  %138 = alloca %"class.std::vector.3"*, align 8
  %139 = alloca i64, align 8
  %140 = alloca %"class.std::allocator.5"*, align 8
  %141 = alloca i8*
  %142 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %138, align 8
  store i64 %1, i64* %139, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %140, align 8
  %143 = load %"class.std::vector.3"*, %"class.std::vector.3"** %138, align 8
  %144 = bitcast %"class.std::vector.3"* %143 to %"struct.std::_Vector_base.4"*
  %145 = load i64, i64* %139, align 8
  %146 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %140, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.4"* %144, i64 %145, %"class.std::allocator.5"* dereferenceable(1) %146)
  %147 = load i64, i64* %139, align 8
  br label %18

; <label>:148:                                    ; preds = %58, %43
  br label %58

; <label>:149:                                    ; preds = %117, %90
  %150 = load i8*, i8** %22, align 8
  %151 = load i32, i32* %23, align 4
  %152 = insertvalue { i8*, i32 } undef, i8* %150, 0
  %153 = insertvalue { i8*, i32 } %152, i32 %151, 1
  br label %117
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.74
  %3 = load i32, i32* @y.75
  %4 = add i32 %2, 276001991
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 276001991
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %108

; <label>:28:                                     ; preds = %1, %108
  %29 = alloca %"class.std::vector.3"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %29, align 8
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %29, align 8
  %33 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.8"*, %"class.std::vector.8"** %35, align 8
  %37 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"class.std::vector.8"*, %"class.std::vector.8"** %39, align 8
  %41 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %42 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %41) #3
  %43 = load i32, i32* @x.74
  %44 = load i32, i32* @y.75
  %45 = sub i32 %43, 384227409
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 384227409
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %108

; <label>:69:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %36, %"class.std::vector.8"* %40, %"class.std::allocator.5"* dereferenceable(1) %42)
          to label %70 unwind label %101

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* @x.74
  %72 = load i32, i32* @y.75
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %123

; <label>:84:                                     ; preds = %70, %123
  %85 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %85) #3
  %86 = load i32, i32* @x.74
  %87 = load i32, i32* @y.75
  %88 = sub i32 %86, 948806384
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 948806384
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %123

; <label>:100:                                    ; preds = %84
  ret void

; <label>:101:                                    ; preds = %69
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %30, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %31, align 4
  %105 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %105) #3
  br label %106

; <label>:106:                                    ; preds = %101
  %107 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %107) #10
  unreachable

; <label>:108:                                    ; preds = %28, %1
  %109 = alloca %"class.std::vector.3"*, align 8
  %110 = alloca i8*
  %111 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %109, align 8
  %112 = load %"class.std::vector.3"*, %"class.std::vector.3"** %109, align 8
  %113 = bitcast %"class.std::vector.3"* %112 to %"struct.std::_Vector_base.4"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %113, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %114, i32 0, i32 0
  %116 = load %"class.std::vector.8"*, %"class.std::vector.8"** %115, align 8
  %117 = bitcast %"class.std::vector.3"* %112 to %"struct.std::_Vector_base.4"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %118, i32 0, i32 1
  %120 = load %"class.std::vector.8"*, %"class.std::vector.8"** %119, align 8
  %121 = bitcast %"class.std::vector.3"* %112 to %"struct.std::_Vector_base.4"*
  %122 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %121) #3
  br label %28

; <label>:123:                                    ; preds = %84, %70
  %124 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %124) #3
  br label %84
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"*, %"struct.Solve::edge"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.78
  %6 = load i32, i32* @y.79
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1608016638, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1608016638, label %18
    i32 -332707476, label %26
    i32 1075943300, label %47
    i32 -896381103, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -332707476, i32 -896381103
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.8"*, align 8
  %28 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %27, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  %30 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %28, align 8
  %31 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %30) #3
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"* %29, %"struct.Solve::edge"* dereferenceable(8) %31)
  %32 = load i32, i32* @x.78
  %33 = load i32, i32* @y.79
  %34 = add i32 %32, 396321546
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 396321546
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1075943300, i32 -896381103
  store i32 %46, i32* %14
  br label %54

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::vector.8"*, align 8
  %50 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %49, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %50, align 8
  %51 = load %"class.std::vector.8"*, %"class.std::vector.8"** %49, align 8
  %52 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %50, align 8
  %53 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %52) #3
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"* %51, %"struct.Solve::edge"* dereferenceable(8) %53)
  store i32 -332707476, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEZNS2_5inputEvEUlS3_S3_E_EvT_SA_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %class.anon, align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %class.anon, align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_15_Iter_comp_iterIT_EES6_()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %18 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %20 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %19, align 8
  call void @_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %18, %"struct.Solve::edge"* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt5beginISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_5beginEERT_(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %5, %"struct.Solve::edge"** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  ret %"struct.Solve::edge"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt3endISt6vectorIN5Solve4edgeESaIS2_EEEDTcldtfp_3endEERT_(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %5, %"struct.Solve::edge"** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  ret %"struct.Solve::edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_(%"class.std::vector.8"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %13, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %7, align 8
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %15 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %14) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Solve::edge"* %15, %"struct.Solve::edge"** %16, align 8
  %17 = call %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE6cbeginEv(%"class.std::vector.8"* %14) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %9, i32 0, i32 0
  store %"struct.Solve::edge"* %17, %"struct.Solve::edge"** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.27"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.27"* dereferenceable(8) %9) #3
  %20 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %19) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Solve::edge"* %20, %"struct.Solve::edge"** %21, align 8
  %22 = call i64 @_ZN9__gnu_cxxmiIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.27"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.27"* dereferenceable(8) %9) #3
  %23 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %22) #3
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"struct.Solve::edge"* %23, %"struct.Solve::edge"** %24, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %26 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %28 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %27, align 8
  %29 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_(%"class.std::vector.8"* %14, %"struct.Solve::edge"* %26, %"struct.Solve::edge"* %28)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %29, %"struct.Solve::edge"** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %32 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %31, align 8
  ret %"struct.Solve::edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEET_S9_S9_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %11, align 8
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv()
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %17 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %19 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %18, align 8
  %20 = call %"struct.Solve::edge"* @_ZSt8__uniqueIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops19_Iter_equal_to_iterEET_SB_SB_T0_(%"struct.Solve::edge"* %17, %"struct.Solve::edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %20, %"struct.Solve::edge"** %21, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %23 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %22, align 8
  ret %"struct.Solve::edge"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  store %"struct.Solve::edge"* %9, %"struct.Solve::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = ptrtoint %"class.std::vector.3"* %7 to i64
  %13 = ptrtoint %"class.std::vector.3"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEmRSA_(%"class.std::vector"*, %"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.3"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %6, i32 0, i32 0
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %15, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store i64 %2, i64* %8, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %9, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %17 = call %"class.std::vector.3"* @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6cbeginEv(%"class.std::vector"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %11, i32 0, i32 0
  store %"class.std::vector.3"* %17, %"class.std::vector.3"** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %11) #3
  store i64 %19, i64* %10, align 8
  %20 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE5beginEv(%"class.std::vector"* %16) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %13, i32 0, i32 0
  store %"class.std::vector.3"* %20, %"class.std::vector.3"** %21, align 8
  %22 = load i64, i64* %10, align 8
  %23 = call %"class.std::vector.3"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEplEl(%"class.__gnu_cxx::__normal_iterator.28"* %13, i64 %22) #3
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %12, i32 0, i32 0
  store %"class.std::vector.3"* %23, %"class.std::vector.3"** %24, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %12, i32 0, i32 0
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %27, align 8
  call void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EEmRKS5_(%"class.std::vector"* %16, %"class.std::vector.3"* %28, i64 %25, %"class.std::vector.3"* dereferenceable(24) %26)
  %29 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE5beginEv(%"class.std::vector"* %16) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %14, i32 0, i32 0
  store %"class.std::vector.3"* %29, %"class.std::vector.3"** %30, align 8
  %31 = load i64, i64* %10, align 8
  %32 = call %"class.std::vector.3"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEplEl(%"class.__gnu_cxx::__normal_iterator.28"* %14, i64 %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %5, i32 0, i32 0
  store %"class.std::vector.3"* %32, %"class.std::vector.3"** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %5, i32 0, i32 0
  %35 = load %"class.std::vector.3"*, %"class.std::vector.3"** %34, align 8
  ret %"class.std::vector.3"* %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.28"* %2, %"class.std::vector.3"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  ret %"class.std::vector.3"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2IPS7_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISF_SE_EE7__valueESB_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %1, %"class.__gnu_cxx::__normal_iterator.28"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %4, align 8
  %8 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %7) #3
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %9, %"class.std::vector.3"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector"*, %"class.std::vector.3"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.100
  %4 = load i32, i32* @y.101
  %5 = add i32 %3, -1859926276
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1859926276
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %92

; <label>:29:                                     ; preds = %2, %92
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %31, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %33 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  %34 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %36, align 8
  %38 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %39 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %38) #3
  %40 = load i32, i32* @x.100
  %41 = load i32, i32* @y.101
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %92

; <label>:53:                                     ; preds = %29
  invoke void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E(%"class.std::vector.3"* %33, %"class.std::vector.3"* %37, %"class.std::allocator.0"* dereferenceable(1) %39)
          to label %54 unwind label %89

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.100
  %56 = load i32, i32* @y.101
  %57 = add i32 %55, 873137193
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 873137193
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %103

; <label>:69:                                     ; preds = %54, %103
  %70 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  %71 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %72, i32 0, i32 1
  store %"class.std::vector.3"* %70, %"class.std::vector.3"** %73, align 8
  %74 = load i32, i32* @x.100
  %75 = load i32, i32* @y.101
  %76 = add i32 %74, 1970724351
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 1970724351
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %103

; <label>:88:                                     ; preds = %69
  ret void

; <label>:89:                                     ; preds = %53
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  call void @__clang_call_terminate(i8* %91) #10
  unreachable

; <label>:92:                                     ; preds = %29, %2
  %93 = alloca %"class.std::vector"*, align 8
  %94 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %93, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %94, align 8
  %95 = load %"class.std::vector"*, %"class.std::vector"** %93, align 8
  %96 = load %"class.std::vector.3"*, %"class.std::vector.3"** %94, align 8
  %97 = bitcast %"class.std::vector"* %95 to %"struct.std::_Vector_base"*
  %98 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %98, i32 0, i32 1
  %100 = load %"class.std::vector.3"*, %"class.std::vector.3"** %99, align 8
  %101 = bitcast %"class.std::vector"* %95 to %"struct.std::_Vector_base"*
  %102 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %101) #3
  br label %29

; <label>:103:                                    ; preds = %69, %54
  %104 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  %105 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %106, i32 0, i32 1
  store %"class.std::vector.3"* %104, %"class.std::vector.3"** %107, align 8
  br label %69
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %1, %"class.__gnu_cxx::__normal_iterator.29"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %5) #3
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %8) #3
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %11 = ptrtoint %"class.std::vector.3"* %7 to i64
  %12 = ptrtoint %"class.std::vector.3"* %10 to i64
  %13 = sub i64 %11, -5960175342282414108
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -5960175342282414108
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE6cbeginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %9, %"class.std::vector.3"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS9_(%"class.__gnu_cxx::__normal_iterator.29"* %2, %"class.std::vector.3"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  ret %"class.std::vector.3"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EEmRKS5_(%"class.std::vector"*, %"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.106
  %6 = load i32, i32* @y.107
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %886

; <label>:18:                                     ; preds = %4, %886
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %20 = alloca %"class.std::vector"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::vector.3"*, align 8
  %23 = alloca %"class.std::vector.3", align 8
  %24 = alloca i64, align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %26 = alloca %"class.std::vector.3"*, align 8
  %27 = alloca i8*
  %28 = alloca i32
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %32 = alloca %"class.std::vector.3"*, align 8
  %33 = alloca %"class.std::vector.3"*, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %19, i32 0, i32 0
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %34, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %20, align 8
  store i64 %2, i64* %21, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %22, align 8
  %35 = load %"class.std::vector"*, %"class.std::vector"** %20, align 8
  %36 = load i64, i64* %21, align 8
  %37 = icmp ne i64 %36, 0
  %38 = load i32, i32* @x.106
  %39 = load i32, i32* @y.107
  %40 = add i32 %38, 39260362
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 39260362
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %886

; <label>:52:                                     ; preds = %18
  br i1 %37, label %53, label %764

; <label>:53:                                     ; preds = %52
  %54 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %55, i32 0, i32 2
  %57 = load %"class.std::vector.3"*, %"class.std::vector.3"** %56, align 8
  %58 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %59, i32 0, i32 1
  %61 = load %"class.std::vector.3"*, %"class.std::vector.3"** %60, align 8
  %62 = ptrtoint %"class.std::vector.3"* %57 to i64
  %63 = ptrtoint %"class.std::vector.3"* %61 to i64
  %64 = add i64 %62, -927815956545317465
  %65 = sub i64 %64, %63
  %66 = sub i64 %65, -927815956545317465
  %67 = sub i64 %62, %63
  %68 = sdiv exact i64 %66, 24
  %69 = load i64, i64* %21, align 8
  %70 = icmp uge i64 %68, %69
  br i1 %70, label %71, label %380

; <label>:71:                                     ; preds = %53
  %72 = load i32, i32* @x.106
  %73 = load i32, i32* @y.107
  %74 = add i32 %72, 496793987
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, 496793987
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %906

; <label>:86:                                     ; preds = %71, %906
  %87 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS5_(%"class.std::vector.3"* %23, %"class.std::vector.3"* dereferenceable(24) %87)
  %88 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE3endEv(%"class.std::vector"* %35) #3
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %25, i32 0, i32 0
  store %"class.std::vector.3"* %88, %"class.std::vector.3"** %89, align 8
  %90 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %25, %"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %19) #3
  store i64 %90, i64* %24, align 8
  %91 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %92, i32 0, i32 1
  %94 = load %"class.std::vector.3"*, %"class.std::vector.3"** %93, align 8
  store %"class.std::vector.3"* %94, %"class.std::vector.3"** %26, align 8
  %95 = load i64, i64* %24, align 8
  %96 = load i64, i64* %21, align 8
  %97 = icmp ugt i64 %95, %96
  %98 = load i32, i32* @x.106
  %99 = load i32, i32* @y.107
  %100 = sub i32 %98, -350340046
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -350340046
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %906

; <label>:124:                                    ; preds = %86
  br i1 %97, label %125, label %299

; <label>:125:                                    ; preds = %124
  %126 = load i32, i32* @x.106
  %127 = load i32, i32* @y.107
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %918

; <label>:139:                                    ; preds = %125, %918
  %140 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %141, i32 0, i32 1
  %143 = load %"class.std::vector.3"*, %"class.std::vector.3"** %142, align 8
  %144 = load i64, i64* %21, align 8
  %145 = sub i64 0, %144
  %146 = add i64 0, %145
  %147 = sub i64 0, %144
  %148 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %143, i64 %146
  %149 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %150, i32 0, i32 1
  %152 = load %"class.std::vector.3"*, %"class.std::vector.3"** %151, align 8
  %153 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %154 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %153, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %154, i32 0, i32 1
  %156 = load %"class.std::vector.3"*, %"class.std::vector.3"** %155, align 8
  %157 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %158 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %157) #3
  %159 = load i32, i32* @x.106
  %160 = load i32, i32* @y.107
  %161 = add i32 %159, 78988886
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 78988886
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  br i1 %171, label %173, label %918

; <label>:173:                                    ; preds = %139
  %174 = invoke %"class.std::vector.3"* @_ZSt22__uninitialized_move_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_(%"class.std::vector.3"* %148, %"class.std::vector.3"* %152, %"class.std::vector.3"* %156, %"class.std::allocator.0"* dereferenceable(1) %158)
          to label %175 unwind label %242

; <label>:175:                                    ; preds = %173
  %176 = load i32, i32* @x.106
  %177 = load i32, i32* @y.107
  %178 = sub i32 %176, 146532198
  %179 = sub i32 %178, 1
  %180 = add i32 %179, 146532198
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %968

; <label>:190:                                    ; preds = %175, %968
  %191 = load i64, i64* %21, align 8
  %192 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %193, i32 0, i32 1
  %195 = load %"class.std::vector.3"*, %"class.std::vector.3"** %194, align 8
  %196 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %195, i64 %191
  store %"class.std::vector.3"* %196, %"class.std::vector.3"** %194, align 8
  %197 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %198 = load %"class.std::vector.3"*, %"class.std::vector.3"** %197, align 8
  %199 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  %200 = load i64, i64* %21, align 8
  %201 = sub i64 0, 6199747686248471511
  %202 = sub i64 %201, %200
  %203 = add i64 %202, 6199747686248471511
  %204 = sub i64 0, %200
  %205 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %199, i64 %203
  %206 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  %207 = load i32, i32* @x.106
  %208 = load i32, i32* @y.107
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 false, true
  %219 = and i1 %216, false
  %220 = and i1 %214, %218
  %221 = and i1 %217, false
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 false, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  br i1 %230, label %232, label %968

; <label>:232:                                    ; preds = %190
  %233 = invoke %"class.std::vector.3"* @_ZSt13move_backwardIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET0_T_S9_S8_(%"class.std::vector.3"* %198, %"class.std::vector.3"* %205, %"class.std::vector.3"* %206)
          to label %234 unwind label %242

; <label>:234:                                    ; preds = %232
  %235 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %236 = load %"class.std::vector.3"*, %"class.std::vector.3"** %235, align 8
  %237 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %238 = load %"class.std::vector.3"*, %"class.std::vector.3"** %237, align 8
  %239 = load i64, i64* %21, align 8
  %240 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %238, i64 %239
  invoke void @_ZSt4fillIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RKT0_(%"class.std::vector.3"* %236, %"class.std::vector.3"* %240, %"class.std::vector.3"* dereferenceable(24) %23)
          to label %241 unwind label %242

; <label>:241:                                    ; preds = %234
  br label %379

; <label>:242:                                    ; preds = %377, %312, %299, %234, %232, %173
  %243 = load i32, i32* @x.106
  %244 = load i32, i32* @y.107
  %245 = sub i32 %243, -983696469
  %246 = sub i32 %245, 1
  %247 = add i32 %246, -983696469
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = xor i1 %251, true
  %254 = xor i1 %252, true
  %255 = xor i1 false, true
  %256 = and i1 %253, false
  %257 = and i1 %251, %255
  %258 = and i1 %254, false
  %259 = and i1 %252, %255
  %260 = or i1 %256, %257
  %261 = or i1 %258, %259
  %262 = xor i1 %260, %261
  %263 = or i1 %253, %254
  %264 = xor i1 %263, true
  %265 = or i1 false, %255
  %266 = and i1 %264, %265
  %267 = or i1 %262, %266
  %268 = or i1 %251, %252
  br i1 %267, label %269, label %1015

; <label>:269:                                    ; preds = %242, %1015
  %270 = landingpad { i8*, i32 }
          cleanup
  %271 = extractvalue { i8*, i32 } %270, 0
  store i8* %271, i8** %27, align 8
  %272 = extractvalue { i8*, i32 } %270, 1
  store i32 %272, i32* %28, align 4
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %23) #3
  %273 = load i32, i32* @x.106
  %274 = load i32, i32* @y.107
  %275 = sub i32 0, 1
  %276 = add i32 %273, %275
  %277 = sub i32 %273, 1
  %278 = mul i32 %273, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %274, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 false, true
  %285 = and i1 %282, false
  %286 = and i1 %280, %284
  %287 = and i1 %283, false
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 false, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %1015

; <label>:298:                                    ; preds = %269
  br label %794

; <label>:299:                                    ; preds = %124
  %300 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %301 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %300, i32 0, i32 0
  %302 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %301, i32 0, i32 1
  %303 = load %"class.std::vector.3"*, %"class.std::vector.3"** %302, align 8
  %304 = load i64, i64* %21, align 8
  %305 = load i64, i64* %24, align 8
  %306 = sub i64 0, %305
  %307 = add i64 %304, %306
  %308 = sub i64 %304, %305
  %309 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %310 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %309) #3
  %311 = invoke %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEmS6_S6_ET_S8_T0_RKT1_RSaIT2_E(%"class.std::vector.3"* %303, i64 %307, %"class.std::vector.3"* dereferenceable(24) %23, %"class.std::allocator.0"* dereferenceable(1) %310)
          to label %312 unwind label %242

; <label>:312:                                    ; preds = %299
  %313 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %314 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %313, i32 0, i32 0
  %315 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %314, i32 0, i32 1
  store %"class.std::vector.3"* %311, %"class.std::vector.3"** %315, align 8
  %316 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %317 = load %"class.std::vector.3"*, %"class.std::vector.3"** %316, align 8
  %318 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  %319 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %320 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %320, i32 0, i32 1
  %322 = load %"class.std::vector.3"*, %"class.std::vector.3"** %321, align 8
  %323 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %324 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %323) #3
  %325 = invoke %"class.std::vector.3"* @_ZSt22__uninitialized_move_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_(%"class.std::vector.3"* %317, %"class.std::vector.3"* %318, %"class.std::vector.3"* %322, %"class.std::allocator.0"* dereferenceable(1) %324)
          to label %326 unwind label %242

; <label>:326:                                    ; preds = %312
  %327 = load i32, i32* @x.106
  %328 = load i32, i32* @y.107
  %329 = sub i32 %327, 31211225
  %330 = sub i32 %329, 1
  %331 = add i32 %330, 31211225
  %332 = sub i32 %327, 1
  %333 = mul i32 %327, %331
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %328, 10
  %337 = and i1 %335, %336
  %338 = xor i1 %335, %336
  %339 = or i1 %337, %338
  %340 = or i1 %335, %336
  br i1 %339, label %341, label %1019

; <label>:341:                                    ; preds = %326, %1019
  %342 = load i64, i64* %24, align 8
  %343 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %343, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %344, i32 0, i32 1
  %346 = load %"class.std::vector.3"*, %"class.std::vector.3"** %345, align 8
  %347 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %346, i64 %342
  store %"class.std::vector.3"* %347, %"class.std::vector.3"** %345, align 8
  %348 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %349 = load %"class.std::vector.3"*, %"class.std::vector.3"** %348, align 8
  %350 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  %351 = load i32, i32* @x.106
  %352 = load i32, i32* @y.107
  %353 = sub i32 %351, -802388912
  %354 = sub i32 %353, 1
  %355 = add i32 %354, -802388912
  %356 = sub i32 %351, 1
  %357 = mul i32 %351, %355
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %352, 10
  %361 = xor i1 %359, true
  %362 = xor i1 %360, true
  %363 = xor i1 false, true
  %364 = and i1 %361, false
  %365 = and i1 %359, %363
  %366 = and i1 %362, false
  %367 = and i1 %360, %363
  %368 = or i1 %364, %365
  %369 = or i1 %366, %367
  %370 = xor i1 %368, %369
  %371 = or i1 %361, %362
  %372 = xor i1 %371, true
  %373 = or i1 false, %363
  %374 = and i1 %372, %373
  %375 = or i1 %370, %374
  %376 = or i1 %359, %360
  br i1 %375, label %377, label %1019

; <label>:377:                                    ; preds = %341
  invoke void @_ZSt4fillIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RKT0_(%"class.std::vector.3"* %349, %"class.std::vector.3"* %350, %"class.std::vector.3"* dereferenceable(24) %23)
          to label %378 unwind label %242

; <label>:378:                                    ; preds = %377
  br label %379

; <label>:379:                                    ; preds = %378, %241
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %23) #3
  br label %710

; <label>:380:                                    ; preds = %53
  %381 = load i32, i32* @x.106
  %382 = load i32, i32* @y.107
  %383 = sub i32 0, 1
  %384 = add i32 %381, %383
  %385 = sub i32 %381, 1
  %386 = mul i32 %381, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %382, 10
  %390 = xor i1 %388, true
  %391 = xor i1 %389, true
  %392 = xor i1 true, true
  %393 = and i1 %390, true
  %394 = and i1 %388, %392
  %395 = and i1 %391, true
  %396 = and i1 %389, %392
  %397 = or i1 %393, %394
  %398 = or i1 %395, %396
  %399 = xor i1 %397, %398
  %400 = or i1 %390, %391
  %401 = xor i1 %400, true
  %402 = or i1 true, %392
  %403 = and i1 %401, %402
  %404 = or i1 %399, %403
  %405 = or i1 %388, %389
  br i1 %404, label %406, label %1029

; <label>:406:                                    ; preds = %380, %1029
  %407 = load i64, i64* %21, align 8
  %408 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector"* %35, i64 %407, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %408, i64* %29, align 8
  %409 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE5beginEv(%"class.std::vector"* %35) #3
  %410 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %31, i32 0, i32 0
  store %"class.std::vector.3"* %409, %"class.std::vector.3"** %410, align 8
  %411 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %31) #3
  store i64 %411, i64* %30, align 8
  %412 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %413 = load i64, i64* %29, align 8
  %414 = call %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE11_M_allocateEm(%"struct.std::_Vector_base"* %412, i64 %413)
  store %"class.std::vector.3"* %414, %"class.std::vector.3"** %32, align 8
  %415 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  store %"class.std::vector.3"* %415, %"class.std::vector.3"** %33, align 8
  %416 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %417 = load i64, i64* %30, align 8
  %418 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %416, i64 %417
  %419 = load i64, i64* %21, align 8
  %420 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  %421 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %422 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %421) #3
  %423 = load i32, i32* @x.106
  %424 = load i32, i32* @y.107
  %425 = add i32 %423, 1158927130
  %426 = sub i32 %425, 1
  %427 = sub i32 %426, 1158927130
  %428 = sub i32 %423, 1
  %429 = mul i32 %423, %427
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %424, 10
  %433 = and i1 %431, %432
  %434 = xor i1 %431, %432
  %435 = or i1 %433, %434
  %436 = or i1 %431, %432
  br i1 %435, label %437, label %1029

; <label>:437:                                    ; preds = %406
  %438 = invoke %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEmS6_S6_ET_S8_T0_RKT1_RSaIT2_E(%"class.std::vector.3"* %418, i64 %419, %"class.std::vector.3"* dereferenceable(24) %420, %"class.std::allocator.0"* dereferenceable(1) %422)
          to label %439 unwind label %465

; <label>:439:                                    ; preds = %437
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %33, align 8
  %440 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %441 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %440, i32 0, i32 0
  %442 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %441, i32 0, i32 0
  %443 = load %"class.std::vector.3"*, %"class.std::vector.3"** %442, align 8
  %444 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %445 = load %"class.std::vector.3"*, %"class.std::vector.3"** %444, align 8
  %446 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %447 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %448 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %447) #3
  %449 = invoke %"class.std::vector.3"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_(%"class.std::vector.3"* %443, %"class.std::vector.3"* %445, %"class.std::vector.3"* %446, %"class.std::allocator.0"* dereferenceable(1) %448)
          to label %450 unwind label %465

; <label>:450:                                    ; preds = %439
  store %"class.std::vector.3"* %449, %"class.std::vector.3"** %33, align 8
  %451 = load i64, i64* %21, align 8
  %452 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %453 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %452, i64 %451
  store %"class.std::vector.3"* %453, %"class.std::vector.3"** %33, align 8
  %454 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %455 = load %"class.std::vector.3"*, %"class.std::vector.3"** %454, align 8
  %456 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %457 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %456, i32 0, i32 0
  %458 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %457, i32 0, i32 1
  %459 = load %"class.std::vector.3"*, %"class.std::vector.3"** %458, align 8
  %460 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %461 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %462 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %461) #3
  %463 = invoke %"class.std::vector.3"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_(%"class.std::vector.3"* %455, %"class.std::vector.3"* %459, %"class.std::vector.3"* %460, %"class.std::allocator.0"* dereferenceable(1) %462)
          to label %464 unwind label %465

; <label>:464:                                    ; preds = %450
  store %"class.std::vector.3"* %463, %"class.std::vector.3"** %33, align 8
  br label %625

; <label>:465:                                    ; preds = %450, %439, %437
  %466 = load i32, i32* @x.106
  %467 = load i32, i32* @y.107
  %468 = add i32 %466, -1319223000
  %469 = sub i32 %468, 1
  %470 = sub i32 %469, -1319223000
  %471 = sub i32 %466, 1
  %472 = mul i32 %466, %470
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %467, 10
  %476 = and i1 %474, %475
  %477 = xor i1 %474, %475
  %478 = or i1 %476, %477
  %479 = or i1 %474, %475
  br i1 %478, label %480, label %1046

; <label>:480:                                    ; preds = %465, %1046
  %481 = landingpad { i8*, i32 }
          catch i8* null
  %482 = extractvalue { i8*, i32 } %481, 0
  store i8* %482, i8** %27, align 8
  %483 = extractvalue { i8*, i32 } %481, 1
  store i32 %483, i32* %28, align 4
  %484 = load i32, i32* @x.106
  %485 = load i32, i32* @y.107
  %486 = sub i32 %484, 1536752891
  %487 = sub i32 %486, 1
  %488 = add i32 %487, 1536752891
  %489 = sub i32 %484, 1
  %490 = mul i32 %484, %488
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %485, 10
  %494 = and i1 %492, %493
  %495 = xor i1 %492, %493
  %496 = or i1 %494, %495
  %497 = or i1 %492, %493
  br i1 %496, label %498, label %1046

; <label>:498:                                    ; preds = %480
  br label %499

; <label>:499:                                    ; preds = %498
  %500 = load i8*, i8** %27, align 8
  %501 = call i8* @__cxa_begin_catch(i8* %500) #3
  %502 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %503 = icmp ne %"class.std::vector.3"* %502, null
  br i1 %503, label %561, label %504

; <label>:504:                                    ; preds = %499
  %505 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %506 = load i64, i64* %30, align 8
  %507 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %505, i64 %506
  %508 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %509 = load i64, i64* %30, align 8
  %510 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %508, i64 %509
  %511 = load i64, i64* %21, align 8
  %512 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %510, i64 %511
  %513 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %514 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %513) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E(%"class.std::vector.3"* %507, %"class.std::vector.3"* %512, %"class.std::allocator.0"* dereferenceable(1) %514)
          to label %515 unwind label %516

; <label>:515:                                    ; preds = %504
  br label %567

; <label>:516:                                    ; preds = %571, %567, %561, %504
  %517 = load i32, i32* @x.106
  %518 = load i32, i32* @y.107
  %519 = add i32 %517, -2072816048
  %520 = sub i32 %519, 1
  %521 = sub i32 %520, -2072816048
  %522 = sub i32 %517, 1
  %523 = mul i32 %517, %521
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %518, 10
  %527 = and i1 %525, %526
  %528 = xor i1 %525, %526
  %529 = or i1 %527, %528
  %530 = or i1 %525, %526
  br i1 %529, label %531, label %1050

; <label>:531:                                    ; preds = %516, %1050
  %532 = landingpad { i8*, i32 }
          cleanup
  %533 = extractvalue { i8*, i32 } %532, 0
  store i8* %533, i8** %27, align 8
  %534 = extractvalue { i8*, i32 } %532, 1
  store i32 %534, i32* %28, align 4
  %535 = load i32, i32* @x.106
  %536 = load i32, i32* @y.107
  %537 = sub i32 0, 1
  %538 = add i32 %535, %537
  %539 = sub i32 %535, 1
  %540 = mul i32 %535, %538
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %536, 10
  %544 = xor i1 %542, true
  %545 = xor i1 %543, true
  %546 = xor i1 false, true
  %547 = and i1 %544, false
  %548 = and i1 %542, %546
  %549 = and i1 %545, false
  %550 = and i1 %543, %546
  %551 = or i1 %547, %548
  %552 = or i1 %549, %550
  %553 = xor i1 %551, %552
  %554 = or i1 %544, %545
  %555 = xor i1 %554, true
  %556 = or i1 false, %546
  %557 = and i1 %555, %556
  %558 = or i1 %553, %557
  %559 = or i1 %542, %543
  br i1 %558, label %560, label %1050

; <label>:560:                                    ; preds = %531
  invoke void @__cxa_end_catch()
          to label %572 unwind label %853

; <label>:561:                                    ; preds = %499
  %562 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %563 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %564 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %565 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %564) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E(%"class.std::vector.3"* %562, %"class.std::vector.3"* %563, %"class.std::allocator.0"* dereferenceable(1) %565)
          to label %566 unwind label %516

; <label>:566:                                    ; preds = %561
  br label %567

; <label>:567:                                    ; preds = %566, %515
  %568 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %569 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %570 = load i64, i64* %29, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE13_M_deallocateEPS6_m(%"struct.std::_Vector_base"* %568, %"class.std::vector.3"* %569, i64 %570)
          to label %571 unwind label %516

; <label>:571:                                    ; preds = %567
  invoke void @__cxa_rethrow() #13
          to label %856 unwind label %516

; <label>:572:                                    ; preds = %560
  %573 = load i32, i32* @x.106
  %574 = load i32, i32* @y.107
  %575 = sub i32 0, 1
  %576 = add i32 %573, %575
  %577 = sub i32 %573, 1
  %578 = mul i32 %573, %576
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %574, 10
  %582 = xor i1 %580, true
  %583 = xor i1 %581, true
  %584 = xor i1 true, true
  %585 = and i1 %582, true
  %586 = and i1 %580, %584
  %587 = and i1 %583, true
  %588 = and i1 %581, %584
  %589 = or i1 %585, %586
  %590 = or i1 %587, %588
  %591 = xor i1 %589, %590
  %592 = or i1 %582, %583
  %593 = xor i1 %592, true
  %594 = or i1 true, %584
  %595 = and i1 %593, %594
  %596 = or i1 %591, %595
  %597 = or i1 %580, %581
  br i1 %596, label %598, label %1054

; <label>:598:                                    ; preds = %572, %1054
  %599 = load i32, i32* @x.106
  %600 = load i32, i32* @y.107
  %601 = sub i32 0, 1
  %602 = add i32 %599, %601
  %603 = sub i32 %599, 1
  %604 = mul i32 %599, %602
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %600, 10
  %608 = xor i1 %606, true
  %609 = xor i1 %607, true
  %610 = xor i1 false, true
  %611 = and i1 %608, false
  %612 = and i1 %606, %610
  %613 = and i1 %609, false
  %614 = and i1 %607, %610
  %615 = or i1 %611, %612
  %616 = or i1 %613, %614
  %617 = xor i1 %615, %616
  %618 = or i1 %608, %609
  %619 = xor i1 %618, true
  %620 = or i1 false, %610
  %621 = and i1 %619, %620
  %622 = or i1 %617, %621
  %623 = or i1 %606, %607
  br i1 %622, label %624, label %1054

; <label>:624:                                    ; preds = %598
  br label %794

; <label>:625:                                    ; preds = %464
  %626 = load i32, i32* @x.106
  %627 = load i32, i32* @y.107
  %628 = add i32 %626, 1631620640
  %629 = sub i32 %628, 1
  %630 = sub i32 %629, 1631620640
  %631 = sub i32 %626, 1
  %632 = mul i32 %626, %630
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %627, 10
  %636 = xor i1 %634, true
  %637 = xor i1 %635, true
  %638 = xor i1 false, true
  %639 = and i1 %636, false
  %640 = and i1 %634, %638
  %641 = and i1 %637, false
  %642 = and i1 %635, %638
  %643 = or i1 %639, %640
  %644 = or i1 %641, %642
  %645 = xor i1 %643, %644
  %646 = or i1 %636, %637
  %647 = xor i1 %646, true
  %648 = or i1 false, %638
  %649 = and i1 %647, %648
  %650 = or i1 %645, %649
  %651 = or i1 %634, %635
  br i1 %650, label %652, label %1055

; <label>:652:                                    ; preds = %625, %1055
  %653 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %654 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %653, i32 0, i32 0
  %655 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %654, i32 0, i32 0
  %656 = load %"class.std::vector.3"*, %"class.std::vector.3"** %655, align 8
  %657 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %658 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %657, i32 0, i32 0
  %659 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %658, i32 0, i32 1
  %660 = load %"class.std::vector.3"*, %"class.std::vector.3"** %659, align 8
  %661 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %662 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %661) #3
  call void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E(%"class.std::vector.3"* %656, %"class.std::vector.3"* %660, %"class.std::allocator.0"* dereferenceable(1) %662)
  %663 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %664 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %665 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %664, i32 0, i32 0
  %666 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %665, i32 0, i32 0
  %667 = load %"class.std::vector.3"*, %"class.std::vector.3"** %666, align 8
  %668 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %669 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %668, i32 0, i32 0
  %670 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %669, i32 0, i32 2
  %671 = load %"class.std::vector.3"*, %"class.std::vector.3"** %670, align 8
  %672 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %673 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %672, i32 0, i32 0
  %674 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %673, i32 0, i32 0
  %675 = load %"class.std::vector.3"*, %"class.std::vector.3"** %674, align 8
  %676 = ptrtoint %"class.std::vector.3"* %671 to i64
  %677 = ptrtoint %"class.std::vector.3"* %675 to i64
  %678 = sub i64 0, %677
  %679 = add i64 %676, %678
  %680 = sub i64 %676, %677
  %681 = sdiv exact i64 %679, 24
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE13_M_deallocateEPS6_m(%"struct.std::_Vector_base"* %663, %"class.std::vector.3"* %667, i64 %681)
  %682 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %683 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %684 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %683, i32 0, i32 0
  %685 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %684, i32 0, i32 0
  store %"class.std::vector.3"* %682, %"class.std::vector.3"** %685, align 8
  %686 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %687 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %688 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %687, i32 0, i32 0
  %689 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %688, i32 0, i32 1
  store %"class.std::vector.3"* %686, %"class.std::vector.3"** %689, align 8
  %690 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %691 = load i64, i64* %29, align 8
  %692 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %690, i64 %691
  %693 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %694 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %693, i32 0, i32 0
  %695 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %694, i32 0, i32 2
  store %"class.std::vector.3"* %692, %"class.std::vector.3"** %695, align 8
  %696 = load i32, i32* @x.106
  %697 = load i32, i32* @y.107
  %698 = sub i32 0, 1
  %699 = add i32 %696, %698
  %700 = sub i32 %696, 1
  %701 = mul i32 %696, %699
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %697, 10
  %705 = and i1 %703, %704
  %706 = xor i1 %703, %704
  %707 = or i1 %705, %706
  %708 = or i1 %703, %704
  br i1 %707, label %709, label %1055

; <label>:709:                                    ; preds = %652
  br label %710

; <label>:710:                                    ; preds = %709, %379
  %711 = load i32, i32* @x.106
  %712 = load i32, i32* @y.107
  %713 = sub i32 %711, -1600720563
  %714 = sub i32 %713, 1
  %715 = add i32 %714, -1600720563
  %716 = sub i32 %711, 1
  %717 = mul i32 %711, %715
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %712, 10
  %721 = xor i1 %719, true
  %722 = xor i1 %720, true
  %723 = xor i1 false, true
  %724 = and i1 %721, false
  %725 = and i1 %719, %723
  %726 = and i1 %722, false
  %727 = and i1 %720, %723
  %728 = or i1 %724, %725
  %729 = or i1 %726, %727
  %730 = xor i1 %728, %729
  %731 = or i1 %721, %722
  %732 = xor i1 %731, true
  %733 = or i1 false, %723
  %734 = and i1 %732, %733
  %735 = or i1 %730, %734
  %736 = or i1 %719, %720
  br i1 %735, label %737, label %1133

; <label>:737:                                    ; preds = %710, %1133
  %738 = load i32, i32* @x.106
  %739 = load i32, i32* @y.107
  %740 = sub i32 0, 1
  %741 = add i32 %738, %740
  %742 = sub i32 %738, 1
  %743 = mul i32 %738, %741
  %744 = urem i32 %743, 2
  %745 = icmp eq i32 %744, 0
  %746 = icmp slt i32 %739, 10
  %747 = xor i1 %745, true
  %748 = xor i1 %746, true
  %749 = xor i1 false, true
  %750 = and i1 %747, false
  %751 = and i1 %745, %749
  %752 = and i1 %748, false
  %753 = and i1 %746, %749
  %754 = or i1 %750, %751
  %755 = or i1 %752, %753
  %756 = xor i1 %754, %755
  %757 = or i1 %747, %748
  %758 = xor i1 %757, true
  %759 = or i1 false, %749
  %760 = and i1 %758, %759
  %761 = or i1 %756, %760
  %762 = or i1 %745, %746
  br i1 %761, label %763, label %1133

; <label>:763:                                    ; preds = %737
  br label %764

; <label>:764:                                    ; preds = %763, %52
  %765 = load i32, i32* @x.106
  %766 = load i32, i32* @y.107
  %767 = sub i32 %765, -333282193
  %768 = sub i32 %767, 1
  %769 = add i32 %768, -333282193
  %770 = sub i32 %765, 1
  %771 = mul i32 %765, %769
  %772 = urem i32 %771, 2
  %773 = icmp eq i32 %772, 0
  %774 = icmp slt i32 %766, 10
  %775 = and i1 %773, %774
  %776 = xor i1 %773, %774
  %777 = or i1 %775, %776
  %778 = or i1 %773, %774
  br i1 %777, label %779, label %1134

; <label>:779:                                    ; preds = %764, %1134
  %780 = load i32, i32* @x.106
  %781 = load i32, i32* @y.107
  %782 = sub i32 0, 1
  %783 = add i32 %780, %782
  %784 = sub i32 %780, 1
  %785 = mul i32 %780, %783
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %781, 10
  %789 = and i1 %787, %788
  %790 = xor i1 %787, %788
  %791 = or i1 %789, %790
  %792 = or i1 %787, %788
  br i1 %791, label %793, label %1134

; <label>:793:                                    ; preds = %779
  ret void

; <label>:794:                                    ; preds = %624, %298
  %795 = load i32, i32* @x.106
  %796 = load i32, i32* @y.107
  %797 = add i32 %795, 395424567
  %798 = sub i32 %797, 1
  %799 = sub i32 %798, 395424567
  %800 = sub i32 %795, 1
  %801 = mul i32 %795, %799
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %796, 10
  %805 = xor i1 %803, true
  %806 = xor i1 %804, true
  %807 = xor i1 true, true
  %808 = and i1 %805, true
  %809 = and i1 %803, %807
  %810 = and i1 %806, true
  %811 = and i1 %804, %807
  %812 = or i1 %808, %809
  %813 = or i1 %810, %811
  %814 = xor i1 %812, %813
  %815 = or i1 %805, %806
  %816 = xor i1 %815, true
  %817 = or i1 true, %807
  %818 = and i1 %816, %817
  %819 = or i1 %814, %818
  %820 = or i1 %803, %804
  br i1 %819, label %821, label %1135

; <label>:821:                                    ; preds = %794, %1135
  %822 = load i8*, i8** %27, align 8
  %823 = load i32, i32* %28, align 4
  %824 = insertvalue { i8*, i32 } undef, i8* %822, 0
  %825 = insertvalue { i8*, i32 } %824, i32 %823, 1
  %826 = load i32, i32* @x.106
  %827 = load i32, i32* @y.107
  %828 = sub i32 %826, 971400408
  %829 = sub i32 %828, 1
  %830 = add i32 %829, 971400408
  %831 = sub i32 %826, 1
  %832 = mul i32 %826, %830
  %833 = urem i32 %832, 2
  %834 = icmp eq i32 %833, 0
  %835 = icmp slt i32 %827, 10
  %836 = xor i1 %834, true
  %837 = xor i1 %835, true
  %838 = xor i1 true, true
  %839 = and i1 %836, true
  %840 = and i1 %834, %838
  %841 = and i1 %837, true
  %842 = and i1 %835, %838
  %843 = or i1 %839, %840
  %844 = or i1 %841, %842
  %845 = xor i1 %843, %844
  %846 = or i1 %836, %837
  %847 = xor i1 %846, true
  %848 = or i1 true, %838
  %849 = and i1 %847, %848
  %850 = or i1 %845, %849
  %851 = or i1 %834, %835
  br i1 %850, label %852, label %1135

; <label>:852:                                    ; preds = %821
  resume { i8*, i32 } %825

; <label>:853:                                    ; preds = %560
  %854 = landingpad { i8*, i32 }
          catch i8* null
  %855 = extractvalue { i8*, i32 } %854, 0
  call void @__clang_call_terminate(i8* %855) #10
  unreachable

; <label>:856:                                    ; preds = %571
  %857 = load i32, i32* @x.106
  %858 = load i32, i32* @y.107
  %859 = add i32 %857, 1911141692
  %860 = sub i32 %859, 1
  %861 = sub i32 %860, 1911141692
  %862 = sub i32 %857, 1
  %863 = mul i32 %857, %861
  %864 = urem i32 %863, 2
  %865 = icmp eq i32 %864, 0
  %866 = icmp slt i32 %858, 10
  %867 = and i1 %865, %866
  %868 = xor i1 %865, %866
  %869 = or i1 %867, %868
  %870 = or i1 %865, %866
  br i1 %869, label %871, label %1140

; <label>:871:                                    ; preds = %856, %1140
  %872 = load i32, i32* @x.106
  %873 = load i32, i32* @y.107
  %874 = sub i32 0, 1
  %875 = add i32 %872, %874
  %876 = sub i32 %872, 1
  %877 = mul i32 %872, %875
  %878 = urem i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = icmp slt i32 %873, 10
  %881 = and i1 %879, %880
  %882 = xor i1 %879, %880
  %883 = or i1 %881, %882
  %884 = or i1 %879, %880
  br i1 %883, label %885, label %1140

; <label>:885:                                    ; preds = %871
  unreachable

; <label>:886:                                    ; preds = %18, %4
  %887 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %888 = alloca %"class.std::vector"*, align 8
  %889 = alloca i64, align 8
  %890 = alloca %"class.std::vector.3"*, align 8
  %891 = alloca %"class.std::vector.3", align 8
  %892 = alloca i64, align 8
  %893 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %894 = alloca %"class.std::vector.3"*, align 8
  %895 = alloca i8*
  %896 = alloca i32
  %897 = alloca i64, align 8
  %898 = alloca i64, align 8
  %899 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %900 = alloca %"class.std::vector.3"*, align 8
  %901 = alloca %"class.std::vector.3"*, align 8
  %902 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %887, i32 0, i32 0
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %902, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %888, align 8
  store i64 %2, i64* %889, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %890, align 8
  %903 = load %"class.std::vector"*, %"class.std::vector"** %888, align 8
  %904 = load i64, i64* %889, align 8
  %905 = icmp ne i64 %904, 0
  br label %18

; <label>:906:                                    ; preds = %86, %71
  %907 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS5_(%"class.std::vector.3"* %23, %"class.std::vector.3"* dereferenceable(24) %907)
  %908 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE3endEv(%"class.std::vector"* %35) #3
  %909 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %25, i32 0, i32 0
  store %"class.std::vector.3"* %908, %"class.std::vector.3"** %909, align 8
  %910 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %25, %"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %19) #3
  store i64 %910, i64* %24, align 8
  %911 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %912 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %911, i32 0, i32 0
  %913 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %912, i32 0, i32 1
  %914 = load %"class.std::vector.3"*, %"class.std::vector.3"** %913, align 8
  store %"class.std::vector.3"* %914, %"class.std::vector.3"** %26, align 8
  %915 = load i64, i64* %24, align 8
  %916 = load i64, i64* %21, align 8
  %917 = icmp ugt i64 %915, %916
  br label %86

; <label>:918:                                    ; preds = %139, %125
  %919 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %920 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %919, i32 0, i32 0
  %921 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %920, i32 0, i32 1
  %922 = load %"class.std::vector.3"*, %"class.std::vector.3"** %921, align 8
  %923 = load i64, i64* %21, align 8
  %924 = shl i64 0, %923
  %925 = add i64 0, 518675215291379140
  %926 = sub i64 %925, 0
  %927 = sub i64 %926, 518675215291379140
  %928 = sub i64 0, 0
  %929 = sub i64 0, %923
  %930 = sub i64 %927, %929
  %931 = add i64 %927, %923
  %932 = sub i64 0, -7125845155694339395
  %933 = sub i64 %932, %923
  %934 = add i64 %933, -7125845155694339395
  %935 = sub i64 0, %923
  %936 = mul i64 %934, %923
  %937 = shl i64 0, %923
  %938 = shl i64 0, %923
  %939 = sub i64 0, 0
  %940 = add i64 0, %939
  %941 = sub i64 0, 0
  %942 = add i64 %940, -843828180730864427
  %943 = add i64 %942, %923
  %944 = sub i64 %943, -843828180730864427
  %945 = add i64 %940, %923
  %946 = shl i64 0, %923
  %947 = add i64 0, -2028730929360155060
  %948 = sub i64 %947, %923
  %949 = sub i64 %948, -2028730929360155060
  %950 = sub i64 0, %923
  %951 = mul i64 %949, %923
  %952 = shl i64 0, %923
  %953 = sub i64 0, 7511904746237162091
  %954 = sub i64 %953, %923
  %955 = add i64 %954, 7511904746237162091
  %956 = sub i64 0, %923
  %957 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %922, i64 %955
  %958 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %959 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %958, i32 0, i32 0
  %960 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %959, i32 0, i32 1
  %961 = load %"class.std::vector.3"*, %"class.std::vector.3"** %960, align 8
  %962 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %963 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %962, i32 0, i32 0
  %964 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %963, i32 0, i32 1
  %965 = load %"class.std::vector.3"*, %"class.std::vector.3"** %964, align 8
  %966 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %967 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %966) #3
  br label %139

; <label>:968:                                    ; preds = %190, %175
  %969 = load i64, i64* %21, align 8
  %970 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %971 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %970, i32 0, i32 0
  %972 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %971, i32 0, i32 1
  %973 = load %"class.std::vector.3"*, %"class.std::vector.3"** %972, align 8
  %974 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %973, i64 %969
  store %"class.std::vector.3"* %974, %"class.std::vector.3"** %972, align 8
  %975 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %976 = load %"class.std::vector.3"*, %"class.std::vector.3"** %975, align 8
  %977 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  %978 = load i64, i64* %21, align 8
  %979 = shl i64 0, %978
  %980 = sub i64 0, %978
  %981 = add i64 0, %980
  %982 = sub i64 0, %978
  %983 = mul i64 %981, %978
  %984 = sub i64 0, -130290489111779303
  %985 = sub i64 %984, %978
  %986 = add i64 %985, -130290489111779303
  %987 = sub i64 0, %978
  %988 = mul i64 %986, %978
  %989 = shl i64 0, %978
  %990 = shl i64 0, %978
  %991 = sub i64 0, -2883056844782554424
  %992 = sub i64 %991, 0
  %993 = add i64 %992, -2883056844782554424
  %994 = sub i64 0, 0
  %995 = add i64 %993, 6336140589115215231
  %996 = add i64 %995, %978
  %997 = sub i64 %996, 6336140589115215231
  %998 = add i64 %993, %978
  %999 = sub i64 0, -3047551848919835492
  %1000 = sub i64 %999, 0
  %1001 = add i64 %1000, -3047551848919835492
  %1002 = sub i64 0, 0
  %1003 = sub i64 0, %1001
  %1004 = sub i64 0, %978
  %1005 = add i64 %1003, %1004
  %1006 = sub i64 0, %1005
  %1007 = add i64 %1001, %978
  %1008 = shl i64 0, %978
  %1009 = add i64 0, -6398880737673192682
  %1010 = sub i64 %1009, %978
  %1011 = sub i64 %1010, -6398880737673192682
  %1012 = sub i64 0, %978
  %1013 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %977, i64 %1011
  %1014 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  br label %190

; <label>:1015:                                   ; preds = %269, %242
  %1016 = landingpad { i8*, i32 }
          cleanup
  %1017 = extractvalue { i8*, i32 } %1016, 0
  store i8* %1017, i8** %27, align 8
  %1018 = extractvalue { i8*, i32 } %1016, 1
  store i32 %1018, i32* %28, align 4
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %23) #3
  br label %269

; <label>:1019:                                   ; preds = %341, %326
  %1020 = load i64, i64* %24, align 8
  %1021 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1022 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1021, i32 0, i32 0
  %1023 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1022, i32 0, i32 1
  %1024 = load %"class.std::vector.3"*, %"class.std::vector.3"** %1023, align 8
  %1025 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1024, i64 %1020
  store %"class.std::vector.3"* %1025, %"class.std::vector.3"** %1023, align 8
  %1026 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %19) #3
  %1027 = load %"class.std::vector.3"*, %"class.std::vector.3"** %1026, align 8
  %1028 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  br label %341

; <label>:1029:                                   ; preds = %406, %380
  %1030 = load i64, i64* %21, align 8
  %1031 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector"* %35, i64 %1030, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %1031, i64* %29, align 8
  %1032 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE5beginEv(%"class.std::vector"* %35) #3
  %1033 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %31, i32 0, i32 0
  store %"class.std::vector.3"* %1032, %"class.std::vector.3"** %1033, align 8
  %1034 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8) %31) #3
  store i64 %1034, i64* %30, align 8
  %1035 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1036 = load i64, i64* %29, align 8
  %1037 = call %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE11_M_allocateEm(%"struct.std::_Vector_base"* %1035, i64 %1036)
  store %"class.std::vector.3"* %1037, %"class.std::vector.3"** %32, align 8
  %1038 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  store %"class.std::vector.3"* %1038, %"class.std::vector.3"** %33, align 8
  %1039 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %1040 = load i64, i64* %30, align 8
  %1041 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1039, i64 %1040
  %1042 = load i64, i64* %21, align 8
  %1043 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  %1044 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1045 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %1044) #3
  br label %406

; <label>:1046:                                   ; preds = %480, %465
  %1047 = landingpad { i8*, i32 }
          catch i8* null
  %1048 = extractvalue { i8*, i32 } %1047, 0
  store i8* %1048, i8** %27, align 8
  %1049 = extractvalue { i8*, i32 } %1047, 1
  store i32 %1049, i32* %28, align 4
  br label %480

; <label>:1050:                                   ; preds = %531, %516
  %1051 = landingpad { i8*, i32 }
          cleanup
  %1052 = extractvalue { i8*, i32 } %1051, 0
  store i8* %1052, i8** %27, align 8
  %1053 = extractvalue { i8*, i32 } %1051, 1
  store i32 %1053, i32* %28, align 4
  br label %531

; <label>:1054:                                   ; preds = %598, %572
  br label %598

; <label>:1055:                                   ; preds = %652, %625
  %1056 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1057 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1056, i32 0, i32 0
  %1058 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1057, i32 0, i32 0
  %1059 = load %"class.std::vector.3"*, %"class.std::vector.3"** %1058, align 8
  %1060 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1061 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1060, i32 0, i32 0
  %1062 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1061, i32 0, i32 1
  %1063 = load %"class.std::vector.3"*, %"class.std::vector.3"** %1062, align 8
  %1064 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1065 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %1064) #3
  call void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E(%"class.std::vector.3"* %1059, %"class.std::vector.3"* %1063, %"class.std::allocator.0"* dereferenceable(1) %1065)
  %1066 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1067 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1068 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1067, i32 0, i32 0
  %1069 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1068, i32 0, i32 0
  %1070 = load %"class.std::vector.3"*, %"class.std::vector.3"** %1069, align 8
  %1071 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1072 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1071, i32 0, i32 0
  %1073 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1072, i32 0, i32 2
  %1074 = load %"class.std::vector.3"*, %"class.std::vector.3"** %1073, align 8
  %1075 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1076 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1075, i32 0, i32 0
  %1077 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1076, i32 0, i32 0
  %1078 = load %"class.std::vector.3"*, %"class.std::vector.3"** %1077, align 8
  %1079 = ptrtoint %"class.std::vector.3"* %1074 to i64
  %1080 = ptrtoint %"class.std::vector.3"* %1078 to i64
  %1081 = shl i64 %1079, %1080
  %1082 = shl i64 %1079, %1080
  %1083 = sub i64 %1079, -5607381629014317185
  %1084 = sub i64 %1083, %1080
  %1085 = add i64 %1084, -5607381629014317185
  %1086 = sub i64 %1079, %1080
  %1087 = mul i64 %1085, %1080
  %1088 = add i64 %1079, 6930742652879252912
  %1089 = sub i64 %1088, %1080
  %1090 = sub i64 %1089, 6930742652879252912
  %1091 = sub i64 %1079, %1080
  %1092 = sub i64 %1090, -7332285500823073297
  %1093 = sub i64 %1092, 24
  %1094 = add i64 %1093, -7332285500823073297
  %1095 = sub i64 %1090, 24
  %1096 = mul i64 %1094, 24
  %1097 = sub i64 0, %1090
  %1098 = add i64 0, %1097
  %1099 = sub i64 0, %1090
  %1100 = sub i64 0, 24
  %1101 = sub i64 %1098, %1100
  %1102 = add i64 %1098, 24
  %1103 = sub i64 0, 24
  %1104 = add i64 %1090, %1103
  %1105 = sub i64 %1090, 24
  %1106 = mul i64 %1104, 24
  %1107 = sub i64 %1090, -3651080480146550832
  %1108 = sub i64 %1107, 24
  %1109 = add i64 %1108, -3651080480146550832
  %1110 = sub i64 %1090, 24
  %1111 = mul i64 %1109, 24
  %1112 = sub i64 0, 24
  %1113 = add i64 %1090, %1112
  %1114 = sub i64 %1090, 24
  %1115 = mul i64 %1113, 24
  %1116 = shl i64 %1090, 24
  %1117 = shl i64 %1090, 24
  %1118 = sdiv exact i64 %1090, 24
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE13_M_deallocateEPS6_m(%"struct.std::_Vector_base"* %1066, %"class.std::vector.3"* %1070, i64 %1118)
  %1119 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %1120 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1120, i32 0, i32 0
  %1122 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1121, i32 0, i32 0
  store %"class.std::vector.3"* %1119, %"class.std::vector.3"** %1122, align 8
  %1123 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %1124 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1125 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1124, i32 0, i32 0
  %1126 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1125, i32 0, i32 1
  store %"class.std::vector.3"* %1123, %"class.std::vector.3"** %1126, align 8
  %1127 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %1128 = load i64, i64* %29, align 8
  %1129 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1127, i64 %1128
  %1130 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %1131 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1130, i32 0, i32 0
  %1132 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %1131, i32 0, i32 2
  store %"class.std::vector.3"* %1129, %"class.std::vector.3"** %1132, align 8
  br label %652

; <label>:1133:                                   ; preds = %737, %710
  br label %737

; <label>:1134:                                   ; preds = %779, %764
  br label %779

; <label>:1135:                                   ; preds = %821, %794
  %1136 = load i8*, i8** %27, align 8
  %1137 = load i32, i32* %28, align 4
  %1138 = insertvalue { i8*, i32 } undef, i8* %1136, 0
  %1139 = insertvalue { i8*, i32 } %1138, i32 %1137, 1
  br label %821

; <label>:1140:                                   ; preds = %871, %856
  br label %871
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.28"* %2, %"class.std::vector.3"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  ret %"class.std::vector.3"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEplEl(%"class.__gnu_cxx::__normal_iterator.28"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.110
  %7 = load i32, i32* @y.111
  %8 = add i32 %6, 235812283
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 235812283
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1593751304, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1593751304, label %20
    i32 -1880591464, label %28
    i32 649005541, label %55
    i32 455675915, label %57
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1880591464, i32 455675915
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.3"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %0, %"class.__gnu_cxx::__normal_iterator.28"** %30, align 8
  store i64 %1, i64* %31, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %30, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.3"*, %"class.std::vector.3"** %34, align 8
  %36 = load i64, i64* %31, align 8
  %37 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %35, i64 %36
  store %"class.std::vector.3"* %37, %"class.std::vector.3"** %32, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.28"* %29, %"class.std::vector.3"** dereferenceable(8) %32) #3
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %29, i32 0, i32 0
  %39 = load %"class.std::vector.3"*, %"class.std::vector.3"** %38, align 8
  store %"class.std::vector.3"* %39, %"class.std::vector.3"** %3
  %40 = load i32, i32* @x.110
  %41 = load i32, i32* @y.111
  %42 = sub i32 %40, -507490770
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -507490770
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 649005541, i32 455675915
  store i32 %54, i32* %16
  br label %69

; <label>:55:                                     ; preds = %17
  %56 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %3
  ret %"class.std::vector.3"* %56

; <label>:57:                                     ; preds = %17
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.28", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  %60 = alloca i64, align 8
  %61 = alloca %"class.std::vector.3"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %0, %"class.__gnu_cxx::__normal_iterator.28"** %59, align 8
  store i64 %1, i64* %60, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %59, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %62, i32 0, i32 0
  %64 = load %"class.std::vector.3"*, %"class.std::vector.3"** %63, align 8
  %65 = load i64, i64* %60, align 8
  %66 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %64, i64 %65
  store %"class.std::vector.3"* %66, %"class.std::vector.3"** %61, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.28"* %58, %"class.std::vector.3"** dereferenceable(8) %61) #3
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %58, i32 0, i32 0
  %68 = load %"class.std::vector.3"*, %"class.std::vector.3"** %67, align 8
  store i32 -1880591464, i32* %16
  br label %69

; <label>:69:                                     ; preds = %57, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  ret %"class.std::vector.3"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS9_(%"class.__gnu_cxx::__normal_iterator.29"*, %"class.std::vector.3"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %4 = alloca %"class.std::vector.3"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  store %"class.std::vector.3"** %1, %"class.std::vector.3"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %4, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS5_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.116
  %4 = load i32, i32* @y.117
  %5 = add i32 %3, -296216688
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -296216688
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %136

; <label>:17:                                     ; preds = %2, %136
  %18 = alloca %"class.std::vector.3"*, align 8
  %19 = alloca %"class.std::vector.3"*, align 8
  %20 = alloca %"class.std::allocator.5", align 1
  %21 = alloca i8*
  %22 = alloca i32
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %18, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %19, align 8
  %25 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %26 = bitcast %"class.std::vector.3"* %25 to %"struct.std::_Vector_base.4"*
  %27 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %28 = call i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %27) #3
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %30) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIN5Solve4edgeESaIS3_EEEE17_S_select_on_copyERKS6_(%"class.std::allocator.5"* sret %20, %"class.std::allocator.5"* dereferenceable(1) %31)
  %32 = load i32, i32* @x.116
  %33 = load i32, i32* @y.117
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %136

; <label>:57:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.4"* %26, i64 %28, %"class.std::allocator.5"* dereferenceable(1) %20)
          to label %58 unwind label %122

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.116
  %60 = load i32, i32* @y.117
  %61 = sub i32 %59, 1530739402
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 1530739402
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %151

; <label>:73:                                     ; preds = %58, %151
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %20) #3
  %74 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %75 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %74) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %23, i32 0, i32 0
  store %"class.std::vector.8"* %75, %"class.std::vector.8"** %76, align 8
  %77 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %78 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %77) #3
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  store %"class.std::vector.8"* %78, %"class.std::vector.8"** %79, align 8
  %80 = bitcast %"class.std::vector.3"* %25 to %"struct.std::_Vector_base.4"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load %"class.std::vector.8"*, %"class.std::vector.8"** %82, align 8
  %84 = bitcast %"class.std::vector.3"* %25 to %"struct.std::_Vector_base.4"*
  %85 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %84) #3
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %23, i32 0, i32 0
  %87 = load %"class.std::vector.8"*, %"class.std::vector.8"** %86, align 8
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  %89 = load %"class.std::vector.8"*, %"class.std::vector.8"** %88, align 8
  %90 = load i32, i32* @x.116
  %91 = load i32, i32* @y.117
  %92 = sub i32 %90, -130972200
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -130972200
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %151

; <label>:116:                                    ; preds = %73
  %117 = invoke %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEPS6_S6_ET0_T_SE_SD_RSaIT1_E(%"class.std::vector.8"* %87, %"class.std::vector.8"* %89, %"class.std::vector.8"* %83, %"class.std::allocator.5"* dereferenceable(1) %85)
          to label %118 unwind label %126

; <label>:118:                                    ; preds = %116
  %119 = bitcast %"class.std::vector.3"* %25 to %"struct.std::_Vector_base.4"*
  %120 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %120, i32 0, i32 1
  store %"class.std::vector.8"* %117, %"class.std::vector.8"** %121, align 8
  ret void

; <label>:122:                                    ; preds = %57
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %21, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %22, align 4
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %20) #3
  br label %131

; <label>:126:                                    ; preds = %116
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %21, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %22, align 4
  %130 = bitcast %"class.std::vector.3"* %25 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %130) #3
  br label %131

; <label>:131:                                    ; preds = %126, %122
  %132 = load i8*, i8** %21, align 8
  %133 = load i32, i32* %22, align 4
  %134 = insertvalue { i8*, i32 } undef, i8* %132, 0
  %135 = insertvalue { i8*, i32 } %134, i32 %133, 1
  resume { i8*, i32 } %135

; <label>:136:                                    ; preds = %17, %2
  %137 = alloca %"class.std::vector.3"*, align 8
  %138 = alloca %"class.std::vector.3"*, align 8
  %139 = alloca %"class.std::allocator.5", align 1
  %140 = alloca i8*
  %141 = alloca i32
  %142 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %143 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %137, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %138, align 8
  %144 = load %"class.std::vector.3"*, %"class.std::vector.3"** %137, align 8
  %145 = bitcast %"class.std::vector.3"* %144 to %"struct.std::_Vector_base.4"*
  %146 = load %"class.std::vector.3"*, %"class.std::vector.3"** %138, align 8
  %147 = call i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %146) #3
  %148 = load %"class.std::vector.3"*, %"class.std::vector.3"** %138, align 8
  %149 = bitcast %"class.std::vector.3"* %148 to %"struct.std::_Vector_base.4"*
  %150 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %149) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIN5Solve4edgeESaIS3_EEEE17_S_select_on_copyERKS6_(%"class.std::allocator.5"* sret %139, %"class.std::allocator.5"* dereferenceable(1) %150)
  br label %17

; <label>:151:                                    ; preds = %73, %58
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %20) #3
  %152 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %153 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %152) #3
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %23, i32 0, i32 0
  store %"class.std::vector.8"* %153, %"class.std::vector.8"** %154, align 8
  %155 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %156 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %155) #3
  %157 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  store %"class.std::vector.8"* %156, %"class.std::vector.8"** %157, align 8
  %158 = bitcast %"class.std::vector.3"* %25 to %"struct.std::_Vector_base.4"*
  %159 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %159, i32 0, i32 0
  %161 = load %"class.std::vector.8"*, %"class.std::vector.8"** %160, align 8
  %162 = bitcast %"class.std::vector.3"* %25 to %"struct.std::_Vector_base.4"*
  %163 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %162) #3
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %23, i32 0, i32 0
  %165 = load %"class.std::vector.8"*, %"class.std::vector.8"** %164, align 8
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  %167 = load %"class.std::vector.8"*, %"class.std::vector.8"** %166, align 8
  br label %73
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.28"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %0, %"class.__gnu_cxx::__normal_iterator.28"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %1, %"class.__gnu_cxx::__normal_iterator.28"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %5) #3
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"* %8) #3
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %11 = ptrtoint %"class.std::vector.3"* %7 to i64
  %12 = ptrtoint %"class.std::vector.3"* %10 to i64
  %13 = sub i64 %11, -8714299252068302870
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -8714299252068302870
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt22__uninitialized_move_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.120
  %9 = load i32, i32* @y.121
  %10 = sub i32 %8, 312962268
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 312962268
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1185118253, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %99
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1185118253, label %22
    i32 983278370, label %30
    i32 -720313687, label %77
    i32 2015785288, label %79
  ]

; <label>:21:                                     ; preds = %19
  br label %99

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 983278370, i32 2015785288
  store i32 %29, i32* %18
  br label %99

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.3"*, align 8
  %32 = alloca %"class.std::vector.3"*, align 8
  %33 = alloca %"class.std::vector.3"*, align 8
  %34 = alloca %"class.std::allocator.0"*, align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %31, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %32, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %33, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %34, align 8
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  %38 = call %"class.std::vector.3"* @_ZSt18make_move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEESt13move_iteratorIT_ES9_(%"class.std::vector.3"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  store %"class.std::vector.3"* %38, %"class.std::vector.3"** %39, align 8
  %40 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %41 = call %"class.std::vector.3"* @_ZSt18make_move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEESt13move_iteratorIT_ES9_(%"class.std::vector.3"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  store %"class.std::vector.3"* %41, %"class.std::vector.3"** %42, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %44 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %46 = load %"class.std::vector.3"*, %"class.std::vector.3"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %47, align 8
  %49 = call %"class.std::vector.3"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_S7_ET0_T_SB_SA_RSaIT1_E(%"class.std::vector.3"* %46, %"class.std::vector.3"* %48, %"class.std::vector.3"* %43, %"class.std::allocator.0"* dereferenceable(1) %44)
  store %"class.std::vector.3"* %49, %"class.std::vector.3"** %5
  %50 = load i32, i32* @x.120
  %51 = load i32, i32* @y.121
  %52 = add i32 %50, -61199489
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -61199489
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -720313687, i32 2015785288
  store i32 %76, i32* %18
  br label %99

; <label>:77:                                     ; preds = %19
  %78 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  ret %"class.std::vector.3"* %78

; <label>:79:                                     ; preds = %19
  %80 = alloca %"class.std::vector.3"*, align 8
  %81 = alloca %"class.std::vector.3"*, align 8
  %82 = alloca %"class.std::vector.3"*, align 8
  %83 = alloca %"class.std::allocator.0"*, align 8
  %84 = alloca %"class.std::move_iterator", align 8
  %85 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %80, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %81, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %82, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %83, align 8
  %86 = load %"class.std::vector.3"*, %"class.std::vector.3"** %80, align 8
  %87 = call %"class.std::vector.3"* @_ZSt18make_move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEESt13move_iteratorIT_ES9_(%"class.std::vector.3"* %86)
  %88 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  store %"class.std::vector.3"* %87, %"class.std::vector.3"** %88, align 8
  %89 = load %"class.std::vector.3"*, %"class.std::vector.3"** %81, align 8
  %90 = call %"class.std::vector.3"* @_ZSt18make_move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEESt13move_iteratorIT_ES9_(%"class.std::vector.3"* %89)
  %91 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %85, i32 0, i32 0
  store %"class.std::vector.3"* %90, %"class.std::vector.3"** %91, align 8
  %92 = load %"class.std::vector.3"*, %"class.std::vector.3"** %82, align 8
  %93 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %83, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %95 = load %"class.std::vector.3"*, %"class.std::vector.3"** %94, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %85, i32 0, i32 0
  %97 = load %"class.std::vector.3"*, %"class.std::vector.3"** %96, align 8
  %98 = call %"class.std::vector.3"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_S7_ET0_T_SB_SA_RSaIT1_E(%"class.std::vector.3"* %95, %"class.std::vector.3"* %97, %"class.std::vector.3"* %92, %"class.std::allocator.0"* dereferenceable(1) %93)
  store i32 983278370, i32* %18
  br label %99

; <label>:99:                                     ; preds = %79, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt13move_backwardIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET0_T_S9_S8_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.124
  %8 = load i32, i32* @y.125
  %9 = add i32 %7, 1285548056
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1285548056
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1384088031, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %78
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1384088031, label %21
    i32 1131589322, label %41
    i32 1811112685, label %66
    i32 -1785260761, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %78

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1131589322, i32 -1785260761
  store i32 %40, i32* %17
  br label %78

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.3"*, align 8
  %43 = alloca %"class.std::vector.3"*, align 8
  %44 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %42, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %43, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %44, align 8
  %45 = load %"class.std::vector.3"*, %"class.std::vector.3"** %42, align 8
  %46 = call %"class.std::vector.3"* @_ZSt12__miter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Miter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %45)
  %47 = load %"class.std::vector.3"*, %"class.std::vector.3"** %43, align 8
  %48 = call %"class.std::vector.3"* @_ZSt12__miter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Miter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %47)
  %49 = load %"class.std::vector.3"*, %"class.std::vector.3"** %44, align 8
  %50 = call %"class.std::vector.3"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_(%"class.std::vector.3"* %46, %"class.std::vector.3"* %48, %"class.std::vector.3"* %49)
  store %"class.std::vector.3"* %50, %"class.std::vector.3"** %4
  %51 = load i32, i32* @x.124
  %52 = load i32, i32* @y.125
  %53 = add i32 %51, 1140810429
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1140810429
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1811112685, i32 -1785260761
  store i32 %65, i32* %17
  br label %78

; <label>:66:                                     ; preds = %18
  %67 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  ret %"class.std::vector.3"* %67

; <label>:68:                                     ; preds = %18
  %69 = alloca %"class.std::vector.3"*, align 8
  %70 = alloca %"class.std::vector.3"*, align 8
  %71 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %69, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %70, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %71, align 8
  %72 = load %"class.std::vector.3"*, %"class.std::vector.3"** %69, align 8
  %73 = call %"class.std::vector.3"* @_ZSt12__miter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Miter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %72)
  %74 = load %"class.std::vector.3"*, %"class.std::vector.3"** %70, align 8
  %75 = call %"class.std::vector.3"* @_ZSt12__miter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Miter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %74)
  %76 = load %"class.std::vector.3"*, %"class.std::vector.3"** %71, align 8
  %77 = call %"class.std::vector.3"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_(%"class.std::vector.3"* %73, %"class.std::vector.3"* %75, %"class.std::vector.3"* %76)
  store i32 1131589322, i32* %17
  br label %78

; <label>:78:                                     ; preds = %68, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.126
  %6 = load i32, i32* @y.127
  %7 = add i32 %5, -247801170
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -247801170
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -814697061, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -814697061, label %19
    i32 -1287699586, label %27
    i32 327489424, label %57
    i32 -1949028271, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1287699586, i32 -1949028271
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %0, %"class.__gnu_cxx::__normal_iterator.28"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %29, i32 0, i32 0
  store %"class.std::vector.3"** %30, %"class.std::vector.3"*** %2
  %31 = load i32, i32* @x.126
  %32 = load i32, i32* @y.127
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 327489424, i32 -1949028271
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %2
  ret %"class.std::vector.3"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %0, %"class.__gnu_cxx::__normal_iterator.28"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %61, i32 0, i32 0
  store i32 -1287699586, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RKT0_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %8 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %7)
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %9)
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  call void @_ZSt8__fill_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SD_RKSA_(%"class.std::vector.3"* %8, %"class.std::vector.3"* %10, %"class.std::vector.3"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEmS6_S6_ET_S8_T0_RKT1_RSaIT2_E(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24), %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %12 = call %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEmS6_ET_S8_T0_RKT1_(%"class.std::vector.3"* %9, i64 %10, %"class.std::vector.3"* dereferenceable(24) %11)
  ret %"class.std::vector.3"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::vector"*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i8**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.132
  %14 = load i32, i32* @y.133
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 -1375914015, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %203
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -1375914015, label %27
    i32 1043214705, label %47
    i32 -101961808, label %81
    i32 -148464614, label %84
    i32 -1198146130, label %87
    i32 1850821463, label %109
    i32 -2030454375, label %137
    i32 768606204, label %170
    i32 -108180324, label %173
    i32 -1915080369, label %176
    i32 -520851871, label %179
    i32 223983206, label %181
    i32 1092701711, label %197
  ]

; <label>:26:                                     ; preds = %24
  br label %203

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1043214705, i32 223983206
  store i32 %46, i32* %22
  br label %203

; <label>:47:                                     ; preds = %24
  %48 = alloca %"class.std::vector"*, align 8
  %49 = alloca i64, align 8
  store i64* %49, i64** %10
  %50 = alloca i8*, align 8
  store i8** %50, i8*** %9
  %51 = alloca i64, align 8
  store i64* %51, i64** %8
  %52 = alloca i64, align 8
  store i64* %52, i64** %7
  store %"class.std::vector"* %0, %"class.std::vector"** %48, align 8
  %53 = load volatile i64*, i64** %10
  store i64 %1, i64* %53, align 8
  %54 = load volatile i8**, i8*** %9
  store i8* %2, i8** %54, align 8
  %55 = load %"class.std::vector"*, %"class.std::vector"** %48, align 8
  store %"class.std::vector"* %55, %"class.std::vector"** %6
  %56 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %57 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE8max_sizeEv(%"class.std::vector"* %56) #3
  %58 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %59 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %58) #3
  %60 = sub i64 0, %59
  %61 = add i64 %57, %60
  %62 = sub i64 %57, %59
  %63 = load volatile i64*, i64** %10
  %64 = load i64, i64* %63, align 8
  %65 = icmp ult i64 %61, %64
  store i1 %65, i1* %5
  %66 = load i32, i32* @x.132
  %67 = load i32, i32* @y.133
  %68 = add i32 %66, -1061141835
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -1061141835
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 -101961808, i32 223983206
  store i32 %80, i32* %22
  br label %203

; <label>:81:                                     ; preds = %24
  %82 = load volatile i1, i1* %5
  %83 = select i1 %82, i32 -148464614, i32 -1198146130
  store i32 %83, i32* %22
  br label %203

; <label>:84:                                     ; preds = %24
  %85 = load volatile i8**, i8*** %9
  %86 = load i8*, i8** %85, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %86) #13
  unreachable

; <label>:87:                                     ; preds = %24
  %88 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %89 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %88) #3
  %90 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %91 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %90) #3
  %92 = load volatile i64*, i64** %7
  store i64 %91, i64* %92, align 8
  %93 = load volatile i64*, i64** %10
  %94 = load volatile i64*, i64** %7
  %95 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %94, i64* dereferenceable(8) %93)
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 0, %89
  %98 = sub i64 0, %96
  %99 = add i64 %97, %98
  %100 = sub i64 0, %99
  %101 = add i64 %89, %96
  %102 = load volatile i64*, i64** %8
  store i64 %100, i64* %102, align 8
  %103 = load volatile i64*, i64** %8
  %104 = load i64, i64* %103, align 8
  %105 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %106 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %105) #3
  %107 = icmp ult i64 %104, %106
  %108 = select i1 %107, i32 -108180324, i32 1850821463
  store i32 %108, i32* %22
  br label %203

; <label>:109:                                    ; preds = %24
  %110 = load i32, i32* @x.132
  %111 = load i32, i32* @y.133
  %112 = sub i32 %110, 938476346
  %113 = sub i32 %112, 1
  %114 = add i32 %113, 938476346
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 false, true
  %123 = and i1 %120, false
  %124 = and i1 %118, %122
  %125 = and i1 %121, false
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 false, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 -2030454375, i32 1092701711
  store i32 %136, i32* %22
  br label %203

; <label>:137:                                    ; preds = %24
  %138 = load volatile i64*, i64** %8
  %139 = load i64, i64* %138, align 8
  %140 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %141 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE8max_sizeEv(%"class.std::vector"* %140) #3
  %142 = icmp ugt i64 %139, %141
  store i1 %142, i1* %4
  %143 = load i32, i32* @x.132
  %144 = load i32, i32* @y.133
  %145 = add i32 %143, 1920649483
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, 1920649483
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  %169 = select i1 %167, i32 768606204, i32 1092701711
  store i32 %169, i32* %22
  br label %203

; <label>:170:                                    ; preds = %24
  %171 = load volatile i1, i1* %4
  %172 = select i1 %171, i32 -108180324, i32 -1915080369
  store i32 %172, i32* %22
  br label %203

; <label>:173:                                    ; preds = %24
  %174 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %175 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE8max_sizeEv(%"class.std::vector"* %174) #3
  store i32 -520851871, i32* %22
  store i64 %175, i64* %23
  br label %203

; <label>:176:                                    ; preds = %24
  %177 = load volatile i64*, i64** %8
  %178 = load i64, i64* %177, align 8
  store i32 -520851871, i32* %22
  store i64 %178, i64* %23
  br label %203

; <label>:179:                                    ; preds = %24
  %180 = load i64, i64* %23
  ret i64 %180

; <label>:181:                                    ; preds = %24
  %182 = alloca %"class.std::vector"*, align 8
  %183 = alloca i64, align 8
  %184 = alloca i8*, align 8
  %185 = alloca i64, align 8
  %186 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %182, align 8
  store i64 %1, i64* %183, align 8
  store i8* %2, i8** %184, align 8
  %187 = load %"class.std::vector"*, %"class.std::vector"** %182, align 8
  %188 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE8max_sizeEv(%"class.std::vector"* %187) #3
  %189 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE4sizeEv(%"class.std::vector"* %187) #3
  %190 = shl i64 %188, %189
  %191 = add i64 %188, 849104050454712273
  %192 = sub i64 %191, %189
  %193 = sub i64 %192, 849104050454712273
  %194 = sub i64 %188, %189
  %195 = load i64, i64* %183, align 8
  %196 = icmp ult i64 %193, %195
  store i32 1043214705, i32* %22
  br label %203

; <label>:197:                                    ; preds = %24
  %198 = load volatile i64*, i64** %8
  %199 = load i64, i64* %198, align 8
  %200 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %201 = call i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE8max_sizeEv(%"class.std::vector"* %200) #3
  %202 = icmp ugt i64 %199, %201
  store i32 -2030454375, i32* %22
  br label %203

; <label>:203:                                    ; preds = %197, %181, %176, %173, %170, %137, %109, %87, %81, %47, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %8, %"struct.std::_Vector_base"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1181599608, i32* %10
  %11 = alloca %"class.std::vector.3"*
  br label %12

; <label>:12:                                     ; preds = %2, %65
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1181599608, label %15
    i32 -373196435, label %19
    i32 1856931903, label %34
    i32 1663237985, label %54
    i32 -293950768, label %56
    i32 1525883433, label %57
    i32 -56366935, label %59
  ]

; <label>:14:                                     ; preds = %12
  br label %65

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -373196435, i32 -293950768
  store i32 %18, i32* %10
  br label %65

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.134
  %21 = load i32, i32* @y.135
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 1856931903, i32 -56366935
  store i32 %33, i32* %10
  br label %65

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %36 to %"class.std::allocator.0"*
  %38 = load i64, i64* %7, align 8
  %39 = call %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE8allocateERS7_m(%"class.std::allocator.0"* dereferenceable(1) %37, i64 %38)
  store %"class.std::vector.3"* %39, %"class.std::vector.3"** %3
  %40 = load i32, i32* @x.134
  %41 = load i32, i32* @y.135
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1663237985, i32 -56366935
  store i32 %53, i32* %10
  br label %65

; <label>:54:                                     ; preds = %12
  store i32 1525883433, i32* %10
  %55 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %3
  store %"class.std::vector.3"* %55, %"class.std::vector.3"** %11
  br label %65

; <label>:56:                                     ; preds = %12
  store i32 1525883433, i32* %10
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %11
  br label %65

; <label>:57:                                     ; preds = %12
  %58 = load %"class.std::vector.3"*, %"class.std::vector.3"** %11
  ret %"class.std::vector.3"* %58

; <label>:59:                                     ; preds = %12
  %60 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %61 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %61 to %"class.std::allocator.0"*
  %63 = load i64, i64* %7, align 8
  %64 = call %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE8allocateERS7_m(%"class.std::allocator.0"* dereferenceable(1) %62, i64 %63)
  store i32 1856931903, i32* %10
  br label %65

; <label>:65:                                     ; preds = %59, %56, %54, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_SaIS6_EET0_T_SA_S9_RT1_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.136
  %9 = load i32, i32* @y.137
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1024225917, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %97
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1024225917, label %21
    i32 -1113127773, label %41
    i32 915634730, label %75
    i32 -1272848306, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %97

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1113127773, i32 -1272848306
  store i32 %40, i32* %17
  br label %97

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.3"*, align 8
  %43 = alloca %"class.std::vector.3"*, align 8
  %44 = alloca %"class.std::vector.3"*, align 8
  %45 = alloca %"class.std::allocator.0"*, align 8
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %42, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %43, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %44, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %45, align 8
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %42, align 8
  %49 = call %"class.std::vector.3"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESt13move_iteratorIS7_EET0_T_(%"class.std::vector.3"* %48)
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  store %"class.std::vector.3"* %49, %"class.std::vector.3"** %50, align 8
  %51 = load %"class.std::vector.3"*, %"class.std::vector.3"** %43, align 8
  %52 = call %"class.std::vector.3"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESt13move_iteratorIS7_EET0_T_(%"class.std::vector.3"* %51)
  %53 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  store %"class.std::vector.3"* %52, %"class.std::vector.3"** %53, align 8
  %54 = load %"class.std::vector.3"*, %"class.std::vector.3"** %44, align 8
  %55 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %57 = load %"class.std::vector.3"*, %"class.std::vector.3"** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %59 = load %"class.std::vector.3"*, %"class.std::vector.3"** %58, align 8
  %60 = call %"class.std::vector.3"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_S7_ET0_T_SB_SA_RSaIT1_E(%"class.std::vector.3"* %57, %"class.std::vector.3"* %59, %"class.std::vector.3"* %54, %"class.std::allocator.0"* dereferenceable(1) %55)
  store %"class.std::vector.3"* %60, %"class.std::vector.3"** %5
  %61 = load i32, i32* @x.136
  %62 = load i32, i32* @y.137
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 915634730, i32 -1272848306
  store i32 %74, i32* %17
  br label %97

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  ret %"class.std::vector.3"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::vector.3"*, align 8
  %79 = alloca %"class.std::vector.3"*, align 8
  %80 = alloca %"class.std::vector.3"*, align 8
  %81 = alloca %"class.std::allocator.0"*, align 8
  %82 = alloca %"class.std::move_iterator", align 8
  %83 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %78, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %79, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %80, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %81, align 8
  %84 = load %"class.std::vector.3"*, %"class.std::vector.3"** %78, align 8
  %85 = call %"class.std::vector.3"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESt13move_iteratorIS7_EET0_T_(%"class.std::vector.3"* %84)
  %86 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %82, i32 0, i32 0
  store %"class.std::vector.3"* %85, %"class.std::vector.3"** %86, align 8
  %87 = load %"class.std::vector.3"*, %"class.std::vector.3"** %79, align 8
  %88 = call %"class.std::vector.3"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESt13move_iteratorIS7_EET0_T_(%"class.std::vector.3"* %87)
  %89 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  store %"class.std::vector.3"* %88, %"class.std::vector.3"** %89, align 8
  %90 = load %"class.std::vector.3"*, %"class.std::vector.3"** %80, align 8
  %91 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %81, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %82, i32 0, i32 0
  %93 = load %"class.std::vector.3"*, %"class.std::vector.3"** %92, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %95 = load %"class.std::vector.3"*, %"class.std::vector.3"** %94, align 8
  %96 = call %"class.std::vector.3"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_S7_ET0_T_SB_SA_RSaIT1_E(%"class.std::vector.3"* %93, %"class.std::vector.3"* %95, %"class.std::vector.3"* %90, %"class.std::allocator.0"* dereferenceable(1) %91)
  store i32 -1113127773, i32* %17
  br label %97

; <label>:97:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.138
  %7 = load i32, i32* @y.139
  %8 = add i32 %6, 669357747
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 669357747
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -791959832, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %56
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -791959832, label %20
    i32 788763564, label %28
    i32 -1770935488, label %49
    i32 1309977013, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %56

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 788763564, i32 1309977013
  store i32 %27, i32* %16
  br label %56

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.3"*, align 8
  %30 = alloca %"class.std::vector.3"*, align 8
  %31 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %29, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %30, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %31, align 8
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %29, align 8
  %33 = load %"class.std::vector.3"*, %"class.std::vector.3"** %30, align 8
  call void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvT_S8_(%"class.std::vector.3"* %32, %"class.std::vector.3"* %33)
  %34 = load i32, i32* @x.138
  %35 = load i32, i32* @y.139
  %36 = add i32 %34, 1274815853
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1274815853
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1770935488, i32 1309977013
  store i32 %48, i32* %16
  br label %56

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca %"class.std::vector.3"*, align 8
  %52 = alloca %"class.std::vector.3"*, align 8
  %53 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %51, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %52, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %53, align 8
  %54 = load %"class.std::vector.3"*, %"class.std::vector.3"** %51, align 8
  %55 = load %"class.std::vector.3"*, %"class.std::vector.3"** %52, align 8
  call void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvT_S8_(%"class.std::vector.3"* %54, %"class.std::vector.3"* %55)
  store i32 788763564, i32* %16
  br label %56

; <label>:56:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE13_M_deallocateEPS6_m(%"struct.std::_Vector_base"*, %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %10, %"class.std::vector.3"** %4
  %11 = alloca i32
  store i32 -726544389, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -726544389, label %15
    i32 -371960795, label %19
    i32 2101199510, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %17 = icmp ne %"class.std::vector.3"* %16, null
  %18 = select i1 %17, i32 -371960795, i32 2101199510
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %21 to %"class.std::allocator.0"*
  %23 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE10deallocateERS7_PS6_m(%"class.std::allocator.0"* dereferenceable(1) %22, %"class.std::vector.3"* %23, i64 %24)
  store i32 2101199510, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.142
  %6 = load i32, i32* @y.143
  %7 = add i32 %5, -1909501508
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1909501508
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1800707897, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %99
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1800707897, label %19
    i32 -319778088, label %39
    i32 -1961247423, label %72
    i32 77691857, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %99

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -319778088, i32 77691857
  store i32 %38, i32* %15
  br label %99

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %42 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %46 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  %50 = ptrtoint %"class.std::vector.8"* %45 to i64
  %51 = ptrtoint %"class.std::vector.8"* %49 to i64
  %52 = sub i64 %50, 9132601243428290879
  %53 = sub i64 %52, %51
  %54 = add i64 %53, 9132601243428290879
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 24
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.142
  %58 = load i32, i32* @y.143
  %59 = add i32 %57, -1520357136
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -1520357136
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -1961247423, i32 77691857
  store i32 %71, i32* %15
  br label %99

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64, i64* %2
  ret i64 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %75, align 8
  %76 = load %"class.std::vector.3"*, %"class.std::vector.3"** %75, align 8
  %77 = bitcast %"class.std::vector.3"* %76 to %"struct.std::_Vector_base.4"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %78, i32 0, i32 1
  %80 = load %"class.std::vector.8"*, %"class.std::vector.8"** %79, align 8
  %81 = bitcast %"class.std::vector.3"* %76 to %"struct.std::_Vector_base.4"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %83, align 8
  %85 = ptrtoint %"class.std::vector.8"* %80 to i64
  %86 = ptrtoint %"class.std::vector.8"* %84 to i64
  %87 = sub i64 0, %86
  %88 = add i64 %85, %87
  %89 = sub i64 %85, %86
  %90 = add i64 0, -1560622346717192769
  %91 = sub i64 %90, %88
  %92 = sub i64 %91, -1560622346717192769
  %93 = sub i64 0, %88
  %94 = sub i64 %92, 1168834657910096692
  %95 = add i64 %94, 24
  %96 = add i64 %95, 1168834657910096692
  %97 = add i64 %92, 24
  %98 = sdiv exact i64 %88, 24
  store i32 -319778088, i32* %15
  br label %99

; <label>:99:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIN5Solve4edgeESaIS3_EEEE17_S_select_on_copyERKS6_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %3, align 8
  %4 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE37select_on_container_copy_constructionERKS5_(%"class.std::allocator.5"* sret %0, %"class.std::allocator.5"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.146
  %6 = load i32, i32* @y.147
  %7 = add i32 %5, 369807499
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 369807499
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1141137505, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1141137505, label %19
    i32 897627018, label %27
    i32 -753978971, label %58
    i32 1520242408, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 897627018, i32 1520242408
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %28, align 8
  %29 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %31, %"class.std::allocator.5"** %2
  %32 = load i32, i32* @x.146
  %33 = load i32, i32* @y.147
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -753978971, i32 1520242408
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %61, align 8
  %62 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %63 to %"class.std::allocator.5"*
  store i32 897627018, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.4"*, i64, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.148
  %5 = load i32, i32* @y.149
  %6 = add i32 %4, 2026370147
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2026370147
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %65

; <label>:18:                                     ; preds = %3, %65
  %19 = alloca %"struct.std::_Vector_base.4"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator.5"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %21, align 8
  %24 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %19, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %24, i32 0, i32 0
  %26 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %21, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %25, %"class.std::allocator.5"* dereferenceable(1) %26) #3
  %27 = load i64, i64* %20, align 8
  %28 = load i32, i32* @x.148
  %29 = load i32, i32* @y.149
  %30 = sub i32 %28, -1415954116
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1415954116
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %65

; <label>:54:                                     ; preds = %18
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base.4"* %24, i64 %27)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %54
  ret void

; <label>:56:                                     ; preds = %54
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %22, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %23, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %25) #3
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %22, align 8
  %62 = load i32, i32* %23, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  resume { i8*, i32 } %64

; <label>:65:                                     ; preds = %18, %3
  %66 = alloca %"struct.std::_Vector_base.4"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca %"class.std::allocator.5"*, align 8
  %69 = alloca i8*
  %70 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %66, align 8
  store i64 %1, i64* %67, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %68, align 8
  %71 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %66, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %71, i32 0, i32 0
  %73 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %68, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %72, %"class.std::allocator.5"* dereferenceable(1) %73) #3
  %74 = load i64, i64* %67, align 8
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEPS6_S6_ET0_T_SE_SD_RSaIT1_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %6, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %12, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  %22 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEPS6_ET0_T_SE_SD_(%"class.std::vector.8"* %19, %"class.std::vector.8"* %21, %"class.std::vector.8"* %17)
  ret %"class.std::vector.8"* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.152
  %6 = load i32, i32* @y.153
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1787095586, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1787095586, label %18
    i32 -1889584856, label %26
    i32 -1377374652, label %64
    i32 -2044557437, label %66
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1889584856, i32 -2044557437
  store i32 %25, i32* %14
  br label %77

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %28 = alloca %"class.std::vector.3"*, align 8
  %29 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %28, align 8
  %30 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %31 = bitcast %"class.std::vector.3"* %30 to %"struct.std::_Vector_base.4"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"class.std::vector.8"*, %"class.std::vector.8"** %33, align 8
  store %"class.std::vector.8"* %34, %"class.std::vector.8"** %29, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"* %27, %"class.std::vector.8"** dereferenceable(8) %29) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %27, i32 0, i32 0
  %36 = load %"class.std::vector.8"*, %"class.std::vector.8"** %35, align 8
  store %"class.std::vector.8"* %36, %"class.std::vector.8"** %2
  %37 = load i32, i32* @x.152
  %38 = load i32, i32* @y.153
  %39 = sub i32 %37, -1888969876
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1888969876
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1377374652, i32 -2044557437
  store i32 %63, i32* %14
  br label %77

; <label>:64:                                     ; preds = %15
  %65 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %65

; <label>:66:                                     ; preds = %15
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %68 = alloca %"class.std::vector.3"*, align 8
  %69 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %68, align 8
  %70 = load %"class.std::vector.3"*, %"class.std::vector.3"** %68, align 8
  %71 = bitcast %"class.std::vector.3"* %70 to %"struct.std::_Vector_base.4"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.8"*, %"class.std::vector.8"** %73, align 8
  store %"class.std::vector.8"* %74, %"class.std::vector.8"** %69, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"* %67, %"class.std::vector.8"** dereferenceable(8) %69) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %67, i32 0, i32 0
  %76 = load %"class.std::vector.8"*, %"class.std::vector.8"** %75, align 8
  store i32 -1889584856, i32* %14
  br label %77

; <label>:77:                                     ; preds = %66, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  store %"class.std::vector.8"* %9, %"class.std::vector.8"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"* %2, %"class.std::vector.8"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.156
  %6 = load i32, i32* @y.157
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -690127522, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -690127522, label %18
    i32 -1810471021, label %38
    i32 -703872913, label %58
    i32 99974427, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1810471021, i32 99974427
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %39, align 8
  %40 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %41 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %42, %"class.std::allocator.5"** %2
  %43 = load i32, i32* @x.156
  %44 = load i32, i32* @y.157
  %45 = add i32 %43, 1875223040
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1875223040
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -703872913, i32 99974427
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %61, align 8
  %62 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %63 to %"class.std::allocator.5"*
  store i32 -1810471021, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.158
  %3 = load i32, i32* @y.159
  %4 = add i32 %2, 651619637
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 651619637
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %193

; <label>:28:                                     ; preds = %1, %193
  %29 = alloca %"struct.std::_Vector_base.4"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %29, align 8
  %32 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"class.std::vector.8"*, %"class.std::vector.8"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %42 = ptrtoint %"class.std::vector.8"* %38 to i64
  %43 = ptrtoint %"class.std::vector.8"* %41 to i64
  %44 = add i64 %42, 1373453941246409989
  %45 = sub i64 %44, %43
  %46 = sub i64 %45, 1373453941246409989
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 24
  %49 = load i32, i32* @x.158
  %50 = load i32, i32* @y.159
  %51 = sub i32 %49, -1300391826
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1300391826
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %193

; <label>:75:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %32, %"class.std::vector.8"* %35, i64 %48)
          to label %76 unwind label %132

; <label>:76:                                     ; preds = %75
  %77 = load i32, i32* @x.158
  %78 = load i32, i32* @y.159
  %79 = add i32 %77, 718424909
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, 718424909
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %242

; <label>:103:                                    ; preds = %76, %242
  %104 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %104) #3
  %105 = load i32, i32* @x.158
  %106 = load i32, i32* @y.159
  %107 = sub i32 %105, -185719902
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -185719902
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %242

; <label>:131:                                    ; preds = %103
  ret void

; <label>:132:                                    ; preds = %75
  %133 = load i32, i32* @x.158
  %134 = load i32, i32* @y.159
  %135 = add i32 %133, 842996602
  %136 = sub i32 %135, 1
  %137 = sub i32 %136, 842996602
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %244

; <label>:159:                                    ; preds = %132, %244
  %160 = landingpad { i8*, i32 }
          catch i8* null
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %30, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %31, align 4
  %163 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %163) #3
  %164 = load i32, i32* @x.158
  %165 = load i32, i32* @y.159
  %166 = sub i32 %164, -1045704326
  %167 = sub i32 %166, 1
  %168 = add i32 %167, -1045704326
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 true, true
  %177 = and i1 %174, true
  %178 = and i1 %172, %176
  %179 = and i1 %175, true
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 true, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  br i1 %188, label %190, label %244

; <label>:190:                                    ; preds = %159
  br label %191

; <label>:191:                                    ; preds = %190
  %192 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %192) #10
  unreachable

; <label>:193:                                    ; preds = %28, %1
  %194 = alloca %"struct.std::_Vector_base.4"*, align 8
  %195 = alloca i8*
  %196 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %194, align 8
  %197 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %194, align 8
  %198 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %198, i32 0, i32 0
  %200 = load %"class.std::vector.8"*, %"class.std::vector.8"** %199, align 8
  %201 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %197, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %201, i32 0, i32 2
  %203 = load %"class.std::vector.8"*, %"class.std::vector.8"** %202, align 8
  %204 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %197, i32 0, i32 0
  %205 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %204, i32 0, i32 0
  %206 = load %"class.std::vector.8"*, %"class.std::vector.8"** %205, align 8
  %207 = ptrtoint %"class.std::vector.8"* %203 to i64
  %208 = ptrtoint %"class.std::vector.8"* %206 to i64
  %209 = shl i64 %207, %208
  %210 = shl i64 %207, %208
  %211 = sub i64 0, -7482233790125791550
  %212 = sub i64 %211, %207
  %213 = add i64 %212, -7482233790125791550
  %214 = sub i64 0, %207
  %215 = add i64 %213, -6867563653206792704
  %216 = add i64 %215, %208
  %217 = sub i64 %216, -6867563653206792704
  %218 = add i64 %213, %208
  %219 = add i64 0, 260242573855923125
  %220 = sub i64 %219, %207
  %221 = sub i64 %220, 260242573855923125
  %222 = sub i64 0, %207
  %223 = sub i64 0, %221
  %224 = sub i64 0, %208
  %225 = add i64 %223, %224
  %226 = sub i64 0, %225
  %227 = add i64 %221, %208
  %228 = shl i64 %207, %208
  %229 = sub i64 0, %208
  %230 = add i64 %207, %229
  %231 = sub i64 %207, %208
  %232 = sub i64 0, %230
  %233 = add i64 0, %232
  %234 = sub i64 0, %230
  %235 = sub i64 0, %233
  %236 = sub i64 0, 24
  %237 = add i64 %235, %236
  %238 = sub i64 0, %237
  %239 = add i64 %233, 24
  %240 = shl i64 %230, 24
  %241 = sdiv exact i64 %230, 24
  br label %28

; <label>:242:                                    ; preds = %103, %76
  %243 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %243) #3
  br label %103

; <label>:244:                                    ; preds = %159, %132
  %245 = landingpad { i8*, i32 }
          catch i8* null
  %246 = extractvalue { i8*, i32 } %245, 0
  store i8* %246, i8** %30, align 8
  %247 = extractvalue { i8*, i32 } %245, 1
  store i32 %247, i32* %31, align 4
  %248 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %248) #3
  br label %159
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE37select_on_container_copy_constructionERKS5_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.160
  %6 = load i32, i32* @y.161
  %7 = sub i32 %5, 1296965960
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1296965960
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1071165200, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1071165200, label %19
    i32 -320814901, label %39
    i32 -2003165543, label %56
    i32 -489260060, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -320814901, i32 -489260060
  store i32 %38, i32* %15
  br label %60

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %40, align 8
  %41 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %41) #3
  %42 = load i32, i32* @x.160
  %43 = load i32, i32* @y.161
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -2003165543, i32 -489260060
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %58, align 8
  %59 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %58, align 8
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %59) #3
  store i32 -320814901, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.6"* %6, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %1, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.166
  %6 = load i32, i32* @y.167
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1762069324, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1762069324, label %18
    i32 -1013139096, label %26
    i32 -1919462961, label %49
    i32 1415051252, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1013139096, i32 1415051252
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %28, align 8
  %29 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %29 to %"class.std::allocator.5"*
  %31 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %30, %"class.std::allocator.5"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %29, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %29, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %29, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %34, align 8
  %35 = load i32, i32* @x.166
  %36 = load i32, i32* @y.167
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1919462961, i32 1415051252
  store i32 %48, i32* %14
  br label %59

; <label>:49:                                     ; preds = %15
  ret void

; <label>:50:                                     ; preds = %15
  %51 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  %52 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %51, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %52, align 8
  %53 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %51, align 8
  %54 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %53 to %"class.std::allocator.5"*
  %55 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %52, align 8
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %54, %"class.std::allocator.5"* dereferenceable(1) %55) #3
  %56 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %53, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %56, align 8
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %53, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %53, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %58, align 8
  store i32 -1013139096, i32* %14
  br label %59

; <label>:59:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.4"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.8"* %7, %"class.std::vector.8"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.8"* %19, %"class.std::vector.8"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.172
  %10 = load i32, i32* @y.173
  %11 = sub i32 %9, 533017849
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 533017849
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 13247516, i32* %19
  %20 = alloca %"class.std::vector.8"*
  br label %21

; <label>:21:                                     ; preds = %2, %131
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 13247516, label %24
    i32 1026465353, label %32
    i32 -1668327070, label %66
    i32 -1032478133, label %69
    i32 -665978563, label %76
    i32 -851761642, label %77
    i32 1349822691, label %106
    i32 -1936632785, label %122
    i32 -2006068133, label %124
    i32 911661324, label %130
  ]

; <label>:23:                                     ; preds = %21
  br label %131

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1026465353, i32 -2006068133
  store i32 %31, i32* %19
  br label %131

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.4"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %33, align 8
  store %"struct.std::_Vector_base.4"* %36, %"struct.std::_Vector_base.4"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.172
  %41 = load i32, i32* @y.173
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1668327070, i32 -2006068133
  store i32 %65, i32* %19
  br label %131

; <label>:66:                                     ; preds = %21
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -1032478133, i32 -665978563
  store i32 %68, i32* %19
  br label %131

; <label>:69:                                     ; preds = %21
  %70 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %71 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %71 to %"class.std::allocator.5"*
  %73 = load volatile i64*, i64** %6
  %74 = load i64, i64* %73, align 8
  %75 = call %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1) %72, i64 %74)
  store i32 -851761642, i32* %19
  store %"class.std::vector.8"* %75, %"class.std::vector.8"** %20
  br label %131

; <label>:76:                                     ; preds = %21
  store i32 -851761642, i32* %19
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %20
  br label %131

; <label>:77:                                     ; preds = %21
  %78 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20
  store %"class.std::vector.8"* %78, %"class.std::vector.8"** %3
  %79 = load i32, i32* @x.172
  %80 = load i32, i32* @y.173
  %81 = add i32 %79, 529272787
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, 529272787
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 1349822691, i32 911661324
  store i32 %105, i32* %19
  br label %131

; <label>:106:                                    ; preds = %21
  %107 = load i32, i32* @x.172
  %108 = load i32, i32* @y.173
  %109 = sub i32 %107, -1253685340
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -1253685340
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 -1936632785, i32 911661324
  store i32 %121, i32* %19
  br label %131

; <label>:122:                                    ; preds = %21
  %123 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  ret %"class.std::vector.8"* %123

; <label>:124:                                    ; preds = %21
  %125 = alloca %"struct.std::_Vector_base.4"*, align 8
  %126 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %125, align 8
  store i64 %1, i64* %126, align 8
  %127 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %125, align 8
  %128 = load i64, i64* %126, align 8
  %129 = icmp ne i64 %128, 0
  store i32 1026465353, i32* %19
  br label %131

; <label>:130:                                    ; preds = %21
  store i32 1349822691, i32* %19
  br label %131

; <label>:131:                                    ; preds = %130, %124, %106, %77, %76, %69, %66, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %"class.std::vector.8"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.176
  %9 = load i32, i32* @y.177
  %10 = sub i32 %8, 2145977251
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 2145977251
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1784538989, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %116
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1784538989, label %22
    i32 1888940414, label %42
    i32 -903513066, label %66
    i32 157054291, label %69
    i32 116277579, label %84
    i32 -176317966, label %100
    i32 770142812, label %101
    i32 -1663177525, label %107
    i32 -1541985106, label %115
  ]

; <label>:21:                                     ; preds = %19
  br label %116

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1888940414, i32 -1663177525
  store i32 %41, i32* %18
  br label %116

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.176
  %53 = load i32, i32* @y.177
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -903513066, i32 -1663177525
  store i32 %65, i32* %18
  br label %116

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 157054291, i32 770142812
  store i32 %68, i32* %18
  br label %116

; <label>:69:                                     ; preds = %19
  %70 = load i32, i32* @x.176
  %71 = load i32, i32* @y.177
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 116277579, i32 -1541985106
  store i32 %83, i32* %18
  br label %116

; <label>:84:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  %85 = load i32, i32* @x.176
  %86 = load i32, i32* @y.177
  %87 = sub i32 %85, 1505754278
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 1505754278
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 -176317966, i32 -1541985106
  store i32 %99, i32* %18
  br label %116

; <label>:100:                                    ; preds = %19
  unreachable

; <label>:101:                                    ; preds = %19
  %102 = load volatile i64*, i64** %5
  %103 = load i64, i64* %102, align 8
  %104 = mul i64 %103, 24
  %105 = call i8* @_Znwm(i64 %104)
  %106 = bitcast i8* %105 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %106

; <label>:107:                                    ; preds = %19
  %108 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %109 = alloca i64, align 8
  %110 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %108, align 8
  store i64 %1, i64* %109, align 8
  store i8* %2, i8** %110, align 8
  %111 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %108, align 8
  %112 = load i64, i64* %109, align 8
  %113 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %111) #3
  %114 = icmp ugt i64 %112, %113
  store i32 1888940414, i32* %18
  br label %116

; <label>:115:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 116277579, i32* %18
  br label %116

; <label>:116:                                    ; preds = %115, %107, %84, %69, %66, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.178
  %5 = load i32, i32* @y.179
  %6 = sub i32 %4, -653458962
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -653458962
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 869399392, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 869399392, label %18
    i32 1944386076, label %38
    i32 -1977609999, label %56
    i32 1878614819, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1944386076, i32 1878614819
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %41 = load i32, i32* @x.178
  %42 = load i32, i32* @y.179
  %43 = add i32 %41, 452549474
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 452549474
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1977609999, i32 1878614819
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  store i32 1944386076, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEPS6_ET0_T_SE_SD_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.182
  %8 = load i32, i32* @y.183
  %9 = add i32 %7, 313488293
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 313488293
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -454149540, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %107
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -454149540, label %21
    i32 1523975799, label %41
    i32 -406240422, label %86
    i32 -1252135607, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %107

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1523975799, i32 -1252135607
  store i32 %40, i32* %17
  br label %107

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %44 = alloca %"class.std::vector.8"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %42, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %43, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %49, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %46, i32 0, i32 0
  %56 = load %"class.std::vector.8"*, %"class.std::vector.8"** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %47, i32 0, i32 0
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %57, align 8
  %59 = call %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEPS8_EET0_T_SG_SF_(%"class.std::vector.8"* %56, %"class.std::vector.8"* %58, %"class.std::vector.8"* %54)
  store %"class.std::vector.8"* %59, %"class.std::vector.8"** %4
  %60 = load i32, i32* @x.182
  %61 = load i32, i32* @y.183
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -406240422, i32 -1252135607
  store i32 %85, i32* %17
  br label %107

; <label>:86:                                     ; preds = %18
  %87 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %91 = alloca %"class.std::vector.8"*, align 8
  %92 = alloca i8, align 1
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %95 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %89, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %95, align 8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %90, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %96, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %91, align 8
  store i8 1, i8* %92, align 1
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %93 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %94 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load %"class.std::vector.8"*, %"class.std::vector.8"** %91, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %93, i32 0, i32 0
  %103 = load %"class.std::vector.8"*, %"class.std::vector.8"** %102, align 8
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %94, i32 0, i32 0
  %105 = load %"class.std::vector.8"*, %"class.std::vector.8"** %104, align 8
  %106 = call %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEPS8_EET0_T_SG_SF_(%"class.std::vector.8"* %103, %"class.std::vector.8"* %105, %"class.std::vector.8"* %101)
  store i32 1523975799, i32* %17
  br label %107

; <label>:107:                                    ; preds = %88, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEPS8_EET0_T_SG_SF_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %11, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %76, %3
  %14 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %5) #3
  br i1 %14, label %15, label %128

; <label>:15:                                     ; preds = %13
  %16 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %17 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %16) #3
  %18 = call dereferenceable(24) %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"* %4) #3
  invoke void @_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.8"* %17, %"class.std::vector.8"* dereferenceable(24) %18)
          to label %19 unwind label %77

; <label>:19:                                     ; preds = %15
  br label %20

; <label>:20:                                     ; preds = %19
  %21 = load i32, i32* @x.184
  %22 = load i32, i32* @y.185
  %23 = sub i32 %21, -1256186776
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -1256186776
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %145

; <label>:47:                                     ; preds = %20, %145
  %48 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"* %4) #3
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %50 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %49, i32 1
  store %"class.std::vector.8"* %50, %"class.std::vector.8"** %7, align 8
  %51 = load i32, i32* @x.184
  %52 = load i32, i32* @y.185
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %145

; <label>:76:                                     ; preds = %47
  br label %13

; <label>:77:                                     ; preds = %15
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %8, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %9, align 4
  br label %81

; <label>:81:                                     ; preds = %77
  %82 = load i8*, i8** %8, align 8
  %83 = call i8* @__cxa_begin_catch(i8* %82) #3
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %85 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %84, %"class.std::vector.8"* %85)
          to label %86 unwind label %130

; <label>:86:                                     ; preds = %81
  %87 = load i32, i32* @x.184
  %88 = load i32, i32* @y.185
  %89 = sub i32 %87, 883743286
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 883743286
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %149

; <label>:113:                                    ; preds = %86, %149
  %114 = load i32, i32* @x.184
  %115 = load i32, i32* @y.185
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %149

; <label>:127:                                    ; preds = %113
  invoke void @__cxa_rethrow() #13
          to label %144 unwind label %130

; <label>:128:                                    ; preds = %13
  %129 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  ret %"class.std::vector.8"* %129

; <label>:130:                                    ; preds = %127, %81
  %131 = landingpad { i8*, i32 }
          cleanup
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %8, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %134 unwind label %141

; <label>:134:                                    ; preds = %130
  br label %136
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:136:                                    ; preds = %134
  %137 = load i8*, i8** %8, align 8
  %138 = load i32, i32* %9, align 4
  %139 = insertvalue { i8*, i32 } undef, i8* %137, 0
  %140 = insertvalue { i8*, i32 } %139, i32 %138, 1
  resume { i8*, i32 } %140

; <label>:141:                                    ; preds = %130
  %142 = landingpad { i8*, i32 }
          catch i8* null
  %143 = extractvalue { i8*, i32 } %142, 0
  call void @__clang_call_terminate(i8* %143) #10
  unreachable

; <label>:144:                                    ; preds = %127
  unreachable

; <label>:145:                                    ; preds = %47, %20
  %146 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"* %4) #3
  %147 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %148 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %147, i32 1
  store %"class.std::vector.8"* %148, %"class.std::vector.8"** %7, align 8
  br label %47

; <label>:149:                                    ; preds = %113, %86
  br label %113
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %1, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5) #3
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %8) #3
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  %11 = icmp ne %"class.std::vector.8"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.8"*
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRKSt6vectorIN5Solve4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  ret %"class.std::vector.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %5, i32 1
  store %"class.std::vector.8"* %6, %"class.std::vector.8"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.30"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Solve4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.8"* %5, %"class.std::vector.8"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.198
  %6 = load i32, i32* @y.199
  %7 = sub i32 %5, -17269825
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -17269825
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1780606441, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1780606441, label %19
    i32 -238725562, label %39
    i32 243873428, label %57
    i32 -593365681, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -238725562, i32 -593365681
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %41, i32 0, i32 0
  store %"class.std::vector.8"** %42, %"class.std::vector.8"*** %2
  %43 = load i32, i32* @x.198
  %44 = load i32, i32* @y.199
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 243873428, i32 -593365681
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %2
  ret %"class.std::vector.8"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %61, i32 0, i32 0
  store i32 -238725562, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRKSt6vectorIN5Solve4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::allocator.10", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %12) #3
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %15 = bitcast %"class.std::vector.8"* %14 to %"struct.std::_Vector_base.9"*
  %16 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Solve4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.10"* sret %5, %"class.std::allocator.10"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.9"* %11, i64 %13, %"class.std::allocator.10"* dereferenceable(1) %5)
          to label %17 unwind label %81

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIN5Solve4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %19 = call %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %8, i32 0, i32 0
  store %"struct.Solve::edge"* %19, %"struct.Solve::edge"** %20, align 8
  %21 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %22 = call %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %9, i32 0, i32 0
  store %"struct.Solve::edge"* %22, %"struct.Solve::edge"** %23, align 8
  %24 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %26, align 8
  %28 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %29 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %8, i32 0, i32 0
  %31 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %9, i32 0, i32 0
  %33 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %32, align 8
  %34 = invoke %"struct.Solve::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Solve::edge"* %31, %"struct.Solve::edge"* %33, %"struct.Solve::edge"* %27, %"class.std::allocator.10"* dereferenceable(1) %29)
          to label %35 unwind label %139

; <label>:35:                                     ; preds = %17
  %36 = load i32, i32* @x.202
  %37 = load i32, i32* @y.203
  %38 = add i32 %36, 53312494
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 53312494
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %190

; <label>:62:                                     ; preds = %35, %190
  %63 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %64, i32 0, i32 1
  store %"struct.Solve::edge"* %34, %"struct.Solve::edge"** %65, align 8
  %66 = load i32, i32* @x.202
  %67 = load i32, i32* @y.203
  %68 = sub i32 %66, -489770715
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -489770715
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %190

; <label>:80:                                     ; preds = %62
  ret void

; <label>:81:                                     ; preds = %2
  %82 = load i32, i32* @x.202
  %83 = load i32, i32* @y.203
  %84 = sub i32 %82, -607178896
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -607178896
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %194

; <label>:108:                                    ; preds = %81, %194
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %6, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %7, align 4
  call void @_ZNSaIN5Solve4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  %112 = load i32, i32* @x.202
  %113 = load i32, i32* @y.203
  %114 = add i32 %112, 143129265
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, 143129265
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %194

; <label>:138:                                    ; preds = %108
  br label %144

; <label>:139:                                    ; preds = %17
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %6, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %7, align 4
  %143 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %143) #3
  br label %144

; <label>:144:                                    ; preds = %139, %138
  %145 = load i32, i32* @x.202
  %146 = load i32, i32* @y.203
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %198

; <label>:158:                                    ; preds = %144, %198
  %159 = load i8*, i8** %6, align 8
  %160 = load i32, i32* %7, align 4
  %161 = insertvalue { i8*, i32 } undef, i8* %159, 0
  %162 = insertvalue { i8*, i32 } %161, i32 %160, 1
  %163 = load i32, i32* @x.202
  %164 = load i32, i32* @y.203
  %165 = sub i32 %163, -717614440
  %166 = sub i32 %165, 1
  %167 = add i32 %166, -717614440
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %198

; <label>:189:                                    ; preds = %158
  resume { i8*, i32 } %162

; <label>:190:                                    ; preds = %62, %35
  %191 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %192, i32 0, i32 1
  store %"struct.Solve::edge"* %34, %"struct.Solve::edge"** %193, align 8
  br label %62

; <label>:194:                                    ; preds = %108, %81
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %6, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %7, align 4
  call void @_ZNSaIN5Solve4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  br label %108

; <label>:198:                                    ; preds = %158, %144
  %199 = load i8*, i8** %6, align 8
  %200 = load i32, i32* %7, align 4
  %201 = insertvalue { i8*, i32 } undef, i8* %199, 0
  %202 = insertvalue { i8*, i32 } %201, i32 %200, 1
  br label %158
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %10, align 8
  %12 = ptrtoint %"struct.Solve::edge"* %7 to i64
  %13 = ptrtoint %"struct.Solve::edge"* %11 to i64
  %14 = sub i64 %12, 766539241028703399
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 766539241028703399
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Solve4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.10"* noalias sret, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.206
  %6 = load i32, i32* @y.207
  %7 = sub i32 %5, 247147714
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 247147714
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -246240836, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -246240836, label %19
    i32 -1119484628, label %39
    i32 -801400773, label %68
    i32 399518446, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1119484628, i32 399518446
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %40, align 8
  %41 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  call void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* sret %0, %"class.std::allocator.10"* dereferenceable(1) %41)
  %42 = load i32, i32* @x.206
  %43 = load i32, i32* @y.207
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -801400773, i32 399518446
  store i32 %67, i32* %15
  br label %72

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %70, align 8
  %71 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %70, align 8
  call void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* sret %0, %"class.std::allocator.10"* dereferenceable(1) %71)
  store i32 -1119484628, i32* %15
  br label %72

; <label>:72:                                     ; preds = %69, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.208
  %6 = load i32, i32* @y.209
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -230908205, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -230908205, label %18
    i32 -484868453, label %26
    i32 228282827, label %57
    i32 1230471445, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -484868453, i32 1230471445
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %27, align 8
  %28 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %29 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %30, %"class.std::allocator.10"** %2
  %31 = load i32, i32* @x.208
  %32 = load i32, i32* @y.209
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 228282827, i32 1230471445
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %60, align 8
  %61 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %62 to %"class.std::allocator.10"*
  store i32 -484868453, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.9"*, i64, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %10, %"class.std::allocator.10"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Solve4edgeEED2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.212
  %5 = load i32, i32* @y.213
  %6 = add i32 %4, -92059130
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -92059130
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 494607749, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 494607749, label %18
    i32 -2083728665, label %26
    i32 -1134631737, label %44
    i32 1544136760, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2083728665, i32 1544136760
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %27, align 8
  %28 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %27, align 8
  %29 = bitcast %"class.std::allocator.10"* %28 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.11"* %29) #3
  %30 = load i32, i32* @x.212
  %31 = load i32, i32* @y.213
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1134631737, i32 1544136760
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %46, align 8
  %47 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %46, align 8
  %48 = bitcast %"class.std::allocator.10"* %47 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.11"* %48) #3
  store i32 -2083728665, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Solve::edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.214
  %9 = load i32, i32* @y.215
  %10 = sub i32 %8, 1962676470
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1962676470
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1190653615, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1190653615, label %22
    i32 1822760075, label %30
    i32 14189957, label %63
    i32 394866932, label %65
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1822760075, i32 394866932
  store i32 %29, i32* %18
  br label %84

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %33 = alloca %"struct.Solve::edge"*, align 8
  %34 = alloca %"class.std::allocator.10"*, align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %31, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %32, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %38, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %33, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %34, align 8
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %35 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %36 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %33, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %35, i32 0, i32 0
  %45 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %36, i32 0, i32 0
  %47 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %46, align 8
  %48 = call %"struct.Solve::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Solve::edge"* %45, %"struct.Solve::edge"* %47, %"struct.Solve::edge"* %43)
  store %"struct.Solve::edge"* %48, %"struct.Solve::edge"** %5
  %49 = load i32, i32* @x.214
  %50 = load i32, i32* @y.215
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 14189957, i32 394866932
  store i32 %62, i32* %18
  br label %84

; <label>:63:                                     ; preds = %19
  %64 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %5
  ret %"struct.Solve::edge"* %64

; <label>:65:                                     ; preds = %19
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %68 = alloca %"struct.Solve::edge"*, align 8
  %69 = alloca %"class.std::allocator.10"*, align 8
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %66, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %72, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %67, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %73, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %68, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %69, align 8
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %70 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %71 to i8*
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 8, i1 false)
  %78 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %68, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %70, i32 0, i32 0
  %80 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %79, align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %71, i32 0, i32 0
  %82 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %81, align 8
  %83 = call %"struct.Solve::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Solve::edge"* %80, %"struct.Solve::edge"* %82, %"struct.Solve::edge"* %78)
  store i32 1822760075, i32* %18
  br label %84

; <label>:84:                                     ; preds = %65, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  store %"struct.Solve::edge"* %9, %"struct.Solve::edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %2, %"struct.Solve::edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  %11 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %10, align 8
  ret %"struct.Solve::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"struct.Solve::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.218
  %6 = load i32, i32* @y.219
  %7 = sub i32 %5, 442360488
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 442360488
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1842939567, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1842939567, label %19
    i32 366182847, label %27
    i32 1568365518, label %52
    i32 2036254067, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 366182847, i32 2036254067
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %29 = alloca %"class.std::vector.8"*, align 8
  %30 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %32 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %34, align 8
  store %"struct.Solve::edge"* %35, %"struct.Solve::edge"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %28, %"struct.Solve::edge"** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %28, i32 0, i32 0
  %37 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %36, align 8
  store %"struct.Solve::edge"* %37, %"struct.Solve::edge"** %2
  %38 = load i32, i32* @x.218
  %39 = load i32, i32* @y.219
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1568365518, i32 2036254067
  store i32 %51, i32* %15
  br label %65

; <label>:52:                                     ; preds = %16
  %53 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %2
  ret %"struct.Solve::edge"* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %56 = alloca %"class.std::vector.8"*, align 8
  %57 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %56, align 8
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %56, align 8
  %59 = bitcast %"class.std::vector.8"* %58 to %"struct.std::_Vector_base.9"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %60, i32 0, i32 1
  %62 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %61, align 8
  store %"struct.Solve::edge"* %62, %"struct.Solve::edge"** %57, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %55, %"struct.Solve::edge"** dereferenceable(8) %57) #3
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %55, i32 0, i32 0
  %64 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %63, align 8
  store i32 366182847, i32* %15
  br label %65

; <label>:65:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.220
  %6 = load i32, i32* @y.221
  %7 = add i32 %5, -1567269437
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1567269437
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1436931866, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1436931866, label %19
    i32 -1301359391, label %39
    i32 -1168217713, label %58
    i32 676718753, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1301359391, i32 676718753
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %40, align 8
  %41 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %42 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %43, %"class.std::allocator.10"** %2
  %44 = load i32, i32* @x.220
  %45 = load i32, i32* @y.221
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1168217713, i32 676718753
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %61, align 8
  %62 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %63 to %"class.std::allocator.10"*
  store i32 -1301359391, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.222
  %3 = load i32, i32* @y.223
  %4 = add i32 %2, 1635196245
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1635196245
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %84

; <label>:28:                                     ; preds = %1, %84
  %29 = alloca %"struct.std::_Vector_base.9"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %29, align 8
  %32 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %40, align 8
  %42 = ptrtoint %"struct.Solve::edge"* %38 to i64
  %43 = ptrtoint %"struct.Solve::edge"* %41 to i64
  %44 = add i64 %42, -792811180851986188
  %45 = sub i64 %44, %43
  %46 = sub i64 %45, -792811180851986188
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 8
  %49 = load i32, i32* @x.222
  %50 = load i32, i32* @y.223
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %84

; <label>:74:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %32, %"struct.Solve::edge"* %35, i64 %48)
          to label %75 unwind label %77

; <label>:75:                                     ; preds = %74
  %76 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %76) #3
  ret void

; <label>:77:                                     ; preds = %74
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %30, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %31, align 4
  %81 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %81) #3
  br label %82

; <label>:82:                                     ; preds = %77
  %83 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %83) #10
  unreachable

; <label>:84:                                     ; preds = %28, %1
  %85 = alloca %"struct.std::_Vector_base.9"*, align 8
  %86 = alloca i8*
  %87 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %85, align 8
  %88 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %85, align 8
  %89 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %89, i32 0, i32 0
  %91 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %88, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %92, i32 0, i32 2
  %94 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %93, align 8
  %95 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %88, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %95, i32 0, i32 0
  %97 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %96, align 8
  %98 = ptrtoint %"struct.Solve::edge"* %94 to i64
  %99 = ptrtoint %"struct.Solve::edge"* %97 to i64
  %100 = shl i64 %98, %99
  %101 = sub i64 %98, -4978475978358502603
  %102 = sub i64 %101, %99
  %103 = add i64 %102, -4978475978358502603
  %104 = sub i64 %98, %99
  %105 = mul i64 %103, %99
  %106 = shl i64 %98, %99
  %107 = shl i64 %98, %99
  %108 = sub i64 0, %99
  %109 = add i64 %98, %108
  %110 = sub i64 %98, %99
  %111 = sub i64 0, 8
  %112 = add i64 %109, %111
  %113 = sub i64 %109, 8
  %114 = mul i64 %112, 8
  %115 = sub i64 0, %109
  %116 = add i64 0, %115
  %117 = sub i64 0, %109
  %118 = sub i64 %116, -3590312504007906896
  %119 = add i64 %118, 8
  %120 = add i64 %119, -3590312504007906896
  %121 = add i64 %116, 8
  %122 = sub i64 0, 8
  %123 = add i64 %109, %122
  %124 = sub i64 %109, 8
  %125 = mul i64 %123, 8
  %126 = shl i64 %109, 8
  %127 = sub i64 0, 8664978159734086833
  %128 = sub i64 %127, %109
  %129 = add i64 %128, 8664978159734086833
  %130 = sub i64 0, %109
  %131 = sub i64 0, 8
  %132 = sub i64 %129, %131
  %133 = add i64 %129, 8
  %134 = shl i64 %109, 8
  %135 = shl i64 %109, 8
  %136 = sub i64 %109, 7338612789300883784
  %137 = sub i64 %136, 8
  %138 = add i64 %137, 7338612789300883784
  %139 = sub i64 %109, 8
  %140 = mul i64 %138, 8
  %141 = add i64 %109, 2826260600956189003
  %142 = sub i64 %141, 8
  %143 = sub i64 %142, 2826260600956189003
  %144 = sub i64 %109, 8
  %145 = mul i64 %143, 8
  %146 = sdiv exact i64 %109, 8
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* noalias sret, %"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %3, align 8
  %4 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  call void @_ZNSaIN5Solve4edgeEEC2ERKS1_(%"class.std::allocator.10"* %0, %"class.std::allocator.10"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Solve4edgeEEC2ERKS1_(%"class.std::allocator.10"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.228
  %6 = load i32, i32* @y.229
  %7 = sub i32 %5, -755256643
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -755256643
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1796921855, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1796921855, label %19
    i32 1696489094, label %27
    i32 931629716, label %46
    i32 -1429584106, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1696489094, i32 -1429584106
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %28, align 8
  %31 = load i32, i32* @x.228
  %32 = load i32, i32* @y.229
  %33 = add i32 %31, -351116762
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -351116762
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 931629716, i32 -1429584106
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %49 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %48, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %48, align 8
  store i32 1696489094, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSaIN5Solve4edgeEEC2ERKS1_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.Solve::edge"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.Solve::edge"* %7, %"struct.Solve::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.Solve::edge"* %12, %"struct.Solve::edge"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.Solve::edge"* %19, %"struct.Solve::edge"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIN5Solve4edgeEED2Ev(%"class.std::allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Solve::edge"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %8, %"struct.std::_Vector_base.9"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -2062718335, i32* %10
  %11 = alloca %"struct.Solve::edge"*
  br label %12

; <label>:12:                                     ; preds = %2, %67
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -2062718335, label %15
    i32 1983788703, label %19
    i32 -648398862, label %35
    i32 1520320265, label %56
    i32 169925025, label %58
    i32 -518983353, label %59
    i32 1761257262, label %61
  ]

; <label>:14:                                     ; preds = %12
  br label %67

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1983788703, i32 169925025
  store i32 %18, i32* %10
  br label %67

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.236
  %21 = load i32, i32* @y.237
  %22 = add i32 %20, -1877777820
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1877777820
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -648398862, i32 1761257262
  store i32 %34, i32* %10
  br label %67

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %37 to %"class.std::allocator.10"*
  %39 = load i64, i64* %7, align 8
  %40 = call %"struct.Solve::edge"* @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1) %38, i64 %39)
  store %"struct.Solve::edge"* %40, %"struct.Solve::edge"** %3
  %41 = load i32, i32* @x.236
  %42 = load i32, i32* @y.237
  %43 = add i32 %41, -1644606667
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1644606667
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1520320265, i32 1761257262
  store i32 %55, i32* %10
  br label %67

; <label>:56:                                     ; preds = %12
  store i32 -518983353, i32* %10
  %57 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %3
  store %"struct.Solve::edge"* %57, %"struct.Solve::edge"** %11
  br label %67

; <label>:58:                                     ; preds = %12
  store i32 -518983353, i32* %10
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %11
  br label %67

; <label>:59:                                     ; preds = %12
  %60 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %11
  ret %"struct.Solve::edge"* %60

; <label>:61:                                     ; preds = %12
  %62 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %63 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %63 to %"class.std::allocator.10"*
  %65 = load i64, i64* %7, align 8
  %66 = call %"struct.Solve::edge"* @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1) %64, i64 %65)
  store i32 -648398862, i32* %10
  br label %67

; <label>:67:                                     ; preds = %61, %58, %56, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Solve::edge"* @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret %"struct.Solve::edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.240
  %9 = load i32, i32* @y.241
  %10 = add i32 %8, -197626654
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -197626654
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1457078715, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1457078715, label %22
    i32 -1590387273, label %42
    i32 -660213102, label %79
    i32 1301770781, label %82
    i32 1193840561, label %83
    i32 -233621208, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1590387273, i32 -233621208
  store i32 %41, i32* %18
  br label %97

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Solve4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.240
  %53 = load i32, i32* @y.241
  %54 = sub i32 %52, -149415358
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -149415358
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -660213102, i32 -233621208
  store i32 %78, i32* %18
  br label %97

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 1301770781, i32 1193840561
  store i32 %81, i32* %18
  br label %97

; <label>:82:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:83:                                     ; preds = %19
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = mul i64 %85, 8
  %87 = call i8* @_Znwm(i64 %86)
  %88 = bitcast i8* %87 to %"struct.Solve::edge"*
  ret %"struct.Solve::edge"* %88

; <label>:89:                                     ; preds = %19
  %90 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %91 = alloca i64, align 8
  %92 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %90, align 8
  store i64 %1, i64* %91, align 8
  store i8* %2, i8** %92, align 8
  %93 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %90, align 8
  %94 = load i64, i64* %91, align 8
  %95 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Solve4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %93) #3
  %96 = icmp ugt i64 %94, %95
  store i32 -1590387273, i32* %18
  br label %97

; <label>:97:                                     ; preds = %89, %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Solve4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.244
  %5 = load i32, i32* @y.245
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -915518546, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -915518546, label %17
    i32 75554280, label %25
    i32 1666077182, label %55
    i32 -754025204, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 75554280, i32 -754025204
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %28 = load i32, i32* @x.244
  %29 = load i32, i32* @y.245
  %30 = sub i32 %28, 116306035
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 116306035
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1666077182, i32 -754025204
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  store i32 75554280, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %11, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %8, i32 0, i32 0
  %18 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %9, i32 0, i32 0
  %20 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %19, align 8
  %21 = call %"struct.Solve::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Solve::edge"* %18, %"struct.Solve::edge"* %20, %"struct.Solve::edge"* %16)
  ret %"struct.Solve::edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %10, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  %17 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %8, i32 0, i32 0
  %19 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %18, align 8
  %20 = call %"struct.Solve::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Solve::edge"* %17, %"struct.Solve::edge"* %19, %"struct.Solve::edge"* %15)
  ret %"struct.Solve::edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %12, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %8, i32 0, i32 0
  %16 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %15, align 8
  %17 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %17, %"struct.Solve::edge"** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %10, i32 0, i32 0
  %22 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %21, align 8
  %23 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %9, i32 0, i32 0
  store %"struct.Solve::edge"* %23, %"struct.Solve::edge"** %24, align 8
  %25 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  %27 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %9, i32 0, i32 0
  %29 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %28, align 8
  %30 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.Solve::edge"* %27, %"struct.Solve::edge"* %29, %"struct.Solve::edge"* %25)
  ret %"struct.Solve::edge"* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.252
  %8 = load i32, i32* @y.253
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1964216895, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %99
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1964216895, label %20
    i32 -1654318547, label %40
    i32 2058041358, label %76
    i32 1719338071, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %99

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1654318547, i32 1719338071
  store i32 %39, i32* %16
  br label %99

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %43 = alloca %"struct.Solve::edge"*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %41, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %42, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %47, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %44, i32 0, i32 0
  %51 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %50, align 8
  %52 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %45, i32 0, i32 0
  %56 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %55, align 8
  %57 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %56)
  %58 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %43, align 8
  %59 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %58)
  %60 = call %"struct.Solve::edge"* @_ZSt13__copy_move_aILb0EPKN5Solve4edgeEPS1_ET1_T0_S6_S5_(%"struct.Solve::edge"* %52, %"struct.Solve::edge"* %57, %"struct.Solve::edge"* %59)
  store %"struct.Solve::edge"* %60, %"struct.Solve::edge"** %4
  %61 = load i32, i32* @x.252
  %62 = load i32, i32* @y.253
  %63 = add i32 %61, 456542617
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 456542617
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 2058041358, i32 1719338071
  store i32 %75, i32* %16
  br label %99

; <label>:76:                                     ; preds = %17
  %77 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %77

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %81 = alloca %"struct.Solve::edge"*, align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %79, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %80, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %85, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %81, align 8
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %82, i32 0, i32 0
  %89 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %88, align 8
  %90 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %89)
  %91 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %83 to i8*
  %92 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 8, i1 false)
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %83, i32 0, i32 0
  %94 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %93, align 8
  %95 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %94)
  %96 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %81, align 8
  %97 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %96)
  %98 = call %"struct.Solve::edge"* @_ZSt13__copy_move_aILb0EPKN5Solve4edgeEPS1_ET1_T0_S6_S5_(%"struct.Solve::edge"* %90, %"struct.Solve::edge"* %95, %"struct.Solve::edge"* %97)
  store i32 -1654318547, i32* %16
  br label %99

; <label>:99:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  %10 = call %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Solve::edge"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %10, %"struct.Solve::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  %13 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %12, align 8
  ret %"struct.Solve::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt13__copy_move_aILb0EPKN5Solve4edgeEPS1_ET1_T0_S6_S5_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %11 = call %"struct.Solve::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Solve4edgeEEEPT_PKS5_S8_S6_(%"struct.Solve::edge"* %8, %"struct.Solve::edge"* %9, %"struct.Solve::edge"* %10)
  ret %"struct.Solve::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %9 = call %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.Solve::edge"* %8)
  ret %"struct.Solve::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %2, align 8
  %3 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %2, align 8
  %4 = call %"struct.Solve::edge"* @_ZNSt10_Iter_baseIPN5Solve4edgeELb0EE7_S_baseES2_(%"struct.Solve::edge"* %3)
  ret %"struct.Solve::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Solve4edgeEEEPT_PKS5_S8_S6_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %6, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %7, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %11 = ptrtoint %"struct.Solve::edge"* %9 to i64
  %12 = ptrtoint %"struct.Solve::edge"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 832721015, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %37
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 832721015, label %22
    i32 -823659596, label %26
    i32 1179639343, label %33
  ]

; <label>:21:                                     ; preds = %19
  br label %37

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -823659596, i32 1179639343
  store i32 %25, i32* %18
  br label %37

; <label>:26:                                     ; preds = %19
  %27 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %28 = bitcast %"struct.Solve::edge"* %27 to i8*
  %29 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %30 = bitcast %"struct.Solve::edge"* %29 to i8*
  %31 = load i64, i64* %8, align 8
  %32 = mul i64 8, %31
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %32, i32 4, i1 false)
  store i32 1179639343, i32* %18
  br label %37

; <label>:33:                                     ; preds = %19
  %34 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %34, i64 %35
  ret %"struct.Solve::edge"* %36

; <label>:37:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.Solve::edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"* %2) #3
  %5 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  ret %"struct.Solve::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  ret %"struct.Solve::edge"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt10_Iter_baseIPN5Solve4edgeELb0EE7_S_baseES2_(%"struct.Solve::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %2, align 8
  %3 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %2, align 8
  ret %"struct.Solve::edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Solve::edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  ret %"struct.Solve::edge"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"*, %"struct.Solve::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  %4 = alloca %"struct.Solve::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  store %"struct.Solve::edge"** %1, %"struct.Solve::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  %7 = load %"struct.Solve::edge"**, %"struct.Solve::edge"*** %4, align 8
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  store %"struct.Solve::edge"* %8, %"struct.Solve::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"*, %"struct.Solve::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %9, %"struct.std::_Vector_base.9"** %5
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  store %"struct.Solve::edge"* %10, %"struct.Solve::edge"** %4
  %11 = alloca i32
  store i32 1038763418, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %74
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1038763418, label %15
    i32 -527041519, label %19
    i32 -1424833353, label %46
    i32 832611440, label %66
    i32 -1555936791, label %67
    i32 -1132765768, label %68
  ]

; <label>:14:                                     ; preds = %12
  br label %74

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  %17 = icmp ne %"struct.Solve::edge"* %16, null
  %18 = select i1 %17, i32 -527041519, i32 -1555936791
  store i32 %18, i32* %11
  br label %74

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.274
  %21 = load i32, i32* @y.275
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -1424833353, i32 -1132765768
  store i32 %45, i32* %11
  br label %74

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %48 to %"class.std::allocator.10"*
  %50 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.10"* dereferenceable(1) %49, %"struct.Solve::edge"* %50, i64 %51)
  %52 = load i32, i32* @x.274
  %53 = load i32, i32* @y.275
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 832611440, i32 -1132765768
  store i32 %65, i32* %11
  br label %74

; <label>:66:                                     ; preds = %12
  store i32 -1555936791, i32* %11
  br label %74

; <label>:67:                                     ; preds = %12
  ret void

; <label>:68:                                     ; preds = %12
  %69 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %70 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %70 to %"class.std::allocator.10"*
  %72 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %73 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.10"* dereferenceable(1) %71, %"struct.Solve::edge"* %72, i64 %73)
  store i32 -1424833353, i32* %11
  br label %74

; <label>:74:                                     ; preds = %68, %66, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.10"* dereferenceable(1), %"struct.Solve::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.11"* %8, %"struct.Solve::edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Solve::edge"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %9 = bitcast %"struct.Solve::edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #11

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Solve4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = alloca i32
  store i32 1922856087, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %124
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 1922856087, label %9
    i32 292162842, label %14
    i32 359098802, label %30
    i32 -1217663112, label %60
    i32 -272443044, label %61
    i32 -1625101462, label %64
    i32 -233513778, label %91
    i32 1938306237, label %119
    i32 1656825277, label %120
    i32 115550249, label %123
  ]

; <label>:8:                                      ; preds = %6
  br label %124

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %12 = icmp ne %"class.std::vector.8"* %10, %11
  %13 = select i1 %12, i32 292162842, i32 -1625101462
  store i32 %13, i32* %5
  br label %124

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.280
  %16 = load i32, i32* @y.281
  %17 = add i32 %15, -855858338
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, -855858338
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 359098802, i32 1656825277
  store i32 %29, i32* %5
  br label %124

; <label>:30:                                     ; preds = %6
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %32 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %31) #3
  call void @_ZSt8_DestroyISt6vectorIN5Solve4edgeESaIS2_EEEvPT_(%"class.std::vector.8"* %32)
  %33 = load i32, i32* @x.280
  %34 = load i32, i32* @y.281
  %35 = add i32 %33, 746140477
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 746140477
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1217663112, i32 1656825277
  store i32 %59, i32* %5
  br label %124

; <label>:60:                                     ; preds = %6
  store i32 -272443044, i32* %5
  br label %124

; <label>:61:                                     ; preds = %6
  %62 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %63 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %62, i32 1
  store %"class.std::vector.8"* %63, %"class.std::vector.8"** %3, align 8
  store i32 1922856087, i32* %5
  br label %124

; <label>:64:                                     ; preds = %6
  %65 = load i32, i32* @x.280
  %66 = load i32, i32* @y.281
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 -233513778, i32 115550249
  store i32 %90, i32* %5
  br label %124

; <label>:91:                                     ; preds = %6
  %92 = load i32, i32* @x.280
  %93 = load i32, i32* @y.281
  %94 = sub i32 %92, -769509518
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -769509518
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 1938306237, i32 115550249
  store i32 %118, i32* %5
  br label %124

; <label>:119:                                    ; preds = %6
  ret void

; <label>:120:                                    ; preds = %6
  %121 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %122 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %121) #3
  call void @_ZSt8_DestroyISt6vectorIN5Solve4edgeESaIS2_EEEvPT_(%"class.std::vector.8"* %122)
  store i32 359098802, i32* %5
  br label %124

; <label>:123:                                    ; preds = %6
  store i32 -233513778, i32* %5
  br label %124

; <label>:124:                                    ; preds = %123, %120, %91, %64, %61, %60, %30, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN5Solve4edgeESaIS2_EEEvPT_(%"class.std::vector.8"*) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Solve4edgeESaIS1_EED2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.8"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  %10 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %12, align 8
  %14 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %15 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Solve4edgeES1_EvT_S3_RSaIT0_E(%"struct.Solve::edge"* %9, %"struct.Solve::edge"* %13, %"class.std::allocator.10"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.284
  %20 = load i32, i32* @y.285
  %21 = sub i32 %19, -1373286973
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -1373286973
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %109

; <label>:33:                                     ; preds = %18, %109
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %37) #3
  %38 = load i32, i32* @x.284
  %39 = load i32, i32* @y.285
  %40 = add i32 %38, 2044939200
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 2044939200
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %109

; <label>:64:                                     ; preds = %33
  br label %65

; <label>:65:                                     ; preds = %64
  %66 = load i32, i32* @x.284
  %67 = load i32, i32* @y.285
  %68 = add i32 %66, 963154337
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 963154337
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %114

; <label>:92:                                     ; preds = %65, %114
  %93 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %93) #10
  %94 = load i32, i32* @x.284
  %95 = load i32, i32* @y.285
  %96 = sub i32 %94, 2070093260
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 2070093260
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %114

; <label>:108:                                    ; preds = %92
  unreachable

; <label>:109:                                    ; preds = %33, %18
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %3, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %4, align 4
  %113 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %113) #3
  br label %33

; <label>:114:                                    ; preds = %92, %65
  %115 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %115) #10
  br label %92
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Solve4edgeES1_EvT_S3_RSaIT0_E(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  call void @_ZSt8_DestroyIPN5Solve4edgeEEvT_S3_(%"struct.Solve::edge"* %7, %"struct.Solve::edge"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Solve4edgeEEvT_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"struct.Solve::edge"*, align 8
  %4 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %3, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %4, align 8
  %5 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %3, align 8
  %6 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Solve4edgeEEEvT_S5_(%"struct.Solve::edge"* %5, %"struct.Solve::edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Solve4edgeEEEvT_S5_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Solve::edge"*, align 8
  %4 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %3, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"*, %"class.std::vector.8"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.292
  %6 = load i32, i32* @y.293
  %7 = add i32 %5, -182738070
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -182738070
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 37380600, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 37380600, label %19
    i32 -460433273, label %39
    i32 272669321, label %72
    i32 1605241800, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -460433273, i32 1605241800
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %41 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %40, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %41, align 8
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  store %"class.std::vector.8"* %45, %"class.std::vector.8"** %43, align 8
  %46 = load i32, i32* @x.292
  %47 = load i32, i32* @y.293
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 272669321, i32 1605241800
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %75 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %74, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %75, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %74, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %76, i32 0, i32 0
  %78 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %75, align 8
  %79 = load %"class.std::vector.8"*, %"class.std::vector.8"** %78, align 8
  store %"class.std::vector.8"* %79, %"class.std::vector.8"** %77, align 8
  store i32 -460433273, i32* %15
  br label %80

; <label>:80:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"*, %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %9, %"struct.std::_Vector_base.4"** %5
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %10, %"class.std::vector.8"** %4
  %11 = alloca i32
  store i32 -1649514836, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1649514836, label %15
    i32 -804609745, label %19
    i32 -1536889954, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %17 = icmp ne %"class.std::vector.8"* %16, null
  %18 = select i1 %17, i32 -804609745, i32 -1536889954
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1) %22, %"class.std::vector.8"* %23, i64 %24)
  store i32 -1536889954, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN5Solve4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1), %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.296
  %7 = load i32, i32* @y.297
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1720944068, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1720944068, label %19
    i32 836241753, label %39
    i32 2058985122, label %73
    i32 -1964626965, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 836241753, i32 -1964626965
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.5"*, align 8
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %40, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  %44 = bitcast %"class.std::allocator.5"* %43 to %"class.__gnu_cxx::new_allocator.6"*
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"* %44, %"class.std::vector.8"* %45, i64 %46)
  %47 = load i32, i32* @x.296
  %48 = load i32, i32* @y.297
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 2058985122, i32 -1964626965
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::allocator.5"*, align 8
  %76 = alloca %"class.std::vector.8"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %75, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %75, align 8
  %79 = bitcast %"class.std::allocator.5"* %78 to %"class.__gnu_cxx::new_allocator.6"*
  %80 = load %"class.std::vector.8"*, %"class.std::vector.8"** %76, align 8
  %81 = load i64, i64* %77, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"* %79, %"class.std::vector.8"* %80, i64 %81)
  store i32 836241753, i32* %15
  br label %82

; <label>:82:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"*, %"class.std::vector.8"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.298
  %7 = load i32, i32* @y.299
  %8 = add i32 %6, 538206534
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 538206534
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1532950094, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1532950094, label %20
    i32 -408851065, label %40
    i32 604471153, label %74
    i32 -55835125, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -408851065, i32 -55835125
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %41, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %41, align 8
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %42, align 8
  %46 = bitcast %"class.std::vector.8"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.298
  %48 = load i32, i32* @y.299
  %49 = sub i32 %47, 1210659772
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1210659772
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 604471153, i32 -55835125
  store i32 %73, i32* %16
  br label %82

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %77 = alloca %"class.std::vector.8"*, align 8
  %78 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %76, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %76, align 8
  %80 = load %"class.std::vector.8"*, %"class.std::vector.8"** %77, align 8
  %81 = bitcast %"class.std::vector.8"* %80 to i8*
  call void @_ZdlPv(i8* %81) #3
  store i32 -408851065, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_S7_ET0_T_SB_SA_RSaIT1_E(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %12, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %20, align 8
  %22 = call %"class.std::vector.3"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_ET0_T_SB_SA_(%"class.std::vector.3"* %19, %"class.std::vector.3"* %21, %"class.std::vector.3"* %17)
  ret %"class.std::vector.3"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt18make_move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEESt13move_iteratorIT_ES9_(%"class.std::vector.3"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEC2ES7_(%"class.std::move_iterator"* %2, %"class.std::vector.3"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  ret %"class.std::vector.3"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEES8_ET0_T_SB_SA_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %11, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.3"*, %"class.std::vector.3"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %21 = call %"class.std::vector.3"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIS3_IN5Solve4edgeESaIS5_EESaIS7_EEESA_EET0_T_SD_SC_(%"class.std::vector.3"* %18, %"class.std::vector.3"* %20, %"class.std::vector.3"* %16)
  ret %"class.std::vector.3"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIS3_IN5Solve4edgeESaIS5_EESaIS7_EEESA_EET0_T_SD_SC_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %11, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %12, %"class.std::vector.3"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %52, %3
  %14 = load i32, i32* @x.306
  %15 = load i32, i32* @y.307
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %153

; <label>:27:                                     ; preds = %13, %153
  %28 = load i32, i32* @x.306
  %29 = load i32, i32* @y.307
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %153

; <label>:41:                                     ; preds = %27
  %42 = invoke zeroext i1 @_ZStneIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEbRKSt13move_iteratorIT_ESC_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %43 unwind label %55

; <label>:43:                                     ; preds = %41
  br i1 %42, label %44, label %65

; <label>:44:                                     ; preds = %43
  %45 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %46 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEPT_RS7_(%"class.std::vector.3"* dereferenceable(24) %45) #3
  %47 = invoke dereferenceable(24) %"class.std::vector.3"* @_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEdeEv(%"class.std::move_iterator"* %4)
          to label %48 unwind label %55

; <label>:48:                                     ; preds = %44
  invoke void @_ZSt10_ConstructISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEJS6_EEvPT_DpOT0_(%"class.std::vector.3"* %46, %"class.std::vector.3"* dereferenceable(24) %47)
          to label %49 unwind label %55

; <label>:49:                                     ; preds = %48
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEppEv(%"class.std::move_iterator"* %4)
          to label %52 unwind label %55

; <label>:52:                                     ; preds = %50
  %53 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %54 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %53, i32 1
  store %"class.std::vector.3"* %54, %"class.std::vector.3"** %7, align 8
  br label %13

; <label>:55:                                     ; preds = %50, %48, %44, %41
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %8, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %9, align 4
  br label %59

; <label>:59:                                     ; preds = %55
  %60 = load i8*, i8** %8, align 8
  %61 = call i8* @__cxa_begin_catch(i8* %60) #3
  %62 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %63 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvT_S8_(%"class.std::vector.3"* %62, %"class.std::vector.3"* %63)
          to label %64 unwind label %67

; <label>:64:                                     ; preds = %59
  invoke void @__cxa_rethrow() #13
          to label %152 unwind label %67

; <label>:65:                                     ; preds = %43
  %66 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  ret %"class.std::vector.3"* %66

; <label>:67:                                     ; preds = %64, %59
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %8, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %71 unwind label %149

; <label>:71:                                     ; preds = %67
  %72 = load i32, i32* @x.306
  %73 = load i32, i32* @y.307
  %74 = sub i32 %72, 2122333621
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 2122333621
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %154

; <label>:86:                                     ; preds = %71, %154
  %87 = load i32, i32* @x.306
  %88 = load i32, i32* @y.307
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %154

; <label>:100:                                    ; preds = %86
  br label %144
                                                  ; No predecessors!
  %102 = load i32, i32* @x.306
  %103 = load i32, i32* @y.307
  %104 = add i32 %102, -1228155941
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -1228155941
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  br i1 %114, label %116, label %155

; <label>:116:                                    ; preds = %101, %155
  call void @llvm.trap()
  %117 = load i32, i32* @x.306
  %118 = load i32, i32* @y.307
  %119 = sub i32 %117, 1025562186
  %120 = sub i32 %119, 1
  %121 = add i32 %120, 1025562186
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %155

; <label>:143:                                    ; preds = %116
  unreachable

; <label>:144:                                    ; preds = %100
  %145 = load i8*, i8** %8, align 8
  %146 = load i32, i32* %9, align 4
  %147 = insertvalue { i8*, i32 } undef, i8* %145, 0
  %148 = insertvalue { i8*, i32 } %147, i32 %146, 1
  resume { i8*, i32 } %148

; <label>:149:                                    ; preds = %67
  %150 = landingpad { i8*, i32 }
          catch i8* null
  %151 = extractvalue { i8*, i32 } %150, 0
  call void @__clang_call_terminate(i8* %151) #10
  unreachable

; <label>:152:                                    ; preds = %64
  unreachable

; <label>:153:                                    ; preds = %27, %13
  br label %27

; <label>:154:                                    ; preds = %86, %71
  br label %86

; <label>:155:                                    ; preds = %116, %101
  call void @llvm.trap()
  br label %116
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEbRKSt13move_iteratorIT_ESC_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEbRKSt13move_iteratorIT_ESC_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEJS6_EEvPT_DpOT0_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.3"*
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.3"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2EOS5_(%"class.std::vector.3"* %7, %"class.std::vector.3"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEPT_RS7_(%"class.std::vector.3"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.312
  %6 = load i32, i32* @y.313
  %7 = add i32 %5, -382407469
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -382407469
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1439843122, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1439843122, label %19
    i32 1051897742, label %39
    i32 668928148, label %71
    i32 -1773139926, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1051897742, i32 -1773139926
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %42 = bitcast %"class.std::vector.3"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::vector.3"*
  store %"class.std::vector.3"* %43, %"class.std::vector.3"** %2
  %44 = load i32, i32* @x.312
  %45 = load i32, i32* @y.313
  %46 = sub i32 %44, 193512035
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 193512035
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 668928148, i32 -1773139926
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %2
  ret %"class.std::vector.3"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %74, align 8
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %74, align 8
  %76 = bitcast %"class.std::vector.3"* %75 to i8*
  %77 = bitcast i8* %76 to %"class.std::vector.3"*
  store i32 1051897742, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %5, i32 1
  store %"class.std::vector.3"* %6, %"class.std::vector.3"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvT_S8_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIS2_IN5Solve4edgeESaIS4_EESaIS6_EEEEvT_SA_(%"class.std::vector.3"* %5, %"class.std::vector.3"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEbRKSt13move_iteratorIT_ESC_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.320
  %7 = load i32, i32* @y.321
  %8 = add i32 %6, -1069439210
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1069439210
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1084952202, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1084952202, label %20
    i32 1406562846, label %28
    i32 -1367975315, label %50
    i32 -1861132688, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1406562846, i32 -1861132688
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator"*, align 8
  %30 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %29, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %30, align 8
  %31 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %29, align 8
  %32 = call %"class.std::vector.3"* @_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEE4baseEv(%"class.std::move_iterator"* %31)
  %33 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %30, align 8
  %34 = call %"class.std::vector.3"* @_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEE4baseEv(%"class.std::move_iterator"* %33)
  %35 = icmp eq %"class.std::vector.3"* %32, %34
  store i1 %35, i1* %3
  %36 = load i32, i32* @x.320
  %37 = load i32, i32* @y.321
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1367975315, i32 -1861132688
  store i32 %49, i32* %16
  br label %60

; <label>:50:                                     ; preds = %17
  %51 = load volatile i1, i1* %3
  ret i1 %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::move_iterator"*, align 8
  %54 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %53, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %54, align 8
  %55 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %53, align 8
  %56 = call %"class.std::vector.3"* @_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEE4baseEv(%"class.std::move_iterator"* %55)
  %57 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %54, align 8
  %58 = call %"class.std::vector.3"* @_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEE4baseEv(%"class.std::move_iterator"* %57)
  %59 = icmp eq %"class.std::vector.3"* %56, %58
  store i32 1406562846, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNKSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.322
  %6 = load i32, i32* @y.323
  %7 = add i32 %5, -2068133308
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2068133308
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 677448145, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 677448145, label %19
    i32 1143755806, label %39
    i32 75249753, label %71
    i32 -1309450261, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1143755806, i32 -1309450261
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %41, i32 0, i32 0
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %42, align 8
  store %"class.std::vector.3"* %43, %"class.std::vector.3"** %2
  %44 = load i32, i32* @x.322
  %45 = load i32, i32* @y.323
  %46 = sub i32 %44, -809577299
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -809577299
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 75249753, i32 -1309450261
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %2
  ret %"class.std::vector.3"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %74, align 8
  %75 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %74, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %75, i32 0, i32 0
  %77 = load %"class.std::vector.3"*, %"class.std::vector.3"** %76, align 8
  store i32 1143755806, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.3"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  ret %"class.std::vector.3"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2EOS5_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.326
  %6 = load i32, i32* @y.327
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -71133014, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %57
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -71133014, label %18
    i32 -718245088, label %26
    i32 333838265, label %48
    i32 -6657619, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %57

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -718245088, i32 -6657619
  store i32 %25, i32* %14
  br label %57

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.3"*, align 8
  %28 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %27, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %28, align 8
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %27, align 8
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %32 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt4moveIRSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.3"* dereferenceable(24) %31) #3
  %33 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EOS6_(%"struct.std::_Vector_base.4"* %30, %"struct.std::_Vector_base.4"* dereferenceable(24) %33) #3
  %34 = load i32, i32* @x.326
  %35 = load i32, i32* @y.327
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 333838265, i32 -6657619
  store i32 %47, i32* %14
  br label %57

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.std::vector.3"*, align 8
  %51 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %50, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %51, align 8
  %52 = load %"class.std::vector.3"*, %"class.std::vector.3"** %50, align 8
  %53 = bitcast %"class.std::vector.3"* %52 to %"struct.std::_Vector_base.4"*
  %54 = load %"class.std::vector.3"*, %"class.std::vector.3"** %51, align 8
  %55 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt4moveIRSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.3"* dereferenceable(24) %54) #3
  %56 = bitcast %"class.std::vector.3"* %55 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EOS6_(%"struct.std::_Vector_base.4"* %53, %"struct.std::_Vector_base.4"* dereferenceable(24) %56) #3
  store i32 -718245088, i32* %14
  br label %57

; <label>:57:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZSt4moveIRSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.3"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  ret %"class.std::vector.3"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2EOS6_(%"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.4"*, align 8
  %4 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %3, align 8
  store %"struct.std::_Vector_base.4"* %1, %"struct.std::_Vector_base.4"** %4, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaISt6vectorIN5Solve4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.5"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2EOS5_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %6, %"class.std::allocator.5"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %10, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaISt6vectorIN5Solve4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.332
  %6 = load i32, i32* @y.333
  %7 = add i32 %5, -1177431118
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1177431118
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2083581531, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2083581531, label %19
    i32 1954077464, label %39
    i32 -1163297819, label %68
    i32 -1302247713, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1954077464, i32 -1302247713
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %40, align 8
  %41 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  store %"class.std::allocator.5"* %41, %"class.std::allocator.5"** %2
  %42 = load i32, i32* @x.332
  %43 = load i32, i32* @y.333
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1163297819, i32 -1302247713
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %71, align 8
  %72 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %71, align 8
  store i32 1954077464, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2EOS5_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.334
  %6 = load i32, i32* @y.335
  %7 = sub i32 %5, -1494376959
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1494376959
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1869359553, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1869359553, label %19
    i32 751910702, label %27
    i32 1367275676, label %63
    i32 1539835756, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 751910702, i32 1539835756
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30 to %"class.std::allocator.5"*
  %32 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %29, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaISt6vectorIN5Solve4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.5"* dereferenceable(1) %32) #3
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %31, %"class.std::allocator.5"* dereferenceable(1) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %35, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %36, align 8
  %37 = load i32, i32* @x.334
  %38 = load i32, i32* @y.335
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1367275676, i32 1539835756
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %65, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %66, align 8
  %67 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %67 to %"class.std::allocator.5"*
  %69 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %66, align 8
  %70 = call dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaISt6vectorIN5Solve4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.5"* dereferenceable(1) %69) #3
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %68, %"class.std::allocator.5"* dereferenceable(1) %70) #3
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %67, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %67, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %67, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %73, align 8
  store i32 751910702, i32* %15
  br label %74

; <label>:74:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.336
  %6 = load i32, i32* @y.337
  %7 = add i32 %5, 1620022189
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1620022189
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1844059395, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1844059395, label %19
    i32 178492567, label %27
    i32 -2108371042, label %67
    i32 1911429966, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 178492567, i32 1911429966
  store i32 %26, i32* %15
  br label %81

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  %29 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %28, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %32, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.8"** dereferenceable(8) %31, %"class.std::vector.8"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30, i32 0, i32 1
  %35 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %29, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %35, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.8"** dereferenceable(8) %34, %"class.std::vector.8"** dereferenceable(8) %36) #3
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %30, i32 0, i32 2
  %38 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %29, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %38, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.8"** dereferenceable(8) %37, %"class.std::vector.8"** dereferenceable(8) %39) #3
  %40 = load i32, i32* @x.336
  %41 = load i32, i32* @y.337
  %42 = add i32 %40, 1199524171
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1199524171
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -2108371042, i32 1911429966
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  %70 = alloca %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %69, align 8
  store %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %69, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %70, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %73, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.8"** dereferenceable(8) %72, %"class.std::vector.8"** dereferenceable(8) %74) #3
  %75 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %71, i32 0, i32 1
  %76 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %70, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %76, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.8"** dereferenceable(8) %75, %"class.std::vector.8"** dereferenceable(8) %77) #3
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %71, i32 0, i32 2
  %79 = load %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"** %70, align 8
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %79, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.8"** dereferenceable(8) %78, %"class.std::vector.8"** dereferenceable(8) %80) #3
  store i32 178492567, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorIN5Solve4edgeESaIS2_EEEvRT_S7_(%"class.std::vector.8"** dereferenceable(8), %"class.std::vector.8"** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.338
  %6 = load i32, i32* @y.339
  %7 = add i32 %5, -188917203
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -188917203
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2142537882, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2142537882, label %19
    i32 -640712844, label %27
    i32 -1076871277, label %56
    i32 -196165415, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -640712844, i32 -196165415
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"**, align 8
  %29 = alloca %"class.std::vector.8"**, align 8
  %30 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %0, %"class.std::vector.8"*** %28, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %29, align 8
  %31 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %28, align 8
  %32 = call dereferenceable(8) %"class.std::vector.8"** @_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.8"** dereferenceable(8) %31) #3
  %33 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  store %"class.std::vector.8"* %33, %"class.std::vector.8"** %30, align 8
  %34 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %29, align 8
  %35 = call dereferenceable(8) %"class.std::vector.8"** @_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.8"** dereferenceable(8) %34) #3
  %36 = load %"class.std::vector.8"*, %"class.std::vector.8"** %35, align 8
  %37 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %28, align 8
  store %"class.std::vector.8"* %36, %"class.std::vector.8"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::vector.8"** @_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.8"** dereferenceable(8) %30) #3
  %39 = load %"class.std::vector.8"*, %"class.std::vector.8"** %38, align 8
  %40 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %29, align 8
  store %"class.std::vector.8"* %39, %"class.std::vector.8"** %40, align 8
  %41 = load i32, i32* @x.338
  %42 = load i32, i32* @y.339
  %43 = add i32 %41, 1407821162
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1407821162
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1076871277, i32 -196165415
  store i32 %55, i32* %15
  br label %71

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"class.std::vector.8"**, align 8
  %59 = alloca %"class.std::vector.8"**, align 8
  %60 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %0, %"class.std::vector.8"*** %58, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %59, align 8
  %61 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %58, align 8
  %62 = call dereferenceable(8) %"class.std::vector.8"** @_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.8"** dereferenceable(8) %61) #3
  %63 = load %"class.std::vector.8"*, %"class.std::vector.8"** %62, align 8
  store %"class.std::vector.8"* %63, %"class.std::vector.8"** %60, align 8
  %64 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %59, align 8
  %65 = call dereferenceable(8) %"class.std::vector.8"** @_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.8"** dereferenceable(8) %64) #3
  %66 = load %"class.std::vector.8"*, %"class.std::vector.8"** %65, align 8
  %67 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %58, align 8
  store %"class.std::vector.8"* %66, %"class.std::vector.8"** %67, align 8
  %68 = call dereferenceable(8) %"class.std::vector.8"** @_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.8"** dereferenceable(8) %60) #3
  %69 = load %"class.std::vector.8"*, %"class.std::vector.8"** %68, align 8
  %70 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %59, align 8
  store %"class.std::vector.8"* %69, %"class.std::vector.8"** %70, align 8
  store i32 -640712844, i32* %15
  br label %71

; <label>:71:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.8"** @_ZSt4moveIRPSt6vectorIN5Solve4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.8"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"class.std::vector.8"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.340
  %6 = load i32, i32* @y.341
  %7 = add i32 %5, 1970973428
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1970973428
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1741804855, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1741804855, label %19
    i32 471743158, label %27
    i32 -1584733418, label %56
    i32 830712231, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 471743158, i32 830712231
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"**, align 8
  store %"class.std::vector.8"** %0, %"class.std::vector.8"*** %28, align 8
  %29 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %28, align 8
  store %"class.std::vector.8"** %29, %"class.std::vector.8"*** %2
  %30 = load i32, i32* @x.340
  %31 = load i32, i32* @y.341
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1584733418, i32 830712231
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %2
  ret %"class.std::vector.8"** %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::vector.8"**, align 8
  store %"class.std::vector.8"** %0, %"class.std::vector.8"*** %59, align 8
  %60 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %59, align 8
  store i32 471743158, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIS2_IN5Solve4edgeESaIS4_EESaIS6_EEEEvT_SA_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"**
  %4 = alloca %"class.std::vector.3"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.342
  %8 = load i32, i32* @y.343
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 2073190668, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %126
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2073190668, label %20
    i32 27066796, label %40
    i32 -1819240788, label %71
    i32 -195043234, label %72
    i32 1272072483, label %79
    i32 771875048, label %94
    i32 1364647354, label %112
    i32 -164141110, label %113
    i32 1476185004, label %118
    i32 -555145320, label %119
    i32 942979053, label %122
  ]

; <label>:19:                                     ; preds = %17
  br label %126

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 27066796, i32 -555145320
  store i32 %39, i32* %16
  br label %126

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %41, %"class.std::vector.3"*** %4
  %42 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %42, %"class.std::vector.3"*** %3
  %43 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %43, align 8
  %44 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %3
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %44, align 8
  %45 = load i32, i32* @x.342
  %46 = load i32, i32* @y.343
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1819240788, i32 -555145320
  store i32 %70, i32* %16
  br label %126

; <label>:71:                                     ; preds = %17
  store i32 -195043234, i32* %16
  br label %126

; <label>:72:                                     ; preds = %17
  %73 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  %74 = load %"class.std::vector.3"*, %"class.std::vector.3"** %73, align 8
  %75 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %3
  %76 = load %"class.std::vector.3"*, %"class.std::vector.3"** %75, align 8
  %77 = icmp ne %"class.std::vector.3"* %74, %76
  %78 = select i1 %77, i32 1272072483, i32 1476185004
  store i32 %78, i32* %16
  br label %126

; <label>:79:                                     ; preds = %17
  %80 = load i32, i32* @x.342
  %81 = load i32, i32* @y.343
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 771875048, i32 942979053
  store i32 %93, i32* %16
  br label %126

; <label>:94:                                     ; preds = %17
  %95 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  %96 = load %"class.std::vector.3"*, %"class.std::vector.3"** %95, align 8
  %97 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEPT_RS7_(%"class.std::vector.3"* dereferenceable(24) %96) #3
  call void @_ZSt8_DestroyISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvPT_(%"class.std::vector.3"* %97)
  %98 = load i32, i32* @x.342
  %99 = load i32, i32* @y.343
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 1364647354, i32 942979053
  store i32 %111, i32* %16
  br label %126

; <label>:112:                                    ; preds = %17
  store i32 -164141110, i32* %16
  br label %126

; <label>:113:                                    ; preds = %17
  %114 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  %115 = load %"class.std::vector.3"*, %"class.std::vector.3"** %114, align 8
  %116 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %115, i32 1
  %117 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  store %"class.std::vector.3"* %116, %"class.std::vector.3"** %117, align 8
  store i32 -195043234, i32* %16
  br label %126

; <label>:118:                                    ; preds = %17
  ret void

; <label>:119:                                    ; preds = %17
  %120 = alloca %"class.std::vector.3"*, align 8
  %121 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %120, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %121, align 8
  store i32 27066796, i32* %16
  br label %126

; <label>:122:                                    ; preds = %17
  %123 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  %124 = load %"class.std::vector.3"*, %"class.std::vector.3"** %123, align 8
  %125 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEPT_RS7_(%"class.std::vector.3"* dereferenceable(24) %124) #3
  call void @_ZSt8_DestroyISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvPT_(%"class.std::vector.3"* %125)
  store i32 771875048, i32* %16
  br label %126

; <label>:126:                                    ; preds = %122, %119, %113, %112, %94, %79, %72, %71, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvPT_(%"class.std::vector.3"*) #5 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEC2ES7_(%"class.std::move_iterator"*, %"class.std::vector.3"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  store %"class.std::vector.3"* %7, %"class.std::vector.3"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.348
  %8 = load i32, i32* @y.349
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1049879016, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1049879016, label %20
    i32 1842721638, label %40
    i32 -216212587, label %77
    i32 1710299813, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1842721638, i32 1710299813
  store i32 %39, i32* %16
  br label %90

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca %"class.std::vector.3"*, align 8
  %43 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %42, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %43, align 8
  %44 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %45 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %44)
  %46 = load %"class.std::vector.3"*, %"class.std::vector.3"** %42, align 8
  %47 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %46)
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %43, align 8
  %49 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %48)
  %50 = call %"class.std::vector.3"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_(%"class.std::vector.3"* %45, %"class.std::vector.3"* %47, %"class.std::vector.3"* %49)
  store %"class.std::vector.3"* %50, %"class.std::vector.3"** %4
  %51 = load i32, i32* @x.348
  %52 = load i32, i32* @y.349
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -216212587, i32 1710299813
  store i32 %76, i32* %16
  br label %90

; <label>:77:                                     ; preds = %17
  %78 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  ret %"class.std::vector.3"* %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.std::vector.3"*, align 8
  %81 = alloca %"class.std::vector.3"*, align 8
  %82 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %80, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %81, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %82, align 8
  %83 = load %"class.std::vector.3"*, %"class.std::vector.3"** %80, align 8
  %84 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %83)
  %85 = load %"class.std::vector.3"*, %"class.std::vector.3"** %81, align 8
  %86 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %85)
  %87 = load %"class.std::vector.3"*, %"class.std::vector.3"** %82, align 8
  %88 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"* %87)
  %89 = call %"class.std::vector.3"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_(%"class.std::vector.3"* %84, %"class.std::vector.3"* %86, %"class.std::vector.3"* %88)
  store i32 1842721638, i32* %16
  br label %90

; <label>:90:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt12__miter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Miter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"*) #5 comdat {
  %2 = alloca %"class.std::vector.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.350
  %6 = load i32, i32* @y.351
  %7 = sub i32 %5, -1103057624
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1103057624
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -644786464, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -644786464, label %19
    i32 1603790418, label %27
    i32 -279668688, label %57
    i32 1716367216, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1603790418, i32 1716367216
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %28, align 8
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %30 = call %"class.std::vector.3"* @_ZNSt10_Iter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EELb0EE7_S_baseES7_(%"class.std::vector.3"* %29)
  store %"class.std::vector.3"* %30, %"class.std::vector.3"** %2
  %31 = load i32, i32* @x.350
  %32 = load i32, i32* @y.351
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -279668688, i32 1716367216
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %2
  ret %"class.std::vector.3"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %60, align 8
  %61 = load %"class.std::vector.3"*, %"class.std::vector.3"** %60, align 8
  %62 = call %"class.std::vector.3"* @_ZNSt10_Iter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EELb0EE7_S_baseES7_(%"class.std::vector.3"* %61)
  store i32 1603790418, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES7_ET1_T0_S9_S8_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.352
  %8 = load i32, i32* @y.353
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1249315750, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1249315750, label %20
    i32 -916940954, label %28
    i32 673612928, label %64
    i32 365208507, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -916940954, i32 365208507
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.3"*, align 8
  %30 = alloca %"class.std::vector.3"*, align 8
  %31 = alloca %"class.std::vector.3"*, align 8
  %32 = alloca i8, align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %29, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %30, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %31, align 8
  store i8 0, i8* %32, align 1
  %33 = load %"class.std::vector.3"*, %"class.std::vector.3"** %29, align 8
  %34 = load %"class.std::vector.3"*, %"class.std::vector.3"** %30, align 8
  %35 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  %36 = call %"class.std::vector.3"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIS3_IN5Solve4edgeESaIS5_EESaIS7_EESA_EET0_T_SC_SB_(%"class.std::vector.3"* %33, %"class.std::vector.3"* %34, %"class.std::vector.3"* %35)
  store %"class.std::vector.3"* %36, %"class.std::vector.3"** %4
  %37 = load i32, i32* @x.352
  %38 = load i32, i32* @y.353
  %39 = add i32 %37, -943405037
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -943405037
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 673612928, i32 365208507
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  ret %"class.std::vector.3"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::vector.3"*, align 8
  %68 = alloca %"class.std::vector.3"*, align 8
  %69 = alloca %"class.std::vector.3"*, align 8
  %70 = alloca i8, align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %67, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %68, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %69, align 8
  store i8 0, i8* %70, align 1
  %71 = load %"class.std::vector.3"*, %"class.std::vector.3"** %67, align 8
  %72 = load %"class.std::vector.3"*, %"class.std::vector.3"** %68, align 8
  %73 = load %"class.std::vector.3"*, %"class.std::vector.3"** %69, align 8
  %74 = call %"class.std::vector.3"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIS3_IN5Solve4edgeESaIS5_EESaIS7_EESA_EET0_T_SC_SB_(%"class.std::vector.3"* %71, %"class.std::vector.3"* %72, %"class.std::vector.3"* %73)
  store i32 -916940954, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEENSt11_Niter_baseIT_E13iterator_typeES9_(%"class.std::vector.3"*) #0 comdat {
  %2 = alloca %"class.std::vector.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.354
  %6 = load i32, i32* @y.355
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1336937833, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1336937833, label %18
    i32 877653016, label %38
    i32 1191936505, label %57
    i32 1469658675, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 877653016, i32 1469658675
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %39, align 8
  %40 = load %"class.std::vector.3"*, %"class.std::vector.3"** %39, align 8
  %41 = call %"class.std::vector.3"* @_ZNSt10_Iter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EELb0EE7_S_baseES7_(%"class.std::vector.3"* %40)
  store %"class.std::vector.3"* %41, %"class.std::vector.3"** %2
  %42 = load i32, i32* @x.354
  %43 = load i32, i32* @y.355
  %44 = sub i32 %42, 1416052468
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1416052468
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1191936505, i32 1469658675
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %2
  ret %"class.std::vector.3"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %60, align 8
  %61 = load %"class.std::vector.3"*, %"class.std::vector.3"** %60, align 8
  %62 = call %"class.std::vector.3"* @_ZNSt10_Iter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EELb0EE7_S_baseES7_(%"class.std::vector.3"* %61)
  store i32 877653016, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIS3_IN5Solve4edgeESaIS5_EESaIS7_EESA_EET0_T_SC_SB_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"*) #5 comdat align 2 {
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca i64*
  %6 = alloca %"class.std::vector.3"**
  %7 = alloca %"class.std::vector.3"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.356
  %11 = load i32, i32* @y.357
  %12 = add i32 %10, 1613064375
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1613064375
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 16596985, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %287
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 16596985, label %24
    i32 -1515754425, label %32
    i32 1682758196, label %64
    i32 -128977043, label %65
    i32 -284478378, label %70
    i32 2123584526, label %81
    i32 438056515, label %108
    i32 817053331, label %143
    i32 308358330, label %144
    i32 345923697, label %159
    i32 1808749658, label %189
    i32 -1004619934, label %191
    i32 -1151830404, label %247
    i32 -1134483336, label %284
  ]

; <label>:23:                                     ; preds = %21
  br label %287

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1515754425, i32 -1004619934
  store i32 %31, i32* %20
  br label %287

; <label>:32:                                     ; preds = %21
  %33 = alloca %"class.std::vector.3"*, align 8
  %34 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %34, %"class.std::vector.3"*** %7
  %35 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %35, %"class.std::vector.3"*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %33, align 8
  %37 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %37, align 8
  %38 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %38, align 8
  %39 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  %40 = load %"class.std::vector.3"*, %"class.std::vector.3"** %39, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  %42 = ptrtoint %"class.std::vector.3"* %40 to i64
  %43 = ptrtoint %"class.std::vector.3"* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 24
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load i32, i32* @x.356
  %50 = load i32, i32* @y.357
  %51 = add i32 %49, 493065481
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 493065481
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1682758196, i32 -1004619934
  store i32 %63, i32* %20
  br label %287

; <label>:64:                                     ; preds = %21
  store i32 -128977043, i32* %20
  br label %287

; <label>:65:                                     ; preds = %21
  %66 = load volatile i64*, i64** %5
  %67 = load i64, i64* %66, align 8
  %68 = icmp sgt i64 %67, 0
  %69 = select i1 %68, i32 -284478378, i32 308358330
  store i32 %69, i32* %20
  br label %287

; <label>:70:                                     ; preds = %21
  %71 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  %72 = load %"class.std::vector.3"*, %"class.std::vector.3"** %71, align 8
  %73 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %72, i32 -1
  %74 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %7
  store %"class.std::vector.3"* %73, %"class.std::vector.3"** %74, align 8
  %75 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt4moveIRSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.3"* dereferenceable(24) %73) #3
  %76 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  %77 = load %"class.std::vector.3"*, %"class.std::vector.3"** %76, align 8
  %78 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %77, i32 -1
  %79 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  store %"class.std::vector.3"* %78, %"class.std::vector.3"** %79, align 8
  %80 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEaSEOS5_(%"class.std::vector.3"* %78, %"class.std::vector.3"* dereferenceable(24) %75) #3
  store i32 2123584526, i32* %20
  br label %287

; <label>:81:                                     ; preds = %21
  %82 = load i32, i32* @x.356
  %83 = load i32, i32* @y.357
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 438056515, i32 -1151830404
  store i32 %107, i32* %20
  br label %287

; <label>:108:                                    ; preds = %21
  %109 = load volatile i64*, i64** %5
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 0, %110
  %112 = sub i64 0, -1
  %113 = add i64 %111, %112
  %114 = sub i64 0, %113
  %115 = add nsw i64 %110, -1
  %116 = load volatile i64*, i64** %5
  store i64 %114, i64* %116, align 8
  %117 = load i32, i32* @x.356
  %118 = load i32, i32* @y.357
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 817053331, i32 -1151830404
  store i32 %142, i32* %20
  br label %287

; <label>:143:                                    ; preds = %21
  store i32 -128977043, i32* %20
  br label %287

; <label>:144:                                    ; preds = %21
  %145 = load i32, i32* @x.356
  %146 = load i32, i32* @y.357
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 345923697, i32 -1134483336
  store i32 %158, i32* %20
  br label %287

; <label>:159:                                    ; preds = %21
  %160 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  %161 = load %"class.std::vector.3"*, %"class.std::vector.3"** %160, align 8
  store %"class.std::vector.3"* %161, %"class.std::vector.3"** %4
  %162 = load i32, i32* @x.356
  %163 = load i32, i32* @y.357
  %164 = sub i32 %162, 584364166
  %165 = sub i32 %164, 1
  %166 = add i32 %165, 584364166
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 false, true
  %175 = and i1 %172, false
  %176 = and i1 %170, %174
  %177 = and i1 %173, false
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 false, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  %188 = select i1 %186, i32 1808749658, i32 -1134483336
  store i32 %188, i32* %20
  br label %287

; <label>:189:                                    ; preds = %21
  %190 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  ret %"class.std::vector.3"* %190

; <label>:191:                                    ; preds = %21
  %192 = alloca %"class.std::vector.3"*, align 8
  %193 = alloca %"class.std::vector.3"*, align 8
  %194 = alloca %"class.std::vector.3"*, align 8
  %195 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %192, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %193, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %194, align 8
  %196 = load %"class.std::vector.3"*, %"class.std::vector.3"** %193, align 8
  %197 = load %"class.std::vector.3"*, %"class.std::vector.3"** %192, align 8
  %198 = ptrtoint %"class.std::vector.3"* %196 to i64
  %199 = ptrtoint %"class.std::vector.3"* %197 to i64
  %200 = shl i64 %198, %199
  %201 = sub i64 0, %198
  %202 = add i64 0, %201
  %203 = sub i64 0, %198
  %204 = sub i64 0, %202
  %205 = sub i64 0, %199
  %206 = add i64 %204, %205
  %207 = sub i64 0, %206
  %208 = add i64 %202, %199
  %209 = shl i64 %198, %199
  %210 = add i64 0, 2716122037313522616
  %211 = sub i64 %210, %198
  %212 = sub i64 %211, 2716122037313522616
  %213 = sub i64 0, %198
  %214 = sub i64 0, %199
  %215 = sub i64 %212, %214
  %216 = add i64 %212, %199
  %217 = add i64 %198, 5979841290384701175
  %218 = sub i64 %217, %199
  %219 = sub i64 %218, 5979841290384701175
  %220 = sub i64 %198, %199
  %221 = shl i64 %219, 24
  %222 = add i64 0, 2254477347657380956
  %223 = sub i64 %222, %219
  %224 = sub i64 %223, 2254477347657380956
  %225 = sub i64 0, %219
  %226 = sub i64 %224, 559450433274082829
  %227 = add i64 %226, 24
  %228 = add i64 %227, 559450433274082829
  %229 = add i64 %224, 24
  %230 = sub i64 %219, 7546367308157026492
  %231 = sub i64 %230, 24
  %232 = add i64 %231, 7546367308157026492
  %233 = sub i64 %219, 24
  %234 = mul i64 %232, 24
  %235 = sub i64 0, 2655121095949086974
  %236 = sub i64 %235, %219
  %237 = add i64 %236, 2655121095949086974
  %238 = sub i64 0, %219
  %239 = sub i64 0, 24
  %240 = sub i64 %237, %239
  %241 = add i64 %237, 24
  %242 = sub i64 0, 24
  %243 = add i64 %219, %242
  %244 = sub i64 %219, 24
  %245 = mul i64 %243, 24
  %246 = sdiv exact i64 %219, 24
  store i64 %246, i64* %195, align 8
  store i32 -1515754425, i32* %20
  br label %287

; <label>:247:                                    ; preds = %21
  %248 = load volatile i64*, i64** %5
  %249 = load i64, i64* %248, align 8
  %250 = add i64 0, 6077528586406265054
  %251 = sub i64 %250, %249
  %252 = sub i64 %251, 6077528586406265054
  %253 = sub i64 0, %249
  %254 = sub i64 0, -1
  %255 = sub i64 %252, %254
  %256 = add i64 %252, -1
  %257 = sub i64 0, %249
  %258 = add i64 0, %257
  %259 = sub i64 0, %249
  %260 = sub i64 0, %258
  %261 = sub i64 0, -1
  %262 = add i64 %260, %261
  %263 = sub i64 0, %262
  %264 = add i64 %258, -1
  %265 = sub i64 0, %249
  %266 = add i64 0, %265
  %267 = sub i64 0, %249
  %268 = add i64 %266, -8913392832305754675
  %269 = add i64 %268, -1
  %270 = sub i64 %269, -8913392832305754675
  %271 = add i64 %266, -1
  %272 = shl i64 %249, -1
  %273 = add i64 %249, -1958413128665610381
  %274 = sub i64 %273, -1
  %275 = sub i64 %274, -1958413128665610381
  %276 = sub i64 %249, -1
  %277 = mul i64 %275, -1
  %278 = shl i64 %249, -1
  %279 = sub i64 %249, -7806657048621321279
  %280 = add i64 %279, -1
  %281 = add i64 %280, -7806657048621321279
  %282 = add nsw i64 %249, -1
  %283 = load volatile i64*, i64** %5
  store i64 %281, i64* %283, align 8
  store i32 438056515, i32* %20
  br label %287

; <label>:284:                                    ; preds = %21
  %285 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  %286 = load %"class.std::vector.3"*, %"class.std::vector.3"** %285, align 8
  store i32 345923697, i32* %20
  br label %287

; <label>:287:                                    ; preds = %284, %247, %191, %159, %144, %143, %108, %81, %70, %65, %64, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEaSEOS5_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  store i8 1, i8* %5, align 1
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt4moveIRSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.3"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE(%"class.std::vector.3"* %7, %"class.std::vector.3"* dereferenceable(24) %9) #3
  ret %"class.std::vector.3"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.360
  %4 = load i32, i32* @y.361
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %103

; <label>:16:                                     ; preds = %2, %103
  %17 = alloca %"struct.std::integral_constant", align 1
  %18 = alloca %"class.std::vector.3"*, align 8
  %19 = alloca %"class.std::vector.3"*, align 8
  %20 = alloca %"class.std::vector.3", align 8
  %21 = alloca %"class.std::allocator.5", align 1
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %18, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %19, align 8
  %24 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %25 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  call void @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13get_allocatorEv(%"class.std::allocator.5"* sret %21, %"struct.std::_Vector_base.4"* %25) #3
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS4_(%"class.std::vector.3"* %20, %"class.std::allocator.5"* dereferenceable(1) %21) #3
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %21) #3
  %26 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %26, i32 0, i32 0
  %28 = bitcast %"class.std::vector.3"* %20 to %"struct.std::_Vector_base.4"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %27, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* dereferenceable(24) %29) #3
  %30 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %33 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %33, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %31, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* dereferenceable(24) %34) #3
  %35 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %36 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %35) #3
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %38 = bitcast %"class.std::vector.3"* %37 to %"struct.std::_Vector_base.4"*
  %39 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %38) #3
  %40 = load i32, i32* @x.360
  %41 = load i32, i32* @y.361
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %103

; <label>:53:                                     ; preds = %16
  invoke void @_ZSt15__alloc_on_moveISaISt6vectorIN5Solve4edgeESaIS2_EEEEvRT_S7_(%"class.std::allocator.5"* dereferenceable(1) %36, %"class.std::allocator.5"* dereferenceable(1) %39)
          to label %54 unwind label %97

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.360
  %56 = load i32, i32* @y.361
  %57 = sub i32 %55, -296720249
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -296720249
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %127

; <label>:69:                                     ; preds = %54, %127
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %20) #3
  %70 = load i32, i32* @x.360
  %71 = load i32, i32* @y.361
  %72 = add i32 %70, -1338979015
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1338979015
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %127

; <label>:96:                                     ; preds = %69
  ret void

; <label>:97:                                     ; preds = %53
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %22, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %23, align 4
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %20) #3
  br label %101

; <label>:101:                                    ; preds = %97
  %102 = load i8*, i8** %22, align 8
  call void @__clang_call_terminate(i8* %102) #10
  unreachable

; <label>:103:                                    ; preds = %16, %2
  %104 = alloca %"struct.std::integral_constant", align 1
  %105 = alloca %"class.std::vector.3"*, align 8
  %106 = alloca %"class.std::vector.3"*, align 8
  %107 = alloca %"class.std::vector.3", align 8
  %108 = alloca %"class.std::allocator.5", align 1
  %109 = alloca i8*
  %110 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %105, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %106, align 8
  %111 = load %"class.std::vector.3"*, %"class.std::vector.3"** %105, align 8
  %112 = bitcast %"class.std::vector.3"* %111 to %"struct.std::_Vector_base.4"*
  call void @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13get_allocatorEv(%"class.std::allocator.5"* sret %108, %"struct.std::_Vector_base.4"* %112) #3
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS4_(%"class.std::vector.3"* %107, %"class.std::allocator.5"* dereferenceable(1) %108) #3
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %108) #3
  %113 = bitcast %"class.std::vector.3"* %111 to %"struct.std::_Vector_base.4"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %113, i32 0, i32 0
  %115 = bitcast %"class.std::vector.3"* %107 to %"struct.std::_Vector_base.4"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %115, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %114, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* dereferenceable(24) %116) #3
  %117 = bitcast %"class.std::vector.3"* %111 to %"struct.std::_Vector_base.4"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %117, i32 0, i32 0
  %119 = load %"class.std::vector.3"*, %"class.std::vector.3"** %106, align 8
  %120 = bitcast %"class.std::vector.3"* %119 to %"struct.std::_Vector_base.4"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %120, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %118, %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* dereferenceable(24) %121) #3
  %122 = bitcast %"class.std::vector.3"* %111 to %"struct.std::_Vector_base.4"*
  %123 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %122) #3
  %124 = load %"class.std::vector.3"*, %"class.std::vector.3"** %106, align 8
  %125 = bitcast %"class.std::vector.3"* %124 to %"struct.std::_Vector_base.4"*
  %126 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %125) #3
  br label %16

; <label>:127:                                    ; preds = %69, %54
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %20) #3
  br label %69
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13get_allocatorEv(%"class.std::allocator.5"* noalias sret, %"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.362
  %6 = load i32, i32* @y.363
  %7 = sub i32 %5, -227493245
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -227493245
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -29821444, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -29821444, label %19
    i32 -1686162357, label %27
    i32 -895920585, label %46
    i32 -1228030241, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1686162357, i32 -1228030241
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %1, %"struct.std::_Vector_base.4"** %28, align 8
  %29 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %28, align 8
  %30 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %29) #3
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %30) #3
  %31 = load i32, i32* @x.362
  %32 = load i32, i32* @y.363
  %33 = add i32 %31, -1406017446
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1406017446
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -895920585, i32 -1228030241
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %1, %"struct.std::_Vector_base.4"** %48, align 8
  %49 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %48, align 8
  %50 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %49) #3
  call void @_ZNSaISt6vectorIN5Solve4edgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %50) #3
  store i32 -1686162357, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS4_(%"class.std::vector.3"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.364
  %6 = load i32, i32* @y.365
  %7 = sub i32 %5, -1844102602
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1844102602
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 373440424, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 373440424, label %19
    i32 -2135033714, label %39
    i32 -634931212, label %71
    i32 -220104042, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2135033714, i32 -220104042
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  %41 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %41, align 8
  %42 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %43 = bitcast %"class.std::vector.3"* %42 to %"struct.std::_Vector_base.4"*
  %44 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %41, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2ERKS5_(%"struct.std::_Vector_base.4"* %43, %"class.std::allocator.5"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.364
  %46 = load i32, i32* @y.365
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -634931212, i32 -220104042
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector.3"*, align 8
  %74 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %73, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %74, align 8
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %73, align 8
  %76 = bitcast %"class.std::vector.3"* %75 to %"struct.std::_Vector_base.4"*
  %77 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %74, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2ERKS5_(%"struct.std::_Vector_base.4"* %76, %"class.std::allocator.5"* dereferenceable(1) %77) #3
  store i32 -2135033714, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaISt6vectorIN5Solve4edgeESaIS2_EEEEvRT_S7_(%"class.std::allocator.5"* dereferenceable(1), %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.366
  %6 = load i32, i32* @y.367
  %7 = add i32 %5, 1940345822
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1940345822
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1499035115, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1499035115, label %19
    i32 -586313526, label %27
    i32 2031630662, label %47
    i32 -1441670207, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -586313526, i32 -1441670207
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  %29 = alloca %"class.std::allocator.5"*, align 8
  %30 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %28, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %29, align 8
  %31 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  %32 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %29, align 8
  call void @_ZSt18__do_alloc_on_moveISaISt6vectorIN5Solve4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE(%"class.std::allocator.5"* dereferenceable(1) %31, %"class.std::allocator.5"* dereferenceable(1) %32)
  %33 = load i32, i32* @x.366
  %34 = load i32, i32* @y.367
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 2031630662, i32 -1441670207
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::allocator.5"*, align 8
  %50 = alloca %"class.std::allocator.5"*, align 8
  %51 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %49, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %50, align 8
  %52 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %49, align 8
  %53 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %50, align 8
  call void @_ZSt18__do_alloc_on_moveISaISt6vectorIN5Solve4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE(%"class.std::allocator.5"* dereferenceable(1) %52, %"class.std::allocator.5"* dereferenceable(1) %53)
  store i32 -586313526, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EEC2ERKS5_(%"struct.std::_Vector_base.4"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.4"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %6, %"class.std::allocator.5"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaISt6vectorIN5Solve4edgeESaIS2_EEEEvRT_S7_St17integral_constantIbLb1EE(%"class.std::allocator.5"* dereferenceable(1), %"class.std::allocator.5"* dereferenceable(1)) #5 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %5, align 8
  %6 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaISt6vectorIN5Solve4edgeESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.5"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt10_Iter_baseIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EELb0EE7_S_baseES7_(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  ret %"class.std::vector.3"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SD_RKSA_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.3"**
  %5 = alloca %"class.std::vector.3"**
  %6 = alloca %"class.std::vector.3"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.374
  %10 = load i32, i32* @y.375
  %11 = add i32 %9, -765239831
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, -765239831
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 943435691, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %89
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 943435691, label %23
    i32 -2067780358, label %43
    i32 60051882, label %65
    i32 219417731, label %66
    i32 -1601877076, label %73
    i32 934061279, label %79
    i32 -66340251, label %84
    i32 573274429, label %85
  ]

; <label>:22:                                     ; preds = %20
  br label %89

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -2067780358, i32 573274429
  store i32 %42, i32* %19
  br label %89

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %44, %"class.std::vector.3"*** %6
  %45 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %45, %"class.std::vector.3"*** %5
  %46 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %46, %"class.std::vector.3"*** %4
  %47 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %47, align 8
  %48 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %5
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %48, align 8
  %49 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %49, align 8
  %50 = load i32, i32* @x.374
  %51 = load i32, i32* @y.375
  %52 = sub i32 %50, 1390115585
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1390115585
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 60051882, i32 573274429
  store i32 %64, i32* %19
  br label %89

; <label>:65:                                     ; preds = %20
  store i32 219417731, i32* %19
  br label %89

; <label>:66:                                     ; preds = %20
  %67 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  %68 = load %"class.std::vector.3"*, %"class.std::vector.3"** %67, align 8
  %69 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %5
  %70 = load %"class.std::vector.3"*, %"class.std::vector.3"** %69, align 8
  %71 = icmp ne %"class.std::vector.3"* %68, %70
  %72 = select i1 %71, i32 -1601877076, i32 -66340251
  store i32 %72, i32* %19
  br label %89

; <label>:73:                                     ; preds = %20
  %74 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %4
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %74, align 8
  %76 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  %77 = load %"class.std::vector.3"*, %"class.std::vector.3"** %76, align 8
  %78 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEaSERKS5_(%"class.std::vector.3"* %77, %"class.std::vector.3"* dereferenceable(24) %75)
  store i32 934061279, i32* %19
  br label %89

; <label>:79:                                     ; preds = %20
  %80 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  %81 = load %"class.std::vector.3"*, %"class.std::vector.3"** %80, align 8
  %82 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %81, i32 1
  %83 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %6
  store %"class.std::vector.3"* %82, %"class.std::vector.3"** %83, align 8
  store i32 219417731, i32* %19
  br label %89

; <label>:84:                                     ; preds = %20
  ret void

; <label>:85:                                     ; preds = %20
  %86 = alloca %"class.std::vector.3"*, align 8
  %87 = alloca %"class.std::vector.3"*, align 8
  %88 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %86, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %87, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %88, align 8
  store i32 -2067780358, i32* %19
  br label %89

; <label>:89:                                     ; preds = %85, %79, %73, %66, %65, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEaSERKS5_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::vector.8"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %6, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  store %"class.std::vector.3"* %16, %"class.std::vector.3"** %4
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %17, %"class.std::vector.3"** %3
  %18 = alloca i32
  store i32 549146703, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %366
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 549146703, label %22
    i32 2109699915, label %27
    i32 2068293079, label %35
    i32 -444407064, label %51
    i32 1385134384, label %145
    i32 -586013614, label %146
    i32 -224019815, label %152
    i32 -1746721939, label %180
    i32 1894629752, label %222
    i32 -1743588892, label %237
    i32 -333620797, label %264
    i32 -300400486, label %265
    i32 -2010045245, label %277
    i32 1950509822, label %279
    i32 1048714032, label %365
  ]

; <label>:21:                                     ; preds = %19
  br label %366

; <label>:22:                                     ; preds = %19
  %23 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %24 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %3
  %25 = icmp ne %"class.std::vector.3"* %24, %23
  %26 = select i1 %25, i32 2109699915, i32 -2010045245
  store i32 %26, i32* %18
  br label %366

; <label>:27:                                     ; preds = %19
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %29 = call i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %28) #3
  store i64 %29, i64* %7, align 8
  %30 = load i64, i64* %7, align 8
  %31 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %32 = call i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE8capacityEv(%"class.std::vector.3"* %31) #3
  %33 = icmp ugt i64 %30, %32
  %34 = select i1 %33, i32 2068293079, i32 -586013614
  store i32 %34, i32* %18
  br label %366

; <label>:35:                                     ; preds = %19
  %36 = load i32, i32* @x.376
  %37 = load i32, i32* @y.377
  %38 = sub i32 %36, -89094581
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -89094581
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -444407064, i32 1950509822
  store i32 %50, i32* %18
  br label %366

; <label>:51:                                     ; preds = %19
  %52 = load i64, i64* %7, align 8
  %53 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %54 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %53) #3
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  store %"class.std::vector.8"* %54, %"class.std::vector.8"** %55, align 8
  %56 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %57 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %56) #3
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  store %"class.std::vector.8"* %57, %"class.std::vector.8"** %58, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  %60 = load %"class.std::vector.8"*, %"class.std::vector.8"** %59, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  %62 = load %"class.std::vector.8"*, %"class.std::vector.8"** %61, align 8
  %63 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %64 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_(%"class.std::vector.3"* %63, i64 %52, %"class.std::vector.8"* %60, %"class.std::vector.8"* %62)
  store %"class.std::vector.8"* %64, %"class.std::vector.8"** %8, align 8
  %65 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %66 = bitcast %"class.std::vector.3"* %65 to %"struct.std::_Vector_base.4"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %67, i32 0, i32 0
  %69 = load %"class.std::vector.8"*, %"class.std::vector.8"** %68, align 8
  %70 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %71 = bitcast %"class.std::vector.3"* %70 to %"struct.std::_Vector_base.4"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %72, i32 0, i32 1
  %74 = load %"class.std::vector.8"*, %"class.std::vector.8"** %73, align 8
  %75 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %76 = bitcast %"class.std::vector.3"* %75 to %"struct.std::_Vector_base.4"*
  %77 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %76) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %69, %"class.std::vector.8"* %74, %"class.std::allocator.5"* dereferenceable(1) %77)
  %78 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %79 = bitcast %"class.std::vector.3"* %78 to %"struct.std::_Vector_base.4"*
  %80 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %81 = bitcast %"class.std::vector.3"* %80 to %"struct.std::_Vector_base.4"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %83, align 8
  %85 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %86 = bitcast %"class.std::vector.3"* %85 to %"struct.std::_Vector_base.4"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %87, i32 0, i32 2
  %89 = load %"class.std::vector.8"*, %"class.std::vector.8"** %88, align 8
  %90 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %91 = bitcast %"class.std::vector.3"* %90 to %"struct.std::_Vector_base.4"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %92, i32 0, i32 0
  %94 = load %"class.std::vector.8"*, %"class.std::vector.8"** %93, align 8
  %95 = ptrtoint %"class.std::vector.8"* %89 to i64
  %96 = ptrtoint %"class.std::vector.8"* %94 to i64
  %97 = sub i64 %95, -5459255093971445886
  %98 = sub i64 %97, %96
  %99 = add i64 %98, -5459255093971445886
  %100 = sub i64 %95, %96
  %101 = sdiv exact i64 %99, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %79, %"class.std::vector.8"* %84, i64 %101)
  %102 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %103 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %104 = bitcast %"class.std::vector.3"* %103 to %"struct.std::_Vector_base.4"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %105, i32 0, i32 0
  store %"class.std::vector.8"* %102, %"class.std::vector.8"** %106, align 8
  %107 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %108 = bitcast %"class.std::vector.3"* %107 to %"struct.std::_Vector_base.4"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %109, i32 0, i32 0
  %111 = load %"class.std::vector.8"*, %"class.std::vector.8"** %110, align 8
  %112 = load i64, i64* %7, align 8
  %113 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %111, i64 %112
  %114 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %115 = bitcast %"class.std::vector.3"* %114 to %"struct.std::_Vector_base.4"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %116, i32 0, i32 2
  store %"class.std::vector.8"* %113, %"class.std::vector.8"** %117, align 8
  %118 = load i32, i32* @x.376
  %119 = load i32, i32* @y.377
  %120 = add i32 %118, 1949633336
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 1949633336
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 1385134384, i32 1950509822
  store i32 %144, i32* %18
  br label %366

; <label>:145:                                    ; preds = %19
  store i32 -300400486, i32* %18
  br label %366

; <label>:146:                                    ; preds = %19
  %147 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %148 = call i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %147) #3
  %149 = load i64, i64* %7, align 8
  %150 = icmp uge i64 %148, %149
  %151 = select i1 %150, i32 -224019815, i32 -1746721939
  store i32 %151, i32* %18
  br label %366

; <label>:152:                                    ; preds = %19
  %153 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %154 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %153) #3
  %155 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %12, i32 0, i32 0
  store %"class.std::vector.8"* %154, %"class.std::vector.8"** %155, align 8
  %156 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %157 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %156) #3
  %158 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %13, i32 0, i32 0
  store %"class.std::vector.8"* %157, %"class.std::vector.8"** %158, align 8
  %159 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %160 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %159) #3
  %161 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %14, i32 0, i32 0
  store %"class.std::vector.8"* %160, %"class.std::vector.8"** %161, align 8
  %162 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %12, i32 0, i32 0
  %163 = load %"class.std::vector.8"*, %"class.std::vector.8"** %162, align 8
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %13, i32 0, i32 0
  %165 = load %"class.std::vector.8"*, %"class.std::vector.8"** %164, align 8
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %14, i32 0, i32 0
  %167 = load %"class.std::vector.8"*, %"class.std::vector.8"** %166, align 8
  %168 = call %"class.std::vector.8"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEENS1_IPS6_SA_EEET0_T_SF_SE_(%"class.std::vector.8"* %163, %"class.std::vector.8"* %165, %"class.std::vector.8"* %167)
  %169 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  store %"class.std::vector.8"* %168, %"class.std::vector.8"** %169, align 8
  %170 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %171 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %170) #3
  %172 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %15, i32 0, i32 0
  store %"class.std::vector.8"* %171, %"class.std::vector.8"** %172, align 8
  %173 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %174 = bitcast %"class.std::vector.3"* %173 to %"struct.std::_Vector_base.4"*
  %175 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %174) #3
  %176 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  %177 = load %"class.std::vector.8"*, %"class.std::vector.8"** %176, align 8
  %178 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %15, i32 0, i32 0
  %179 = load %"class.std::vector.8"*, %"class.std::vector.8"** %178, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RSaIT0_E(%"class.std::vector.8"* %177, %"class.std::vector.8"* %179, %"class.std::allocator.5"* dereferenceable(1) %175)
  store i32 1894629752, i32* %18
  br label %366

; <label>:180:                                    ; preds = %19
  %181 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %182 = bitcast %"class.std::vector.3"* %181 to %"struct.std::_Vector_base.4"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %183, i32 0, i32 0
  %185 = load %"class.std::vector.8"*, %"class.std::vector.8"** %184, align 8
  %186 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %187 = bitcast %"class.std::vector.3"* %186 to %"struct.std::_Vector_base.4"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %188, i32 0, i32 0
  %190 = load %"class.std::vector.8"*, %"class.std::vector.8"** %189, align 8
  %191 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %192 = call i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %191) #3
  %193 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %190, i64 %192
  %194 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %195 = bitcast %"class.std::vector.3"* %194 to %"struct.std::_Vector_base.4"*
  %196 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %195, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %196, i32 0, i32 0
  %198 = load %"class.std::vector.8"*, %"class.std::vector.8"** %197, align 8
  %199 = call %"class.std::vector.8"* @_ZSt4copyIPSt6vectorIN5Solve4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"* %185, %"class.std::vector.8"* %193, %"class.std::vector.8"* %198)
  %200 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %201 = bitcast %"class.std::vector.3"* %200 to %"struct.std::_Vector_base.4"*
  %202 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %202, i32 0, i32 0
  %204 = load %"class.std::vector.8"*, %"class.std::vector.8"** %203, align 8
  %205 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %206 = call i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %205) #3
  %207 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %204, i64 %206
  %208 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %209 = bitcast %"class.std::vector.3"* %208 to %"struct.std::_Vector_base.4"*
  %210 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %210, i32 0, i32 1
  %212 = load %"class.std::vector.8"*, %"class.std::vector.8"** %211, align 8
  %213 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %214 = bitcast %"class.std::vector.3"* %213 to %"struct.std::_Vector_base.4"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %215, i32 0, i32 1
  %217 = load %"class.std::vector.8"*, %"class.std::vector.8"** %216, align 8
  %218 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %219 = bitcast %"class.std::vector.3"* %218 to %"struct.std::_Vector_base.4"*
  %220 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %219) #3
  %221 = call %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aIPSt6vectorIN5Solve4edgeESaIS2_EES5_S4_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.8"* %207, %"class.std::vector.8"* %212, %"class.std::vector.8"* %217, %"class.std::allocator.5"* dereferenceable(1) %220)
  store i32 1894629752, i32* %18
  br label %366

; <label>:222:                                    ; preds = %19
  %223 = load i32, i32* @x.376
  %224 = load i32, i32* @y.377
  %225 = sub i32 0, 1
  %226 = add i32 %223, %225
  %227 = sub i32 %223, 1
  %228 = mul i32 %223, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %224, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  %236 = select i1 %234, i32 -1743588892, i32 1048714032
  store i32 %236, i32* %18
  br label %366

; <label>:237:                                    ; preds = %19
  %238 = load i32, i32* @x.376
  %239 = load i32, i32* @y.377
  %240 = sub i32 0, 1
  %241 = add i32 %238, %240
  %242 = sub i32 %238, 1
  %243 = mul i32 %238, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %239, 10
  %247 = xor i1 %245, true
  %248 = xor i1 %246, true
  %249 = xor i1 true, true
  %250 = and i1 %247, true
  %251 = and i1 %245, %249
  %252 = and i1 %248, true
  %253 = and i1 %246, %249
  %254 = or i1 %250, %251
  %255 = or i1 %252, %253
  %256 = xor i1 %254, %255
  %257 = or i1 %247, %248
  %258 = xor i1 %257, true
  %259 = or i1 true, %249
  %260 = and i1 %258, %259
  %261 = or i1 %256, %260
  %262 = or i1 %245, %246
  %263 = select i1 %261, i32 -333620797, i32 1048714032
  store i32 %263, i32* %18
  br label %366

; <label>:264:                                    ; preds = %19
  store i32 -300400486, i32* %18
  br label %366

; <label>:265:                                    ; preds = %19
  %266 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %267 = bitcast %"class.std::vector.3"* %266 to %"struct.std::_Vector_base.4"*
  %268 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %267, i32 0, i32 0
  %269 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %268, i32 0, i32 0
  %270 = load %"class.std::vector.8"*, %"class.std::vector.8"** %269, align 8
  %271 = load i64, i64* %7, align 8
  %272 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %270, i64 %271
  %273 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %274 = bitcast %"class.std::vector.3"* %273 to %"struct.std::_Vector_base.4"*
  %275 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %275, i32 0, i32 1
  store %"class.std::vector.8"* %272, %"class.std::vector.8"** %276, align 8
  store i32 -2010045245, i32* %18
  br label %366

; <label>:277:                                    ; preds = %19
  %278 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  ret %"class.std::vector.3"* %278

; <label>:279:                                    ; preds = %19
  %280 = load i64, i64* %7, align 8
  %281 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %282 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %281) #3
  %283 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  store %"class.std::vector.8"* %282, %"class.std::vector.8"** %283, align 8
  %284 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %285 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %284) #3
  %286 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  store %"class.std::vector.8"* %285, %"class.std::vector.8"** %286, align 8
  %287 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  %288 = load %"class.std::vector.8"*, %"class.std::vector.8"** %287, align 8
  %289 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  %290 = load %"class.std::vector.8"*, %"class.std::vector.8"** %289, align 8
  %291 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %292 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_(%"class.std::vector.3"* %291, i64 %280, %"class.std::vector.8"* %288, %"class.std::vector.8"* %290)
  store %"class.std::vector.8"* %292, %"class.std::vector.8"** %8, align 8
  %293 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %294 = bitcast %"class.std::vector.3"* %293 to %"struct.std::_Vector_base.4"*
  %295 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %294, i32 0, i32 0
  %296 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %295, i32 0, i32 0
  %297 = load %"class.std::vector.8"*, %"class.std::vector.8"** %296, align 8
  %298 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %299 = bitcast %"class.std::vector.3"* %298 to %"struct.std::_Vector_base.4"*
  %300 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %299, i32 0, i32 0
  %301 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %300, i32 0, i32 1
  %302 = load %"class.std::vector.8"*, %"class.std::vector.8"** %301, align 8
  %303 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %304 = bitcast %"class.std::vector.3"* %303 to %"struct.std::_Vector_base.4"*
  %305 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %304) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %297, %"class.std::vector.8"* %302, %"class.std::allocator.5"* dereferenceable(1) %305)
  %306 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %307 = bitcast %"class.std::vector.3"* %306 to %"struct.std::_Vector_base.4"*
  %308 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %309 = bitcast %"class.std::vector.3"* %308 to %"struct.std::_Vector_base.4"*
  %310 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %309, i32 0, i32 0
  %311 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %310, i32 0, i32 0
  %312 = load %"class.std::vector.8"*, %"class.std::vector.8"** %311, align 8
  %313 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %314 = bitcast %"class.std::vector.3"* %313 to %"struct.std::_Vector_base.4"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %315, i32 0, i32 2
  %317 = load %"class.std::vector.8"*, %"class.std::vector.8"** %316, align 8
  %318 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %319 = bitcast %"class.std::vector.3"* %318 to %"struct.std::_Vector_base.4"*
  %320 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %320, i32 0, i32 0
  %322 = load %"class.std::vector.8"*, %"class.std::vector.8"** %321, align 8
  %323 = ptrtoint %"class.std::vector.8"* %317 to i64
  %324 = ptrtoint %"class.std::vector.8"* %322 to i64
  %325 = sub i64 0, 3725933378253415884
  %326 = sub i64 %325, %323
  %327 = add i64 %326, 3725933378253415884
  %328 = sub i64 0, %323
  %329 = add i64 %327, 8802624069573742580
  %330 = add i64 %329, %324
  %331 = sub i64 %330, 8802624069573742580
  %332 = add i64 %327, %324
  %333 = sub i64 0, %324
  %334 = add i64 %323, %333
  %335 = sub i64 %323, %324
  %336 = add i64 %334, -1832252288611230460
  %337 = sub i64 %336, 24
  %338 = sub i64 %337, -1832252288611230460
  %339 = sub i64 %334, 24
  %340 = mul i64 %338, 24
  %341 = shl i64 %334, 24
  %342 = sub i64 0, %334
  %343 = add i64 0, %342
  %344 = sub i64 0, %334
  %345 = sub i64 0, 24
  %346 = sub i64 %343, %345
  %347 = add i64 %343, 24
  %348 = sdiv exact i64 %334, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %307, %"class.std::vector.8"* %312, i64 %348)
  %349 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %350 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %351 = bitcast %"class.std::vector.3"* %350 to %"struct.std::_Vector_base.4"*
  %352 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %351, i32 0, i32 0
  %353 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %352, i32 0, i32 0
  store %"class.std::vector.8"* %349, %"class.std::vector.8"** %353, align 8
  %354 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %355 = bitcast %"class.std::vector.3"* %354 to %"struct.std::_Vector_base.4"*
  %356 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %355, i32 0, i32 0
  %357 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %356, i32 0, i32 0
  %358 = load %"class.std::vector.8"*, %"class.std::vector.8"** %357, align 8
  %359 = load i64, i64* %7, align 8
  %360 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %358, i64 %359
  %361 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %362 = bitcast %"class.std::vector.3"* %361 to %"struct.std::_Vector_base.4"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %362, i32 0, i32 0
  %364 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %363, i32 0, i32 2
  store %"class.std::vector.8"* %360, %"class.std::vector.8"** %364, align 8
  store i32 -444407064, i32* %18
  br label %366

; <label>:365:                                    ; preds = %19
  store i32 -1743588892, i32* %18
  br label %366

; <label>:366:                                    ; preds = %365, %279, %265, %264, %237, %222, %180, %152, %146, %145, %51, %35, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE8capacityEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.378
  %6 = load i32, i32* @y.379
  %7 = add i32 %5, -1328910168
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1328910168
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 361302119, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %120
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 361302119, label %19
    i32 -561983682, label %39
    i32 -235873248, label %70
    i32 -1417247418, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %120

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -561983682, i32 -1417247418
  store i32 %38, i32* %15
  br label %120

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %42 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %43, i32 0, i32 2
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %46 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  %50 = ptrtoint %"class.std::vector.8"* %45 to i64
  %51 = ptrtoint %"class.std::vector.8"* %49 to i64
  %52 = sub i64 0, %51
  %53 = add i64 %50, %52
  %54 = sub i64 %50, %51
  %55 = sdiv exact i64 %53, 24
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.378
  %57 = load i32, i32* @y.379
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -235873248, i32 -1417247418
  store i32 %69, i32* %15
  br label %120

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %73, align 8
  %74 = load %"class.std::vector.3"*, %"class.std::vector.3"** %73, align 8
  %75 = bitcast %"class.std::vector.3"* %74 to %"struct.std::_Vector_base.4"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %76, i32 0, i32 2
  %78 = load %"class.std::vector.8"*, %"class.std::vector.8"** %77, align 8
  %79 = bitcast %"class.std::vector.3"* %74 to %"struct.std::_Vector_base.4"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %83 = ptrtoint %"class.std::vector.8"* %78 to i64
  %84 = ptrtoint %"class.std::vector.8"* %82 to i64
  %85 = sub i64 0, %83
  %86 = add i64 0, %85
  %87 = sub i64 0, %83
  %88 = sub i64 0, %84
  %89 = sub i64 %86, %88
  %90 = add i64 %86, %84
  %91 = sub i64 %83, 7785007362469342796
  %92 = sub i64 %91, %84
  %93 = add i64 %92, 7785007362469342796
  %94 = sub i64 %83, %84
  %95 = mul i64 %93, %84
  %96 = shl i64 %83, %84
  %97 = sub i64 0, %84
  %98 = add i64 %83, %97
  %99 = sub i64 %83, %84
  %100 = mul i64 %98, %84
  %101 = sub i64 %83, -2076603124382326691
  %102 = sub i64 %101, %84
  %103 = add i64 %102, -2076603124382326691
  %104 = sub i64 %83, %84
  %105 = mul i64 %103, %84
  %106 = shl i64 %83, %84
  %107 = add i64 %83, -6852392510570154324
  %108 = sub i64 %107, %84
  %109 = sub i64 %108, -6852392510570154324
  %110 = sub i64 %83, %84
  %111 = mul i64 %109, %84
  %112 = shl i64 %83, %84
  %113 = shl i64 %83, %84
  %114 = sub i64 0, %84
  %115 = add i64 %83, %114
  %116 = sub i64 %83, %84
  %117 = shl i64 %115, 24
  %118 = shl i64 %115, 24
  %119 = sdiv exact i64 %115, 24
  store i32 -561983682, i32* %15
  br label %120

; <label>:120:                                    ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEPS3_mT_SD_(%"class.std::vector.3"*, i64, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.380
  %6 = load i32, i32* @y.381
  %7 = add i32 %5, 1286984874
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1286984874
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %142

; <label>:31:                                     ; preds = %4, %142
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %34 = alloca %"class.std::vector.3"*, align 8
  %35 = alloca i64, align 8
  %36 = alloca %"class.std::vector.8"*, align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %39 = alloca i8*
  %40 = alloca i32
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %32, i32 0, i32 0
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %41, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %33, i32 0, i32 0
  store %"class.std::vector.8"* %3, %"class.std::vector.8"** %42, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %34, align 8
  store i64 %1, i64* %35, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %34, align 8
  %44 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %45 = load i64, i64* %35, align 8
  %46 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %44, i64 %45)
  store %"class.std::vector.8"* %46, %"class.std::vector.8"** %36, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %37 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %38 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load %"class.std::vector.8"*, %"class.std::vector.8"** %36, align 8
  %52 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %53 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %52) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %37, i32 0, i32 0
  %55 = load %"class.std::vector.8"*, %"class.std::vector.8"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %38, i32 0, i32 0
  %57 = load %"class.std::vector.8"*, %"class.std::vector.8"** %56, align 8
  %58 = load i32, i32* @x.380
  %59 = load i32, i32* @y.381
  %60 = sub i32 %58, 357040635
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 357040635
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %142

; <label>:72:                                     ; preds = %31
  %73 = invoke %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEPS6_S6_ET0_T_SE_SD_RSaIT1_E(%"class.std::vector.8"* %55, %"class.std::vector.8"* %57, %"class.std::vector.8"* %51, %"class.std::allocator.5"* dereferenceable(1) %53)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %72
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %36, align 8
  ret %"class.std::vector.8"* %75

; <label>:76:                                     ; preds = %72
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %39, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %40, align 4
  br label %80

; <label>:80:                                     ; preds = %76
  %81 = load i8*, i8** %39, align 8
  %82 = call i8* @__cxa_begin_catch(i8* %81) #3
  %83 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %36, align 8
  %85 = load i64, i64* %35, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %83, %"class.std::vector.8"* %84, i64 %85)
          to label %86 unwind label %87

; <label>:86:                                     ; preds = %80
  invoke void @__cxa_rethrow() #13
          to label %141 unwind label %87

; <label>:87:                                     ; preds = %86, %80
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %39, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %40, align 4
  invoke void @__cxa_end_catch()
          to label %91 unwind label %98

; <label>:91:                                     ; preds = %87
  br label %93
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:93:                                     ; preds = %91
  %94 = load i8*, i8** %39, align 8
  %95 = load i32, i32* %40, align 4
  %96 = insertvalue { i8*, i32 } undef, i8* %94, 0
  %97 = insertvalue { i8*, i32 } %96, i32 %95, 1
  resume { i8*, i32 } %97

; <label>:98:                                     ; preds = %87
  %99 = load i32, i32* @x.380
  %100 = load i32, i32* @y.381
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %169

; <label>:124:                                    ; preds = %98, %169
  %125 = landingpad { i8*, i32 }
          catch i8* null
  %126 = extractvalue { i8*, i32 } %125, 0
  call void @__clang_call_terminate(i8* %126) #10
  %127 = load i32, i32* @x.380
  %128 = load i32, i32* @y.381
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %169

; <label>:140:                                    ; preds = %124
  unreachable

; <label>:141:                                    ; preds = %86
  unreachable

; <label>:142:                                    ; preds = %31, %4
  %143 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %144 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %145 = alloca %"class.std::vector.3"*, align 8
  %146 = alloca i64, align 8
  %147 = alloca %"class.std::vector.8"*, align 8
  %148 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %149 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %150 = alloca i8*
  %151 = alloca i32
  %152 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %143, i32 0, i32 0
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %152, align 8
  %153 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %144, i32 0, i32 0
  store %"class.std::vector.8"* %3, %"class.std::vector.8"** %153, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %145, align 8
  store i64 %1, i64* %146, align 8
  %154 = load %"class.std::vector.3"*, %"class.std::vector.3"** %145, align 8
  %155 = bitcast %"class.std::vector.3"* %154 to %"struct.std::_Vector_base.4"*
  %156 = load i64, i64* %146, align 8
  %157 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %155, i64 %156)
  store %"class.std::vector.8"* %157, %"class.std::vector.8"** %147, align 8
  %158 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %148 to i8*
  %159 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %158, i8* %159, i64 8, i32 8, i1 false)
  %160 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %149 to i8*
  %161 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 8, i32 8, i1 false)
  %162 = load %"class.std::vector.8"*, %"class.std::vector.8"** %147, align 8
  %163 = bitcast %"class.std::vector.3"* %154 to %"struct.std::_Vector_base.4"*
  %164 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %163) #3
  %165 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %148, i32 0, i32 0
  %166 = load %"class.std::vector.8"*, %"class.std::vector.8"** %165, align 8
  %167 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %149, i32 0, i32 0
  %168 = load %"class.std::vector.8"*, %"class.std::vector.8"** %167, align 8
  br label %31

; <label>:169:                                    ; preds = %124, %98
  %170 = landingpad { i8*, i32 }
          catch i8* null
  %171 = extractvalue { i8*, i32 } %170, 0
  call void @__clang_call_terminate(i8* %171) #10
  br label %124
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %7, %"class.std::vector.8"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RSaIT0_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %10, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %7, i32 0, i32 0
  %16 = load %"class.std::vector.8"*, %"class.std::vector.8"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEEvT_SB_(%"class.std::vector.8"* %16, %"class.std::vector.8"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEENS1_IPS6_SA_EEET0_T_SF_SE_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.386
  %8 = load i32, i32* @y.387
  %9 = add i32 %7, 651728018
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 651728018
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1840756324, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %144
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1840756324, label %21
    i32 -1641220752, label %41
    i32 -1737354954, label %105
    i32 -914509049, label %107
  ]

; <label>:20:                                     ; preds = %18
  br label %144

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1641220752, i32 -914509049
  store i32 %40, i32* %17
  br label %144

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %43, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %51, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %44, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %52, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %45, i32 0, i32 0
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %53, align 8
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %47 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %47, i32 0, i32 0
  %57 = load %"class.std::vector.8"*, %"class.std::vector.8"** %56, align 8
  %58 = call %"class.std::vector.8"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"* %57)
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %46, i32 0, i32 0
  store %"class.std::vector.8"* %58, %"class.std::vector.8"** %59, align 8
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %49 to i8*
  %61 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 8, i32 8, i1 false)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %49, i32 0, i32 0
  %63 = load %"class.std::vector.8"*, %"class.std::vector.8"** %62, align 8
  %64 = call %"class.std::vector.8"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"* %63)
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %48, i32 0, i32 0
  store %"class.std::vector.8"* %64, %"class.std::vector.8"** %65, align 8
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %50 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %46, i32 0, i32 0
  %69 = load %"class.std::vector.8"*, %"class.std::vector.8"** %68, align 8
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %48, i32 0, i32 0
  %71 = load %"class.std::vector.8"*, %"class.std::vector.8"** %70, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %50, i32 0, i32 0
  %73 = load %"class.std::vector.8"*, %"class.std::vector.8"** %72, align 8
  %74 = call %"class.std::vector.8"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEENS1_IPS6_SA_EEET1_T0_SF_SE_(%"class.std::vector.8"* %69, %"class.std::vector.8"* %71, %"class.std::vector.8"* %73)
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %42, i32 0, i32 0
  store %"class.std::vector.8"* %74, %"class.std::vector.8"** %75, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %42, i32 0, i32 0
  %77 = load %"class.std::vector.8"*, %"class.std::vector.8"** %76, align 8
  store %"class.std::vector.8"* %77, %"class.std::vector.8"** %4
  %78 = load i32, i32* @x.386
  %79 = load i32, i32* @y.387
  %80 = sub i32 %78, -164698018
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -164698018
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1737354954, i32 -914509049
  store i32 %104, i32* %17
  br label %144

; <label>:105:                                    ; preds = %18
  %106 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %106

; <label>:107:                                    ; preds = %18
  %108 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %109 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %110 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %111 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %112 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %113 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %114 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %115 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %116 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %109, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %117, align 8
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %110, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %118, align 8
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %111, i32 0, i32 0
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %119, align 8
  %120 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %113 to i8*
  %121 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 8, i32 8, i1 false)
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %113, i32 0, i32 0
  %123 = load %"class.std::vector.8"*, %"class.std::vector.8"** %122, align 8
  %124 = call %"class.std::vector.8"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"* %123)
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %112, i32 0, i32 0
  store %"class.std::vector.8"* %124, %"class.std::vector.8"** %125, align 8
  %126 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %115 to i8*
  %127 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 8, i32 8, i1 false)
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %115, i32 0, i32 0
  %129 = load %"class.std::vector.8"*, %"class.std::vector.8"** %128, align 8
  %130 = call %"class.std::vector.8"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"* %129)
  %131 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %114, i32 0, i32 0
  store %"class.std::vector.8"* %130, %"class.std::vector.8"** %131, align 8
  %132 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %116 to i8*
  %133 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 8, i32 8, i1 false)
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %112, i32 0, i32 0
  %135 = load %"class.std::vector.8"*, %"class.std::vector.8"** %134, align 8
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %114, i32 0, i32 0
  %137 = load %"class.std::vector.8"*, %"class.std::vector.8"** %136, align 8
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %116, i32 0, i32 0
  %139 = load %"class.std::vector.8"*, %"class.std::vector.8"** %138, align 8
  %140 = call %"class.std::vector.8"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEENS1_IPS6_SA_EEET1_T0_SF_SE_(%"class.std::vector.8"* %135, %"class.std::vector.8"* %137, %"class.std::vector.8"* %139)
  %141 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %108, i32 0, i32 0
  store %"class.std::vector.8"* %140, %"class.std::vector.8"** %141, align 8
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %108, i32 0, i32 0
  %143 = load %"class.std::vector.8"*, %"class.std::vector.8"** %142, align 8
  store i32 -1641220752, i32* %17
  br label %144

; <label>:144:                                    ; preds = %107, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"class.std::vector.8"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"class.std::vector.8"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt4copyIPSt6vectorIN5Solve4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.392
  %8 = load i32, i32* @y.393
  %9 = sub i32 %7, 747293975
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 747293975
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1378790362, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %78
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1378790362, label %21
    i32 827742795, label %41
    i32 111882367, label %66
    i32 -563176492, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %78

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 827742795, i32 -563176492
  store i32 %40, i32* %17
  br label %78

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.8"*, align 8
  %43 = alloca %"class.std::vector.8"*, align 8
  %44 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %42, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %43, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %44, align 8
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %42, align 8
  %46 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %45)
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %43, align 8
  %48 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %47)
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %50 = call %"class.std::vector.8"* @_ZSt14__copy_move_a2ILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %46, %"class.std::vector.8"* %48, %"class.std::vector.8"* %49)
  store %"class.std::vector.8"* %50, %"class.std::vector.8"** %4
  %51 = load i32, i32* @x.392
  %52 = load i32, i32* @y.393
  %53 = add i32 %51, -863460842
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -863460842
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 111882367, i32 -563176492
  store i32 %65, i32* %17
  br label %78

; <label>:66:                                     ; preds = %18
  %67 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %67

; <label>:68:                                     ; preds = %18
  %69 = alloca %"class.std::vector.8"*, align 8
  %70 = alloca %"class.std::vector.8"*, align 8
  %71 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %69, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %70, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %71, align 8
  %72 = load %"class.std::vector.8"*, %"class.std::vector.8"** %69, align 8
  %73 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %72)
  %74 = load %"class.std::vector.8"*, %"class.std::vector.8"** %70, align 8
  %75 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %74)
  %76 = load %"class.std::vector.8"*, %"class.std::vector.8"** %71, align 8
  %77 = call %"class.std::vector.8"* @_ZSt14__copy_move_a2ILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %73, %"class.std::vector.8"* %75, %"class.std::vector.8"* %76)
  store i32 827742795, i32* %17
  br label %78

; <label>:78:                                     ; preds = %68, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aIPSt6vectorIN5Solve4edgeESaIS2_EES5_S4_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.394
  %9 = load i32, i32* @y.395
  %10 = add i32 %8, -832426100
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -832426100
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1745131356, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %77
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1745131356, label %22
    i32 2143763959, label %42
    i32 -1767000483, label %66
    i32 -1809964652, label %68
  ]

; <label>:21:                                     ; preds = %19
  br label %77

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 2143763959, i32 -1809964652
  store i32 %41, i32* %18
  br label %77

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.8"*, align 8
  %44 = alloca %"class.std::vector.8"*, align 8
  %45 = alloca %"class.std::vector.8"*, align 8
  %46 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %43, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %44, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %45, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %46, align 8
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %43, align 8
  %48 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %45, align 8
  %50 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyIPSt6vectorIN5Solve4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"* %47, %"class.std::vector.8"* %48, %"class.std::vector.8"* %49)
  store %"class.std::vector.8"* %50, %"class.std::vector.8"** %5
  %51 = load i32, i32* @x.394
  %52 = load i32, i32* @y.395
  %53 = add i32 %51, 1069676789
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1069676789
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1767000483, i32 -1809964652
  store i32 %65, i32* %18
  br label %77

; <label>:66:                                     ; preds = %19
  %67 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  ret %"class.std::vector.8"* %67

; <label>:68:                                     ; preds = %19
  %69 = alloca %"class.std::vector.8"*, align 8
  %70 = alloca %"class.std::vector.8"*, align 8
  %71 = alloca %"class.std::vector.8"*, align 8
  %72 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %69, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %70, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %71, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %72, align 8
  %73 = load %"class.std::vector.8"*, %"class.std::vector.8"** %69, align 8
  %74 = load %"class.std::vector.8"*, %"class.std::vector.8"** %70, align 8
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %71, align 8
  %76 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyIPSt6vectorIN5Solve4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"* %73, %"class.std::vector.8"* %74, %"class.std::vector.8"* %75)
  store i32 2143763959, i32* %18
  br label %77

; <label>:77:                                     ; preds = %68, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEEvT_SB_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.396
  %6 = load i32, i32* @y.397
  %7 = add i32 %5, 809217777
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 809217777
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1705041774, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1705041774, label %19
    i32 783971994, label %39
    i32 929087334, label %69
    i32 1034579152, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 783971994, i32 1034579152
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %40, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %41, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %45, align 8
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %42 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %43 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %42, i32 0, i32 0
  %51 = load %"class.std::vector.8"*, %"class.std::vector.8"** %50, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %43, i32 0, i32 0
  %53 = load %"class.std::vector.8"*, %"class.std::vector.8"** %52, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEEEvT_SD_(%"class.std::vector.8"* %51, %"class.std::vector.8"* %53)
  %54 = load i32, i32* @x.396
  %55 = load i32, i32* @y.397
  %56 = sub i32 %54, 1104559736
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 1104559736
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 929087334, i32 1034579152
  store i32 %68, i32* %15
  br label %85

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %71, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %75, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %72, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %76, align 8
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %73 to i8*
  %78 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 8, i1 false)
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %74 to i8*
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 8, i1 false)
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %73, i32 0, i32 0
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %74, i32 0, i32 0
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %83, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEEEvT_SD_(%"class.std::vector.8"* %82, %"class.std::vector.8"* %84)
  store i32 783971994, i32* %15
  br label %85

; <label>:85:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS6_EES4_IS8_SaIS8_EEEEEEvT_SD_(%"class.std::vector.8"*, %"class.std::vector.8"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %7, align 8
  %8 = alloca i32
  store i32 909002590, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %80
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 909002590, label %12
    i32 -1587297733, label %40
    i32 -1832880204, label %69
    i32 -191650273, label %72
    i32 -586384736, label %75
    i32 -44743393, label %77
    i32 831675417, label %78
  ]

; <label>:11:                                     ; preds = %9
  br label %80

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.398
  %14 = load i32, i32* @y.399
  %15 = sub i32 %13, 639052543
  %16 = sub i32 %15, 1
  %17 = add i32 %16, 639052543
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1587297733, i32 831675417
  store i32 %39, i32* %8
  br label %80

; <label>:40:                                     ; preds = %9
  %41 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %5) #3
  store i1 %41, i1* %3
  %42 = load i32, i32* @x.398
  %43 = load i32, i32* @y.399
  %44 = add i32 %42, 218107889
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 218107889
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1832880204, i32 831675417
  store i32 %68, i32* %8
  br label %80

; <label>:69:                                     ; preds = %9
  %70 = load volatile i1, i1* %3
  %71 = select i1 %70, i32 -191650273, i32 -44743393
  store i32 %71, i32* %8
  br label %80

; <label>:72:                                     ; preds = %9
  %73 = call dereferenceable(24) %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.31"* %4) #3
  %74 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %73) #3
  call void @_ZSt8_DestroyISt6vectorIN5Solve4edgeESaIS2_EEEvPT_(%"class.std::vector.8"* %74)
  store i32 -586384736, i32* %8
  br label %80

; <label>:75:                                     ; preds = %9
  %76 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"* %4) #3
  store i32 909002590, i32* %8
  br label %80

; <label>:77:                                     ; preds = %9
  ret void

; <label>:78:                                     ; preds = %9
  %79 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %5) #3
  store i32 -1587297733, i32* %8
  br label %80

; <label>:80:                                     ; preds = %78, %75, %72, %69, %40, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %1, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5) #3
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %8) #3
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  %11 = icmp ne %"class.std::vector.8"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.31"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.402
  %6 = load i32, i32* @y.403
  %7 = sub i32 %5, 969845230
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 969845230
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1929139743, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1929139743, label %19
    i32 -1241125720, label %27
    i32 -1391910880, label %47
    i32 -1824297113, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1241125720, i32 -1824297113
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %31, %"class.std::vector.8"** %2
  %32 = load i32, i32* @x.402
  %33 = load i32, i32* @y.403
  %34 = sub i32 %32, -515250209
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -515250209
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1391910880, i32 -1824297113
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %50, align 8
  %51 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %50, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %51, i32 0, i32 0
  %53 = load %"class.std::vector.8"*, %"class.std::vector.8"** %52, align 8
  store i32 -1241125720, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %5, i32 1
  store %"class.std::vector.8"* %6, %"class.std::vector.8"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.31"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.406
  %6 = load i32, i32* @y.407
  %7 = sub i32 %5, 1892679391
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1892679391
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1416772938, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1416772938, label %19
    i32 699816220, label %39
    i32 244027960, label %57
    i32 -481451312, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 699816220, i32 -481451312
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %41, i32 0, i32 0
  store %"class.std::vector.8"** %42, %"class.std::vector.8"*** %2
  %43 = load i32, i32* @x.406
  %44 = load i32, i32* @y.407
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 244027960, i32 -481451312
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %2
  ret %"class.std::vector.8"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %61, i32 0, i32 0
  store i32 699816220, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEENS1_IPS6_SA_EEET1_T0_SF_SE_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %8 = alloca %"class.std::vector.8"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %6, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %7, i32 0, i32 0
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %9, i32 0, i32 0
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %17, align 8
  %19 = call %"class.std::vector.8"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %10, i32 0, i32 0
  %23 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %24 = call %"class.std::vector.8"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  %29 = call %"class.std::vector.8"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::vector.8"* %28)
  %30 = call %"class.std::vector.8"* @_ZSt13__copy_move_aILb0EPKSt6vectorIN5Solve4edgeESaIS2_EEPS4_ET1_T0_S9_S8_(%"class.std::vector.8"* %19, %"class.std::vector.8"* %24, %"class.std::vector.8"* %29)
  store %"class.std::vector.8"* %30, %"class.std::vector.8"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"* %4, %"class.std::vector.8"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  %32 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  ret %"class.std::vector.8"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %4, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb0EE7_S_baseESB_(%"class.std::vector.8"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  store %"class.std::vector.8"* %10, %"class.std::vector.8"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  ret %"class.std::vector.8"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt13__copy_move_aILb0EPKSt6vectorIN5Solve4edgeESaIS2_EEPS4_ET1_T0_S9_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %11 = call %"class.std::vector.8"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt6vectorIN5Solve4edgeESaIS5_EEPS7_EET0_T_SC_SB_(%"class.std::vector.8"* %8, %"class.std::vector.8"* %9, %"class.std::vector.8"* %10)
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %9 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESB_(%"class.std::vector.8"* %8)
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %9 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESA_(%"class.std::vector.8"* %8)
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.31"*, %"class.std::vector.8"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %4 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %8, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt6vectorIN5Solve4edgeESaIS5_EEPS7_EET0_T_SC_SB_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"class.std::vector.8"**
  %6 = alloca %"class.std::vector.8"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.420
  %10 = load i32, i32* @y.421
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -1705464024, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %185
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1705464024, label %22
    i32 1080455783, label %30
    i32 807421710, label %62
    i32 -1618151842, label %63
    i32 -962450697, label %68
    i32 881047957, label %82
    i32 -23716342, label %110
    i32 -998531387, label %131
    i32 247523599, label %132
    i32 -1483781599, label %135
    i32 64895780, label %169
  ]

; <label>:21:                                     ; preds = %19
  br label %185

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1080455783, i32 -1483781599
  store i32 %29, i32* %18
  br label %185

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %31, %"class.std::vector.8"*** %6
  %32 = alloca %"class.std::vector.8"*, align 8
  %33 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %33, %"class.std::vector.8"*** %5
  %34 = alloca i64, align 8
  store i64* %34, i64** %4
  %35 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %6
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %35, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %32, align 8
  %36 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %5
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %36, align 8
  %37 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  %38 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %6
  %39 = load %"class.std::vector.8"*, %"class.std::vector.8"** %38, align 8
  %40 = ptrtoint %"class.std::vector.8"* %37 to i64
  %41 = ptrtoint %"class.std::vector.8"* %39 to i64
  %42 = sub i64 0, %41
  %43 = add i64 %40, %42
  %44 = sub i64 %40, %41
  %45 = sdiv exact i64 %43, 24
  %46 = load volatile i64*, i64** %4
  store i64 %45, i64* %46, align 8
  %47 = load i32, i32* @x.420
  %48 = load i32, i32* @y.421
  %49 = sub i32 %47, -1028382062
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1028382062
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 807421710, i32 -1483781599
  store i32 %61, i32* %18
  br label %185

; <label>:62:                                     ; preds = %19
  store i32 -1618151842, i32* %18
  br label %185

; <label>:63:                                     ; preds = %19
  %64 = load volatile i64*, i64** %4
  %65 = load i64, i64* %64, align 8
  %66 = icmp sgt i64 %65, 0
  %67 = select i1 %66, i32 -962450697, i32 247523599
  store i32 %67, i32* %18
  br label %185

; <label>:68:                                     ; preds = %19
  %69 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %6
  %70 = load %"class.std::vector.8"*, %"class.std::vector.8"** %69, align 8
  %71 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %5
  %72 = load %"class.std::vector.8"*, %"class.std::vector.8"** %71, align 8
  %73 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EEaSERKS3_(%"class.std::vector.8"* %72, %"class.std::vector.8"* dereferenceable(24) %70)
  %74 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %6
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %74, align 8
  %76 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %75, i32 1
  %77 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %6
  store %"class.std::vector.8"* %76, %"class.std::vector.8"** %77, align 8
  %78 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %5
  %79 = load %"class.std::vector.8"*, %"class.std::vector.8"** %78, align 8
  %80 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %79, i32 1
  %81 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %5
  store %"class.std::vector.8"* %80, %"class.std::vector.8"** %81, align 8
  store i32 881047957, i32* %18
  br label %185

; <label>:82:                                     ; preds = %19
  %83 = load i32, i32* @x.420
  %84 = load i32, i32* @y.421
  %85 = add i32 %83, 7457441
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 7457441
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 -23716342, i32 64895780
  store i32 %109, i32* %18
  br label %185

; <label>:110:                                    ; preds = %19
  %111 = load volatile i64*, i64** %4
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 0, -1
  %114 = sub i64 %112, %113
  %115 = add nsw i64 %112, -1
  %116 = load volatile i64*, i64** %4
  store i64 %114, i64* %116, align 8
  %117 = load i32, i32* @x.420
  %118 = load i32, i32* @y.421
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 -998531387, i32 64895780
  store i32 %130, i32* %18
  br label %185

; <label>:131:                                    ; preds = %19
  store i32 -1618151842, i32* %18
  br label %185

; <label>:132:                                    ; preds = %19
  %133 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %5
  %134 = load %"class.std::vector.8"*, %"class.std::vector.8"** %133, align 8
  ret %"class.std::vector.8"* %134

; <label>:135:                                    ; preds = %19
  %136 = alloca %"class.std::vector.8"*, align 8
  %137 = alloca %"class.std::vector.8"*, align 8
  %138 = alloca %"class.std::vector.8"*, align 8
  %139 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %136, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %137, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %138, align 8
  %140 = load %"class.std::vector.8"*, %"class.std::vector.8"** %137, align 8
  %141 = load %"class.std::vector.8"*, %"class.std::vector.8"** %136, align 8
  %142 = ptrtoint %"class.std::vector.8"* %140 to i64
  %143 = ptrtoint %"class.std::vector.8"* %141 to i64
  %144 = add i64 0, 9098546639954131400
  %145 = sub i64 %144, %142
  %146 = sub i64 %145, 9098546639954131400
  %147 = sub i64 0, %142
  %148 = sub i64 0, %143
  %149 = sub i64 %146, %148
  %150 = add i64 %146, %143
  %151 = sub i64 %142, 561945225505638092
  %152 = sub i64 %151, %143
  %153 = add i64 %152, 561945225505638092
  %154 = sub i64 %142, %143
  %155 = shl i64 %153, 24
  %156 = sub i64 0, -5093981976423723568
  %157 = sub i64 %156, %153
  %158 = add i64 %157, -5093981976423723568
  %159 = sub i64 0, %153
  %160 = add i64 %158, -1077368683774025737
  %161 = add i64 %160, 24
  %162 = sub i64 %161, -1077368683774025737
  %163 = add i64 %158, 24
  %164 = sub i64 0, 24
  %165 = add i64 %153, %164
  %166 = sub i64 %153, 24
  %167 = mul i64 %165, 24
  %168 = sdiv exact i64 %153, 24
  store i64 %168, i64* %139, align 8
  store i32 1080455783, i32* %18
  br label %185

; <label>:169:                                    ; preds = %19
  %170 = load volatile i64*, i64** %4
  %171 = load i64, i64* %170, align 8
  %172 = shl i64 %171, -1
  %173 = sub i64 0, %171
  %174 = add i64 0, %173
  %175 = sub i64 0, %171
  %176 = sub i64 0, -1
  %177 = sub i64 %174, %176
  %178 = add i64 %174, -1
  %179 = sub i64 0, %171
  %180 = sub i64 0, -1
  %181 = add i64 %179, %180
  %182 = sub i64 0, %181
  %183 = add nsw i64 %171, -1
  %184 = load volatile i64*, i64** %4
  store i64 %182, i64* %184, align 8
  store i32 -23716342, i32* %18
  br label %185

; <label>:185:                                    ; preds = %169, %135, %131, %110, %82, %68, %63, %62, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EEaSERKS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.Solve::edge"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %7, align 8
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %17, %"class.std::vector.8"** %5
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %18, %"class.std::vector.8"** %4
  %19 = alloca i32
  store i32 1060340402, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %232
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1060340402, label %23
    i32 1436274052, label %28
    i32 1455023686, label %43
    i32 1523541107, label %65
    i32 -1630767735, label %68
    i32 101452197, label %134
    i32 651208612, label %140
    i32 1961397435, label %168
    i32 790369850, label %210
    i32 -1145975989, label %211
    i32 -639283089, label %223
    i32 1989837854, label %225
  ]

; <label>:22:                                     ; preds = %20
  br label %232

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %25 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %26 = icmp ne %"class.std::vector.8"* %25, %24
  %27 = select i1 %26, i32 1436274052, i32 -639283089
  store i32 %27, i32* %19
  br label %232

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.422
  %30 = load i32, i32* @y.423
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1455023686, i32 1989837854
  store i32 %42, i32* %19
  br label %232

; <label>:43:                                     ; preds = %20
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %45 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %44) #3
  store i64 %45, i64* %8, align 8
  %46 = load i64, i64* %8, align 8
  %47 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %48 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"* %47) #3
  %49 = icmp ugt i64 %46, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.422
  %51 = load i32, i32* @y.423
  %52 = add i32 %50, -1101500302
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1101500302
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1523541107, i32 1989837854
  store i32 %64, i32* %19
  br label %232

; <label>:65:                                     ; preds = %20
  %66 = load volatile i1, i1* %3
  %67 = select i1 %66, i32 -1630767735, i32 101452197
  store i32 %67, i32* %19
  br label %232

; <label>:68:                                     ; preds = %20
  %69 = load i64, i64* %8, align 8
  %70 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %71 = call %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %70) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %10, i32 0, i32 0
  store %"struct.Solve::edge"* %71, %"struct.Solve::edge"** %72, align 8
  %73 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %74 = call %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %73) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %11, i32 0, i32 0
  store %"struct.Solve::edge"* %74, %"struct.Solve::edge"** %75, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %10, i32 0, i32 0
  %77 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %76, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %11, i32 0, i32 0
  %79 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %78, align 8
  %80 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %81 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.8"* %80, i64 %69, %"struct.Solve::edge"* %77, %"struct.Solve::edge"* %79)
  store %"struct.Solve::edge"* %81, %"struct.Solve::edge"** %9, align 8
  %82 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %83 = bitcast %"class.std::vector.8"* %82 to %"struct.std::_Vector_base.9"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %85, align 8
  %87 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %88 = bitcast %"class.std::vector.8"* %87 to %"struct.std::_Vector_base.9"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %89, i32 0, i32 1
  %91 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %90, align 8
  %92 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %93 = bitcast %"class.std::vector.8"* %92 to %"struct.std::_Vector_base.9"*
  %94 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %93) #3
  call void @_ZSt8_DestroyIPN5Solve4edgeES1_EvT_S3_RSaIT0_E(%"struct.Solve::edge"* %86, %"struct.Solve::edge"* %91, %"class.std::allocator.10"* dereferenceable(1) %94)
  %95 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %96 = bitcast %"class.std::vector.8"* %95 to %"struct.std::_Vector_base.9"*
  %97 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %98 = bitcast %"class.std::vector.8"* %97 to %"struct.std::_Vector_base.9"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %99, i32 0, i32 0
  %101 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %100, align 8
  %102 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %103 = bitcast %"class.std::vector.8"* %102 to %"struct.std::_Vector_base.9"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %104, i32 0, i32 2
  %106 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %105, align 8
  %107 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %108 = bitcast %"class.std::vector.8"* %107 to %"struct.std::_Vector_base.9"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %109, i32 0, i32 0
  %111 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %110, align 8
  %112 = ptrtoint %"struct.Solve::edge"* %106 to i64
  %113 = ptrtoint %"struct.Solve::edge"* %111 to i64
  %114 = sub i64 0, %113
  %115 = add i64 %112, %114
  %116 = sub i64 %112, %113
  %117 = sdiv exact i64 %115, 8
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %96, %"struct.Solve::edge"* %101, i64 %117)
  %118 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %9, align 8
  %119 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %120 = bitcast %"class.std::vector.8"* %119 to %"struct.std::_Vector_base.9"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %121, i32 0, i32 0
  store %"struct.Solve::edge"* %118, %"struct.Solve::edge"** %122, align 8
  %123 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %124 = bitcast %"class.std::vector.8"* %123 to %"struct.std::_Vector_base.9"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %125, i32 0, i32 0
  %127 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %126, align 8
  %128 = load i64, i64* %8, align 8
  %129 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %127, i64 %128
  %130 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %131 = bitcast %"class.std::vector.8"* %130 to %"struct.std::_Vector_base.9"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %132, i32 0, i32 2
  store %"struct.Solve::edge"* %129, %"struct.Solve::edge"** %133, align 8
  store i32 -1145975989, i32* %19
  br label %232

; <label>:134:                                    ; preds = %20
  %135 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %136 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %135) #3
  %137 = load i64, i64* %8, align 8
  %138 = icmp uge i64 %136, %137
  %139 = select i1 %138, i32 651208612, i32 1961397435
  store i32 %139, i32* %19
  br label %232

; <label>:140:                                    ; preds = %20
  %141 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %142 = call %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %141) #3
  %143 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %13, i32 0, i32 0
  store %"struct.Solve::edge"* %142, %"struct.Solve::edge"** %143, align 8
  %144 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %145 = call %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %144) #3
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %14, i32 0, i32 0
  store %"struct.Solve::edge"* %145, %"struct.Solve::edge"** %146, align 8
  %147 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %148 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %147) #3
  %149 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Solve::edge"* %148, %"struct.Solve::edge"** %149, align 8
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %13, i32 0, i32 0
  %151 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %150, align 8
  %152 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %14, i32 0, i32 0
  %153 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %152, align 8
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %155 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %154, align 8
  %156 = call %"struct.Solve::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.Solve::edge"* %151, %"struct.Solve::edge"* %153, %"struct.Solve::edge"* %155)
  %157 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.Solve::edge"* %156, %"struct.Solve::edge"** %157, align 8
  %158 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %159 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %158) #3
  %160 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %"struct.Solve::edge"* %159, %"struct.Solve::edge"** %160, align 8
  %161 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %162 = bitcast %"class.std::vector.8"* %161 to %"struct.std::_Vector_base.9"*
  %163 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %162) #3
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %165 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %164, align 8
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %167 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %166, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.Solve::edge"* %165, %"struct.Solve::edge"* %167, %"class.std::allocator.10"* dereferenceable(1) %163)
  store i32 790369850, i32* %19
  br label %232

; <label>:168:                                    ; preds = %20
  %169 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %170 = bitcast %"class.std::vector.8"* %169 to %"struct.std::_Vector_base.9"*
  %171 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %171, i32 0, i32 0
  %173 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %172, align 8
  %174 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %175 = bitcast %"class.std::vector.8"* %174 to %"struct.std::_Vector_base.9"*
  %176 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %175, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %176, i32 0, i32 0
  %178 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %177, align 8
  %179 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %180 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %179) #3
  %181 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %178, i64 %180
  %182 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %183 = bitcast %"class.std::vector.8"* %182 to %"struct.std::_Vector_base.9"*
  %184 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %183, i32 0, i32 0
  %185 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %184, i32 0, i32 0
  %186 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %185, align 8
  %187 = call %"struct.Solve::edge"* @_ZSt4copyIPN5Solve4edgeES2_ET0_T_S4_S3_(%"struct.Solve::edge"* %173, %"struct.Solve::edge"* %181, %"struct.Solve::edge"* %186)
  %188 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %189 = bitcast %"class.std::vector.8"* %188 to %"struct.std::_Vector_base.9"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %189, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %190, i32 0, i32 0
  %192 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %191, align 8
  %193 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %194 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %193) #3
  %195 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %192, i64 %194
  %196 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %197 = bitcast %"class.std::vector.8"* %196 to %"struct.std::_Vector_base.9"*
  %198 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %198, i32 0, i32 1
  %200 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %199, align 8
  %201 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %202 = bitcast %"class.std::vector.8"* %201 to %"struct.std::_Vector_base.9"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %203, i32 0, i32 1
  %205 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %204, align 8
  %206 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %207 = bitcast %"class.std::vector.8"* %206 to %"struct.std::_Vector_base.9"*
  %208 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %207) #3
  %209 = call %"struct.Solve::edge"* @_ZSt22__uninitialized_copy_aIPN5Solve4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.Solve::edge"* %195, %"struct.Solve::edge"* %200, %"struct.Solve::edge"* %205, %"class.std::allocator.10"* dereferenceable(1) %208)
  store i32 790369850, i32* %19
  br label %232

; <label>:210:                                    ; preds = %20
  store i32 -1145975989, i32* %19
  br label %232

; <label>:211:                                    ; preds = %20
  %212 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %213 = bitcast %"class.std::vector.8"* %212 to %"struct.std::_Vector_base.9"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %214, i32 0, i32 0
  %216 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %215, align 8
  %217 = load i64, i64* %8, align 8
  %218 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %216, i64 %217
  %219 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %220 = bitcast %"class.std::vector.8"* %219 to %"struct.std::_Vector_base.9"*
  %221 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %220, i32 0, i32 0
  %222 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %221, i32 0, i32 1
  store %"struct.Solve::edge"* %218, %"struct.Solve::edge"** %222, align 8
  store i32 -639283089, i32* %19
  br label %232

; <label>:223:                                    ; preds = %20
  %224 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  ret %"class.std::vector.8"* %224

; <label>:225:                                    ; preds = %20
  %226 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %227 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %226) #3
  store i64 %227, i64* %8, align 8
  %228 = load i64, i64* %8, align 8
  %229 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %230 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"* %229) #3
  %231 = icmp ugt i64 %228, %230
  store i32 1455023686, i32* %19
  br label %232

; <label>:232:                                    ; preds = %225, %211, %210, %168, %140, %134, %68, %65, %43, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %10, align 8
  %12 = ptrtoint %"struct.Solve::edge"* %7 to i64
  %13 = ptrtoint %"struct.Solve::edge"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.8"*, i64, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.426
  %6 = load i32, i32* @y.427
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %201

; <label>:18:                                     ; preds = %4, %201
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %21 = alloca %"class.std::vector.8"*, align 8
  %22 = alloca i64, align 8
  %23 = alloca %"struct.Solve::edge"*, align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %26 = alloca i8*
  %27 = alloca i32
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %19, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %28, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %20, i32 0, i32 0
  store %"struct.Solve::edge"* %3, %"struct.Solve::edge"** %29, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %21, align 8
  store i64 %1, i64* %22, align 8
  %30 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %31 = bitcast %"class.std::vector.8"* %30 to %"struct.std::_Vector_base.9"*
  %32 = load i64, i64* %22, align 8
  %33 = call %"struct.Solve::edge"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %31, i64 %32)
  store %"struct.Solve::edge"* %33, %"struct.Solve::edge"** %23, align 8
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %24 to i8*
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 8, i1 false)
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %25 to i8*
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %23, align 8
  %39 = bitcast %"class.std::vector.8"* %30 to %"struct.std::_Vector_base.9"*
  %40 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %39) #3
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %24, i32 0, i32 0
  %42 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %41, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %25, i32 0, i32 0
  %44 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %43, align 8
  %45 = load i32, i32* @x.426
  %46 = load i32, i32* @y.427
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %201

; <label>:70:                                     ; preds = %18
  %71 = invoke %"struct.Solve::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Solve::edge"* %42, %"struct.Solve::edge"* %44, %"struct.Solve::edge"* %38, %"class.std::allocator.10"* dereferenceable(1) %40)
          to label %72 unwind label %104

; <label>:72:                                     ; preds = %70
  %73 = load i32, i32* @x.426
  %74 = load i32, i32* @y.427
  %75 = sub i32 %73, -545565665
  %76 = sub i32 %75, 1
  %77 = add i32 %76, -545565665
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %228

; <label>:87:                                     ; preds = %72, %228
  %88 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %23, align 8
  %89 = load i32, i32* @x.426
  %90 = load i32, i32* @y.427
  %91 = sub i32 %89, 1838106586
  %92 = sub i32 %91, 1
  %93 = add i32 %92, 1838106586
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %228

; <label>:103:                                    ; preds = %87
  ret %"struct.Solve::edge"* %88

; <label>:104:                                    ; preds = %70
  %105 = landingpad { i8*, i32 }
          catch i8* null
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %26, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %27, align 4
  br label %108

; <label>:108:                                    ; preds = %104
  %109 = load i32, i32* @x.426
  %110 = load i32, i32* @y.427
  %111 = add i32 %109, -298263260
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, -298263260
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %230

; <label>:123:                                    ; preds = %108, %230
  %124 = load i8*, i8** %26, align 8
  %125 = call i8* @__cxa_begin_catch(i8* %124) #3
  %126 = bitcast %"class.std::vector.8"* %30 to %"struct.std::_Vector_base.9"*
  %127 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %23, align 8
  %128 = load i64, i64* %22, align 8
  %129 = load i32, i32* @x.426
  %130 = load i32, i32* @y.427
  %131 = add i32 %129, 1183117172
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 1183117172
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %230

; <label>:143:                                    ; preds = %123
  invoke void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %126, %"struct.Solve::edge"* %127, i64 %128)
          to label %144 unwind label %186

; <label>:144:                                    ; preds = %143
  %145 = load i32, i32* @x.426
  %146 = load i32, i32* @y.427
  %147 = add i32 %145, 569781887
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 569781887
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %236

; <label>:171:                                    ; preds = %144, %236
  %172 = load i32, i32* @x.426
  %173 = load i32, i32* @y.427
  %174 = sub i32 0, 1
  %175 = add i32 %172, %174
  %176 = sub i32 %172, 1
  %177 = mul i32 %172, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %173, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %236

; <label>:185:                                    ; preds = %171
  invoke void @__cxa_rethrow() #13
          to label %200 unwind label %186

; <label>:186:                                    ; preds = %185, %143
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %26, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %27, align 4
  invoke void @__cxa_end_catch()
          to label %190 unwind label %197

; <label>:190:                                    ; preds = %186
  br label %192
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:192:                                    ; preds = %190
  %193 = load i8*, i8** %26, align 8
  %194 = load i32, i32* %27, align 4
  %195 = insertvalue { i8*, i32 } undef, i8* %193, 0
  %196 = insertvalue { i8*, i32 } %195, i32 %194, 1
  resume { i8*, i32 } %196

; <label>:197:                                    ; preds = %186
  %198 = landingpad { i8*, i32 }
          catch i8* null
  %199 = extractvalue { i8*, i32 } %198, 0
  call void @__clang_call_terminate(i8* %199) #10
  unreachable

; <label>:200:                                    ; preds = %185
  unreachable

; <label>:201:                                    ; preds = %18, %4
  %202 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %203 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %204 = alloca %"class.std::vector.8"*, align 8
  %205 = alloca i64, align 8
  %206 = alloca %"struct.Solve::edge"*, align 8
  %207 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %208 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %209 = alloca i8*
  %210 = alloca i32
  %211 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %202, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %211, align 8
  %212 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %203, i32 0, i32 0
  store %"struct.Solve::edge"* %3, %"struct.Solve::edge"** %212, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %204, align 8
  store i64 %1, i64* %205, align 8
  %213 = load %"class.std::vector.8"*, %"class.std::vector.8"** %204, align 8
  %214 = bitcast %"class.std::vector.8"* %213 to %"struct.std::_Vector_base.9"*
  %215 = load i64, i64* %205, align 8
  %216 = call %"struct.Solve::edge"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %214, i64 %215)
  store %"struct.Solve::edge"* %216, %"struct.Solve::edge"** %206, align 8
  %217 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %207 to i8*
  %218 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %217, i8* %218, i64 8, i32 8, i1 false)
  %219 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %208 to i8*
  %220 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %219, i8* %220, i64 8, i32 8, i1 false)
  %221 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %206, align 8
  %222 = bitcast %"class.std::vector.8"* %213 to %"struct.std::_Vector_base.9"*
  %223 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %222) #3
  %224 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %207, i32 0, i32 0
  %225 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %224, align 8
  %226 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %208, i32 0, i32 0
  %227 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %226, align 8
  br label %18

; <label>:228:                                    ; preds = %87, %72
  %229 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %23, align 8
  br label %87

; <label>:230:                                    ; preds = %123, %108
  %231 = load i8*, i8** %26, align 8
  %232 = call i8* @__cxa_begin_catch(i8* %231) #3
  %233 = bitcast %"class.std::vector.8"* %30 to %"struct.std::_Vector_base.9"*
  %234 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %23, align 8
  %235 = load i64, i64* %22, align 8
  br label %123

; <label>:236:                                    ; preds = %171, %144
  br label %171
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %10, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %16 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.Solve::edge"* %16, %"struct.Solve::edge"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.430
  %8 = load i32, i32* @y.431
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -911883845, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %131
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -911883845, label %20
    i32 -1744468968, label %40
    i32 -373978792, label %92
    i32 -1206850465, label %94
  ]

; <label>:19:                                     ; preds = %17
  br label %131

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1744468968, i32 -1206850465
  store i32 %39, i32* %16
  br label %131

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %42, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %50, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %43, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %51, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %46 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %46, i32 0, i32 0
  %56 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %55, align 8
  %57 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %56)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %45, i32 0, i32 0
  store %"struct.Solve::edge"* %57, %"struct.Solve::edge"** %58, align 8
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %48 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %48, i32 0, i32 0
  %62 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %61, align 8
  %63 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %62)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %47, i32 0, i32 0
  store %"struct.Solve::edge"* %63, %"struct.Solve::edge"** %64, align 8
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator"* %49 to i8*
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 8, i1 false)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %45, i32 0, i32 0
  %68 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %67, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %47, i32 0, i32 0
  %70 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %49, i32 0, i32 0
  %72 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %71, align 8
  %73 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.Solve::edge"* %68, %"struct.Solve::edge"* %70, %"struct.Solve::edge"* %72)
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %"struct.Solve::edge"* %73, %"struct.Solve::edge"** %74, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %76 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %75, align 8
  store %"struct.Solve::edge"* %76, %"struct.Solve::edge"** %4
  %77 = load i32, i32* @x.430
  %78 = load i32, i32* @y.431
  %79 = sub i32 %77, 951653825
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 951653825
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 -373978792, i32 -1206850465
  store i32 %91, i32* %16
  br label %131

; <label>:92:                                     ; preds = %17
  %93 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %93

; <label>:94:                                     ; preds = %17
  %95 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %97 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %98 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %99 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %100 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %101 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %102 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %103 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %96, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %104, align 8
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %97, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %105, align 8
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %98, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %106, align 8
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %100 to i8*
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 8, i1 false)
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %100, i32 0, i32 0
  %110 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %109, align 8
  %111 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %110)
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %99, i32 0, i32 0
  store %"struct.Solve::edge"* %111, %"struct.Solve::edge"** %112, align 8
  %113 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %102 to i8*
  %114 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 8, i32 8, i1 false)
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %102, i32 0, i32 0
  %116 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %115, align 8
  %117 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %116)
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %101, i32 0, i32 0
  store %"struct.Solve::edge"* %117, %"struct.Solve::edge"** %118, align 8
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator"* %103 to i8*
  %120 = bitcast %"class.__gnu_cxx::__normal_iterator"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 8, i32 8, i1 false)
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %99, i32 0, i32 0
  %122 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %121, align 8
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %101, i32 0, i32 0
  %124 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %123, align 8
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %103, i32 0, i32 0
  %126 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %125, align 8
  %127 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.Solve::edge"* %122, %"struct.Solve::edge"* %124, %"struct.Solve::edge"* %126)
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %95, i32 0, i32 0
  store %"struct.Solve::edge"* %127, %"struct.Solve::edge"** %128, align 8
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %95, i32 0, i32 0
  %130 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %129, align 8
  store i32 -1744468968, i32* %16
  br label %131

; <label>:131:                                    ; preds = %94, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt4copyIPN5Solve4edgeES2_ET0_T_S4_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.432
  %8 = load i32, i32* @y.433
  %9 = sub i32 %7, -558899126
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -558899126
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1755303820, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %78
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1755303820, label %21
    i32 -2075454380, label %41
    i32 -462060797, label %66
    i32 647233758, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %78

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -2075454380, i32 647233758
  store i32 %40, i32* %17
  br label %78

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.Solve::edge"*, align 8
  %43 = alloca %"struct.Solve::edge"*, align 8
  %44 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %42, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %43, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %44, align 8
  %45 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %42, align 8
  %46 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIPN5Solve4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %45)
  %47 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %43, align 8
  %48 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIPN5Solve4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %47)
  %49 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %44, align 8
  %50 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %46, %"struct.Solve::edge"* %48, %"struct.Solve::edge"* %49)
  store %"struct.Solve::edge"* %50, %"struct.Solve::edge"** %4
  %51 = load i32, i32* @x.432
  %52 = load i32, i32* @y.433
  %53 = add i32 %51, 389212506
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 389212506
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -462060797, i32 647233758
  store i32 %65, i32* %17
  br label %78

; <label>:66:                                     ; preds = %18
  %67 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %67

; <label>:68:                                     ; preds = %18
  %69 = alloca %"struct.Solve::edge"*, align 8
  %70 = alloca %"struct.Solve::edge"*, align 8
  %71 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %69, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %70, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %71, align 8
  %72 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %69, align 8
  %73 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIPN5Solve4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %72)
  %74 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %70, align 8
  %75 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIPN5Solve4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %74)
  %76 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %71, align 8
  %77 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %73, %"struct.Solve::edge"* %75, %"struct.Solve::edge"* %76)
  store i32 -2075454380, i32* %17
  br label %78

; <label>:78:                                     ; preds = %68, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt22__uninitialized_copy_aIPN5Solve4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %6, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %11 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %12 = call %"struct.Solve::edge"* @_ZSt18uninitialized_copyIPN5Solve4edgeES2_ET0_T_S4_S3_(%"struct.Solve::edge"* %9, %"struct.Solve::edge"* %10, %"struct.Solve::edge"* %11)
  ret %"struct.Solve::edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %14 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %16 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.Solve::edge"* %14, %"struct.Solve::edge"* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.438
  %6 = load i32, i32* @y.439
  %7 = add i32 %5, 367612168
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 367612168
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -715253857, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -715253857, label %19
    i32 -566102649, label %27
    i32 -1489021745, label %46
    i32 -475465071, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -566102649, i32 -475465071
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %31, align 8
  %32 = load i32, i32* @x.438
  %33 = load i32, i32* @y.439
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1489021745, i32 -475465071
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %48, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %50, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %49, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %51, align 8
  store i32 -566102649, i32* %15
  br label %52

; <label>:52:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.Solve::edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %9, i32 0, i32 0
  %18 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %17, align 8
  %19 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %10, i32 0, i32 0
  %23 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %22, align 8
  %24 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Solve::edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %28 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %27, align 8
  %29 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %28)
  %30 = call %"struct.Solve::edge"* @_ZSt13__copy_move_aILb0EPKN5Solve4edgeEPS1_ET1_T0_S6_S5_(%"struct.Solve::edge"* %19, %"struct.Solve::edge"* %24, %"struct.Solve::edge"* %29)
  store %"struct.Solve::edge"* %30, %"struct.Solve::edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %4, %"struct.Solve::edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %32 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %31, align 8
  ret %"struct.Solve::edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %9 = call %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Solve::edge"* %8)
  ret %"struct.Solve::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.Solve::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.Solve::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.Solve::edge"** %1, %"struct.Solve::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.Solve::edge"**, %"struct.Solve::edge"*** %4, align 8
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  store %"struct.Solve::edge"* %8, %"struct.Solve::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Solve::edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  ret %"struct.Solve::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.Solve::edge"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb0EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %8 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %7)
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %9)
  %11 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %12 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %11)
  %13 = call %"struct.Solve::edge"* @_ZSt13__copy_move_aILb0EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %8, %"struct.Solve::edge"* %10, %"struct.Solve::edge"* %12)
  ret %"struct.Solve::edge"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt12__miter_baseIPN5Solve4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"*) #5 comdat {
  %2 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %2, align 8
  %3 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %2, align 8
  %4 = call %"struct.Solve::edge"* @_ZNSt10_Iter_baseIPN5Solve4edgeELb0EE7_S_baseES2_(%"struct.Solve::edge"* %3)
  ret %"struct.Solve::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt13__copy_move_aILb0EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %11 = call %"struct.Solve::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Solve4edgeEEEPT_PKS5_S8_S6_(%"struct.Solve::edge"* %8, %"struct.Solve::edge"* %9, %"struct.Solve::edge"* %10)
  ret %"struct.Solve::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt18uninitialized_copyIPN5Solve4edgeES2_ET0_T_S4_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %11 = call %"struct.Solve::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Solve4edgeES4_EET0_T_S6_S5_(%"struct.Solve::edge"* %8, %"struct.Solve::edge"* %9, %"struct.Solve::edge"* %10)
  ret %"struct.Solve::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Solve4edgeES4_EET0_T_S6_S5_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.458
  %8 = load i32, i32* @y.459
  %9 = sub i32 %7, 1756326355
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1756326355
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1298674555, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %73
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1298674555, label %21
    i32 313267299, label %41
    i32 -1215758408, label %63
    i32 1799223718, label %65
  ]

; <label>:20:                                     ; preds = %18
  br label %73

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 313267299, i32 1799223718
  store i32 %40, i32* %17
  br label %73

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.Solve::edge"*, align 8
  %43 = alloca %"struct.Solve::edge"*, align 8
  %44 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %42, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %43, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %44, align 8
  %45 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %42, align 8
  %46 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %43, align 8
  %47 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %44, align 8
  %48 = call %"struct.Solve::edge"* @_ZSt4copyIPN5Solve4edgeES2_ET0_T_S4_S3_(%"struct.Solve::edge"* %45, %"struct.Solve::edge"* %46, %"struct.Solve::edge"* %47)
  store %"struct.Solve::edge"* %48, %"struct.Solve::edge"** %4
  %49 = load i32, i32* @x.458
  %50 = load i32, i32* @y.459
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1215758408, i32 1799223718
  store i32 %62, i32* %17
  br label %73

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %64

; <label>:65:                                     ; preds = %18
  %66 = alloca %"struct.Solve::edge"*, align 8
  %67 = alloca %"struct.Solve::edge"*, align 8
  %68 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %66, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %67, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %68, align 8
  %69 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %66, align 8
  %70 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %67, align 8
  %71 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %68, align 8
  %72 = call %"struct.Solve::edge"* @_ZSt4copyIPN5Solve4edgeES2_ET0_T_S4_S3_(%"struct.Solve::edge"* %69, %"struct.Solve::edge"* %70, %"struct.Solve::edge"* %71)
  store i32 313267299, i32* %17
  br label %73

; <label>:73:                                     ; preds = %65, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESB_(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.460
  %6 = load i32, i32* @y.461
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1436057851, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1436057851, label %18
    i32 470690624, label %26
    i32 -1368498382, label %57
    i32 2113801282, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 470690624, i32 2113801282
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %27, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %27) #3
  %30 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  store %"class.std::vector.8"* %30, %"class.std::vector.8"** %2
  %31 = load i32, i32* @x.460
  %32 = load i32, i32* @y.461
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1368498382, i32 2113801282
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %60, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %61, align 8
  %62 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %60) #3
  %63 = load %"class.std::vector.8"*, %"class.std::vector.8"** %62, align 8
  store i32 470690624, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESA_(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.462
  %6 = load i32, i32* @y.463
  %7 = sub i32 %5, -2145758012
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2145758012
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -970862112, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -970862112, label %19
    i32 1762639456, label %27
    i32 1193994767, label %58
    i32 142603272, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1762639456, i32 142603272
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %28, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  %30 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %28) #3
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %31, %"class.std::vector.8"** %2
  %32 = load i32, i32* @x.462
  %33 = load i32, i32* @y.463
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1193994767, i32 142603272
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %61, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %62, align 8
  %63 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Solve4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %61) #3
  %64 = load %"class.std::vector.8"*, %"class.std::vector.8"** %63, align 8
  store i32 1762639456, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Solve4edgeESaIS4_EES2_IS6_SaIS6_EEEELb0EE7_S_baseESB_(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  ret %"class.std::vector.8"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt14__copy_move_a2ILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.466
  %8 = load i32, i32* @y.467
  %9 = sub i32 %7, 1012898918
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1012898918
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1703777312, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %68
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1703777312, label %21
    i32 -1516036891, label %29
    i32 -977275074, label %55
    i32 21373301, label %57
  ]

; <label>:20:                                     ; preds = %18
  br label %68

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1516036891, i32 21373301
  store i32 %28, i32* %17
  br label %68

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca %"class.std::vector.8"*, align 8
  %32 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %31, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %32, align 8
  %33 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  %34 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %33)
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %36 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %35)
  %37 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  %38 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %37)
  %39 = call %"class.std::vector.8"* @_ZSt13__copy_move_aILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %34, %"class.std::vector.8"* %36, %"class.std::vector.8"* %38)
  store %"class.std::vector.8"* %39, %"class.std::vector.8"** %4
  %40 = load i32, i32* @x.466
  %41 = load i32, i32* @y.467
  %42 = add i32 %40, 804795762
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 804795762
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -977275074, i32 21373301
  store i32 %54, i32* %17
  br label %68

; <label>:55:                                     ; preds = %18
  %56 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %56

; <label>:57:                                     ; preds = %18
  %58 = alloca %"class.std::vector.8"*, align 8
  %59 = alloca %"class.std::vector.8"*, align 8
  %60 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %58, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %59, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %60, align 8
  %61 = load %"class.std::vector.8"*, %"class.std::vector.8"** %58, align 8
  %62 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %61)
  %63 = load %"class.std::vector.8"*, %"class.std::vector.8"** %59, align 8
  %64 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %63)
  %65 = load %"class.std::vector.8"*, %"class.std::vector.8"** %60, align 8
  %66 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %65)
  %67 = call %"class.std::vector.8"* @_ZSt13__copy_move_aILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %62, %"class.std::vector.8"* %64, %"class.std::vector.8"* %66)
  store i32 -1516036891, i32* %17
  br label %68

; <label>:68:                                     ; preds = %57, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"*) #5 comdat {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.468
  %6 = load i32, i32* @y.469
  %7 = add i32 %5, -363751019
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -363751019
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 741349933, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 741349933, label %19
    i32 -650720050, label %39
    i32 2086331003, label %57
    i32 155720238, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -650720050, i32 155720238
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %42 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Solve4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %41)
  store %"class.std::vector.8"* %42, %"class.std::vector.8"** %2
  %43 = load i32, i32* @x.468
  %44 = load i32, i32* @y.469
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 2086331003, i32 155720238
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %60, align 8
  %61 = load %"class.std::vector.8"*, %"class.std::vector.8"** %60, align 8
  %62 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Solve4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %61)
  store i32 -650720050, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt13__copy_move_aILb0EPSt6vectorIN5Solve4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %11 = call %"class.std::vector.8"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN5Solve4edgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.8"* %8, %"class.std::vector.8"* %9, %"class.std::vector.8"* %10)
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Solve4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.472
  %6 = load i32, i32* @y.473
  %7 = add i32 %5, -1088980843
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1088980843
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2024234132, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2024234132, label %19
    i32 -115490440, label %27
    i32 1249351357, label %45
    i32 -1964990998, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -115490440, i32 -1964990998
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %30 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Solve4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %29)
  store %"class.std::vector.8"* %30, %"class.std::vector.8"** %2
  %31 = load i32, i32* @x.472
  %32 = load i32, i32* @y.473
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1249351357, i32 -1964990998
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %48, align 8
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  %50 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Solve4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %49)
  store i32 -115490440, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN5Solve4edgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %10 = ptrtoint %"class.std::vector.8"* %8 to i64
  %11 = ptrtoint %"class.std::vector.8"* %9 to i64
  %12 = sub i64 0, %11
  %13 = add i64 %10, %12
  %14 = sub i64 %10, %11
  %15 = sdiv exact i64 %13, 24
  store i64 %15, i64* %7, align 8
  %16 = alloca i32
  store i32 -396584578, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %41
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -396584578, label %20
    i32 1068906328, label %24
    i32 -1737438262, label %32
    i32 1491535173, label %39
  ]

; <label>:19:                                     ; preds = %17
  br label %41

; <label>:20:                                     ; preds = %17
  %21 = load i64, i64* %7, align 8
  %22 = icmp sgt i64 %21, 0
  %23 = select i1 %22, i32 1068906328, i32 1491535173
  store i32 %23, i32* %16
  br label %41

; <label>:24:                                     ; preds = %17
  %25 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %26 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %27 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EEaSERKS3_(%"class.std::vector.8"* %26, %"class.std::vector.8"* dereferenceable(24) %25)
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %29 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %28, i32 1
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %4, align 8
  %30 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %31 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %30, i32 1
  store %"class.std::vector.8"* %31, %"class.std::vector.8"** %6, align 8
  store i32 -1737438262, i32* %16
  br label %41

; <label>:32:                                     ; preds = %17
  %33 = load i64, i64* %7, align 8
  %34 = sub i64 0, %33
  %35 = sub i64 0, -1
  %36 = add i64 %34, %35
  %37 = sub i64 0, %36
  %38 = add nsw i64 %33, -1
  store i64 %37, i64* %7, align 8
  store i32 -396584578, i32* %16
  br label %41

; <label>:39:                                     ; preds = %17
  %40 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  ret %"class.std::vector.8"* %40

; <label>:41:                                     ; preds = %32, %24, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Solve4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt18uninitialized_copyIPSt6vectorIN5Solve4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.478
  %8 = load i32, i32* @y.479
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1574610739, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1574610739, label %20
    i32 1689346081, label %40
    i32 -1086141076, label %76
    i32 199885187, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1689346081, i32 199885187
  store i32 %39, i32* %16
  br label %87

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  %43 = alloca %"class.std::vector.8"*, align 8
  %44 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %42, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %43, align 8
  store i8 1, i8* %44, align 1
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %46 = load %"class.std::vector.8"*, %"class.std::vector.8"** %42, align 8
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %43, align 8
  %48 = call %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5Solve4edgeESaIS4_EES7_EET0_T_S9_S8_(%"class.std::vector.8"* %45, %"class.std::vector.8"* %46, %"class.std::vector.8"* %47)
  store %"class.std::vector.8"* %48, %"class.std::vector.8"** %4
  %49 = load i32, i32* @x.478
  %50 = load i32, i32* @y.479
  %51 = sub i32 %49, -1410731773
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1410731773
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1086141076, i32 199885187
  store i32 %75, i32* %16
  br label %87

; <label>:76:                                     ; preds = %17
  %77 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %77

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.std::vector.8"*, align 8
  %80 = alloca %"class.std::vector.8"*, align 8
  %81 = alloca %"class.std::vector.8"*, align 8
  %82 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %79, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %80, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load %"class.std::vector.8"*, %"class.std::vector.8"** %79, align 8
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %80, align 8
  %85 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %86 = call %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5Solve4edgeESaIS4_EES7_EET0_T_S9_S8_(%"class.std::vector.8"* %83, %"class.std::vector.8"* %84, %"class.std::vector.8"* %85)
  store i32 1689346081, i32* %16
  br label %87

; <label>:87:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5Solve4edgeESaIS4_EES7_EET0_T_S9_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %10, %"class.std::vector.8"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %171, %3
  %12 = load i32, i32* @x.480
  %13 = load i32, i32* @y.481
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %241

; <label>:25:                                     ; preds = %11, %241
  %26 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %27 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %28 = icmp ne %"class.std::vector.8"* %26, %27
  %29 = load i32, i32* @x.480
  %30 = load i32, i32* @y.481
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %241

; <label>:54:                                     ; preds = %25
  br i1 %28, label %55, label %224

; <label>:55:                                     ; preds = %54
  %56 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %57 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %56) #3
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  invoke void @_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJRS4_EEvPT_DpOT0_(%"class.std::vector.8"* %57, %"class.std::vector.8"* dereferenceable(24) %58)
          to label %59 unwind label %172

; <label>:59:                                     ; preds = %55
  %60 = load i32, i32* @x.480
  %61 = load i32, i32* @y.481
  %62 = sub i32 %60, 1104217210
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1104217210
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %245

; <label>:86:                                     ; preds = %59, %245
  %87 = load i32, i32* @x.480
  %88 = load i32, i32* @y.481
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %245

; <label>:112:                                    ; preds = %86
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i32, i32* @x.480
  %115 = load i32, i32* @y.481
  %116 = add i32 %114, 389978550
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, 389978550
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %246

; <label>:140:                                    ; preds = %113, %246
  %141 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %142 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %141, i32 1
  store %"class.std::vector.8"* %142, %"class.std::vector.8"** %4, align 8
  %143 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %144 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %143, i32 1
  store %"class.std::vector.8"* %144, %"class.std::vector.8"** %7, align 8
  %145 = load i32, i32* @x.480
  %146 = load i32, i32* @y.481
  %147 = sub i32 %145, 94597953
  %148 = sub i32 %147, 1
  %149 = add i32 %148, 94597953
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 true, true
  %158 = and i1 %155, true
  %159 = and i1 %153, %157
  %160 = and i1 %156, true
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 true, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %246

; <label>:171:                                    ; preds = %140
  br label %11

; <label>:172:                                    ; preds = %55
  %173 = landingpad { i8*, i32 }
          catch i8* null
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %8, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %9, align 4
  br label %176

; <label>:176:                                    ; preds = %172
  %177 = load i8*, i8** %8, align 8
  %178 = call i8* @__cxa_begin_catch(i8* %177) #3
  %179 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %180 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %179, %"class.std::vector.8"* %180)
          to label %181 unwind label %226

; <label>:181:                                    ; preds = %176
  %182 = load i32, i32* @x.480
  %183 = load i32, i32* @y.481
  %184 = add i32 %182, 2053797621
  %185 = sub i32 %184, 1
  %186 = sub i32 %185, 2053797621
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %251

; <label>:208:                                    ; preds = %181, %251
  %209 = load i32, i32* @x.480
  %210 = load i32, i32* @y.481
  %211 = add i32 %209, 400932288
  %212 = sub i32 %211, 1
  %213 = sub i32 %212, 400932288
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  br i1 %221, label %223, label %251

; <label>:223:                                    ; preds = %208
  invoke void @__cxa_rethrow() #13
          to label %240 unwind label %226

; <label>:224:                                    ; preds = %54
  %225 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  ret %"class.std::vector.8"* %225

; <label>:226:                                    ; preds = %223, %176
  %227 = landingpad { i8*, i32 }
          cleanup
  %228 = extractvalue { i8*, i32 } %227, 0
  store i8* %228, i8** %8, align 8
  %229 = extractvalue { i8*, i32 } %227, 1
  store i32 %229, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %230 unwind label %237

; <label>:230:                                    ; preds = %226
  br label %232
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:232:                                    ; preds = %230
  %233 = load i8*, i8** %8, align 8
  %234 = load i32, i32* %9, align 4
  %235 = insertvalue { i8*, i32 } undef, i8* %233, 0
  %236 = insertvalue { i8*, i32 } %235, i32 %234, 1
  resume { i8*, i32 } %236

; <label>:237:                                    ; preds = %226
  %238 = landingpad { i8*, i32 }
          catch i8* null
  %239 = extractvalue { i8*, i32 } %238, 0
  call void @__clang_call_terminate(i8* %239) #10
  unreachable

; <label>:240:                                    ; preds = %223
  unreachable

; <label>:241:                                    ; preds = %25, %11
  %242 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %243 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %244 = icmp ne %"class.std::vector.8"* %242, %243
  br label %25

; <label>:245:                                    ; preds = %86, %59
  br label %86

; <label>:246:                                    ; preds = %140, %113
  %247 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %248 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %247, i32 1
  store %"class.std::vector.8"* %248, %"class.std::vector.8"** %4, align 8
  %249 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %250 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %249, i32 1
  store %"class.std::vector.8"* %250, %"class.std::vector.8"** %7, align 8
  br label %140

; <label>:251:                                    ; preds = %208, %181
  br label %208
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJRS4_EEvPT_DpOT0_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.482
  %6 = load i32, i32* @y.483
  %7 = add i32 %5, 1265839856
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1265839856
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1018792534, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1018792534, label %19
    i32 -2056977845, label %39
    i32 1270106583, label %61
    i32 1143646665, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2056977845, i32 1143646665
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  %41 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %41, align 8
  %42 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %43 = bitcast %"class.std::vector.8"* %42 to i8*
  %44 = bitcast i8* %43 to %"class.std::vector.8"*
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %46 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRSt6vectorIN5Solve4edgeESaIS2_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.8"* dereferenceable(24) %45) #3
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %44, %"class.std::vector.8"* dereferenceable(24) %46)
  %47 = load i32, i32* @x.482
  %48 = load i32, i32* @y.483
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1270106583, i32 1143646665
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.8"*, align 8
  %64 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %63, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %64, align 8
  %65 = load %"class.std::vector.8"*, %"class.std::vector.8"** %63, align 8
  %66 = bitcast %"class.std::vector.8"* %65 to i8*
  %67 = bitcast i8* %66 to %"class.std::vector.8"*
  %68 = load %"class.std::vector.8"*, %"class.std::vector.8"** %64, align 8
  %69 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRSt6vectorIN5Solve4edgeESaIS2_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.8"* dereferenceable(24) %68) #3
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %67, %"class.std::vector.8"* dereferenceable(24) %69)
  store i32 -2056977845, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRSt6vectorIN5Solve4edgeESaIS2_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.484
  %6 = load i32, i32* @y.485
  %7 = sub i32 %5, -791290587
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -791290587
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1192029245, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1192029245, label %19
    i32 818023086, label %27
    i32 -328350068, label %57
    i32 -1946911698, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 818023086, i32 -1946911698
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %2
  %30 = load i32, i32* @x.484
  %31 = load i32, i32* @y.485
  %32 = sub i32 %30, -1721578958
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1721578958
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -328350068, i32 -1946911698
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %60, align 8
  %61 = load %"class.std::vector.8"*, %"class.std::vector.8"** %60, align 8
  store i32 818023086, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEmS6_ET_S8_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.486
  %8 = load i32, i32* @y.487
  %9 = sub i32 %7, 1648558301
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1648558301
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1407140761, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1407140761, label %21
    i32 2109368830, label %41
    i32 1534671292, label %77
    i32 -1141149211, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2109368830, i32 -1141149211
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.3"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::vector.3"*, align 8
  %45 = alloca i8, align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"class.std::vector.3"*, %"class.std::vector.3"** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %44, align 8
  %49 = call %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIS2_IN5Solve4edgeESaIS4_EESaIS6_EEmS8_EET_SA_T0_RKT1_(%"class.std::vector.3"* %46, i64 %47, %"class.std::vector.3"* dereferenceable(24) %48)
  store %"class.std::vector.3"* %49, %"class.std::vector.3"** %4
  %50 = load i32, i32* @x.486
  %51 = load i32, i32* @y.487
  %52 = add i32 %50, 323367496
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 323367496
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1534671292, i32 -1141149211
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  ret %"class.std::vector.3"* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca %"class.std::vector.3"*, align 8
  %81 = alloca i64, align 8
  %82 = alloca %"class.std::vector.3"*, align 8
  %83 = alloca i8, align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %80, align 8
  store i64 %1, i64* %81, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %82, align 8
  store i8 1, i8* %83, align 1
  %84 = load %"class.std::vector.3"*, %"class.std::vector.3"** %80, align 8
  %85 = load i64, i64* %81, align 8
  %86 = load %"class.std::vector.3"*, %"class.std::vector.3"** %82, align 8
  %87 = call %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIS2_IN5Solve4edgeESaIS4_EESaIS6_EEmS8_EET_SA_T0_RKT1_(%"class.std::vector.3"* %84, i64 %85, %"class.std::vector.3"* dereferenceable(24) %86)
  store i32 2109368830, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIS2_IN5Solve4edgeESaIS4_EESaIS6_EEmS8_EET_SA_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.488
  %5 = load i32, i32* @y.489
  %6 = sub i32 %4, 538789802
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 538789802
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %311

; <label>:18:                                     ; preds = %3, %311
  %19 = alloca %"class.std::vector.3"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::vector.3"*, align 8
  %22 = alloca %"class.std::vector.3"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %21, align 8
  %25 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  store %"class.std::vector.3"* %25, %"class.std::vector.3"** %22, align 8
  %26 = load i32, i32* @x.488
  %27 = load i32, i32* @y.489
  %28 = add i32 %26, -1882076975
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -1882076975
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %311

; <label>:52:                                     ; preds = %18
  br label %53

; <label>:53:                                     ; preds = %127, %52
  %54 = load i64, i64* %20, align 8
  %55 = icmp ugt i64 %54, 0
  br i1 %55, label %56, label %180

; <label>:56:                                     ; preds = %53
  %57 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  %58 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEPT_RS7_(%"class.std::vector.3"* dereferenceable(24) %57) #3
  %59 = load %"class.std::vector.3"*, %"class.std::vector.3"** %21, align 8
  invoke void @_ZSt10_ConstructISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEJRKS6_EEvPT_DpOT0_(%"class.std::vector.3"* %58, %"class.std::vector.3"* dereferenceable(24) %59)
          to label %60 unwind label %128

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* @x.488
  %62 = load i32, i32* @y.489
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %319

; <label>:74:                                     ; preds = %60, %319
  %75 = load i32, i32* @x.488
  %76 = load i32, i32* @y.489
  %77 = add i32 %75, 1434159233
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 1434159233
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %319

; <label>:89:                                     ; preds = %74
  br label %90

; <label>:90:                                     ; preds = %89
  %91 = load i32, i32* @x.488
  %92 = load i32, i32* @y.489
  %93 = sub i32 %91, 652055936
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 652055936
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %320

; <label>:105:                                    ; preds = %90, %320
  %106 = load i64, i64* %20, align 8
  %107 = add i64 %106, -363094318987170177
  %108 = add i64 %107, -1
  %109 = sub i64 %108, -363094318987170177
  %110 = add i64 %106, -1
  store i64 %109, i64* %20, align 8
  %111 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  %112 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %111, i32 1
  store %"class.std::vector.3"* %112, %"class.std::vector.3"** %22, align 8
  %113 = load i32, i32* @x.488
  %114 = load i32, i32* @y.489
  %115 = sub i32 %113, -1348056139
  %116 = sub i32 %115, 1
  %117 = add i32 %116, -1348056139
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %320

; <label>:127:                                    ; preds = %105
  br label %53

; <label>:128:                                    ; preds = %56
  %129 = load i32, i32* @x.488
  %130 = load i32, i32* @y.489
  %131 = add i32 %129, 622929542
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 622929542
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %343

; <label>:155:                                    ; preds = %128, %343
  %156 = landingpad { i8*, i32 }
          catch i8* null
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %23, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %24, align 4
  %159 = load i32, i32* @x.488
  %160 = load i32, i32* @y.489
  %161 = sub i32 %159, 153468483
  %162 = sub i32 %161, 1
  %163 = add i32 %162, 153468483
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  br i1 %171, label %173, label %343

; <label>:173:                                    ; preds = %155
  br label %174

; <label>:174:                                    ; preds = %173
  %175 = load i8*, i8** %23, align 8
  %176 = call i8* @__cxa_begin_catch(i8* %175) #3
  %177 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %178 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEvT_S8_(%"class.std::vector.3"* %177, %"class.std::vector.3"* %178)
          to label %179 unwind label %182

; <label>:179:                                    ; preds = %174
  invoke void @__cxa_rethrow() #13
          to label %268 unwind label %182

; <label>:180:                                    ; preds = %53
  %181 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  ret %"class.std::vector.3"* %181

; <label>:182:                                    ; preds = %179, %174
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %23, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %186 unwind label %223

; <label>:186:                                    ; preds = %182
  %187 = load i32, i32* @x.488
  %188 = load i32, i32* @y.489
  %189 = add i32 %187, -1534861919
  %190 = sub i32 %189, 1
  %191 = sub i32 %190, -1534861919
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = and i1 %195, %196
  %198 = xor i1 %195, %196
  %199 = or i1 %197, %198
  %200 = or i1 %195, %196
  br i1 %199, label %201, label %347

; <label>:201:                                    ; preds = %186, %347
  %202 = load i32, i32* @x.488
  %203 = load i32, i32* @y.489
  %204 = sub i32 %202, -1250917952
  %205 = sub i32 %204, 1
  %206 = add i32 %205, -1250917952
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %347

; <label>:216:                                    ; preds = %201
  br label %218
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:218:                                    ; preds = %216
  %219 = load i8*, i8** %23, align 8
  %220 = load i32, i32* %24, align 4
  %221 = insertvalue { i8*, i32 } undef, i8* %219, 0
  %222 = insertvalue { i8*, i32 } %221, i32 %220, 1
  resume { i8*, i32 } %222

; <label>:223:                                    ; preds = %182
  %224 = load i32, i32* @x.488
  %225 = load i32, i32* @y.489
  %226 = add i32 %224, -117260540
  %227 = sub i32 %226, 1
  %228 = sub i32 %227, -117260540
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = xor i1 %232, true
  %235 = xor i1 %233, true
  %236 = xor i1 false, true
  %237 = and i1 %234, false
  %238 = and i1 %232, %236
  %239 = and i1 %235, false
  %240 = and i1 %233, %236
  %241 = or i1 %237, %238
  %242 = or i1 %239, %240
  %243 = xor i1 %241, %242
  %244 = or i1 %234, %235
  %245 = xor i1 %244, true
  %246 = or i1 false, %236
  %247 = and i1 %245, %246
  %248 = or i1 %243, %247
  %249 = or i1 %232, %233
  br i1 %248, label %250, label %348

; <label>:250:                                    ; preds = %223, %348
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  call void @__clang_call_terminate(i8* %252) #10
  %253 = load i32, i32* @x.488
  %254 = load i32, i32* @y.489
  %255 = add i32 %253, -269036672
  %256 = sub i32 %255, 1
  %257 = sub i32 %256, -269036672
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = and i1 %261, %262
  %264 = xor i1 %261, %262
  %265 = or i1 %263, %264
  %266 = or i1 %261, %262
  br i1 %265, label %267, label %348

; <label>:267:                                    ; preds = %250
  unreachable

; <label>:268:                                    ; preds = %179
  %269 = load i32, i32* @x.488
  %270 = load i32, i32* @y.489
  %271 = sub i32 %269, 584160208
  %272 = sub i32 %271, 1
  %273 = add i32 %272, 584160208
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = and i1 %277, %278
  %280 = xor i1 %277, %278
  %281 = or i1 %279, %280
  %282 = or i1 %277, %278
  br i1 %281, label %283, label %351

; <label>:283:                                    ; preds = %268, %351
  %284 = load i32, i32* @x.488
  %285 = load i32, i32* @y.489
  %286 = sub i32 %284, 422739704
  %287 = sub i32 %286, 1
  %288 = add i32 %287, 422739704
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 false, true
  %297 = and i1 %294, false
  %298 = and i1 %292, %296
  %299 = and i1 %295, false
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 false, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  br i1 %308, label %310, label %351

; <label>:310:                                    ; preds = %283
  unreachable

; <label>:311:                                    ; preds = %18, %3
  %312 = alloca %"class.std::vector.3"*, align 8
  %313 = alloca i64, align 8
  %314 = alloca %"class.std::vector.3"*, align 8
  %315 = alloca %"class.std::vector.3"*, align 8
  %316 = alloca i8*
  %317 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %312, align 8
  store i64 %1, i64* %313, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %314, align 8
  %318 = load %"class.std::vector.3"*, %"class.std::vector.3"** %312, align 8
  store %"class.std::vector.3"* %318, %"class.std::vector.3"** %315, align 8
  br label %18

; <label>:319:                                    ; preds = %74, %60
  br label %74

; <label>:320:                                    ; preds = %105, %90
  %321 = load i64, i64* %20, align 8
  %322 = add i64 %321, -7021640578666483046
  %323 = sub i64 %322, -1
  %324 = sub i64 %323, -7021640578666483046
  %325 = sub i64 %321, -1
  %326 = mul i64 %324, -1
  %327 = add i64 0, 5529789215731413893
  %328 = sub i64 %327, %321
  %329 = sub i64 %328, 5529789215731413893
  %330 = sub i64 0, %321
  %331 = add i64 %329, 2240167738206122863
  %332 = add i64 %331, -1
  %333 = sub i64 %332, 2240167738206122863
  %334 = add i64 %329, -1
  %335 = shl i64 %321, -1
  %336 = shl i64 %321, -1
  %337 = sub i64 %321, 4635682263226013250
  %338 = add i64 %337, -1
  %339 = add i64 %338, 4635682263226013250
  %340 = add i64 %321, -1
  store i64 %339, i64* %20, align 8
  %341 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  %342 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %341, i32 1
  store %"class.std::vector.3"* %342, %"class.std::vector.3"** %22, align 8
  br label %105

; <label>:343:                                    ; preds = %155, %128
  %344 = landingpad { i8*, i32 }
          catch i8* null
  %345 = extractvalue { i8*, i32 } %344, 0
  store i8* %345, i8** %23, align 8
  %346 = extractvalue { i8*, i32 } %344, 1
  store i32 %346, i32* %24, align 4
  br label %155

; <label>:347:                                    ; preds = %201, %186
  br label %201

; <label>:348:                                    ; preds = %250, %223
  %349 = landingpad { i8*, i32 }
          catch i8* null
  %350 = extractvalue { i8*, i32 } %349, 0
  call void @__clang_call_terminate(i8* %350) #10
  br label %250

; <label>:351:                                    ; preds = %283, %268
  br label %283
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEJRKS6_EEvPT_DpOT0_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.3"*
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardIRKSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEOT_RNSt16remove_referenceIS9_E4typeE(%"class.std::vector.3"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEC2ERKS5_(%"class.std::vector.3"* %7, %"class.std::vector.3"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardIRKSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEOT_RNSt16remove_referenceIS9_E4typeE(%"class.std::vector.3"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  ret %"class.std::vector.3"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE8max_sizeERKS7_(%"class.std::allocator.0"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.496
  %10 = load i32, i32* @y.497
  %11 = sub i32 %9, -236828283
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -236828283
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1438895116, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %93
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1438895116, label %23
    i32 675934459, label %31
    i32 936722581, label %70
    i32 -1504790966, label %73
    i32 -1912333669, label %77
    i32 1403394352, label %81
    i32 -950461898, label %84
  ]

; <label>:22:                                     ; preds = %20
  br label %93

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 675934459, i32 -950461898
  store i32 %30, i32* %19
  br label %93

; <label>:31:                                     ; preds = %20
  %32 = alloca i64*, align 8
  store i64** %32, i64*** %6
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %5
  %34 = alloca i64*, align 8
  store i64** %34, i64*** %4
  %35 = load volatile i64**, i64*** %5
  store i64* %0, i64** %35, align 8
  %36 = load volatile i64**, i64*** %4
  store i64* %1, i64** %36, align 8
  %37 = load volatile i64**, i64*** %5
  %38 = load i64*, i64** %37, align 8
  %39 = load i64, i64* %38, align 8
  %40 = load volatile i64**, i64*** %4
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %39, %42
  store i1 %43, i1* %3
  %44 = load i32, i32* @x.496
  %45 = load i32, i32* @y.497
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 936722581, i32 -950461898
  store i32 %69, i32* %19
  br label %93

; <label>:70:                                     ; preds = %20
  %71 = load volatile i1, i1* %3
  %72 = select i1 %71, i32 -1504790966, i32 -1912333669
  store i32 %72, i32* %19
  br label %93

; <label>:73:                                     ; preds = %20
  %74 = load volatile i64**, i64*** %4
  %75 = load i64*, i64** %74, align 8
  %76 = load volatile i64**, i64*** %6
  store i64* %75, i64** %76, align 8
  store i32 1403394352, i32* %19
  br label %93

; <label>:77:                                     ; preds = %20
  %78 = load volatile i64**, i64*** %5
  %79 = load i64*, i64** %78, align 8
  %80 = load volatile i64**, i64*** %6
  store i64* %79, i64** %80, align 8
  store i32 1403394352, i32* %19
  br label %93

; <label>:81:                                     ; preds = %20
  %82 = load volatile i64**, i64*** %6
  %83 = load i64*, i64** %82, align 8
  ret i64* %83

; <label>:84:                                     ; preds = %20
  %85 = alloca i64*, align 8
  %86 = alloca i64*, align 8
  %87 = alloca i64*, align 8
  store i64* %0, i64** %86, align 8
  store i64* %1, i64** %87, align 8
  %88 = load i64*, i64** %86, align 8
  %89 = load i64, i64* %88, align 8
  %90 = load i64*, i64** %87, align 8
  %91 = load i64, i64* %90, align 8
  %92 = icmp ult i64 %89, %91
  store i32 675934459, i32* %19
  br label %93

; <label>:93:                                     ; preds = %84, %77, %73, %70, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE8max_sizeERKS7_(%"class.std::allocator.0"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.498
  %6 = load i32, i32* @y.499
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1902264449, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1902264449, label %18
    i32 1053878970, label %26
    i32 598586257, label %57
    i32 1389179872, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1053878970, i32 1389179872
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %27, align 8
  %28 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %27, align 8
  %29 = bitcast %"class.std::allocator.0"* %28 to %"class.__gnu_cxx::new_allocator.1"*
  %30 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %29) #3
  store i64 %30, i64* %2
  %31 = load i32, i32* @x.498
  %32 = load i32, i32* @y.499
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 598586257, i32 1389179872
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64, i64* %2
  ret i64 %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %60, align 8
  %61 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %60, align 8
  %62 = bitcast %"class.std::allocator.0"* %61 to %"class.__gnu_cxx::new_allocator.1"*
  %63 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %62) #3
  store i32 1053878970, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE8allocateERS7_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %6, i64 %7, i8* null)
  ret %"class.std::vector.3"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -288174526, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -288174526, label %16
    i32 -636208381, label %21
    i32 -2106983800, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -636208381, i32 -2106983800
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.3"*
  ret %"class.std::vector.3"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESt13move_iteratorIS7_EET0_T_(%"class.std::vector.3"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEC2ES7_(%"class.std::move_iterator"* %2, %"class.std::vector.3"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  ret %"class.std::vector.3"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EEEE10deallocateERS7_PS6_m(%"class.std::allocator.0"* dereferenceable(1), %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE10deallocateEPS7_m(%"class.__gnu_cxx::new_allocator.1"* %8, %"class.std::vector.3"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEE10deallocateEPS7_m(%"class.__gnu_cxx::new_allocator.1"*, %"class.std::vector.3"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %9 = bitcast %"class.std::vector.3"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EES1_IS7_SaIS7_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.28"*, %"class.std::vector.3"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.28"*, align 8
  %4 = alloca %"class.std::vector.3"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.28"* %0, %"class.__gnu_cxx::__normal_iterator.28"** %3, align 8
  store %"class.std::vector.3"** %1, %"class.std::vector.3"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.28"*, %"class.__gnu_cxx::__normal_iterator.28"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.28", %"class.__gnu_cxx::__normal_iterator.28"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %4, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Solve4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EE21_M_default_initializeEm(%"class.std::vector.3"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %12 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Solve4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %11) #3
  %13 = call %"class.std::vector.8"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN5Solve4edgeESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.8"* %9, i64 %10, %"class.std::allocator.5"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::vector.8"* %13, %"class.std::vector.8"** %16, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN5Solve4edgeESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.8"*, i64, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.520
  %8 = load i32, i32* @y.521
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -66230988, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -66230988, label %20
    i32 1622656903, label %40
    i32 1177358942, label %61
    i32 841725863, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1622656903, i32 841725863
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %43, align 8
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.8"* @_ZSt25__uninitialized_default_nIPSt6vectorIN5Solve4edgeESaIS2_EEmET_S6_T0_(%"class.std::vector.8"* %44, i64 %45)
  store %"class.std::vector.8"* %46, %"class.std::vector.8"** %4
  %47 = load i32, i32* @x.520
  %48 = load i32, i32* @y.521
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1177358942, i32 841725863
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::vector.8"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %64, align 8
  store i64 %1, i64* %65, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %66, align 8
  %67 = load %"class.std::vector.8"*, %"class.std::vector.8"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.8"* @_ZSt25__uninitialized_default_nIPSt6vectorIN5Solve4edgeESaIS2_EEmET_S6_T0_(%"class.std::vector.8"* %67, i64 %68)
  store i32 1622656903, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt25__uninitialized_default_nIPSt6vectorIN5Solve4edgeESaIS2_EEmET_S6_T0_(%"class.std::vector.8"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.522
  %7 = load i32, i32* @y.523
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -182581338, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -182581338, label %19
    i32 96634343, label %27
    i32 2129388192, label %61
    i32 1579660490, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 96634343, i32 1579660490
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  store i64 %1, i64* %29, align 8
  store i8 1, i8* %30, align 1
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %32 = load i64, i64* %29, align 8
  %33 = call %"class.std::vector.8"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN5Solve4edgeESaIS4_EEmEET_S8_T0_(%"class.std::vector.8"* %31, i64 %32)
  store %"class.std::vector.8"* %33, %"class.std::vector.8"** %3
  %34 = load i32, i32* @x.522
  %35 = load i32, i32* @y.523
  %36 = add i32 %34, 600310531
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 600310531
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 2129388192, i32 1579660490
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  ret %"class.std::vector.8"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::vector.8"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %64, align 8
  store i64 %1, i64* %65, align 8
  store i8 1, i8* %66, align 1
  %67 = load %"class.std::vector.8"*, %"class.std::vector.8"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.8"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN5Solve4edgeESaIS4_EEmEET_S8_T0_(%"class.std::vector.8"* %67, i64 %68)
  store i32 96634343, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN5Solve4edgeESaIS4_EEmEET_S8_T0_(%"class.std::vector.8"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.524
  %4 = load i32, i32* @y.525
  %5 = add i32 %3, 477511644
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 477511644
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %245

; <label>:17:                                     ; preds = %2, %245
  %18 = alloca %"class.std::vector.8"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::vector.8"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %18, align 8
  store i64 %1, i64* %19, align 8
  %23 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  store %"class.std::vector.8"* %23, %"class.std::vector.8"** %20, align 8
  %24 = load i32, i32* @x.524
  %25 = load i32, i32* @y.525
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %245

; <label>:37:                                     ; preds = %17
  br label %38

; <label>:38:                                     ; preds = %87, %37
  %39 = load i32, i32* @x.524
  %40 = load i32, i32* @y.525
  %41 = add i32 %39, 1570936124
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1570936124
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %252

; <label>:65:                                     ; preds = %38, %252
  %66 = load i64, i64* %19, align 8
  %67 = icmp ugt i64 %66, 0
  %68 = load i32, i32* @x.524
  %69 = load i32, i32* @y.525
  %70 = add i32 %68, 1965207701
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, 1965207701
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %252

; <label>:82:                                     ; preds = %65
  br i1 %67, label %83, label %158

; <label>:83:                                     ; preds = %82
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  %85 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Solve4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %84) #3
  invoke void @_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.8"* %85)
          to label %86 unwind label %94

; <label>:86:                                     ; preds = %83
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = load i64, i64* %19, align 8
  %89 = sub i64 0, -1
  %90 = sub i64 %88, %89
  %91 = add i64 %88, -1
  store i64 %90, i64* %19, align 8
  %92 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  %93 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %92, i32 1
  store %"class.std::vector.8"* %93, %"class.std::vector.8"** %20, align 8
  br label %38

; <label>:94:                                     ; preds = %83
  %95 = load i32, i32* @x.524
  %96 = load i32, i32* @y.525
  %97 = sub i32 %95, -1469889993
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1469889993
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %255

; <label>:121:                                    ; preds = %94, %255
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %21, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %22, align 4
  %125 = load i32, i32* @x.524
  %126 = load i32, i32* @y.525
  %127 = add i32 %125, -420996436
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -420996436
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 true, true
  %138 = and i1 %135, true
  %139 = and i1 %133, %137
  %140 = and i1 %136, true
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 true, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %255

; <label>:151:                                    ; preds = %121
  br label %152

; <label>:152:                                    ; preds = %151
  %153 = load i8*, i8** %21, align 8
  %154 = call i8* @__cxa_begin_catch(i8* %153) #3
  %155 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %156 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Solve4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %155, %"class.std::vector.8"* %156)
          to label %157 unwind label %160

; <label>:157:                                    ; preds = %152
  invoke void @__cxa_rethrow() #13
          to label %244 unwind label %160

; <label>:158:                                    ; preds = %82
  %159 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  ret %"class.std::vector.8"* %159

; <label>:160:                                    ; preds = %157, %152
  %161 = load i32, i32* @x.524
  %162 = load i32, i32* @y.525
  %163 = sub i32 %161, -543887777
  %164 = sub i32 %163, 1
  %165 = add i32 %164, -543887777
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %259

; <label>:175:                                    ; preds = %160, %259
  %176 = landingpad { i8*, i32 }
          cleanup
  %177 = extractvalue { i8*, i32 } %176, 0
  store i8* %177, i8** %21, align 8
  %178 = extractvalue { i8*, i32 } %176, 1
  store i32 %178, i32* %22, align 4
  %179 = load i32, i32* @x.524
  %180 = load i32, i32* @y.525
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 true, true
  %191 = and i1 %188, true
  %192 = and i1 %186, %190
  %193 = and i1 %189, true
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 true, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  br i1 %202, label %204, label %259

; <label>:204:                                    ; preds = %175
  invoke void @__cxa_end_catch()
          to label %205 unwind label %212

; <label>:205:                                    ; preds = %204
  br label %207
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:207:                                    ; preds = %205
  %208 = load i8*, i8** %21, align 8
  %209 = load i32, i32* %22, align 4
  %210 = insertvalue { i8*, i32 } undef, i8* %208, 0
  %211 = insertvalue { i8*, i32 } %210, i32 %209, 1
  resume { i8*, i32 } %211

; <label>:212:                                    ; preds = %204
  %213 = load i32, i32* @x.524
  %214 = load i32, i32* @y.525
  %215 = add i32 %213, -1558247194
  %216 = sub i32 %215, 1
  %217 = sub i32 %216, -1558247194
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  br i1 %225, label %227, label %263

; <label>:227:                                    ; preds = %212, %263
  %228 = landingpad { i8*, i32 }
          catch i8* null
  %229 = extractvalue { i8*, i32 } %228, 0
  call void @__clang_call_terminate(i8* %229) #10
  %230 = load i32, i32* @x.524
  %231 = load i32, i32* @y.525
  %232 = sub i32 0, 1
  %233 = add i32 %230, %232
  %234 = sub i32 %230, 1
  %235 = mul i32 %230, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %231, 10
  %239 = and i1 %237, %238
  %240 = xor i1 %237, %238
  %241 = or i1 %239, %240
  %242 = or i1 %237, %238
  br i1 %241, label %243, label %263

; <label>:243:                                    ; preds = %227
  unreachable

; <label>:244:                                    ; preds = %157
  unreachable

; <label>:245:                                    ; preds = %17, %2
  %246 = alloca %"class.std::vector.8"*, align 8
  %247 = alloca i64, align 8
  %248 = alloca %"class.std::vector.8"*, align 8
  %249 = alloca i8*
  %250 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %246, align 8
  store i64 %1, i64* %247, align 8
  %251 = load %"class.std::vector.8"*, %"class.std::vector.8"** %246, align 8
  store %"class.std::vector.8"* %251, %"class.std::vector.8"** %248, align 8
  br label %17

; <label>:252:                                    ; preds = %65, %38
  %253 = load i64, i64* %19, align 8
  %254 = icmp ugt i64 %253, 0
  br label %65

; <label>:255:                                    ; preds = %121, %94
  %256 = landingpad { i8*, i32 }
          catch i8* null
  %257 = extractvalue { i8*, i32 } %256, 0
  store i8* %257, i8** %21, align 8
  %258 = extractvalue { i8*, i32 } %256, 1
  store i32 %258, i32* %22, align 4
  br label %121

; <label>:259:                                    ; preds = %175, %160
  %260 = landingpad { i8*, i32 }
          cleanup
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %21, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %22, align 4
  br label %175

; <label>:263:                                    ; preds = %227, %212
  %264 = landingpad { i8*, i32 }
          catch i8* null
  %265 = extractvalue { i8*, i32 } %264, 0
  call void @__clang_call_terminate(i8* %265) #10
  br label %227
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5Solve4edgeESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.8"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.526
  %5 = load i32, i32* @y.527
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1478799441, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %63
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1478799441, label %17
    i32 1026805891, label %25
    i32 -1646160569, label %57
    i32 -1995921637, label %58
  ]

; <label>:16:                                     ; preds = %14
  br label %63

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1026805891, i32 -1995921637
  store i32 %24, i32* %13
  br label %63

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %26, align 8
  %27 = load %"class.std::vector.8"*, %"class.std::vector.8"** %26, align 8
  %28 = bitcast %"class.std::vector.8"* %27 to i8*
  %29 = bitcast i8* %28 to %"class.std::vector.8"*
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2Ev(%"class.std::vector.8"* %29) #3
  %30 = load i32, i32* @x.526
  %31 = load i32, i32* @y.527
  %32 = sub i32 %30, -24553723
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -24553723
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1646160569, i32 -1995921637
  store i32 %56, i32* %13
  br label %63

; <label>:57:                                     ; preds = %14
  ret void

; <label>:58:                                     ; preds = %14
  %59 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %59, align 8
  %60 = load %"class.std::vector.8"*, %"class.std::vector.8"** %59, align 8
  %61 = bitcast %"class.std::vector.8"* %60 to i8*
  %62 = bitcast i8* %61 to %"class.std::vector.8"*
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2Ev(%"class.std::vector.8"* %62) #3
  store i32 1026805891, i32* %13
  br label %63

; <label>:63:                                     ; preds = %58, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Solve4edgeESaIS1_EEC2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.528
  %3 = load i32, i32* @y.529
  %4 = sub i32 %2, 2038391836
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 2038391836
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %144

; <label>:28:                                     ; preds = %1, %144
  %29 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  %30 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %31 = bitcast %"class.std::vector.8"* %30 to %"struct.std::_Vector_base.9"*
  %32 = load i32, i32* @x.528
  %33 = load i32, i32* @y.529
  %34 = sub i32 %32, 1816308340
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1816308340
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %144

; <label>:58:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.9"* %31)
          to label %59 unwind label %113

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.528
  %61 = load i32, i32* @y.529
  %62 = sub i32 %60, 919676953
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 919676953
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %148

; <label>:86:                                     ; preds = %59, %148
  %87 = load i32, i32* @x.528
  %88 = load i32, i32* @y.529
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %148

; <label>:112:                                    ; preds = %86
  ret void

; <label>:113:                                    ; preds = %58
  %114 = load i32, i32* @x.528
  %115 = load i32, i32* @y.529
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %149

; <label>:127:                                    ; preds = %113, %149
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  call void @__clang_call_terminate(i8* %129) #10
  %130 = load i32, i32* @x.528
  %131 = load i32, i32* @y.529
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %149

; <label>:143:                                    ; preds = %127
  unreachable

; <label>:144:                                    ; preds = %28, %1
  %145 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %145, align 8
  %146 = load %"class.std::vector.8"*, %"class.std::vector.8"** %145, align 8
  %147 = bitcast %"class.std::vector.8"* %146 to %"struct.std::_Vector_base.9"*
  br label %28

; <label>:148:                                    ; preds = %86, %59
  br label %86

; <label>:149:                                    ; preds = %127, %113
  %150 = landingpad { i8*, i32 }
          catch i8* null
  %151 = extractvalue { i8*, i32 } %150, 0
  call void @__clang_call_terminate(i8* %151) #10
  br label %127
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.532
  %5 = load i32, i32* @y.533
  %6 = sub i32 %4, 980998857
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 980998857
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 999923168, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 999923168, label %18
    i32 -113369204, label %26
    i32 -551476962, label %48
    i32 -1771427830, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -113369204, i32 -1771427830
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %28 to %"class.std::allocator.10"*
  call void @_ZNSaIN5Solve4edgeEEC2Ev(%"class.std::allocator.10"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %28, i32 0, i32 0
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %28, i32 0, i32 1
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %28, i32 0, i32 2
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %32, align 8
  %33 = load i32, i32* @x.532
  %34 = load i32, i32* @y.533
  %35 = sub i32 %33, 1088938995
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1088938995
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -551476962, i32 -1771427830
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %50, align 8
  %51 = load %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"** %50, align 8
  %52 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %51 to %"class.std::allocator.10"*
  call void @_ZNSaIN5Solve4edgeEEC2Ev(%"class.std::allocator.10"* %52) #3
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %51, i32 0, i32 0
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %53, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %51, i32 0, i32 1
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %51, i32 0, i32 2
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %55, align 8
  store i32 -113369204, i32* %14
  br label %56

; <label>:56:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Solve4edgeEEC2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.534
  %5 = load i32, i32* @y.535
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -356716624, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -356716624, label %17
    i32 -572594661, label %37
    i32 1786581155, label %68
    i32 -958769291, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -572594661, i32 -958769291
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %38, align 8
  %39 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %38, align 8
  %40 = bitcast %"class.std::allocator.10"* %39 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %40) #3
  %41 = load i32, i32* @x.534
  %42 = load i32, i32* @y.535
  %43 = add i32 %41, -1797673218
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1797673218
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1786581155, i32 -958769291
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %70, align 8
  %71 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %70, align 8
  %72 = bitcast %"class.std::allocator.10"* %71 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %72) #3
  store i32 -572594661, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"*, %"struct.Solve::edge"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.Solve::edge"*
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %6, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %7, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %8, %"class.std::vector.8"** %5
  %9 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %10 = bitcast %"class.std::vector.8"* %9 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %12, align 8
  store %"struct.Solve::edge"* %13, %"struct.Solve::edge"** %4
  %14 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %15 = bitcast %"class.std::vector.8"* %14 to %"struct.std::_Vector_base.9"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %17, align 8
  store %"struct.Solve::edge"* %18, %"struct.Solve::edge"** %3
  %19 = alloca i32
  store i32 120874930, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 120874930, label %23
    i32 191958286, label %28
    i32 -2033671701, label %46
    i32 917690024, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  %25 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %3
  %26 = icmp ne %"struct.Solve::edge"* %24, %25
  %27 = select i1 %26, i32 191958286, i32 -2033671701
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %31 to %"class.std::allocator.10"*
  %33 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %34 = bitcast %"class.std::vector.8"* %33 to %"struct.std::_Vector_base.9"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %36, align 8
  %38 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %39 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Solve::edge"* dereferenceable(8) %38) #3
  call void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %32, %"struct.Solve::edge"* %37, %"struct.Solve::edge"* dereferenceable(8) %39)
  %40 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %41 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %44, i32 1
  store %"struct.Solve::edge"* %45, %"struct.Solve::edge"** %43, align 8
  store i32 917690024, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %48 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Solve::edge"* dereferenceable(8) %47) #3
  %49 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.8"* %49, %"struct.Solve::edge"* dereferenceable(8) %48)
  store i32 917690024, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %2, align 8
  %3 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %2, align 8
  ret %"struct.Solve::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), %"struct.Solve::edge"*, %"struct.Solve::edge"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %11 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Solve::edge"* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %8, %"struct.Solve::edge"* %9, %"struct.Solve::edge"* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Solve::edge"* @_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Solve::edge"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %2, align 8
  %3 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %2, align 8
  ret %"struct.Solve::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.8"*, %"struct.Solve::edge"* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.8"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Solve::edge"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %12, i64 %13)
  store %"struct.Solve::edge"* %14, %"struct.Solve::edge"** %6, align 8
  %15 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  store %"struct.Solve::edge"* %15, %"struct.Solve::edge"** %7, align 8
  %16 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %17 to %"class.std::allocator.10"*
  %19 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %21 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %19, i64 %20
  %22 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %23 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Solve::edge"* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, %"struct.Solve::edge"* %21, %"struct.Solve::edge"* dereferenceable(8) %23)
          to label %24 unwind label %81

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.546
  %26 = load i32, i32* @y.547
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %305

; <label>:50:                                     ; preds = %24, %305
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %7, align 8
  %51 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %53, align 8
  %55 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %56, i32 0, i32 1
  %58 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %57, align 8
  %59 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %60 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %61 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %60) #3
  %62 = load i32, i32* @x.546
  %63 = load i32, i32* @y.547
  %64 = sub i32 %62, -1157431184
  %65 = sub i32 %64, 1
  %66 = add i32 %65, -1157431184
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %305

; <label>:76:                                     ; preds = %50
  %77 = invoke %"struct.Solve::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Solve4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Solve::edge"* %54, %"struct.Solve::edge"* %58, %"struct.Solve::edge"* %59, %"class.std::allocator.10"* dereferenceable(1) %61)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %76
  store %"struct.Solve::edge"* %77, %"struct.Solve::edge"** %7, align 8
  %79 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %80 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %79, i32 1
  store %"struct.Solve::edge"* %80, %"struct.Solve::edge"** %7, align 8
  br label %210

; <label>:81:                                     ; preds = %76, %2
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i8*, i8** %8, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %89 = icmp ne %"struct.Solve::edge"* %88, null
  br i1 %89, label %144, label %90

; <label>:90:                                     ; preds = %85
  %91 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %91, i32 0, i32 0
  %93 = bitcast %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %92 to %"class.std::allocator.10"*
  %94 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %95 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %96 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %94, i64 %95
  invoke void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.10"* dereferenceable(1) %93, %"struct.Solve::edge"* %96)
          to label %97 unwind label %98

; <label>:97:                                     ; preds = %90
  br label %150

; <label>:98:                                     ; preds = %154, %150, %144, %90
  %99 = load i32, i32* @x.546
  %100 = load i32, i32* @y.547
  %101 = add i32 %99, -1016573434
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -1016573434
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %317

; <label>:125:                                    ; preds = %98, %317
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %8, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %9, align 4
  %129 = load i32, i32* @x.546
  %130 = load i32, i32* @y.547
  %131 = sub i32 %129, 738234263
  %132 = sub i32 %131, 1
  %133 = add i32 %132, 738234263
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %317

; <label>:143:                                    ; preds = %125
  invoke void @__cxa_end_catch()
          to label %155 unwind label %260

; <label>:144:                                    ; preds = %85
  %145 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %146 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %147 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %148 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %147) #3
  invoke void @_ZSt8_DestroyIPN5Solve4edgeES1_EvT_S3_RSaIT0_E(%"struct.Solve::edge"* %145, %"struct.Solve::edge"* %146, %"class.std::allocator.10"* dereferenceable(1) %148)
          to label %149 unwind label %98

; <label>:149:                                    ; preds = %144
  br label %150

; <label>:150:                                    ; preds = %149, %97
  %151 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %152 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %153 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %151, %"struct.Solve::edge"* %152, i64 %153)
          to label %154 unwind label %98

; <label>:154:                                    ; preds = %150
  invoke void @__cxa_rethrow() #13
          to label %304 unwind label %98

; <label>:155:                                    ; preds = %143
  %156 = load i32, i32* @x.546
  %157 = load i32, i32* @y.547
  %158 = add i32 %156, -248871163
  %159 = sub i32 %158, 1
  %160 = sub i32 %159, -248871163
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 false, true
  %169 = and i1 %166, false
  %170 = and i1 %164, %168
  %171 = and i1 %167, false
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 false, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %321

; <label>:182:                                    ; preds = %155, %321
  %183 = load i32, i32* @x.546
  %184 = load i32, i32* @y.547
  %185 = sub i32 %183, 2113122657
  %186 = sub i32 %185, 1
  %187 = add i32 %186, 2113122657
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %321

; <label>:209:                                    ; preds = %182
  br label %255

; <label>:210:                                    ; preds = %78
  %211 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %211, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %212, i32 0, i32 0
  %214 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %213, align 8
  %215 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %216 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %215, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %216, i32 0, i32 1
  %218 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %217, align 8
  %219 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %220 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %219) #3
  call void @_ZSt8_DestroyIPN5Solve4edgeES1_EvT_S3_RSaIT0_E(%"struct.Solve::edge"* %214, %"struct.Solve::edge"* %218, %"class.std::allocator.10"* dereferenceable(1) %220)
  %221 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %222 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %223, i32 0, i32 0
  %225 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %224, align 8
  %226 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %227 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %227, i32 0, i32 2
  %229 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %228, align 8
  %230 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %230, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %231, i32 0, i32 0
  %233 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %232, align 8
  %234 = ptrtoint %"struct.Solve::edge"* %229 to i64
  %235 = ptrtoint %"struct.Solve::edge"* %233 to i64
  %236 = add i64 %234, 2578598131969684406
  %237 = sub i64 %236, %235
  %238 = sub i64 %237, 2578598131969684406
  %239 = sub i64 %234, %235
  %240 = sdiv exact i64 %238, 8
  call void @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %221, %"struct.Solve::edge"* %225, i64 %240)
  %241 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %242 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %243, i32 0, i32 0
  store %"struct.Solve::edge"* %241, %"struct.Solve::edge"** %244, align 8
  %245 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %246 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %247 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %246, i32 0, i32 0
  %248 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %247, i32 0, i32 1
  store %"struct.Solve::edge"* %245, %"struct.Solve::edge"** %248, align 8
  %249 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %250 = load i64, i64* %5, align 8
  %251 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %249, i64 %250
  %252 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %253, i32 0, i32 2
  store %"struct.Solve::edge"* %251, %"struct.Solve::edge"** %254, align 8
  ret void

; <label>:255:                                    ; preds = %209
  %256 = load i8*, i8** %8, align 8
  %257 = load i32, i32* %9, align 4
  %258 = insertvalue { i8*, i32 } undef, i8* %256, 0
  %259 = insertvalue { i8*, i32 } %258, i32 %257, 1
  resume { i8*, i32 } %259

; <label>:260:                                    ; preds = %143
  %261 = load i32, i32* @x.546
  %262 = load i32, i32* @y.547
  %263 = sub i32 0, 1
  %264 = add i32 %261, %263
  %265 = sub i32 %261, 1
  %266 = mul i32 %261, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %262, 10
  %270 = xor i1 %268, true
  %271 = xor i1 %269, true
  %272 = xor i1 true, true
  %273 = and i1 %270, true
  %274 = and i1 %268, %272
  %275 = and i1 %271, true
  %276 = and i1 %269, %272
  %277 = or i1 %273, %274
  %278 = or i1 %275, %276
  %279 = xor i1 %277, %278
  %280 = or i1 %270, %271
  %281 = xor i1 %280, true
  %282 = or i1 true, %272
  %283 = and i1 %281, %282
  %284 = or i1 %279, %283
  %285 = or i1 %268, %269
  br i1 %284, label %286, label %322

; <label>:286:                                    ; preds = %260, %322
  %287 = landingpad { i8*, i32 }
          catch i8* null
  %288 = extractvalue { i8*, i32 } %287, 0
  call void @__clang_call_terminate(i8* %288) #10
  %289 = load i32, i32* @x.546
  %290 = load i32, i32* @y.547
  %291 = sub i32 %289, -1760615526
  %292 = sub i32 %291, 1
  %293 = add i32 %292, -1760615526
  %294 = sub i32 %289, 1
  %295 = mul i32 %289, %293
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %290, 10
  %299 = and i1 %297, %298
  %300 = xor i1 %297, %298
  %301 = or i1 %299, %300
  %302 = or i1 %297, %298
  br i1 %301, label %303, label %322

; <label>:303:                                    ; preds = %286
  unreachable

; <label>:304:                                    ; preds = %154
  unreachable

; <label>:305:                                    ; preds = %50, %24
  store %"struct.Solve::edge"* null, %"struct.Solve::edge"** %7, align 8
  %306 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %307 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %307, i32 0, i32 0
  %309 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %308, align 8
  %310 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %311 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %310, i32 0, i32 0
  %312 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %311, i32 0, i32 1
  %313 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %312, align 8
  %314 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %315 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %316 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %315) #3
  br label %50

; <label>:317:                                    ; preds = %125, %98
  %318 = landingpad { i8*, i32 }
          cleanup
  %319 = extractvalue { i8*, i32 } %318, 0
  store i8* %319, i8** %8, align 8
  %320 = extractvalue { i8*, i32 } %318, 1
  store i32 %320, i32* %9, align 4
  br label %125

; <label>:321:                                    ; preds = %182, %155
  br label %182

; <label>:322:                                    ; preds = %286, %260
  %323 = landingpad { i8*, i32 }
          catch i8* null
  %324 = extractvalue { i8*, i32 } %323, 0
  call void @__clang_call_terminate(i8* %324) #10
  br label %286
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Solve::edge"*, %"struct.Solve::edge"* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.548
  %7 = load i32, i32* @y.549
  %8 = sub i32 %6, 1265528508
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1265528508
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1539463602, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1539463602, label %20
    i32 -1713261429, label %28
    i32 -1339401125, label %55
    i32 -1873325235, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1713261429, i32 -1873325235
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %30 = alloca %"struct.Solve::edge"*, align 8
  %31 = alloca %"struct.Solve::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %30, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  %33 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %30, align 8
  %34 = bitcast %"struct.Solve::edge"* %33 to i8*
  %35 = bitcast i8* %34 to %"struct.Solve::edge"*
  %36 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %31, align 8
  %37 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Solve::edge"* dereferenceable(8) %36) #3
  %38 = bitcast %"struct.Solve::edge"* %35 to i8*
  %39 = bitcast %"struct.Solve::edge"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  %40 = load i32, i32* @x.548
  %41 = load i32, i32* @y.549
  %42 = add i32 %40, -1392592086
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1392592086
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1339401125, i32 -1873325235
  store i32 %54, i32* %16
  br label %68

; <label>:55:                                     ; preds = %17
  ret void

; <label>:56:                                     ; preds = %17
  %57 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %58 = alloca %"struct.Solve::edge"*, align 8
  %59 = alloca %"struct.Solve::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %58, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %59, align 8
  %60 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  %61 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %58, align 8
  %62 = bitcast %"struct.Solve::edge"* %61 to i8*
  %63 = bitcast i8* %62 to %"struct.Solve::edge"*
  %64 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %59, align 8
  %65 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt7forwardIN5Solve4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Solve::edge"* dereferenceable(8) %64) #3
  %66 = bitcast %"struct.Solve::edge"* %63 to i8*
  %67 = bitcast %"struct.Solve::edge"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 4, i1 false)
  store i32 -1713261429, i32* %16
  br label %68

; <label>:68:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.8"*
  %10 = alloca %"class.std::vector.8"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  store %"class.std::vector.8"* %15, %"class.std::vector.8"** %9
  %16 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %17 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %16) #3
  %18 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %19 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %18) #3
  %20 = sub i64 0, %19
  %21 = add i64 %17, %20
  %22 = sub i64 %17, %19
  store i64 %21, i64* %8
  %23 = load i64, i64* %11, align 8
  store i64 %23, i64* %7
  %24 = alloca i32
  store i32 -1038594787, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %251
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1038594787, label %29
    i32 -1587643519, label %34
    i32 1957177235, label %50
    i32 771237978, label %78
    i32 -1394263095, label %79
    i32 -495204928, label %95
    i32 1996561494, label %125
    i32 2125316561, label %128
    i32 1655830083, label %134
    i32 626014424, label %162
    i32 1663342172, label %192
    i32 -1156443104, label %194
    i32 345809329, label %196
    i32 -2030157611, label %212
    i32 1908569909, label %227
    i32 -1932787779, label %229
    i32 -1341421457, label %231
    i32 -1826645105, label %247
    i32 -1472555525, label %250
  ]

; <label>:28:                                     ; preds = %26
  br label %251

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %8
  %31 = load volatile i64, i64* %7
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -1587643519, i32 -1394263095
  store i32 %33, i32* %24
  br label %251

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.550
  %36 = load i32, i32* @y.551
  %37 = add i32 %35, 1413613166
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1413613166
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1957177235, i32 -1932787779
  store i32 %49, i32* %24
  br label %251

; <label>:50:                                     ; preds = %26
  %51 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %51) #13
  %52 = load i32, i32* @x.550
  %53 = load i32, i32* @y.551
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 771237978, i32 -1932787779
  store i32 %77, i32* %24
  br label %251

; <label>:78:                                     ; preds = %26
  unreachable

; <label>:79:                                     ; preds = %26
  %80 = load i32, i32* @x.550
  %81 = load i32, i32* @y.551
  %82 = sub i32 %80, 630724432
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 630724432
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -495204928, i32 -1341421457
  store i32 %94, i32* %24
  br label %251

; <label>:95:                                     ; preds = %26
  %96 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %97 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %96) #3
  %98 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %99 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %98) #3
  store i64 %99, i64* %14, align 8
  %100 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %97, 3265053335370176763
  %103 = add i64 %102, %101
  %104 = sub i64 %103, 3265053335370176763
  %105 = add i64 %97, %101
  store i64 %104, i64* %13, align 8
  %106 = load i64, i64* %13, align 8
  %107 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %108 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %107) #3
  %109 = icmp ult i64 %106, %108
  store i1 %109, i1* %6
  %110 = load i32, i32* @x.550
  %111 = load i32, i32* @y.551
  %112 = sub i32 %110, 1775085156
  %113 = sub i32 %112, 1
  %114 = add i32 %113, 1775085156
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 1996561494, i32 -1341421457
  store i32 %124, i32* %24
  br label %251

; <label>:125:                                    ; preds = %26
  %126 = load volatile i1, i1* %6
  %127 = select i1 %126, i32 1655830083, i32 2125316561
  store i32 %127, i32* %24
  br label %251

; <label>:128:                                    ; preds = %26
  %129 = load i64, i64* %13, align 8
  %130 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %131 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %130) #3
  %132 = icmp ugt i64 %129, %131
  %133 = select i1 %132, i32 1655830083, i32 -1156443104
  store i32 %133, i32* %24
  br label %251

; <label>:134:                                    ; preds = %26
  %135 = load i32, i32* @x.550
  %136 = load i32, i32* @y.551
  %137 = sub i32 %135, 1480821225
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 1480821225
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 626014424, i32 -1826645105
  store i32 %161, i32* %24
  br label %251

; <label>:162:                                    ; preds = %26
  %163 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %164 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %163) #3
  store i64 %164, i64* %5
  %165 = load i32, i32* @x.550
  %166 = load i32, i32* @y.551
  %167 = sub i32 %165, -1758154298
  %168 = sub i32 %167, 1
  %169 = add i32 %168, -1758154298
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 true, true
  %178 = and i1 %175, true
  %179 = and i1 %173, %177
  %180 = and i1 %176, true
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 true, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 1663342172, i32 -1826645105
  store i32 %191, i32* %24
  br label %251

; <label>:192:                                    ; preds = %26
  store i32 345809329, i32* %24
  %193 = load volatile i64, i64* %5
  store i64 %193, i64* %25
  br label %251

; <label>:194:                                    ; preds = %26
  %195 = load i64, i64* %13, align 8
  store i32 345809329, i32* %24
  store i64 %195, i64* %25
  br label %251

; <label>:196:                                    ; preds = %26
  %197 = load i64, i64* %25
  store i64 %197, i64* %4
  %198 = load i32, i32* @x.550
  %199 = load i32, i32* @y.551
  %200 = sub i32 0, 1
  %201 = add i32 %198, %200
  %202 = sub i32 %198, 1
  %203 = mul i32 %198, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %199, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  %211 = select i1 %209, i32 -2030157611, i32 -1472555525
  store i32 %211, i32* %24
  br label %251

; <label>:212:                                    ; preds = %26
  %213 = load i32, i32* @x.550
  %214 = load i32, i32* @y.551
  %215 = sub i32 0, 1
  %216 = add i32 %213, %215
  %217 = sub i32 %213, 1
  %218 = mul i32 %213, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %214, 10
  %222 = and i1 %220, %221
  %223 = xor i1 %220, %221
  %224 = or i1 %222, %223
  %225 = or i1 %220, %221
  %226 = select i1 %224, i32 1908569909, i32 -1472555525
  store i32 %226, i32* %24
  br label %251

; <label>:227:                                    ; preds = %26
  %228 = load volatile i64, i64* %4
  ret i64 %228

; <label>:229:                                    ; preds = %26
  %230 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %230) #13
  store i32 1957177235, i32* %24
  br label %251

; <label>:231:                                    ; preds = %26
  %232 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %233 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %232) #3
  %234 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %235 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %234) #3
  store i64 %235, i64* %14, align 8
  %236 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %237 = load i64, i64* %236, align 8
  %238 = shl i64 %233, %237
  %239 = sub i64 %233, 7142111535340970209
  %240 = add i64 %239, %237
  %241 = add i64 %240, 7142111535340970209
  %242 = add i64 %233, %237
  store i64 %241, i64* %13, align 8
  %243 = load i64, i64* %13, align 8
  %244 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %245 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %244) #3
  %246 = icmp ult i64 %243, %245
  store i32 -495204928, i32* %24
  br label %251

; <label>:247:                                    ; preds = %26
  %248 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %9
  %249 = call i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %248) #3
  store i32 626014424, i32* %24
  br label %251

; <label>:250:                                    ; preds = %26
  store i32 -2030157611, i32* %24
  br label %251

; <label>:251:                                    ; preds = %250, %247, %231, %229, %212, %196, %194, %192, %162, %134, %128, %125, %95, %79, %50, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Solve4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.32", align 8
  %10 = alloca %"class.std::move_iterator.32", align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %6, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %12 = call %"struct.Solve::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Solve4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Solve::edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  store %"struct.Solve::edge"* %12, %"struct.Solve::edge"** %13, align 8
  %14 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %15 = call %"struct.Solve::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Solve4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Solve::edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  store %"struct.Solve::edge"* %15, %"struct.Solve::edge"** %16, align 8
  %17 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %18 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  %20 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  %22 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %21, align 8
  %23 = call %"struct.Solve::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Solve4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Solve::edge"* %20, %"struct.Solve::edge"* %22, %"struct.Solve::edge"* %17, %"class.std::allocator.10"* dereferenceable(1) %18)
  ret %"struct.Solve::edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.10"* dereferenceable(1), %"struct.Solve::edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, %"struct.Solve::edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Solve4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.558
  %6 = load i32, i32* @y.559
  %7 = add i32 %5, 159841706
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 159841706
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1826846645, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1826846645, label %19
    i32 526119000, label %39
    i32 94793937, label %71
    i32 -1148445246, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 526119000, i32 -1148445246
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %40, align 8
  %41 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  %42 = bitcast %"class.std::allocator.10"* %41 to %"class.__gnu_cxx::new_allocator.11"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Solve4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.558
  %45 = load i32, i32* @y.559
  %46 = sub i32 %44, 190791663
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 190791663
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 94793937, i32 -1148445246
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %74, align 8
  %75 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %74, align 8
  %76 = bitcast %"class.std::allocator.10"* %75 to %"class.__gnu_cxx::new_allocator.11"*
  %77 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Solve4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %76) #3
  store i32 526119000, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Solve4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca %"class.std::move_iterator.32", align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.32", align 8
  %10 = alloca %"class.std::move_iterator.32", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %12, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.32"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.32"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.32"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  %19 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  %21 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %20, align 8
  %22 = call %"struct.Solve::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Solve4edgeEES3_ET0_T_S6_S5_(%"struct.Solve::edge"* %19, %"struct.Solve::edge"* %21, %"struct.Solve::edge"* %17)
  ret %"struct.Solve::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Solve4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.32", align 8
  %3 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %3, align 8
  %4 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Solve4edgeEEC2ES2_(%"class.std::move_iterator.32"* %2, %"struct.Solve::edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %2, i32 0, i32 0
  %6 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  ret %"struct.Solve::edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Solve4edgeEES3_ET0_T_S6_S5_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.32", align 8
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.32", align 8
  %9 = alloca %"class.std::move_iterator.32", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %11, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.32"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.32"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.32"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %8, i32 0, i32 0
  %18 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  %20 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %19, align 8
  %21 = call %"struct.Solve::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Solve4edgeEES5_EET0_T_S8_S7_(%"struct.Solve::edge"* %18, %"struct.Solve::edge"* %20, %"struct.Solve::edge"* %16)
  ret %"struct.Solve::edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Solve4edgeEES5_EET0_T_S8_S7_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.566
  %8 = load i32, i32* @y.567
  %9 = add i32 %7, 616090368
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 616090368
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -202172917, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %94
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -202172917, label %21
    i32 1222797452, label %29
    i32 -83773451, label %74
    i32 466772212, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %94

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1222797452, i32 466772212
  store i32 %28, i32* %17
  br label %94

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.32", align 8
  %31 = alloca %"class.std::move_iterator.32", align 8
  %32 = alloca %"struct.Solve::edge"*, align 8
  %33 = alloca %"class.std::move_iterator.32", align 8
  %34 = alloca %"class.std::move_iterator.32", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %30, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %31, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %36, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %32, align 8
  %37 = bitcast %"class.std::move_iterator.32"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.32"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.std::move_iterator.32"* %34 to i8*
  %40 = bitcast %"class.std::move_iterator.32"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %32, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %33, i32 0, i32 0
  %43 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %34, i32 0, i32 0
  %45 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %44, align 8
  %46 = call %"struct.Solve::edge"* @_ZSt4copyISt13move_iteratorIPN5Solve4edgeEES3_ET0_T_S6_S5_(%"struct.Solve::edge"* %43, %"struct.Solve::edge"* %45, %"struct.Solve::edge"* %41)
  store %"struct.Solve::edge"* %46, %"struct.Solve::edge"** %4
  %47 = load i32, i32* @x.566
  %48 = load i32, i32* @y.567
  %49 = sub i32 %47, -1546766776
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1546766776
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -83773451, i32 466772212
  store i32 %73, i32* %17
  br label %94

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.32", align 8
  %78 = alloca %"class.std::move_iterator.32", align 8
  %79 = alloca %"struct.Solve::edge"*, align 8
  %80 = alloca %"class.std::move_iterator.32", align 8
  %81 = alloca %"class.std::move_iterator.32", align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %77, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %82, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %78, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %83, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %79, align 8
  %84 = bitcast %"class.std::move_iterator.32"* %80 to i8*
  %85 = bitcast %"class.std::move_iterator.32"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = bitcast %"class.std::move_iterator.32"* %81 to i8*
  %87 = bitcast %"class.std::move_iterator.32"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %79, align 8
  %89 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %80, i32 0, i32 0
  %90 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %89, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %81, i32 0, i32 0
  %92 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %91, align 8
  %93 = call %"struct.Solve::edge"* @_ZSt4copyISt13move_iteratorIPN5Solve4edgeEES3_ET0_T_S6_S5_(%"struct.Solve::edge"* %90, %"struct.Solve::edge"* %92, %"struct.Solve::edge"* %88)
  store i32 1222797452, i32* %17
  br label %94

; <label>:94:                                     ; preds = %76, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt4copyISt13move_iteratorIPN5Solve4edgeEES3_ET0_T_S6_S5_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.32", align 8
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"class.std::move_iterator.32", align 8
  %8 = alloca %"class.std::move_iterator.32", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %10, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator.32"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.32"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %7, i32 0, i32 0
  %14 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %13, align 8
  %15 = call %"struct.Solve::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Solve4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Solve::edge"* %14)
  %16 = bitcast %"class.std::move_iterator.32"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %8, i32 0, i32 0
  %19 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %18, align 8
  %20 = call %"struct.Solve::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Solve4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Solve::edge"* %19)
  %21 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %22 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %15, %"struct.Solve::edge"* %20, %"struct.Solve::edge"* %21)
  ret %"struct.Solve::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %8 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %7)
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %9)
  %11 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %12 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIPN5Solve4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Solve::edge"* %11)
  %13 = call %"struct.Solve::edge"* @_ZSt13__copy_move_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %8, %"struct.Solve::edge"* %10, %"struct.Solve::edge"* %12)
  ret %"struct.Solve::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Solve4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.32", align 8
  %3 = alloca %"class.std::move_iterator.32", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  %5 = bitcast %"class.std::move_iterator.32"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.32"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %3, i32 0, i32 0
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %9 = call %"struct.Solve::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5Solve4edgeEELb1EE7_S_baseES4_(%"struct.Solve::edge"* %8)
  ret %"struct.Solve::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt13__copy_move_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %11 = call %"struct.Solve::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Solve4edgeEEEPT_PKS5_S8_S6_(%"struct.Solve::edge"* %8, %"struct.Solve::edge"* %9, %"struct.Solve::edge"* %10)
  ret %"struct.Solve::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Solve4edgeEEEPT_PKS5_S8_S6_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat align 2 {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca %"struct.Solve::edge"**
  %8 = alloca %"struct.Solve::edge"**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.576
  %12 = load i32, i32* @y.577
  %13 = sub i32 %11, 698885968
  %14 = sub i32 %13, 1
  %15 = add i32 %14, 698885968
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -1665805468, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %272
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1665805468, label %25
    i32 520199975, label %33
    i32 1694933124, label %69
    i32 1845684860, label %72
    i32 -1982374295, label %100
    i32 -477458250, label %125
    i32 -2061815404, label %126
    i32 -2078989243, label %154
    i32 -1276858685, label %187
    i32 -85049646, label %189
    i32 1954116096, label %246
    i32 -120859884, label %266
  ]

; <label>:24:                                     ; preds = %22
  br label %272

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 520199975, i32 -85049646
  store i32 %32, i32* %21
  br label %272

; <label>:33:                                     ; preds = %22
  %34 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"** %34, %"struct.Solve::edge"*** %8
  %35 = alloca %"struct.Solve::edge"*, align 8
  %36 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"** %36, %"struct.Solve::edge"*** %7
  %37 = alloca i64, align 8
  store i64* %37, i64** %6
  %38 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %38, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %35, align 8
  %39 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %7
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %39, align 8
  %40 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %35, align 8
  %41 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %8
  %42 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %41, align 8
  %43 = ptrtoint %"struct.Solve::edge"* %40 to i64
  %44 = ptrtoint %"struct.Solve::edge"* %42 to i64
  %45 = add i64 %43, -5555503417277925353
  %46 = sub i64 %45, %44
  %47 = sub i64 %46, -5555503417277925353
  %48 = sub i64 %43, %44
  %49 = sdiv exact i64 %47, 8
  %50 = load volatile i64*, i64** %6
  store i64 %49, i64* %50, align 8
  %51 = load volatile i64*, i64** %6
  %52 = load i64, i64* %51, align 8
  %53 = icmp ne i64 %52, 0
  store i1 %53, i1* %5
  %54 = load i32, i32* @x.576
  %55 = load i32, i32* @y.577
  %56 = sub i32 %54, 499222899
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 499222899
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 1694933124, i32 -85049646
  store i32 %68, i32* %21
  br label %272

; <label>:69:                                     ; preds = %22
  %70 = load volatile i1, i1* %5
  %71 = select i1 %70, i32 1845684860, i32 -2061815404
  store i32 %71, i32* %21
  br label %272

; <label>:72:                                     ; preds = %22
  %73 = load i32, i32* @x.576
  %74 = load i32, i32* @y.577
  %75 = add i32 %73, 1737022555
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 1737022555
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -1982374295, i32 1954116096
  store i32 %99, i32* %21
  br label %272

; <label>:100:                                    ; preds = %22
  %101 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %7
  %102 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %101, align 8
  %103 = bitcast %"struct.Solve::edge"* %102 to i8*
  %104 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %8
  %105 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %104, align 8
  %106 = bitcast %"struct.Solve::edge"* %105 to i8*
  %107 = load volatile i64*, i64** %6
  %108 = load i64, i64* %107, align 8
  %109 = mul i64 8, %108
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %103, i8* %106, i64 %109, i32 4, i1 false)
  %110 = load i32, i32* @x.576
  %111 = load i32, i32* @y.577
  %112 = add i32 %110, 1230879169
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 1230879169
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -477458250, i32 1954116096
  store i32 %124, i32* %21
  br label %272

; <label>:125:                                    ; preds = %22
  store i32 -2061815404, i32* %21
  br label %272

; <label>:126:                                    ; preds = %22
  %127 = load i32, i32* @x.576
  %128 = load i32, i32* @y.577
  %129 = sub i32 %127, 1943403275
  %130 = sub i32 %129, 1
  %131 = add i32 %130, 1943403275
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 -2078989243, i32 -120859884
  store i32 %153, i32* %21
  br label %272

; <label>:154:                                    ; preds = %22
  %155 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %7
  %156 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %155, align 8
  %157 = load volatile i64*, i64** %6
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %156, i64 %158
  store %"struct.Solve::edge"* %159, %"struct.Solve::edge"** %4
  %160 = load i32, i32* @x.576
  %161 = load i32, i32* @y.577
  %162 = add i32 %160, 558199941
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, 558199941
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 true, true
  %173 = and i1 %170, true
  %174 = and i1 %168, %172
  %175 = and i1 %171, true
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 true, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  %186 = select i1 %184, i32 -1276858685, i32 -120859884
  store i32 %186, i32* %21
  br label %272

; <label>:187:                                    ; preds = %22
  %188 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %188

; <label>:189:                                    ; preds = %22
  %190 = alloca %"struct.Solve::edge"*, align 8
  %191 = alloca %"struct.Solve::edge"*, align 8
  %192 = alloca %"struct.Solve::edge"*, align 8
  %193 = alloca i64, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %190, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %191, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %192, align 8
  %194 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %191, align 8
  %195 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %190, align 8
  %196 = ptrtoint %"struct.Solve::edge"* %194 to i64
  %197 = ptrtoint %"struct.Solve::edge"* %195 to i64
  %198 = sub i64 0, %197
  %199 = add i64 %196, %198
  %200 = sub i64 %196, %197
  %201 = mul i64 %199, %197
  %202 = shl i64 %196, %197
  %203 = add i64 0, -1090998302068859832
  %204 = sub i64 %203, %196
  %205 = sub i64 %204, -1090998302068859832
  %206 = sub i64 0, %196
  %207 = sub i64 %205, 4590431969797630025
  %208 = add i64 %207, %197
  %209 = add i64 %208, 4590431969797630025
  %210 = add i64 %205, %197
  %211 = sub i64 0, 7091532971266599917
  %212 = sub i64 %211, %196
  %213 = add i64 %212, 7091532971266599917
  %214 = sub i64 0, %196
  %215 = sub i64 0, %197
  %216 = sub i64 %213, %215
  %217 = add i64 %213, %197
  %218 = sub i64 0, 8492651400450841415
  %219 = sub i64 %218, %196
  %220 = add i64 %219, 8492651400450841415
  %221 = sub i64 0, %196
  %222 = sub i64 0, %197
  %223 = sub i64 %220, %222
  %224 = add i64 %220, %197
  %225 = sub i64 %196, 2011288416115429516
  %226 = sub i64 %225, %197
  %227 = add i64 %226, 2011288416115429516
  %228 = sub i64 %196, %197
  %229 = mul i64 %227, %197
  %230 = sub i64 %196, 8551052525660573419
  %231 = sub i64 %230, %197
  %232 = add i64 %231, 8551052525660573419
  %233 = sub i64 %196, %197
  %234 = add i64 0, -3688656264416917297
  %235 = sub i64 %234, %232
  %236 = sub i64 %235, -3688656264416917297
  %237 = sub i64 0, %232
  %238 = sub i64 %236, 4502491750076003775
  %239 = add i64 %238, 8
  %240 = add i64 %239, 4502491750076003775
  %241 = add i64 %236, 8
  %242 = shl i64 %232, 8
  %243 = sdiv exact i64 %232, 8
  store i64 %243, i64* %193, align 8
  %244 = load i64, i64* %193, align 8
  %245 = icmp ne i64 %244, 0
  store i32 520199975, i32* %21
  br label %272

; <label>:246:                                    ; preds = %22
  %247 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %7
  %248 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %247, align 8
  %249 = bitcast %"struct.Solve::edge"* %248 to i8*
  %250 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %8
  %251 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %250, align 8
  %252 = bitcast %"struct.Solve::edge"* %251 to i8*
  %253 = load volatile i64*, i64** %6
  %254 = load i64, i64* %253, align 8
  %255 = sub i64 0, -7498754191006898103
  %256 = sub i64 %255, 8
  %257 = add i64 %256, -7498754191006898103
  %258 = sub i64 0, 8
  %259 = sub i64 0, %257
  %260 = sub i64 0, %254
  %261 = add i64 %259, %260
  %262 = sub i64 0, %261
  %263 = add i64 %257, %254
  %264 = shl i64 8, %254
  %265 = mul i64 8, %254
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %249, i8* %252, i64 %265, i32 4, i1 false)
  store i32 -1982374295, i32* %21
  br label %272

; <label>:266:                                    ; preds = %22
  %267 = load volatile %"struct.Solve::edge"**, %"struct.Solve::edge"*** %7
  %268 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %267, align 8
  %269 = load volatile i64*, i64** %6
  %270 = load i64, i64* %269, align 8
  %271 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %268, i64 %270
  store i32 -2078989243, i32* %21
  br label %272

; <label>:272:                                    ; preds = %266, %246, %189, %154, %126, %125, %100, %72, %69, %33, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5Solve4edgeEELb1EE7_S_baseES4_(%"struct.Solve::edge"*) #0 comdat align 2 {
  %2 = alloca %"struct.Solve::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.578
  %6 = load i32, i32* @y.579
  %7 = sub i32 %5, -647734343
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -647734343
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1837062676, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1837062676, label %19
    i32 499124419, label %39
    i32 1142932524, label %58
    i32 -1445076609, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 499124419, i32 -1445076609
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.32", align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %40, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %41, align 8
  %42 = call %"struct.Solve::edge"* @_ZNKSt13move_iteratorIPN5Solve4edgeEE4baseEv(%"class.std::move_iterator.32"* %40)
  store %"struct.Solve::edge"* %42, %"struct.Solve::edge"** %2
  %43 = load i32, i32* @x.578
  %44 = load i32, i32* @y.579
  %45 = sub i32 %43, -1020182300
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1020182300
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1142932524, i32 -1445076609
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %2
  ret %"struct.Solve::edge"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator.32", align 8
  %62 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %61, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %62, align 8
  %63 = call %"struct.Solve::edge"* @_ZNKSt13move_iteratorIPN5Solve4edgeEE4baseEv(%"class.std::move_iterator.32"* %61)
  store i32 499124419, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNKSt13move_iteratorIPN5Solve4edgeEE4baseEv(%"class.std::move_iterator.32"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %2, align 8
  %3 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %3, i32 0, i32 0
  %5 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  ret %"struct.Solve::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Solve4edgeEEC2ES2_(%"class.std::move_iterator.32"*, %"struct.Solve::edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.32"*, align 8
  %4 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %3, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %4, align 8
  %5 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %7, %"struct.Solve::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Solve4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Solve::edge"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.584
  %6 = load i32, i32* @y.585
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 98286000, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 98286000, label %18
    i32 -620485340, label %26
    i32 -1560490984, label %57
    i32 1167091243, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -620485340, i32 1167091243
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %28 = alloca %"struct.Solve::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  %30 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %28, align 8
  %31 = load i32, i32* @x.584
  %32 = load i32, i32* @y.585
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1560490984, i32 1167091243
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %60 = alloca %"struct.Solve::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %59, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %59, align 8
  %62 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %60, align 8
  store i32 -620485340, i32* %14
  br label %63

; <label>:63:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %13, align 8
  %14 = alloca i32
  store i32 -1235877889, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %133
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1235877889, label %18
    i32 534718477, label %21
    i32 -450200999, label %48
    i32 -1523139387, label %99
    i32 -1610498450, label %100
    i32 157487787, label %101
  ]

; <label>:17:                                     ; preds = %15
  br label %133

; <label>:18:                                     ; preds = %15
  %19 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4) #3
  %20 = select i1 %19, i32 534718477, i32 -1610498450
  store i32 %20, i32* %14
  br label %133

; <label>:21:                                     ; preds = %15
  %22 = load i32, i32* @x.586
  %23 = load i32, i32* @y.587
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -450200999, i32 157487787
  store i32 %47, i32* %14
  br label %133

; <label>:48:                                     ; preds = %15
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3) #3
  %54 = call i64 @_ZSt4__lgl(i64 %53)
  %55 = mul nsw i64 %54, 2
  %56 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %8 to i8*
  %57 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 1, i32 1, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %59 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %58, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %61 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %60, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_T1_(%"struct.Solve::edge"* %59, %"struct.Solve::edge"* %61, i64 %55)
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 8, i1 false)
  %64 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 8, i1 false)
  %66 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %67 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 1, i32 1, i1 false)
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %69 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %68, align 8
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %71 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %70, align 8
  call void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %69, %"struct.Solve::edge"* %71)
  %72 = load i32, i32* @x.586
  %73 = load i32, i32* @y.587
  %74 = add i32 %72, -1788437799
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1788437799
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 -1523139387, i32 157487787
  store i32 %98, i32* %14
  br label %133

; <label>:99:                                     ; preds = %15
  store i32 -1610498450, i32* %14
  br label %133

; <label>:100:                                    ; preds = %15
  ret void

; <label>:101:                                    ; preds = %15
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 8, i32 8, i1 false)
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 8, i32 8, i1 false)
  %106 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3) #3
  %107 = call i64 @_ZSt4__lgl(i64 %106)
  %108 = add i64 0, -8482098107233243461
  %109 = sub i64 %108, %107
  %110 = sub i64 %109, -8482098107233243461
  %111 = sub i64 0, %107
  %112 = add i64 %110, -5104128500504833634
  %113 = add i64 %112, 2
  %114 = sub i64 %113, -5104128500504833634
  %115 = add i64 %110, 2
  %116 = mul nsw i64 %107, 2
  %117 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %8 to i8*
  %118 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %118, i64 1, i32 1, i1 false)
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %120 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %119, align 8
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %122 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %121, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_T1_(%"struct.Solve::edge"* %120, %"struct.Solve::edge"* %122, i64 %116)
  %123 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %124 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 8, i32 8, i1 false)
  %125 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %126 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 8, i1 false)
  %127 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %128 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 1, i32 1, i1 false)
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %130 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %129, align 8
  %131 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %132 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %131, align 8
  call void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %130, %"struct.Solve::edge"* %132)
  store i32 -450200999, i32* %14
  br label %133

; <label>:133:                                    ; preds = %101, %99, %48, %21, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_15_Iter_comp_iterIT_EES6_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.588
  %4 = load i32, i32* @y.589
  %5 = sub i32 %3, 1117719488
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1117719488
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 1716823157, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1716823157, label %17
    i32 1128217996, label %37
    i32 1295825781, label %68
    i32 1757649013, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1128217996, i32 1757649013
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %39 = alloca %class.anon, align 1
  %40 = alloca %class.anon, align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %38)
  %41 = load i32, i32* @x.588
  %42 = load i32, i32* @y.589
  %43 = sub i32 %41, 548226875
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 548226875
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1295825781, i32 1757649013
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %71 = alloca %class.anon, align 1
  %72 = alloca %class.anon, align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %70)
  store i32 1128217996, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_T1_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, i64) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %21, align 8
  store i64 %2, i64* %8, align 8
  %22 = alloca i32
  store i32 -2036090867, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %238
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -2036090867, label %26
    i32 2074140543, label %30
    i32 2065719559, label %58
    i32 -2006757817, label %76
    i32 -700210688, label %79
    i32 1935513372, label %95
    i32 177518183, label %125
    i32 -989972038, label %126
    i32 2143972934, label %142
    i32 -2061051117, label %187
    i32 1622083372, label %188
    i32 2046539719, label %189
    i32 -1885874592, label %192
    i32 -121611841, label %207
  ]

; <label>:25:                                     ; preds = %23
  br label %238

; <label>:26:                                     ; preds = %23
  %27 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  %28 = icmp sgt i64 %27, 16
  %29 = select i1 %28, i32 2074140543, i32 1622083372
  store i32 %29, i32* %22
  br label %238

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.590
  %32 = load i32, i32* @y.591
  %33 = add i32 %31, -1635719220
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1635719220
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 2065719559, i32 2046539719
  store i32 %57, i32* %22
  br label %238

; <label>:58:                                     ; preds = %23
  %59 = load i64, i64* %8, align 8
  %60 = icmp eq i64 %59, 0
  store i1 %60, i1* %4
  %61 = load i32, i32* @x.590
  %62 = load i32, i32* @y.591
  %63 = sub i32 %61, 676456496
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 676456496
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 -2006757817, i32 2046539719
  store i32 %75, i32* %22
  br label %238

; <label>:76:                                     ; preds = %23
  %77 = load volatile i1, i1* %4
  %78 = select i1 %77, i32 -700210688, i32 -989972038
  store i32 %78, i32* %22
  br label %238

; <label>:79:                                     ; preds = %23
  %80 = load i32, i32* @x.590
  %81 = load i32, i32* @y.591
  %82 = sub i32 %80, 2002136185
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 2002136185
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 1935513372, i32 -1885874592
  store i32 %94, i32* %22
  br label %238

; <label>:95:                                     ; preds = %23
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 8, i1 false)
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %103 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 1, i32 1, i1 false)
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %105 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %104, align 8
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %107 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %106, align 8
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %109 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %108, align 8
  call void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"* %105, %"struct.Solve::edge"* %107, %"struct.Solve::edge"* %109)
  %110 = load i32, i32* @x.590
  %111 = load i32, i32* @y.591
  %112 = add i32 %110, 1421012126
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 1421012126
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 177518183, i32 -1885874592
  store i32 %124, i32* %22
  br label %238

; <label>:125:                                    ; preds = %23
  store i32 1622083372, i32* %22
  br label %238

; <label>:126:                                    ; preds = %23
  %127 = load i32, i32* @x.590
  %128 = load i32, i32* @y.591
  %129 = sub i32 %127, -565148895
  %130 = sub i32 %129, 1
  %131 = add i32 %130, -565148895
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 2143972934, i32 -121611841
  store i32 %141, i32* %22
  br label %238

; <label>:142:                                    ; preds = %23
  %143 = load i64, i64* %8, align 8
  %144 = add i64 %143, -5776248507746246616
  %145 = add i64 %144, -1
  %146 = sub i64 %145, -5776248507746246616
  %147 = add nsw i64 %143, -1
  store i64 %146, i64* %8, align 8
  %148 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %149 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 8, i32 8, i1 false)
  %150 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %151 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 8, i32 8, i1 false)
  %152 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %16 to i8*
  %153 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %152, i8* %153, i64 1, i32 1, i1 false)
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %155 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %154, align 8
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %157 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %156, align 8
  %158 = call %"struct.Solve::edge"* @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_T0_(%"struct.Solve::edge"* %155, %"struct.Solve::edge"* %157)
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"struct.Solve::edge"* %158, %"struct.Solve::edge"** %159, align 8
  %160 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %161 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 8, i32 8, i1 false)
  %162 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %163 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 8, i32 8, i1 false)
  %164 = load i64, i64* %8, align 8
  %165 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %19 to i8*
  %166 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %165, i8* %166, i64 1, i32 1, i1 false)
  %167 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %168 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %167, align 8
  %169 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %170 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %169, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_T1_(%"struct.Solve::edge"* %168, %"struct.Solve::edge"* %170, i64 %164)
  %171 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %172 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %171, i8* %172, i64 8, i32 8, i1 false)
  %173 = load i32, i32* @x.590
  %174 = load i32, i32* @y.591
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  %186 = select i1 %184, i32 -2061051117, i32 -121611841
  store i32 %186, i32* %22
  br label %238

; <label>:187:                                    ; preds = %23
  store i32 -2036090867, i32* %22
  br label %238

; <label>:188:                                    ; preds = %23
  ret void

; <label>:189:                                    ; preds = %23
  %190 = load i64, i64* %8, align 8
  %191 = icmp eq i64 %190, 0
  store i32 2065719559, i32* %22
  br label %238

; <label>:192:                                    ; preds = %23
  %193 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %194 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %193, i8* %194, i64 8, i32 8, i1 false)
  %195 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %196 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %195, i8* %196, i64 8, i32 8, i1 false)
  %197 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %198 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 8, i32 8, i1 false)
  %199 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %200 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %199, i8* %200, i64 1, i32 1, i1 false)
  %201 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %202 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %201, align 8
  %203 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %204 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %203, align 8
  %205 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %206 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %205, align 8
  call void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"* %202, %"struct.Solve::edge"* %204, %"struct.Solve::edge"* %206)
  store i32 1935513372, i32* %22
  br label %238

; <label>:207:                                    ; preds = %23
  %208 = load i64, i64* %8, align 8
  %209 = shl i64 %208, -1
  %210 = sub i64 0, -1
  %211 = sub i64 %208, %210
  %212 = add nsw i64 %208, -1
  store i64 %211, i64* %8, align 8
  %213 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %214 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %213, i8* %214, i64 8, i32 8, i1 false)
  %215 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %216 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %215, i8* %216, i64 8, i32 8, i1 false)
  %217 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %16 to i8*
  %218 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %217, i8* %218, i64 1, i32 1, i1 false)
  %219 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %220 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %219, align 8
  %221 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %222 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %221, align 8
  %223 = call %"struct.Solve::edge"* @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_T0_(%"struct.Solve::edge"* %220, %"struct.Solve::edge"* %222)
  %224 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"struct.Solve::edge"* %223, %"struct.Solve::edge"** %224, align 8
  %225 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %226 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %225, i8* %226, i64 8, i32 8, i1 false)
  %227 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %228 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %227, i8* %228, i64 8, i32 8, i1 false)
  %229 = load i64, i64* %8, align 8
  %230 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %19 to i8*
  %231 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %230, i8* %231, i64 1, i32 1, i1 false)
  %232 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %233 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %232, align 8
  %234 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %235 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %234, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_T1_(%"struct.Solve::edge"* %233, %"struct.Solve::edge"* %235, i64 %229)
  %236 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %237 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %236, i8* %237, i64 8, i32 8, i1 false)
  store i32 2143972934, i32* %22
  br label %238

; <label>:238:                                    ; preds = %207, %192, %189, %187, %142, %126, %125, %95, %79, %76, %58, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt4__lgl(i64) #5 comdat {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @llvm.ctlz.i64(i64 %3, i1 true)
  %5 = trunc i64 %4 to i32
  %6 = sext i32 %5 to i64
  %7 = sub i64 63, 8209749208942711223
  %8 = sub i64 %7, %6
  %9 = add i64 %8, 8209749208942711223
  %10 = sub i64 63, %6
  ret i64 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.594
  %7 = load i32, i32* @y.595
  %8 = add i32 %6, -1536803614
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1536803614
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1546479566, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %121
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1546479566, label %20
    i32 428601520, label %40
    i32 -981034961, label %81
    i32 -19479911, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %121

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 428601520, i32 -19479911
  store i32 %39, i32* %16
  br label %121

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %44 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %43) #3
  %45 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %47 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %46) #3
  %48 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %47, align 8
  %49 = ptrtoint %"struct.Solve::edge"* %45 to i64
  %50 = ptrtoint %"struct.Solve::edge"* %48 to i64
  %51 = sub i64 0, %50
  %52 = add i64 %49, %51
  %53 = sub i64 %49, %50
  %54 = sdiv exact i64 %52, 8
  store i64 %54, i64* %3
  %55 = load i32, i32* @x.594
  %56 = load i32, i32* @y.595
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -981034961, i32 -19479911
  store i32 %80, i32* %16
  br label %121

; <label>:81:                                     ; preds = %17
  %82 = load volatile i64, i64* %3
  ret i64 %82

; <label>:83:                                     ; preds = %17
  %84 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %85 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %84, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %85, align 8
  %86 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %84, align 8
  %87 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %86) #3
  %88 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %87, align 8
  %89 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %85, align 8
  %90 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %89) #3
  %91 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %90, align 8
  %92 = ptrtoint %"struct.Solve::edge"* %88 to i64
  %93 = ptrtoint %"struct.Solve::edge"* %91 to i64
  %94 = sub i64 0, -7517611425861819981
  %95 = sub i64 %94, %92
  %96 = add i64 %95, -7517611425861819981
  %97 = sub i64 0, %92
  %98 = sub i64 0, %96
  %99 = sub i64 0, %93
  %100 = add i64 %98, %99
  %101 = sub i64 0, %100
  %102 = add i64 %96, %93
  %103 = shl i64 %92, %93
  %104 = add i64 0, 2164178163568330212
  %105 = sub i64 %104, %92
  %106 = sub i64 %105, 2164178163568330212
  %107 = sub i64 0, %92
  %108 = sub i64 0, %93
  %109 = sub i64 %106, %108
  %110 = add i64 %106, %93
  %111 = sub i64 0, %93
  %112 = add i64 %92, %111
  %113 = sub i64 %92, %93
  %114 = sub i64 0, %112
  %115 = add i64 0, %114
  %116 = sub i64 0, %112
  %117 = sub i64 0, 8
  %118 = sub i64 %115, %117
  %119 = add i64 %115, 8
  %120 = sdiv exact i64 %112, 8
  store i32 428601520, i32* %16
  br label %121

; <label>:121:                                    ; preds = %83, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %17, align 8
  %18 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4) #3
  store i64 %18, i64* %3
  %19 = alloca i32
  store i32 -1746836403, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %148
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1746836403, label %23
    i32 -629345637, label %27
    i32 390312530, label %48
    i32 1929828684, label %64
    i32 353250643, label %90
    i32 1124327291, label %91
    i32 1557756124, label %107
    i32 37833398, label %135
    i32 -183779836, label %136
    i32 1589080826, label %147
  ]

; <label>:22:                                     ; preds = %20
  br label %148

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %3
  %25 = icmp sgt i64 %24, 16
  %26 = select i1 %25, i32 -629345637, i32 390312530
  store i32 %26, i32* %19
  br label %148

; <label>:27:                                     ; preds = %20
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 16) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Solve::edge"* %30, %"struct.Solve::edge"** %31, align 8
  %32 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9 to i8*
  %33 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 1, i32 1, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %35 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %37 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %36, align 8
  call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %35, %"struct.Solve::edge"* %37)
  %38 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 16) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Solve::edge"* %38, %"struct.Solve::edge"** %39, align 8
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %43 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 1, i32 1, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %45 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %47 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %46, align 8
  call void @_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %45, %"struct.Solve::edge"* %47)
  store i32 1124327291, i32* %19
  br label %148

; <label>:48:                                     ; preds = %20
  %49 = load i32, i32* @x.596
  %50 = load i32, i32* @y.597
  %51 = sub i32 %49, 984106693
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 984106693
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1929828684, i32 -183779836
  store i32 %63, i32* %19
  br label %148

; <label>:64:                                     ; preds = %20
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 8, i1 false)
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %15 to i8*
  %70 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 1, i32 1, i1 false)
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %72 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %71, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %74 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %73, align 8
  call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %72, %"struct.Solve::edge"* %74)
  %75 = load i32, i32* @x.596
  %76 = load i32, i32* @y.597
  %77 = add i32 %75, -1234770136
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1234770136
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 353250643, i32 -183779836
  store i32 %89, i32* %19
  br label %148

; <label>:90:                                     ; preds = %20
  store i32 1124327291, i32* %19
  br label %148

; <label>:91:                                     ; preds = %20
  %92 = load i32, i32* @x.596
  %93 = load i32, i32* @y.597
  %94 = sub i32 %92, 51631406
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 51631406
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 1557756124, i32 1589080826
  store i32 %106, i32* %19
  br label %148

; <label>:107:                                    ; preds = %20
  %108 = load i32, i32* @x.596
  %109 = load i32, i32* @y.597
  %110 = add i32 %108, -1144984764
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -1144984764
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 37833398, i32 1589080826
  store i32 %134, i32* %19
  br label %148

; <label>:135:                                    ; preds = %20
  ret void

; <label>:136:                                    ; preds = %20
  %137 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %138 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 8, i1 false)
  %139 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %140 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %140, i64 8, i32 8, i1 false)
  %141 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %15 to i8*
  %142 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 1, i32 1, i1 false)
  %143 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %144 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %143, align 8
  %145 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %146 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %145, align 8
  call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %144, %"struct.Solve::edge"* %146)
  store i32 1929828684, i32* %19
  br label %148

; <label>:147:                                    ; preds = %20
  store i32 1557756124, i32* %19
  br label %148

; <label>:148:                                    ; preds = %147, %136, %107, %91, %90, %64, %48, %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %17, align 8
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %25 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 1, i32 1, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %27 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %29 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %31 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %30, align 8
  call void @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"* %27, %"struct.Solve::edge"* %29, %"struct.Solve::edge"* %31)
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 8, i1 false)
  %36 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %14 to i8*
  %37 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 1, i32 1, i1 false)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %39 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %38, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %41 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %40, align 8
  call void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %39, %"struct.Solve::edge"* %41)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"struct.Solve::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.600
  %7 = load i32, i32* @y.601
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1817188858, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %176
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1817188858, label %19
    i32 -904677386, label %27
    i32 1593737323, label %99
    i32 -439964010, label %101
  ]

; <label>:18:                                     ; preds = %16
  br label %176

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -904677386, i32 -439964010
  store i32 %26, i32* %15
  br label %176

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %37 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %43, align 8
  %44 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %29) #3
  %45 = sdiv i64 %44, 2
  %46 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %29, i64 %45) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %"struct.Solve::edge"* %46, %"struct.Solve::edge"** %47, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %29, i64 1) #3
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  store %"struct.Solve::edge"* %50, %"struct.Solve::edge"** %51, align 8
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %35 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"* %30, i64 1) #3
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  store %"struct.Solve::edge"* %54, %"struct.Solve::edge"** %55, align 8
  %56 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %37 to i8*
  %57 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 1, i32 1, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %59 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %58, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %61 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %63 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %62, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  %65 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %64, align 8
  call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_SD_T0_(%"struct.Solve::edge"* %59, %"struct.Solve::edge"* %61, %"struct.Solve::edge"* %63, %"struct.Solve::edge"* %65)
  %66 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %29, i64 1) #3
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  store %"struct.Solve::edge"* %66, %"struct.Solve::edge"** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 8, i1 false)
  %72 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %41 to i8*
  %73 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 1, i32 1, i1 false)
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  %75 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %74, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %77 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %76, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %79 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %78, align 8
  %80 = call %"struct.Solve::edge"* @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_SD_T0_(%"struct.Solve::edge"* %75, %"struct.Solve::edge"* %77, %"struct.Solve::edge"* %79)
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Solve::edge"* %80, %"struct.Solve::edge"** %81, align 8
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %83 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %82, align 8
  store %"struct.Solve::edge"* %83, %"struct.Solve::edge"** %3
  %84 = load i32, i32* @x.600
  %85 = load i32, i32* @y.601
  %86 = sub i32 %84, -816410312
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -816410312
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 1593737323, i32 -439964010
  store i32 %98, i32* %15
  br label %176

; <label>:99:                                     ; preds = %16
  %100 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %3
  ret %"struct.Solve::edge"* %100

; <label>:101:                                    ; preds = %16
  %102 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %103 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %104 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %105 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %106 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %107 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %108 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %109 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %110 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %111 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %112 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %113 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %114 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %115 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %103, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %116, align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %104, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %117, align 8
  %118 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %104, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %103) #3
  %119 = sub i64 0, 376169786128499452
  %120 = sub i64 %119, %118
  %121 = add i64 %120, 376169786128499452
  %122 = sub i64 0, %118
  %123 = sub i64 0, %121
  %124 = sub i64 0, 2
  %125 = add i64 %123, %124
  %126 = sub i64 0, %125
  %127 = add i64 %121, 2
  %128 = shl i64 %118, 2
  %129 = add i64 0, -833039382009826921
  %130 = sub i64 %129, %118
  %131 = sub i64 %130, -833039382009826921
  %132 = sub i64 0, %118
  %133 = sub i64 %131, -4382543316860020471
  %134 = add i64 %133, 2
  %135 = add i64 %134, -4382543316860020471
  %136 = add i64 %131, 2
  %137 = sdiv i64 %118, 2
  %138 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %103, i64 %137) #3
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %106, i32 0, i32 0
  store %"struct.Solve::edge"* %138, %"struct.Solve::edge"** %139, align 8
  %140 = bitcast %"class.__gnu_cxx::__normal_iterator"* %107 to i8*
  %141 = bitcast %"class.__gnu_cxx::__normal_iterator"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 8, i32 8, i1 false)
  %142 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %103, i64 1) #3
  %143 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %108, i32 0, i32 0
  store %"struct.Solve::edge"* %142, %"struct.Solve::edge"** %143, align 8
  %144 = bitcast %"class.__gnu_cxx::__normal_iterator"* %109 to i8*
  %145 = bitcast %"class.__gnu_cxx::__normal_iterator"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %145, i64 8, i32 8, i1 false)
  %146 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"* %104, i64 1) #3
  %147 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %110, i32 0, i32 0
  store %"struct.Solve::edge"* %146, %"struct.Solve::edge"** %147, align 8
  %148 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %111 to i8*
  %149 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 1, i32 1, i1 false)
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %107, i32 0, i32 0
  %151 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %150, align 8
  %152 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %108, i32 0, i32 0
  %153 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %152, align 8
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %109, i32 0, i32 0
  %155 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %154, align 8
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %110, i32 0, i32 0
  %157 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %156, align 8
  call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_SD_T0_(%"struct.Solve::edge"* %151, %"struct.Solve::edge"* %153, %"struct.Solve::edge"* %155, %"struct.Solve::edge"* %157)
  %158 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %103, i64 1) #3
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %112, i32 0, i32 0
  store %"struct.Solve::edge"* %158, %"struct.Solve::edge"** %159, align 8
  %160 = bitcast %"class.__gnu_cxx::__normal_iterator"* %113 to i8*
  %161 = bitcast %"class.__gnu_cxx::__normal_iterator"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 8, i32 8, i1 false)
  %162 = bitcast %"class.__gnu_cxx::__normal_iterator"* %114 to i8*
  %163 = bitcast %"class.__gnu_cxx::__normal_iterator"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 8, i32 8, i1 false)
  %164 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %115 to i8*
  %165 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 1, i32 1, i1 false)
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %112, i32 0, i32 0
  %167 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %166, align 8
  %168 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %113, i32 0, i32 0
  %169 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %168, align 8
  %170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %114, i32 0, i32 0
  %171 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %170, align 8
  %172 = call %"struct.Solve::edge"* @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_SD_T0_(%"struct.Solve::edge"* %167, %"struct.Solve::edge"* %169, %"struct.Solve::edge"* %171)
  %173 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %102, i32 0, i32 0
  store %"struct.Solve::edge"* %172, %"struct.Solve::edge"** %173, align 8
  %174 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %102, i32 0, i32 0
  %175 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %174, align 8
  store i32 -904677386, i32* %15
  br label %176

; <label>:176:                                    ; preds = %101, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.602
  %18 = load i32, i32* @y.603
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %16
  %25 = icmp slt i32 %18, 10
  store i1 %25, i1* %15
  %26 = alloca i32
  store i32 1098328396, i32* %26
  br label %27

; <label>:27:                                     ; preds = %3, %301
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 1098328396, label %30
    i32 864466601, label %50
    i32 -903869086, label %103
    i32 -1169477456, label %104
    i32 942095107, label %109
    i32 1788272823, label %127
    i32 -684536656, label %154
    i32 189931122, label %206
    i32 -210351606, label %207
    i32 -236713513, label %223
    i32 -1528620209, label %239
    i32 -489579443, label %240
    i32 499742750, label %243
    i32 -744199434, label %244
    i32 -1108864822, label %274
    i32 -1842529409, label %300
  ]

; <label>:29:                                     ; preds = %27
  br label %301

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %16
  %32 = load volatile i1, i1* %15
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 864466601, i32 -744199434
  store i32 %49, i32* %26
  br label %301

; <label>:50:                                     ; preds = %27
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %51, %"class.__gnu_cxx::__normal_iterator"** %14
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %52, %"class.__gnu_cxx::__normal_iterator"** %13
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %53, %"class.__gnu_cxx::__normal_iterator"** %12
  %54 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %54, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %55 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %58 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %58, %"class.__gnu_cxx::__normal_iterator"** %10
  %59 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %59, %"class.__gnu_cxx::__normal_iterator"** %9
  %60 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %60, %"class.__gnu_cxx::__normal_iterator"** %8
  %61 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %61, %"class.__gnu_cxx::__normal_iterator"** %7
  %62 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %62, %"class.__gnu_cxx::__normal_iterator"** %6
  %63 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %63, %"class.__gnu_cxx::__normal_iterator"** %5
  %64 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %64, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %4
  %65 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %66, align 8
  %67 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %67, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %68, align 8
  %69 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %69, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %70, align 8
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator"* %55 to i8*
  %72 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %73, i64 8, i32 8, i1 false)
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator"* %56 to i8*
  %75 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %76, i64 8, i32 8, i1 false)
  %77 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %57 to i8*
  %78 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %79 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %79, i64 1, i32 1, i1 false)
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %55, i32 0, i32 0
  %81 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %80, align 8
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %56, i32 0, i32 0
  %83 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %82, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %81, %"struct.Solve::edge"* %83)
  %84 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator"* %84 to i8*
  %86 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %87, i64 8, i32 8, i1 false)
  %88 = load i32, i32* @x.602
  %89 = load i32, i32* @y.603
  %90 = sub i32 %88, 1460936101
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 1460936101
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 -903869086, i32 -744199434
  store i32 %102, i32* %26
  br label %301

; <label>:103:                                    ; preds = %27
  store i32 -1169477456, i32* %26
  br label %301

; <label>:104:                                    ; preds = %27
  %105 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %106 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %107 = call zeroext i1 @_ZN9__gnu_cxxltIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %106, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %105) #3
  %108 = select i1 %107, i32 942095107, i32 499742750
  store i32 %108, i32* %26
  br label %301

; <label>:109:                                    ; preds = %27
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %111 = bitcast %"class.__gnu_cxx::__normal_iterator"* %110 to i8*
  %112 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %113 = bitcast %"class.__gnu_cxx::__normal_iterator"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %113, i64 8, i32 8, i1 false)
  %114 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %115 = bitcast %"class.__gnu_cxx::__normal_iterator"* %114 to i8*
  %116 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %117 = bitcast %"class.__gnu_cxx::__normal_iterator"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %117, i64 8, i32 8, i1 false)
  %118 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %118, i32 0, i32 0
  %120 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %119, align 8
  %121 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %121, i32 0, i32 0
  %123 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %122, align 8
  %124 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %125 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %124, %"struct.Solve::edge"* %120, %"struct.Solve::edge"* %123)
  %126 = select i1 %125, i32 1788272823, i32 -210351606
  store i32 %126, i32* %26
  br label %301

; <label>:127:                                    ; preds = %27
  %128 = load i32, i32* @x.602
  %129 = load i32, i32* @y.603
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 false, true
  %140 = and i1 %137, false
  %141 = and i1 %135, %139
  %142 = and i1 %138, false
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 false, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 -684536656, i32 -1108864822
  store i32 %153, i32* %26
  br label %301

; <label>:154:                                    ; preds = %27
  %155 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %156 = bitcast %"class.__gnu_cxx::__normal_iterator"* %155 to i8*
  %157 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %158 = bitcast %"class.__gnu_cxx::__normal_iterator"* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %158, i64 8, i32 8, i1 false)
  %159 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %160 = bitcast %"class.__gnu_cxx::__normal_iterator"* %159 to i8*
  %161 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %162 = bitcast %"class.__gnu_cxx::__normal_iterator"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %162, i64 8, i32 8, i1 false)
  %163 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %164 = bitcast %"class.__gnu_cxx::__normal_iterator"* %163 to i8*
  %165 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %166 = bitcast %"class.__gnu_cxx::__normal_iterator"* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %166, i64 8, i32 8, i1 false)
  %167 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %4
  %168 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %167 to i8*
  %169 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %170 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %168, i8* %170, i64 1, i32 1, i1 false)
  %171 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %172 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %171, i32 0, i32 0
  %173 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %172, align 8
  %174 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %175 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %174, i32 0, i32 0
  %176 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %175, align 8
  %177 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %178 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %177, i32 0, i32 0
  %179 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %178, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"* %173, %"struct.Solve::edge"* %176, %"struct.Solve::edge"* %179)
  %180 = load i32, i32* @x.602
  %181 = load i32, i32* @y.603
  %182 = sub i32 0, 1
  %183 = add i32 %180, %182
  %184 = sub i32 %180, 1
  %185 = mul i32 %180, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %181, 10
  %189 = xor i1 %187, true
  %190 = xor i1 %188, true
  %191 = xor i1 true, true
  %192 = and i1 %189, true
  %193 = and i1 %187, %191
  %194 = and i1 %190, true
  %195 = and i1 %188, %191
  %196 = or i1 %192, %193
  %197 = or i1 %194, %195
  %198 = xor i1 %196, %197
  %199 = or i1 %189, %190
  %200 = xor i1 %199, true
  %201 = or i1 true, %191
  %202 = and i1 %200, %201
  %203 = or i1 %198, %202
  %204 = or i1 %187, %188
  %205 = select i1 %203, i32 189931122, i32 -1108864822
  store i32 %205, i32* %26
  br label %301

; <label>:206:                                    ; preds = %27
  store i32 -210351606, i32* %26
  br label %301

; <label>:207:                                    ; preds = %27
  %208 = load i32, i32* @x.602
  %209 = load i32, i32* @y.603
  %210 = add i32 %208, 956675164
  %211 = sub i32 %210, 1
  %212 = sub i32 %211, 956675164
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  %222 = select i1 %220, i32 -236713513, i32 -1842529409
  store i32 %222, i32* %26
  br label %301

; <label>:223:                                    ; preds = %27
  %224 = load i32, i32* @x.602
  %225 = load i32, i32* @y.603
  %226 = add i32 %224, -1878281276
  %227 = sub i32 %226, 1
  %228 = sub i32 %227, -1878281276
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = and i1 %232, %233
  %235 = xor i1 %232, %233
  %236 = or i1 %234, %235
  %237 = or i1 %232, %233
  %238 = select i1 %236, i32 -1528620209, i32 -1842529409
  store i32 %238, i32* %26
  br label %301

; <label>:239:                                    ; preds = %27
  store i32 -489579443, i32* %26
  br label %301

; <label>:240:                                    ; preds = %27
  %241 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %242 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %241) #3
  store i32 -1169477456, i32* %26
  br label %301

; <label>:243:                                    ; preds = %27
  ret void

; <label>:244:                                    ; preds = %27
  %245 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %246 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %247 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %248 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %249 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %250 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %251 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %252 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %253 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %254 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %255 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %256 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %257 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %258 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %259 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %245, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %259, align 8
  %260 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %246, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %260, align 8
  %261 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %247, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %261, align 8
  %262 = bitcast %"class.__gnu_cxx::__normal_iterator"* %249 to i8*
  %263 = bitcast %"class.__gnu_cxx::__normal_iterator"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %262, i8* %263, i64 8, i32 8, i1 false)
  %264 = bitcast %"class.__gnu_cxx::__normal_iterator"* %250 to i8*
  %265 = bitcast %"class.__gnu_cxx::__normal_iterator"* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %264, i8* %265, i64 8, i32 8, i1 false)
  %266 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %251 to i8*
  %267 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %266, i8* %267, i64 1, i32 1, i1 false)
  %268 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %249, i32 0, i32 0
  %269 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %268, align 8
  %270 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %250, i32 0, i32 0
  %271 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %270, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"* %269, %"struct.Solve::edge"* %271)
  %272 = bitcast %"class.__gnu_cxx::__normal_iterator"* %252 to i8*
  %273 = bitcast %"class.__gnu_cxx::__normal_iterator"* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %272, i8* %273, i64 8, i32 8, i1 false)
  store i32 864466601, i32* %26
  br label %301

; <label>:274:                                    ; preds = %27
  %275 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %276 = bitcast %"class.__gnu_cxx::__normal_iterator"* %275 to i8*
  %277 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %278 = bitcast %"class.__gnu_cxx::__normal_iterator"* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %276, i8* %278, i64 8, i32 8, i1 false)
  %279 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %280 = bitcast %"class.__gnu_cxx::__normal_iterator"* %279 to i8*
  %281 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %282 = bitcast %"class.__gnu_cxx::__normal_iterator"* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %280, i8* %282, i64 8, i32 8, i1 false)
  %283 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %284 = bitcast %"class.__gnu_cxx::__normal_iterator"* %283 to i8*
  %285 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %286 = bitcast %"class.__gnu_cxx::__normal_iterator"* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %284, i8* %286, i64 8, i32 8, i1 false)
  %287 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %4
  %288 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %287 to i8*
  %289 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %290 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %288, i8* %290, i64 1, i32 1, i1 false)
  %291 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %292 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %291, i32 0, i32 0
  %293 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %292, align 8
  %294 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %295 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %294, i32 0, i32 0
  %296 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %295, align 8
  %297 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %298 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %297, i32 0, i32 0
  %299 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %298, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"* %293, %"struct.Solve::edge"* %296, %"struct.Solve::edge"* %299)
  store i32 -684536656, i32* %26
  br label %301

; <label>:300:                                    ; preds = %27
  store i32 -236713513, i32* %26
  br label %301

; <label>:301:                                    ; preds = %300, %274, %244, %240, %239, %223, %207, %206, %154, %127, %109, %104, %103, %50, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %11, align 8
  %12 = alloca i32
  store i32 -505357074, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %153
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -505357074, label %16
    i32 497706244, label %20
    i32 262248407, label %48
    i32 -851069299, label %79
    i32 738826472, label %80
    i32 -624352229, label %107
    i32 216486664, label %135
    i32 1118961261, label %136
    i32 621012394, label %152
  ]

; <label>:15:                                     ; preds = %13
  br label %153

; <label>:16:                                     ; preds = %13
  %17 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3) #3
  %18 = icmp sgt i64 %17, 1
  %19 = select i1 %18, i32 497706244, i32 738826472
  store i32 %19, i32* %12
  br label %153

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.604
  %22 = load i32, i32* @y.605
  %23 = sub i32 %21, -676409561
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -676409561
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 262248407, i32 1118961261
  store i32 %47, i32* %12
  br label %153

; <label>:48:                                     ; preds = %13
  %49 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9 to i8*
  %57 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 1, i32 1, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %59 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %58, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %61 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %63 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %62, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"* %59, %"struct.Solve::edge"* %61, %"struct.Solve::edge"* %63)
  %64 = load i32, i32* @x.604
  %65 = load i32, i32* @y.605
  %66 = add i32 %64, -1942807424
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, -1942807424
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -851069299, i32 1118961261
  store i32 %78, i32* %12
  br label %153

; <label>:79:                                     ; preds = %13
  store i32 -505357074, i32* %12
  br label %153

; <label>:80:                                     ; preds = %13
  %81 = load i32, i32* @x.604
  %82 = load i32, i32* @y.605
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 -624352229, i32 621012394
  store i32 %106, i32* %12
  br label %153

; <label>:107:                                    ; preds = %13
  %108 = load i32, i32* @x.604
  %109 = load i32, i32* @y.605
  %110 = add i32 %108, -494365347
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -494365347
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 216486664, i32 621012394
  store i32 %134, i32* %12
  br label %153

; <label>:135:                                    ; preds = %13
  ret void

; <label>:136:                                    ; preds = %13
  %137 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %138 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %139 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 8, i32 8, i1 false)
  %140 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %141 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 8, i32 8, i1 false)
  %142 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %143 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %143, i64 8, i32 8, i1 false)
  %144 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9 to i8*
  %145 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %145, i64 1, i32 1, i1 false)
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %147 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %146, align 8
  %148 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %149 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %148, align 8
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %151 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %150, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"* %147, %"struct.Solve::edge"* %149, %"struct.Solve::edge"* %151)
  store i32 262248407, i32* %12
  br label %153

; <label>:152:                                    ; preds = %13
  store i32 -624352229, i32* %12
  br label %153

; <label>:153:                                    ; preds = %152, %136, %107, %80, %79, %48, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"struct.Solve::edge", align 4
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"struct.Solve::edge", align 4
  %14 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %16, align 8
  %17 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 -2001075975, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %123
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -2001075975, label %22
    i32 1128334386, label %26
    i32 -75771352, label %27
    i32 1339199728, label %35
    i32 1611238295, label %51
    i32 -1424724298, label %88
    i32 1160394149, label %91
    i32 -842991059, label %92
    i32 1216473096, label %99
    i32 1573552462, label %100
  ]

; <label>:21:                                     ; preds = %19
  br label %123

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp slt i64 %23, 2
  %25 = select i1 %24, i32 1128334386, i32 -75771352
  store i32 %25, i32* %18
  br label %123

; <label>:26:                                     ; preds = %19
  store i32 1216473096, i32* %18
  br label %123

; <label>:27:                                     ; preds = %19
  %28 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %28, i64* %8, align 8
  %29 = load i64, i64* %8, align 8
  %30 = add i64 %29, -373857034632907521
  %31 = sub i64 %30, 2
  %32 = sub i64 %31, -373857034632907521
  %33 = sub nsw i64 %29, 2
  %34 = sdiv i64 %32, 2
  store i64 %34, i64* %9, align 8
  store i32 1339199728, i32* %18
  br label %123

; <label>:35:                                     ; preds = %19
  %36 = load i32, i32* @x.606
  %37 = load i32, i32* @y.607
  %38 = add i32 %36, 641262671
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 641262671
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1611238295, i32 1573552462
  store i32 %50, i32* %18
  br label %123

; <label>:51:                                     ; preds = %19
  %52 = load i64, i64* %9, align 8
  %53 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 %52) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"struct.Solve::edge"* %53, %"struct.Solve::edge"** %54, align 8
  %55 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %56 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %55) #3
  %57 = bitcast %"struct.Solve::edge"* %10 to i8*
  %58 = bitcast %"struct.Solve::edge"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 4, i1 false)
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  %61 = load i64, i64* %9, align 8
  %62 = load i64, i64* %8, align 8
  %63 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %10) #3
  %64 = bitcast %"struct.Solve::edge"* %13 to i8*
  %65 = bitcast %"struct.Solve::edge"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 4, i1 false)
  %66 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %14 to i8*
  %67 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 1, i32 1, i1 false)
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %69 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %68, align 8
  %70 = bitcast %"struct.Solve::edge"* %13 to i64*
  %71 = load i64, i64* %70, align 4
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_(%"struct.Solve::edge"* %69, i64 %61, i64 %62, i64 %71)
  %72 = load i64, i64* %9, align 8
  %73 = icmp eq i64 %72, 0
  store i1 %73, i1* %3
  %74 = load i32, i32* @x.606
  %75 = load i32, i32* @y.607
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -1424724298, i32 1573552462
  store i32 %87, i32* %18
  br label %123

; <label>:88:                                     ; preds = %19
  %89 = load volatile i1, i1* %3
  %90 = select i1 %89, i32 1160394149, i32 -842991059
  store i32 %90, i32* %18
  br label %123

; <label>:91:                                     ; preds = %19
  store i32 1216473096, i32* %18
  br label %123

; <label>:92:                                     ; preds = %19
  %93 = load i64, i64* %9, align 8
  %94 = sub i64 0, %93
  %95 = sub i64 0, -1
  %96 = add i64 %94, %95
  %97 = sub i64 0, %96
  %98 = add nsw i64 %93, -1
  store i64 %97, i64* %9, align 8
  store i32 1339199728, i32* %18
  br label %123

; <label>:99:                                     ; preds = %19
  ret void

; <label>:100:                                    ; preds = %19
  %101 = load i64, i64* %9, align 8
  %102 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 %101) #3
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"struct.Solve::edge"* %102, %"struct.Solve::edge"** %103, align 8
  %104 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %105 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %104) #3
  %106 = bitcast %"struct.Solve::edge"* %10 to i8*
  %107 = bitcast %"struct.Solve::edge"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 8, i32 4, i1 false)
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 8, i32 8, i1 false)
  %110 = load i64, i64* %9, align 8
  %111 = load i64, i64* %8, align 8
  %112 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %10) #3
  %113 = bitcast %"struct.Solve::edge"* %13 to i8*
  %114 = bitcast %"struct.Solve::edge"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 8, i32 4, i1 false)
  %115 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %14 to i8*
  %116 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 1, i32 1, i1 false)
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %118 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %117, align 8
  %119 = bitcast %"struct.Solve::edge"* %13 to i64*
  %120 = load i64, i64* %119, align 4
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_(%"struct.Solve::edge"* %118, i64 %110, i64 %111, i64 %120)
  %121 = load i64, i64* %9, align 8
  %122 = icmp eq i64 %121, 0
  store i32 1611238295, i32* %18
  br label %123

; <label>:123:                                    ; preds = %100, %92, %91, %88, %51, %35, %27, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxltIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.608
  %7 = load i32, i32* @y.609
  %8 = sub i32 %6, -474600692
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -474600692
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1337012313, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1337012313, label %20
    i32 -283665028, label %28
    i32 1101535671, label %65
    i32 234995675, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -283665028, i32 234995675
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29, align 8
  %32 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  %33 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30, align 8
  %35 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %34) #3
  %36 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %35, align 8
  %37 = icmp ult %"struct.Solve::edge"* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.608
  %39 = load i32, i32* @y.609
  %40 = sub i32 %38, -835544574
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -835544574
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1101535671, i32 234995675
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %3
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %69, align 8
  %70 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %71 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %70) #3
  %72 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %71, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %69, align 8
  %74 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %73) #3
  %75 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %74, align 8
  %76 = icmp ult %"struct.Solve::edge"* %72, %75
  store i32 -283665028, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = alloca %"struct.Solve::edge", align 4
  %8 = alloca %"struct.Solve::edge", align 4
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %10, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %11 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %12 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11, i32 0, i32 0
  %13 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %14 = bitcast %"struct.Solve::edge"* %7 to i8*
  %15 = bitcast %"struct.Solve::edge"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false)
  %16 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %17 = bitcast %"struct.Solve::edge"* %8 to i8*
  %18 = bitcast %"struct.Solve::edge"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  %19 = bitcast %"struct.Solve::edge"* %7 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = bitcast %"struct.Solve::edge"* %8 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = call zeroext i1 @_ZZN5Solve5inputEvENKUlNS_4edgeES0_E_clES0_S0_(%class.anon* %12, i64 %20, i64 %22)
  ret i1 %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"struct.Solve::edge", align 4
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"struct.Solve::edge", align 4
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %14, align 8
  %15 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %16 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %15) #3
  %17 = bitcast %"struct.Solve::edge"* %8 to i8*
  %18 = bitcast %"struct.Solve::edge"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  %19 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %20 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %19) #3
  %21 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %22 = bitcast %"struct.Solve::edge"* %21 to i8*
  %23 = bitcast %"struct.Solve::edge"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4) #3
  %27 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %8) #3
  %28 = bitcast %"struct.Solve::edge"* %10 to i8*
  %29 = bitcast %"struct.Solve::edge"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %31 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 1, i32 1, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %33 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %32, align 8
  %34 = bitcast %"struct.Solve::edge"* %10 to i64*
  %35 = load i64, i64* %34, align 4
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_(%"struct.Solve::edge"* %33, i64 0, i64 %26, i64 %35)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %9, i64 %10
  store %"struct.Solve::edge"* %11, %"struct.Solve::edge"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %3, %"struct.Solve::edge"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %12, align 8
  ret %"struct.Solve::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_(%"struct.Solve::edge"*, i64, i64, i64) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.Solve::edge", align 4
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"struct.Solve::edge", align 4
  %22 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %23 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %24 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %25, align 8
  %26 = bitcast %"struct.Solve::edge"* %8 to i64*
  store i64 %3, i64* %26, align 4
  store i64 %1, i64* %10, align 8
  store i64 %2, i64* %11, align 8
  %27 = load i64, i64* %10, align 8
  store i64 %27, i64* %12, align 8
  %28 = load i64, i64* %10, align 8
  store i64 %28, i64* %13, align 8
  %29 = alloca i32
  store i32 -555734776, i32* %29
  br label %30

; <label>:30:                                     ; preds = %4, %332
  %31 = load i32, i32* %29
  switch i32 %31, label %32 [
    i32 -555734776, label %33
    i32 1960838924, label %42
    i32 482781870, label %66
    i32 -446837814, label %73
    i32 -24807449, label %86
    i32 -854823042, label %114
    i32 -1817644647, label %139
    i32 305160606, label %142
    i32 387948444, label %170
    i32 -770747857, label %205
    i32 -120962951, label %208
    i32 -1285233644, label %235
    i32 -1355577168, label %249
    i32 -564240820, label %294
  ]

; <label>:32:                                     ; preds = %30
  br label %332

; <label>:33:                                     ; preds = %30
  %34 = load i64, i64* %13, align 8
  %35 = load i64, i64* %11, align 8
  %36 = sub i64 0, 1
  %37 = add i64 %35, %36
  %38 = sub nsw i64 %35, 1
  %39 = sdiv i64 %37, 2
  %40 = icmp slt i64 %34, %39
  %41 = select i1 %40, i32 1960838924, i32 -24807449
  store i32 %41, i32* %29
  br label %332

; <label>:42:                                     ; preds = %30
  %43 = load i64, i64* %13, align 8
  %44 = sub i64 0, %43
  %45 = sub i64 0, 1
  %46 = add i64 %44, %45
  %47 = sub i64 0, %46
  %48 = add nsw i64 %43, 1
  %49 = mul nsw i64 2, %47
  store i64 %49, i64* %13, align 8
  %50 = load i64, i64* %13, align 8
  %51 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %50) #3
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"struct.Solve::edge"* %51, %"struct.Solve::edge"** %52, align 8
  %53 = load i64, i64* %13, align 8
  %54 = add i64 %53, -4079586721866193477
  %55 = sub i64 %54, 1
  %56 = sub i64 %55, -4079586721866193477
  %57 = sub nsw i64 %53, 1
  %58 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %56) #3
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Solve::edge"* %58, %"struct.Solve::edge"** %59, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %61 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %63 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %62, align 8
  %64 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, %"struct.Solve::edge"* %61, %"struct.Solve::edge"* %63)
  %65 = select i1 %64, i32 482781870, i32 -446837814
  store i32 %65, i32* %29
  br label %332

; <label>:66:                                     ; preds = %30
  %67 = load i64, i64* %13, align 8
  %68 = sub i64 0, %67
  %69 = sub i64 0, -1
  %70 = add i64 %68, %69
  %71 = sub i64 0, %70
  %72 = add nsw i64 %67, -1
  store i64 %71, i64* %13, align 8
  store i32 -446837814, i32* %29
  br label %332

; <label>:73:                                     ; preds = %30
  %74 = load i64, i64* %13, align 8
  %75 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %74) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %"struct.Solve::edge"* %75, %"struct.Solve::edge"** %76, align 8
  %77 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %16) #3
  %78 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %77) #3
  %79 = load i64, i64* %10, align 8
  %80 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %79) #3
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %"struct.Solve::edge"* %80, %"struct.Solve::edge"** %81, align 8
  %82 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %17) #3
  %83 = bitcast %"struct.Solve::edge"* %82 to i8*
  %84 = bitcast %"struct.Solve::edge"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false)
  %85 = load i64, i64* %13, align 8
  store i64 %85, i64* %10, align 8
  store i32 -555734776, i32* %29
  br label %332

; <label>:86:                                     ; preds = %30
  %87 = load i32, i32* @x.616
  %88 = load i32, i32* @y.617
  %89 = add i32 %87, -1614729068
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -1614729068
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -854823042, i32 -1355577168
  store i32 %113, i32* %29
  br label %332

; <label>:114:                                    ; preds = %30
  %115 = load i64, i64* %11, align 8
  %116 = xor i64 %115, -1
  %117 = xor i64 1, -1
  %118 = xor i64 7422593909691668779, -1
  %119 = or i64 %116, %117
  %120 = or i64 7422593909691668779, %118
  %121 = xor i64 %119, -1
  %122 = and i64 %121, %120
  %123 = and i64 %115, 1
  %124 = icmp eq i64 %122, 0
  store i1 %124, i1* %6
  %125 = load i32, i32* @x.616
  %126 = load i32, i32* @y.617
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 -1817644647, i32 -1355577168
  store i32 %138, i32* %29
  br label %332

; <label>:139:                                    ; preds = %30
  %140 = load volatile i1, i1* %6
  %141 = select i1 %140, i32 305160606, i32 -1285233644
  store i32 %141, i32* %29
  br label %332

; <label>:142:                                    ; preds = %30
  %143 = load i32, i32* @x.616
  %144 = load i32, i32* @y.617
  %145 = add i32 %143, 1502103434
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, 1502103434
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  %169 = select i1 %167, i32 387948444, i32 -564240820
  store i32 %169, i32* %29
  br label %332

; <label>:170:                                    ; preds = %30
  %171 = load i64, i64* %13, align 8
  %172 = load i64, i64* %11, align 8
  %173 = sub i64 %172, 9174438669598441044
  %174 = sub i64 %173, 2
  %175 = add i64 %174, 9174438669598441044
  %176 = sub nsw i64 %172, 2
  %177 = sdiv i64 %175, 2
  %178 = icmp eq i64 %171, %177
  store i1 %178, i1* %5
  %179 = load i32, i32* @x.616
  %180 = load i32, i32* @y.617
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 true, true
  %191 = and i1 %188, true
  %192 = and i1 %186, %190
  %193 = and i1 %189, true
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 true, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  %204 = select i1 %202, i32 -770747857, i32 -564240820
  store i32 %204, i32* %29
  br label %332

; <label>:205:                                    ; preds = %30
  %206 = load volatile i1, i1* %5
  %207 = select i1 %206, i32 -120962951, i32 -1285233644
  store i32 %207, i32* %29
  br label %332

; <label>:208:                                    ; preds = %30
  %209 = load i64, i64* %13, align 8
  %210 = sub i64 %209, -332014075612500328
  %211 = add i64 %210, 1
  %212 = add i64 %211, -332014075612500328
  %213 = add nsw i64 %209, 1
  %214 = mul nsw i64 2, %212
  store i64 %214, i64* %13, align 8
  %215 = load i64, i64* %13, align 8
  %216 = add i64 %215, 5456802392254451396
  %217 = sub i64 %216, 1
  %218 = sub i64 %217, 5456802392254451396
  %219 = sub nsw i64 %215, 1
  %220 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %218) #3
  %221 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %"struct.Solve::edge"* %220, %"struct.Solve::edge"** %221, align 8
  %222 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %223 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %222) #3
  %224 = load i64, i64* %10, align 8
  %225 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %224) #3
  %226 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.Solve::edge"* %225, %"struct.Solve::edge"** %226, align 8
  %227 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %19) #3
  %228 = bitcast %"struct.Solve::edge"* %227 to i8*
  %229 = bitcast %"struct.Solve::edge"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %228, i8* %229, i64 8, i32 4, i1 false)
  %230 = load i64, i64* %13, align 8
  %231 = sub i64 %230, -5345153672814664714
  %232 = sub i64 %231, 1
  %233 = add i64 %232, -5345153672814664714
  %234 = sub nsw i64 %230, 1
  store i64 %233, i64* %10, align 8
  store i32 -1285233644, i32* %29
  br label %332

; <label>:235:                                    ; preds = %30
  %236 = bitcast %"class.__gnu_cxx::__normal_iterator"* %20 to i8*
  %237 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %236, i8* %237, i64 8, i32 8, i1 false)
  %238 = load i64, i64* %10, align 8
  %239 = load i64, i64* %12, align 8
  %240 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %8) #3
  %241 = bitcast %"struct.Solve::edge"* %21 to i8*
  %242 = bitcast %"struct.Solve::edge"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %241, i8* %242, i64 8, i32 4, i1 false)
  %243 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %23 to i8*
  %244 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %243, i8* %244, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE()
  %245 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %246 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %245, align 8
  %247 = bitcast %"struct.Solve::edge"* %21 to i64*
  %248 = load i64, i64* %247, align 4
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_(%"struct.Solve::edge"* %246, i64 %238, i64 %239, i64 %248)
  ret void

; <label>:249:                                    ; preds = %30
  %250 = load i64, i64* %11, align 8
  %251 = sub i64 0, %250
  %252 = add i64 0, %251
  %253 = sub i64 0, %250
  %254 = add i64 %252, -6453463058574033550
  %255 = add i64 %254, 1
  %256 = sub i64 %255, -6453463058574033550
  %257 = add i64 %252, 1
  %258 = sub i64 0, 1
  %259 = add i64 %250, %258
  %260 = sub i64 %250, 1
  %261 = mul i64 %259, 1
  %262 = add i64 %250, 2723187207558828305
  %263 = sub i64 %262, 1
  %264 = sub i64 %263, 2723187207558828305
  %265 = sub i64 %250, 1
  %266 = mul i64 %264, 1
  %267 = sub i64 0, -7114353639792875302
  %268 = sub i64 %267, %250
  %269 = add i64 %268, -7114353639792875302
  %270 = sub i64 0, %250
  %271 = sub i64 0, 1
  %272 = sub i64 %269, %271
  %273 = add i64 %269, 1
  %274 = add i64 %250, -5850024073086705146
  %275 = sub i64 %274, 1
  %276 = sub i64 %275, -5850024073086705146
  %277 = sub i64 %250, 1
  %278 = mul i64 %276, 1
  %279 = sub i64 0, %250
  %280 = add i64 0, %279
  %281 = sub i64 0, %250
  %282 = sub i64 0, 1
  %283 = sub i64 %280, %282
  %284 = add i64 %280, 1
  %285 = xor i64 %250, -1
  %286 = xor i64 1, -1
  %287 = xor i64 -3292149813352397833, -1
  %288 = or i64 %285, %286
  %289 = or i64 -3292149813352397833, %287
  %290 = xor i64 %288, -1
  %291 = and i64 %290, %289
  %292 = and i64 %250, 1
  %293 = icmp eq i64 %291, 0
  store i32 -854823042, i32* %29
  br label %332

; <label>:294:                                    ; preds = %30
  %295 = load i64, i64* %13, align 8
  %296 = load i64, i64* %11, align 8
  %297 = sub i64 %296, -8930258472843934669
  %298 = sub i64 %297, 2
  %299 = add i64 %298, -8930258472843934669
  %300 = sub i64 %296, 2
  %301 = mul i64 %299, 2
  %302 = sub i64 %296, 5074328736641487030
  %303 = sub i64 %302, 2
  %304 = add i64 %303, 5074328736641487030
  %305 = sub i64 %296, 2
  %306 = mul i64 %304, 2
  %307 = shl i64 %296, 2
  %308 = sub i64 0, 2
  %309 = add i64 %296, %308
  %310 = sub i64 %296, 2
  %311 = mul i64 %309, 2
  %312 = add i64 %296, 4158825011597005637
  %313 = sub i64 %312, 2
  %314 = sub i64 %313, 4158825011597005637
  %315 = sub nsw i64 %296, 2
  %316 = shl i64 %314, 2
  %317 = sub i64 %314, 608025106381425795
  %318 = sub i64 %317, 2
  %319 = add i64 %318, 608025106381425795
  %320 = sub i64 %314, 2
  %321 = mul i64 %319, 2
  %322 = shl i64 %314, 2
  %323 = shl i64 %314, 2
  %324 = shl i64 %314, 2
  %325 = add i64 %314, -1000868192516623480
  %326 = sub i64 %325, 2
  %327 = sub i64 %326, -1000868192516623480
  %328 = sub i64 %314, 2
  %329 = mul i64 %327, 2
  %330 = sdiv i64 %314, 2
  %331 = icmp eq i64 %295, %330
  store i32 387948444, i32* %29
  br label %332

; <label>:332:                                    ; preds = %294, %249, %208, %205, %170, %142, %139, %114, %86, %73, %66, %42, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_SE_T1_T2_(%"struct.Solve::edge"*, i64, i64, i64) #0 comdat {
  %5 = alloca i1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.Solve::edge", align 4
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %16, align 8
  %17 = bitcast %"struct.Solve::edge"* %7 to i64*
  store i64 %3, i64* %17, align 4
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  %18 = load i64, i64* %9, align 8
  %19 = add i64 %18, 1668464326326314324
  %20 = sub i64 %19, 1
  %21 = sub i64 %20, 1668464326326314324
  %22 = sub nsw i64 %18, 1
  %23 = sdiv i64 %21, 2
  store i64 %23, i64* %11, align 8
  %24 = alloca i32
  store i32 -1680372048, i32* %24
  %25 = alloca i1
  br label %26

; <label>:26:                                     ; preds = %4, %118
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1680372048, label %29
    i32 -1819902452, label %56
    i32 829495315, label %75
    i32 -11509093, label %78
    i32 1658809946, label %85
    i32 -1908888433, label %88
    i32 -583854205, label %106
    i32 -1082308176, label %114
  ]

; <label>:28:                                     ; preds = %26
  br label %118

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* @x.618
  %31 = load i32, i32* @y.619
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1819902452, i32 -1082308176
  store i32 %55, i32* %24
  br label %118

; <label>:56:                                     ; preds = %26
  %57 = load i64, i64* %9, align 8
  %58 = load i64, i64* %10, align 8
  %59 = icmp sgt i64 %57, %58
  store i1 %59, i1* %5
  %60 = load i32, i32* @x.618
  %61 = load i32, i32* @y.619
  %62 = add i32 %60, -2073838235
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -2073838235
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 829495315, i32 -1082308176
  store i32 %74, i32* %24
  br label %118

; <label>:75:                                     ; preds = %26
  %76 = load volatile i1, i1* %5
  %77 = select i1 %76, i32 -11509093, i32 1658809946
  store i32 %77, i32* %24
  store i1 false, i1* %25
  br label %118

; <label>:78:                                     ; preds = %26
  %79 = load i64, i64* %11, align 8
  %80 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %6, i64 %79) #3
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.Solve::edge"* %80, %"struct.Solve::edge"** %81, align 8
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %83 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %82, align 8
  %84 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, %"struct.Solve::edge"* %83, %"struct.Solve::edge"* dereferenceable(8) %7)
  store i32 1658809946, i32* %24
  store i1 %84, i1* %25
  br label %118

; <label>:85:                                     ; preds = %26
  %86 = load i1, i1* %25
  %87 = select i1 %86, i32 -1908888433, i32 -583854205
  store i32 %87, i32* %24
  br label %118

; <label>:88:                                     ; preds = %26
  %89 = load i64, i64* %11, align 8
  %90 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %6, i64 %89) #3
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"struct.Solve::edge"* %90, %"struct.Solve::edge"** %91, align 8
  %92 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %13) #3
  %93 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %92) #3
  %94 = load i64, i64* %9, align 8
  %95 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %6, i64 %94) #3
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"struct.Solve::edge"* %95, %"struct.Solve::edge"** %96, align 8
  %97 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %14) #3
  %98 = bitcast %"struct.Solve::edge"* %97 to i8*
  %99 = bitcast %"struct.Solve::edge"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 4, i1 false)
  %100 = load i64, i64* %11, align 8
  store i64 %100, i64* %9, align 8
  %101 = load i64, i64* %9, align 8
  %102 = sub i64 0, 1
  %103 = add i64 %101, %102
  %104 = sub nsw i64 %101, 1
  %105 = sdiv i64 %103, 2
  store i64 %105, i64* %11, align 8
  store i32 -1680372048, i32* %24
  br label %118

; <label>:106:                                    ; preds = %26
  %107 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %7) #3
  %108 = load i64, i64* %9, align 8
  %109 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %6, i64 %108) #3
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Solve::edge"* %109, %"struct.Solve::edge"** %110, align 8
  %111 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %15) #3
  %112 = bitcast %"struct.Solve::edge"* %111 to i8*
  %113 = bitcast %"struct.Solve::edge"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 8, i32 4, i1 false)
  ret void

; <label>:114:                                    ; preds = %26
  %115 = load i64, i64* %9, align 8
  %116 = load i64, i64* %10, align 8
  %117 = icmp sgt i64 %115, %116
  store i32 -1819902452, i32* %24
  br label %118

; <label>:118:                                    ; preds = %114, %88, %85, %78, %75, %56, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %class.anon, align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.Solve::edge"*, %"struct.Solve::edge"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.622
  %8 = load i32, i32* @y.623
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 341159836, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %97
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 341159836, label %20
    i32 1610077245, label %28
    i32 296390683, label %75
    i32 751517453, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %97

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1610077245, i32 751517453
  store i32 %27, i32* %16
  br label %97

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %31 = alloca %"struct.Solve::edge"*, align 8
  %32 = alloca %"struct.Solve::edge", align 4
  %33 = alloca %"struct.Solve::edge", align 4
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %34, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %30, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %31, align 8
  %35 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %30, align 8
  %36 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %35, i32 0, i32 0
  %37 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %29) #3
  %38 = bitcast %"struct.Solve::edge"* %32 to i8*
  %39 = bitcast %"struct.Solve::edge"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  %40 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %31, align 8
  %41 = bitcast %"struct.Solve::edge"* %33 to i8*
  %42 = bitcast %"struct.Solve::edge"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false)
  %43 = bitcast %"struct.Solve::edge"* %32 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = bitcast %"struct.Solve::edge"* %33 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = call zeroext i1 @_ZZN5Solve5inputEvENKUlNS_4edgeES0_E_clES0_S0_(%class.anon* %36, i64 %44, i64 %46)
  store i1 %47, i1* %4
  %48 = load i32, i32* @x.622
  %49 = load i32, i32* @y.623
  %50 = sub i32 %48, -673924379
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -673924379
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 296390683, i32 751517453
  store i32 %74, i32* %16
  br label %97

; <label>:75:                                     ; preds = %17
  %76 = load volatile i1, i1* %4
  ret i1 %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %80 = alloca %"struct.Solve::edge"*, align 8
  %81 = alloca %"struct.Solve::edge", align 4
  %82 = alloca %"struct.Solve::edge", align 4
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %83, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %79, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %80, align 8
  %84 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %79, align 8
  %85 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %84, i32 0, i32 0
  %86 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %78) #3
  %87 = bitcast %"struct.Solve::edge"* %81 to i8*
  %88 = bitcast %"struct.Solve::edge"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 4, i1 false)
  %89 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %80, align 8
  %90 = bitcast %"struct.Solve::edge"* %82 to i8*
  %91 = bitcast %"struct.Solve::edge"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 4, i1 false)
  %92 = bitcast %"struct.Solve::edge"* %81 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = bitcast %"struct.Solve::edge"* %82 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = call zeroext i1 @_ZZN5Solve5inputEvENKUlNS_4edgeES0_E_clES0_S0_(%class.anon* %85, i64 %93, i64 %95)
  store i32 1610077245, i32* %16
  br label %97

; <label>:97:                                     ; preds = %77, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZZN5Solve5inputEvENKUlNS_4edgeES0_E_clES0_S0_(%class.anon*, i64, i64) #5 comdat align 2 {
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i1, align 1
  %7 = alloca %"struct.Solve::edge", align 4
  %8 = alloca %"struct.Solve::edge", align 4
  %9 = alloca %class.anon*, align 8
  %10 = bitcast %"struct.Solve::edge"* %7 to i64*
  store i64 %1, i64* %10, align 4
  %11 = bitcast %"struct.Solve::edge"* %8 to i64*
  store i64 %2, i64* %11, align 4
  store %class.anon* %0, %class.anon** %9, align 8
  %12 = load %class.anon*, %class.anon** %9, align 8
  %13 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %7, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %5
  %15 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %8, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %4
  %17 = alloca i32
  store i32 -700659221, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %40
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -700659221, label %21
    i32 -928341731, label %26
    i32 1660546616, label %32
    i32 666681772, label %38
  ]

; <label>:20:                                     ; preds = %18
  br label %40

; <label>:21:                                     ; preds = %18
  %22 = load volatile i32, i32* %5
  %23 = load volatile i32, i32* %4
  %24 = icmp eq i32 %22, %23
  %25 = select i1 %24, i32 -928341731, i32 1660546616
  store i32 %25, i32* %17
  br label %40

; <label>:26:                                     ; preds = %18
  %27 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %7, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %8, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %28, %30
  store i1 %31, i1* %6, align 1
  store i32 666681772, i32* %17
  br label %40

; <label>:32:                                     ; preds = %18
  %33 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %7, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %8, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %34, %36
  store i1 %37, i1* %6, align 1
  store i32 666681772, i32* %17
  br label %40

; <label>:38:                                     ; preds = %18
  %39 = load i1, i1* %6, align 1
  ret i1 %39

; <label>:40:                                     ; preds = %32, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.anon, align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %5, i32 -1
  store %"struct.Solve::edge"* %6, %"struct.Solve::edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_SD_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %5 = alloca i1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %17 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %18 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %19 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %20 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %21 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %22 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %23 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %24 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %25 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %26 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %27 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %29 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %30 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %31 = alloca i1
  %32 = alloca i1
  %33 = load i32, i32* @x.630
  %34 = load i32, i32* @y.631
  %35 = add i32 %33, 385245733
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 385245733
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  store i1 %41, i1* %32
  %42 = icmp slt i32 %34, 10
  store i1 %42, i1* %31
  %43 = alloca i32
  store i32 1164348762, i32* %43
  br label %44

; <label>:44:                                     ; preds = %4, %582
  %45 = load i32, i32* %43
  switch i32 %45, label %46 [
    i32 1164348762, label %47
    i32 844929825, label %67
    i32 -1957162504, label %141
    i32 1223911392, label %144
    i32 780207927, label %162
    i32 -1825348712, label %177
    i32 80961804, label %195
    i32 985224425, label %210
    i32 447304705, label %225
    i32 -1288105717, label %253
    i32 1393118188, label %269
    i32 -2007646441, label %270
    i32 -1554269614, label %298
    i32 -1892061864, label %326
    i32 1165184218, label %327
    i32 -1057858679, label %345
    i32 -929438513, label %373
    i32 -2018378711, label %414
    i32 -1409135902, label %415
    i32 245464063, label %433
    i32 -1031052900, label %449
    i32 -932815389, label %490
    i32 -1261066226, label %491
    i32 -601396696, label %506
    i32 890798231, label %507
    i32 524229447, label %508
    i32 1388092126, label %509
    i32 761944378, label %550
    i32 -949379836, label %551
    i32 58849325, label %552
    i32 29700411, label %567
  ]

; <label>:46:                                     ; preds = %44
  br label %582

; <label>:47:                                     ; preds = %44
  %48 = load volatile i1, i1* %32
  %49 = load volatile i1, i1* %31
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 844929825, i32 1388092126
  store i32 %66, i32* %43
  br label %582

; <label>:67:                                     ; preds = %44
  %68 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %68, %"class.__gnu_cxx::__normal_iterator"** %30
  %69 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %69, %"class.__gnu_cxx::__normal_iterator"** %29
  %70 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %70, %"class.__gnu_cxx::__normal_iterator"** %28
  %71 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %71, %"class.__gnu_cxx::__normal_iterator"** %27
  %72 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %72, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %26
  %73 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %74 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %75 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %75, %"class.__gnu_cxx::__normal_iterator"** %25
  %76 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %76, %"class.__gnu_cxx::__normal_iterator"** %24
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %77, %"class.__gnu_cxx::__normal_iterator"** %23
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %78, %"class.__gnu_cxx::__normal_iterator"** %22
  %79 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %79, %"class.__gnu_cxx::__normal_iterator"** %21
  %80 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %80, %"class.__gnu_cxx::__normal_iterator"** %20
  %81 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %81, %"class.__gnu_cxx::__normal_iterator"** %19
  %82 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %82, %"class.__gnu_cxx::__normal_iterator"** %18
  %83 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %83, %"class.__gnu_cxx::__normal_iterator"** %17
  %84 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %84, %"class.__gnu_cxx::__normal_iterator"** %16
  %85 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %85, %"class.__gnu_cxx::__normal_iterator"** %15
  %86 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %86, %"class.__gnu_cxx::__normal_iterator"** %14
  %87 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %87, %"class.__gnu_cxx::__normal_iterator"** %13
  %88 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %88, %"class.__gnu_cxx::__normal_iterator"** %12
  %89 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %89, %"class.__gnu_cxx::__normal_iterator"** %11
  %90 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %90, %"class.__gnu_cxx::__normal_iterator"** %10
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %91, %"class.__gnu_cxx::__normal_iterator"** %9
  %92 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %92, %"class.__gnu_cxx::__normal_iterator"** %8
  %93 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %93, %"class.__gnu_cxx::__normal_iterator"** %7
  %94 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %94, %"class.__gnu_cxx::__normal_iterator"** %6
  %95 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %95, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %96, align 8
  %97 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %97, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %98, align 8
  %99 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %99, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %100, align 8
  %101 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %101, i32 0, i32 0
  store %"struct.Solve::edge"* %3, %"struct.Solve::edge"** %102, align 8
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator"* %73 to i8*
  %104 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %105, i64 8, i32 8, i1 false)
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator"* %74 to i8*
  %107 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %108, i64 8, i32 8, i1 false)
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %73, i32 0, i32 0
  %110 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %109, align 8
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %74, i32 0, i32 0
  %112 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %111, align 8
  %113 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %26
  %114 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %113, %"struct.Solve::edge"* %110, %"struct.Solve::edge"* %112)
  store i1 %114, i1* %5
  %115 = load i32, i32* @x.630
  %116 = load i32, i32* @y.631
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 -1957162504, i32 1388092126
  store i32 %140, i32* %43
  br label %582

; <label>:141:                                    ; preds = %44
  %142 = load volatile i1, i1* %5
  %143 = select i1 %142, i32 1223911392, i32 1165184218
  store i32 %143, i32* %43
  br label %582

; <label>:144:                                    ; preds = %44
  %145 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %25
  %146 = bitcast %"class.__gnu_cxx::__normal_iterator"* %145 to i8*
  %147 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28
  %148 = bitcast %"class.__gnu_cxx::__normal_iterator"* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %146, i8* %148, i64 8, i32 8, i1 false)
  %149 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %24
  %150 = bitcast %"class.__gnu_cxx::__normal_iterator"* %149 to i8*
  %151 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %152 = bitcast %"class.__gnu_cxx::__normal_iterator"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %152, i64 8, i32 8, i1 false)
  %153 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %25
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %153, i32 0, i32 0
  %155 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %154, align 8
  %156 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %24
  %157 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %156, i32 0, i32 0
  %158 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %157, align 8
  %159 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %26
  %160 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %159, %"struct.Solve::edge"* %155, %"struct.Solve::edge"* %158)
  %161 = select i1 %160, i32 780207927, i32 -1825348712
  store i32 %161, i32* %43
  br label %582

; <label>:162:                                    ; preds = %44
  %163 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %23
  %164 = bitcast %"class.__gnu_cxx::__normal_iterator"* %163 to i8*
  %165 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %166 = bitcast %"class.__gnu_cxx::__normal_iterator"* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %166, i64 8, i32 8, i1 false)
  %167 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %22
  %168 = bitcast %"class.__gnu_cxx::__normal_iterator"* %167 to i8*
  %169 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28
  %170 = bitcast %"class.__gnu_cxx::__normal_iterator"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %168, i8* %170, i64 8, i32 8, i1 false)
  %171 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %23
  %172 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %171, i32 0, i32 0
  %173 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %172, align 8
  %174 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %22
  %175 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %174, i32 0, i32 0
  %176 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %175, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %173, %"struct.Solve::edge"* %176)
  store i32 -2007646441, i32* %43
  br label %582

; <label>:177:                                    ; preds = %44
  %178 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %179 = bitcast %"class.__gnu_cxx::__normal_iterator"* %178 to i8*
  %180 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29
  %181 = bitcast %"class.__gnu_cxx::__normal_iterator"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* %181, i64 8, i32 8, i1 false)
  %182 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %20
  %183 = bitcast %"class.__gnu_cxx::__normal_iterator"* %182 to i8*
  %184 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %185 = bitcast %"class.__gnu_cxx::__normal_iterator"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %183, i8* %185, i64 8, i32 8, i1 false)
  %186 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %187 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %186, i32 0, i32 0
  %188 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %187, align 8
  %189 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %20
  %190 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %189, i32 0, i32 0
  %191 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %190, align 8
  %192 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %26
  %193 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %192, %"struct.Solve::edge"* %188, %"struct.Solve::edge"* %191)
  %194 = select i1 %193, i32 80961804, i32 985224425
  store i32 %194, i32* %43
  br label %582

; <label>:195:                                    ; preds = %44
  %196 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %197 = bitcast %"class.__gnu_cxx::__normal_iterator"* %196 to i8*
  %198 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %199 = bitcast %"class.__gnu_cxx::__normal_iterator"* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %199, i64 8, i32 8, i1 false)
  %200 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %201 = bitcast %"class.__gnu_cxx::__normal_iterator"* %200 to i8*
  %202 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %203 = bitcast %"class.__gnu_cxx::__normal_iterator"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %203, i64 8, i32 8, i1 false)
  %204 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %205 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %204, i32 0, i32 0
  %206 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %205, align 8
  %207 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %208 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %207, i32 0, i32 0
  %209 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %208, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %206, %"struct.Solve::edge"* %209)
  store i32 447304705, i32* %43
  br label %582

; <label>:210:                                    ; preds = %44
  %211 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %212 = bitcast %"class.__gnu_cxx::__normal_iterator"* %211 to i8*
  %213 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %214 = bitcast %"class.__gnu_cxx::__normal_iterator"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %214, i64 8, i32 8, i1 false)
  %215 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %216 = bitcast %"class.__gnu_cxx::__normal_iterator"* %215 to i8*
  %217 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29
  %218 = bitcast %"class.__gnu_cxx::__normal_iterator"* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %216, i8* %218, i64 8, i32 8, i1 false)
  %219 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %220 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %219, i32 0, i32 0
  %221 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %220, align 8
  %222 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %223 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %222, i32 0, i32 0
  %224 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %223, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %221, %"struct.Solve::edge"* %224)
  store i32 447304705, i32* %43
  br label %582

; <label>:225:                                    ; preds = %44
  %226 = load i32, i32* @x.630
  %227 = load i32, i32* @y.631
  %228 = add i32 %226, 900924591
  %229 = sub i32 %228, 1
  %230 = sub i32 %229, 900924591
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 true, true
  %239 = and i1 %236, true
  %240 = and i1 %234, %238
  %241 = and i1 %237, true
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 true, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  %252 = select i1 %250, i32 -1288105717, i32 761944378
  store i32 %252, i32* %43
  br label %582

; <label>:253:                                    ; preds = %44
  %254 = load i32, i32* @x.630
  %255 = load i32, i32* @y.631
  %256 = add i32 %254, -1357332694
  %257 = sub i32 %256, 1
  %258 = sub i32 %257, -1357332694
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  %268 = select i1 %266, i32 1393118188, i32 761944378
  store i32 %268, i32* %43
  br label %582

; <label>:269:                                    ; preds = %44
  store i32 -2007646441, i32* %43
  br label %582

; <label>:270:                                    ; preds = %44
  %271 = load i32, i32* @x.630
  %272 = load i32, i32* @y.631
  %273 = sub i32 %271, 778526066
  %274 = sub i32 %273, 1
  %275 = add i32 %274, 778526066
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 false, true
  %284 = and i1 %281, false
  %285 = and i1 %279, %283
  %286 = and i1 %282, false
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 false, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  %297 = select i1 %295, i32 -1554269614, i32 -949379836
  store i32 %297, i32* %43
  br label %582

; <label>:298:                                    ; preds = %44
  %299 = load i32, i32* @x.630
  %300 = load i32, i32* @y.631
  %301 = sub i32 %299, 1078200108
  %302 = sub i32 %301, 1
  %303 = add i32 %302, 1078200108
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = xor i1 %307, true
  %310 = xor i1 %308, true
  %311 = xor i1 false, true
  %312 = and i1 %309, false
  %313 = and i1 %307, %311
  %314 = and i1 %310, false
  %315 = and i1 %308, %311
  %316 = or i1 %312, %313
  %317 = or i1 %314, %315
  %318 = xor i1 %316, %317
  %319 = or i1 %309, %310
  %320 = xor i1 %319, true
  %321 = or i1 false, %311
  %322 = and i1 %320, %321
  %323 = or i1 %318, %322
  %324 = or i1 %307, %308
  %325 = select i1 %323, i32 -1892061864, i32 -949379836
  store i32 %325, i32* %43
  br label %582

; <label>:326:                                    ; preds = %44
  store i32 524229447, i32* %43
  br label %582

; <label>:327:                                    ; preds = %44
  %328 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %329 = bitcast %"class.__gnu_cxx::__normal_iterator"* %328 to i8*
  %330 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29
  %331 = bitcast %"class.__gnu_cxx::__normal_iterator"* %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %329, i8* %331, i64 8, i32 8, i1 false)
  %332 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %333 = bitcast %"class.__gnu_cxx::__normal_iterator"* %332 to i8*
  %334 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %335 = bitcast %"class.__gnu_cxx::__normal_iterator"* %334 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %333, i8* %335, i64 8, i32 8, i1 false)
  %336 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %337 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %336, i32 0, i32 0
  %338 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %337, align 8
  %339 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %340 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %339, i32 0, i32 0
  %341 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %340, align 8
  %342 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %26
  %343 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %342, %"struct.Solve::edge"* %338, %"struct.Solve::edge"* %341)
  %344 = select i1 %343, i32 -1057858679, i32 -1409135902
  store i32 %344, i32* %43
  br label %582

; <label>:345:                                    ; preds = %44
  %346 = load i32, i32* @x.630
  %347 = load i32, i32* @y.631
  %348 = add i32 %346, 1836207850
  %349 = sub i32 %348, 1
  %350 = sub i32 %349, 1836207850
  %351 = sub i32 %346, 1
  %352 = mul i32 %346, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %347, 10
  %356 = xor i1 %354, true
  %357 = xor i1 %355, true
  %358 = xor i1 false, true
  %359 = and i1 %356, false
  %360 = and i1 %354, %358
  %361 = and i1 %357, false
  %362 = and i1 %355, %358
  %363 = or i1 %359, %360
  %364 = or i1 %361, %362
  %365 = xor i1 %363, %364
  %366 = or i1 %356, %357
  %367 = xor i1 %366, true
  %368 = or i1 false, %358
  %369 = and i1 %367, %368
  %370 = or i1 %365, %369
  %371 = or i1 %354, %355
  %372 = select i1 %370, i32 -929438513, i32 58849325
  store i32 %372, i32* %43
  br label %582

; <label>:373:                                    ; preds = %44
  %374 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %375 = bitcast %"class.__gnu_cxx::__normal_iterator"* %374 to i8*
  %376 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %377 = bitcast %"class.__gnu_cxx::__normal_iterator"* %376 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %375, i8* %377, i64 8, i32 8, i1 false)
  %378 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %379 = bitcast %"class.__gnu_cxx::__normal_iterator"* %378 to i8*
  %380 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29
  %381 = bitcast %"class.__gnu_cxx::__normal_iterator"* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %379, i8* %381, i64 8, i32 8, i1 false)
  %382 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %383 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %382, i32 0, i32 0
  %384 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %383, align 8
  %385 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %386 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %385, i32 0, i32 0
  %387 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %386, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %384, %"struct.Solve::edge"* %387)
  %388 = load i32, i32* @x.630
  %389 = load i32, i32* @y.631
  %390 = sub i32 0, 1
  %391 = add i32 %388, %390
  %392 = sub i32 %388, 1
  %393 = mul i32 %388, %391
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %389, 10
  %397 = xor i1 %395, true
  %398 = xor i1 %396, true
  %399 = xor i1 false, true
  %400 = and i1 %397, false
  %401 = and i1 %395, %399
  %402 = and i1 %398, false
  %403 = and i1 %396, %399
  %404 = or i1 %400, %401
  %405 = or i1 %402, %403
  %406 = xor i1 %404, %405
  %407 = or i1 %397, %398
  %408 = xor i1 %407, true
  %409 = or i1 false, %399
  %410 = and i1 %408, %409
  %411 = or i1 %406, %410
  %412 = or i1 %395, %396
  %413 = select i1 %411, i32 -2018378711, i32 58849325
  store i32 %413, i32* %43
  br label %582

; <label>:414:                                    ; preds = %44
  store i32 890798231, i32* %43
  br label %582

; <label>:415:                                    ; preds = %44
  %416 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %417 = bitcast %"class.__gnu_cxx::__normal_iterator"* %416 to i8*
  %418 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28
  %419 = bitcast %"class.__gnu_cxx::__normal_iterator"* %418 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %417, i8* %419, i64 8, i32 8, i1 false)
  %420 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %421 = bitcast %"class.__gnu_cxx::__normal_iterator"* %420 to i8*
  %422 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %423 = bitcast %"class.__gnu_cxx::__normal_iterator"* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %421, i8* %423, i64 8, i32 8, i1 false)
  %424 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %425 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %424, i32 0, i32 0
  %426 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %425, align 8
  %427 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %428 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %427, i32 0, i32 0
  %429 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %428, align 8
  %430 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %26
  %431 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %430, %"struct.Solve::edge"* %426, %"struct.Solve::edge"* %429)
  %432 = select i1 %431, i32 245464063, i32 -1261066226
  store i32 %432, i32* %43
  br label %582

; <label>:433:                                    ; preds = %44
  %434 = load i32, i32* @x.630
  %435 = load i32, i32* @y.631
  %436 = sub i32 %434, -815507155
  %437 = sub i32 %436, 1
  %438 = add i32 %437, -815507155
  %439 = sub i32 %434, 1
  %440 = mul i32 %434, %438
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %435, 10
  %444 = and i1 %442, %443
  %445 = xor i1 %442, %443
  %446 = or i1 %444, %445
  %447 = or i1 %442, %443
  %448 = select i1 %446, i32 -1031052900, i32 29700411
  store i32 %448, i32* %43
  br label %582

; <label>:449:                                    ; preds = %44
  %450 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %451 = bitcast %"class.__gnu_cxx::__normal_iterator"* %450 to i8*
  %452 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %453 = bitcast %"class.__gnu_cxx::__normal_iterator"* %452 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %451, i8* %453, i64 8, i32 8, i1 false)
  %454 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %455 = bitcast %"class.__gnu_cxx::__normal_iterator"* %454 to i8*
  %456 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %457 = bitcast %"class.__gnu_cxx::__normal_iterator"* %456 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %455, i8* %457, i64 8, i32 8, i1 false)
  %458 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %459 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %458, i32 0, i32 0
  %460 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %459, align 8
  %461 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %462 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %461, i32 0, i32 0
  %463 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %462, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %460, %"struct.Solve::edge"* %463)
  %464 = load i32, i32* @x.630
  %465 = load i32, i32* @y.631
  %466 = sub i32 0, 1
  %467 = add i32 %464, %466
  %468 = sub i32 %464, 1
  %469 = mul i32 %464, %467
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %465, 10
  %473 = xor i1 %471, true
  %474 = xor i1 %472, true
  %475 = xor i1 false, true
  %476 = and i1 %473, false
  %477 = and i1 %471, %475
  %478 = and i1 %474, false
  %479 = and i1 %472, %475
  %480 = or i1 %476, %477
  %481 = or i1 %478, %479
  %482 = xor i1 %480, %481
  %483 = or i1 %473, %474
  %484 = xor i1 %483, true
  %485 = or i1 false, %475
  %486 = and i1 %484, %485
  %487 = or i1 %482, %486
  %488 = or i1 %471, %472
  %489 = select i1 %487, i32 -932815389, i32 29700411
  store i32 %489, i32* %43
  br label %582

; <label>:490:                                    ; preds = %44
  store i32 -601396696, i32* %43
  br label %582

; <label>:491:                                    ; preds = %44
  %492 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %493 = bitcast %"class.__gnu_cxx::__normal_iterator"* %492 to i8*
  %494 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %495 = bitcast %"class.__gnu_cxx::__normal_iterator"* %494 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %493, i8* %495, i64 8, i32 8, i1 false)
  %496 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %497 = bitcast %"class.__gnu_cxx::__normal_iterator"* %496 to i8*
  %498 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28
  %499 = bitcast %"class.__gnu_cxx::__normal_iterator"* %498 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %497, i8* %499, i64 8, i32 8, i1 false)
  %500 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %501 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %500, i32 0, i32 0
  %502 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %501, align 8
  %503 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %504 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %503, i32 0, i32 0
  %505 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %504, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %502, %"struct.Solve::edge"* %505)
  store i32 -601396696, i32* %43
  br label %582

; <label>:506:                                    ; preds = %44
  store i32 890798231, i32* %43
  br label %582

; <label>:507:                                    ; preds = %44
  store i32 524229447, i32* %43
  br label %582

; <label>:508:                                    ; preds = %44
  ret void

; <label>:509:                                    ; preds = %44
  %510 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %511 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %512 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %513 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %514 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %515 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %516 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %517 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %518 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %519 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %520 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %521 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %522 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %523 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %524 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %525 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %526 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %527 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %528 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %529 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %530 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %531 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %532 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %533 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %534 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %535 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %536 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %537 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %510, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %537, align 8
  %538 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %511, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %538, align 8
  %539 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %512, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %539, align 8
  %540 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %513, i32 0, i32 0
  store %"struct.Solve::edge"* %3, %"struct.Solve::edge"** %540, align 8
  %541 = bitcast %"class.__gnu_cxx::__normal_iterator"* %515 to i8*
  %542 = bitcast %"class.__gnu_cxx::__normal_iterator"* %511 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %541, i8* %542, i64 8, i32 8, i1 false)
  %543 = bitcast %"class.__gnu_cxx::__normal_iterator"* %516 to i8*
  %544 = bitcast %"class.__gnu_cxx::__normal_iterator"* %512 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %543, i8* %544, i64 8, i32 8, i1 false)
  %545 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %515, i32 0, i32 0
  %546 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %545, align 8
  %547 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %516, i32 0, i32 0
  %548 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %547, align 8
  %549 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %514, %"struct.Solve::edge"* %546, %"struct.Solve::edge"* %548)
  store i32 844929825, i32* %43
  br label %582

; <label>:550:                                    ; preds = %44
  store i32 -1288105717, i32* %43
  br label %582

; <label>:551:                                    ; preds = %44
  store i32 -1554269614, i32* %43
  br label %582

; <label>:552:                                    ; preds = %44
  %553 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %554 = bitcast %"class.__gnu_cxx::__normal_iterator"* %553 to i8*
  %555 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %556 = bitcast %"class.__gnu_cxx::__normal_iterator"* %555 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %554, i8* %556, i64 8, i32 8, i1 false)
  %557 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %558 = bitcast %"class.__gnu_cxx::__normal_iterator"* %557 to i8*
  %559 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29
  %560 = bitcast %"class.__gnu_cxx::__normal_iterator"* %559 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %558, i8* %560, i64 8, i32 8, i1 false)
  %561 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %562 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %561, i32 0, i32 0
  %563 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %562, align 8
  %564 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %565 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %564, i32 0, i32 0
  %566 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %565, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %563, %"struct.Solve::edge"* %566)
  store i32 -929438513, i32* %43
  br label %582

; <label>:567:                                    ; preds = %44
  %568 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %569 = bitcast %"class.__gnu_cxx::__normal_iterator"* %568 to i8*
  %570 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30
  %571 = bitcast %"class.__gnu_cxx::__normal_iterator"* %570 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %569, i8* %571, i64 8, i32 8, i1 false)
  %572 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %573 = bitcast %"class.__gnu_cxx::__normal_iterator"* %572 to i8*
  %574 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27
  %575 = bitcast %"class.__gnu_cxx::__normal_iterator"* %574 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %573, i8* %575, i64 8, i32 8, i1 false)
  %576 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %577 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %576, i32 0, i32 0
  %578 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %577, align 8
  %579 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %580 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %579, i32 0, i32 0
  %581 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %580, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %578, %"struct.Solve::edge"* %581)
  store i32 -1031052900, i32* %43
  br label %582

; <label>:582:                                    ; preds = %567, %552, %551, %550, %509, %507, %506, %491, %490, %449, %433, %415, %414, %373, %345, %327, %326, %298, %270, %269, %253, %225, %210, %195, %177, %162, %144, %141, %67, %47, %46
  br label %44
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.Solve::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.632
  %7 = load i32, i32* @y.633
  %8 = add i32 %6, 1788067489
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1788067489
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 382410717, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %93
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 382410717, label %20
    i32 2139417359, label %28
    i32 -1541632851, label %59
    i32 -973216480, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %93

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2139417359, i32 -973216480
  store i32 %27, i32* %16
  br label %93

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"struct.Solve::edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %30, align 8
  store i64 %1, i64* %31, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %35 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %34, align 8
  %36 = load i64, i64* %31, align 8
  %37 = add i64 0, 7872336934984586764
  %38 = sub i64 %37, %36
  %39 = sub i64 %38, 7872336934984586764
  %40 = sub i64 0, %36
  %41 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %35, i64 %39
  store %"struct.Solve::edge"* %41, %"struct.Solve::edge"** %32, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %29, %"struct.Solve::edge"** dereferenceable(8) %32) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %43 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %42, align 8
  store %"struct.Solve::edge"* %43, %"struct.Solve::edge"** %3
  %44 = load i32, i32* @x.632
  %45 = load i32, i32* @y.633
  %46 = add i32 %44, -1153614409
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1153614409
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1541632851, i32 -973216480
  store i32 %58, i32* %16
  br label %93

; <label>:59:                                     ; preds = %17
  %60 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %3
  ret %"struct.Solve::edge"* %60

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %64 = alloca i64, align 8
  %65 = alloca %"struct.Solve::edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  store i64 %1, i64* %64, align 8
  %66 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %68 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %67, align 8
  %69 = load i64, i64* %64, align 8
  %70 = add i64 0, 3780334528676799072
  %71 = sub i64 %70, %69
  %72 = sub i64 %71, 3780334528676799072
  %73 = sub i64 0, %69
  %74 = mul i64 %72, %69
  %75 = sub i64 0, %69
  %76 = add i64 0, %75
  %77 = sub i64 0, %69
  %78 = mul i64 %76, %69
  %79 = sub i64 0, 0
  %80 = add i64 0, %79
  %81 = sub i64 0, 0
  %82 = sub i64 %80, 5212631051869099362
  %83 = add i64 %82, %69
  %84 = add i64 %83, 5212631051869099362
  %85 = add i64 %80, %69
  %86 = add i64 0, 7873373313324606654
  %87 = sub i64 %86, %69
  %88 = sub i64 %87, 7873373313324606654
  %89 = sub i64 0, %69
  %90 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %68, i64 %88
  store %"struct.Solve::edge"* %90, %"struct.Solve::edge"** %65, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %62, %"struct.Solve::edge"** dereferenceable(8) %65) #3
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %62, i32 0, i32 0
  %92 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %91, align 8
  store i32 2139417359, i32* %16
  br label %93

; <label>:93:                                     ; preds = %61, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEET_SD_SD_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %16 = alloca i1
  %17 = alloca i1
  %18 = load i32, i32* @x.634
  %19 = load i32, i32* @y.635
  %20 = add i32 %18, -744156937
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, -744156937
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  store i1 %26, i1* %17
  %27 = icmp slt i32 %19, 10
  store i1 %27, i1* %16
  %28 = alloca i32
  store i32 1720821087, i32* %28
  br label %29

; <label>:29:                                     ; preds = %3, %331
  %30 = load i32, i32* %28
  switch i32 %30, label %31 [
    i32 1720821087, label %32
    i32 67304486, label %52
    i32 -1811474316, label %97
    i32 581410229, label %98
    i32 2088933462, label %99
    i32 928134517, label %117
    i32 39020385, label %144
    i32 -786457223, label %162
    i32 -176713824, label %163
    i32 954374468, label %166
    i32 -1056190000, label %182
    i32 -1134299215, label %214
    i32 1145699511, label %217
    i32 -816265564, label %244
    i32 74663164, label %262
    i32 407035171, label %263
    i32 393586856, label %268
    i32 10731669, label %276
    i32 -650045418, label %293
    i32 -945404192, label %308
    i32 2008016760, label %311
    i32 854873698, label %328
  ]

; <label>:31:                                     ; preds = %29
  br label %331

; <label>:32:                                     ; preds = %29
  %33 = load volatile i1, i1* %17
  %34 = load volatile i1, i1* %16
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 67304486, i32 -650045418
  store i32 %51, i32* %28
  br label %331

; <label>:52:                                     ; preds = %29
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %53, %"class.__gnu_cxx::__normal_iterator"** %15
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %54, %"class.__gnu_cxx::__normal_iterator"** %14
  %55 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %55, %"class.__gnu_cxx::__normal_iterator"** %13
  %56 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %56, %"class.__gnu_cxx::__normal_iterator"** %12
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %57, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %58 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %58, %"class.__gnu_cxx::__normal_iterator"** %10
  %59 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %59, %"class.__gnu_cxx::__normal_iterator"** %9
  %60 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %60, %"class.__gnu_cxx::__normal_iterator"** %8
  %61 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %61, %"class.__gnu_cxx::__normal_iterator"** %7
  %62 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %62, %"class.__gnu_cxx::__normal_iterator"** %6
  %63 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %63, %"class.__gnu_cxx::__normal_iterator"** %5
  %64 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %65, align 8
  %66 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %67, align 8
  %68 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %68, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %69, align 8
  %70 = load i32, i32* @x.634
  %71 = load i32, i32* @y.635
  %72 = sub i32 %70, -1026643068
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -1026643068
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -1811474316, i32 -650045418
  store i32 %96, i32* %28
  br label %331

; <label>:97:                                     ; preds = %29
  store i32 581410229, i32* %28
  br label %331

; <label>:98:                                     ; preds = %29
  store i32 2088933462, i32* %28
  br label %331

; <label>:99:                                     ; preds = %29
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %100 to i8*
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %103, i64 8, i32 8, i1 false)
  %104 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator"* %104 to i8*
  %106 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %107, i64 8, i32 8, i1 false)
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %108, i32 0, i32 0
  %110 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %109, align 8
  %111 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %111, i32 0, i32 0
  %113 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %112, align 8
  %114 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %115 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %114, %"struct.Solve::edge"* %110, %"struct.Solve::edge"* %113)
  %116 = select i1 %115, i32 928134517, i32 -176713824
  store i32 %116, i32* %28
  br label %331

; <label>:117:                                    ; preds = %29
  %118 = load i32, i32* @x.634
  %119 = load i32, i32* @y.635
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  %143 = select i1 %141, i32 39020385, i32 -945404192
  store i32 %143, i32* %28
  br label %331

; <label>:144:                                    ; preds = %29
  %145 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %146 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %145) #3
  %147 = load i32, i32* @x.634
  %148 = load i32, i32* @y.635
  %149 = sub i32 %147, -1049324693
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -1049324693
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  %161 = select i1 %159, i32 -786457223, i32 -945404192
  store i32 %161, i32* %28
  br label %331

; <label>:162:                                    ; preds = %29
  store i32 2088933462, i32* %28
  br label %331

; <label>:163:                                    ; preds = %29
  %164 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %165 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %164) #3
  store i32 954374468, i32* %28
  br label %331

; <label>:166:                                    ; preds = %29
  %167 = load i32, i32* @x.634
  %168 = load i32, i32* @y.635
  %169 = sub i32 %167, -338442535
  %170 = sub i32 %169, 1
  %171 = add i32 %170, -338442535
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  %181 = select i1 %179, i32 -1056190000, i32 2008016760
  store i32 %181, i32* %28
  br label %331

; <label>:182:                                    ; preds = %29
  %183 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %184 = bitcast %"class.__gnu_cxx::__normal_iterator"* %183 to i8*
  %185 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %186 = bitcast %"class.__gnu_cxx::__normal_iterator"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %184, i8* %186, i64 8, i32 8, i1 false)
  %187 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %188 = bitcast %"class.__gnu_cxx::__normal_iterator"* %187 to i8*
  %189 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %190 = bitcast %"class.__gnu_cxx::__normal_iterator"* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %190, i64 8, i32 8, i1 false)
  %191 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %192 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %191, i32 0, i32 0
  %193 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %192, align 8
  %194 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %195 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %194, i32 0, i32 0
  %196 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %195, align 8
  %197 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %198 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %197, %"struct.Solve::edge"* %193, %"struct.Solve::edge"* %196)
  store i1 %198, i1* %4
  %199 = load i32, i32* @x.634
  %200 = load i32, i32* @y.635
  %201 = add i32 %199, 781548222
  %202 = sub i32 %201, 1
  %203 = sub i32 %202, 781548222
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = and i1 %207, %208
  %210 = xor i1 %207, %208
  %211 = or i1 %209, %210
  %212 = or i1 %207, %208
  %213 = select i1 %211, i32 -1134299215, i32 2008016760
  store i32 %213, i32* %28
  br label %331

; <label>:214:                                    ; preds = %29
  %215 = load volatile i1, i1* %4
  %216 = select i1 %215, i32 1145699511, i32 407035171
  store i32 %216, i32* %28
  br label %331

; <label>:217:                                    ; preds = %29
  %218 = load i32, i32* @x.634
  %219 = load i32, i32* @y.635
  %220 = sub i32 0, 1
  %221 = add i32 %218, %220
  %222 = sub i32 %218, 1
  %223 = mul i32 %218, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %219, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 false, true
  %230 = and i1 %227, false
  %231 = and i1 %225, %229
  %232 = and i1 %228, false
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 false, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  %243 = select i1 %241, i32 -816265564, i32 854873698
  store i32 %243, i32* %28
  br label %331

; <label>:244:                                    ; preds = %29
  %245 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %246 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %245) #3
  %247 = load i32, i32* @x.634
  %248 = load i32, i32* @y.635
  %249 = add i32 %247, -161114184
  %250 = sub i32 %249, 1
  %251 = sub i32 %250, -161114184
  %252 = sub i32 %247, 1
  %253 = mul i32 %247, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %248, 10
  %257 = and i1 %255, %256
  %258 = xor i1 %255, %256
  %259 = or i1 %257, %258
  %260 = or i1 %255, %256
  %261 = select i1 %259, i32 74663164, i32 854873698
  store i32 %261, i32* %28
  br label %331

; <label>:262:                                    ; preds = %29
  store i32 954374468, i32* %28
  br label %331

; <label>:263:                                    ; preds = %29
  %264 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %265 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %266 = call zeroext i1 @_ZN9__gnu_cxxltIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %264, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %265) #3
  %267 = select i1 %266, i32 10731669, i32 393586856
  store i32 %267, i32* %28
  br label %331

; <label>:268:                                    ; preds = %29
  %269 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %270 = bitcast %"class.__gnu_cxx::__normal_iterator"* %269 to i8*
  %271 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %272 = bitcast %"class.__gnu_cxx::__normal_iterator"* %271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %270, i8* %272, i64 8, i32 8, i1 false)
  %273 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %274 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %273, i32 0, i32 0
  %275 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %274, align 8
  ret %"struct.Solve::edge"* %275

; <label>:276:                                    ; preds = %29
  %277 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %278 = bitcast %"class.__gnu_cxx::__normal_iterator"* %277 to i8*
  %279 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %280 = bitcast %"class.__gnu_cxx::__normal_iterator"* %279 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %278, i8* %280, i64 8, i32 8, i1 false)
  %281 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %282 = bitcast %"class.__gnu_cxx::__normal_iterator"* %281 to i8*
  %283 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %284 = bitcast %"class.__gnu_cxx::__normal_iterator"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %282, i8* %284, i64 8, i32 8, i1 false)
  %285 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %286 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %285, i32 0, i32 0
  %287 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %286, align 8
  %288 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %289 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %288, i32 0, i32 0
  %290 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %289, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"* %287, %"struct.Solve::edge"* %290)
  %291 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %292 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %291) #3
  store i32 581410229, i32* %28
  br label %331

; <label>:293:                                    ; preds = %29
  %294 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %295 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %296 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %297 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %298 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %299 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %300 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %301 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %302 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %303 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %304 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %305 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %295, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %305, align 8
  %306 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %296, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %306, align 8
  %307 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %297, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %307, align 8
  store i32 67304486, i32* %28
  br label %331

; <label>:308:                                    ; preds = %29
  %309 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %310 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %309) #3
  store i32 39020385, i32* %28
  br label %331

; <label>:311:                                    ; preds = %29
  %312 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %313 = bitcast %"class.__gnu_cxx::__normal_iterator"* %312 to i8*
  %314 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %315 = bitcast %"class.__gnu_cxx::__normal_iterator"* %314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %313, i8* %315, i64 8, i32 8, i1 false)
  %316 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %317 = bitcast %"class.__gnu_cxx::__normal_iterator"* %316 to i8*
  %318 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %319 = bitcast %"class.__gnu_cxx::__normal_iterator"* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %317, i8* %319, i64 8, i32 8, i1 false)
  %320 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %321 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %320, i32 0, i32 0
  %322 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %321, align 8
  %323 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %324 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %323, i32 0, i32 0
  %325 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %324, align 8
  %326 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %327 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %326, %"struct.Solve::edge"* %322, %"struct.Solve::edge"* %325)
  store i32 -1056190000, i32* %28
  br label %331

; <label>:328:                                    ; preds = %29
  %329 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %330 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %329) #3
  store i32 -816265564, i32* %28
  br label %331

; <label>:331:                                    ; preds = %328, %311, %308, %293, %276, %263, %262, %244, %217, %214, %182, %166, %163, %162, %144, %117, %99, %98, %97, %52, %32, %31
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_EvT_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %6, align 8
  %7 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %8 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  call void @_ZSt4swapIN5Solve4edgeEEvRT_S3_(%"struct.Solve::edge"* dereferenceable(8) %7, %"struct.Solve::edge"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIN5Solve4edgeEEvRT_S3_(%"struct.Solve::edge"* dereferenceable(8), %"struct.Solve::edge"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Solve::edge"*, align 8
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge", align 4
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %3, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %4, align 8
  %6 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %3, align 8
  %7 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %6) #3
  %8 = bitcast %"struct.Solve::edge"* %5 to i8*
  %9 = bitcast %"struct.Solve::edge"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false)
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %11 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %10) #3
  %12 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %3, align 8
  %13 = bitcast %"struct.Solve::edge"* %12 to i8*
  %14 = bitcast %"struct.Solve::edge"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false)
  %15 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %5) #3
  %16 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %17 = bitcast %"struct.Solve::edge"* %16 to i8*
  %18 = bitcast %"struct.Solve::edge"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #12

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"struct.Solve::edge"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %17 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %18 = alloca i1
  %19 = alloca i1
  %20 = load i32, i32* @x.640
  %21 = load i32, i32* @y.641
  %22 = add i32 %20, 1146328280
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1146328280
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  store i1 %28, i1* %19
  %29 = icmp slt i32 %21, 10
  store i1 %29, i1* %18
  %30 = alloca i32
  store i32 1069763168, i32* %30
  br label %31

; <label>:31:                                     ; preds = %2, %436
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 1069763168, label %34
    i32 1874930847, label %42
    i32 -1776100629, label %79
    i32 1952242013, label %82
    i32 1150536488, label %83
    i32 1467799251, label %88
    i32 643344655, label %116
    i32 -1919747260, label %135
    i32 1196411748, label %138
    i32 -1868444617, label %156
    i32 -437072883, label %184
    i32 1784086082, label %236
    i32 1544216786, label %237
    i32 2125063782, label %253
    i32 482390126, label %280
    i32 -883707091, label %281
    i32 -518789830, label %309
    i32 2073311953, label %324
    i32 1583249087, label %325
    i32 964905749, label %340
    i32 -1297481398, label %358
    i32 -1085636171, label %359
    i32 -1386250959, label %360
    i32 1327583102, label %379
    i32 155836992, label %383
    i32 -951353595, label %420
    i32 -246572065, label %432
    i32 -781002507, label %433
  ]

; <label>:33:                                     ; preds = %31
  br label %436

; <label>:34:                                     ; preds = %31
  %35 = load volatile i1, i1* %19
  %36 = load volatile i1, i1* %18
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1874930847, i32 -1386250959
  store i32 %41, i32* %30
  br label %436

; <label>:42:                                     ; preds = %31
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %43, %"class.__gnu_cxx::__normal_iterator"** %17
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %44, %"class.__gnu_cxx::__normal_iterator"** %16
  %45 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %45, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %15
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %46, %"class.__gnu_cxx::__normal_iterator"** %14
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %47, %"class.__gnu_cxx::__normal_iterator"** %13
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %48, %"class.__gnu_cxx::__normal_iterator"** %12
  %49 = alloca %"struct.Solve::edge", align 4
  store %"struct.Solve::edge"* %49, %"struct.Solve::edge"** %11
  %50 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %50, %"class.__gnu_cxx::__normal_iterator"** %10
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %51, %"class.__gnu_cxx::__normal_iterator"** %9
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %52, %"class.__gnu_cxx::__normal_iterator"** %8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %53, %"class.__gnu_cxx::__normal_iterator"** %7
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %54, %"class.__gnu_cxx::__normal_iterator"** %6
  %55 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %56 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %56, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %5
  %57 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %58 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %58, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %59, align 8
  %60 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %60, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %61, align 8
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %63 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %64 = call zeroext i1 @_ZN9__gnu_cxxeqIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %62, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %63) #3
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.640
  %66 = load i32, i32* @y.641
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -1776100629, i32 -1386250959
  store i32 %78, i32* %30
  br label %436

; <label>:79:                                     ; preds = %31
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 1952242013, i32 1150536488
  store i32 %81, i32* %30
  br label %436

; <label>:82:                                     ; preds = %31
  store i32 -1085636171, i32* %30
  br label %436

; <label>:83:                                     ; preds = %31
  %84 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %85 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %84, i64 1) #3
  %86 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %86, i32 0, i32 0
  store %"struct.Solve::edge"* %85, %"struct.Solve::edge"** %87, align 8
  store i32 1467799251, i32* %30
  br label %436

; <label>:88:                                     ; preds = %31
  %89 = load i32, i32* @x.640
  %90 = load i32, i32* @y.641
  %91 = add i32 %89, -1355282097
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -1355282097
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 643344655, i32 1327583102
  store i32 %115, i32* %30
  br label %436

; <label>:116:                                    ; preds = %31
  %117 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %118 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %119 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %118, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %117) #3
  store i1 %119, i1* %3
  %120 = load i32, i32* @x.640
  %121 = load i32, i32* @y.641
  %122 = sub i32 %120, -553408069
  %123 = sub i32 %122, 1
  %124 = add i32 %123, -553408069
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 -1919747260, i32 1327583102
  store i32 %134, i32* %30
  br label %436

; <label>:135:                                    ; preds = %31
  %136 = load volatile i1, i1* %3
  %137 = select i1 %136, i32 1196411748, i32 -1085636171
  store i32 %137, i32* %30
  br label %436

; <label>:138:                                    ; preds = %31
  %139 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %140 = bitcast %"class.__gnu_cxx::__normal_iterator"* %139 to i8*
  %141 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %142 = bitcast %"class.__gnu_cxx::__normal_iterator"* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %142, i64 8, i32 8, i1 false)
  %143 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %144 = bitcast %"class.__gnu_cxx::__normal_iterator"* %143 to i8*
  %145 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %146 = bitcast %"class.__gnu_cxx::__normal_iterator"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %146, i64 8, i32 8, i1 false)
  %147 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %148 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %147, i32 0, i32 0
  %149 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %148, align 8
  %150 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %150, i32 0, i32 0
  %152 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %151, align 8
  %153 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %15
  %154 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %153, %"struct.Solve::edge"* %149, %"struct.Solve::edge"* %152)
  %155 = select i1 %154, i32 -1868444617, i32 1544216786
  store i32 %155, i32* %30
  br label %436

; <label>:156:                                    ; preds = %31
  %157 = load i32, i32* @x.640
  %158 = load i32, i32* @y.641
  %159 = add i32 %157, -1009214692
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -1009214692
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 true, true
  %170 = and i1 %167, true
  %171 = and i1 %165, %169
  %172 = and i1 %168, true
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 true, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  %183 = select i1 %181, i32 -437072883, i32 155836992
  store i32 %183, i32* %30
  br label %436

; <label>:184:                                    ; preds = %31
  %185 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %186 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %185) #3
  %187 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %186) #3
  %188 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %11
  %189 = bitcast %"struct.Solve::edge"* %188 to i8*
  %190 = bitcast %"struct.Solve::edge"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %189, i8* %190, i64 8, i32 4, i1 false)
  %191 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %192 = bitcast %"class.__gnu_cxx::__normal_iterator"* %191 to i8*
  %193 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %194 = bitcast %"class.__gnu_cxx::__normal_iterator"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* %194, i64 8, i32 8, i1 false)
  %195 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %196 = bitcast %"class.__gnu_cxx::__normal_iterator"* %195 to i8*
  %197 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %198 = bitcast %"class.__gnu_cxx::__normal_iterator"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %198, i64 8, i32 8, i1 false)
  %199 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %200 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %199, i64 1) #3
  %201 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %202 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %201, i32 0, i32 0
  store %"struct.Solve::edge"* %200, %"struct.Solve::edge"** %202, align 8
  %203 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %204 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %203, i32 0, i32 0
  %205 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %204, align 8
  %206 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %207 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %206, i32 0, i32 0
  %208 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %207, align 8
  %209 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %210 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %209, i32 0, i32 0
  %211 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %210, align 8
  %212 = call %"struct.Solve::edge"* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Solve::edge"* %205, %"struct.Solve::edge"* %208, %"struct.Solve::edge"* %211)
  %213 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %214 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %213, i32 0, i32 0
  store %"struct.Solve::edge"* %212, %"struct.Solve::edge"** %214, align 8
  %215 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %11
  %216 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %215) #3
  %217 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %218 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %217) #3
  %219 = bitcast %"struct.Solve::edge"* %218 to i8*
  %220 = bitcast %"struct.Solve::edge"* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %219, i8* %220, i64 8, i32 4, i1 false)
  %221 = load i32, i32* @x.640
  %222 = load i32, i32* @y.641
  %223 = add i32 %221, 637556124
  %224 = sub i32 %223, 1
  %225 = sub i32 %224, 637556124
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  %235 = select i1 %233, i32 1784086082, i32 155836992
  store i32 %235, i32* %30
  br label %436

; <label>:236:                                    ; preds = %31
  store i32 -883707091, i32* %30
  br label %436

; <label>:237:                                    ; preds = %31
  %238 = load i32, i32* @x.640
  %239 = load i32, i32* @y.641
  %240 = add i32 %238, -947326039
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, -947326039
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  %252 = select i1 %250, i32 2125063782, i32 -951353595
  store i32 %252, i32* %30
  br label %436

; <label>:253:                                    ; preds = %31
  %254 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %255 = bitcast %"class.__gnu_cxx::__normal_iterator"* %254 to i8*
  %256 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %257 = bitcast %"class.__gnu_cxx::__normal_iterator"* %256 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %255, i8* %257, i64 8, i32 8, i1 false)
  %258 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %5
  %259 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %258 to i8*
  %260 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %15
  %261 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %259, i8* %261, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS6_EE()
  %262 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %263 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %262, i32 0, i32 0
  %264 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %263, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops14_Val_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_(%"struct.Solve::edge"* %264)
  %265 = load i32, i32* @x.640
  %266 = load i32, i32* @y.641
  %267 = sub i32 %265, 1172521060
  %268 = sub i32 %267, 1
  %269 = add i32 %268, 1172521060
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = and i1 %273, %274
  %276 = xor i1 %273, %274
  %277 = or i1 %275, %276
  %278 = or i1 %273, %274
  %279 = select i1 %277, i32 482390126, i32 -951353595
  store i32 %279, i32* %30
  br label %436

; <label>:280:                                    ; preds = %31
  store i32 -883707091, i32* %30
  br label %436

; <label>:281:                                    ; preds = %31
  %282 = load i32, i32* @x.640
  %283 = load i32, i32* @y.641
  %284 = add i32 %282, -1084922029
  %285 = sub i32 %284, 1
  %286 = sub i32 %285, -1084922029
  %287 = sub i32 %282, 1
  %288 = mul i32 %282, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %283, 10
  %292 = xor i1 %290, true
  %293 = xor i1 %291, true
  %294 = xor i1 false, true
  %295 = and i1 %292, false
  %296 = and i1 %290, %294
  %297 = and i1 %293, false
  %298 = and i1 %291, %294
  %299 = or i1 %295, %296
  %300 = or i1 %297, %298
  %301 = xor i1 %299, %300
  %302 = or i1 %292, %293
  %303 = xor i1 %302, true
  %304 = or i1 false, %294
  %305 = and i1 %303, %304
  %306 = or i1 %301, %305
  %307 = or i1 %290, %291
  %308 = select i1 %306, i32 -518789830, i32 -246572065
  store i32 %308, i32* %30
  br label %436

; <label>:309:                                    ; preds = %31
  %310 = load i32, i32* @x.640
  %311 = load i32, i32* @y.641
  %312 = sub i32 0, 1
  %313 = add i32 %310, %312
  %314 = sub i32 %310, 1
  %315 = mul i32 %310, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %311, 10
  %319 = and i1 %317, %318
  %320 = xor i1 %317, %318
  %321 = or i1 %319, %320
  %322 = or i1 %317, %318
  %323 = select i1 %321, i32 2073311953, i32 -246572065
  store i32 %323, i32* %30
  br label %436

; <label>:324:                                    ; preds = %31
  store i32 1583249087, i32* %30
  br label %436

; <label>:325:                                    ; preds = %31
  %326 = load i32, i32* @x.640
  %327 = load i32, i32* @y.641
  %328 = sub i32 0, 1
  %329 = add i32 %326, %328
  %330 = sub i32 %326, 1
  %331 = mul i32 %326, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %327, 10
  %335 = and i1 %333, %334
  %336 = xor i1 %333, %334
  %337 = or i1 %335, %336
  %338 = or i1 %333, %334
  %339 = select i1 %337, i32 964905749, i32 -781002507
  store i32 %339, i32* %30
  br label %436

; <label>:340:                                    ; preds = %31
  %341 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %342 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %341) #3
  %343 = load i32, i32* @x.640
  %344 = load i32, i32* @y.641
  %345 = add i32 %343, -1630302822
  %346 = sub i32 %345, 1
  %347 = sub i32 %346, -1630302822
  %348 = sub i32 %343, 1
  %349 = mul i32 %343, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %344, 10
  %353 = and i1 %351, %352
  %354 = xor i1 %351, %352
  %355 = or i1 %353, %354
  %356 = or i1 %351, %352
  %357 = select i1 %355, i32 -1297481398, i32 -781002507
  store i32 %357, i32* %30
  br label %436

; <label>:358:                                    ; preds = %31
  store i32 1467799251, i32* %30
  br label %436

; <label>:359:                                    ; preds = %31
  ret void

; <label>:360:                                    ; preds = %31
  %361 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %362 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %363 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %364 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %365 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %366 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %367 = alloca %"struct.Solve::edge", align 4
  %368 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %369 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %370 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %371 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %372 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %373 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %374 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %375 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %376 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %361, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %376, align 8
  %377 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %362, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %377, align 8
  %378 = call zeroext i1 @_ZN9__gnu_cxxeqIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %361, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %362) #3
  store i32 1874930847, i32* %30
  br label %436

; <label>:379:                                    ; preds = %31
  %380 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %381 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %382 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %381, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %380) #3
  store i32 643344655, i32* %30
  br label %436

; <label>:383:                                    ; preds = %31
  %384 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %385 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %384) #3
  %386 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %385) #3
  %387 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %11
  %388 = bitcast %"struct.Solve::edge"* %387 to i8*
  %389 = bitcast %"struct.Solve::edge"* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %388, i8* %389, i64 8, i32 4, i1 false)
  %390 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %391 = bitcast %"class.__gnu_cxx::__normal_iterator"* %390 to i8*
  %392 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %393 = bitcast %"class.__gnu_cxx::__normal_iterator"* %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %391, i8* %393, i64 8, i32 8, i1 false)
  %394 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %395 = bitcast %"class.__gnu_cxx::__normal_iterator"* %394 to i8*
  %396 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %397 = bitcast %"class.__gnu_cxx::__normal_iterator"* %396 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %395, i8* %397, i64 8, i32 8, i1 false)
  %398 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %399 = call %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %398, i64 1) #3
  %400 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %401 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %400, i32 0, i32 0
  store %"struct.Solve::edge"* %399, %"struct.Solve::edge"** %401, align 8
  %402 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %403 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %402, i32 0, i32 0
  %404 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %403, align 8
  %405 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %406 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %405, i32 0, i32 0
  %407 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %406, align 8
  %408 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %409 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %408, i32 0, i32 0
  %410 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %409, align 8
  %411 = call %"struct.Solve::edge"* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Solve::edge"* %404, %"struct.Solve::edge"* %407, %"struct.Solve::edge"* %410)
  %412 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %413 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %412, i32 0, i32 0
  store %"struct.Solve::edge"* %411, %"struct.Solve::edge"** %413, align 8
  %414 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %11
  %415 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %414) #3
  %416 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %417 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %416) #3
  %418 = bitcast %"struct.Solve::edge"* %417 to i8*
  %419 = bitcast %"struct.Solve::edge"* %415 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %418, i8* %419, i64 8, i32 4, i1 false)
  store i32 -437072883, i32* %30
  br label %436

; <label>:420:                                    ; preds = %31
  %421 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %422 = bitcast %"class.__gnu_cxx::__normal_iterator"* %421 to i8*
  %423 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %424 = bitcast %"class.__gnu_cxx::__normal_iterator"* %423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %422, i8* %424, i64 8, i32 8, i1 false)
  %425 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %5
  %426 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %425 to i8*
  %427 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %15
  %428 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %426, i8* %428, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS6_EE()
  %429 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %430 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %429, i32 0, i32 0
  %431 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %430, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops14_Val_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_(%"struct.Solve::edge"* %431)
  store i32 2125063782, i32* %30
  br label %436

; <label>:432:                                    ; preds = %31
  store i32 -518789830, i32* %30
  br label %436

; <label>:433:                                    ; preds = %31
  %434 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %435 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %434) #3
  store i32 964905749, i32* %30
  br label %436

; <label>:436:                                    ; preds = %433, %432, %420, %383, %379, %360, %358, %340, %325, %324, %309, %281, %280, %253, %237, %236, %184, %156, %138, %135, %116, %88, %83, %82, %79, %42, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_SD_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %13, align 8
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = alloca i32
  store i32 1018733690, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1018733690, label %20
    i32 545826539, label %36
    i32 -367772011, label %64
    i32 -281149751, label %67
    i32 -89681296, label %74
    i32 -1967110921, label %76
    i32 -1784227365, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* @x.642
  %22 = load i32, i32* @y.643
  %23 = sub i32 %21, 1137919216
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 1137919216
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 545826539, i32 -1784227365
  store i32 %35, i32* %16
  br label %79

; <label>:36:                                     ; preds = %17
  %37 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.642
  %39 = load i32, i32* @y.643
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -367772011, i32 -1784227365
  store i32 %63, i32* %16
  br label %79

; <label>:64:                                     ; preds = %17
  %65 = load volatile i1, i1* %3
  %66 = select i1 %65, i32 -281149751, i32 -1967110921
  store i32 %66, i32* %16
  br label %79

; <label>:67:                                     ; preds = %17
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %10 to i8*
  %71 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS6_EE()
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %73 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %72, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops14_Val_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_(%"struct.Solve::edge"* %73)
  store i32 -89681296, i32* %16
  br label %79

; <label>:74:                                     ; preds = %17
  %75 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  store i32 1018733690, i32* %16
  br label %79

; <label>:76:                                     ; preds = %17
  ret void

; <label>:77:                                     ; preds = %17
  %78 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i32 545826539, i32* %16
  br label %79

; <label>:79:                                     ; preds = %77, %74, %67, %64, %36, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %9, align 8
  %11 = icmp eq %"struct.Solve::edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %18, align 8
  %20 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Solve::edge"* %20, %"struct.Solve::edge"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %25 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %24, align 8
  %26 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Solve::edge"* %26, %"struct.Solve::edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %31 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %33 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %35 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %34, align 8
  %36 = call %"struct.Solve::edge"* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Solve::edge"* %31, %"struct.Solve::edge"* %33, %"struct.Solve::edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %36, %"struct.Solve::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %39 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %38, align 8
  ret %"struct.Solve::edge"* %39
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops14_Val_comp_iterIZNS2_5inputEvEUlS3_S3_E_EEEvT_T0_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %4 = alloca %"struct.Solve::edge", align 4
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %7, align 8
  %8 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %9 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %8) #3
  %10 = bitcast %"struct.Solve::edge"* %4 to i8*
  %11 = bitcast %"struct.Solve::edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %15 = alloca i32
  store i32 1960419187, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %40
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1960419187, label %19
    i32 1911656342, label %26
    i32 -1062408365, label %35
  ]

; <label>:18:                                     ; preds = %16
  br label %40

; <label>:19:                                     ; preds = %16
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %23 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %22, align 8
  %24 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclIS3_NS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEEEEbRT_T0_(%"struct.__gnu_cxx::__ops::_Val_comp_iter"* %3, %"struct.Solve::edge"* dereferenceable(8) %4, %"struct.Solve::edge"* %23)
  %25 = select i1 %24, i32 1911656342, i32 -1062408365
  store i32 %25, i32* %15
  br label %40

; <label>:26:                                     ; preds = %16
  %27 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %28 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %27) #3
  %29 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %30 = bitcast %"struct.Solve::edge"* %29 to i8*
  %31 = bitcast %"struct.Solve::edge"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  store i32 1960419187, i32* %15
  br label %40

; <label>:35:                                     ; preds = %16
  %36 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %4) #3
  %37 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %38 = bitcast %"struct.Solve::edge"* %37 to i8*
  %39 = bitcast %"struct.Solve::edge"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  ret void

; <label>:40:                                     ; preds = %26, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS6_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %class.anon, align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_(%"struct.__gnu_cxx::__ops::_Val_comp_iter"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.652
  %8 = load i32, i32* @y.653
  %9 = sub i32 %7, -536912385
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -536912385
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1133325525, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %118
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1133325525, label %21
    i32 -810423730, label %29
    i32 -1728123473, label %86
    i32 -1797406603, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %118

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -810423730, i32 -1797406603
  store i32 %28, i32* %17
  br label %118

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"struct.Solve::edge"*, align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %39, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %40, align 8
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %35 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %44 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %43, align 8
  %45 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %44)
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator"* %36 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  %49 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %48, align 8
  %50 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %49)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %37 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  %54 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %53, align 8
  %55 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %54)
  %56 = call %"struct.Solve::edge"* @_ZSt22__copy_move_backward_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %45, %"struct.Solve::edge"* %50, %"struct.Solve::edge"* %55)
  store %"struct.Solve::edge"* %56, %"struct.Solve::edge"** %34, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %30, %"struct.Solve::edge"** dereferenceable(8) %34) #3
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %58 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %57, align 8
  store %"struct.Solve::edge"* %58, %"struct.Solve::edge"** %4
  %59 = load i32, i32* @x.652
  %60 = load i32, i32* @y.653
  %61 = add i32 %59, -165379300
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -165379300
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1728123473, i32 -1797406603
  store i32 %85, i32* %17
  br label %118

; <label>:86:                                     ; preds = %18
  %87 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %93 = alloca %"struct.Solve::edge"*, align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %97, align 8
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %98, align 8
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %92, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %99, align 8
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator"* %94 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %94, i32 0, i32 0
  %103 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %102, align 8
  %104 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %103)
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator"* %95 to i8*
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 8, i32 8, i1 false)
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %95, i32 0, i32 0
  %108 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %107, align 8
  %109 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %108)
  %110 = bitcast %"class.__gnu_cxx::__normal_iterator"* %96 to i8*
  %111 = bitcast %"class.__gnu_cxx::__normal_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 8, i32 8, i1 false)
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %96, i32 0, i32 0
  %113 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %112, align 8
  %114 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %113)
  %115 = call %"struct.Solve::edge"* @_ZSt22__copy_move_backward_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %104, %"struct.Solve::edge"* %109, %"struct.Solve::edge"* %114)
  store %"struct.Solve::edge"* %115, %"struct.Solve::edge"** %93, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %89, %"struct.Solve::edge"** dereferenceable(8) %93) #3
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  %117 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %116, align 8
  store i32 -810423730, i32* %17
  br label %118

; <label>:118:                                    ; preds = %88, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  %10 = call %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_(%"struct.Solve::edge"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Solve::edge"* %10, %"struct.Solve::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %13 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %12, align 8
  ret %"struct.Solve::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt22__copy_move_backward_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*, align 8
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %4, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %11 = call %"struct.Solve::edge"* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIN5Solve4edgeEEEPT_PKS5_S8_S6_(%"struct.Solve::edge"* %8, %"struct.Solve::edge"* %9, %"struct.Solve::edge"* %10)
  ret %"struct.Solve::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIN5Solve4edgeEEEPT_PKS5_S8_S6_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.Solve::edge"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"struct.Solve::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %5, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %6, align 8
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %7, align 8
  %9 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %11 = ptrtoint %"struct.Solve::edge"* %9 to i64
  %12 = ptrtoint %"struct.Solve::edge"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 195047176, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %47
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 195047176, label %22
    i32 -2085927873, label %26
    i32 1304974207, label %39
  ]

; <label>:21:                                     ; preds = %19
  br label %47

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -2085927873, i32 1304974207
  store i32 %25, i32* %18
  br label %47

; <label>:26:                                     ; preds = %19
  %27 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %28 = load i64, i64* %8, align 8
  %29 = sub i64 0, 6084216703556676124
  %30 = sub i64 %29, %28
  %31 = add i64 %30, 6084216703556676124
  %32 = sub i64 0, %28
  %33 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %27, i64 %31
  %34 = bitcast %"struct.Solve::edge"* %33 to i8*
  %35 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %5, align 8
  %36 = bitcast %"struct.Solve::edge"* %35 to i8*
  %37 = load i64, i64* %8, align 8
  %38 = mul i64 8, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 4, i1 false)
  store i32 1304974207, i32* %18
  br label %47

; <label>:39:                                     ; preds = %19
  %40 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  %41 = load i64, i64* %8, align 8
  %42 = sub i64 0, -3420152950201175713
  %43 = sub i64 %42, %41
  %44 = add i64 %43, -3420152950201175713
  %45 = sub i64 0, %41
  %46 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %40, i64 %44
  ret %"struct.Solve::edge"* %46

; <label>:47:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_(%"struct.Solve::edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %7, align 8
  ret %"struct.Solve::edge"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EclIS3_NS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEEEEbRT_T0_(%"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %"struct.Solve::edge"* dereferenceable(8), %"struct.Solve::edge"*) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, align 8
  %6 = alloca %"struct.Solve::edge"*, align 8
  %7 = alloca %"struct.Solve::edge", align 4
  %8 = alloca %"struct.Solve::edge", align 4
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %9, align 8
  store %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %5, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %6, align 8
  %10 = load %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %5, align 8
  %11 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Val_comp_iter", %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %10, i32 0, i32 0
  %12 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %13 = bitcast %"struct.Solve::edge"* %7 to i8*
  %14 = bitcast %"struct.Solve::edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false)
  %15 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %16 = bitcast %"struct.Solve::edge"* %8 to i8*
  %17 = bitcast %"struct.Solve::edge"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false)
  %18 = bitcast %"struct.Solve::edge"* %7 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = bitcast %"struct.Solve::edge"* %8 to i64*
  %21 = load i64, i64* %20, align 4
  %22 = call zeroext i1 @_ZZN5Solve5inputEvENKUlNS_4edgeES0_E_clES0_S0_(%class.anon* %11, i64 %19, i64 %21)
  ret i1 %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_(%"struct.__gnu_cxx::__ops::_Val_comp_iter"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.anon, align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Val_comp_iter", %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN5Solve5inputEvEUlNS2_4edgeES3_E_EC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.666
  %5 = load i32, i32* @y.667
  %6 = add i32 %4, 792416862
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 792416862
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 824737883, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 824737883, label %18
    i32 714669992, label %26
    i32 -1937319712, label %46
    i32 -87295839, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 714669992, i32 -87295839
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %class.anon, align 1
  %28 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %28, align 8
  %29 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %28, align 8
  %30 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %29, i32 0, i32 0
  %31 = load i32, i32* @x.666
  %32 = load i32, i32* @y.667
  %33 = sub i32 %31, 1518131842
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1518131842
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1937319712, i32 -87295839
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %class.anon, align 1
  %49 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %49, align 8
  %50 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %49, align 8
  %51 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %50, i32 0, i32 0
  store i32 714669992, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNKSt6vectorIN5Solve4edgeESaIS1_EE6cbeginEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"struct.Solve::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.668
  %6 = load i32, i32* @y.669
  %7 = sub i32 %5, -1537456874
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1537456874
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1716328301, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %90
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1716328301, label %19
    i32 -131348680, label %39
    i32 -594710813, label %77
    i32 -2045711163, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %90

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -131348680, i32 -2045711163
  store i32 %38, i32* %15
  br label %90

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  %43 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %44 = bitcast %"class.std::vector.8"* %43 to %"struct.std::_Vector_base.9"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %46, align 8
  store %"struct.Solve::edge"* %47, %"struct.Solve::edge"** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %40, %"struct.Solve::edge"** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %40, i32 0, i32 0
  %49 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %48, align 8
  store %"struct.Solve::edge"* %49, %"struct.Solve::edge"** %2
  %50 = load i32, i32* @x.668
  %51 = load i32, i32* @y.669
  %52 = add i32 %50, -111936255
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -111936255
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -594710813, i32 -2045711163
  store i32 %76, i32* %15
  br label %90

; <label>:77:                                     ; preds = %16
  %78 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %2
  ret %"struct.Solve::edge"* %78

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %81 = alloca %"class.std::vector.8"*, align 8
  %82 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %81, align 8
  %83 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %84 = bitcast %"class.std::vector.8"* %83 to %"struct.std::_Vector_base.9"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %86, align 8
  store %"struct.Solve::edge"* %87, %"struct.Solve::edge"** %82, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %80, %"struct.Solve::edge"** dereferenceable(8) %82) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %80, i32 0, i32 0
  %89 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %88, align 8
  store i32 -131348680, i32* %15
  br label %90

; <label>:90:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_(%"class.std::vector.8"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.std::vector.8"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %17, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %9, align 8
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  store %"class.std::vector.8"* %18, %"class.std::vector.8"** %5
  %19 = alloca i32
  store i32 450240874, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %163
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 450240874, label %23
    i32 -968328432, label %26
    i32 1379128364, label %54
    i32 921003807, label %74
    i32 1848115822, label %77
    i32 1141237148, label %93
    i32 1039098736, label %108
    i32 1073537700, label %143
    i32 -1554422407, label %144
    i32 -505847523, label %149
    i32 -179817795, label %154
  ]

; <label>:22:                                     ; preds = %20
  br label %163

; <label>:23:                                     ; preds = %20
  %24 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8) #3
  %25 = select i1 %24, i32 -968328432, i32 -1554422407
  store i32 %25, i32* %19
  br label %163

; <label>:26:                                     ; preds = %20
  %27 = load i32, i32* @x.670
  %28 = load i32, i32* @y.671
  %29 = add i32 %27, 627947112
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 627947112
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 1379128364, i32 -505847523
  store i32 %53, i32* %19
  br label %163

; <label>:54:                                     ; preds = %20
  %55 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %56 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %55) #3
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Solve::edge"* %56, %"struct.Solve::edge"** %57, align 8
  %58 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %10) #3
  store i1 %58, i1* %4
  %59 = load i32, i32* @x.670
  %60 = load i32, i32* @y.671
  %61 = add i32 %59, 1782566660
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 1782566660
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 921003807, i32 -505847523
  store i32 %73, i32* %19
  br label %163

; <label>:74:                                     ; preds = %20
  %75 = load volatile i1, i1* %4
  %76 = select i1 %75, i32 1848115822, i32 1141237148
  store i32 %76, i32* %19
  br label %163

; <label>:77:                                     ; preds = %20
  %78 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 8, i1 false)
  %80 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %81 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %80) #3
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.Solve::edge"* %81, %"struct.Solve::edge"** %82, align 8
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %86 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %85, align 8
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %88 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %87, align 8
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %90 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %89, align 8
  %91 = call %"struct.Solve::edge"* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Solve::edge"* %86, %"struct.Solve::edge"* %88, %"struct.Solve::edge"* %90)
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"struct.Solve::edge"* %91, %"struct.Solve::edge"** %92, align 8
  store i32 1141237148, i32* %19
  br label %163

; <label>:93:                                     ; preds = %20
  %94 = load i32, i32* @x.670
  %95 = load i32, i32* @y.671
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 1039098736, i32 -179817795
  store i32 %107, i32* %19
  br label %163

; <label>:108:                                    ; preds = %20
  %109 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %110 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %109, align 8
  %111 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %112 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %111) #3
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Solve::edge"* %112, %"struct.Solve::edge"** %113, align 8
  %114 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %15, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8) #3
  %115 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %110, i64 %114
  %116 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.8"* %116, %"struct.Solve::edge"* %115) #3
  %117 = load i32, i32* @x.670
  %118 = load i32, i32* @y.671
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 1073537700, i32 -179817795
  store i32 %142, i32* %19
  br label %163

; <label>:143:                                    ; preds = %20
  store i32 -1554422407, i32* %19
  br label %163

; <label>:144:                                    ; preds = %20
  %145 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %146 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %146, i64 8, i32 8, i1 false)
  %147 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %148 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %147, align 8
  ret %"struct.Solve::edge"* %148

; <label>:149:                                    ; preds = %20
  %150 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %151 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %150) #3
  %152 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Solve::edge"* %151, %"struct.Solve::edge"** %152, align 8
  %153 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %10) #3
  store i32 1379128364, i32* %19
  br label %163

; <label>:154:                                    ; preds = %20
  %155 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %156 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %155, align 8
  %157 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %158 = call %"struct.Solve::edge"* @_ZNSt6vectorIN5Solve4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %157) #3
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Solve::edge"* %158, %"struct.Solve::edge"** %159, align 8
  %160 = call i64 @_ZN9__gnu_cxxmiIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %15, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8) #3
  %161 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %156, i64 %160
  %162 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.8"* %162, %"struct.Solve::edge"* %161) #3
  store i32 1039098736, i32* %19
  br label %163

; <label>:163:                                    ; preds = %154, %149, %143, %108, %93, %77, %74, %54, %26, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.27"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.27"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %1, %"class.__gnu_cxx::__normal_iterator.27"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"* %5) #3
  %7 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Solve::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Solve4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"* %8) #3
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %9, align 8
  %11 = ptrtoint %"struct.Solve::edge"* %7 to i64
  %12 = ptrtoint %"struct.Solve::edge"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  ret i64 %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"struct.Solve::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.674
  %8 = load i32, i32* @y.675
  %9 = add i32 %7, -482371927
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -482371927
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -81794249, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %119
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -81794249, label %21
    i32 -1056950241, label %29
    i32 -499868349, label %80
    i32 -280493321, label %82
  ]

; <label>:20:                                     ; preds = %18
  br label %119

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1056950241, i32 -280493321
  store i32 %28, i32* %17
  br label %119

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %39, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %40, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %35 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %45 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %44, align 8
  %46 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %45)
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  store %"struct.Solve::edge"* %46, %"struct.Solve::edge"** %47, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %37 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  %51 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %50, align 8
  %52 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %51)
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  store %"struct.Solve::edge"* %52, %"struct.Solve::edge"** %53, align 8
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %38 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %57 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  %59 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %58, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  %61 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %60, align 8
  %62 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Solve::edge"* %57, %"struct.Solve::edge"* %59, %"struct.Solve::edge"* %61)
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %"struct.Solve::edge"* %62, %"struct.Solve::edge"** %63, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %65 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %64, align 8
  store %"struct.Solve::edge"* %65, %"struct.Solve::edge"** %4
  %66 = load i32, i32* @x.674
  %67 = load i32, i32* @y.675
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 -499868349, i32 -280493321
  store i32 %79, i32* %17
  br label %119

; <label>:80:                                     ; preds = %18
  %81 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %4
  ret %"struct.Solve::edge"* %81

; <label>:82:                                     ; preds = %18
  %83 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %85 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %86 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %84, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %92, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %85, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %86, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %94, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator"* %88 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  %98 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %97, align 8
  %99 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %98)
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %87, i32 0, i32 0
  store %"struct.Solve::edge"* %99, %"struct.Solve::edge"** %100, align 8
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %90 to i8*
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  %104 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %103, align 8
  %105 = call %"struct.Solve::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %104)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  store %"struct.Solve::edge"* %105, %"struct.Solve::edge"** %106, align 8
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 8, i1 false)
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %87, i32 0, i32 0
  %110 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %109, align 8
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  %112 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %111, align 8
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  %114 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %113, align 8
  %115 = call %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Solve::edge"* %110, %"struct.Solve::edge"* %112, %"struct.Solve::edge"* %114)
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %83, i32 0, i32 0
  store %"struct.Solve::edge"* %115, %"struct.Solve::edge"** %116, align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %83, i32 0, i32 0
  %118 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %117, align 8
  store i32 -1056950241, i32* %17
  br label %119

; <label>:119:                                    ; preds = %82, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Solve4edgeESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.8"*, %"struct.Solve::edge"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.676
  %4 = load i32, i32* @y.677
  %5 = sub i32 %3, -1445495380
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1445495380
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %63

; <label>:17:                                     ; preds = %2, %63
  %18 = alloca %"class.std::vector.8"*, align 8
  %19 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %18, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %19, align 8
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %21 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %19, align 8
  %22 = bitcast %"class.std::vector.8"* %20 to %"struct.std::_Vector_base.9"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %23, i32 0, i32 1
  %25 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %24, align 8
  %26 = bitcast %"class.std::vector.8"* %20 to %"struct.std::_Vector_base.9"*
  %27 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %26) #3
  %28 = load i32, i32* @x.676
  %29 = load i32, i32* @y.677
  %30 = add i32 %28, 1619301404
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1619301404
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %63

; <label>:54:                                     ; preds = %17
  invoke void @_ZSt8_DestroyIPN5Solve4edgeES1_EvT_S3_RSaIT0_E(%"struct.Solve::edge"* %21, %"struct.Solve::edge"* %25, %"class.std::allocator.10"* dereferenceable(1) %27)
          to label %55 unwind label %60

; <label>:55:                                     ; preds = %54
  %56 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %19, align 8
  %57 = bitcast %"class.std::vector.8"* %20 to %"struct.std::_Vector_base.9"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %58, i32 0, i32 1
  store %"struct.Solve::edge"* %56, %"struct.Solve::edge"** %59, align 8
  ret void

; <label>:60:                                     ; preds = %54
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #10
  unreachable

; <label>:63:                                     ; preds = %17, %2
  %64 = alloca %"class.std::vector.8"*, align 8
  %65 = alloca %"struct.Solve::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %64, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %65, align 8
  %66 = load %"class.std::vector.8"*, %"class.std::vector.8"** %64, align 8
  %67 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %65, align 8
  %68 = bitcast %"class.std::vector.8"* %66 to %"struct.std::_Vector_base.9"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl", %"struct.std::_Vector_base<Solve::edge, std::allocator<Solve::edge> >::_Vector_impl"* %69, i32 0, i32 1
  %71 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %70, align 8
  %72 = bitcast %"class.std::vector.8"* %66 to %"struct.std::_Vector_base.9"*
  %73 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Solve4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %72) #3
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Solve::edge"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.Solve::edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %18 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %17, align 8
  %19 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %23 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %22, align 8
  %24 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %28 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %27, align 8
  %29 = call %"struct.Solve::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Solve::edge"* %28)
  %30 = call %"struct.Solve::edge"* @_ZSt13__copy_move_aILb1EPN5Solve4edgeES2_ET1_T0_S4_S3_(%"struct.Solve::edge"* %19, %"struct.Solve::edge"* %24, %"struct.Solve::edge"* %29)
  store %"struct.Solve::edge"* %30, %"struct.Solve::edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %4, %"struct.Solve::edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %32 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %31, align 8
  ret %"struct.Solve::edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt8__uniqueIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops19_Iter_equal_to_iterEET_SB_SB_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca %"struct.Solve::edge"*
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %17, align 8
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %23 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %22, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %25 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %24, align 8
  %26 = call %"struct.Solve::edge"* @_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops19_Iter_equal_to_iterEET_SB_SB_T0_(%"struct.Solve::edge"* %23, %"struct.Solve::edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %"struct.Solve::edge"* %26, %"struct.Solve::edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = alloca i32
  store i32 242080641, i32* %30
  br label %31

; <label>:31:                                     ; preds = %2, %240
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 242080641, label %34
    i32 -86289901, label %37
    i32 176077739, label %40
    i32 -1090954566, label %44
    i32 -1924889729, label %60
    i32 782041317, label %89
    i32 1324578901, label %92
    i32 -41458107, label %103
    i32 -543320309, label %110
    i32 -549750553, label %111
    i32 -132657007, label %139
    i32 -439370084, label %169
    i32 -1478442898, label %170
    i32 1442973357, label %198
    i32 -1816830371, label %228
    i32 -1445650070, label %230
    i32 -196934503, label %233
    i32 466008362, label %237
  ]

; <label>:33:                                     ; preds = %31
  br label %240

; <label>:34:                                     ; preds = %31
  %35 = call zeroext i1 @_ZN9__gnu_cxxeqIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7) #3
  %36 = select i1 %35, i32 -86289901, i32 176077739
  store i32 %36, i32* %30
  br label %240

; <label>:37:                                     ; preds = %31
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  store i32 -1478442898, i32* %30
  br label %240

; <label>:40:                                     ; preds = %31
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  store i32 -1090954566, i32* %30
  br label %240

; <label>:44:                                     ; preds = %31
  %45 = load i32, i32* @x.680
  %46 = load i32, i32* @y.681
  %47 = sub i32 %45, -1212101019
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1212101019
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1924889729, i32 -1445650070
  store i32 %59, i32* %30
  br label %240

; <label>:60:                                     ; preds = %31
  %61 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %62 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %61, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7) #3
  store i1 %62, i1* %4
  %63 = load i32, i32* @x.680
  %64 = load i32, i32* @y.681
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 782041317, i32 -1445650070
  store i32 %88, i32* %30
  br label %240

; <label>:89:                                     ; preds = %31
  %90 = load volatile i1, i1* %4
  %91 = select i1 %90, i32 1324578901, i32 -549750553
  store i32 %91, i32* %30
  br label %240

; <label>:92:                                     ; preds = %31
  %93 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 8, i32 8, i1 false)
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %98 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %97, align 8
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %100 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %99, align 8
  %101 = call zeroext i1 @_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPN5Solve4edgeESt6vectorIS5_SaIS5_EEEESA_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %8, %"struct.Solve::edge"* %98, %"struct.Solve::edge"* %100)
  %102 = select i1 %101, i32 -543320309, i32 -41458107
  store i32 %102, i32* %30
  br label %240

; <label>:103:                                    ; preds = %31
  %104 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %105 = call dereferenceable(8) %"struct.Solve::edge"* @_ZSt4moveIRN5Solve4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Solve::edge"* dereferenceable(8) %104) #3
  %106 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %13) #3
  %107 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %106) #3
  %108 = bitcast %"struct.Solve::edge"* %107 to i8*
  %109 = bitcast %"struct.Solve::edge"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 8, i32 4, i1 false)
  store i32 -543320309, i32* %30
  br label %240

; <label>:110:                                    ; preds = %31
  store i32 -1090954566, i32* %30
  br label %240

; <label>:111:                                    ; preds = %31
  %112 = load i32, i32* @x.680
  %113 = load i32, i32* @y.681
  %114 = add i32 %112, -666406434
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -666406434
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 -132657007, i32 -196934503
  store i32 %138, i32* %30
  br label %240

; <label>:139:                                    ; preds = %31
  %140 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %13) #3
  %141 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %142 = bitcast %"class.__gnu_cxx::__normal_iterator"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 8, i32 8, i1 false)
  %143 = load i32, i32* @x.680
  %144 = load i32, i32* @y.681
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 false, true
  %155 = and i1 %152, false
  %156 = and i1 %150, %154
  %157 = and i1 %153, false
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 false, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  %168 = select i1 %166, i32 -439370084, i32 -196934503
  store i32 %168, i32* %30
  br label %240

; <label>:169:                                    ; preds = %31
  store i32 -1478442898, i32* %30
  br label %240

; <label>:170:                                    ; preds = %31
  %171 = load i32, i32* @x.680
  %172 = load i32, i32* @y.681
  %173 = add i32 %171, 1160999075
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, 1160999075
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 true, true
  %184 = and i1 %181, true
  %185 = and i1 %179, %183
  %186 = and i1 %182, true
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 true, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  %197 = select i1 %195, i32 1442973357, i32 466008362
  store i32 %197, i32* %30
  br label %240

; <label>:198:                                    ; preds = %31
  %199 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %200 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %199, align 8
  store %"struct.Solve::edge"* %200, %"struct.Solve::edge"** %3
  %201 = load i32, i32* @x.680
  %202 = load i32, i32* @y.681
  %203 = add i32 %201, -724350374
  %204 = sub i32 %203, 1
  %205 = sub i32 %204, -724350374
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 false, true
  %214 = and i1 %211, false
  %215 = and i1 %209, %213
  %216 = and i1 %212, false
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 false, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  %227 = select i1 %225, i32 -1816830371, i32 466008362
  store i32 %227, i32* %30
  br label %240

; <label>:228:                                    ; preds = %31
  %229 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %3
  ret %"struct.Solve::edge"* %229

; <label>:230:                                    ; preds = %31
  %231 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %232 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %231, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7) #3
  store i32 -1924889729, i32* %30
  br label %240

; <label>:233:                                    ; preds = %31
  %234 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %13) #3
  %235 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %236 = bitcast %"class.__gnu_cxx::__normal_iterator"* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* %236, i64 8, i32 8, i1 false)
  store i32 -132657007, i32* %30
  br label %240

; <label>:237:                                    ; preds = %31
  %238 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %239 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %238, align 8
  store i32 1442973357, i32* %30
  br label %240

; <label>:240:                                    ; preds = %237, %233, %230, %198, %170, %169, %139, %111, %110, %103, %92, %89, %60, %44, %40, %37, %34, %33
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv() #5 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Solve::edge"* @_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS3_SaIS3_EEEENS0_5__ops19_Iter_equal_to_iterEET_SB_SB_T0_(%"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %12, align 8
  %13 = alloca i32
  store i32 -160462860, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %181
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -160462860, label %17
    i32 -733127537, label %20
    i32 266144682, label %48
    i32 229784466, label %77
    i32 120568087, label %78
    i32 -1501175246, label %81
    i32 1315786371, label %97
    i32 -1398602840, label %115
    i32 -974300174, label %118
    i32 667662452, label %129
    i32 -1367083666, label %132
    i32 971041592, label %148
    i32 -853894681, label %165
    i32 1990327012, label %166
    i32 1685806648, label %169
    i32 -8023300, label %172
    i32 277724031, label %175
    i32 -443234235, label %178
  ]

; <label>:16:                                     ; preds = %14
  br label %181

; <label>:17:                                     ; preds = %14
  %18 = call zeroext i1 @_ZN9__gnu_cxxeqIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6) #3
  %19 = select i1 %18, i32 -733127537, i32 120568087
  store i32 %19, i32* %13
  br label %181

; <label>:20:                                     ; preds = %14
  %21 = load i32, i32* @x.684
  %22 = load i32, i32* @y.685
  %23 = add i32 %21, 361632853
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 361632853
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 266144682, i32 -8023300
  store i32 %47, i32* %13
  br label %181

; <label>:48:                                     ; preds = %14
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load i32, i32* @x.684
  %52 = load i32, i32* @y.685
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 229784466, i32 -8023300
  store i32 %76, i32* %13
  br label %181

; <label>:77:                                     ; preds = %14
  store i32 1685806648, i32* %13
  br label %181

; <label>:78:                                     ; preds = %14
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 8, i1 false)
  store i32 -1501175246, i32* %13
  br label %181

; <label>:81:                                     ; preds = %14
  %82 = load i32, i32* @x.684
  %83 = load i32, i32* @y.685
  %84 = sub i32 %82, 1267720528
  %85 = sub i32 %84, 1
  %86 = add i32 %85, 1267720528
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 1315786371, i32 277724031
  store i32 %96, i32* %13
  br label %181

; <label>:97:                                     ; preds = %14
  %98 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %99 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %98, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6) #3
  store i1 %99, i1* %3
  %100 = load i32, i32* @x.684
  %101 = load i32, i32* @y.685
  %102 = add i32 %100, 1256561045
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, 1256561045
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 -1398602840, i32 277724031
  store i32 %114, i32* %13
  br label %181

; <label>:115:                                    ; preds = %14
  %116 = load volatile i1, i1* %3
  %117 = select i1 %116, i32 -974300174, i32 1990327012
  store i32 %117, i32* %13
  br label %181

; <label>:118:                                    ; preds = %14
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %120 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 8, i32 8, i1 false)
  %121 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %122 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 8, i1 false)
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %124 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %123, align 8
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %126 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %125, align 8
  %127 = call zeroext i1 @_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPN5Solve4edgeESt6vectorIS5_SaIS5_EEEESA_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %7, %"struct.Solve::edge"* %124, %"struct.Solve::edge"* %126)
  %128 = select i1 %127, i32 667662452, i32 -1367083666
  store i32 %128, i32* %13
  br label %181

; <label>:129:                                    ; preds = %14
  %130 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %131 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 8, i32 8, i1 false)
  store i32 1685806648, i32* %13
  br label %181

; <label>:132:                                    ; preds = %14
  %133 = load i32, i32* @x.684
  %134 = load i32, i32* @y.685
  %135 = sub i32 %133, -1943856678
  %136 = sub i32 %135, 1
  %137 = add i32 %136, -1943856678
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  %147 = select i1 %145, i32 971041592, i32 -443234235
  store i32 %147, i32* %13
  br label %181

; <label>:148:                                    ; preds = %14
  %149 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %150 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 8, i32 8, i1 false)
  %151 = load i32, i32* @x.684
  %152 = load i32, i32* @y.685
  %153 = sub i32 0, 1
  %154 = add i32 %151, %153
  %155 = sub i32 %151, 1
  %156 = mul i32 %151, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %152, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  %164 = select i1 %162, i32 -853894681, i32 -443234235
  store i32 %164, i32* %13
  br label %181

; <label>:165:                                    ; preds = %14
  store i32 -1501175246, i32* %13
  br label %181

; <label>:166:                                    ; preds = %14
  %167 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %168 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %168, i64 8, i32 8, i1 false)
  store i32 1685806648, i32* %13
  br label %181

; <label>:169:                                    ; preds = %14
  %170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %171 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %170, align 8
  ret %"struct.Solve::edge"* %171

; <label>:172:                                    ; preds = %14
  %173 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %174 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %173, i8* %174, i64 8, i32 8, i1 false)
  store i32 266144682, i32* %13
  br label %181

; <label>:175:                                    ; preds = %14
  %176 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %177 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %176, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6) #3
  store i32 1315786371, i32* %13
  br label %181

; <label>:178:                                    ; preds = %14
  %179 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %180 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* %180, i64 8, i32 8, i1 false)
  store i32 971041592, i32* %13
  br label %181

; <label>:181:                                    ; preds = %178, %175, %172, %166, %165, %148, %132, %129, %118, %115, %97, %81, %78, %77, %48, %20, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclINS_17__normal_iteratorIPN5Solve4edgeESt6vectorIS5_SaIS5_EEEESA_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, %"struct.Solve::edge"*, %"struct.Solve::edge"*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.686
  %8 = load i32, i32* @y.687
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 221396976, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 221396976, label %20
    i32 972211754, label %40
    i32 2025729113, label %65
    i32 -1279222437, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 972211754, i32 -1279222437
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %45, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"** %43, align 8
  %46 = load %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"** %43, align 8
  %47 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %41) #3
  %48 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %42) #3
  %49 = call zeroext i1 @_ZNK5Solve4edgeeqERKS0_(%"struct.Solve::edge"* %47, %"struct.Solve::edge"* dereferenceable(8) %48)
  store i1 %49, i1* %4
  %50 = load i32, i32* @x.686
  %51 = load i32, i32* @y.687
  %52 = add i32 %50, 1010383250
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1010383250
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 2025729113, i32 -1279222437
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %4
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %70 = alloca %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %68, i32 0, i32 0
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %71, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %69, i32 0, i32 0
  store %"struct.Solve::edge"* %2, %"struct.Solve::edge"** %72, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"** %70, align 8
  %73 = load %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"*, %"struct.__gnu_cxx::__ops::_Iter_equal_to_iter"** %70, align 8
  %74 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %68) #3
  %75 = call dereferenceable(8) %"struct.Solve::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Solve4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %69) #3
  %76 = call zeroext i1 @_ZNK5Solve4edgeeqERKS0_(%"struct.Solve::edge"* %74, %"struct.Solve::edge"* dereferenceable(8) %75)
  store i32 972211754, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK5Solve4edgeeqERKS0_(%"struct.Solve::edge"*, %"struct.Solve::edge"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca %"struct.Solve::edge"*
  %8 = alloca %"struct.Solve::edge"*, align 8
  %9 = alloca %"struct.Solve::edge"*, align 8
  store %"struct.Solve::edge"* %0, %"struct.Solve::edge"** %8, align 8
  store %"struct.Solve::edge"* %1, %"struct.Solve::edge"** %9, align 8
  %10 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %8, align 8
  store %"struct.Solve::edge"* %10, %"struct.Solve::edge"** %7
  %11 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %7
  %12 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %6
  %14 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %9, align 8
  %15 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %5
  %17 = alloca i32
  store i32 -371227087, i32* %17
  %18 = alloca i1
  br label %19

; <label>:19:                                     ; preds = %2, %136
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -371227087, label %22
    i32 1783717331, label %27
    i32 2108393257, label %43
    i32 639045970, label %78
    i32 578648579, label %80
    i32 -1777932321, label %109
    i32 2040892071, label %125
    i32 -1846332419, label %127
    i32 -857718451, label %135
  ]

; <label>:21:                                     ; preds = %19
  br label %136

; <label>:22:                                     ; preds = %19
  %23 = load volatile i32, i32* %6
  %24 = load volatile i32, i32* %5
  %25 = icmp eq i32 %23, %24
  %26 = select i1 %25, i32 1783717331, i32 578648579
  store i32 %26, i32* %17
  store i1 false, i1* %18
  br label %136

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* @x.688
  %29 = load i32, i32* @y.689
  %30 = add i32 %28, 1044004665
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1044004665
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 2108393257, i32 -1846332419
  store i32 %42, i32* %17
  br label %136

; <label>:43:                                     ; preds = %19
  %44 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %7
  %45 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %9, align 8
  %48 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %46, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.688
  %52 = load i32, i32* @y.689
  %53 = sub i32 %51, 1539539037
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 1539539037
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 639045970, i32 -1846332419
  store i32 %77, i32* %17
  br label %136

; <label>:78:                                     ; preds = %19
  store i32 578648579, i32* %17
  %79 = load volatile i1, i1* %4
  store i1 %79, i1* %18
  br label %136

; <label>:80:                                     ; preds = %19
  %81 = load i1, i1* %18
  store i1 %81, i1* %3
  %82 = load i32, i32* @x.688
  %83 = load i32, i32* @y.689
  %84 = sub i32 %82, 609549183
  %85 = sub i32 %84, 1
  %86 = add i32 %85, 609549183
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -1777932321, i32 -857718451
  store i32 %108, i32* %17
  br label %136

; <label>:109:                                    ; preds = %19
  %110 = load i32, i32* @x.688
  %111 = load i32, i32* @y.689
  %112 = sub i32 %110, 2074901124
  %113 = sub i32 %112, 1
  %114 = add i32 %113, 2074901124
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 2040892071, i32 -857718451
  store i32 %124, i32* %17
  br label %136

; <label>:125:                                    ; preds = %19
  %126 = load volatile i1, i1* %3
  ret i1 %126

; <label>:127:                                    ; preds = %19
  %128 = load volatile %"struct.Solve::edge"*, %"struct.Solve::edge"** %7
  %129 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = load %"struct.Solve::edge"*, %"struct.Solve::edge"** %9, align 8
  %132 = getelementptr inbounds %"struct.Solve::edge", %"struct.Solve::edge"* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %130, %133
  store i32 2108393257, i32* %17
  br label %136

; <label>:135:                                    ; preds = %19
  store i32 -1777932321, i32* %17
  br label %136

; <label>:136:                                    ; preds = %135, %127, %109, %80, %78, %43, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.690
  %3 = load i32, i32* @y.691
  %4 = sub i32 %2, 534204028
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 534204028
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %51

; <label>:28:                                     ; preds = %1, %51
  %29 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %29, align 8
  %30 = load %"class.std::vector.13"*, %"class.std::vector.13"** %29, align 8
  %31 = bitcast %"class.std::vector.13"* %30 to %"struct.std::_Vector_base.14"*
  %32 = load i32, i32* @x.690
  %33 = load i32, i32* @y.691
  %34 = add i32 %32, -160391680
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -160391680
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %51

; <label>:46:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.14"* %31)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #10
  unreachable

; <label>:51:                                     ; preds = %28, %1
  %52 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %52, align 8
  %53 = load %"class.std::vector.13"*, %"class.std::vector.13"** %52, align 8
  %54 = bitcast %"class.std::vector.13"* %53 to %"struct.std::_Vector_base.14"*
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.19"* %4)
          to label %5 unwind label %46

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.692
  %7 = load i32, i32* @y.693
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %49

; <label>:31:                                     ; preds = %5, %49
  %32 = load i32, i32* @x.692
  %33 = load i32, i32* @y.693
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %49

; <label>:45:                                     ; preds = %31
  ret void

; <label>:46:                                     ; preds = %1
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #10
  unreachable

; <label>:49:                                     ; preds = %31, %5
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.23"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.694
  %3 = load i32, i32* @y.695
  %4 = add i32 %2, 1951165057
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1951165057
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %51

; <label>:16:                                     ; preds = %1, %51
  %17 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %17, align 8
  %18 = load %"class.std::vector.23"*, %"class.std::vector.23"** %17, align 8
  %19 = bitcast %"class.std::vector.23"* %18 to %"struct.std::_Bvector_base"*
  %20 = load i32, i32* @x.694
  %21 = load i32, i32* @y.695
  %22 = add i32 %20, 1869616179
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1869616179
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %51

; <label>:46:                                     ; preds = %16
  invoke void @_ZNSt13_Bvector_baseISaIbEEC2Ev(%"struct.std::_Bvector_base"* %19)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #10
  unreachable

; <label>:51:                                     ; preds = %16, %1
  %52 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %52, align 8
  %53 = load %"class.std::vector.23"*, %"class.std::vector.23"** %52, align 8
  %54 = bitcast %"class.std::vector.23"* %53 to %"struct.std::_Bvector_base"*
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.13"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.13"*
  %6 = alloca %"class.std::vector.13"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  store %"class.std::vector.13"* %8, %"class.std::vector.13"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %11 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 746587036, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %179
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 746587036, label %16
    i32 -882701773, label %21
    i32 1990306562, label %49
    i32 -2115982553, label %73
    i32 1558186381, label %74
    i32 1084318919, label %80
    i32 -1671730858, label %89
    i32 544597429, label %90
    i32 794130521, label %117
    i32 702564774, label %145
    i32 -1242535604, label %146
    i32 -609283967, label %178
  ]

; <label>:15:                                     ; preds = %13
  br label %179

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -882701773, i32 1558186381
  store i32 %20, i32* %12
  br label %179

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.696
  %23 = load i32, i32* @y.697
  %24 = sub i32 %22, 1039221623
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 1039221623
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 1990306562, i32 -1242535604
  store i32 %48, i32* %12
  br label %179

; <label>:49:                                     ; preds = %13
  %50 = load i64, i64* %7, align 8
  %51 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %52 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %51) #3
  %53 = sub i64 %50, -5988030449083839138
  %54 = sub i64 %53, %52
  %55 = add i64 %54, -5988030449083839138
  %56 = sub i64 %50, %52
  %57 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.13"* %57, i64 %55)
  %58 = load i32, i32* @x.696
  %59 = load i32, i32* @y.697
  %60 = add i32 %58, 1985561517
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 1985561517
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -2115982553, i32 -1242535604
  store i32 %72, i32* %12
  br label %179

; <label>:73:                                     ; preds = %13
  store i32 544597429, i32* %12
  br label %179

; <label>:74:                                     ; preds = %13
  %75 = load i64, i64* %7, align 8
  %76 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %77 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %76) #3
  %78 = icmp ult i64 %75, %77
  %79 = select i1 %78, i32 1084318919, i32 -1671730858
  store i32 %79, i32* %12
  br label %179

; <label>:80:                                     ; preds = %13
  %81 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %82 = bitcast %"class.std::vector.13"* %81 to %"struct.std::_Vector_base.14"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::vector.18"*, %"class.std::vector.18"** %84, align 8
  %86 = load i64, i64* %7, align 8
  %87 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %85, i64 %86
  %88 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.13"* %88, %"class.std::vector.18"* %87) #3
  store i32 -1671730858, i32* %12
  br label %179

; <label>:89:                                     ; preds = %13
  store i32 544597429, i32* %12
  br label %179

; <label>:90:                                     ; preds = %13
  %91 = load i32, i32* @x.696
  %92 = load i32, i32* @y.697
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 794130521, i32 -609283967
  store i32 %116, i32* %12
  br label %179

; <label>:117:                                    ; preds = %13
  %118 = load i32, i32* @x.696
  %119 = load i32, i32* @y.697
  %120 = add i32 %118, 2108102298
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 2108102298
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 702564774, i32 -609283967
  store i32 %144, i32* %12
  br label %179

; <label>:145:                                    ; preds = %13
  ret void

; <label>:146:                                    ; preds = %13
  %147 = load i64, i64* %7, align 8
  %148 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %149 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %148) #3
  %150 = add i64 %147, 3473727731587802201
  %151 = sub i64 %150, %149
  %152 = sub i64 %151, 3473727731587802201
  %153 = sub i64 %147, %149
  %154 = mul i64 %152, %149
  %155 = sub i64 %147, -6807594982764855920
  %156 = sub i64 %155, %149
  %157 = add i64 %156, -6807594982764855920
  %158 = sub i64 %147, %149
  %159 = mul i64 %157, %149
  %160 = sub i64 %147, 2250065643363110288
  %161 = sub i64 %160, %149
  %162 = add i64 %161, 2250065643363110288
  %163 = sub i64 %147, %149
  %164 = mul i64 %162, %149
  %165 = add i64 0, -3032539344533349612
  %166 = sub i64 %165, %147
  %167 = sub i64 %166, -3032539344533349612
  %168 = sub i64 0, %147
  %169 = sub i64 0, %149
  %170 = sub i64 %167, %169
  %171 = add i64 %167, %149
  %172 = shl i64 %147, %149
  %173 = sub i64 %147, -3281912330183166406
  %174 = sub i64 %173, %149
  %175 = add i64 %174, -3281912330183166406
  %176 = sub i64 %147, %149
  %177 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.13"* %177, i64 %175)
  store i32 1990306562, i32* %12
  br label %179

; <label>:178:                                    ; preds = %13
  store i32 794130521, i32* %12
  br label %179

; <label>:179:                                    ; preds = %178, %146, %117, %90, %89, %80, %74, %73, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE6resizeEmb(%"class.std::vector.23"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.23"*
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %7, align 8
  store i64 %1, i64* %8, align 8
  %15 = zext i1 %2 to i8
  store i8 %15, i8* %9, align 1
  %16 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  store %"class.std::vector.23"* %16, %"class.std::vector.23"** %6
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %5
  %18 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %19 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"* %18) #3
  store i64 %19, i64* %4
  %20 = alloca i32
  store i32 -402799557, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %77
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -402799557, label %24
    i32 579894943, label %29
    i32 1366697734, label %50
    i32 -300253708, label %76
  ]

; <label>:23:                                     ; preds = %21
  br label %77

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = load volatile i64, i64* %4
  %27 = icmp ult i64 %25, %26
  %28 = select i1 %27, i32 579894943, i32 1366697734
  store i32 %28, i32* %20
  br label %77

; <label>:29:                                     ; preds = %21
  %30 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %31 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %30) #3
  %32 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 0
  %34 = extractvalue { i64*, i32 } %31, 0
  store i64* %34, i64** %33, align 8
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 1
  %36 = extractvalue { i64*, i32 } %31, 1
  store i32 %36, i32* %35, align 8
  %37 = load i64, i64* %8, align 8
  %38 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %11, i64 %37)
  %39 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %40 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %39, i32 0, i32 0
  %41 = extractvalue { i64*, i32 } %38, 0
  store i64* %41, i64** %40, align 8
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %39, i32 0, i32 1
  %43 = extractvalue { i64*, i32 } %38, 1
  store i32 %43, i32* %42, align 8
  %44 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  call void @_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator(%"class.std::vector.23"* %49, i64* %46, i32 %48)
  store i32 -300253708, i32* %20
  br label %77

; <label>:50:                                     ; preds = %21
  %51 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %52 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"* %51) #3
  %53 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = extractvalue { i64*, i32 } %52, 0
  store i64* %55, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = extractvalue { i64*, i32 } %52, 1
  store i32 %57, i32* %56, align 8
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %12, %"struct.std::_Bit_iterator"* dereferenceable(16) %13)
  %58 = load i64, i64* %8, align 8
  %59 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %60 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"* %59) #3
  %61 = sub i64 0, %60
  %62 = add i64 %58, %61
  %63 = sub i64 %58, %60
  %64 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %65 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %64, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %64, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %70 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratormRKb(%"class.std::vector.23"* %69, i64* %66, i32 %68, i64 %62, i8* dereferenceable(1) %9)
  %71 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = extractvalue { i64*, i32 } %70, 0
  store i64* %73, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = extractvalue { i64*, i32 } %70, 1
  store i32 %75, i32* %74, align 8
  store i32 -300253708, i32* %20
  br label %77

; <label>:76:                                     ; preds = %21
  ret void

; <label>:77:                                     ; preds = %50, %29, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.18"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.700
  %9 = load i32, i32* @y.701
  %10 = sub i32 %8, 1229188967
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1229188967
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 397973804, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %94
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 397973804, label %22
    i32 2144100688, label %30
    i32 1203022125, label %55
    i32 636714542, label %58
    i32 797077131, label %68
    i32 1393307575, label %75
    i32 -382327794, label %85
    i32 -835528649, label %86
    i32 1566756145, label %87
  ]

; <label>:21:                                     ; preds = %19
  br label %94

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 2144100688, i32 1566756145
  store i32 %29, i32* %18
  br label %94

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.18"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %31, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  %34 = load %"class.std::vector.18"*, %"class.std::vector.18"** %31, align 8
  store %"class.std::vector.18"* %34, %"class.std::vector.18"** %4
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %38 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %37) #3
  %39 = icmp ugt i64 %36, %38
  store i1 %39, i1* %3
  %40 = load i32, i32* @x.700
  %41 = load i32, i32* @y.701
  %42 = add i32 %40, 717955956
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 717955956
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1203022125, i32 1566756145
  store i32 %54, i32* %18
  br label %94

; <label>:55:                                     ; preds = %19
  %56 = load volatile i1, i1* %3
  %57 = select i1 %56, i32 636714542, i32 797077131
  store i32 %57, i32* %18
  br label %94

; <label>:58:                                     ; preds = %19
  %59 = load volatile i64*, i64** %5
  %60 = load i64, i64* %59, align 8
  %61 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %62 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %61) #3
  %63 = add i64 %60, 8291218697435960385
  %64 = sub i64 %63, %62
  %65 = sub i64 %64, 8291218697435960385
  %66 = sub i64 %60, %62
  %67 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.18"* %67, i64 %65)
  store i32 -835528649, i32* %18
  br label %94

; <label>:68:                                     ; preds = %19
  %69 = load volatile i64*, i64** %5
  %70 = load i64, i64* %69, align 8
  %71 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %72 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %71) #3
  %73 = icmp ult i64 %70, %72
  %74 = select i1 %73, i32 1393307575, i32 -382327794
  store i32 %74, i32* %18
  br label %94

; <label>:75:                                     ; preds = %19
  %76 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %77 = bitcast %"class.std::vector.18"* %76 to %"struct.std::_Vector_base.19"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = load volatile i64*, i64** %5
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds i32, i32* %80, i64 %82
  %84 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.18"* %84, i32* %83) #3
  store i32 -382327794, i32* %18
  br label %94

; <label>:85:                                     ; preds = %19
  store i32 -835528649, i32* %18
  br label %94

; <label>:86:                                     ; preds = %19
  ret void

; <label>:87:                                     ; preds = %19
  %88 = alloca %"class.std::vector.18"*, align 8
  %89 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %88, align 8
  store i64 %1, i64* %89, align 8
  %90 = load %"class.std::vector.18"*, %"class.std::vector.18"** %88, align 8
  %91 = load i64, i64* %89, align 8
  %92 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %90) #3
  %93 = icmp ugt i64 %91, %92
  store i32 2144100688, i32* %18
  br label %94

; <label>:94:                                     ; preds = %87, %85, %75, %68, %58, %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %15 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.20"* dereferenceable(1) %15)
          to label %16 unwind label %59

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.702
  %18 = load i32, i32* @y.703
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %108

; <label>:30:                                     ; preds = %16, %108
  %31 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.19"* %31) #3
  %32 = load i32, i32* @x.702
  %33 = load i32, i32* @y.703
  %34 = sub i32 %32, -36965013
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -36965013
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %108

; <label>:58:                                     ; preds = %30
  ret void

; <label>:59:                                     ; preds = %1
  %60 = load i32, i32* @x.702
  %61 = load i32, i32* @y.703
  %62 = add i32 %60, -1376914023
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -1376914023
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %110

; <label>:74:                                     ; preds = %59, %110
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %3, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %4, align 4
  %78 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.19"* %78) #3
  %79 = load i32, i32* @x.702
  %80 = load i32, i32* @y.703
  %81 = add i32 %79, 1617414294
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, 1617414294
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %110

; <label>:105:                                    ; preds = %74
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %107) #10
  unreachable

; <label>:108:                                    ; preds = %30, %16
  %109 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.19"* %109) #3
  br label %30

; <label>:110:                                    ; preds = %74, %59
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %3, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %4, align 4
  %114 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.19"* %114) #3
  br label %74
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.23"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %4 = bitcast %"class.std::vector.23"* %3 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %10 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %14 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %15 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.18"* %9, %"class.std::vector.18"* %13, %"class.std::allocator.15"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.14"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.14"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.708
  %5 = load i32, i32* @y.709
  %6 = sub i32 %4, 1361582124
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1361582124
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 544749848, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 544749848, label %18
    i32 -392564114, label %38
    i32 -1787567613, label %56
    i32 1187168442, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -392564114, i32 1187168442
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %39, align 8
  %40 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.708
  %43 = load i32, i32* @y.709
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1787567613, i32 1187168442
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %58, align 8
  %59 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %60)
  store i32 -392564114, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.15"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.20"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.720
  %5 = load i32, i32* @y.721
  %6 = sub i32 %4, 886352409
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 886352409
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -398011910, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -398011910, label %18
    i32 1928846943, label %38
    i32 -945283320, label %57
    i32 405305822, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1928846943, i32 405305822
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %39, align 8
  %40 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %39, align 8
  %41 = bitcast %"class.std::allocator.20"* %40 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %41) #3
  %42 = load i32, i32* @x.720
  %43 = load i32, i32* @y.721
  %44 = sub i32 %42, -584651199
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -584651199
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -945283320, i32 405305822
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %59, align 8
  %60 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %59, align 8
  %61 = bitcast %"class.std::allocator.20"* %60 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %61) #3
  store i32 1928846943, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEEC2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %3 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %3, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %5 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5 to %"class.std::allocator.24"*
  call void @_ZNSaImEC2Ev(%"class.std::allocator.24"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 0
  invoke void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %7)
          to label %8 unwind label %53

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 1
  invoke void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %9)
          to label %10 unwind label %53

; <label>:10:                                     ; preds = %8
  %11 = load i32, i32* @x.726
  %12 = load i32, i32* @y.727
  %13 = add i32 %11, -1026431543
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -1026431543
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %63

; <label>:37:                                     ; preds = %10, %63
  %38 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %38, align 8
  %39 = load i32, i32* @x.726
  %40 = load i32, i32* @y.727
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %63

; <label>:52:                                     ; preds = %37
  ret void

; <label>:53:                                     ; preds = %8, %1
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %3, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %4, align 4
  %57 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5 to %"class.std::allocator.24"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.24"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %3, align 8
  %60 = load i32, i32* %4, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %37, %10
  %64 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %64, align 8
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2Ev(%"class.std::allocator.24"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.24"*, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %2, align 8
  %3 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %2, align 8
  %4 = bitcast %"class.std::allocator.24"* %3 to %"class.__gnu_cxx::new_allocator.25"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.25"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %4, i64* null, i32 0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.24"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.732
  %5 = load i32, i32* @y.733
  %6 = sub i32 %4, 1187801870
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1187801870
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -690134922, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -690134922, label %18
    i32 -1694691052, label %26
    i32 579452421, label %45
    i32 -1316164287, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1694691052, i32 -1316164287
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.24"*, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %27, align 8
  %28 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %27, align 8
  %29 = bitcast %"class.std::allocator.24"* %28 to %"class.__gnu_cxx::new_allocator.25"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.25"* %29) #3
  %30 = load i32, i32* @x.732
  %31 = load i32, i32* @y.733
  %32 = add i32 %30, 245456197
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 245456197
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 579452421, i32 -1316164287
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.24"*, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %47, align 8
  %48 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %47, align 8
  %49 = bitcast %"class.std::allocator.24"* %48 to %"class.__gnu_cxx::new_allocator.25"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.25"* %49) #3
  store i32 -1694691052, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.25"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.734
  %5 = load i32, i32* @y.735
  %6 = add i32 %4, -34664333
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -34664333
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1129958173, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1129958173, label %18
    i32 722603645, label %26
    i32 22495218, label %55
    i32 575726730, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 722603645, i32 575726730
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %27, align 8
  %29 = load i32, i32* @x.734
  %30 = load i32, i32* @y.735
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 22495218, i32 575726730
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %57, align 8
  store i32 722603645, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator_base"* %7 to %"struct.std::iterator"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 0
  %10 = load i64*, i64** %5, align 8
  store i64* %10, i64** %9, align 8
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 1
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.25"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.740
  %6 = load i32, i32* @y.741
  %7 = sub i32 %5, -815091620
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -815091620
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -401775959, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %149
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -401775959, label %19
    i32 -173200796, label %27
    i32 1275661194, label %58
    i32 690468484, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %149

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -173200796, i32 690468484
  store i32 %26, i32* %15
  br label %149

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %28, align 8
  %29 = load %"class.std::vector.13"*, %"class.std::vector.13"** %28, align 8
  %30 = bitcast %"class.std::vector.13"* %29 to %"struct.std::_Vector_base.14"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %34 = bitcast %"class.std::vector.13"* %29 to %"struct.std::_Vector_base.14"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::vector.18"*, %"class.std::vector.18"** %36, align 8
  %38 = ptrtoint %"class.std::vector.18"* %33 to i64
  %39 = ptrtoint %"class.std::vector.18"* %37 to i64
  %40 = sub i64 0, %39
  %41 = add i64 %38, %40
  %42 = sub i64 %38, %39
  %43 = sdiv exact i64 %41, 24
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.740
  %45 = load i32, i32* @y.741
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1275661194, i32 690468484
  store i32 %57, i32* %15
  br label %149

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %61, align 8
  %62 = load %"class.std::vector.13"*, %"class.std::vector.13"** %61, align 8
  %63 = bitcast %"class.std::vector.13"* %62 to %"struct.std::_Vector_base.14"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"class.std::vector.18"*, %"class.std::vector.18"** %65, align 8
  %67 = bitcast %"class.std::vector.13"* %62 to %"struct.std::_Vector_base.14"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %68, i32 0, i32 0
  %70 = load %"class.std::vector.18"*, %"class.std::vector.18"** %69, align 8
  %71 = ptrtoint %"class.std::vector.18"* %66 to i64
  %72 = ptrtoint %"class.std::vector.18"* %70 to i64
  %73 = sub i64 0, %71
  %74 = add i64 0, %73
  %75 = sub i64 0, %71
  %76 = add i64 %74, 3997243120867280623
  %77 = add i64 %76, %72
  %78 = sub i64 %77, 3997243120867280623
  %79 = add i64 %74, %72
  %80 = sub i64 %71, 5102121926706023032
  %81 = sub i64 %80, %72
  %82 = add i64 %81, 5102121926706023032
  %83 = sub i64 %71, %72
  %84 = mul i64 %82, %72
  %85 = sub i64 0, %71
  %86 = add i64 0, %85
  %87 = sub i64 0, %71
  %88 = sub i64 0, %72
  %89 = sub i64 %86, %88
  %90 = add i64 %86, %72
  %91 = sub i64 %71, 8215756109619824817
  %92 = sub i64 %91, %72
  %93 = add i64 %92, 8215756109619824817
  %94 = sub i64 %71, %72
  %95 = mul i64 %93, %72
  %96 = shl i64 %71, %72
  %97 = sub i64 0, %71
  %98 = add i64 0, %97
  %99 = sub i64 0, %71
  %100 = sub i64 %98, -5178234850016256766
  %101 = add i64 %100, %72
  %102 = add i64 %101, -5178234850016256766
  %103 = add i64 %98, %72
  %104 = shl i64 %71, %72
  %105 = sub i64 0, -2760580925445900124
  %106 = sub i64 %105, %71
  %107 = add i64 %106, -2760580925445900124
  %108 = sub i64 0, %71
  %109 = sub i64 0, %72
  %110 = sub i64 %107, %109
  %111 = add i64 %107, %72
  %112 = shl i64 %71, %72
  %113 = sub i64 0, %72
  %114 = add i64 %71, %113
  %115 = sub i64 %71, %72
  %116 = add i64 %114, -2786983247516684285
  %117 = sub i64 %116, 24
  %118 = sub i64 %117, -2786983247516684285
  %119 = sub i64 %114, 24
  %120 = mul i64 %118, 24
  %121 = add i64 %114, -6377390676461516579
  %122 = sub i64 %121, 24
  %123 = sub i64 %122, -6377390676461516579
  %124 = sub i64 %114, 24
  %125 = mul i64 %123, 24
  %126 = sub i64 0, %114
  %127 = add i64 0, %126
  %128 = sub i64 0, %114
  %129 = add i64 %127, 3786700178997729741
  %130 = add i64 %129, 24
  %131 = sub i64 %130, 3786700178997729741
  %132 = add i64 %127, 24
  %133 = shl i64 %114, 24
  %134 = add i64 0, -7456218172867621205
  %135 = sub i64 %134, %114
  %136 = sub i64 %135, -7456218172867621205
  %137 = sub i64 0, %114
  %138 = add i64 %136, -2723942085288018392
  %139 = add i64 %138, 24
  %140 = sub i64 %139, -2723942085288018392
  %141 = add i64 %136, 24
  %142 = add i64 %114, 6790648791689946922
  %143 = sub i64 %142, 24
  %144 = sub i64 %143, 6790648791689946922
  %145 = sub i64 %114, 24
  %146 = mul i64 %144, 24
  %147 = shl i64 %114, 24
  %148 = sdiv exact i64 %114, 24
  store i32 -173200796, i32* %15
  br label %149

; <label>:149:                                    ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.13"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca %"class.std::vector.18"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %398

; <label>:14:                                     ; preds = %2
  %15 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %17, align 8
  %19 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load %"class.std::vector.18"*, %"class.std::vector.18"** %21, align 8
  %23 = ptrtoint %"class.std::vector.18"* %18 to i64
  %24 = ptrtoint %"class.std::vector.18"* %22 to i64
  %25 = sub i64 0, %24
  %26 = add i64 %23, %25
  %27 = sub i64 %23, %24
  %28 = sdiv exact i64 %26, 24
  %29 = load i64, i64* %4, align 8
  %30 = icmp uge i64 %28, %29
  br i1 %30, label %31, label %43

; <label>:31:                                     ; preds = %14
  %32 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %36 = load i64, i64* %4, align 8
  %37 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %38 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %37) #3
  %39 = call %"class.std::vector.18"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.18"* %35, i64 %36, %"class.std::allocator.15"* dereferenceable(1) %38)
  %40 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41, i32 0, i32 1
  store %"class.std::vector.18"* %39, %"class.std::vector.18"** %42, align 8
  br label %367

; <label>:43:                                     ; preds = %14
  %44 = load i32, i32* @x.742
  %45 = load i32, i32* @y.743
  %46 = sub i32 %44, 705567660
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 705567660
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %461

; <label>:70:                                     ; preds = %43, %461
  %71 = load i64, i64* %4, align 8
  %72 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"* %11, i64 %71, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %72, i64* %5, align 8
  %73 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %11) #3
  store i64 %73, i64* %6, align 8
  %74 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %75 = load i64, i64* %5, align 8
  %76 = call %"class.std::vector.18"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %74, i64 %75)
  store %"class.std::vector.18"* %76, %"class.std::vector.18"** %7, align 8
  %77 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %77, %"class.std::vector.18"** %8, align 8
  %78 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load %"class.std::vector.18"*, %"class.std::vector.18"** %80, align 8
  %82 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %83, i32 0, i32 1
  %85 = load %"class.std::vector.18"*, %"class.std::vector.18"** %84, align 8
  %86 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %87 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %88 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %87) #3
  %89 = load i32, i32* @x.742
  %90 = load i32, i32* @y.743
  %91 = add i32 %89, 1109250867
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, 1109250867
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %461

; <label>:115:                                    ; preds = %70
  %116 = invoke %"class.std::vector.18"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.18"* %81, %"class.std::vector.18"* %85, %"class.std::vector.18"* %86, %"class.std::allocator.15"* dereferenceable(1) %88)
          to label %117 unwind label %177

; <label>:117:                                    ; preds = %115
  %118 = load i32, i32* @x.742
  %119 = load i32, i32* @y.743
  %120 = add i32 %118, 1633060117
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 1633060117
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %480

; <label>:144:                                    ; preds = %117, %480
  store %"class.std::vector.18"* %116, %"class.std::vector.18"** %8, align 8
  %145 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %146 = load i64, i64* %4, align 8
  %147 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %148 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %147) #3
  %149 = load i32, i32* @x.742
  %150 = load i32, i32* @y.743
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %480

; <label>:174:                                    ; preds = %144
  %175 = invoke %"class.std::vector.18"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.18"* %145, i64 %146, %"class.std::allocator.15"* dereferenceable(1) %148)
          to label %176 unwind label %177

; <label>:176:                                    ; preds = %174
  store %"class.std::vector.18"* %175, %"class.std::vector.18"** %8, align 8
  br label %322

; <label>:177:                                    ; preds = %174, %115
  %178 = landingpad { i8*, i32 }
          catch i8* null
  %179 = extractvalue { i8*, i32 } %178, 0
  store i8* %179, i8** %9, align 8
  %180 = extractvalue { i8*, i32 } %178, 1
  store i32 %180, i32* %10, align 4
  br label %181

; <label>:181:                                    ; preds = %177
  %182 = load i32, i32* @x.742
  %183 = load i32, i32* @y.743
  %184 = sub i32 %182, 1063823158
  %185 = sub i32 %184, 1
  %186 = add i32 %185, 1063823158
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %485

; <label>:196:                                    ; preds = %181, %485
  %197 = load i8*, i8** %9, align 8
  %198 = call i8* @__cxa_begin_catch(i8* %197) #3
  %199 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %200 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %201 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %202 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %201) #3
  %203 = load i32, i32* @x.742
  %204 = load i32, i32* @y.743
  %205 = add i32 %203, -171666075
  %206 = sub i32 %205, 1
  %207 = sub i32 %206, -171666075
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 false, true
  %216 = and i1 %213, false
  %217 = and i1 %211, %215
  %218 = and i1 %214, false
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 false, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %485

; <label>:229:                                    ; preds = %196
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.18"* %199, %"class.std::vector.18"* %200, %"class.std::allocator.15"* dereferenceable(1) %202)
          to label %230 unwind label %317

; <label>:230:                                    ; preds = %229
  %231 = load i32, i32* @x.742
  %232 = load i32, i32* @y.743
  %233 = sub i32 0, 1
  %234 = add i32 %231, %233
  %235 = sub i32 %231, 1
  %236 = mul i32 %231, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %232, 10
  %240 = and i1 %238, %239
  %241 = xor i1 %238, %239
  %242 = or i1 %240, %241
  %243 = or i1 %238, %239
  br i1 %242, label %244, label %492

; <label>:244:                                    ; preds = %230, %492
  %245 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %246 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %247 = load i64, i64* %5, align 8
  %248 = load i32, i32* @x.742
  %249 = load i32, i32* @y.743
  %250 = add i32 %248, 1629855563
  %251 = sub i32 %250, 1
  %252 = sub i32 %251, 1629855563
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = xor i1 %256, true
  %259 = xor i1 %257, true
  %260 = xor i1 false, true
  %261 = and i1 %258, false
  %262 = and i1 %256, %260
  %263 = and i1 %259, false
  %264 = and i1 %257, %260
  %265 = or i1 %261, %262
  %266 = or i1 %263, %264
  %267 = xor i1 %265, %266
  %268 = or i1 %258, %259
  %269 = xor i1 %268, true
  %270 = or i1 false, %260
  %271 = and i1 %269, %270
  %272 = or i1 %267, %271
  %273 = or i1 %256, %257
  br i1 %272, label %274, label %492

; <label>:274:                                    ; preds = %244
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.14"* %245, %"class.std::vector.18"* %246, i64 %247)
          to label %275 unwind label %317

; <label>:275:                                    ; preds = %274
  %276 = load i32, i32* @x.742
  %277 = load i32, i32* @y.743
  %278 = sub i32 0, 1
  %279 = add i32 %276, %278
  %280 = sub i32 %276, 1
  %281 = mul i32 %276, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %277, 10
  %285 = and i1 %283, %284
  %286 = xor i1 %283, %284
  %287 = or i1 %285, %286
  %288 = or i1 %283, %284
  br i1 %287, label %289, label %496

; <label>:289:                                    ; preds = %275, %496
  %290 = load i32, i32* @x.742
  %291 = load i32, i32* @y.743
  %292 = sub i32 %290, 1468533418
  %293 = sub i32 %292, 1
  %294 = add i32 %293, 1468533418
  %295 = sub i32 %290, 1
  %296 = mul i32 %290, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %291, 10
  %300 = xor i1 %298, true
  %301 = xor i1 %299, true
  %302 = xor i1 true, true
  %303 = and i1 %300, true
  %304 = and i1 %298, %302
  %305 = and i1 %301, true
  %306 = and i1 %299, %302
  %307 = or i1 %303, %304
  %308 = or i1 %305, %306
  %309 = xor i1 %307, %308
  %310 = or i1 %300, %301
  %311 = xor i1 %310, true
  %312 = or i1 true, %302
  %313 = and i1 %311, %312
  %314 = or i1 %309, %313
  %315 = or i1 %298, %299
  br i1 %314, label %316, label %496

; <label>:316:                                    ; preds = %289
  invoke void @__cxa_rethrow() #13
          to label %460 unwind label %317

; <label>:317:                                    ; preds = %316, %274, %229
  %318 = landingpad { i8*, i32 }
          cleanup
  %319 = extractvalue { i8*, i32 } %318, 0
  store i8* %319, i8** %9, align 8
  %320 = extractvalue { i8*, i32 } %318, 1
  store i32 %320, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %321 unwind label %457

; <label>:321:                                    ; preds = %317
  br label %452

; <label>:322:                                    ; preds = %176
  %323 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %323, i32 0, i32 0
  %325 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %324, i32 0, i32 0
  %326 = load %"class.std::vector.18"*, %"class.std::vector.18"** %325, align 8
  %327 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %328 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %327, i32 0, i32 0
  %329 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %328, i32 0, i32 1
  %330 = load %"class.std::vector.18"*, %"class.std::vector.18"** %329, align 8
  %331 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %332 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %331) #3
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.18"* %326, %"class.std::vector.18"* %330, %"class.std::allocator.15"* dereferenceable(1) %332)
  %333 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %334 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %335 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %334, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %335, i32 0, i32 0
  %337 = load %"class.std::vector.18"*, %"class.std::vector.18"** %336, align 8
  %338 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %338, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %339, i32 0, i32 2
  %341 = load %"class.std::vector.18"*, %"class.std::vector.18"** %340, align 8
  %342 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %343 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %342, i32 0, i32 0
  %344 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %343, i32 0, i32 0
  %345 = load %"class.std::vector.18"*, %"class.std::vector.18"** %344, align 8
  %346 = ptrtoint %"class.std::vector.18"* %341 to i64
  %347 = ptrtoint %"class.std::vector.18"* %345 to i64
  %348 = sub i64 %346, 8298981227291297693
  %349 = sub i64 %348, %347
  %350 = add i64 %349, 8298981227291297693
  %351 = sub i64 %346, %347
  %352 = sdiv exact i64 %350, 24
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.14"* %333, %"class.std::vector.18"* %337, i64 %352)
  %353 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %354 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %355 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %354, i32 0, i32 0
  %356 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %355, i32 0, i32 0
  store %"class.std::vector.18"* %353, %"class.std::vector.18"** %356, align 8
  %357 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %358 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %359, i32 0, i32 1
  store %"class.std::vector.18"* %357, %"class.std::vector.18"** %360, align 8
  %361 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %362 = load i64, i64* %5, align 8
  %363 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %361, i64 %362
  %364 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %365 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %364, i32 0, i32 0
  %366 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %365, i32 0, i32 2
  store %"class.std::vector.18"* %363, %"class.std::vector.18"** %366, align 8
  br label %367

; <label>:367:                                    ; preds = %322, %31
  %368 = load i32, i32* @x.742
  %369 = load i32, i32* @y.743
  %370 = sub i32 %368, 1594916221
  %371 = sub i32 %370, 1
  %372 = add i32 %371, 1594916221
  %373 = sub i32 %368, 1
  %374 = mul i32 %368, %372
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %369, 10
  %378 = and i1 %376, %377
  %379 = xor i1 %376, %377
  %380 = or i1 %378, %379
  %381 = or i1 %376, %377
  br i1 %380, label %382, label %497

; <label>:382:                                    ; preds = %367, %497
  %383 = load i32, i32* @x.742
  %384 = load i32, i32* @y.743
  %385 = add i32 %383, 549568980
  %386 = sub i32 %385, 1
  %387 = sub i32 %386, 549568980
  %388 = sub i32 %383, 1
  %389 = mul i32 %383, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %384, 10
  %393 = and i1 %391, %392
  %394 = xor i1 %391, %392
  %395 = or i1 %393, %394
  %396 = or i1 %391, %392
  br i1 %395, label %397, label %497

; <label>:397:                                    ; preds = %382
  br label %398

; <label>:398:                                    ; preds = %397, %2
  %399 = load i32, i32* @x.742
  %400 = load i32, i32* @y.743
  %401 = sub i32 %399, -497957512
  %402 = sub i32 %401, 1
  %403 = add i32 %402, -497957512
  %404 = sub i32 %399, 1
  %405 = mul i32 %399, %403
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %400, 10
  %409 = xor i1 %407, true
  %410 = xor i1 %408, true
  %411 = xor i1 false, true
  %412 = and i1 %409, false
  %413 = and i1 %407, %411
  %414 = and i1 %410, false
  %415 = and i1 %408, %411
  %416 = or i1 %412, %413
  %417 = or i1 %414, %415
  %418 = xor i1 %416, %417
  %419 = or i1 %409, %410
  %420 = xor i1 %419, true
  %421 = or i1 false, %411
  %422 = and i1 %420, %421
  %423 = or i1 %418, %422
  %424 = or i1 %407, %408
  br i1 %423, label %425, label %498

; <label>:425:                                    ; preds = %398, %498
  %426 = load i32, i32* @x.742
  %427 = load i32, i32* @y.743
  %428 = sub i32 0, 1
  %429 = add i32 %426, %428
  %430 = sub i32 %426, 1
  %431 = mul i32 %426, %429
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %427, 10
  %435 = xor i1 %433, true
  %436 = xor i1 %434, true
  %437 = xor i1 true, true
  %438 = and i1 %435, true
  %439 = and i1 %433, %437
  %440 = and i1 %436, true
  %441 = and i1 %434, %437
  %442 = or i1 %438, %439
  %443 = or i1 %440, %441
  %444 = xor i1 %442, %443
  %445 = or i1 %435, %436
  %446 = xor i1 %445, true
  %447 = or i1 true, %437
  %448 = and i1 %446, %447
  %449 = or i1 %444, %448
  %450 = or i1 %433, %434
  br i1 %449, label %451, label %498

; <label>:451:                                    ; preds = %425
  ret void

; <label>:452:                                    ; preds = %321
  %453 = load i8*, i8** %9, align 8
  %454 = load i32, i32* %10, align 4
  %455 = insertvalue { i8*, i32 } undef, i8* %453, 0
  %456 = insertvalue { i8*, i32 } %455, i32 %454, 1
  resume { i8*, i32 } %456

; <label>:457:                                    ; preds = %317
  %458 = landingpad { i8*, i32 }
          catch i8* null
  %459 = extractvalue { i8*, i32 } %458, 0
  call void @__clang_call_terminate(i8* %459) #10
  unreachable

; <label>:460:                                    ; preds = %316
  unreachable

; <label>:461:                                    ; preds = %70, %43
  %462 = load i64, i64* %4, align 8
  %463 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"* %11, i64 %462, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %463, i64* %5, align 8
  %464 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %11) #3
  store i64 %464, i64* %6, align 8
  %465 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %466 = load i64, i64* %5, align 8
  %467 = call %"class.std::vector.18"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %465, i64 %466)
  store %"class.std::vector.18"* %467, %"class.std::vector.18"** %7, align 8
  %468 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %468, %"class.std::vector.18"** %8, align 8
  %469 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %470 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %469, i32 0, i32 0
  %471 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %470, i32 0, i32 0
  %472 = load %"class.std::vector.18"*, %"class.std::vector.18"** %471, align 8
  %473 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %474 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %473, i32 0, i32 0
  %475 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %474, i32 0, i32 1
  %476 = load %"class.std::vector.18"*, %"class.std::vector.18"** %475, align 8
  %477 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %478 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %479 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %478) #3
  br label %70

; <label>:480:                                    ; preds = %144, %117
  store %"class.std::vector.18"* %116, %"class.std::vector.18"** %8, align 8
  %481 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %482 = load i64, i64* %4, align 8
  %483 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %484 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %483) #3
  br label %144

; <label>:485:                                    ; preds = %196, %181
  %486 = load i8*, i8** %9, align 8
  %487 = call i8* @__cxa_begin_catch(i8* %486) #3
  %488 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %489 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %490 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %491 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %490) #3
  br label %196

; <label>:492:                                    ; preds = %244, %230
  %493 = bitcast %"class.std::vector.13"* %11 to %"struct.std::_Vector_base.14"*
  %494 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %495 = load i64, i64* %5, align 8
  br label %244

; <label>:496:                                    ; preds = %289, %275
  br label %289

; <label>:497:                                    ; preds = %382, %367
  br label %382

; <label>:498:                                    ; preds = %425, %398
  br label %425
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.13"*, %"class.std::vector.18"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %7 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  %11 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %12 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.18"* %6, %"class.std::vector.18"* %10, %"class.std::allocator.15"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %15 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.18"* %14, %"class.std::vector.18"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.18"*, i64, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %6, align 8
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.18"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.18"* %7, i64 %8)
  ret %"class.std::vector.18"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.748
  %6 = load i32, i32* @y.749
  %7 = add i32 %5, 1663455244
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1663455244
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1709007912, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1709007912, label %19
    i32 -474352243, label %27
    i32 -1260689333, label %58
    i32 -293493763, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -474352243, i32 -293493763
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %28, align 8
  %29 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %30 to %"class.std::allocator.15"*
  store %"class.std::allocator.15"* %31, %"class.std::allocator.15"** %2
  %32 = load i32, i32* @x.748
  %33 = load i32, i32* @y.749
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1260689333, i32 -293493763
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.15"*, %"class.std::allocator.15"** %2
  ret %"class.std::allocator.15"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %61, align 8
  %62 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %63 to %"class.std::allocator.15"*
  store i32 -474352243, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca %"class.std::vector.13"*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i8**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.750
  %15 = load i32, i32* @y.751
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 -609353177, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %219
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -609353177, label %28
    i32 1717269735, label %48
    i32 1348776471, label %83
    i32 -1365712554, label %86
    i32 -949721571, label %89
    i32 -332277055, label %110
    i32 -1677947091, label %117
    i32 -1358223514, label %132
    i32 563337164, label %150
    i32 289042339, label %152
    i32 1961604726, label %167
    i32 -1342904674, label %185
    i32 950482638, label %187
    i32 281592042, label %189
    i32 -662083861, label %213
    i32 605079707, label %216
  ]

; <label>:27:                                     ; preds = %25
  br label %219

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 1717269735, i32 281592042
  store i32 %47, i32* %23
  br label %219

; <label>:48:                                     ; preds = %25
  %49 = alloca %"class.std::vector.13"*, align 8
  %50 = alloca i64, align 8
  store i64* %50, i64** %11
  %51 = alloca i8*, align 8
  store i8** %51, i8*** %10
  %52 = alloca i64, align 8
  store i64* %52, i64** %9
  %53 = alloca i64, align 8
  store i64* %53, i64** %8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %49, align 8
  %54 = load volatile i64*, i64** %11
  store i64 %1, i64* %54, align 8
  %55 = load volatile i8**, i8*** %10
  store i8* %2, i8** %55, align 8
  %56 = load %"class.std::vector.13"*, %"class.std::vector.13"** %49, align 8
  store %"class.std::vector.13"* %56, %"class.std::vector.13"** %7
  %57 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %58 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %57) #3
  %59 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %60 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %59) #3
  %61 = add i64 %58, -194503527778091158
  %62 = sub i64 %61, %60
  %63 = sub i64 %62, -194503527778091158
  %64 = sub i64 %58, %60
  %65 = load volatile i64*, i64** %11
  %66 = load i64, i64* %65, align 8
  %67 = icmp ult i64 %63, %66
  store i1 %67, i1* %6
  %68 = load i32, i32* @x.750
  %69 = load i32, i32* @y.751
  %70 = sub i32 %68, -1873754191
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -1873754191
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 1348776471, i32 281592042
  store i32 %82, i32* %23
  br label %219

; <label>:83:                                     ; preds = %25
  %84 = load volatile i1, i1* %6
  %85 = select i1 %84, i32 -1365712554, i32 -949721571
  store i32 %85, i32* %23
  br label %219

; <label>:86:                                     ; preds = %25
  %87 = load volatile i8**, i8*** %10
  %88 = load i8*, i8** %87, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %88) #13
  unreachable

; <label>:89:                                     ; preds = %25
  %90 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %91 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %90) #3
  %92 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %93 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %92) #3
  %94 = load volatile i64*, i64** %8
  store i64 %93, i64* %94, align 8
  %95 = load volatile i64*, i64** %11
  %96 = load volatile i64*, i64** %8
  %97 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %96, i64* dereferenceable(8) %95)
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %91, 6702467637045207564
  %100 = add i64 %99, %98
  %101 = sub i64 %100, 6702467637045207564
  %102 = add i64 %91, %98
  %103 = load volatile i64*, i64** %9
  store i64 %101, i64* %103, align 8
  %104 = load volatile i64*, i64** %9
  %105 = load i64, i64* %104, align 8
  %106 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %107 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %106) #3
  %108 = icmp ult i64 %105, %107
  %109 = select i1 %108, i32 -1677947091, i32 -332277055
  store i32 %109, i32* %23
  br label %219

; <label>:110:                                    ; preds = %25
  %111 = load volatile i64*, i64** %9
  %112 = load i64, i64* %111, align 8
  %113 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %114 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %113) #3
  %115 = icmp ugt i64 %112, %114
  %116 = select i1 %115, i32 -1677947091, i32 289042339
  store i32 %116, i32* %23
  br label %219

; <label>:117:                                    ; preds = %25
  %118 = load i32, i32* @x.750
  %119 = load i32, i32* @y.751
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 -1358223514, i32 -662083861
  store i32 %131, i32* %23
  br label %219

; <label>:132:                                    ; preds = %25
  %133 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %134 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %133) #3
  store i64 %134, i64* %5
  %135 = load i32, i32* @x.750
  %136 = load i32, i32* @y.751
  %137 = add i32 %135, -1851389811
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -1851389811
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 563337164, i32 -662083861
  store i32 %149, i32* %23
  br label %219

; <label>:150:                                    ; preds = %25
  store i32 950482638, i32* %23
  %151 = load volatile i64, i64* %5
  store i64 %151, i64* %24
  br label %219

; <label>:152:                                    ; preds = %25
  %153 = load i32, i32* @x.750
  %154 = load i32, i32* @y.751
  %155 = sub i32 0, 1
  %156 = add i32 %153, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 %153, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %154, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  %166 = select i1 %164, i32 1961604726, i32 605079707
  store i32 %166, i32* %23
  br label %219

; <label>:167:                                    ; preds = %25
  %168 = load volatile i64*, i64** %9
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %4
  %170 = load i32, i32* @x.750
  %171 = load i32, i32* @y.751
  %172 = sub i32 %170, -1385251285
  %173 = sub i32 %172, 1
  %174 = add i32 %173, -1385251285
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  %184 = select i1 %182, i32 -1342904674, i32 605079707
  store i32 %184, i32* %23
  br label %219

; <label>:185:                                    ; preds = %25
  store i32 950482638, i32* %23
  %186 = load volatile i64, i64* %4
  store i64 %186, i64* %24
  br label %219

; <label>:187:                                    ; preds = %25
  %188 = load i64, i64* %24
  ret i64 %188

; <label>:189:                                    ; preds = %25
  %190 = alloca %"class.std::vector.13"*, align 8
  %191 = alloca i64, align 8
  %192 = alloca i8*, align 8
  %193 = alloca i64, align 8
  %194 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %190, align 8
  store i64 %1, i64* %191, align 8
  store i8* %2, i8** %192, align 8
  %195 = load %"class.std::vector.13"*, %"class.std::vector.13"** %190, align 8
  %196 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %195) #3
  %197 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.13"* %195) #3
  %198 = sub i64 0, -7015179523119565504
  %199 = sub i64 %198, %196
  %200 = add i64 %199, -7015179523119565504
  %201 = sub i64 0, %196
  %202 = add i64 %200, -7803245604854274159
  %203 = add i64 %202, %197
  %204 = sub i64 %203, -7803245604854274159
  %205 = add i64 %200, %197
  %206 = shl i64 %196, %197
  %207 = add i64 %196, -1322341245110517069
  %208 = sub i64 %207, %197
  %209 = sub i64 %208, -1322341245110517069
  %210 = sub i64 %196, %197
  %211 = load i64, i64* %191, align 8
  %212 = icmp ult i64 %209, %211
  store i32 1717269735, i32* %23
  br label %219

; <label>:213:                                    ; preds = %25
  %214 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %7
  %215 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %214) #3
  store i32 -1358223514, i32* %23
  br label %219

; <label>:216:                                    ; preds = %25
  %217 = load volatile i64*, i64** %9
  %218 = load i64, i64* %217, align 8
  store i32 1961604726, i32* %23
  br label %219

; <label>:219:                                    ; preds = %216, %213, %189, %185, %167, %152, %150, %132, %117, %110, %89, %83, %48, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.14"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.14"*
  %5 = alloca %"struct.std::_Vector_base.14"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5, align 8
  store %"struct.std::_Vector_base.14"* %7, %"struct.std::_Vector_base.14"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1942377334, i32* %9
  %10 = alloca %"class.std::vector.18"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1942377334, label %14
    i32 -1093358749, label %18
    i32 -1814859275, label %24
    i32 1436290731, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1093358749, i32 -1814859275
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20 to %"class.std::allocator.15"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.18"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.15"* dereferenceable(1) %21, i64 %22)
  store i32 1436290731, i32* %9
  store %"class.std::vector.18"* %23, %"class.std::vector.18"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1436290731, i32* %9
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::vector.18"*, %"class.std::vector.18"** %10
  ret %"class.std::vector.18"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = alloca %"class.std::move_iterator.33", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %12 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.18"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  store %"class.std::vector.18"* %12, %"class.std::vector.18"** %13, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %15 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.18"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  store %"class.std::vector.18"* %15, %"class.std::vector.18"** %16, align 8
  %17 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %18 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.18"*, %"class.std::vector.18"** %21, align 8
  %23 = call %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.18"* %20, %"class.std::vector.18"* %22, %"class.std::vector.18"* %17, %"class.std::allocator.15"* dereferenceable(1) %18)
  ret %"class.std::vector.18"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.756
  %7 = load i32, i32* @y.757
  %8 = sub i32 %6, 1559851222
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1559851222
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1745615369, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1745615369, label %20
    i32 -295023385, label %40
    i32 637756433, label %60
    i32 -1016605894, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -295023385, i32 -1016605894
  store i32 %39, i32* %16
  br label %67

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.18"*, align 8
  %42 = alloca %"class.std::vector.18"*, align 8
  %43 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %41, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %42, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %43, align 8
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %41, align 8
  %45 = load %"class.std::vector.18"*, %"class.std::vector.18"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.18"* %44, %"class.std::vector.18"* %45)
  %46 = load i32, i32* @x.756
  %47 = load i32, i32* @y.757
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 637756433, i32 -1016605894
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.std::vector.18"*, align 8
  %63 = alloca %"class.std::vector.18"*, align 8
  %64 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %62, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %63, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %64, align 8
  %65 = load %"class.std::vector.18"*, %"class.std::vector.18"** %62, align 8
  %66 = load %"class.std::vector.18"*, %"class.std::vector.18"** %63, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.18"* %65, %"class.std::vector.18"* %66)
  store i32 -295023385, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.14"*, %"class.std::vector.18"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca %"struct.std::_Vector_base.14"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %6, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.std::_Vector_base.14"* %9, %"struct.std::_Vector_base.14"** %5
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %10, %"class.std::vector.18"** %4
  %11 = alloca i32
  store i32 1537820732, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %119
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1537820732, label %15
    i32 700311121, label %19
    i32 -1833354111, label %47
    i32 1602102284, label %67
    i32 769282702, label %68
    i32 296795690, label %96
    i32 832318435, label %111
    i32 -1825543856, label %112
    i32 -282753598, label %118
  ]

; <label>:14:                                     ; preds = %12
  br label %119

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %17 = icmp ne %"class.std::vector.18"* %16, null
  %18 = select i1 %17, i32 700311121, i32 769282702
  store i32 %18, i32* %11
  br label %119

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.758
  %21 = load i32, i32* @y.759
  %22 = sub i32 %20, 1189020874
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1189020874
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1833354111, i32 -1825543856
  store i32 %46, i32* %11
  br label %119

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %49 to %"class.std::allocator.15"*
  %51 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.15"* dereferenceable(1) %50, %"class.std::vector.18"* %51, i64 %52)
  %53 = load i32, i32* @x.758
  %54 = load i32, i32* @y.759
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1602102284, i32 -1825543856
  store i32 %66, i32* %11
  br label %119

; <label>:67:                                     ; preds = %12
  store i32 769282702, i32* %11
  br label %119

; <label>:68:                                     ; preds = %12
  %69 = load i32, i32* @x.758
  %70 = load i32, i32* @y.759
  %71 = sub i32 %69, -115202079
  %72 = sub i32 %71, 1
  %73 = add i32 %72, -115202079
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 296795690, i32 -282753598
  store i32 %95, i32* %11
  br label %119

; <label>:96:                                     ; preds = %12
  %97 = load i32, i32* @x.758
  %98 = load i32, i32* @y.759
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 832318435, i32 -282753598
  store i32 %110, i32* %11
  br label %119

; <label>:111:                                    ; preds = %12
  ret void

; <label>:112:                                    ; preds = %12
  %113 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %114 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %113, i32 0, i32 0
  %115 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %114 to %"class.std::allocator.15"*
  %116 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %117 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.15"* dereferenceable(1) %115, %"class.std::vector.18"* %116, i64 %117)
  store i32 -1833354111, i32* %11
  br label %119

; <label>:118:                                    ; preds = %12
  store i32 296795690, i32* %11
  br label %119

; <label>:119:                                    ; preds = %118, %112, %96, %68, %67, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.18"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.18"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.18"* %6, i64 %7)
  ret %"class.std::vector.18"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.18"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %8, %"class.std::vector.18"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %16, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %63

; <label>:12:                                     ; preds = %9
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %14 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.18"* dereferenceable(24) %13) #3
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.18"* %14)
          to label %15 unwind label %24

; <label>:15:                                     ; preds = %12
  br label %16

; <label>:16:                                     ; preds = %15
  %17 = load i64, i64* %4, align 8
  %18 = add i64 %17, 6556300811275819544
  %19 = add i64 %18, -1
  %20 = sub i64 %19, 6556300811275819544
  %21 = add i64 %17, -1
  store i64 %20, i64* %4, align 8
  %22 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %23 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %22, i32 1
  store %"class.std::vector.18"* %23, %"class.std::vector.18"** %5, align 8
  br label %9

; <label>:24:                                     ; preds = %12
  %25 = load i32, i32* @x.762
  %26 = load i32, i32* @y.763
  %27 = sub i32 %25, -232901556
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -232901556
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %162

; <label>:39:                                     ; preds = %24, %162
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %6, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %7, align 4
  %43 = load i32, i32* @x.762
  %44 = load i32, i32* @y.763
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %162

; <label>:56:                                     ; preds = %39
  br label %57

; <label>:57:                                     ; preds = %56
  %58 = load i8*, i8** %6, align 8
  %59 = call i8* @__cxa_begin_catch(i8* %58) #3
  %60 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %61 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.18"* %60, %"class.std::vector.18"* %61)
          to label %62 unwind label %65

; <label>:62:                                     ; preds = %57
  invoke void @__cxa_rethrow() #13
          to label %161 unwind label %65

; <label>:63:                                     ; preds = %9
  %64 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  ret %"class.std::vector.18"* %64

; <label>:65:                                     ; preds = %62, %57
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %6, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %69 unwind label %117

; <label>:69:                                     ; preds = %65
  %70 = load i32, i32* @x.762
  %71 = load i32, i32* @y.763
  %72 = sub i32 %70, 2094621854
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 2094621854
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %166

; <label>:84:                                     ; preds = %69, %166
  %85 = load i32, i32* @x.762
  %86 = load i32, i32* @y.763
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %166

; <label>:110:                                    ; preds = %84
  br label %112
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:112:                                    ; preds = %110
  %113 = load i8*, i8** %6, align 8
  %114 = load i32, i32* %7, align 4
  %115 = insertvalue { i8*, i32 } undef, i8* %113, 0
  %116 = insertvalue { i8*, i32 } %115, i32 %114, 1
  resume { i8*, i32 } %116

; <label>:117:                                    ; preds = %65
  %118 = load i32, i32* @x.762
  %119 = load i32, i32* @y.763
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %167

; <label>:143:                                    ; preds = %117, %167
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  call void @__clang_call_terminate(i8* %145) #10
  %146 = load i32, i32* @x.762
  %147 = load i32, i32* @y.763
  %148 = sub i32 %146, -2015206196
  %149 = sub i32 %148, 1
  %150 = add i32 %149, -2015206196
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %167

; <label>:160:                                    ; preds = %143
  unreachable

; <label>:161:                                    ; preds = %62
  unreachable

; <label>:162:                                    ; preds = %39, %24
  %163 = landingpad { i8*, i32 }
          catch i8* null
  %164 = extractvalue { i8*, i32 } %163, 0
  store i8* %164, i8** %6, align 8
  %165 = extractvalue { i8*, i32 } %163, 1
  store i32 %165, i32* %7, align 4
  br label %39

; <label>:166:                                    ; preds = %84, %69
  br label %84

; <label>:167:                                    ; preds = %143, %117
  %168 = landingpad { i8*, i32 }
          catch i8* null
  %169 = extractvalue { i8*, i32 } %168, 0
  call void @__clang_call_terminate(i8* %169) #10
  br label %143
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.18"*) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.18"*
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.18"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.18"*
  ret %"class.std::vector.18"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.18"* %5, %"class.std::vector.18"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.18"**
  %5 = alloca %"class.std::vector.18"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.770
  %9 = load i32, i32* @y.771
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1506594992, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %132
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1506594992, label %21
    i32 -1281829155, label %29
    i32 -8635047, label %49
    i32 156856635, label %50
    i32 -1115280750, label %77
    i32 558640852, label %110
    i32 1556996732, label %113
    i32 -1362630230, label %117
    i32 -1661862565, label %122
    i32 1357355052, label %123
    i32 -644424127, label %126
  ]

; <label>:20:                                     ; preds = %18
  br label %132

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1281829155, i32 1357355052
  store i32 %28, i32* %17
  br label %132

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"** %30, %"class.std::vector.18"*** %5
  %31 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"** %31, %"class.std::vector.18"*** %4
  %32 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %32, align 8
  %33 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %33, align 8
  %34 = load i32, i32* @x.770
  %35 = load i32, i32* @y.771
  %36 = add i32 %34, -131959066
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -131959066
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -8635047, i32 1357355052
  store i32 %48, i32* %17
  br label %132

; <label>:49:                                     ; preds = %18
  store i32 156856635, i32* %17
  br label %132

; <label>:50:                                     ; preds = %18
  %51 = load i32, i32* @x.770
  %52 = load i32, i32* @y.771
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1115280750, i32 -644424127
  store i32 %76, i32* %17
  br label %132

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %79 = load %"class.std::vector.18"*, %"class.std::vector.18"** %78, align 8
  %80 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  %81 = load %"class.std::vector.18"*, %"class.std::vector.18"** %80, align 8
  %82 = icmp ne %"class.std::vector.18"* %79, %81
  store i1 %82, i1* %3
  %83 = load i32, i32* @x.770
  %84 = load i32, i32* @y.771
  %85 = add i32 %83, 536641328
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 536641328
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 558640852, i32 -644424127
  store i32 %109, i32* %17
  br label %132

; <label>:110:                                    ; preds = %18
  %111 = load volatile i1, i1* %3
  %112 = select i1 %111, i32 1556996732, i32 -1661862565
  store i32 %112, i32* %17
  br label %132

; <label>:113:                                    ; preds = %18
  %114 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %115 = load %"class.std::vector.18"*, %"class.std::vector.18"** %114, align 8
  %116 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.18"* dereferenceable(24) %115) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.18"* %116)
  store i32 -1362630230, i32* %17
  br label %132

; <label>:117:                                    ; preds = %18
  %118 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %119 = load %"class.std::vector.18"*, %"class.std::vector.18"** %118, align 8
  %120 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %119, i32 1
  %121 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  store %"class.std::vector.18"* %120, %"class.std::vector.18"** %121, align 8
  store i32 156856635, i32* %17
  br label %132

; <label>:122:                                    ; preds = %18
  ret void

; <label>:123:                                    ; preds = %18
  %124 = alloca %"class.std::vector.18"*, align 8
  %125 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %124, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %125, align 8
  store i32 -1281829155, i32* %17
  br label %132

; <label>:126:                                    ; preds = %18
  %127 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %128 = load %"class.std::vector.18"*, %"class.std::vector.18"** %127, align 8
  %129 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  %130 = load %"class.std::vector.18"*, %"class.std::vector.18"** %129, align 8
  %131 = icmp ne %"class.std::vector.18"* %128, %130
  store i32 -1115280750, i32* %17
  br label %132

; <label>:132:                                    ; preds = %126, %123, %117, %113, %110, %77, %50, %49, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.18"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.772
  %5 = load i32, i32* @y.773
  %6 = sub i32 %4, -466533985
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -466533985
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 227905980, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 227905980, label %18
    i32 869474776, label %26
    i32 -1212286602, label %44
    i32 -743335473, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 869474776, i32 -743335473
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %27, align 8
  %28 = load %"class.std::vector.18"*, %"class.std::vector.18"** %27, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.18"* %28) #3
  %29 = load i32, i32* @x.772
  %30 = load i32, i32* @y.773
  %31 = add i32 %29, 1165541401
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1165541401
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1212286602, i32 -743335473
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %46, align 8
  %47 = load %"class.std::vector.18"*, %"class.std::vector.18"** %46, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.18"* %47) #3
  store i32 869474776, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.15"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.15"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.782
  %7 = load i32, i32* @y.783
  %8 = sub i32 %6, -791866965
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -791866965
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -420833785, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -420833785, label %20
    i32 -1894645668, label %28
    i32 1800577495, label %62
    i32 650103021, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1894645668, i32 650103021
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.15"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %29, align 8
  %32 = bitcast %"class.std::allocator.15"* %31 to %"class.__gnu_cxx::new_allocator.16"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %32, i64 %33, i8* null)
  store %"class.std::vector.18"* %34, %"class.std::vector.18"** %3
  %35 = load i32, i32* @x.782
  %36 = load i32, i32* @y.783
  %37 = add i32 %35, -242966029
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -242966029
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1800577495, i32 650103021
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  ret %"class.std::vector.18"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.15"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %65, align 8
  %68 = bitcast %"class.std::allocator.15"* %67 to %"class.__gnu_cxx::new_allocator.16"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %68, i64 %69, i8* null)
  store i32 -1894645668, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -272020751, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -272020751, label %16
    i32 -633197266, label %21
    i32 -526699910, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -633197266, i32 -526699910
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.18"*
  ret %"class.std::vector.18"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::move_iterator.33", align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = alloca %"class.std::move_iterator.33", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %6, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %12, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.33"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.33"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.33"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.18"*, %"class.std::vector.18"** %20, align 8
  %22 = call %"class.std::vector.18"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.18"* %19, %"class.std::vector.18"* %21, %"class.std::vector.18"* %17)
  ret %"class.std::vector.18"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.18"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.33", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.33"* %2, %"class.std::vector.18"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  ret %"class.std::vector.18"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.33", align 8
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.33", align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %4, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %11, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.33"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.33"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %21 = call %"class.std::vector.18"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.18"* %18, %"class.std::vector.18"* %20, %"class.std::vector.18"* %16)
  ret %"class.std::vector.18"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.33", align 8
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %4, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %11, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  %12 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %12, %"class.std::vector.18"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %93, %3
  %14 = invoke zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.33"* dereferenceable(8) %4, %"class.std::move_iterator.33"* dereferenceable(8) %5)
          to label %15 unwind label %96

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %106

; <label>:16:                                     ; preds = %15
  %17 = load i32, i32* @x.792
  %18 = load i32, i32* @y.793
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %290

; <label>:30:                                     ; preds = %16, %290
  %31 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %32 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.18"* dereferenceable(24) %31) #3
  %33 = load i32, i32* @x.792
  %34 = load i32, i32* @y.793
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %290

; <label>:46:                                     ; preds = %30
  %47 = invoke dereferenceable(24) %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.33"* %4)
          to label %48 unwind label %96

; <label>:48:                                     ; preds = %46
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.18"* %32, %"class.std::vector.18"* dereferenceable(24) %47)
          to label %49 unwind label %96

; <label>:49:                                     ; preds = %48
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.792
  %52 = load i32, i32* @y.793
  %53 = sub i32 %51, -1167182997
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1167182997
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %293

; <label>:77:                                     ; preds = %50, %293
  %78 = load i32, i32* @x.792
  %79 = load i32, i32* @y.793
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %293

; <label>:91:                                     ; preds = %77
  %92 = invoke dereferenceable(8) %"class.std::move_iterator.33"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.33"* %4)
          to label %93 unwind label %96

; <label>:93:                                     ; preds = %91
  %94 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %95 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %94, i32 1
  store %"class.std::vector.18"* %95, %"class.std::vector.18"** %7, align 8
  br label %13

; <label>:96:                                     ; preds = %91, %48, %46, %13
  %97 = landingpad { i8*, i32 }
          catch i8* null
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %8, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %9, align 4
  br label %100

; <label>:100:                                    ; preds = %96
  %101 = load i8*, i8** %8, align 8
  %102 = call i8* @__cxa_begin_catch(i8* %101) #3
  %103 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %104 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.18"* %103, %"class.std::vector.18"* %104)
          to label %105 unwind label %149

; <label>:105:                                    ; preds = %100
  invoke void @__cxa_rethrow() #13
          to label %247 unwind label %149

; <label>:106:                                    ; preds = %15
  %107 = load i32, i32* @x.792
  %108 = load i32, i32* @y.793
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %294

; <label>:120:                                    ; preds = %106, %294
  %121 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %122 = load i32, i32* @x.792
  %123 = load i32, i32* @y.793
  %124 = add i32 %122, 1343636473
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, 1343636473
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %294

; <label>:148:                                    ; preds = %120
  ret %"class.std::vector.18"* %121

; <label>:149:                                    ; preds = %105, %100
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %8, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %153 unwind label %202

; <label>:153:                                    ; preds = %149
  br label %197
                                                  ; No predecessors!
  %155 = load i32, i32* @x.792
  %156 = load i32, i32* @y.793
  %157 = add i32 %155, -1953013329
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -1953013329
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %296

; <label>:169:                                    ; preds = %154, %296
  call void @llvm.trap()
  %170 = load i32, i32* @x.792
  %171 = load i32, i32* @y.793
  %172 = sub i32 %170, 742852224
  %173 = sub i32 %172, 1
  %174 = add i32 %173, 742852224
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 true, true
  %183 = and i1 %180, true
  %184 = and i1 %178, %182
  %185 = and i1 %181, true
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 true, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %296

; <label>:196:                                    ; preds = %169
  unreachable

; <label>:197:                                    ; preds = %153
  %198 = load i8*, i8** %8, align 8
  %199 = load i32, i32* %9, align 4
  %200 = insertvalue { i8*, i32 } undef, i8* %198, 0
  %201 = insertvalue { i8*, i32 } %200, i32 %199, 1
  resume { i8*, i32 } %201

; <label>:202:                                    ; preds = %149
  %203 = load i32, i32* @x.792
  %204 = load i32, i32* @y.793
  %205 = sub i32 %203, -2101890501
  %206 = sub i32 %205, 1
  %207 = add i32 %206, -2101890501
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 false, true
  %216 = and i1 %213, false
  %217 = and i1 %211, %215
  %218 = and i1 %214, false
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 false, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %297

; <label>:229:                                    ; preds = %202, %297
  %230 = landingpad { i8*, i32 }
          catch i8* null
  %231 = extractvalue { i8*, i32 } %230, 0
  call void @__clang_call_terminate(i8* %231) #10
  %232 = load i32, i32* @x.792
  %233 = load i32, i32* @y.793
  %234 = add i32 %232, 177312126
  %235 = sub i32 %234, 1
  %236 = sub i32 %235, 177312126
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = and i1 %240, %241
  %243 = xor i1 %240, %241
  %244 = or i1 %242, %243
  %245 = or i1 %240, %241
  br i1 %244, label %246, label %297

; <label>:246:                                    ; preds = %229
  unreachable

; <label>:247:                                    ; preds = %105
  %248 = load i32, i32* @x.792
  %249 = load i32, i32* @y.793
  %250 = add i32 %248, -1198467925
  %251 = sub i32 %250, 1
  %252 = sub i32 %251, -1198467925
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = and i1 %256, %257
  %259 = xor i1 %256, %257
  %260 = or i1 %258, %259
  %261 = or i1 %256, %257
  br i1 %260, label %262, label %300

; <label>:262:                                    ; preds = %247, %300
  %263 = load i32, i32* @x.792
  %264 = load i32, i32* @y.793
  %265 = sub i32 %263, -1948282582
  %266 = sub i32 %265, 1
  %267 = add i32 %266, -1948282582
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = xor i1 %271, true
  %274 = xor i1 %272, true
  %275 = xor i1 true, true
  %276 = and i1 %273, true
  %277 = and i1 %271, %275
  %278 = and i1 %274, true
  %279 = and i1 %272, %275
  %280 = or i1 %276, %277
  %281 = or i1 %278, %279
  %282 = xor i1 %280, %281
  %283 = or i1 %273, %274
  %284 = xor i1 %283, true
  %285 = or i1 true, %275
  %286 = and i1 %284, %285
  %287 = or i1 %282, %286
  %288 = or i1 %271, %272
  br i1 %287, label %289, label %300

; <label>:289:                                    ; preds = %262
  unreachable

; <label>:290:                                    ; preds = %30, %16
  %291 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %292 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.18"* dereferenceable(24) %291) #3
  br label %30

; <label>:293:                                    ; preds = %77, %50
  br label %77

; <label>:294:                                    ; preds = %120, %106
  %295 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  br label %120

; <label>:296:                                    ; preds = %169, %154
  call void @llvm.trap()
  br label %169

; <label>:297:                                    ; preds = %229, %202
  %298 = landingpad { i8*, i32 }
          catch i8* null
  %299 = extractvalue { i8*, i32 } %298, 0
  call void @__clang_call_terminate(i8* %299) #10
  br label %229

; <label>:300:                                    ; preds = %262, %247
  br label %262
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.33"* dereferenceable(8), %"class.std::move_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::move_iterator.33"* %1, %"class.std::move_iterator.33"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.33"* dereferenceable(8) %5, %"class.std::move_iterator.33"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.18"*
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.18"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.18"* %7, %"class.std::vector.18"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %2, align 8
  %3 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  ret %"class.std::vector.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.33"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %2, align 8
  %3 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %5, i32 1
  store %"class.std::vector.18"* %6, %"class.std::vector.18"** %4, align 8
  ret %"class.std::move_iterator.33"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.33"* dereferenceable(8), %"class.std::move_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::move_iterator.33"* %1, %"class.std::move_iterator.33"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = call %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.33"* %5)
  %7 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %4, align 8
  %8 = call %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.33"* %7)
  %9 = icmp eq %"class.std::vector.18"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %2, align 8
  %3 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  ret %"class.std::vector.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.18"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.18"* %8 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.19"* %6, %"struct.std::_Vector_base.19"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.20"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, %"class.std::allocator.20"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  ret %"class.std::allocator.20"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.20"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.20"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.21"* %6, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %1, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #5 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %6 = load i32**, i32*** %3, align 8
  %7 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %6) #3
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %9) #3
  %11 = load i32*, i32** %10, align 8
  %12 = load i32**, i32*** %3, align 8
  store i32* %11, i32** %12, align 8
  %13 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %5) #3
  %14 = load i32*, i32** %13, align 8
  %15 = load i32**, i32*** %4, align 8
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.828
  %6 = load i32, i32* @y.829
  %7 = sub i32 %5, 743253090
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 743253090
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1018769969, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1018769969, label %19
    i32 983930127, label %39
    i32 1540667388, label %57
    i32 1604793006, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 983930127, i32 1604793006
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  store i32** %0, i32*** %40, align 8
  %41 = load i32**, i32*** %40, align 8
  store i32** %41, i32*** %2
  %42 = load i32, i32* @x.828
  %43 = load i32, i32* @y.829
  %44 = add i32 %42, 1842435554
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1842435554
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1540667388, i32 1604793006
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32**, i32*** %2
  ret i32** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32**, align 8
  store i32** %0, i32*** %60, align 8
  %61 = load i32**, i32*** %60, align 8
  store i32 983930127, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.33"*, %"class.std::vector.18"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %7, %"class.std::vector.18"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.15"* dereferenceable(1), %"class.std::vector.18"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"class.std::vector.18"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.16"*, %"class.std::vector.18"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %9 = bitcast %"class.std::vector.18"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.23"*, align 8
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %6 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"* %5) #3
  %7 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  %9 = extractvalue { i64*, i32 } %6, 0
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  %11 = extractvalue { i64*, i32 } %6, 1
  store i32 %11, i32* %10, align 8
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  %13 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %5) #3
  %14 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  %16 = extractvalue { i64*, i32 } %13, 0
  store i64* %16, i64** %15, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  %18 = extractvalue { i64*, i32 } %13, 1
  store i32 %18, i32* %17, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %20 = invoke i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %12, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %19)
          to label %21 unwind label %52

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.836
  %23 = load i32, i32* @y.837
  %24 = add i32 %22, -1065662471
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -1065662471
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %55

; <label>:36:                                     ; preds = %21, %55
  %37 = load i32, i32* @x.836
  %38 = load i32, i32* @y.837
  %39 = add i32 %37, 1244615946
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1244615946
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %55

; <label>:51:                                     ; preds = %36
  ret i64 %20

; <label>:52:                                     ; preds = %1
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  call void @__clang_call_terminate(i8* %54) #10
  unreachable

; <label>:55:                                     ; preds = %36, %21
  br label %36
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator(%"class.std::vector.23"*, i64*, i32) #5 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %1, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %2, i32* %8, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %5, align 8
  %9 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %10 = bitcast %"class.std::vector.23"* %9 to %"struct.std::_Bvector_base"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %11, i32 0, i32 1
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %14 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 12, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator", align 8
  %3 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  %4 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %5 = bitcast %"class.std::vector.23"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Bit_iterator"* %2 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_iterator"* %2 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = load i64, i64* %5, align 8
  %11 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %6, i64 %10)
  %12 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  %13 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false)
  %14 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %15 = load { i64*, i32 }, { i64*, i32 }* %14, align 8
  ret { i64*, i32 } %15
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratormRKb(%"class.std::vector.23"*, i64*, i32, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_const_iterator", align 8
  %8 = alloca %"class.std::vector.23"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %7 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %8, align 8
  store i64 %3, i64* %9, align 8
  store i8* %4, i8** %10, align 8
  %18 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %20 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE6cbeginEv(%"class.std::vector.23"* %18) #3
  %21 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  %23 = extractvalue { i64*, i32 } %20, 0
  store i64* %23, i64** %22, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  %25 = extractvalue { i64*, i32 } %20, 1
  store i32 %25, i32* %24, align 8
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %12 to %"struct.std::_Bit_iterator_base"*
  %27 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %19, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %26)
  store i64 %27, i64* %11, align 8
  %28 = call { i64*, i32 } @_ZNKSt19_Bit_const_iterator13_M_const_castEv(%"struct.std::_Bit_const_iterator"* %7)
  %29 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = extractvalue { i64*, i32 } %28, 0
  store i64* %31, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = extractvalue { i64*, i32 } %28, 1
  store i32 %33, i32* %32, align 8
  %34 = load i64, i64* %9, align 8
  %35 = load i8*, i8** %10, align 8
  %36 = load i8, i8* %35, align 1
  %37 = trunc i8 %36 to i1
  %38 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  call void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.23"* %18, i64* %40, i32 %42, i64 %34, i1 zeroext %37)
  %43 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %18) #3
  %44 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  %46 = extractvalue { i64*, i32 } %43, 0
  store i64* %46, i64** %45, align 8
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  %48 = extractvalue { i64*, i32 } %43, 1
  store i32 %48, i32* %47, align 8
  %49 = load i64, i64* %11, align 8
  %50 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %14, i64 %49)
  %51 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %52 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %51, i32 0, i32 0
  %53 = extractvalue { i64*, i32 } %50, 0
  store i64* %53, i64** %52, align 8
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %51, i32 0, i32 1
  %55 = extractvalue { i64*, i32 } %50, 1
  store i32 %55, i32* %54, align 8
  %56 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %57 = load { i64*, i32 }, { i64*, i32 }* %56, align 8
  ret { i64*, i32 } %57
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator", align 8
  %3 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  %4 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %5 = bitcast %"class.std::vector.23"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 1
  %8 = bitcast %"struct.std::_Bit_iterator"* %2 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_iterator"* %2 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_iterator"* dereferenceable(16)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %3, align 8
  store %"struct.std::_Bit_iterator"* %1, %"struct.std::_Bit_iterator"** %4, align 8
  %5 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %3, align 8
  %6 = bitcast %"struct.std::_Bit_const_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %6, i64* %10, i32 %14)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16), %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %7 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = add i64 %11, -6531523388115552281
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -6531523388115552281
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  %18 = mul nsw i64 64, %17
  %19 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %20 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = sub i64 0, %22
  %24 = sub i64 %18, %23
  %25 = add nsw i64 %18, %22
  %26 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %27 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = sub i64 %24, 7440186942459240119
  %31 = sub i64 %30, %29
  %32 = add i64 %31, 7440186942459240119
  %33 = sub nsw i64 %24, %29
  ret i64 %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  %4 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %5 = bitcast %"class.std::vector.23"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 1
  invoke void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %2, %"struct.std::_Bit_iterator"* dereferenceable(16) %7)
          to label %8 unwind label %11

; <label>:8:                                      ; preds = %1
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %10 = load { i64*, i32 }, { i64*, i32 }* %9, align 8
  ret { i64*, i32 } %10

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* @x.852
  %13 = load i32, i32* @y.853
  %14 = sub i32 %12, -1760670316
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -1760670316
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %55

; <label>:38:                                     ; preds = %11, %55
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #10
  %41 = load i32, i32* @x.852
  %42 = load i32, i32* @y.853
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %55

; <label>:54:                                     ; preds = %38
  unreachable

; <label>:55:                                     ; preds = %38, %11
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #10
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  %4 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %5 = bitcast %"class.std::vector.23"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 0
  invoke void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %2, %"struct.std::_Bit_iterator"* dereferenceable(16) %7)
          to label %8 unwind label %11

; <label>:8:                                      ; preds = %1
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %10 = load { i64*, i32 }, { i64*, i32 }* %9, align 8
  ret { i64*, i32 } %10

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* @x.854
  %13 = load i32, i32* @y.855
  %14 = add i32 %12, 1671183869
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, 1671183869
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %44

; <label>:26:                                     ; preds = %11, %44
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  call void @__clang_call_terminate(i8* %28) #10
  %29 = load i32, i32* @x.854
  %30 = load i32, i32* @y.855
  %31 = add i32 %29, -257964506
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -257964506
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %44

; <label>:43:                                     ; preds = %26
  unreachable

; <label>:44:                                     ; preds = %26, %11
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #10
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %7 = load i64, i64* %4, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %6, i64 %7)
  ret %"struct.std::_Bit_iterator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"*, i64) #5 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Bit_iterator_base"*
  %5 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %5, align 8
  store %"struct.std::_Bit_iterator_base"* %8, %"struct.std::_Bit_iterator_base"** %4
  %9 = load i64, i64* %6, align 8
  %10 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = sub i64 0, %9
  %15 = sub i64 0, %13
  %16 = add i64 %14, %15
  %17 = sub i64 0, %16
  %18 = add nsw i64 %9, %13
  store i64 %17, i64* %7, align 8
  %19 = load i64, i64* %7, align 8
  %20 = sdiv i64 %19, 64
  %21 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %22 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %21, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 %20
  store i64* %24, i64** %22, align 8
  %25 = load i64, i64* %7, align 8
  %26 = srem i64 %25, 64
  store i64 %26, i64* %7, align 8
  %27 = load i64, i64* %7, align 8
  store i64 %27, i64* %3
  %28 = alloca i32
  store i32 342573609, i32* %28
  br label %29

; <label>:29:                                     ; preds = %2, %52
  %30 = load i32, i32* %28
  switch i32 %30, label %31 [
    i32 342573609, label %32
    i32 -232683992, label %36
    i32 -2059899441, label %47
  ]

; <label>:31:                                     ; preds = %29
  br label %52

; <label>:32:                                     ; preds = %29
  %33 = load volatile i64, i64* %3
  %34 = icmp slt i64 %33, 0
  %35 = select i1 %34, i32 -232683992, i32 -2059899441
  store i32 %35, i32* %28
  br label %52

; <label>:36:                                     ; preds = %29
  %37 = load i64, i64* %7, align 8
  %38 = sub i64 0, %37
  %39 = sub i64 0, 64
  %40 = add i64 %38, %39
  %41 = sub i64 0, %40
  %42 = add nsw i64 %37, 64
  store i64 %41, i64* %7, align 8
  %43 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %44 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i32 -1
  store i64* %46, i64** %44, align 8
  store i32 -2059899441, i32* %28
  br label %52

; <label>:47:                                     ; preds = %29
  %48 = load i64, i64* %7, align 8
  %49 = trunc i64 %48 to i32
  %50 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %51 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %50, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  ret void

; <label>:52:                                     ; preds = %36, %32, %31
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE6cbeginEv(%"class.std::vector.23"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.860
  %3 = load i32, i32* @y.861
  %4 = add i32 %2, -693899975
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -693899975
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %56

; <label>:28:                                     ; preds = %1, %56
  %29 = alloca %"struct.std::_Bit_const_iterator", align 8
  %30 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %30, align 8
  %31 = load %"class.std::vector.23"*, %"class.std::vector.23"** %30, align 8
  %32 = bitcast %"class.std::vector.23"* %31 to %"struct.std::_Bvector_base"*
  %33 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %33, i32 0, i32 0
  %35 = load i32, i32* @x.860
  %36 = load i32, i32* @y.861
  %37 = sub i32 %35, 69797469
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 69797469
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %56

; <label>:49:                                     ; preds = %28
  invoke void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %29, %"struct.std::_Bit_iterator"* dereferenceable(16) %34)
          to label %50 unwind label %53

; <label>:50:                                     ; preds = %49
  %51 = bitcast %"struct.std::_Bit_const_iterator"* %29 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52

; <label>:53:                                     ; preds = %49
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #10
  unreachable

; <label>:56:                                     ; preds = %28, %1
  %57 = alloca %"struct.std::_Bit_const_iterator", align 8
  %58 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %58, align 8
  %59 = load %"class.std::vector.23"*, %"class.std::vector.23"** %58, align 8
  %60 = bitcast %"class.std::vector.23"* %59 to %"struct.std::_Bvector_base"*
  %61 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %61, i32 0, i32 0
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.23"*, i64*, i32, i64, i1 zeroext) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca %"class.std::vector.23"*
  %8 = alloca %"struct.std::_Bit_iterator"*
  %9 = alloca %"struct.std::_Bit_iterator"*
  %10 = alloca %"struct.std::_Bit_iterator"*
  %11 = alloca %"struct.std::_Bit_iterator"*
  %12 = alloca %"struct.std::_Bit_iterator"*
  %13 = alloca %"struct.std::_Bit_iterator"*
  %14 = alloca %"struct.std::_Bit_iterator"*
  %15 = alloca %"struct.std::_Bit_const_iterator"*
  %16 = alloca %"struct.std::_Bit_iterator"*
  %17 = alloca %"struct.std::_Bit_const_iterator"*
  %18 = alloca %"struct.std::_Bit_iterator"*
  %19 = alloca %"struct.std::_Bit_iterator"*
  %20 = alloca i64**
  %21 = alloca i64*
  %22 = alloca %"struct.std::_Bit_iterator"*
  %23 = alloca %"struct.std::_Bit_iterator"*
  %24 = alloca %"struct.std::_Bit_iterator"*
  %25 = alloca %"struct.std::_Bit_iterator"*
  %26 = alloca %"struct.std::_Bit_iterator"*
  %27 = alloca %"struct.std::_Bit_iterator"*
  %28 = alloca i8*
  %29 = alloca i64*
  %30 = alloca %"struct.std::_Bit_iterator"*
  %31 = alloca i1
  %32 = alloca i1
  %33 = load i32, i32* @x.862
  %34 = load i32, i32* @y.863
  %35 = add i32 %33, -845897887
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -845897887
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  store i1 %41, i1* %32
  %42 = icmp slt i32 %34, 10
  store i1 %42, i1* %31
  %43 = alloca i32
  store i32 -381404222, i32* %43
  br label %44

; <label>:44:                                     ; preds = %5, %449
  %45 = load i32, i32* %43
  switch i32 %45, label %46 [
    i32 -381404222, label %47
    i32 -692503458, label %67
    i32 1680170925, label %129
    i32 -1312216608, label %132
    i32 1261097940, label %133
    i32 -506267091, label %146
    i32 -721114801, label %231
    i32 -1172310286, label %384
    i32 -1685624924, label %400
    i32 -1548781540, label %415
    i32 1208589906, label %416
    i32 1016313282, label %448
  ]

; <label>:46:                                     ; preds = %44
  br label %449

; <label>:47:                                     ; preds = %44
  %48 = load volatile i1, i1* %32
  %49 = load volatile i1, i1* %31
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -692503458, i32 1208589906
  store i32 %66, i32* %43
  br label %449

; <label>:67:                                     ; preds = %44
  %68 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %68, %"struct.std::_Bit_iterator"** %30
  %69 = alloca %"class.std::vector.23"*, align 8
  %70 = alloca i64, align 8
  store i64* %70, i64** %29
  %71 = alloca i8, align 1
  store i8* %71, i8** %28
  %72 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %72, %"struct.std::_Bit_iterator"** %27
  %73 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %73, %"struct.std::_Bit_iterator"** %26
  %74 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %74, %"struct.std::_Bit_iterator"** %25
  %75 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %75, %"struct.std::_Bit_iterator"** %24
  %76 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %76, %"struct.std::_Bit_iterator"** %23
  %77 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %77, %"struct.std::_Bit_iterator"** %22
  %78 = alloca i64, align 8
  store i64* %78, i64** %21
  %79 = alloca i64*, align 8
  store i64** %79, i64*** %20
  %80 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %80, %"struct.std::_Bit_iterator"** %19
  %81 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %81, %"struct.std::_Bit_iterator"** %18
  %82 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"struct.std::_Bit_const_iterator"* %82, %"struct.std::_Bit_const_iterator"** %17
  %83 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %83, %"struct.std::_Bit_iterator"** %16
  %84 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"struct.std::_Bit_const_iterator"* %84, %"struct.std::_Bit_const_iterator"** %15
  %85 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %85, %"struct.std::_Bit_iterator"** %14
  %86 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %86, %"struct.std::_Bit_iterator"** %13
  %87 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %87, %"struct.std::_Bit_iterator"** %12
  %88 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %88, %"struct.std::_Bit_iterator"** %11
  %89 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %89, %"struct.std::_Bit_iterator"** %10
  %90 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %90, %"struct.std::_Bit_iterator"** %9
  %91 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %91, %"struct.std::_Bit_iterator"** %8
  %92 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %30
  %93 = bitcast %"struct.std::_Bit_iterator"* %92 to { i64*, i32 }*
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 0
  store i64* %1, i64** %94, align 8
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 1
  store i32 %2, i32* %95, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %69, align 8
  %96 = load volatile i64*, i64** %29
  store i64 %3, i64* %96, align 8
  %97 = zext i1 %4 to i8
  %98 = load volatile i8*, i8** %28
  store i8 %97, i8* %98, align 1
  %99 = load %"class.std::vector.23"*, %"class.std::vector.23"** %69, align 8
  store %"class.std::vector.23"* %99, %"class.std::vector.23"** %7
  %100 = load volatile i64*, i64** %29
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %101, 0
  store i1 %102, i1* %6
  %103 = load i32, i32* @x.862
  %104 = load i32, i32* @y.863
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 1680170925, i32 1208589906
  store i32 %128, i32* %43
  br label %449

; <label>:129:                                    ; preds = %44
  %130 = load volatile i1, i1* %6
  %131 = select i1 %130, i32 -1312216608, i32 1261097940
  store i32 %131, i32* %43
  br label %449

; <label>:132:                                    ; preds = %44
  store i32 -1172310286, i32* %43
  br label %449

; <label>:133:                                    ; preds = %44
  %134 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %135 = call i64 @_ZNKSt6vectorIbSaIbEE8capacityEv(%"class.std::vector.23"* %134) #3
  %136 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %137 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"* %136) #3
  %138 = sub i64 %135, -8291842133634053635
  %139 = sub i64 %138, %137
  %140 = add i64 %139, -8291842133634053635
  %141 = sub i64 %135, %137
  %142 = load volatile i64*, i64** %29
  %143 = load i64, i64* %142, align 8
  %144 = icmp uge i64 %140, %143
  %145 = select i1 %144, i32 -506267091, i32 -721114801
  store i32 %145, i32* %43
  br label %449

; <label>:146:                                    ; preds = %44
  %147 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27
  %148 = bitcast %"struct.std::_Bit_iterator"* %147 to i8*
  %149 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %30
  %150 = bitcast %"struct.std::_Bit_iterator"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %150, i64 16, i32 8, i1 false)
  %151 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %152 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"* %151) #3
  %153 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %26
  %154 = bitcast %"struct.std::_Bit_iterator"* %153 to { i64*, i32 }*
  %155 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 0
  %156 = extractvalue { i64*, i32 } %152, 0
  store i64* %156, i64** %155, align 8
  %157 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 1
  %158 = extractvalue { i64*, i32 } %152, 1
  store i32 %158, i32* %157, align 8
  %159 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %160 = bitcast %"class.std::vector.23"* %159 to %"struct.std::_Bvector_base"*
  %161 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %161, i32 0, i32 1
  %163 = load volatile i64*, i64** %29
  %164 = load i64, i64* %163, align 8
  %165 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %162, i64 %164)
  %166 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %25
  %167 = bitcast %"struct.std::_Bit_iterator"* %166 to { i64*, i32 }*
  %168 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %167, i32 0, i32 0
  %169 = extractvalue { i64*, i32 } %165, 0
  store i64* %169, i64** %168, align 8
  %170 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %167, i32 0, i32 1
  %171 = extractvalue { i64*, i32 } %165, 1
  store i32 %171, i32* %170, align 8
  %172 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27
  %173 = bitcast %"struct.std::_Bit_iterator"* %172 to { i64*, i32 }*
  %174 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %173, i32 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %173, i32 0, i32 1
  %177 = load i32, i32* %176, align 8
  %178 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %26
  %179 = bitcast %"struct.std::_Bit_iterator"* %178 to { i64*, i32 }*
  %180 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %179, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %179, i32 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %25
  %185 = bitcast %"struct.std::_Bit_iterator"* %184 to { i64*, i32 }*
  %186 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %185, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %185, i32 0, i32 1
  %189 = load i32, i32* %188, align 8
  %190 = call { i64*, i32 } @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %175, i32 %177, i64* %181, i32 %183, i64* %187, i32 %189)
  %191 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %24
  %192 = bitcast %"struct.std::_Bit_iterator"* %191 to { i64*, i32 }*
  %193 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %192, i32 0, i32 0
  %194 = extractvalue { i64*, i32 } %190, 0
  store i64* %194, i64** %193, align 8
  %195 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %192, i32 0, i32 1
  %196 = extractvalue { i64*, i32 } %190, 1
  store i32 %196, i32* %195, align 8
  %197 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %23
  %198 = bitcast %"struct.std::_Bit_iterator"* %197 to i8*
  %199 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %30
  %200 = bitcast %"struct.std::_Bit_iterator"* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %198, i8* %200, i64 16, i32 8, i1 false)
  %201 = load volatile i64*, i64** %29
  %202 = load i64, i64* %201, align 8
  %203 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %30
  %204 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %203, i64 %202)
  %205 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %22
  %206 = bitcast %"struct.std::_Bit_iterator"* %205 to { i64*, i32 }*
  %207 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %206, i32 0, i32 0
  %208 = extractvalue { i64*, i32 } %204, 0
  store i64* %208, i64** %207, align 8
  %209 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %206, i32 0, i32 1
  %210 = extractvalue { i64*, i32 } %204, 1
  store i32 %210, i32* %209, align 8
  %211 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %23
  %212 = bitcast %"struct.std::_Bit_iterator"* %211 to { i64*, i32 }*
  %213 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %212, i32 0, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %212, i32 0, i32 1
  %216 = load i32, i32* %215, align 8
  %217 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %22
  %218 = bitcast %"struct.std::_Bit_iterator"* %217 to { i64*, i32 }*
  %219 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %218, i32 0, i32 0
  %220 = load i64*, i64** %219, align 8
  %221 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %218, i32 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = load volatile i8*, i8** %28
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %214, i32 %216, i64* %220, i32 %222, i8* dereferenceable(1) %223)
  %224 = load volatile i64*, i64** %29
  %225 = load i64, i64* %224, align 8
  %226 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %227 = bitcast %"class.std::vector.23"* %226 to %"struct.std::_Bvector_base"*
  %228 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %228, i32 0, i32 1
  %230 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %229, i64 %225)
  store i32 -1172310286, i32* %43
  br label %449

; <label>:231:                                    ; preds = %44
  %232 = load volatile i64*, i64** %29
  %233 = load i64, i64* %232, align 8
  %234 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %235 = call i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.23"* %234, i64 %233, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i32 0, i32 0))
  %236 = load volatile i64*, i64** %21
  store i64 %235, i64* %236, align 8
  %237 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %238 = bitcast %"class.std::vector.23"* %237 to %"struct.std::_Bvector_base"*
  %239 = load volatile i64*, i64** %21
  %240 = load i64, i64* %239, align 8
  %241 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %238, i64 %240)
  %242 = load volatile i64**, i64*** %20
  store i64* %241, i64** %242, align 8
  %243 = load volatile i64**, i64*** %20
  %244 = load i64*, i64** %243, align 8
  %245 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %244) #3
  %246 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %19
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %246, i64* %245, i32 0)
  %247 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %248 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %247) #3
  %249 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %250 = bitcast %"struct.std::_Bit_iterator"* %249 to { i64*, i32 }*
  %251 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %250, i32 0, i32 0
  %252 = extractvalue { i64*, i32 } %248, 0
  store i64* %252, i64** %251, align 8
  %253 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %250, i32 0, i32 1
  %254 = extractvalue { i64*, i32 } %248, 1
  store i32 %254, i32* %253, align 8
  %255 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %17
  %256 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %255, %"struct.std::_Bit_iterator"* dereferenceable(16) %256)
  %257 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %30
  %258 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %15
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %258, %"struct.std::_Bit_iterator"* dereferenceable(16) %257)
  %259 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %14
  %260 = bitcast %"struct.std::_Bit_iterator"* %259 to i8*
  %261 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %19
  %262 = bitcast %"struct.std::_Bit_iterator"* %261 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %260, i8* %262, i64 16, i32 8, i1 false)
  %263 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %17
  %264 = bitcast %"struct.std::_Bit_const_iterator"* %263 to { i64*, i32 }*
  %265 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %264, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %264, i32 0, i32 1
  %268 = load i32, i32* %267, align 8
  %269 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %15
  %270 = bitcast %"struct.std::_Bit_const_iterator"* %269 to { i64*, i32 }*
  %271 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %270, i32 0, i32 0
  %272 = load i64*, i64** %271, align 8
  %273 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %270, i32 0, i32 1
  %274 = load i32, i32* %273, align 8
  %275 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %14
  %276 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %277 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.23"* %276, i64* %266, i32 %268, i64* %272, i32 %274, %"struct.std::_Bit_iterator"* byval align 8 %275)
  %278 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %18
  %279 = bitcast %"struct.std::_Bit_iterator"* %278 to { i64*, i32 }*
  %280 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %279, i32 0, i32 0
  %281 = extractvalue { i64*, i32 } %277, 0
  store i64* %281, i64** %280, align 8
  %282 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %279, i32 0, i32 1
  %283 = extractvalue { i64*, i32 } %277, 1
  store i32 %283, i32* %282, align 8
  %284 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %285 = bitcast %"struct.std::_Bit_iterator"* %284 to i8*
  %286 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %18
  %287 = bitcast %"struct.std::_Bit_iterator"* %286 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %285, i8* %287, i64 16, i32 8, i1 false)
  %288 = load volatile i64*, i64** %29
  %289 = load i64, i64* %288, align 8
  %290 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %18
  %291 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %290, i64 %289)
  %292 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %293 = bitcast %"struct.std::_Bit_iterator"* %292 to { i64*, i32 }*
  %294 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %293, i32 0, i32 0
  %295 = extractvalue { i64*, i32 } %291, 0
  store i64* %295, i64** %294, align 8
  %296 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %293, i32 0, i32 1
  %297 = extractvalue { i64*, i32 } %291, 1
  store i32 %297, i32* %296, align 8
  %298 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %299 = bitcast %"struct.std::_Bit_iterator"* %298 to { i64*, i32 }*
  %300 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %299, i32 0, i32 0
  %301 = load i64*, i64** %300, align 8
  %302 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %299, i32 0, i32 1
  %303 = load i32, i32* %302, align 8
  %304 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %305 = bitcast %"struct.std::_Bit_iterator"* %304 to { i64*, i32 }*
  %306 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %305, i32 0, i32 0
  %307 = load i64*, i64** %306, align 8
  %308 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %305, i32 0, i32 1
  %309 = load i32, i32* %308, align 8
  %310 = load volatile i8*, i8** %28
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %301, i32 %303, i64* %307, i32 %309, i8* dereferenceable(1) %310)
  %311 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %312 = bitcast %"struct.std::_Bit_iterator"* %311 to i8*
  %313 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %30
  %314 = bitcast %"struct.std::_Bit_iterator"* %313 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %312, i8* %314, i64 16, i32 8, i1 false)
  %315 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %316 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.23"* %315) #3
  %317 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %318 = bitcast %"struct.std::_Bit_iterator"* %317 to { i64*, i32 }*
  %319 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %318, i32 0, i32 0
  %320 = extractvalue { i64*, i32 } %316, 0
  store i64* %320, i64** %319, align 8
  %321 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %318, i32 0, i32 1
  %322 = extractvalue { i64*, i32 } %316, 1
  store i32 %322, i32* %321, align 8
  %323 = load volatile i64*, i64** %29
  %324 = load i64, i64* %323, align 8
  %325 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %18
  %326 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %325, i64 %324)
  %327 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %8
  %328 = bitcast %"struct.std::_Bit_iterator"* %327 to { i64*, i32 }*
  %329 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %328, i32 0, i32 0
  %330 = extractvalue { i64*, i32 } %326, 0
  store i64* %330, i64** %329, align 8
  %331 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %328, i32 0, i32 1
  %332 = extractvalue { i64*, i32 } %326, 1
  store i32 %332, i32* %331, align 8
  %333 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %334 = bitcast %"struct.std::_Bit_iterator"* %333 to { i64*, i32 }*
  %335 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %334, i32 0, i32 0
  %336 = load i64*, i64** %335, align 8
  %337 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %334, i32 0, i32 1
  %338 = load i32, i32* %337, align 8
  %339 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %340 = bitcast %"struct.std::_Bit_iterator"* %339 to { i64*, i32 }*
  %341 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %340, i32 0, i32 0
  %342 = load i64*, i64** %341, align 8
  %343 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %340, i32 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %8
  %346 = bitcast %"struct.std::_Bit_iterator"* %345 to { i64*, i32 }*
  %347 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %346, i32 0, i32 0
  %348 = load i64*, i64** %347, align 8
  %349 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %346, i32 0, i32 1
  %350 = load i32, i32* %349, align 8
  %351 = call { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %336, i32 %338, i64* %342, i32 %344, i64* %348, i32 %350)
  %352 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %353 = bitcast %"struct.std::_Bit_iterator"* %352 to { i64*, i32 }*
  %354 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %353, i32 0, i32 0
  %355 = extractvalue { i64*, i32 } %351, 0
  store i64* %355, i64** %354, align 8
  %356 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %353, i32 0, i32 1
  %357 = extractvalue { i64*, i32 } %351, 1
  store i32 %357, i32* %356, align 8
  %358 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %359 = bitcast %"class.std::vector.23"* %358 to %"struct.std::_Bvector_base"*
  %360 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %359, i32 0, i32 0
  %361 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %360, i32 0, i32 1
  %362 = bitcast %"struct.std::_Bit_iterator"* %361 to i8*
  %363 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %364 = bitcast %"struct.std::_Bit_iterator"* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %362, i8* %364, i64 12, i32 8, i1 false)
  %365 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %366 = bitcast %"class.std::vector.23"* %365 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %366)
  %367 = load volatile i64**, i64*** %20
  %368 = load i64*, i64** %367, align 8
  %369 = load volatile i64*, i64** %21
  %370 = load i64, i64* %369, align 8
  %371 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %370)
  %372 = getelementptr inbounds i64, i64* %368, i64 %371
  %373 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %374 = bitcast %"class.std::vector.23"* %373 to %"struct.std::_Bvector_base"*
  %375 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %374, i32 0, i32 0
  %376 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %375, i32 0, i32 2
  store i64* %372, i64** %376, align 8
  %377 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %378 = bitcast %"class.std::vector.23"* %377 to %"struct.std::_Bvector_base"*
  %379 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %378, i32 0, i32 0
  %380 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %379, i32 0, i32 0
  %381 = bitcast %"struct.std::_Bit_iterator"* %380 to i8*
  %382 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %19
  %383 = bitcast %"struct.std::_Bit_iterator"* %382 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %381, i8* %383, i64 12, i32 8, i1 false)
  store i32 -1172310286, i32* %43
  br label %449

; <label>:384:                                    ; preds = %44
  %385 = load i32, i32* @x.862
  %386 = load i32, i32* @y.863
  %387 = sub i32 %385, -156171240
  %388 = sub i32 %387, 1
  %389 = add i32 %388, -156171240
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = and i1 %393, %394
  %396 = xor i1 %393, %394
  %397 = or i1 %395, %396
  %398 = or i1 %393, %394
  %399 = select i1 %397, i32 -1685624924, i32 1016313282
  store i32 %399, i32* %43
  br label %449

; <label>:400:                                    ; preds = %44
  %401 = load i32, i32* @x.862
  %402 = load i32, i32* @y.863
  %403 = sub i32 0, 1
  %404 = add i32 %401, %403
  %405 = sub i32 %401, 1
  %406 = mul i32 %401, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %402, 10
  %410 = and i1 %408, %409
  %411 = xor i1 %408, %409
  %412 = or i1 %410, %411
  %413 = or i1 %408, %409
  %414 = select i1 %412, i32 -1548781540, i32 1016313282
  store i32 %414, i32* %43
  br label %449

; <label>:415:                                    ; preds = %44
  ret void

; <label>:416:                                    ; preds = %44
  %417 = alloca %"struct.std::_Bit_iterator", align 8
  %418 = alloca %"class.std::vector.23"*, align 8
  %419 = alloca i64, align 8
  %420 = alloca i8, align 1
  %421 = alloca %"struct.std::_Bit_iterator", align 8
  %422 = alloca %"struct.std::_Bit_iterator", align 8
  %423 = alloca %"struct.std::_Bit_iterator", align 8
  %424 = alloca %"struct.std::_Bit_iterator", align 8
  %425 = alloca %"struct.std::_Bit_iterator", align 8
  %426 = alloca %"struct.std::_Bit_iterator", align 8
  %427 = alloca i64, align 8
  %428 = alloca i64*, align 8
  %429 = alloca %"struct.std::_Bit_iterator", align 8
  %430 = alloca %"struct.std::_Bit_iterator", align 8
  %431 = alloca %"struct.std::_Bit_const_iterator", align 8
  %432 = alloca %"struct.std::_Bit_iterator", align 8
  %433 = alloca %"struct.std::_Bit_const_iterator", align 8
  %434 = alloca %"struct.std::_Bit_iterator", align 8
  %435 = alloca %"struct.std::_Bit_iterator", align 8
  %436 = alloca %"struct.std::_Bit_iterator", align 8
  %437 = alloca %"struct.std::_Bit_iterator", align 8
  %438 = alloca %"struct.std::_Bit_iterator", align 8
  %439 = alloca %"struct.std::_Bit_iterator", align 8
  %440 = alloca %"struct.std::_Bit_iterator", align 8
  %441 = bitcast %"struct.std::_Bit_iterator"* %417 to { i64*, i32 }*
  %442 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %441, i32 0, i32 0
  store i64* %1, i64** %442, align 8
  %443 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %441, i32 0, i32 1
  store i32 %2, i32* %443, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %418, align 8
  store i64 %3, i64* %419, align 8
  %444 = zext i1 %4 to i8
  store i8 %444, i8* %420, align 1
  %445 = load %"class.std::vector.23"*, %"class.std::vector.23"** %418, align 8
  %446 = load i64, i64* %419, align 8
  %447 = icmp eq i64 %446, 0
  store i32 -692503458, i32* %43
  br label %449

; <label>:448:                                    ; preds = %44
  store i32 -1685624924, i32* %43
  br label %449

; <label>:449:                                    ; preds = %448, %416, %400, %384, %231, %146, %133, %132, %129, %67, %47, %46
  br label %44
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt19_Bit_const_iterator13_M_const_castEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator", align 8
  %3 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %3, align 8
  %4 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %3, align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %2, i64* %7, i32 %10)
  %11 = bitcast %"struct.std::_Bit_iterator"* %2 to { i64*, i32 }*
  %12 = load { i64*, i32 }, { i64*, i32 }* %11, align 8
  ret { i64*, i32 } %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE8capacityEv(%"class.std::vector.23"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.866
  %3 = load i32, i32* @y.867
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %116

; <label>:27:                                     ; preds = %1, %116
  %28 = alloca %"class.std::vector.23"*, align 8
  %29 = alloca %"struct.std::_Bit_const_iterator", align 8
  %30 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %28, align 8
  %31 = load %"class.std::vector.23"*, %"class.std::vector.23"** %28, align 8
  %32 = bitcast %"class.std::vector.23"* %31 to %"struct.std::_Bvector_base"*
  %33 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %32, i32 0, i32 0
  %34 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %33) #3
  %35 = load i32, i32* @x.866
  %36 = load i32, i32* @y.867
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %116

; <label>:48:                                     ; preds = %27
  invoke void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %29, i64* %34, i32 0)
          to label %49 unwind label %113

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* @x.866
  %51 = load i32, i32* @y.867
  %52 = sub i32 %50, -788665583
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -788665583
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %124

; <label>:76:                                     ; preds = %49, %124
  %77 = bitcast %"struct.std::_Bit_const_iterator"* %29 to %"struct.std::_Bit_iterator_base"*
  %78 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %31) #3
  %79 = bitcast %"struct.std::_Bit_const_iterator"* %30 to { i64*, i32 }*
  %80 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 0
  %81 = extractvalue { i64*, i32 } %78, 0
  store i64* %81, i64** %80, align 8
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 1
  %83 = extractvalue { i64*, i32 } %78, 1
  store i32 %83, i32* %82, align 8
  %84 = bitcast %"struct.std::_Bit_const_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  %85 = load i32, i32* @x.866
  %86 = load i32, i32* @y.867
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %124

; <label>:110:                                    ; preds = %76
  %111 = invoke i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %77, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %84)
          to label %112 unwind label %113

; <label>:112:                                    ; preds = %110
  ret i64 %111

; <label>:113:                                    ; preds = %110, %48
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #10
  unreachable

; <label>:116:                                    ; preds = %27, %1
  %117 = alloca %"class.std::vector.23"*, align 8
  %118 = alloca %"struct.std::_Bit_const_iterator", align 8
  %119 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %117, align 8
  %120 = load %"class.std::vector.23"*, %"class.std::vector.23"** %117, align 8
  %121 = bitcast %"class.std::vector.23"* %120 to %"struct.std::_Bvector_base"*
  %122 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %121, i32 0, i32 0
  %123 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %122) #3
  br label %27

; <label>:124:                                    ; preds = %76, %49
  %125 = bitcast %"struct.std::_Bit_const_iterator"* %29 to %"struct.std::_Bit_iterator_base"*
  %126 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.23"* %31) #3
  %127 = bitcast %"struct.std::_Bit_const_iterator"* %30 to { i64*, i32 }*
  %128 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 0
  %129 = extractvalue { i64*, i32 } %126, 0
  store i64* %129, i64** %128, align 8
  %130 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 1
  %131 = extractvalue { i64*, i32 } %126, 1
  store i32 %131, i32* %130, align 8
  %132 = bitcast %"struct.std::_Bit_const_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  br label %76
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.868
  %11 = load i32, i32* @y.869
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1621147430, i32* %19
  br label %20

; <label>:20:                                     ; preds = %6, %187
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1621147430, label %23
    i32 -1133055784, label %31
    i32 -503817071, label %115
    i32 923331926, label %117
  ]

; <label>:22:                                     ; preds = %20
  br label %187

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1133055784, i32 923331926
  store i32 %30, i32* %19
  br label %187

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Bit_iterator", align 8
  %33 = alloca %"struct.std::_Bit_iterator", align 8
  %34 = alloca %"struct.std::_Bit_iterator", align 8
  %35 = alloca %"struct.std::_Bit_iterator", align 8
  %36 = alloca %"struct.std::_Bit_iterator", align 8
  %37 = alloca %"struct.std::_Bit_iterator", align 8
  %38 = alloca %"struct.std::_Bit_iterator", align 8
  %39 = alloca %"struct.std::_Bit_iterator", align 8
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  %41 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  store i32 %1, i32* %43, align 8
  %44 = bitcast %"struct.std::_Bit_iterator"* %34 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  store i64* %2, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  store i32 %3, i32* %46, align 8
  %47 = bitcast %"struct.std::_Bit_iterator"* %35 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  store i64* %4, i64** %48, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  store i32 %5, i32* %49, align 8
  %50 = bitcast %"struct.std::_Bit_iterator"* %37 to i8*
  %51 = bitcast %"struct.std::_Bit_iterator"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 8, i1 false)
  %52 = bitcast %"struct.std::_Bit_iterator"* %37 to { i64*, i32 }*
  %53 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %52, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %52, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %54, i32 %56)
  %58 = bitcast %"struct.std::_Bit_iterator"* %36 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = extractvalue { i64*, i32 } %57, 0
  store i64* %60, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = extractvalue { i64*, i32 } %57, 1
  store i32 %62, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %39 to i8*
  %64 = bitcast %"struct.std::_Bit_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 8, i1 false)
  %65 = bitcast %"struct.std::_Bit_iterator"* %39 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %67, i32 %69)
  %71 = bitcast %"struct.std::_Bit_iterator"* %38 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = extractvalue { i64*, i32 } %70, 0
  store i64* %73, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = extractvalue { i64*, i32 } %70, 1
  store i32 %75, i32* %74, align 8
  %76 = bitcast %"struct.std::_Bit_iterator"* %40 to i8*
  %77 = bitcast %"struct.std::_Bit_iterator"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 16, i32 8, i1 false)
  %78 = bitcast %"struct.std::_Bit_iterator"* %36 to { i64*, i32 }*
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %78, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %78, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = bitcast %"struct.std::_Bit_iterator"* %38 to { i64*, i32 }*
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %89 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %88, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %88, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = call { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %80, i32 %82, i64* %85, i32 %87, i64* %90, i32 %92)
  %94 = bitcast %"struct.std::_Bit_iterator"* %32 to { i64*, i32 }*
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 0
  %96 = extractvalue { i64*, i32 } %93, 0
  store i64* %96, i64** %95, align 8
  %97 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 1
  %98 = extractvalue { i64*, i32 } %93, 1
  store i32 %98, i32* %97, align 8
  %99 = bitcast %"struct.std::_Bit_iterator"* %32 to { i64*, i32 }*
  %100 = load { i64*, i32 }, { i64*, i32 }* %99, align 8
  store { i64*, i32 } %100, { i64*, i32 }* %7
  %101 = load i32, i32* @x.868
  %102 = load i32, i32* @y.869
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 -503817071, i32 923331926
  store i32 %114, i32* %19
  br label %187

; <label>:115:                                    ; preds = %20
  %116 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %116

; <label>:117:                                    ; preds = %20
  %118 = alloca %"struct.std::_Bit_iterator", align 8
  %119 = alloca %"struct.std::_Bit_iterator", align 8
  %120 = alloca %"struct.std::_Bit_iterator", align 8
  %121 = alloca %"struct.std::_Bit_iterator", align 8
  %122 = alloca %"struct.std::_Bit_iterator", align 8
  %123 = alloca %"struct.std::_Bit_iterator", align 8
  %124 = alloca %"struct.std::_Bit_iterator", align 8
  %125 = alloca %"struct.std::_Bit_iterator", align 8
  %126 = alloca %"struct.std::_Bit_iterator", align 8
  %127 = bitcast %"struct.std::_Bit_iterator"* %119 to { i64*, i32 }*
  %128 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 0
  store i64* %0, i64** %128, align 8
  %129 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 1
  store i32 %1, i32* %129, align 8
  %130 = bitcast %"struct.std::_Bit_iterator"* %120 to { i64*, i32 }*
  %131 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %130, i32 0, i32 0
  store i64* %2, i64** %131, align 8
  %132 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %130, i32 0, i32 1
  store i32 %3, i32* %132, align 8
  %133 = bitcast %"struct.std::_Bit_iterator"* %121 to { i64*, i32 }*
  %134 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %133, i32 0, i32 0
  store i64* %4, i64** %134, align 8
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %133, i32 0, i32 1
  store i32 %5, i32* %135, align 8
  %136 = bitcast %"struct.std::_Bit_iterator"* %123 to i8*
  %137 = bitcast %"struct.std::_Bit_iterator"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 16, i32 8, i1 false)
  %138 = bitcast %"struct.std::_Bit_iterator"* %123 to { i64*, i32 }*
  %139 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %138, i32 0, i32 0
  %140 = load i64*, i64** %139, align 8
  %141 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %138, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %140, i32 %142)
  %144 = bitcast %"struct.std::_Bit_iterator"* %122 to { i64*, i32 }*
  %145 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %144, i32 0, i32 0
  %146 = extractvalue { i64*, i32 } %143, 0
  store i64* %146, i64** %145, align 8
  %147 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %144, i32 0, i32 1
  %148 = extractvalue { i64*, i32 } %143, 1
  store i32 %148, i32* %147, align 8
  %149 = bitcast %"struct.std::_Bit_iterator"* %125 to i8*
  %150 = bitcast %"struct.std::_Bit_iterator"* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 16, i32 8, i1 false)
  %151 = bitcast %"struct.std::_Bit_iterator"* %125 to { i64*, i32 }*
  %152 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %153, i32 %155)
  %157 = bitcast %"struct.std::_Bit_iterator"* %124 to { i64*, i32 }*
  %158 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 0
  %159 = extractvalue { i64*, i32 } %156, 0
  store i64* %159, i64** %158, align 8
  %160 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 1
  %161 = extractvalue { i64*, i32 } %156, 1
  store i32 %161, i32* %160, align 8
  %162 = bitcast %"struct.std::_Bit_iterator"* %126 to i8*
  %163 = bitcast %"struct.std::_Bit_iterator"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 16, i32 8, i1 false)
  %164 = bitcast %"struct.std::_Bit_iterator"* %122 to { i64*, i32 }*
  %165 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = bitcast %"struct.std::_Bit_iterator"* %124 to { i64*, i32 }*
  %170 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %169, i32 0, i32 0
  %171 = load i64*, i64** %170, align 8
  %172 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %169, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = bitcast %"struct.std::_Bit_iterator"* %126 to { i64*, i32 }*
  %175 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %174, i32 0, i32 0
  %176 = load i64*, i64** %175, align 8
  %177 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %174, i32 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = call { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %166, i32 %168, i64* %171, i32 %173, i64* %176, i32 %178)
  %180 = bitcast %"struct.std::_Bit_iterator"* %118 to { i64*, i32 }*
  %181 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %180, i32 0, i32 0
  %182 = extractvalue { i64*, i32 } %179, 0
  store i64* %182, i64** %181, align 8
  %183 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %180, i32 0, i32 1
  %184 = extractvalue { i64*, i32 } %179, 1
  store i32 %184, i32* %183, align 8
  %185 = bitcast %"struct.std::_Bit_iterator"* %118 to { i64*, i32 }*
  %186 = load { i64*, i32 }, { i64*, i32 }* %185, align 8
  store i32 -1133055784, i32* %19
  br label %187

; <label>:187:                                    ; preds = %117, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64*, i32, i64*, i32, i8* dereferenceable(1)) #0 comdat {
  %6 = alloca i1
  %7 = alloca %"struct.std::_Bit_iterator"*
  %8 = alloca %"struct.std::_Bit_iterator"*
  %9 = alloca %"struct.std::_Bit_iterator"*
  %10 = alloca %"struct.std::_Bit_iterator"*
  %11 = alloca %"struct.std::_Bit_iterator"*
  %12 = alloca %"struct.std::_Bit_iterator"*
  %13 = alloca i32*
  %14 = alloca i8**
  %15 = alloca %"struct.std::_Bit_iterator"*
  %16 = alloca %"struct.std::_Bit_iterator"*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.870
  %20 = load i32, i32* @y.871
  %21 = add i32 %19, -804683854
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -804683854
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %18
  %28 = icmp slt i32 %20, 10
  store i1 %28, i1* %17
  %29 = alloca i32
  store i32 -878432789, i32* %29
  br label %30

; <label>:30:                                     ; preds = %5, %386
  %31 = load i32, i32* %29
  switch i32 %31, label %32 [
    i32 -878432789, label %33
    i32 -555990729, label %53
    i32 -186896334, label %109
    i32 467284988, label %112
    i32 -982360546, label %140
    i32 879004220, label %222
    i32 -111719232, label %223
    i32 1371398437, label %248
    i32 1623322609, label %264
    i32 545538182, label %292
    i32 -380957064, label %293
    i32 -1498218405, label %317
    i32 -1181826811, label %385
  ]

; <label>:32:                                     ; preds = %30
  br label %386

; <label>:33:                                     ; preds = %30
  %34 = load volatile i1, i1* %18
  %35 = load volatile i1, i1* %17
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -555990729, i32 -380957064
  store i32 %52, i32* %29
  br label %386

; <label>:53:                                     ; preds = %30
  %54 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %54, %"struct.std::_Bit_iterator"** %16
  %55 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %55, %"struct.std::_Bit_iterator"** %15
  %56 = alloca i8*, align 8
  store i8** %56, i8*** %14
  %57 = alloca i32, align 4
  store i32* %57, i32** %13
  %58 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %58, %"struct.std::_Bit_iterator"** %12
  %59 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %59, %"struct.std::_Bit_iterator"** %11
  %60 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %60, %"struct.std::_Bit_iterator"** %10
  %61 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %61, %"struct.std::_Bit_iterator"** %9
  %62 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %62, %"struct.std::_Bit_iterator"** %8
  %63 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %63, %"struct.std::_Bit_iterator"** %7
  %64 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %65 = bitcast %"struct.std::_Bit_iterator"* %64 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  store i64* %0, i64** %66, align 8
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  store i32 %1, i32* %67, align 8
  %68 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %69 = bitcast %"struct.std::_Bit_iterator"* %68 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  store i64* %2, i64** %70, align 8
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  store i32 %3, i32* %71, align 8
  %72 = load volatile i8**, i8*** %14
  store i8* %4, i8** %72, align 8
  %73 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %74 = bitcast %"struct.std::_Bit_iterator"* %73 to %"struct.std::_Bit_iterator_base"*
  %75 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %74, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %78 = bitcast %"struct.std::_Bit_iterator"* %77 to %"struct.std::_Bit_iterator_base"*
  %79 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %78, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = icmp ne i64* %76, %80
  store i1 %81, i1* %6
  %82 = load i32, i32* @x.870
  %83 = load i32, i32* @y.871
  %84 = add i32 %82, -1021555101
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1021555101
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -186896334, i32 -380957064
  store i32 %108, i32* %29
  br label %386

; <label>:109:                                    ; preds = %30
  %110 = load volatile i1, i1* %6
  %111 = select i1 %110, i32 467284988, i32 -111719232
  store i32 %111, i32* %29
  br label %386

; <label>:112:                                    ; preds = %30
  %113 = load i32, i32* @x.870
  %114 = load i32, i32* @y.871
  %115 = add i32 %113, 1453141441
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 1453141441
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 -982360546, i32 -1498218405
  store i32 %139, i32* %29
  br label %386

; <label>:140:                                    ; preds = %30
  %141 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %142 = bitcast %"struct.std::_Bit_iterator"* %141 to %"struct.std::_Bit_iterator_base"*
  %143 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %142, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %147 = bitcast %"struct.std::_Bit_iterator"* %146 to %"struct.std::_Bit_iterator_base"*
  %148 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %147, i32 0, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = load volatile i8**, i8*** %14
  %151 = load i8*, i8** %150, align 8
  %152 = load i8, i8* %151, align 1
  %153 = trunc i8 %152 to i1
  %154 = select i1 %153, i32 -1, i32 0
  %155 = load volatile i32*, i32** %13
  store i32 %154, i32* %155, align 4
  %156 = load volatile i32*, i32** %13
  call void @_ZSt4fillIPmiEvT_S1_RKT0_(i64* %145, i64* %149, i32* dereferenceable(4) %156)
  %157 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %158 = bitcast %"struct.std::_Bit_iterator"* %157 to i8*
  %159 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %160 = bitcast %"struct.std::_Bit_iterator"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %158, i8* %160, i64 16, i32 8, i1 false)
  %161 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %162 = bitcast %"struct.std::_Bit_iterator"* %161 to %"struct.std::_Bit_iterator_base"*
  %163 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %162, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 1
  %166 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %166, i64* %165, i32 0)
  %167 = load volatile i8**, i8*** %14
  %168 = load i8*, i8** %167, align 8
  %169 = load i8, i8* %168, align 1
  %170 = trunc i8 %169 to i1
  %171 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %172 = bitcast %"struct.std::_Bit_iterator"* %171 to { i64*, i32 }*
  %173 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %172, i32 0, i32 0
  %174 = load i64*, i64** %173, align 8
  %175 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %172, i32 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %178 = bitcast %"struct.std::_Bit_iterator"* %177 to { i64*, i32 }*
  %179 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %178, i32 0, i32 0
  %180 = load i64*, i64** %179, align 8
  %181 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %178, i32 0, i32 1
  %182 = load i32, i32* %181, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %174, i32 %176, i64* %180, i32 %182, i1 zeroext %170)
  %183 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %184 = bitcast %"struct.std::_Bit_iterator"* %183 to %"struct.std::_Bit_iterator_base"*
  %185 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %184, i32 0, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %187, i64* %186, i32 0)
  %188 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %189 = bitcast %"struct.std::_Bit_iterator"* %188 to i8*
  %190 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %191 = bitcast %"struct.std::_Bit_iterator"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %189, i8* %191, i64 16, i32 8, i1 false)
  %192 = load volatile i8**, i8*** %14
  %193 = load i8*, i8** %192, align 8
  %194 = load i8, i8* %193, align 1
  %195 = trunc i8 %194 to i1
  %196 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %197 = bitcast %"struct.std::_Bit_iterator"* %196 to { i64*, i32 }*
  %198 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %197, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %197, i32 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %203 = bitcast %"struct.std::_Bit_iterator"* %202 to { i64*, i32 }*
  %204 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %203, i32 0, i32 0
  %205 = load i64*, i64** %204, align 8
  %206 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %203, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %199, i32 %201, i64* %205, i32 %207, i1 zeroext %195)
  %208 = load i32, i32* @x.870
  %209 = load i32, i32* @y.871
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  %221 = select i1 %219, i32 879004220, i32 -1498218405
  store i32 %221, i32* %29
  br label %386

; <label>:222:                                    ; preds = %30
  store i32 1371398437, i32* %29
  br label %386

; <label>:223:                                    ; preds = %30
  %224 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %8
  %225 = bitcast %"struct.std::_Bit_iterator"* %224 to i8*
  %226 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %227 = bitcast %"struct.std::_Bit_iterator"* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %225, i8* %227, i64 16, i32 8, i1 false)
  %228 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %7
  %229 = bitcast %"struct.std::_Bit_iterator"* %228 to i8*
  %230 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %231 = bitcast %"struct.std::_Bit_iterator"* %230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %229, i8* %231, i64 16, i32 8, i1 false)
  %232 = load volatile i8**, i8*** %14
  %233 = load i8*, i8** %232, align 8
  %234 = load i8, i8* %233, align 1
  %235 = trunc i8 %234 to i1
  %236 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %8
  %237 = bitcast %"struct.std::_Bit_iterator"* %236 to { i64*, i32 }*
  %238 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %237, i32 0, i32 0
  %239 = load i64*, i64** %238, align 8
  %240 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %237, i32 0, i32 1
  %241 = load i32, i32* %240, align 8
  %242 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %7
  %243 = bitcast %"struct.std::_Bit_iterator"* %242 to { i64*, i32 }*
  %244 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %243, i32 0, i32 0
  %245 = load i64*, i64** %244, align 8
  %246 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %243, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %239, i32 %241, i64* %245, i32 %247, i1 zeroext %235)
  store i32 1371398437, i32* %29
  br label %386

; <label>:248:                                    ; preds = %30
  %249 = load i32, i32* @x.870
  %250 = load i32, i32* @y.871
  %251 = sub i32 %249, -1891478757
  %252 = sub i32 %251, 1
  %253 = add i32 %252, -1891478757
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  %263 = select i1 %261, i32 1623322609, i32 -1181826811
  store i32 %263, i32* %29
  br label %386

; <label>:264:                                    ; preds = %30
  %265 = load i32, i32* @x.870
  %266 = load i32, i32* @y.871
  %267 = sub i32 %265, 1879499008
  %268 = sub i32 %267, 1
  %269 = add i32 %268, 1879499008
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = xor i1 %273, true
  %276 = xor i1 %274, true
  %277 = xor i1 true, true
  %278 = and i1 %275, true
  %279 = and i1 %273, %277
  %280 = and i1 %276, true
  %281 = and i1 %274, %277
  %282 = or i1 %278, %279
  %283 = or i1 %280, %281
  %284 = xor i1 %282, %283
  %285 = or i1 %275, %276
  %286 = xor i1 %285, true
  %287 = or i1 true, %277
  %288 = and i1 %286, %287
  %289 = or i1 %284, %288
  %290 = or i1 %273, %274
  %291 = select i1 %289, i32 545538182, i32 -1181826811
  store i32 %291, i32* %29
  br label %386

; <label>:292:                                    ; preds = %30
  ret void

; <label>:293:                                    ; preds = %30
  %294 = alloca %"struct.std::_Bit_iterator", align 8
  %295 = alloca %"struct.std::_Bit_iterator", align 8
  %296 = alloca i8*, align 8
  %297 = alloca i32, align 4
  %298 = alloca %"struct.std::_Bit_iterator", align 8
  %299 = alloca %"struct.std::_Bit_iterator", align 8
  %300 = alloca %"struct.std::_Bit_iterator", align 8
  %301 = alloca %"struct.std::_Bit_iterator", align 8
  %302 = alloca %"struct.std::_Bit_iterator", align 8
  %303 = alloca %"struct.std::_Bit_iterator", align 8
  %304 = bitcast %"struct.std::_Bit_iterator"* %294 to { i64*, i32 }*
  %305 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %304, i32 0, i32 0
  store i64* %0, i64** %305, align 8
  %306 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %304, i32 0, i32 1
  store i32 %1, i32* %306, align 8
  %307 = bitcast %"struct.std::_Bit_iterator"* %295 to { i64*, i32 }*
  %308 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %307, i32 0, i32 0
  store i64* %2, i64** %308, align 8
  %309 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %307, i32 0, i32 1
  store i32 %3, i32* %309, align 8
  store i8* %4, i8** %296, align 8
  %310 = bitcast %"struct.std::_Bit_iterator"* %294 to %"struct.std::_Bit_iterator_base"*
  %311 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %310, i32 0, i32 0
  %312 = load i64*, i64** %311, align 8
  %313 = bitcast %"struct.std::_Bit_iterator"* %295 to %"struct.std::_Bit_iterator_base"*
  %314 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %313, i32 0, i32 0
  %315 = load i64*, i64** %314, align 8
  %316 = icmp ne i64* %312, %315
  store i32 -555990729, i32* %29
  br label %386

; <label>:317:                                    ; preds = %30
  %318 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %319 = bitcast %"struct.std::_Bit_iterator"* %318 to %"struct.std::_Bit_iterator_base"*
  %320 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %319, i32 0, i32 0
  %321 = load i64*, i64** %320, align 8
  %322 = getelementptr inbounds i64, i64* %321, i64 1
  %323 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %324 = bitcast %"struct.std::_Bit_iterator"* %323 to %"struct.std::_Bit_iterator_base"*
  %325 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %324, i32 0, i32 0
  %326 = load i64*, i64** %325, align 8
  %327 = load volatile i8**, i8*** %14
  %328 = load i8*, i8** %327, align 8
  %329 = load i8, i8* %328, align 1
  %330 = trunc i8 %329 to i1
  %331 = select i1 %330, i32 -1, i32 0
  %332 = load volatile i32*, i32** %13
  store i32 %331, i32* %332, align 4
  %333 = load volatile i32*, i32** %13
  call void @_ZSt4fillIPmiEvT_S1_RKT0_(i64* %322, i64* %326, i32* dereferenceable(4) %333)
  %334 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %335 = bitcast %"struct.std::_Bit_iterator"* %334 to i8*
  %336 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %337 = bitcast %"struct.std::_Bit_iterator"* %336 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %335, i8* %337, i64 16, i32 8, i1 false)
  %338 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %16
  %339 = bitcast %"struct.std::_Bit_iterator"* %338 to %"struct.std::_Bit_iterator_base"*
  %340 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %339, i32 0, i32 0
  %341 = load i64*, i64** %340, align 8
  %342 = getelementptr inbounds i64, i64* %341, i64 1
  %343 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %343, i64* %342, i32 0)
  %344 = load volatile i8**, i8*** %14
  %345 = load i8*, i8** %344, align 8
  %346 = load i8, i8* %345, align 1
  %347 = trunc i8 %346 to i1
  %348 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %349 = bitcast %"struct.std::_Bit_iterator"* %348 to { i64*, i32 }*
  %350 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %349, i32 0, i32 0
  %351 = load i64*, i64** %350, align 8
  %352 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %349, i32 0, i32 1
  %353 = load i32, i32* %352, align 8
  %354 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %355 = bitcast %"struct.std::_Bit_iterator"* %354 to { i64*, i32 }*
  %356 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %355, i32 0, i32 0
  %357 = load i64*, i64** %356, align 8
  %358 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %355, i32 0, i32 1
  %359 = load i32, i32* %358, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %351, i32 %353, i64* %357, i32 %359, i1 zeroext %347)
  %360 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %361 = bitcast %"struct.std::_Bit_iterator"* %360 to %"struct.std::_Bit_iterator_base"*
  %362 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %361, i32 0, i32 0
  %363 = load i64*, i64** %362, align 8
  %364 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %364, i64* %363, i32 0)
  %365 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %366 = bitcast %"struct.std::_Bit_iterator"* %365 to i8*
  %367 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %15
  %368 = bitcast %"struct.std::_Bit_iterator"* %367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %366, i8* %368, i64 16, i32 8, i1 false)
  %369 = load volatile i8**, i8*** %14
  %370 = load i8*, i8** %369, align 8
  %371 = load i8, i8* %370, align 1
  %372 = trunc i8 %371 to i1
  %373 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %374 = bitcast %"struct.std::_Bit_iterator"* %373 to { i64*, i32 }*
  %375 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %374, i32 0, i32 0
  %376 = load i64*, i64** %375, align 8
  %377 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %374, i32 0, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %380 = bitcast %"struct.std::_Bit_iterator"* %379 to { i64*, i32 }*
  %381 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %380, i32 0, i32 0
  %382 = load i64*, i64** %381, align 8
  %383 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %380, i32 0, i32 1
  %384 = load i32, i32* %383, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %376, i32 %378, i64* %382, i32 %384, i1 zeroext %372)
  store i32 -982360546, i32* %29
  br label %386

; <label>:385:                                    ; preds = %30
  store i32 1623322609, i32* %29
  br label %386

; <label>:386:                                    ; preds = %385, %317, %293, %264, %248, %223, %222, %140, %112, %109, %53, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.23"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.23"*
  %8 = alloca %"class.std::vector.23"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  store %"class.std::vector.23"* %13, %"class.std::vector.23"** %7
  %14 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %15 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.23"* %14) #3
  %16 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %17 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"* %16) #3
  %18 = add i64 %15, -1610925950094433295
  %19 = sub i64 %18, %17
  %20 = sub i64 %19, -1610925950094433295
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 1529722236, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %98
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1529722236, label %28
    i32 46902478, label %33
    i32 482346984, label %35
    i32 -164197341, label %51
    i32 1748254508, label %57
    i32 -1992453137, label %60
    i32 2140221891, label %75
    i32 1166556523, label %92
    i32 -519583981, label %94
    i32 1626084133, label %96
  ]

; <label>:27:                                     ; preds = %25
  br label %98

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 46902478, i32 482346984
  store i32 %32, i32* %23
  br label %98

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #13
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %37 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"* %36) #3
  %38 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %39 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"* %38) #3
  store i64 %39, i64* %12, align 8
  %40 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %37, 6946682493192498452
  %43 = add i64 %42, %41
  %44 = sub i64 %43, 6946682493192498452
  %45 = add i64 %37, %41
  store i64 %44, i64* %11, align 8
  %46 = load i64, i64* %11, align 8
  %47 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %48 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.23"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 1748254508, i32 -164197341
  store i32 %50, i32* %23
  br label %98

; <label>:51:                                     ; preds = %25
  %52 = load i64, i64* %11, align 8
  %53 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %54 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.23"* %53) #3
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i32 1748254508, i32 -1992453137
  store i32 %56, i32* %23
  br label %98

; <label>:57:                                     ; preds = %25
  %58 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %59 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.23"* %58) #3
  store i32 -519583981, i32* %23
  store i64 %59, i64* %24
  br label %98

; <label>:60:                                     ; preds = %25
  %61 = load i32, i32* @x.872
  %62 = load i32, i32* @y.873
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 2140221891, i32 1626084133
  store i32 %74, i32* %23
  br label %98

; <label>:75:                                     ; preds = %25
  %76 = load i64, i64* %11, align 8
  store i64 %76, i64* %4
  %77 = load i32, i32* @x.872
  %78 = load i32, i32* @y.873
  %79 = sub i32 %77, 173491698
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 173491698
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 1166556523, i32 1626084133
  store i32 %91, i32* %23
  br label %98

; <label>:92:                                     ; preds = %25
  store i32 -519583981, i32* %23
  %93 = load volatile i64, i64* %4
  store i64 %93, i64* %24
  br label %98

; <label>:94:                                     ; preds = %25
  %95 = load i64, i64* %24
  ret i64 %95

; <label>:96:                                     ; preds = %25
  %97 = load i64, i64* %11, align 8
  store i32 2140221891, i32* %23
  br label %98

; <label>:98:                                     ; preds = %96, %92, %75, %60, %57, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"class.std::allocator.24"*
  %8 = load i64, i64* %4, align 8
  %9 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %8)
  %10 = call i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.24"* dereferenceable(1) %7, i64 %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.876
  %6 = load i32, i32* @y.877
  %7 = sub i32 %5, -1683767009
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1683767009
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1776923594, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1776923594, label %19
    i32 1781029254, label %27
    i32 -372916194, label %47
    i32 1192104526, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1781029254, i32 1192104526
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = bitcast i8* %30 to i64*
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.876
  %33 = load i32, i32* @y.877
  %34 = sub i32 %32, 798588189
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 798588189
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -372916194, i32 1192104526
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64*, i64** %2
  ret i64* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca i64*, align 8
  store i64* %0, i64** %50, align 8
  %51 = load i64*, i64** %50, align 8
  %52 = bitcast i64* %51 to i8*
  %53 = bitcast i8* %52 to i64*
  store i32 1781029254, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.23"*, i64*, i32, i64*, i32, %"struct.std::_Bit_iterator"* byval align 8) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"class.std::vector.23"*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %3, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %4, i32* %20, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %10, align 8
  %21 = load %"class.std::vector.23"*, %"class.std::vector.23"** %10, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %23 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %26 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %29 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = call i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64* %24, i64* %27, i64* %30)
  store i64* %31, i64** %11, align 8
  %32 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %33 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %12, i64* %34, i32 0)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i64*, i64** %11, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %37, i32 0)
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64* %40, i32 %42, i64* %45, i32 %47, i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  ret { i64*, i32 } %60
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %1, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %3, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %4, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %5, i32* %24, align 8
  %25 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %29, i32 %31)
  %33 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = extractvalue { i64*, i32 } %32, 0
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = extractvalue { i64*, i32 } %32, 1
  store i32 %37, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %39 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %55, i32 %57, i64* %60, i32 %62, i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %75 = load { i64*, i32 }, { i64*, i32 }* %74, align 8
  ret { i64*, i32 } %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Bvector_base"*
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.884
  %8 = load i32, i32* @y.885
  %9 = add i32 %7, -1156552550
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1156552550
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 616752222, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %115
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 616752222, label %21
    i32 830731936, label %41
    i32 682894707, label %67
    i32 922795001, label %70
    i32 1602185392, label %104
    i32 19553704, label %105
  ]

; <label>:20:                                     ; preds = %18
  br label %115

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 830731936, i32 19553704
  store i32 %40, i32* %17
  br label %115

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::_Bvector_base"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %4
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %42, align 8
  %44 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %42, align 8
  store %"struct.std::_Bvector_base"* %44, %"struct.std::_Bvector_base"** %3
  %45 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %46 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Bit_iterator"* %47 to %"struct.std::_Bit_iterator_base"*
  %49 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = icmp ne i64* %50, null
  store i1 %51, i1* %2
  %52 = load i32, i32* @x.884
  %53 = load i32, i32* @y.885
  %54 = sub i32 %52, -678992631
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -678992631
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 682894707, i32 19553704
  store i32 %66, i32* %17
  br label %115

; <label>:67:                                     ; preds = %18
  %68 = load volatile i1, i1* %2
  %69 = select i1 %68, i32 922795001, i32 1602185392
  store i32 %69, i32* %17
  br label %115

; <label>:70:                                     ; preds = %18
  %71 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %72 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %71, i32 0, i32 0
  %73 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %72) #3
  %74 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %75 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Bit_iterator"* %76 to %"struct.std::_Bit_iterator_base"*
  %78 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %77, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = ptrtoint i64* %73 to i64
  %81 = ptrtoint i64* %79 to i64
  %82 = sub i64 %80, 400472911151956982
  %83 = sub i64 %82, %81
  %84 = add i64 %83, 400472911151956982
  %85 = sub i64 %80, %81
  %86 = sdiv exact i64 %84, 8
  %87 = load volatile i64*, i64** %4
  store i64 %86, i64* %87, align 8
  %88 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %89 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %89 to %"class.std::allocator.24"*
  %91 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %92 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %92, i32 0, i32 2
  %94 = load i64*, i64** %93, align 8
  %95 = load volatile i64*, i64** %4
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 0, -3940849968207431948
  %98 = sub i64 %97, %96
  %99 = add i64 %98, -3940849968207431948
  %100 = sub i64 0, %96
  %101 = getelementptr inbounds i64, i64* %94, i64 %99
  %102 = load volatile i64*, i64** %4
  %103 = load i64, i64* %102, align 8
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.24"* dereferenceable(1) %90, i64* %101, i64 %103)
  store i32 1602185392, i32* %17
  br label %115

; <label>:104:                                    ; preds = %18
  ret void

; <label>:105:                                    ; preds = %18
  %106 = alloca %"struct.std::_Bvector_base"*, align 8
  %107 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %106, align 8
  %108 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %106, align 8
  %109 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %109, i32 0, i32 0
  %111 = bitcast %"struct.std::_Bit_iterator"* %110 to %"struct.std::_Bit_iterator_base"*
  %112 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %111, i32 0, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = icmp ne i64* %113, null
  store i32 830731936, i32* %17
  br label %115

; <label>:115:                                    ; preds = %105, %70, %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64) #5 comdat align 2 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = sub i64 0, 64
  %5 = sub i64 %3, %4
  %6 = add i64 %3, 64
  %7 = sub i64 %5, 7179395063226021077
  %8 = sub i64 %7, 1
  %9 = add i64 %8, 7179395063226021077
  %10 = sub i64 %5, 1
  %11 = udiv i64 %9, 64
  ret i64 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*
  %4 = alloca i64**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.888
  %8 = load i32, i32* @y.889
  %9 = add i32 %7, -1583678597
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1583678597
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1366588734, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %151
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1366588734, label %21
    i32 -853704680, label %29
    i32 52000076, label %64
    i32 -1972488724, label %67
    i32 31312195, label %95
    i32 -377801910, label %130
    i32 73405467, label %131
    i32 1078352596, label %133
    i32 9008102, label %136
    i32 -767076886, label %143
  ]

; <label>:20:                                     ; preds = %18
  br label %151

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -853704680, i32 9008102
  store i32 %28, i32* %17
  br label %151

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  store i64** %30, i64*** %4
  %31 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %31, align 8
  %32 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %31, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %32, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3
  %33 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3
  %34 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %33, i32 0, i32 2
  %35 = load i64*, i64** %34, align 8
  %36 = icmp ne i64* %35, null
  store i1 %36, i1* %2
  %37 = load i32, i32* @x.888
  %38 = load i32, i32* @y.889
  %39 = sub i32 %37, 1963419171
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1963419171
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 52000076, i32 9008102
  store i32 %63, i32* %17
  br label %151

; <label>:64:                                     ; preds = %18
  %65 = load volatile i1, i1* %2
  %66 = select i1 %65, i32 -1972488724, i32 73405467
  store i32 %66, i32* %17
  br label %151

; <label>:67:                                     ; preds = %18
  %68 = load i32, i32* @x.888
  %69 = load i32, i32* @y.889
  %70 = sub i32 %68, -1499275613
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -1499275613
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 31312195, i32 -767076886
  store i32 %94, i32* %17
  br label %151

; <label>:95:                                     ; preds = %18
  %96 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3
  %97 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %96, i32 0, i32 2
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 -1
  %100 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %99) #3
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load volatile i64**, i64*** %4
  store i64* %101, i64** %102, align 8
  %103 = load i32, i32* @x.888
  %104 = load i32, i32* @y.889
  %105 = add i32 %103, -1889840968
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, -1889840968
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 -377801910, i32 -767076886
  store i32 %129, i32* %17
  br label %151

; <label>:130:                                    ; preds = %18
  store i32 1078352596, i32* %17
  br label %151

; <label>:131:                                    ; preds = %18
  %132 = load volatile i64**, i64*** %4
  store i64* null, i64** %132, align 8
  store i32 1078352596, i32* %17
  br label %151

; <label>:133:                                    ; preds = %18
  %134 = load volatile i64**, i64*** %4
  %135 = load i64*, i64** %134, align 8
  ret i64* %135

; <label>:136:                                    ; preds = %18
  %137 = alloca i64*, align 8
  %138 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %138, align 8
  %139 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %138, align 8
  %140 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %139, i32 0, i32 2
  %141 = load i64*, i64** %140, align 8
  %142 = icmp ne i64* %141, null
  store i32 -853704680, i32* %17
  br label %151

; <label>:143:                                    ; preds = %18
  %144 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3
  %145 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %144, i32 0, i32 2
  %146 = load i64*, i64** %145, align 8
  %147 = getelementptr inbounds i64, i64* %146, i64 -1
  %148 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %147) #3
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = load volatile i64**, i64*** %4
  store i64* %149, i64** %150, align 8
  store i32 31312195, i32* %17
  br label %151

; <label>:151:                                    ; preds = %143, %136, %131, %130, %95, %67, %64, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"*, i64*, i32) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %1, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %2, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %3, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %4, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %5, i32* %25, align 8
  %26 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %27 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %30, i32 %32)
  %34 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %33, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %33, 1
  store i32 %38, i32* %37, align 8
  %39 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %40 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %43, i32 %45)
  %47 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %53 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %56, i32 %58)
  %60 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = extractvalue { i64*, i32 } %59, 0
  store i64* %62, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = extractvalue { i64*, i32 } %59, 1
  store i32 %64, i32* %63, align 8
  %65 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call { i64*, i32 } @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %67, i32 %69, i64* %72, i32 %74, i64* %77, i32 %79)
  %81 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = extractvalue { i64*, i32 } %80, 0
  store i64* %83, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = extractvalue { i64*, i32 } %80, 1
  store i32 %85, i32* %84, align 8
  %86 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  ret { i64*, i32 } %87
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64*, i32) #5 comdat {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  %10 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = call { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64* %13, i32 %15)
  %17 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i32 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i32 } %16, 1
  store i32 %21, i32* %20, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %23 = load { i64*, i32 }, { i64*, i32 }* %22, align 8
  ret { i64*, i32 } %23
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.896
  %11 = load i32, i32* @y.897
  %12 = sub i32 %10, -2023715883
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -2023715883
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 366077674, i32* %20
  br label %21

; <label>:21:                                     ; preds = %6, %155
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 366077674, label %24
    i32 1584301602, label %32
    i32 1619926948, label %106
    i32 1514972615, label %108
  ]

; <label>:23:                                     ; preds = %21
  br label %155

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1584301602, i32 1514972615
  store i32 %31, i32* %20
  br label %155

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Bit_iterator", align 8
  %34 = alloca %"struct.std::_Bit_iterator", align 8
  %35 = alloca %"struct.std::_Bit_iterator", align 8
  %36 = alloca %"struct.std::_Bit_iterator", align 8
  %37 = alloca i8, align 1
  %38 = alloca %"struct.std::_Bit_iterator", align 8
  %39 = alloca %"struct.std::_Bit_iterator", align 8
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  %41 = bitcast %"struct.std::_Bit_iterator"* %34 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  store i32 %1, i32* %43, align 8
  %44 = bitcast %"struct.std::_Bit_iterator"* %35 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  store i64* %2, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  store i32 %3, i32* %46, align 8
  %47 = bitcast %"struct.std::_Bit_iterator"* %36 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  store i64* %4, i64** %48, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  store i32 %5, i32* %49, align 8
  store i8 0, i8* %37, align 1
  %50 = bitcast %"struct.std::_Bit_iterator"* %38 to i8*
  %51 = bitcast %"struct.std::_Bit_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 8, i1 false)
  %52 = bitcast %"struct.std::_Bit_iterator"* %39 to i8*
  %53 = bitcast %"struct.std::_Bit_iterator"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %40 to i8*
  %55 = bitcast %"struct.std::_Bit_iterator"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 16, i32 8, i1 false)
  %56 = bitcast %"struct.std::_Bit_iterator"* %38 to { i64*, i32 }*
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %56, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %56, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = bitcast %"struct.std::_Bit_iterator"* %39 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = call { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %58, i32 %60, i64* %63, i32 %65, i64* %68, i32 %70)
  %72 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 0
  %74 = extractvalue { i64*, i32 } %71, 0
  store i64* %74, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 1
  %76 = extractvalue { i64*, i32 } %71, 1
  store i32 %76, i32* %75, align 8
  %77 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %78 = load { i64*, i32 }, { i64*, i32 }* %77, align 8
  store { i64*, i32 } %78, { i64*, i32 }* %7
  %79 = load i32, i32* @x.896
  %80 = load i32, i32* @y.897
  %81 = sub i32 %79, 2124243950
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 2124243950
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 1619926948, i32 1514972615
  store i32 %105, i32* %20
  br label %155

; <label>:106:                                    ; preds = %21
  %107 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %107

; <label>:108:                                    ; preds = %21
  %109 = alloca %"struct.std::_Bit_iterator", align 8
  %110 = alloca %"struct.std::_Bit_iterator", align 8
  %111 = alloca %"struct.std::_Bit_iterator", align 8
  %112 = alloca %"struct.std::_Bit_iterator", align 8
  %113 = alloca i8, align 1
  %114 = alloca %"struct.std::_Bit_iterator", align 8
  %115 = alloca %"struct.std::_Bit_iterator", align 8
  %116 = alloca %"struct.std::_Bit_iterator", align 8
  %117 = bitcast %"struct.std::_Bit_iterator"* %110 to { i64*, i32 }*
  %118 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %117, i32 0, i32 0
  store i64* %0, i64** %118, align 8
  %119 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %117, i32 0, i32 1
  store i32 %1, i32* %119, align 8
  %120 = bitcast %"struct.std::_Bit_iterator"* %111 to { i64*, i32 }*
  %121 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %120, i32 0, i32 0
  store i64* %2, i64** %121, align 8
  %122 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %120, i32 0, i32 1
  store i32 %3, i32* %122, align 8
  %123 = bitcast %"struct.std::_Bit_iterator"* %112 to { i64*, i32 }*
  %124 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %123, i32 0, i32 0
  store i64* %4, i64** %124, align 8
  %125 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %123, i32 0, i32 1
  store i32 %5, i32* %125, align 8
  store i8 0, i8* %113, align 1
  %126 = bitcast %"struct.std::_Bit_iterator"* %114 to i8*
  %127 = bitcast %"struct.std::_Bit_iterator"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 16, i32 8, i1 false)
  %128 = bitcast %"struct.std::_Bit_iterator"* %115 to i8*
  %129 = bitcast %"struct.std::_Bit_iterator"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 16, i32 8, i1 false)
  %130 = bitcast %"struct.std::_Bit_iterator"* %116 to i8*
  %131 = bitcast %"struct.std::_Bit_iterator"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 16, i32 8, i1 false)
  %132 = bitcast %"struct.std::_Bit_iterator"* %114 to { i64*, i32 }*
  %133 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %132, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %132, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = bitcast %"struct.std::_Bit_iterator"* %115 to { i64*, i32 }*
  %138 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %137, i32 0, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %137, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = bitcast %"struct.std::_Bit_iterator"* %116 to { i64*, i32 }*
  %143 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %142, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %142, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = call { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %134, i32 %136, i64* %139, i32 %141, i64* %144, i32 %146)
  %148 = bitcast %"struct.std::_Bit_iterator"* %109 to { i64*, i32 }*
  %149 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 0
  %150 = extractvalue { i64*, i32 } %147, 0
  store i64* %150, i64** %149, align 8
  %151 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 1
  %152 = extractvalue { i64*, i32 } %147, 1
  store i32 %152, i32* %151, align 8
  %153 = bitcast %"struct.std::_Bit_iterator"* %109 to { i64*, i32 }*
  %154 = load { i64*, i32 }, { i64*, i32 }* %153, align 8
  store i32 1584301602, i32* %20
  br label %155

; <label>:155:                                    ; preds = %108, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64*, i32) #0 comdat {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.898
  %7 = load i32, i32* @y.899
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 927282604, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %111
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 927282604, label %19
    i32 -935761862, label %39
    i32 2080766095, label %87
    i32 -963977124, label %89
  ]

; <label>:18:                                     ; preds = %16
  br label %111

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -935761862, i32 -963977124
  store i32 %38, i32* %15
  br label %111

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  %41 = alloca %"struct.std::_Bit_iterator", align 8
  %42 = alloca %"struct.std::_Bit_iterator", align 8
  %43 = bitcast %"struct.std::_Bit_iterator"* %41 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  store i64* %0, i64** %44, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  store i32 %1, i32* %45, align 8
  %46 = bitcast %"struct.std::_Bit_iterator"* %42 to i8*
  %47 = bitcast %"struct.std::_Bit_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = bitcast %"struct.std::_Bit_iterator"* %42 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  store { i64*, i32 } %60, { i64*, i32 }* %3
  %61 = load i32, i32* @x.898
  %62 = load i32, i32* @y.899
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 2080766095, i32 -963977124
  store i32 %86, i32* %15
  br label %111

; <label>:87:                                     ; preds = %16
  %88 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %88

; <label>:89:                                     ; preds = %16
  %90 = alloca %"struct.std::_Bit_iterator", align 8
  %91 = alloca %"struct.std::_Bit_iterator", align 8
  %92 = alloca %"struct.std::_Bit_iterator", align 8
  %93 = bitcast %"struct.std::_Bit_iterator"* %91 to { i64*, i32 }*
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 0
  store i64* %0, i64** %94, align 8
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 1
  store i32 %1, i32* %95, align 8
  %96 = bitcast %"struct.std::_Bit_iterator"* %92 to i8*
  %97 = bitcast %"struct.std::_Bit_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 16, i32 8, i1 false)
  %98 = bitcast %"struct.std::_Bit_iterator"* %92 to { i64*, i32 }*
  %99 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %98, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %98, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = call { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64* %100, i32 %102)
  %104 = bitcast %"struct.std::_Bit_iterator"* %90 to { i64*, i32 }*
  %105 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %104, i32 0, i32 0
  %106 = extractvalue { i64*, i32 } %103, 0
  store i64* %106, i64** %105, align 8
  %107 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %104, i32 0, i32 1
  %108 = extractvalue { i64*, i32 } %103, 1
  store i32 %108, i32* %107, align 8
  %109 = bitcast %"struct.std::_Bit_iterator"* %90 to { i64*, i32 }*
  %110 = load { i64*, i32 }, { i64*, i32 }* %109, align 8
  store i32 -935761862, i32* %15
  br label %111

; <label>:111:                                    ; preds = %89, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::_Bit_reference", align 8
  %13 = alloca %"struct.std::_Bit_reference", align 8
  %14 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  store i64* %0, i64** %15, align 8
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  store i32 %1, i32* %16, align 8
  %17 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %2, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %3, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %4, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %5, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %24 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %25 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %23, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %24)
  store i64 %25, i64* %11, align 8
  %26 = alloca i32
  store i32 -1872245873, i32* %26
  br label %27

; <label>:27:                                     ; preds = %6, %129
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 -1872245873, label %30
    i32 1183682296, label %34
    i32 620750196, label %50
    i32 1393207954, label %78
    i32 1748973613, label %100
    i32 -1174491765, label %101
    i32 695478778, label %106
  ]

; <label>:29:                                     ; preds = %27
  br label %129

; <label>:30:                                     ; preds = %27
  %31 = load i64, i64* %11, align 8
  %32 = icmp sgt i64 %31, 0
  %33 = select i1 %32, i32 1183682296, i32 -1174491765
  store i32 %33, i32* %26
  br label %129

; <label>:34:                                     ; preds = %27
  %35 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"* %9)
  %36 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %35)
  %37 = bitcast %"struct.std::_Bit_reference"* %12 to { i64*, i64 }*
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %37, i32 0, i32 0
  %39 = extractvalue { i64*, i64 } %36, 0
  store i64* %39, i64** %38, align 8
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %37, i32 0, i32 1
  %41 = extractvalue { i64*, i64 } %36, 1
  store i64 %41, i64* %40, align 8
  %42 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"* %10)
  %43 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %42)
  %44 = bitcast %"struct.std::_Bit_reference"* %13 to { i64*, i64 }*
  %45 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %44, i32 0, i32 0
  %46 = extractvalue { i64*, i64 } %43, 0
  store i64* %46, i64** %45, align 8
  %47 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %44, i32 0, i32 1
  %48 = extractvalue { i64*, i64 } %43, 1
  store i64 %48, i64* %47, align 8
  %49 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %13, %"struct.std::_Bit_reference"* dereferenceable(16) %12) #3
  store i32 620750196, i32* %26
  br label %129

; <label>:50:                                     ; preds = %27
  %51 = load i32, i32* @x.900
  %52 = load i32, i32* @y.901
  %53 = add i32 %51, 521095810
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 521095810
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1393207954, i32 695478778
  store i32 %77, i32* %26
  br label %129

; <label>:78:                                     ; preds = %27
  %79 = load i64, i64* %11, align 8
  %80 = sub i64 0, %79
  %81 = sub i64 0, -1
  %82 = add i64 %80, %81
  %83 = sub i64 0, %82
  %84 = add nsw i64 %79, -1
  store i64 %83, i64* %11, align 8
  %85 = load i32, i32* @x.900
  %86 = load i32, i32* @y.901
  %87 = sub i32 %85, 1190702827
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 1190702827
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 1748973613, i32 695478778
  store i32 %99, i32* %26
  br label %129

; <label>:100:                                    ; preds = %27
  store i32 -1872245873, i32* %26
  br label %129

; <label>:101:                                    ; preds = %27
  %102 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  %103 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 16, i32 8, i1 false)
  %104 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %105 = load { i64*, i32 }, { i64*, i32 }* %104, align 8
  ret { i64*, i32 } %105

; <label>:106:                                    ; preds = %27
  %107 = load i64, i64* %11, align 8
  %108 = sub i64 0, 7903120000785543088
  %109 = sub i64 %108, %107
  %110 = add i64 %109, 7903120000785543088
  %111 = sub i64 0, %107
  %112 = add i64 %110, -428571562942012116
  %113 = add i64 %112, -1
  %114 = sub i64 %113, -428571562942012116
  %115 = add i64 %110, -1
  %116 = sub i64 %107, 8636869328606265206
  %117 = sub i64 %116, -1
  %118 = add i64 %117, 8636869328606265206
  %119 = sub i64 %107, -1
  %120 = mul i64 %118, -1
  %121 = shl i64 %107, -1
  %122 = shl i64 %107, -1
  %123 = shl i64 %107, -1
  %124 = sub i64 0, %107
  %125 = sub i64 0, -1
  %126 = add i64 %124, %125
  %127 = sub i64 0, %126
  %128 = add nsw i64 %107, -1
  store i64 %127, i64* %11, align 8
  store i32 1393207954, i32* %26
  br label %129

; <label>:129:                                    ; preds = %106, %100, %78, %50, %34, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.902
  %6 = load i32, i32* @y.903
  %7 = sub i32 %5, 436895121
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 436895121
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -34441226, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -34441226, label %19
    i32 1067003071, label %27
    i32 538963025, label %47
    i32 -1221802474, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1067003071, i32 -1221802474
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %28, align 8
  %29 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %28, align 8
  store %"struct.std::_Bit_iterator"* %29, %"struct.std::_Bit_iterator"** %2
  %30 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2
  %31 = bitcast %"struct.std::_Bit_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"* %31)
  %32 = load i32, i32* @x.902
  %33 = load i32, i32* @y.903
  %34 = sub i32 %32, 843366082
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 843366082
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 538963025, i32 -1221802474
  store i32 %46, i32* %15
  br label %53

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2
  ret %"struct.std::_Bit_iterator"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %50, align 8
  %51 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %51 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"* %52)
  store i32 1067003071, i32* %15
  br label %53

; <label>:53:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca { i64*, i64 }
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.904
  %6 = load i32, i32* @y.905
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1476048006, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1476048006, label %18
    i32 655243115, label %26
    i32 -376716048, label %54
    i32 -297418194, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 655243115, i32 -297418194
  store i32 %25, i32* %14
  br label %72

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Bit_reference", align 8
  %28 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %28, align 8
  %29 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %28, align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to %"struct.std::_Bit_iterator_base"*
  %31 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = bitcast %"struct.std::_Bit_iterator"* %29 to %"struct.std::_Bit_iterator_base"*
  %34 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = shl i64 1, %36
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %27, i64* %32, i64 %37)
  %38 = bitcast %"struct.std::_Bit_reference"* %27 to { i64*, i64 }*
  %39 = load { i64*, i64 }, { i64*, i64 }* %38, align 8
  store { i64*, i64 } %39, { i64*, i64 }* %2
  %40 = load i32, i32* @x.904
  %41 = load i32, i32* @y.905
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -376716048, i32 -297418194
  store i32 %53, i32* %14
  br label %72

; <label>:54:                                     ; preds = %15
  %55 = load volatile { i64*, i64 }, { i64*, i64 }* %2
  ret { i64*, i64 } %55

; <label>:56:                                     ; preds = %15
  %57 = alloca %"struct.std::_Bit_reference", align 8
  %58 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %58, align 8
  %59 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %58, align 8
  %60 = bitcast %"struct.std::_Bit_iterator"* %59 to %"struct.std::_Bit_iterator_base"*
  %61 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %59 to %"struct.std::_Bit_iterator_base"*
  %64 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = zext i32 %65 to i64
  %67 = shl i64 1, %66
  %68 = shl i64 1, %66
  %69 = shl i64 1, %66
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %57, i64* %62, i64 %69)
  %70 = bitcast %"struct.std::_Bit_reference"* %57 to { i64*, i64 }*
  %71 = load { i64*, i64 }, { i64*, i64 }* %70, align 8
  store i32 655243115, i32* %14
  br label %72

; <label>:72:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.906
  %7 = load i32, i32* @y.907
  %8 = sub i32 %6, -2072660441
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -2072660441
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -409827423, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -409827423, label %20
    i32 -1082457926, label %28
    i32 1385471669, label %50
    i32 1956714762, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1082457926, i32 1956714762
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bit_reference"*, align 8
  %30 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %29, align 8
  store %"struct.std::_Bit_reference"* %1, %"struct.std::_Bit_reference"** %30, align 8
  %31 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %29, align 8
  %32 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %30, align 8
  %33 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %32) #3
  %34 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %31, i1 zeroext %33) #3
  store %"struct.std::_Bit_reference"* %34, %"struct.std::_Bit_reference"** %3
  %35 = load i32, i32* @x.906
  %36 = load i32, i32* @y.907
  %37 = add i32 %35, -2029293781
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -2029293781
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1385471669, i32 1956714762
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %3
  ret %"struct.std::_Bit_reference"* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"struct.std::_Bit_reference"*, align 8
  %54 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %53, align 8
  store %"struct.std::_Bit_reference"* %1, %"struct.std::_Bit_reference"** %54, align 8
  %55 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %53, align 8
  %56 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %54, align 8
  %57 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %56) #3
  %58 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %55, i1 zeroext %57) #3
  store i32 -1082457926, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Bit_iterator_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.908
  %7 = load i32, i32* @y.909
  %8 = add i32 %6, 1764199443
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1764199443
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -491842283, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %167
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -491842283, label %20
    i32 233918159, label %40
    i32 439338226, label %77
    i32 -1619733397, label %80
    i32 -2021885238, label %108
    i32 1968565194, label %130
    i32 -790349149, label %131
    i32 -1446288651, label %132
    i32 1336546764, label %160
  ]

; <label>:19:                                     ; preds = %17
  br label %167

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 233918159, i32 -1446288651
  store i32 %39, i32* %16
  br label %167

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %41, align 8
  %42 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %41, align 8
  store %"struct.std::_Bit_iterator_base"* %42, %"struct.std::_Bit_iterator_base"** %3
  %43 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %44 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = sub i32 %45, -1566179689
  %47 = add i32 %46, -1
  %48 = add i32 %47, -1566179689
  %49 = add i32 %45, -1
  store i32 %48, i32* %44, align 8
  %50 = icmp eq i32 %45, 0
  store i1 %50, i1* %2
  %51 = load i32, i32* @x.908
  %52 = load i32, i32* @y.909
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 439338226, i32 -1446288651
  store i32 %76, i32* %16
  br label %167

; <label>:77:                                     ; preds = %17
  %78 = load volatile i1, i1* %2
  %79 = select i1 %78, i32 -1619733397, i32 -790349149
  store i32 %79, i32* %16
  br label %167

; <label>:80:                                     ; preds = %17
  %81 = load i32, i32* @x.908
  %82 = load i32, i32* @y.909
  %83 = add i32 %81, 23240644
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 23240644
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -2021885238, i32 1336546764
  store i32 %107, i32* %16
  br label %167

; <label>:108:                                    ; preds = %17
  %109 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %110 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %109, i32 0, i32 1
  store i32 63, i32* %110, align 8
  %111 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %112 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %111, i32 0, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = getelementptr inbounds i64, i64* %113, i32 -1
  store i64* %114, i64** %112, align 8
  %115 = load i32, i32* @x.908
  %116 = load i32, i32* @y.909
  %117 = sub i32 %115, 1611332404
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 1611332404
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 1968565194, i32 1336546764
  store i32 %129, i32* %16
  br label %167

; <label>:130:                                    ; preds = %17
  store i32 -790349149, i32* %16
  br label %167

; <label>:131:                                    ; preds = %17
  ret void

; <label>:132:                                    ; preds = %17
  %133 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %133, align 8
  %134 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %133, align 8
  %135 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %134, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, -2493021
  %138 = sub i32 %137, -1
  %139 = sub i32 %138, -2493021
  %140 = sub i32 %136, -1
  %141 = mul i32 %139, -1
  %142 = shl i32 %136, -1
  %143 = shl i32 %136, -1
  %144 = shl i32 %136, -1
  %145 = add i32 %136, -1708552809
  %146 = sub i32 %145, -1
  %147 = sub i32 %146, -1708552809
  %148 = sub i32 %136, -1
  %149 = mul i32 %147, -1
  %150 = add i32 %136, 1573136815
  %151 = sub i32 %150, -1
  %152 = sub i32 %151, 1573136815
  %153 = sub i32 %136, -1
  %154 = mul i32 %152, -1
  %155 = add i32 %136, 1133435620
  %156 = add i32 %155, -1
  %157 = sub i32 %156, 1133435620
  %158 = add i32 %136, -1
  store i32 %157, i32* %135, align 8
  %159 = icmp eq i32 %136, 0
  store i32 233918159, i32* %16
  br label %167

; <label>:160:                                    ; preds = %17
  %161 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %162 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %161, i32 0, i32 1
  store i32 63, i32* %162, align 8
  %163 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %164 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %163, i32 0, i32 0
  %165 = load i64*, i64** %164, align 8
  %166 = getelementptr inbounds i64, i64* %165, i32 -1
  store i64* %166, i64** %164, align 8
  store i32 -2021885238, i32* %16
  br label %167

; <label>:167:                                    ; preds = %160, %132, %130, %108, %80, %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %2, align 8
  %3 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = xor i64 %8, -1
  %10 = xor i64 %6, %9
  %11 = and i64 %10, %6
  %12 = and i64 %6, %8
  %13 = icmp ne i64 %11, 0
  %14 = xor i1 %13, true
  %15 = and i1 false, %14
  %16 = xor i1 false, true
  %17 = and i1 %13, %16
  %18 = xor i1 true, true
  %19 = and i1 %18, false
  %20 = and i1 true, %16
  %21 = or i1 %15, %17
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = xor i1 %13, true
  %25 = xor i1 %23, true
  %26 = and i1 true, %25
  %27 = xor i1 true, true
  %28 = and i1 %23, %27
  %29 = or i1 %26, %28
  %30 = xor i1 %23, true
  ret i1 %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"*, i1 zeroext) #5 comdat align 2 {
  %3 = alloca i8
  %4 = alloca %"struct.std::_Bit_reference"*
  %5 = alloca %"struct.std::_Bit_reference"*, align 8
  %6 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %5, align 8
  %7 = zext i1 %1 to i8
  store i8 %7, i8* %6, align 1
  %8 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %5, align 8
  store %"struct.std::_Bit_reference"* %8, %"struct.std::_Bit_reference"** %4
  %9 = load i8, i8* %6, align 1
  store i8 %9, i8* %3
  %10 = alloca i32
  store i32 -2083933372, i32* %10
  br label %11

; <label>:11:                                     ; preds = %2, %87
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -2083933372, label %14
    i32 1977191472, label %18
    i32 849816946, label %30
    i32 -655530639, label %53
    i32 596068338, label %68
    i32 -1294846705, label %84
    i32 535211094, label %86
  ]

; <label>:13:                                     ; preds = %11
  br label %87

; <label>:14:                                     ; preds = %11
  %15 = load volatile i8, i8* %3
  %16 = trunc i8 %15 to i1
  %17 = select i1 %16, i32 1977191472, i32 849816946
  store i32 %17, i32* %10
  br label %87

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %20 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %23 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, %21
  %27 = xor i64 %25, %21
  %28 = or i64 %26, %27
  %29 = or i64 %25, %21
  store i64 %28, i64* %24, align 8
  store i32 -655530639, i32* %10
  br label %87

; <label>:30:                                     ; preds = %11
  %31 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %32 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = xor i64 %33, -1
  %35 = and i64 3723235542942284361, %34
  %36 = xor i64 3723235542942284361, -1
  %37 = and i64 %33, %36
  %38 = xor i64 -1, -1
  %39 = and i64 %38, 3723235542942284361
  %40 = and i64 -1, %36
  %41 = or i64 %35, %37
  %42 = or i64 %39, %40
  %43 = xor i64 %41, %42
  %44 = xor i64 %33, -1
  %45 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %46 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load i64, i64* %47, align 8
  %49 = xor i64 %43, -1
  %50 = xor i64 %48, %49
  %51 = and i64 %50, %48
  %52 = and i64 %48, %43
  store i64 %51, i64* %47, align 8
  store i32 -655530639, i32* %10
  br label %87

; <label>:53:                                     ; preds = %11
  %54 = load i32, i32* @x.914
  %55 = load i32, i32* @y.915
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 596068338, i32 535211094
  store i32 %67, i32* %10
  br label %87

; <label>:68:                                     ; preds = %11
  %69 = load i32, i32* @x.914
  %70 = load i32, i32* @y.915
  %71 = add i32 %69, -2103596129
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -2103596129
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -1294846705, i32 535211094
  store i32 %83, i32* %10
  br label %87

; <label>:84:                                     ; preds = %11
  %85 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  ret %"struct.std::_Bit_reference"* %85

; <label>:86:                                     ; preds = %11
  store i32 596068338, i32* %10
  br label %87

; <label>:87:                                     ; preds = %86, %68, %53, %30, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64*, i32) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPmiEvT_S1_RKT0_(i64*, i64*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %8, i64* %10, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64*, i32, i64*, i32, i1 zeroext) #0 comdat {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"struct.std::_Bit_reference", align 8
  %10 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %11 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 1
  store i32 %1, i32* %12, align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %3, i32* %15, align 8
  %16 = zext i1 %4 to i8
  store i8 %16, i8* %8, align 1
  %17 = alloca i32
  store i32 1789062637, i32* %17
  br label %18

; <label>:18:                                     ; preds = %5, %207
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1789062637, label %21
    i32 378657209, label %26
    i32 -444231522, label %53
    i32 920255616, label %90
    i32 1765079742, label %91
    i32 -656423634, label %119
    i32 -1730355917, label %136
    i32 -1184541833, label %137
    i32 -1036389912, label %165
    i32 399463891, label %193
    i32 350870313, label %194
    i32 -1073314641, label %204
    i32 862292613, label %206
  ]

; <label>:20:                                     ; preds = %18
  br label %207

; <label>:21:                                     ; preds = %18
  %22 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %23 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %24 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"* %22, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %23)
  %25 = select i1 %24, i32 378657209, i32 -1184541833
  store i32 %25, i32* %17
  br label %207

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.920
  %28 = load i32, i32* @y.921
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -444231522, i32 350870313
  store i32 %52, i32* %17
  br label %207

; <label>:53:                                     ; preds = %18
  %54 = load i8, i8* %8, align 1
  %55 = trunc i8 %54 to i1
  %56 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %57 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %58 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %57, i32 0, i32 0
  %59 = extractvalue { i64*, i64 } %56, 0
  store i64* %59, i64** %58, align 8
  %60 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %57, i32 0, i32 1
  %61 = extractvalue { i64*, i64 } %56, 1
  store i64 %61, i64* %60, align 8
  %62 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %9, i1 zeroext %55) #3
  %63 = load i32, i32* @x.920
  %64 = load i32, i32* @y.921
  %65 = sub i32 %63, 1162514720
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1162514720
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 920255616, i32 350870313
  store i32 %89, i32* %17
  br label %207

; <label>:90:                                     ; preds = %18
  store i32 1765079742, i32* %17
  br label %207

; <label>:91:                                     ; preds = %18
  %92 = load i32, i32* @x.920
  %93 = load i32, i32* @y.921
  %94 = sub i32 %92, -2144532642
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -2144532642
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -656423634, i32 -1073314641
  store i32 %118, i32* %17
  br label %207

; <label>:119:                                    ; preds = %18
  %120 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %6)
  %121 = load i32, i32* @x.920
  %122 = load i32, i32* @y.921
  %123 = add i32 %121, 1826596024
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, 1826596024
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  %135 = select i1 %133, i32 -1730355917, i32 -1073314641
  store i32 %135, i32* %17
  br label %207

; <label>:136:                                    ; preds = %18
  store i32 1789062637, i32* %17
  br label %207

; <label>:137:                                    ; preds = %18
  %138 = load i32, i32* @x.920
  %139 = load i32, i32* @y.921
  %140 = add i32 %138, -1712982082
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, -1712982082
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  %164 = select i1 %162, i32 -1036389912, i32 862292613
  store i32 %164, i32* %17
  br label %207

; <label>:165:                                    ; preds = %18
  %166 = load i32, i32* @x.920
  %167 = load i32, i32* @y.921
  %168 = add i32 %166, -1937105264
  %169 = sub i32 %168, 1
  %170 = sub i32 %169, -1937105264
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 false, true
  %179 = and i1 %176, false
  %180 = and i1 %174, %178
  %181 = and i1 %177, false
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 false, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  %192 = select i1 %190, i32 399463891, i32 862292613
  store i32 %192, i32* %17
  br label %207

; <label>:193:                                    ; preds = %18
  ret void

; <label>:194:                                    ; preds = %18
  %195 = load i8, i8* %8, align 1
  %196 = trunc i8 %195 to i1
  %197 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %198 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %199 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %198, i32 0, i32 0
  %200 = extractvalue { i64*, i64 } %197, 0
  store i64* %200, i64** %199, align 8
  %201 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %198, i32 0, i32 1
  %202 = extractvalue { i64*, i64 } %197, 1
  store i64 %202, i64* %201, align 8
  %203 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %9, i1 zeroext %196) #3
  store i32 -444231522, i32* %17
  br label %207

; <label>:204:                                    ; preds = %18
  %205 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %6)
  store i32 -656423634, i32* %17
  br label %207

; <label>:206:                                    ; preds = %18
  store i32 -1036389912, i32* %17
  br label %207

; <label>:207:                                    ; preds = %206, %204, %194, %165, %137, %136, %119, %91, %90, %53, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 684254530, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %62
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 684254530, label %14
    i32 -1634559949, label %19
    i32 -1383277219, label %23
    i32 -412226399, label %39
    i32 1476841417, label %57
    i32 41308336, label %58
    i32 -1286971419, label %59
  ]

; <label>:13:                                     ; preds = %11
  br label %62

; <label>:14:                                     ; preds = %11
  %15 = load i64*, i64** %4, align 8
  %16 = load i64*, i64** %5, align 8
  %17 = icmp ne i64* %15, %16
  %18 = select i1 %17, i32 -1634559949, i32 41308336
  store i32 %18, i32* %10
  br label %62

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -1383277219, i32* %10
  br label %62

; <label>:23:                                     ; preds = %11
  %24 = load i32, i32* @x.922
  %25 = load i32, i32* @y.923
  %26 = sub i32 %24, -1864869725
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1864869725
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -412226399, i32 -1286971419
  store i32 %38, i32* %10
  br label %62

; <label>:39:                                     ; preds = %11
  %40 = load i64*, i64** %4, align 8
  %41 = getelementptr inbounds i64, i64* %40, i32 1
  store i64* %41, i64** %4, align 8
  %42 = load i32, i32* @x.922
  %43 = load i32, i32* @y.923
  %44 = add i32 %42, -1024139018
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1024139018
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1476841417, i32 -1286971419
  store i32 %56, i32* %10
  br label %62

; <label>:57:                                     ; preds = %11
  store i32 684254530, i32* %10
  br label %62

; <label>:58:                                     ; preds = %11
  ret void

; <label>:59:                                     ; preds = %11
  %60 = load i64*, i64** %4, align 8
  %61 = getelementptr inbounds i64, i64* %60, i32 1
  store i64* %61, i64** %4, align 8
  store i32 -412226399, i32* %10
  br label %62

; <label>:62:                                     ; preds = %59, %57, %39, %23, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.928
  %7 = load i32, i32* @y.929
  %8 = add i32 %6, -74211494
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -74211494
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2072512184, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %115
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2072512184, label %20
    i32 -1733440710, label %40
    i32 458043403, label %84
    i32 -1915261363, label %86
  ]

; <label>:19:                                     ; preds = %17
  br label %115

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1733440710, i32 -1915261363
  store i32 %39, i32* %16
  br label %115

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %42 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %41, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %42, align 8
  %43 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %41, align 8
  %44 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %42, align 8
  %45 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"* %43, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %44)
  %46 = xor i1 %45, true
  %47 = and i1 false, %46
  %48 = xor i1 false, true
  %49 = and i1 %45, %48
  %50 = xor i1 true, true
  %51 = and i1 %50, false
  %52 = and i1 true, %48
  %53 = or i1 %47, %49
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = xor i1 %45, true
  store i1 %55, i1* %3
  %57 = load i32, i32* @x.928
  %58 = load i32, i32* @y.929
  %59 = sub i32 %57, -1491398709
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -1491398709
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 458043403, i32 -1915261363
  store i32 %83, i32* %16
  br label %115

; <label>:84:                                     ; preds = %17
  %85 = load volatile i1, i1* %3
  ret i1 %85

; <label>:86:                                     ; preds = %17
  %87 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %88 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %87, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %88, align 8
  %89 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %87, align 8
  %90 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %88, align 8
  %91 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"* %89, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %90)
  %92 = sub i1 %91, true
  %93 = sub i1 %92, true
  %94 = add i1 %93, true
  %95 = sub i1 %91, true
  %96 = mul i1 %94, true
  %97 = sub i1 false, false
  %98 = sub i1 %97, %91
  %99 = add i1 %98, false
  %100 = sub i1 false, %91
  %101 = sub i1 %99, false
  %102 = add i1 %101, true
  %103 = add i1 %102, false
  %104 = add i1 %99, true
  %105 = sub i1 false, true
  %106 = add i1 %91, %105
  %107 = sub i1 %91, true
  %108 = mul i1 %106, true
  %109 = xor i1 %91, true
  %110 = and i1 true, %109
  %111 = xor i1 true, true
  %112 = and i1 %91, %111
  %113 = or i1 %110, %112
  %114 = xor i1 %91, true
  store i32 -1733440710, i32* %16
  br label %115

; <label>:115:                                    ; preds = %86, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca %"struct.std::_Bit_iterator_base"*
  %7 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %8 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %7, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %8, align 8
  %9 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %7, align 8
  store %"struct.std::_Bit_iterator_base"* %9, %"struct.std::_Bit_iterator_base"** %6
  %10 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %6
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  store i64* %12, i64** %5
  %13 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %8, align 8
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %13, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  store i64* %15, i64** %4
  %16 = alloca i32
  store i32 965366155, i32* %16
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %2, %100
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 965366155, label %21
    i32 1633325936, label %26
    i32 1624128224, label %53
    i32 1312918457, label %88
    i32 -785365241, label %90
    i32 147064750, label %92
  ]

; <label>:20:                                     ; preds = %18
  br label %100

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64*, i64** %5
  %23 = load volatile i64*, i64** %4
  %24 = icmp eq i64* %22, %23
  %25 = select i1 %24, i32 1633325936, i32 -785365241
  store i32 %25, i32* %16
  store i1 false, i1* %17
  br label %100

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.932
  %28 = load i32, i32* @y.933
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 1624128224, i32 147064750
  store i32 %52, i32* %16
  br label %100

; <label>:53:                                     ; preds = %18
  %54 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %6
  %55 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %8, align 8
  %58 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %56, %59
  store i1 %60, i1* %3
  %61 = load i32, i32* @x.932
  %62 = load i32, i32* @y.933
  %63 = add i32 %61, 1489865746
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1489865746
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 1312918457, i32 147064750
  store i32 %87, i32* %16
  br label %100

; <label>:88:                                     ; preds = %18
  store i32 -785365241, i32* %16
  %89 = load volatile i1, i1* %3
  store i1 %89, i1* %17
  br label %100

; <label>:90:                                     ; preds = %18
  %91 = load i1, i1* %17
  ret i1 %91

; <label>:92:                                     ; preds = %18
  %93 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %6
  %94 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %8, align 8
  %97 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %95, %98
  store i32 1624128224, i32* %16
  br label %100

; <label>:100:                                    ; preds = %92, %88, %53, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"*) #5 comdat align 2 {
  %2 = alloca i32
  %3 = alloca %"struct.std::_Bit_iterator_base"*
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  store %"struct.std::_Bit_iterator_base"* %5, %"struct.std::_Bit_iterator_base"** %3
  %6 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %7 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %2
  %9 = load volatile i32, i32* %2
  %10 = sub i32 0, 1
  %11 = sub i32 %9, %10
  %12 = add i32 %9, 1
  store i32 %11, i32* %7, align 8
  %13 = alloca i32
  store i32 274321507, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %29
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 274321507, label %17
    i32 1818012501, label %21
    i32 728920822, label %28
  ]

; <label>:16:                                     ; preds = %14
  br label %29

; <label>:17:                                     ; preds = %14
  %18 = load volatile i32, i32* %2
  %19 = icmp eq i32 %18, 63
  %20 = select i1 %19, i32 1818012501, i32 728920822
  store i32 %20, i32* %13
  br label %29

; <label>:21:                                     ; preds = %14
  %22 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %23 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %22, i32 0, i32 1
  store i32 0, i32* %23, align 8
  %24 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %25 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %24, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i32 1
  store i64* %27, i64** %25, align 8
  store i32 728920822, i32* %13
  br label %29

; <label>:28:                                     ; preds = %14
  ret void

; <label>:29:                                     ; preds = %21, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.23"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %5, align 8
  %8 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  store i64 9223372036854775744, i64* %6, align 8
  %9 = bitcast %"class.std::vector.23"* %8 to %"struct.std::_Bvector_base"*
  %10 = call dereferenceable(1) %"class.std::allocator.24"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"* %9) #3
  %11 = call i64 @_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_(%"class.std::allocator.24"* dereferenceable(1) %10) #3
  store i64 %11, i64* %7, align 8
  %12 = load i64, i64* %7, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 1001564261, i32* %13
  %14 = alloca i64
  br label %15

; <label>:15:                                     ; preds = %1, %142
  %16 = load i32, i32* %13
  switch i32 %16, label %17 [
    i32 1001564261, label %18
    i32 622339049, label %22
    i32 -1564228828, label %50
    i32 -728247394, label %79
    i32 519266453, label %81
    i32 1051638236, label %82
    i32 -686989459, label %99
    i32 442343932, label %114
    i32 1935364534, label %116
    i32 -1917235900, label %141
  ]

; <label>:17:                                     ; preds = %15
  br label %142

; <label>:18:                                     ; preds = %15
  %19 = load volatile i64, i64* %4
  %20 = icmp ule i64 %19, 144115188075855871
  %21 = select i1 %20, i32 622339049, i32 519266453
  store i32 %21, i32* %13
  br label %142

; <label>:22:                                     ; preds = %15
  %23 = load i32, i32* @x.936
  %24 = load i32, i32* @y.937
  %25 = add i32 %23, -1903721392
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -1903721392
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -1564228828, i32 1935364534
  store i32 %49, i32* %13
  br label %142

; <label>:50:                                     ; preds = %15
  %51 = load i64, i64* %7, align 8
  %52 = mul i64 %51, 64
  store i64 %52, i64* %3
  %53 = load i32, i32* @x.936
  %54 = load i32, i32* @y.937
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -728247394, i32 1935364534
  store i32 %78, i32* %13
  br label %142

; <label>:79:                                     ; preds = %15
  store i32 1051638236, i32* %13
  %80 = load volatile i64, i64* %3
  store i64 %80, i64* %14
  br label %142

; <label>:81:                                     ; preds = %15
  store i32 1051638236, i32* %13
  store i64 9223372036854775744, i64* %14
  br label %142

; <label>:82:                                     ; preds = %15
  %83 = load i64, i64* %14
  store i64 %83, i64* %2
  %84 = load i32, i32* @x.936
  %85 = load i32, i32* @y.937
  %86 = add i32 %84, -1764343178
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -1764343178
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 -686989459, i32 -1917235900
  store i32 %98, i32* %13
  br label %142

; <label>:99:                                     ; preds = %15
  %100 = load i32, i32* @x.936
  %101 = load i32, i32* @y.937
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 442343932, i32 -1917235900
  store i32 %113, i32* %13
  br label %142

; <label>:114:                                    ; preds = %15
  %115 = load volatile i64, i64* %2
  ret i64 %115

; <label>:116:                                    ; preds = %15
  %117 = load i64, i64* %7, align 8
  %118 = shl i64 %117, 64
  %119 = sub i64 0, %117
  %120 = add i64 0, %119
  %121 = sub i64 0, %117
  %122 = add i64 %120, 880962986006742061
  %123 = add i64 %122, 64
  %124 = sub i64 %123, 880962986006742061
  %125 = add i64 %120, 64
  %126 = sub i64 0, 5166825885340053936
  %127 = sub i64 %126, %117
  %128 = add i64 %127, 5166825885340053936
  %129 = sub i64 0, %117
  %130 = add i64 %128, 6295349862941113294
  %131 = add i64 %130, 64
  %132 = sub i64 %131, 6295349862941113294
  %133 = add i64 %128, 64
  %134 = add i64 %117, 1343343892450249234
  %135 = sub i64 %134, 64
  %136 = sub i64 %135, 1343343892450249234
  %137 = sub i64 %117, 64
  %138 = mul i64 %136, 64
  %139 = shl i64 %117, 64
  %140 = mul i64 %117, 64
  store i32 -1564228828, i32* %13
  br label %142

; <label>:141:                                    ; preds = %15
  store i32 -686989459, i32* %13
  br label %142

; <label>:142:                                    ; preds = %141, %116, %99, %82, %81, %79, %50, %22, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_(%"class.std::allocator.24"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.24"*, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %2, align 8
  %3 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %2, align 8
  %4 = bitcast %"class.std::allocator.24"* %3 to %"class.__gnu_cxx::new_allocator.25"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.25"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.24"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %3 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"class.std::allocator.24"*
  ret %"class.std::allocator.24"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.24"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.24"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %3, align 8
  %6 = bitcast %"class.std::allocator.24"* %5 to %"class.__gnu_cxx::new_allocator.25"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.25"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.25"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.25"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -259714044, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -259714044, label %16
    i32 -426663959, label %21
    i32 -1874219500, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -426663959, i32 -1874219500
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %1, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %3, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %4, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %5, i32* %24, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %29, i32 %31)
  %33 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = extractvalue { i64*, i32 } %32, 0
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = extractvalue { i64*, i32 } %32, 1
  store i32 %37, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %14 to i8*
  %39 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %55, i32 %57, i64* %60, i32 %62, i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %75 = load { i64*, i32 }, { i64*, i32 }* %74, align 8
  ret { i64*, i32 } %75
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64*) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.956
  %8 = load i32, i32* @y.957
  %9 = sub i32 %7, 1989381148
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1989381148
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1883351842, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1883351842, label %21
    i32 804512238, label %29
    i32 346242781, label %64
    i32 -1373806044, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 804512238, i32 -1373806044
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8, align 1
  store i64* %0, i64** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64* %2, i64** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %34, i64* %35, i64* %36)
  store i64* %37, i64** %4
  %38 = load i32, i32* @x.956
  %39 = load i32, i32* @y.957
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 346242781, i32 -1373806044
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile i64*, i64** %4
  ret i64* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca i64*, align 8
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i8, align 1
  store i64* %0, i64** %67, align 8
  store i64* %1, i64** %68, align 8
  store i64* %2, i64** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i64*, i64** %67, align 8
  %72 = load i64*, i64** %68, align 8
  %73 = load i64*, i64** %69, align 8
  %74 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %71, i64* %72, i64* %73)
  store i32 804512238, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.958
  %11 = load i32, i32* @y.959
  %12 = sub i32 %10, -116491396
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -116491396
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1768837729, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %141
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1768837729, label %24
    i32 630806284, label %32
    i32 1069604072, label %66
    i32 -1637384666, label %69
    i32 -771792747, label %79
    i32 1031334216, label %85
  ]

; <label>:23:                                     ; preds = %21
  br label %141

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 630806284, i32 1031334216
  store i32 %31, i32* %20
  br label %141

; <label>:32:                                     ; preds = %21
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %7
  %34 = alloca i64*, align 8
  %35 = alloca i64*, align 8
  store i64** %35, i64*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile i64**, i64*** %7
  store i64* %0, i64** %37, align 8
  store i64* %1, i64** %34, align 8
  %38 = load volatile i64**, i64*** %6
  store i64* %2, i64** %38, align 8
  %39 = load i64*, i64** %34, align 8
  %40 = load volatile i64**, i64*** %7
  %41 = load i64*, i64** %40, align 8
  %42 = ptrtoint i64* %39 to i64
  %43 = ptrtoint i64* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 8
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.958
  %53 = load i32, i32* @y.959
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1069604072, i32 1031334216
  store i32 %65, i32* %20
  br label %141

; <label>:66:                                     ; preds = %21
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -1637384666, i32 -771792747
  store i32 %68, i32* %20
  br label %141

; <label>:69:                                     ; preds = %21
  %70 = load volatile i64**, i64*** %6
  %71 = load i64*, i64** %70, align 8
  %72 = bitcast i64* %71 to i8*
  %73 = load volatile i64**, i64*** %7
  %74 = load i64*, i64** %73, align 8
  %75 = bitcast i64* %74 to i8*
  %76 = load volatile i64*, i64** %5
  %77 = load i64, i64* %76, align 8
  %78 = mul i64 8, %77
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %72, i8* %75, i64 %78, i32 8, i1 false)
  store i32 -771792747, i32* %20
  br label %141

; <label>:79:                                     ; preds = %21
  %80 = load volatile i64**, i64*** %6
  %81 = load i64*, i64** %80, align 8
  %82 = load volatile i64*, i64** %5
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds i64, i64* %81, i64 %83
  ret i64* %84

; <label>:85:                                     ; preds = %21
  %86 = alloca i64*, align 8
  %87 = alloca i64*, align 8
  %88 = alloca i64*, align 8
  %89 = alloca i64, align 8
  store i64* %0, i64** %86, align 8
  store i64* %1, i64** %87, align 8
  store i64* %2, i64** %88, align 8
  %90 = load i64*, i64** %87, align 8
  %91 = load i64*, i64** %86, align 8
  %92 = ptrtoint i64* %90 to i64
  %93 = ptrtoint i64* %91 to i64
  %94 = add i64 %92, -36676698231859963
  %95 = sub i64 %94, %93
  %96 = sub i64 %95, -36676698231859963
  %97 = sub i64 %92, %93
  %98 = mul i64 %96, %93
  %99 = shl i64 %92, %93
  %100 = sub i64 0, %93
  %101 = add i64 %92, %100
  %102 = sub i64 %92, %93
  %103 = mul i64 %101, %93
  %104 = shl i64 %92, %93
  %105 = add i64 0, 6514865987978026407
  %106 = sub i64 %105, %92
  %107 = sub i64 %106, 6514865987978026407
  %108 = sub i64 0, %92
  %109 = sub i64 0, %107
  %110 = sub i64 0, %93
  %111 = add i64 %109, %110
  %112 = sub i64 0, %111
  %113 = add i64 %107, %93
  %114 = sub i64 0, %93
  %115 = add i64 %92, %114
  %116 = sub i64 %92, %93
  %117 = mul i64 %115, %93
  %118 = add i64 0, 5277966321052647767
  %119 = sub i64 %118, %92
  %120 = sub i64 %119, 5277966321052647767
  %121 = sub i64 0, %92
  %122 = sub i64 0, %120
  %123 = sub i64 0, %93
  %124 = add i64 %122, %123
  %125 = sub i64 0, %124
  %126 = add i64 %120, %93
  %127 = sub i64 0, %93
  %128 = add i64 %92, %127
  %129 = sub i64 %92, %93
  %130 = sub i64 0, %128
  %131 = add i64 0, %130
  %132 = sub i64 0, %128
  %133 = add i64 %131, 6456989281166765502
  %134 = add i64 %133, 8
  %135 = sub i64 %134, 6456989281166765502
  %136 = add i64 %131, 8
  %137 = shl i64 %128, 8
  %138 = sdiv exact i64 %128, 8
  store i64 %138, i64* %89, align 8
  %139 = load i64, i64* %89, align 8
  %140 = icmp ne i64 %139, 0
  store i32 630806284, i32* %20
  br label %141

; <label>:141:                                    ; preds = %85, %69, %66, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %1, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %2, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %3, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %4, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %5, i32* %25, align 8
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %30, i32 %32)
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %33, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %33, 1
  store i32 %38, i32* %37, align 8
  %39 = bitcast %"struct.std::_Bit_const_iterator"* %14 to i8*
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %43, i32 %45)
  %47 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %53 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %56, i32 %58)
  %60 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = extractvalue { i64*, i32 } %59, 0
  store i64* %62, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = extractvalue { i64*, i32 } %59, 1
  store i32 %64, i32* %63, align 8
  %65 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %67, i32 %69, i64* %72, i32 %74, i64* %77, i32 %79)
  %81 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = extractvalue { i64*, i32 } %80, 0
  store i64* %83, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = extractvalue { i64*, i32 } %80, 1
  store i32 %85, i32* %84, align 8
  %86 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  ret { i64*, i32 } %87
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64*, i32) #5 comdat {
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  %5 = alloca %"struct.std::_Bit_const_iterator", align 8
  %6 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %5 to i8*
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Bit_const_iterator"* %5 to { i64*, i32 }*
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = call { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64* %13, i32 %15)
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i32 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i32 } %16, 1
  store i32 %21, i32* %20, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %23 = load { i64*, i32 }, { i64*, i32 }* %22, align 8
  ret { i64*, i32 } %23
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  store i8 0, i8* %11, align 1
  %24 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %29 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64* %32, i32 %34, i64* %37, i32 %39, i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64*, i32) #0 comdat {
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  %5 = alloca %"struct.std::_Bit_const_iterator", align 8
  %6 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %5 to i8*
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Bit_const_iterator"* %5 to { i64*, i32 }*
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = call { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64* %13, i32 %15)
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i32 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i32 } %16, 1
  store i32 %21, i32* %20, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %23 = load { i64*, i32 }, { i64*, i32 }* %22, align 8
  ret { i64*, i32 } %23
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca i1
  %8 = alloca %"struct.std::_Bit_reference"*
  %9 = alloca i64*
  %10 = alloca %"struct.std::_Bit_iterator"*
  %11 = alloca %"struct.std::_Bit_const_iterator"*
  %12 = alloca %"struct.std::_Bit_iterator"*
  %13 = alloca i1
  %14 = alloca i1
  %15 = load i32, i32* @x.968
  %16 = load i32, i32* @y.969
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %14
  %23 = icmp slt i32 %16, 10
  store i1 %23, i1* %13
  %24 = alloca i32
  store i32 -1750093676, i32* %24
  br label %25

; <label>:25:                                     ; preds = %6, %179
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -1750093676, label %28
    i32 -1942751705, label %36
    i32 1847577329, label %74
    i32 1810140469, label %75
    i32 -1309952563, label %90
    i32 905704878, label %121
    i32 -913522942, label %124
    i32 -2005342395, label %141
    i32 -1183190252, label %148
    i32 -802057491, label %156
    i32 2066245669, label %175
  ]

; <label>:27:                                     ; preds = %25
  br label %179

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %14
  %30 = load volatile i1, i1* %13
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1942751705, i32 -802057491
  store i32 %35, i32* %24
  br label %179

; <label>:36:                                     ; preds = %25
  %37 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %37, %"struct.std::_Bit_iterator"** %12
  %38 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"struct.std::_Bit_const_iterator"* %38, %"struct.std::_Bit_const_iterator"** %11
  %39 = alloca %"struct.std::_Bit_const_iterator", align 8
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %40, %"struct.std::_Bit_iterator"** %10
  %41 = alloca i64, align 8
  store i64* %41, i64** %9
  %42 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %42, %"struct.std::_Bit_reference"** %8
  %43 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %11
  %44 = bitcast %"struct.std::_Bit_const_iterator"* %43 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  store i64* %0, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  store i32 %1, i32* %46, align 8
  %47 = bitcast %"struct.std::_Bit_const_iterator"* %39 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  store i64* %2, i64** %48, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  store i32 %3, i32* %49, align 8
  %50 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %51 = bitcast %"struct.std::_Bit_iterator"* %50 to { i64*, i32 }*
  %52 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %51, i32 0, i32 0
  store i64* %4, i64** %52, align 8
  %53 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %51, i32 0, i32 1
  store i32 %5, i32* %53, align 8
  %54 = bitcast %"struct.std::_Bit_const_iterator"* %39 to %"struct.std::_Bit_iterator_base"*
  %55 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %11
  %56 = bitcast %"struct.std::_Bit_const_iterator"* %55 to %"struct.std::_Bit_iterator_base"*
  %57 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %54, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %56)
  %58 = load volatile i64*, i64** %9
  store i64 %57, i64* %58, align 8
  %59 = load i32, i32* @x.968
  %60 = load i32, i32* @y.969
  %61 = sub i32 %59, -124997921
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -124997921
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 1847577329, i32 -802057491
  store i32 %73, i32* %24
  br label %179

; <label>:74:                                     ; preds = %25
  store i32 1810140469, i32* %24
  br label %179

; <label>:75:                                     ; preds = %25
  %76 = load i32, i32* @x.968
  %77 = load i32, i32* @y.969
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 -1309952563, i32 2066245669
  store i32 %89, i32* %24
  br label %179

; <label>:90:                                     ; preds = %25
  %91 = load volatile i64*, i64** %9
  %92 = load i64, i64* %91, align 8
  %93 = icmp sgt i64 %92, 0
  store i1 %93, i1* %7
  %94 = load i32, i32* @x.968
  %95 = load i32, i32* @y.969
  %96 = sub i32 %94, 2099951723
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 2099951723
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 905704878, i32 2066245669
  store i32 %120, i32* %24
  br label %179

; <label>:121:                                    ; preds = %25
  %122 = load volatile i1, i1* %7
  %123 = select i1 %122, i32 -913522942, i32 -1183190252
  store i32 %123, i32* %24
  br label %179

; <label>:124:                                    ; preds = %25
  %125 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %11
  %126 = call zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"* %125)
  %127 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %128 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %127)
  %129 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %8
  %130 = bitcast %"struct.std::_Bit_reference"* %129 to { i64*, i64 }*
  %131 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %130, i32 0, i32 0
  %132 = extractvalue { i64*, i64 } %128, 0
  store i64* %132, i64** %131, align 8
  %133 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %130, i32 0, i32 1
  %134 = extractvalue { i64*, i64 } %128, 1
  store i64 %134, i64* %133, align 8
  %135 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %8
  %136 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %135, i1 zeroext %126) #3
  %137 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %11
  %138 = call dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"* %137)
  %139 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %140 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %139)
  store i32 -2005342395, i32* %24
  br label %179

; <label>:141:                                    ; preds = %25
  %142 = load volatile i64*, i64** %9
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 0, -1
  %145 = sub i64 %143, %144
  %146 = add nsw i64 %143, -1
  %147 = load volatile i64*, i64** %9
  store i64 %145, i64* %147, align 8
  store i32 1810140469, i32* %24
  br label %179

; <label>:148:                                    ; preds = %25
  %149 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %150 = bitcast %"struct.std::_Bit_iterator"* %149 to i8*
  %151 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %10
  %152 = bitcast %"struct.std::_Bit_iterator"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %152, i64 16, i32 8, i1 false)
  %153 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %154 = bitcast %"struct.std::_Bit_iterator"* %153 to { i64*, i32 }*
  %155 = load { i64*, i32 }, { i64*, i32 }* %154, align 8
  ret { i64*, i32 } %155

; <label>:156:                                    ; preds = %25
  %157 = alloca %"struct.std::_Bit_iterator", align 8
  %158 = alloca %"struct.std::_Bit_const_iterator", align 8
  %159 = alloca %"struct.std::_Bit_const_iterator", align 8
  %160 = alloca %"struct.std::_Bit_iterator", align 8
  %161 = alloca i64, align 8
  %162 = alloca %"struct.std::_Bit_reference", align 8
  %163 = bitcast %"struct.std::_Bit_const_iterator"* %158 to { i64*, i32 }*
  %164 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %163, i32 0, i32 0
  store i64* %0, i64** %164, align 8
  %165 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %163, i32 0, i32 1
  store i32 %1, i32* %165, align 8
  %166 = bitcast %"struct.std::_Bit_const_iterator"* %159 to { i64*, i32 }*
  %167 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %166, i32 0, i32 0
  store i64* %2, i64** %167, align 8
  %168 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %166, i32 0, i32 1
  store i32 %3, i32* %168, align 8
  %169 = bitcast %"struct.std::_Bit_iterator"* %160 to { i64*, i32 }*
  %170 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %169, i32 0, i32 0
  store i64* %4, i64** %170, align 8
  %171 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %169, i32 0, i32 1
  store i32 %5, i32* %171, align 8
  %172 = bitcast %"struct.std::_Bit_const_iterator"* %159 to %"struct.std::_Bit_iterator_base"*
  %173 = bitcast %"struct.std::_Bit_const_iterator"* %158 to %"struct.std::_Bit_iterator_base"*
  %174 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %172, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %173)
  store i64 %174, i64* %161, align 8
  store i32 -1942751705, i32* %24
  br label %179

; <label>:175:                                    ; preds = %25
  %176 = load volatile i64*, i64** %9
  %177 = load i64, i64* %176, align 8
  %178 = icmp sgt i64 %177, 0
  store i32 -1309952563, i32* %24
  br label %179

; <label>:179:                                    ; preds = %175, %156, %141, %124, %121, %90, %75, %74, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.970
  %6 = load i32, i32* @y.971
  %7 = add i32 %5, -1848197531
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1848197531
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 597923202, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %100
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 597923202, label %19
    i32 337312320, label %39
    i32 -1924056482, label %79
    i32 -799646011, label %81
  ]

; <label>:18:                                     ; preds = %16
  br label %100

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 337312320, i32 -799646011
  store i32 %38, i32* %15
  br label %100

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %41 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %40, align 8
  %42 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %40, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %42 to %"struct.std::_Bit_iterator_base"*
  %44 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"struct.std::_Bit_const_iterator"* %42 to %"struct.std::_Bit_iterator_base"*
  %47 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = shl i64 1, %49
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %41, i64* %45, i64 %50)
  %51 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %41) #3
  store i1 %51, i1* %2
  %52 = load i32, i32* @x.970
  %53 = load i32, i32* @y.971
  %54 = sub i32 %52, -637765439
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -637765439
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1924056482, i32 -799646011
  store i32 %78, i32* %15
  br label %100

; <label>:79:                                     ; preds = %16
  %80 = load volatile i1, i1* %2
  ret i1 %80

; <label>:81:                                     ; preds = %16
  %82 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %83 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %82, align 8
  %84 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %82, align 8
  %85 = bitcast %"struct.std::_Bit_const_iterator"* %84 to %"struct.std::_Bit_iterator_base"*
  %86 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %85, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = bitcast %"struct.std::_Bit_const_iterator"* %84 to %"struct.std::_Bit_iterator_base"*
  %89 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = zext i32 %90 to i64
  %92 = sub i64 1, -3843891795405740682
  %93 = sub i64 %92, %91
  %94 = add i64 %93, -3843891795405740682
  %95 = sub i64 1, %91
  %96 = mul i64 %94, %91
  %97 = shl i64 1, %91
  %98 = shl i64 1, %91
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %83, i64* %87, i64 %98)
  %99 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %83) #3
  store i32 337312320, i32* %15
  br label %100

; <label>:100:                                    ; preds = %81, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64*, i32) #5 comdat align 2 {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.974
  %7 = load i32, i32* @y.975
  %8 = add i32 %6, -335644344
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -335644344
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1801300533, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1801300533, label %20
    i32 1718148276, label %28
    i32 -1496587071, label %65
    i32 -1534561065, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1718148276, i32 -1534561065
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bit_const_iterator", align 8
  %30 = alloca %"struct.std::_Bit_const_iterator", align 8
  %31 = bitcast %"struct.std::_Bit_const_iterator"* %30 to { i64*, i32 }*
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 0
  store i64* %0, i64** %32, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 1
  store i32 %1, i32* %33, align 8
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %29 to i8*
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %29 to { i64*, i32 }*
  %37 = load { i64*, i32 }, { i64*, i32 }* %36, align 8
  store { i64*, i32 } %37, { i64*, i32 }* %3
  %38 = load i32, i32* @x.974
  %39 = load i32, i32* @y.975
  %40 = add i32 %38, 1152322046
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1152322046
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1496587071, i32 -1534561065
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"struct.std::_Bit_const_iterator", align 8
  %69 = alloca %"struct.std::_Bit_const_iterator", align 8
  %70 = bitcast %"struct.std::_Bit_const_iterator"* %69 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  store i64* %0, i64** %71, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  store i32 %1, i32* %72, align 8
  %73 = bitcast %"struct.std::_Bit_const_iterator"* %68 to i8*
  %74 = bitcast %"struct.std::_Bit_const_iterator"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false)
  %75 = bitcast %"struct.std::_Bit_const_iterator"* %68 to { i64*, i32 }*
  %76 = load { i64*, i32 }, { i64*, i32 }* %75, align 8
  store i32 1718148276, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %1, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %2, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %3, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %4, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %5, i32* %25, align 8
  %26 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %27 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %30, i32 %32)
  %34 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %33, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %33, 1
  store i32 %38, i32* %37, align 8
  %39 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %40 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %43, i32 %45)
  %47 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %53 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %56, i32 %58)
  %60 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = extractvalue { i64*, i32 } %59, 0
  store i64* %62, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = extractvalue { i64*, i32 } %59, 1
  store i32 %64, i32* %63, align 8
  %65 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %67, i32 %69, i64* %72, i32 %74, i64* %77, i32 %79)
  %81 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = extractvalue { i64*, i32 } %80, 0
  store i64* %83, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = extractvalue { i64*, i32 } %80, 1
  store i32 %85, i32* %84, align 8
  %86 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  ret { i64*, i32 } %87
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  store i8 0, i8* %11, align 1
  %24 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %25 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = bitcast %"struct.std::_Bit_iterator"* %13 to i8*
  %27 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %29 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %32, i32 %34, i64* %37, i32 %39, i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca { i64*, i32 }
  %8 = alloca %"struct.std::_Bit_reference"*
  %9 = alloca %"struct.std::_Bit_reference"*
  %10 = alloca i64*
  %11 = alloca %"struct.std::_Bit_iterator"*
  %12 = alloca %"struct.std::_Bit_iterator"*
  %13 = alloca %"struct.std::_Bit_iterator"*
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.980
  %17 = load i32, i32* @y.981
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %15
  %24 = icmp slt i32 %17, 10
  store i1 %24, i1* %14
  %25 = alloca i32
  store i32 228904842, i32* %25
  br label %26

; <label>:26:                                     ; preds = %6, %205
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 228904842, label %29
    i32 -638107617, label %37
    i32 -1997784584, label %87
    i32 255830996, label %88
    i32 -2005666755, label %93
    i32 -1782514420, label %117
    i32 -1671594397, label %125
    i32 -2106588904, label %141
    i32 -1163316672, label %175
    i32 -475937271, label %177
    i32 2087897261, label %197
  ]

; <label>:28:                                     ; preds = %26
  br label %205

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %15
  %31 = load volatile i1, i1* %14
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -638107617, i32 -475937271
  store i32 %36, i32* %25
  br label %205

; <label>:37:                                     ; preds = %26
  %38 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %38, %"struct.std::_Bit_iterator"** %13
  %39 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %39, %"struct.std::_Bit_iterator"** %12
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  %41 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %41, %"struct.std::_Bit_iterator"** %11
  %42 = alloca i64, align 8
  store i64* %42, i64** %10
  %43 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %43, %"struct.std::_Bit_reference"** %9
  %44 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %44, %"struct.std::_Bit_reference"** %8
  %45 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %46 = bitcast %"struct.std::_Bit_iterator"* %45 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  store i64* %0, i64** %47, align 8
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  store i32 %1, i32* %48, align 8
  %49 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 0
  store i64* %2, i64** %50, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 1
  store i32 %3, i32* %51, align 8
  %52 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %53 = bitcast %"struct.std::_Bit_iterator"* %52 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  store i64* %4, i64** %54, align 8
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  store i32 %5, i32* %55, align 8
  %56 = bitcast %"struct.std::_Bit_iterator"* %40 to %"struct.std::_Bit_iterator_base"*
  %57 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %58 = bitcast %"struct.std::_Bit_iterator"* %57 to %"struct.std::_Bit_iterator_base"*
  %59 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %56, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %58)
  %60 = load volatile i64*, i64** %10
  store i64 %59, i64* %60, align 8
  %61 = load i32, i32* @x.980
  %62 = load i32, i32* @y.981
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -1997784584, i32 -475937271
  store i32 %86, i32* %25
  br label %205

; <label>:87:                                     ; preds = %26
  store i32 255830996, i32* %25
  br label %205

; <label>:88:                                     ; preds = %26
  %89 = load volatile i64*, i64** %10
  %90 = load i64, i64* %89, align 8
  %91 = icmp sgt i64 %90, 0
  %92 = select i1 %91, i32 -2005666755, i32 -1671594397
  store i32 %92, i32* %25
  br label %205

; <label>:93:                                     ; preds = %26
  %94 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %95 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %94)
  %96 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %9
  %97 = bitcast %"struct.std::_Bit_reference"* %96 to { i64*, i64 }*
  %98 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %97, i32 0, i32 0
  %99 = extractvalue { i64*, i64 } %95, 0
  store i64* %99, i64** %98, align 8
  %100 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %97, i32 0, i32 1
  %101 = extractvalue { i64*, i64 } %95, 1
  store i64 %101, i64* %100, align 8
  %102 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %103 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %102)
  %104 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %8
  %105 = bitcast %"struct.std::_Bit_reference"* %104 to { i64*, i64 }*
  %106 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %105, i32 0, i32 0
  %107 = extractvalue { i64*, i64 } %103, 0
  store i64* %107, i64** %106, align 8
  %108 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %105, i32 0, i32 1
  %109 = extractvalue { i64*, i64 } %103, 1
  store i64 %109, i64* %108, align 8
  %110 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %9
  %111 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %8
  %112 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %111, %"struct.std::_Bit_reference"* dereferenceable(16) %110) #3
  %113 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %114 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %113)
  %115 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %116 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %115)
  store i32 -1782514420, i32* %25
  br label %205

; <label>:117:                                    ; preds = %26
  %118 = load volatile i64*, i64** %10
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 8140677889607808020
  %121 = add i64 %120, -1
  %122 = sub i64 %121, 8140677889607808020
  %123 = add nsw i64 %119, -1
  %124 = load volatile i64*, i64** %10
  store i64 %122, i64* %124, align 8
  store i32 255830996, i32* %25
  br label %205

; <label>:125:                                    ; preds = %26
  %126 = load i32, i32* @x.980
  %127 = load i32, i32* @y.981
  %128 = sub i32 %126, -1920070732
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -1920070732
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  %140 = select i1 %138, i32 -2106588904, i32 2087897261
  store i32 %140, i32* %25
  br label %205

; <label>:141:                                    ; preds = %26
  %142 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %143 = bitcast %"struct.std::_Bit_iterator"* %142 to i8*
  %144 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %145 = bitcast %"struct.std::_Bit_iterator"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %145, i64 16, i32 8, i1 false)
  %146 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %147 = bitcast %"struct.std::_Bit_iterator"* %146 to { i64*, i32 }*
  %148 = load { i64*, i32 }, { i64*, i32 }* %147, align 8
  store { i64*, i32 } %148, { i64*, i32 }* %7
  %149 = load i32, i32* @x.980
  %150 = load i32, i32* @y.981
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  %174 = select i1 %172, i32 -1163316672, i32 2087897261
  store i32 %174, i32* %25
  br label %205

; <label>:175:                                    ; preds = %26
  %176 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %176

; <label>:177:                                    ; preds = %26
  %178 = alloca %"struct.std::_Bit_iterator", align 8
  %179 = alloca %"struct.std::_Bit_iterator", align 8
  %180 = alloca %"struct.std::_Bit_iterator", align 8
  %181 = alloca %"struct.std::_Bit_iterator", align 8
  %182 = alloca i64, align 8
  %183 = alloca %"struct.std::_Bit_reference", align 8
  %184 = alloca %"struct.std::_Bit_reference", align 8
  %185 = bitcast %"struct.std::_Bit_iterator"* %179 to { i64*, i32 }*
  %186 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %185, i32 0, i32 0
  store i64* %0, i64** %186, align 8
  %187 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %185, i32 0, i32 1
  store i32 %1, i32* %187, align 8
  %188 = bitcast %"struct.std::_Bit_iterator"* %180 to { i64*, i32 }*
  %189 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %188, i32 0, i32 0
  store i64* %2, i64** %189, align 8
  %190 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %188, i32 0, i32 1
  store i32 %3, i32* %190, align 8
  %191 = bitcast %"struct.std::_Bit_iterator"* %181 to { i64*, i32 }*
  %192 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %191, i32 0, i32 0
  store i64* %4, i64** %192, align 8
  %193 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %191, i32 0, i32 1
  store i32 %5, i32* %193, align 8
  %194 = bitcast %"struct.std::_Bit_iterator"* %180 to %"struct.std::_Bit_iterator_base"*
  %195 = bitcast %"struct.std::_Bit_iterator"* %179 to %"struct.std::_Bit_iterator_base"*
  %196 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %194, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %195)
  store i64 %196, i64* %182, align 8
  store i32 -638107617, i32* %25
  br label %205

; <label>:197:                                    ; preds = %26
  %198 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %199 = bitcast %"struct.std::_Bit_iterator"* %198 to i8*
  %200 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %201 = bitcast %"struct.std::_Bit_iterator"* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %199, i8* %201, i64 16, i32 8, i1 false)
  %202 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %203 = bitcast %"struct.std::_Bit_iterator"* %202 to { i64*, i32 }*
  %204 = load { i64*, i32 }, { i64*, i32 }* %203, align 8
  store i32 -2106588904, i32* %25
  br label %205

; <label>:205:                                    ; preds = %197, %177, %141, %125, %117, %93, %88, %87, %37, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.24"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.982
  %7 = load i32, i32* @y.983
  %8 = sub i32 %6, 2020059942
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2020059942
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -702612608, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -702612608, label %20
    i32 1182013101, label %40
    i32 1461676052, label %63
    i32 -1833904295, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1182013101, i32 -1833904295
  store i32 %39, i32* %16
  br label %72

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.24"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %41, align 8
  %45 = bitcast %"class.std::allocator.24"* %44 to %"class.__gnu_cxx::new_allocator.25"*
  %46 = load i64*, i64** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.25"* %45, i64* %46, i64 %47)
  %48 = load i32, i32* @x.982
  %49 = load i32, i32* @y.983
  %50 = add i32 %48, -1697351164
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1697351164
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1461676052, i32 -1833904295
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.24"*, align 8
  %66 = alloca i64*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.24"* %0, %"class.std::allocator.24"** %65, align 8
  store i64* %1, i64** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.24"*, %"class.std::allocator.24"** %65, align 8
  %69 = bitcast %"class.std::allocator.24"* %68 to %"class.__gnu_cxx::new_allocator.25"*
  %70 = load i64*, i64** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.25"* %69, i64* %70, i64 %71)
  store i32 1182013101, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.25"*, i64*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.25"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.25"* %0, %"class.__gnu_cxx::new_allocator.25"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.25"*, %"class.__gnu_cxx::new_allocator.25"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.986
  %6 = load i32, i32* @y.987
  %7 = sub i32 %5, 804490212
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 804490212
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1344120113, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %103
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1344120113, label %19
    i32 523091504, label %27
    i32 779128826, label %60
    i32 -535681742, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %103

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 523091504, i32 -535681742
  store i32 %26, i32* %15
  br label %103

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %28, align 8
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %28, align 8
  %30 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = ptrtoint i32* %33 to i64
  %39 = ptrtoint i32* %37 to i64
  %40 = add i64 %38, -2593266414896569569
  %41 = sub i64 %40, %39
  %42 = sub i64 %41, -2593266414896569569
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 4
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.986
  %46 = load i32, i32* @y.987
  %47 = add i32 %45, -1729237411
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1729237411
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 779128826, i32 -535681742
  store i32 %59, i32* %15
  br label %103

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %63, align 8
  %64 = load %"class.std::vector.18"*, %"class.std::vector.18"** %63, align 8
  %65 = bitcast %"class.std::vector.18"* %64 to %"struct.std::_Vector_base.19"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %66, i32 0, i32 1
  %68 = load i32*, i32** %67, align 8
  %69 = bitcast %"class.std::vector.18"* %64 to %"struct.std::_Vector_base.19"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = ptrtoint i32* %68 to i64
  %74 = ptrtoint i32* %72 to i64
  %75 = add i64 %73, 2183295433104910291
  %76 = sub i64 %75, %74
  %77 = sub i64 %76, 2183295433104910291
  %78 = sub i64 %73, %74
  %79 = mul i64 %77, %74
  %80 = sub i64 %73, -139580101676152543
  %81 = sub i64 %80, %74
  %82 = add i64 %81, -139580101676152543
  %83 = sub i64 %73, %74
  %84 = mul i64 %82, %74
  %85 = sub i64 %73, 8946518621753135570
  %86 = sub i64 %85, %74
  %87 = add i64 %86, 8946518621753135570
  %88 = sub i64 %73, %74
  %89 = sub i64 %87, 7512624295407481039
  %90 = sub i64 %89, 4
  %91 = add i64 %90, 7512624295407481039
  %92 = sub i64 %87, 4
  %93 = mul i64 %91, 4
  %94 = sub i64 0, %87
  %95 = add i64 0, %94
  %96 = sub i64 0, %87
  %97 = add i64 %95, -7816074974423672022
  %98 = add i64 %97, 4
  %99 = sub i64 %98, -7816074974423672022
  %100 = add i64 %95, 4
  %101 = shl i64 %87, 4
  %102 = sdiv exact i64 %87, 4
  store i32 523091504, i32* %15
  br label %103

; <label>:103:                                    ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.18"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.988
  %4 = load i32, i32* @y.989
  %5 = add i32 %3, -371091280
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -371091280
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %410

; <label>:17:                                     ; preds = %2, %410
  %18 = alloca %"class.std::vector.18"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %18, align 8
  store i64 %1, i64* %19, align 8
  %26 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = icmp ne i64 %27, 0
  %29 = load i32, i32* @x.988
  %30 = load i32, i32* @y.989
  %31 = add i32 %29, -318429346
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -318429346
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %410

; <label>:55:                                     ; preds = %17
  br i1 %28, label %56, label %330

; <label>:56:                                     ; preds = %55
  %57 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %58, i32 0, i32 2
  %60 = load i32*, i32** %59, align 8
  %61 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62, i32 0, i32 1
  %64 = load i32*, i32** %63, align 8
  %65 = ptrtoint i32* %60 to i64
  %66 = ptrtoint i32* %64 to i64
  %67 = sub i64 %65, 198850775789576772
  %68 = sub i64 %67, %66
  %69 = add i64 %68, 198850775789576772
  %70 = sub i64 %65, %66
  %71 = sdiv exact i64 %69, 4
  %72 = load i64, i64* %19, align 8
  %73 = icmp uge i64 %71, %72
  br i1 %73, label %74, label %126

; <label>:74:                                     ; preds = %56
  %75 = load i32, i32* @x.988
  %76 = load i32, i32* @y.989
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %422

; <label>:88:                                     ; preds = %74, %422
  %89 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %90, i32 0, i32 1
  %92 = load i32*, i32** %91, align 8
  %93 = load i64, i64* %19, align 8
  %94 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %95 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %94) #3
  %96 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %92, i64 %93, %"class.std::allocator.20"* dereferenceable(1) %95)
  %97 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %98 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %98, i32 0, i32 1
  store i32* %96, i32** %99, align 8
  %100 = load i32, i32* @x.988
  %101 = load i32, i32* @y.989
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %422

; <label>:125:                                    ; preds = %88
  br label %329

; <label>:126:                                    ; preds = %56
  %127 = load i32, i32* @x.988
  %128 = load i32, i32* @y.989
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %434

; <label>:140:                                    ; preds = %126, %434
  %141 = load i64, i64* %19, align 8
  %142 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.18"* %26, i64 %141, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %142, i64* %20, align 8
  %143 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %26) #3
  store i64 %143, i64* %21, align 8
  %144 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %145 = load i64, i64* %20, align 8
  %146 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.19"* %144, i64 %145)
  store i32* %146, i32** %22, align 8
  %147 = load i32*, i32** %22, align 8
  store i32* %147, i32** %23, align 8
  %148 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %149, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %152, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %153, i32 0, i32 1
  %155 = load i32*, i32** %154, align 8
  %156 = load i32*, i32** %22, align 8
  %157 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %158 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %157) #3
  %159 = load i32, i32* @x.988
  %160 = load i32, i32* @y.989
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 false, true
  %171 = and i1 %168, false
  %172 = and i1 %166, %170
  %173 = and i1 %169, false
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 false, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %434

; <label>:184:                                    ; preds = %140
  %185 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %151, i32* %155, i32* %156, %"class.std::allocator.20"* dereferenceable(1) %158)
          to label %186 unwind label %223

; <label>:186:                                    ; preds = %184
  store i32* %185, i32** %23, align 8
  %187 = load i32*, i32** %23, align 8
  %188 = load i64, i64* %19, align 8
  %189 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %190 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %189) #3
  %191 = invoke i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %187, i64 %188, %"class.std::allocator.20"* dereferenceable(1) %190)
          to label %192 unwind label %223

; <label>:192:                                    ; preds = %186
  %193 = load i32, i32* @x.988
  %194 = load i32, i32* @y.989
  %195 = add i32 %193, -1468290060
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, -1468290060
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %453

; <label>:207:                                    ; preds = %192, %453
  store i32* %191, i32** %23, align 8
  %208 = load i32, i32* @x.988
  %209 = load i32, i32* @y.989
  %210 = add i32 %208, -1415703302
  %211 = sub i32 %210, 1
  %212 = sub i32 %211, -1415703302
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  br i1 %220, label %222, label %453

; <label>:222:                                    ; preds = %207
  br label %284

; <label>:223:                                    ; preds = %186, %184
  %224 = landingpad { i8*, i32 }
          catch i8* null
  %225 = extractvalue { i8*, i32 } %224, 0
  store i8* %225, i8** %24, align 8
  %226 = extractvalue { i8*, i32 } %224, 1
  store i32 %226, i32* %25, align 4
  br label %227

; <label>:227:                                    ; preds = %223
  %228 = load i8*, i8** %24, align 8
  %229 = call i8* @__cxa_begin_catch(i8* %228) #3
  %230 = load i32*, i32** %22, align 8
  %231 = load i32*, i32** %23, align 8
  %232 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %233 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %232) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %230, i32* %231, %"class.std::allocator.20"* dereferenceable(1) %233)
          to label %234 unwind label %239

; <label>:234:                                    ; preds = %227
  %235 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %236 = load i32*, i32** %22, align 8
  %237 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.19"* %235, i32* %236, i64 %237)
          to label %238 unwind label %239

; <label>:238:                                    ; preds = %234
  invoke void @__cxa_rethrow() #13
          to label %409 unwind label %239

; <label>:239:                                    ; preds = %238, %234, %227
  %240 = landingpad { i8*, i32 }
          cleanup
  %241 = extractvalue { i8*, i32 } %240, 0
  store i8* %241, i8** %24, align 8
  %242 = extractvalue { i8*, i32 } %240, 1
  store i32 %242, i32* %25, align 4
  invoke void @__cxa_end_catch()
          to label %243 unwind label %365

; <label>:243:                                    ; preds = %239
  %244 = load i32, i32* @x.988
  %245 = load i32, i32* @y.989
  %246 = sub i32 0, 1
  %247 = add i32 %244, %246
  %248 = sub i32 %244, 1
  %249 = mul i32 %244, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %245, 10
  %253 = and i1 %251, %252
  %254 = xor i1 %251, %252
  %255 = or i1 %253, %254
  %256 = or i1 %251, %252
  br i1 %255, label %257, label %454

; <label>:257:                                    ; preds = %243, %454
  %258 = load i32, i32* @x.988
  %259 = load i32, i32* @y.989
  %260 = sub i32 0, 1
  %261 = add i32 %258, %260
  %262 = sub i32 %258, 1
  %263 = mul i32 %258, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %259, 10
  %267 = xor i1 %265, true
  %268 = xor i1 %266, true
  %269 = xor i1 true, true
  %270 = and i1 %267, true
  %271 = and i1 %265, %269
  %272 = and i1 %268, true
  %273 = and i1 %266, %269
  %274 = or i1 %270, %271
  %275 = or i1 %272, %273
  %276 = xor i1 %274, %275
  %277 = or i1 %267, %268
  %278 = xor i1 %277, true
  %279 = or i1 true, %269
  %280 = and i1 %278, %279
  %281 = or i1 %276, %280
  %282 = or i1 %265, %266
  br i1 %281, label %283, label %454

; <label>:283:                                    ; preds = %257
  br label %360

; <label>:284:                                    ; preds = %222
  %285 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %286, i32 0, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %290 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %289, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %290, i32 0, i32 1
  %292 = load i32*, i32** %291, align 8
  %293 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %294 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %293) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %288, i32* %292, %"class.std::allocator.20"* dereferenceable(1) %294)
  %295 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %296 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %297 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %296, i32 0, i32 0
  %298 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %297, i32 0, i32 0
  %299 = load i32*, i32** %298, align 8
  %300 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %301 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %300, i32 0, i32 0
  %302 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %301, i32 0, i32 2
  %303 = load i32*, i32** %302, align 8
  %304 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %305 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %305, i32 0, i32 0
  %307 = load i32*, i32** %306, align 8
  %308 = ptrtoint i32* %303 to i64
  %309 = ptrtoint i32* %307 to i64
  %310 = sub i64 %308, -7067665317501698279
  %311 = sub i64 %310, %309
  %312 = add i64 %311, -7067665317501698279
  %313 = sub i64 %308, %309
  %314 = sdiv exact i64 %312, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.19"* %295, i32* %299, i64 %314)
  %315 = load i32*, i32** %22, align 8
  %316 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %317 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %316, i32 0, i32 0
  %318 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %317, i32 0, i32 0
  store i32* %315, i32** %318, align 8
  %319 = load i32*, i32** %23, align 8
  %320 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %321 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %320, i32 0, i32 0
  %322 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %321, i32 0, i32 1
  store i32* %319, i32** %322, align 8
  %323 = load i32*, i32** %22, align 8
  %324 = load i64, i64* %20, align 8
  %325 = getelementptr inbounds i32, i32* %323, i64 %324
  %326 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %327 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %326, i32 0, i32 0
  %328 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %327, i32 0, i32 2
  store i32* %325, i32** %328, align 8
  br label %329

; <label>:329:                                    ; preds = %284, %125
  br label %330

; <label>:330:                                    ; preds = %329, %55
  %331 = load i32, i32* @x.988
  %332 = load i32, i32* @y.989
  %333 = sub i32 0, 1
  %334 = add i32 %331, %333
  %335 = sub i32 %331, 1
  %336 = mul i32 %331, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %332, 10
  %340 = and i1 %338, %339
  %341 = xor i1 %338, %339
  %342 = or i1 %340, %341
  %343 = or i1 %338, %339
  br i1 %342, label %344, label %455

; <label>:344:                                    ; preds = %330, %455
  %345 = load i32, i32* @x.988
  %346 = load i32, i32* @y.989
  %347 = sub i32 %345, 1893138554
  %348 = sub i32 %347, 1
  %349 = add i32 %348, 1893138554
  %350 = sub i32 %345, 1
  %351 = mul i32 %345, %349
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %346, 10
  %355 = and i1 %353, %354
  %356 = xor i1 %353, %354
  %357 = or i1 %355, %356
  %358 = or i1 %353, %354
  br i1 %357, label %359, label %455

; <label>:359:                                    ; preds = %344
  ret void

; <label>:360:                                    ; preds = %283
  %361 = load i8*, i8** %24, align 8
  %362 = load i32, i32* %25, align 4
  %363 = insertvalue { i8*, i32 } undef, i8* %361, 0
  %364 = insertvalue { i8*, i32 } %363, i32 %362, 1
  resume { i8*, i32 } %364

; <label>:365:                                    ; preds = %239
  %366 = load i32, i32* @x.988
  %367 = load i32, i32* @y.989
  %368 = sub i32 0, 1
  %369 = add i32 %366, %368
  %370 = sub i32 %366, 1
  %371 = mul i32 %366, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %367, 10
  %375 = and i1 %373, %374
  %376 = xor i1 %373, %374
  %377 = or i1 %375, %376
  %378 = or i1 %373, %374
  br i1 %377, label %379, label %456

; <label>:379:                                    ; preds = %365, %456
  %380 = landingpad { i8*, i32 }
          catch i8* null
  %381 = extractvalue { i8*, i32 } %380, 0
  call void @__clang_call_terminate(i8* %381) #10
  %382 = load i32, i32* @x.988
  %383 = load i32, i32* @y.989
  %384 = sub i32 %382, -1617014067
  %385 = sub i32 %384, 1
  %386 = add i32 %385, -1617014067
  %387 = sub i32 %382, 1
  %388 = mul i32 %382, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %383, 10
  %392 = xor i1 %390, true
  %393 = xor i1 %391, true
  %394 = xor i1 false, true
  %395 = and i1 %392, false
  %396 = and i1 %390, %394
  %397 = and i1 %393, false
  %398 = and i1 %391, %394
  %399 = or i1 %395, %396
  %400 = or i1 %397, %398
  %401 = xor i1 %399, %400
  %402 = or i1 %392, %393
  %403 = xor i1 %402, true
  %404 = or i1 false, %394
  %405 = and i1 %403, %404
  %406 = or i1 %401, %405
  %407 = or i1 %390, %391
  br i1 %406, label %408, label %456

; <label>:408:                                    ; preds = %379
  unreachable

; <label>:409:                                    ; preds = %238
  unreachable

; <label>:410:                                    ; preds = %17, %2
  %411 = alloca %"class.std::vector.18"*, align 8
  %412 = alloca i64, align 8
  %413 = alloca i64, align 8
  %414 = alloca i64, align 8
  %415 = alloca i32*, align 8
  %416 = alloca i32*, align 8
  %417 = alloca i8*
  %418 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %411, align 8
  store i64 %1, i64* %412, align 8
  %419 = load %"class.std::vector.18"*, %"class.std::vector.18"** %411, align 8
  %420 = load i64, i64* %412, align 8
  %421 = icmp ne i64 %420, 0
  br label %17

; <label>:422:                                    ; preds = %88, %74
  %423 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %424 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %423, i32 0, i32 0
  %425 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %424, i32 0, i32 1
  %426 = load i32*, i32** %425, align 8
  %427 = load i64, i64* %19, align 8
  %428 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %429 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %428) #3
  %430 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %426, i64 %427, %"class.std::allocator.20"* dereferenceable(1) %429)
  %431 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %432 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %431, i32 0, i32 0
  %433 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %432, i32 0, i32 1
  store i32* %430, i32** %433, align 8
  br label %88

; <label>:434:                                    ; preds = %140, %126
  %435 = load i64, i64* %19, align 8
  %436 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.18"* %26, i64 %435, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %436, i64* %20, align 8
  %437 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %26) #3
  store i64 %437, i64* %21, align 8
  %438 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %439 = load i64, i64* %20, align 8
  %440 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.19"* %438, i64 %439)
  store i32* %440, i32** %22, align 8
  %441 = load i32*, i32** %22, align 8
  store i32* %441, i32** %23, align 8
  %442 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %442, i32 0, i32 0
  %444 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %443, i32 0, i32 0
  %445 = load i32*, i32** %444, align 8
  %446 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %447 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %446, i32 0, i32 0
  %448 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %447, i32 0, i32 1
  %449 = load i32*, i32** %448, align 8
  %450 = load i32*, i32** %22, align 8
  %451 = bitcast %"class.std::vector.18"* %26 to %"struct.std::_Vector_base.19"*
  %452 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %451) #3
  br label %140

; <label>:453:                                    ; preds = %207, %192
  store i32* %191, i32** %23, align 8
  br label %207

; <label>:454:                                    ; preds = %257, %243
  br label %257

; <label>:455:                                    ; preds = %344, %330
  br label %344

; <label>:456:                                    ; preds = %379, %365
  %457 = landingpad { i8*, i32 }
          catch i8* null
  %458 = extractvalue { i8*, i32 } %457, 0
  call void @__clang_call_terminate(i8* %458) #10
  br label %379
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.18"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %12 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator.20"* dereferenceable(1) %12)
          to label %13 unwind label %60

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.990
  %15 = load i32, i32* @y.991
  %16 = add i32 %14, -1146605978
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1146605978
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %63

; <label>:28:                                     ; preds = %13, %63
  %29 = load i32*, i32** %4, align 8
  %30 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31, i32 0, i32 1
  store i32* %29, i32** %32, align 8
  %33 = load i32, i32* @x.990
  %34 = load i32, i32* @y.991
  %35 = add i32 %33, 1107163108
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1107163108
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %63

; <label>:59:                                     ; preds = %28
  ret void

; <label>:60:                                     ; preds = %2
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #10
  unreachable

; <label>:63:                                     ; preds = %28, %13
  %64 = load i32*, i32** %4, align 8
  %65 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %66, i32 0, i32 1
  store i32* %64, i32** %67, align 8
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %7, i64 %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca %"class.std::vector.18"*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i8**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.994
  %15 = load i32, i32* @y.995
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 -1578150535, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %214
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -1578150535, label %28
    i32 148282407, label %36
    i32 2130993745, label %71
    i32 -1700015950, label %74
    i32 1934262069, label %77
    i32 -79988825, label %98
    i32 1264411481, label %105
    i32 -740747320, label %108
    i32 1863066137, label %123
    i32 2006932941, label %153
    i32 31250451, label %155
    i32 2114660951, label %172
    i32 178734084, label %188
    i32 -1422441559, label %190
    i32 888083663, label %210
    i32 -1569321477, label %213
  ]

; <label>:27:                                     ; preds = %25
  br label %214

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 148282407, i32 -1422441559
  store i32 %35, i32* %23
  br label %214

; <label>:36:                                     ; preds = %25
  %37 = alloca %"class.std::vector.18"*, align 8
  %38 = alloca i64, align 8
  store i64* %38, i64** %11
  %39 = alloca i8*, align 8
  store i8** %39, i8*** %10
  %40 = alloca i64, align 8
  store i64* %40, i64** %9
  %41 = alloca i64, align 8
  store i64* %41, i64** %8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %37, align 8
  %42 = load volatile i64*, i64** %11
  store i64 %1, i64* %42, align 8
  %43 = load volatile i8**, i8*** %10
  store i8* %2, i8** %43, align 8
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %37, align 8
  store %"class.std::vector.18"* %44, %"class.std::vector.18"** %7
  %45 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %46 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.18"* %45) #3
  %47 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %48 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %47) #3
  %49 = add i64 %46, -1646100062029275393
  %50 = sub i64 %49, %48
  %51 = sub i64 %50, -1646100062029275393
  %52 = sub i64 %46, %48
  %53 = load volatile i64*, i64** %11
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %51, %54
  store i1 %55, i1* %6
  %56 = load i32, i32* @x.994
  %57 = load i32, i32* @y.995
  %58 = sub i32 %56, 1558037653
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1558037653
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 2130993745, i32 -1422441559
  store i32 %70, i32* %23
  br label %214

; <label>:71:                                     ; preds = %25
  %72 = load volatile i1, i1* %6
  %73 = select i1 %72, i32 -1700015950, i32 1934262069
  store i32 %73, i32* %23
  br label %214

; <label>:74:                                     ; preds = %25
  %75 = load volatile i8**, i8*** %10
  %76 = load i8*, i8** %75, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %76) #13
  unreachable

; <label>:77:                                     ; preds = %25
  %78 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %79 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %78) #3
  %80 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %81 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %80) #3
  %82 = load volatile i64*, i64** %8
  store i64 %81, i64* %82, align 8
  %83 = load volatile i64*, i64** %11
  %84 = load volatile i64*, i64** %8
  %85 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %84, i64* dereferenceable(8) %83)
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %79, -2095319146937360354
  %88 = add i64 %87, %86
  %89 = add i64 %88, -2095319146937360354
  %90 = add i64 %79, %86
  %91 = load volatile i64*, i64** %9
  store i64 %89, i64* %91, align 8
  %92 = load volatile i64*, i64** %9
  %93 = load i64, i64* %92, align 8
  %94 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %95 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %94) #3
  %96 = icmp ult i64 %93, %95
  %97 = select i1 %96, i32 1264411481, i32 -79988825
  store i32 %97, i32* %23
  br label %214

; <label>:98:                                     ; preds = %25
  %99 = load volatile i64*, i64** %9
  %100 = load i64, i64* %99, align 8
  %101 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %102 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.18"* %101) #3
  %103 = icmp ugt i64 %100, %102
  %104 = select i1 %103, i32 1264411481, i32 -740747320
  store i32 %104, i32* %23
  br label %214

; <label>:105:                                    ; preds = %25
  %106 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %107 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.18"* %106) #3
  store i32 31250451, i32* %23
  store i64 %107, i64* %24
  br label %214

; <label>:108:                                    ; preds = %25
  %109 = load i32, i32* @x.994
  %110 = load i32, i32* @y.995
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 1863066137, i32 888083663
  store i32 %122, i32* %23
  br label %214

; <label>:123:                                    ; preds = %25
  %124 = load volatile i64*, i64** %9
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %5
  %126 = load i32, i32* @x.994
  %127 = load i32, i32* @y.995
  %128 = add i32 %126, 1960434907
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 1960434907
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 2006932941, i32 888083663
  store i32 %152, i32* %23
  br label %214

; <label>:153:                                    ; preds = %25
  store i32 31250451, i32* %23
  %154 = load volatile i64, i64* %5
  store i64 %154, i64* %24
  br label %214

; <label>:155:                                    ; preds = %25
  %156 = load i64, i64* %24
  store i64 %156, i64* %4
  %157 = load i32, i32* @x.994
  %158 = load i32, i32* @y.995
  %159 = add i32 %157, -2098372982
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -2098372982
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  %171 = select i1 %169, i32 2114660951, i32 -1569321477
  store i32 %171, i32* %23
  br label %214

; <label>:172:                                    ; preds = %25
  %173 = load i32, i32* @x.994
  %174 = load i32, i32* @y.995
  %175 = add i32 %173, -447592914
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, -447592914
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  %187 = select i1 %185, i32 178734084, i32 -1569321477
  store i32 %187, i32* %23
  br label %214

; <label>:188:                                    ; preds = %25
  %189 = load volatile i64, i64* %4
  ret i64 %189

; <label>:190:                                    ; preds = %25
  %191 = alloca %"class.std::vector.18"*, align 8
  %192 = alloca i64, align 8
  %193 = alloca i8*, align 8
  %194 = alloca i64, align 8
  %195 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %191, align 8
  store i64 %1, i64* %192, align 8
  store i8* %2, i8** %193, align 8
  %196 = load %"class.std::vector.18"*, %"class.std::vector.18"** %191, align 8
  %197 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.18"* %196) #3
  %198 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %196) #3
  %199 = add i64 %197, -1461807985452881565
  %200 = sub i64 %199, %198
  %201 = sub i64 %200, -1461807985452881565
  %202 = sub i64 %197, %198
  %203 = mul i64 %201, %198
  %204 = add i64 %197, -2447256533753489994
  %205 = sub i64 %204, %198
  %206 = sub i64 %205, -2447256533753489994
  %207 = sub i64 %197, %198
  %208 = load i64, i64* %192, align 8
  %209 = icmp ult i64 %206, %208
  store i32 148282407, i32* %23
  br label %214

; <label>:210:                                    ; preds = %25
  %211 = load volatile i64*, i64** %9
  %212 = load i64, i64* %211, align 8
  store i32 1863066137, i32* %23
  br label %214

; <label>:213:                                    ; preds = %25
  store i32 2114660951, i32* %23
  br label %214

; <label>:214:                                    ; preds = %213, %210, %190, %172, %155, %153, %123, %108, %105, %98, %77, %71, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca %"struct.std::_Vector_base.19"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.std::_Vector_base.19"* %8, %"struct.std::_Vector_base.19"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -1416075296, i32* %10
  %11 = alloca i32*
  br label %12

; <label>:12:                                     ; preds = %2, %66
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -1416075296, label %15
    i32 -947534824, label %19
    i32 217164759, label %34
    i32 747533305, label %55
    i32 -1243373354, label %57
    i32 -70913814, label %58
    i32 -513396570, label %60
  ]

; <label>:14:                                     ; preds = %12
  br label %66

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -947534824, i32 -1243373354
  store i32 %18, i32* %10
  br label %66

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.996
  %21 = load i32, i32* @y.997
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 217164759, i32 -513396570
  store i32 %33, i32* %10
  br label %66

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %36 to %"class.std::allocator.20"*
  %38 = load i64, i64* %7, align 8
  %39 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.20"* dereferenceable(1) %37, i64 %38)
  store i32* %39, i32** %3
  %40 = load i32, i32* @x.996
  %41 = load i32, i32* @y.997
  %42 = add i32 %40, 1263199900
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1263199900
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 747533305, i32 -513396570
  store i32 %54, i32* %10
  br label %66

; <label>:55:                                     ; preds = %12
  store i32 -70913814, i32* %10
  %56 = load volatile i32*, i32** %3
  store i32* %56, i32** %11
  br label %66

; <label>:57:                                     ; preds = %12
  store i32 -70913814, i32* %10
  store i32* null, i32** %11
  br label %66

; <label>:58:                                     ; preds = %12
  %59 = load i32*, i32** %11
  ret i32* %59

; <label>:60:                                     ; preds = %12
  %61 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %62 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62 to %"class.std::allocator.20"*
  %64 = load i64, i64* %7, align 8
  %65 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.20"* dereferenceable(1) %63, i64 %64)
  store i32 217164759, i32* %10
  br label %66

; <label>:66:                                     ; preds = %60, %57, %55, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.34", align 8
  %10 = alloca %"class.std::move_iterator.34", align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %9, i32 0, i32 0
  store i32* %12, i32** %13, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %10, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %20, i32* %22, i32* %17, %"class.std::allocator.20"* dereferenceable(1) %18)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1000
  %7 = load i32, i32* @y.1001
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -59553730, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -59553730, label %19
    i32 -2118030656, label %39
    i32 -1017678615, label %60
    i32 2124313097, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2118030656, i32 2124313097
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca %"class.std::allocator.20"*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %42, align 8
  %43 = load i32*, i32** %40, align 8
  %44 = load i32*, i32** %41, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %43, i32* %44)
  %45 = load i32, i32* @x.1000
  %46 = load i32, i32* @y.1001
  %47 = add i32 %45, -1684337233
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1684337233
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1017678615, i32 2124313097
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca i32*, align 8
  %63 = alloca i32*, align 8
  %64 = alloca %"class.std::allocator.20"*, align 8
  store i32* %0, i32** %62, align 8
  store i32* %1, i32** %63, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %64, align 8
  %65 = load i32*, i32** %62, align 8
  %66 = load i32*, i32** %63, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %65, i32* %66)
  store i32 -2118030656, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.19"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.1002
  %11 = load i32, i32* @y.1003
  %12 = add i32 %10, -1504403938
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1504403938
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1960781609, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %100
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1960781609, label %24
    i32 722668116, label %44
    i32 -1835839345, label %81
    i32 -1010505153, label %84
    i32 -864855887, label %92
    i32 -1053714304, label %93
  ]

; <label>:23:                                     ; preds = %21
  br label %100

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 722668116, i32 -1053714304
  store i32 %43, i32* %20
  br label %100

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.19"*, align 8
  %46 = alloca i32*, align 8
  store i32** %46, i32*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %45, align 8
  %48 = load volatile i32**, i32*** %7
  store i32* %1, i32** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %45, align 8
  store %"struct.std::_Vector_base.19"* %50, %"struct.std::_Vector_base.19"** %5
  %51 = load volatile i32**, i32*** %7
  %52 = load i32*, i32** %51, align 8
  %53 = icmp ne i32* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.1002
  %55 = load i32, i32* @y.1003
  %56 = sub i32 %54, -598654030
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -598654030
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1835839345, i32 -1053714304
  store i32 %80, i32* %20
  br label %100

; <label>:81:                                     ; preds = %21
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 -1010505153, i32 -864855887
  store i32 %83, i32* %20
  br label %100

; <label>:84:                                     ; preds = %21
  %85 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %86 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %85, i32 0, i32 0
  %87 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %86 to %"class.std::allocator.20"*
  %88 = load volatile i32**, i32*** %7
  %89 = load i32*, i32** %88, align 8
  %90 = load volatile i64*, i64** %6
  %91 = load i64, i64* %90, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.20"* dereferenceable(1) %87, i32* %89, i64 %91)
  store i32 -864855887, i32* %20
  br label %100

; <label>:92:                                     ; preds = %21
  ret void

; <label>:93:                                     ; preds = %21
  %94 = alloca %"struct.std::_Vector_base.19"*, align 8
  %95 = alloca i32*, align 8
  %96 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %94, align 8
  store i32* %1, i32** %95, align 8
  store i64 %2, i64* %96, align 8
  %97 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %94, align 8
  %98 = load i32*, i32** %95, align 8
  %99 = icmp ne i32* %98, null
  store i32 722668116, i32* %20
  br label %100

; <label>:100:                                    ; preds = %93, %84, %81, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %6, i64 %7)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1006
  %7 = load i32, i32* @y.1007
  %8 = sub i32 %6, -882891578
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -882891578
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1061256399, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1061256399, label %20
    i32 -1510740739, label %28
    i32 1287943938, label %50
    i32 -347052210, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1510740739, i32 -347052210
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32, align 4
  store i32* %0, i32** %29, align 8
  store i64 %1, i64* %30, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = load i64, i64* %30, align 8
  store i32 0, i32* %31, align 4
  %34 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %32, i64 %33, i32* dereferenceable(4) %31)
  store i32* %34, i32** %3
  %35 = load i32, i32* @x.1006
  %36 = load i32, i32* @y.1007
  %37 = sub i32 %35, -1054562298
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1054562298
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1287943938, i32 -347052210
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile i32*, i32** %3
  ret i32* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca i32*, align 8
  %54 = alloca i64, align 8
  %55 = alloca i32, align 4
  store i32* %0, i32** %53, align 8
  store i64 %1, i64* %54, align 8
  %56 = load i32*, i32** %53, align 8
  %57 = load i64, i64* %54, align 8
  store i32 0, i32* %55, align 4
  %58 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %56, i64 %57, i32* dereferenceable(4) %55)
  store i32 -1510740739, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1008
  %8 = load i32, i32* @y.1009
  %9 = sub i32 %7, -1336342389
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1336342389
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -147980717, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -147980717, label %21
    i32 -1878761440, label %41
    i32 -1820540914, label %76
    i32 -1238115883, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1878761440, i32 -1238115883
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i64 %1, i64* %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load i32*, i32** %44, align 8
  %49 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %46, i64 %47, i32* dereferenceable(4) %48)
  store i32* %49, i32** %4
  %50 = load i32, i32* @x.1008
  %51 = load i32, i32* @y.1009
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1820540914, i32 -1238115883
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile i32*, i32** %4
  ret i32* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i32*, align 8
  %80 = alloca i64, align 8
  %81 = alloca i32*, align 8
  store i32* %0, i32** %79, align 8
  store i64 %1, i64* %80, align 8
  store i32* %2, i32** %81, align 8
  %82 = load i32*, i32** %79, align 8
  %83 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %82)
  %84 = load i64, i64* %80, align 8
  %85 = load i32*, i32** %81, align 8
  %86 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %83, i64 %84, i32* dereferenceable(4) %85)
  store i32 -1878761440, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 1075482147, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %80
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1075482147, label %16
    i32 -1794073063, label %20
    i32 -379958394, label %36
    i32 -573686931, label %66
    i32 -1664385944, label %67
    i32 1672098118, label %75
    i32 1001423928, label %77
  ]

; <label>:15:                                     ; preds = %13
  br label %80

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -1794073063, i32 1672098118
  store i32 %19, i32* %12
  br label %80

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.1010
  %22 = load i32, i32* @y.1011
  %23 = add i32 %21, 100855070
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 100855070
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -379958394, i32 1001423928
  store i32 %35, i32* %12
  br label %80

; <label>:36:                                     ; preds = %13
  %37 = load i32, i32* %7, align 4
  %38 = load i32*, i32** %4, align 8
  store i32 %37, i32* %38, align 4
  %39 = load i32, i32* @x.1010
  %40 = load i32, i32* @y.1011
  %41 = add i32 %39, -1375810726
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1375810726
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -573686931, i32 1001423928
  store i32 %65, i32* %12
  br label %80

; <label>:66:                                     ; preds = %13
  store i32 -1664385944, i32* %12
  br label %80

; <label>:67:                                     ; preds = %13
  %68 = load i64, i64* %8, align 8
  %69 = add i64 %68, -3472408924319845472
  %70 = add i64 %69, -1
  %71 = sub i64 %70, -3472408924319845472
  %72 = add i64 %68, -1
  store i64 %71, i64* %8, align 8
  %73 = load i32*, i32** %4, align 8
  %74 = getelementptr inbounds i32, i32* %73, i32 1
  store i32* %74, i32** %4, align 8
  store i32 1075482147, i32* %12
  br label %80

; <label>:75:                                     ; preds = %13
  %76 = load i32*, i32** %4, align 8
  ret i32* %76

; <label>:77:                                     ; preds = %13
  %78 = load i32, i32* %7, align 4
  %79 = load i32*, i32** %4, align 8
  store i32 %78, i32* %79, align 4
  store i32 -379958394, i32* %12
  br label %80

; <label>:80:                                     ; preds = %77, %67, %66, %36, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.20"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1020
  %6 = load i32, i32* @y.1021
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2089835583, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2089835583, label %18
    i32 1610735276, label %26
    i32 1288556232, label %58
    i32 1068773703, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1610735276, i32 1068773703
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %27, align 8
  %28 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29 to %"class.std::allocator.20"*
  store %"class.std::allocator.20"* %30, %"class.std::allocator.20"** %2
  %31 = load i32, i32* @x.1020
  %32 = load i32, i32* @y.1021
  %33 = sub i32 %31, -1412627388
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1412627388
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1288556232, i32 1068773703
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.20"*, %"class.std::allocator.20"** %2
  ret %"class.std::allocator.20"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %61, align 8
  %62 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %63 to %"class.std::allocator.20"*
  store i32 1610735276, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1026
  %9 = load i32, i32* @y.1027
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -2011531920, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -2011531920, label %21
    i32 -1665581969, label %29
    i32 -68806442, label %65
    i32 -521797810, label %68
    i32 1287011560, label %69
    i32 113801772, label %75
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1665581969, i32 113801772
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  %32 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %30, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  store i8* %2, i8** %32, align 8
  %34 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %30, align 8
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %34) #3
  %38 = icmp ugt i64 %36, %37
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.1026
  %40 = load i32, i32* @y.1027
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -68806442, i32 113801772
  store i32 %64, i32* %17
  br label %83

; <label>:65:                                     ; preds = %18
  %66 = load volatile i1, i1* %4
  %67 = select i1 %66, i32 -521797810, i32 1287011560
  store i32 %67, i32* %17
  br label %83

; <label>:68:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:69:                                     ; preds = %18
  %70 = load volatile i64*, i64** %5
  %71 = load i64, i64* %70, align 8
  %72 = mul i64 %71, 4
  %73 = call i8* @_Znwm(i64 %72)
  %74 = bitcast i8* %73 to i32*
  ret i32* %74

; <label>:75:                                     ; preds = %18
  %76 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8* %2, i8** %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %79) #3
  %82 = icmp ugt i64 %80, %81
  store i32 -1665581969, i32* %17
  br label %83

; <label>:83:                                     ; preds = %75, %65, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.34", align 8
  %6 = alloca %"class.std::move_iterator.34", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.34", align 8
  %10 = alloca %"class.std::move_iterator.34", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.34"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.34"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.34"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1030
  %6 = load i32, i32* @y.1031
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -599944886, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -599944886, label %18
    i32 1313902762, label %38
    i32 -1854406160, label %70
    i32 -956387919, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1313902762, i32 -956387919
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.34", align 8
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.34"* %39, i32* %41)
  %42 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %39, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.1030
  %45 = load i32, i32* @y.1031
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1854406160, i32 -956387919
  store i32 %69, i32* %14
  br label %78

; <label>:70:                                     ; preds = %15
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::move_iterator.34", align 8
  %74 = alloca i32*, align 8
  store i32* %0, i32** %74, align 8
  %75 = load i32*, i32** %74, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.34"* %73, i32* %75)
  %76 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %73, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  store i32 1313902762, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.34", align 8
  %5 = alloca %"class.std::move_iterator.34", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.34", align 8
  %9 = alloca %"class.std::move_iterator.34", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.34"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.34"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.34", align 8
  %5 = alloca %"class.std::move_iterator.34", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator.34", align 8
  %8 = alloca %"class.std::move_iterator.34", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator.34"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.34"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1036
  %8 = load i32, i32* @y.1037
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1075113665, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %97
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1075113665, label %20
    i32 164334149, label %28
    i32 31567004, label %75
    i32 -2089931646, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %97

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 164334149, i32 -2089931646
  store i32 %27, i32* %16
  br label %97

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.34", align 8
  %30 = alloca %"class.std::move_iterator.34", align 8
  %31 = alloca i32*, align 8
  %32 = alloca %"class.std::move_iterator.34", align 8
  %33 = alloca %"class.std::move_iterator.34", align 8
  %34 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %29, i32 0, i32 0
  store i32* %0, i32** %34, align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %30, i32 0, i32 0
  store i32* %1, i32** %35, align 8
  store i32* %2, i32** %31, align 8
  %36 = bitcast %"class.std::move_iterator.34"* %32 to i8*
  %37 = bitcast %"class.std::move_iterator.34"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %32, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %39)
  %41 = bitcast %"class.std::move_iterator.34"* %33 to i8*
  %42 = bitcast %"class.std::move_iterator.34"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %33, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %44)
  %46 = load i32*, i32** %31, align 8
  %47 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %40, i32* %45, i32* %46)
  store i32* %47, i32** %4
  %48 = load i32, i32* @x.1036
  %49 = load i32, i32* @y.1037
  %50 = sub i32 %48, 242670206
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 242670206
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 31567004, i32 -2089931646
  store i32 %74, i32* %16
  br label %97

; <label>:75:                                     ; preds = %17
  %76 = load volatile i32*, i32** %4
  ret i32* %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %"class.std::move_iterator.34", align 8
  %79 = alloca %"class.std::move_iterator.34", align 8
  %80 = alloca i32*, align 8
  %81 = alloca %"class.std::move_iterator.34", align 8
  %82 = alloca %"class.std::move_iterator.34", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %78, i32 0, i32 0
  store i32* %0, i32** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %79, i32 0, i32 0
  store i32* %1, i32** %84, align 8
  store i32* %2, i32** %80, align 8
  %85 = bitcast %"class.std::move_iterator.34"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.34"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %81, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %88)
  %90 = bitcast %"class.std::move_iterator.34"* %82 to i8*
  %91 = bitcast %"class.std::move_iterator.34"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 8, i1 false)
  %92 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %82, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %93)
  %95 = load i32*, i32** %80, align 8
  %96 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %89, i32* %94, i32* %95)
  store i32 164334149, i32* %16
  br label %97

; <label>:97:                                     ; preds = %77, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1038
  %8 = load i32, i32* @y.1039
  %9 = sub i32 %7, -1751141288
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1751141288
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -582823306, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -582823306, label %21
    i32 -987746842, label %29
    i32 -1452688349, label %67
    i32 -1275360744, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -987746842, i32 -1275360744
  store i32 %28, i32* %17
  br label %80

; <label>:29:                                     ; preds = %18
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %33)
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %35)
  %37 = load i32*, i32** %32, align 8
  %38 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %37)
  %39 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %34, i32* %36, i32* %38)
  store i32* %39, i32** %4
  %40 = load i32, i32* @x.1038
  %41 = load i32, i32* @y.1039
  %42 = add i32 %40, 762594098
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 762594098
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1452688349, i32 -1275360744
  store i32 %66, i32* %17
  br label %80

; <label>:67:                                     ; preds = %18
  %68 = load volatile i32*, i32** %4
  ret i32* %68

; <label>:69:                                     ; preds = %18
  %70 = alloca i32*, align 8
  %71 = alloca i32*, align 8
  %72 = alloca i32*, align 8
  store i32* %0, i32** %70, align 8
  store i32* %1, i32** %71, align 8
  store i32* %2, i32** %72, align 8
  %73 = load i32*, i32** %70, align 8
  %74 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %73)
  %75 = load i32*, i32** %71, align 8
  %76 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %75)
  %77 = load i32*, i32** %72, align 8
  %78 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %77)
  %79 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %74, i32* %76, i32* %78)
  store i32 -987746842, i32* %17
  br label %80

; <label>:80:                                     ; preds = %69, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.34", align 8
  %3 = alloca %"class.std::move_iterator.34", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator.34"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.34"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i32**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.1044
  %12 = load i32, i32* @y.1045
  %13 = add i32 %11, 2037966695
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 2037966695
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -1859409623, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %295
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1859409623, label %25
    i32 744661360, label %33
    i32 -1405020571, label %80
    i32 -1477845887, label %83
    i32 -2100175267, label %111
    i32 -1255109855, label %136
    i32 2050162399, label %137
    i32 -579200676, label %153
    i32 -274522336, label %185
    i32 -1325970743, label %187
    i32 -1108934913, label %249
    i32 -1328921603, label %289
  ]

; <label>:24:                                     ; preds = %22
  br label %295

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 744661360, i32 -1325970743
  store i32 %32, i32* %21
  br label %295

; <label>:33:                                     ; preds = %22
  %34 = alloca i32*, align 8
  store i32** %34, i32*** %8
  %35 = alloca i32*, align 8
  %36 = alloca i32*, align 8
  store i32** %36, i32*** %7
  %37 = alloca i64, align 8
  store i64* %37, i64** %6
  %38 = load volatile i32**, i32*** %8
  store i32* %0, i32** %38, align 8
  store i32* %1, i32** %35, align 8
  %39 = load volatile i32**, i32*** %7
  store i32* %2, i32** %39, align 8
  %40 = load i32*, i32** %35, align 8
  %41 = load volatile i32**, i32*** %8
  %42 = load i32*, i32** %41, align 8
  %43 = ptrtoint i32* %40 to i64
  %44 = ptrtoint i32* %42 to i64
  %45 = sub i64 %43, -177541373962154274
  %46 = sub i64 %45, %44
  %47 = add i64 %46, -177541373962154274
  %48 = sub i64 %43, %44
  %49 = sdiv exact i64 %47, 4
  %50 = load volatile i64*, i64** %6
  store i64 %49, i64* %50, align 8
  %51 = load volatile i64*, i64** %6
  %52 = load i64, i64* %51, align 8
  %53 = icmp ne i64 %52, 0
  store i1 %53, i1* %5
  %54 = load i32, i32* @x.1044
  %55 = load i32, i32* @y.1045
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1405020571, i32 -1325970743
  store i32 %79, i32* %21
  br label %295

; <label>:80:                                     ; preds = %22
  %81 = load volatile i1, i1* %5
  %82 = select i1 %81, i32 -1477845887, i32 2050162399
  store i32 %82, i32* %21
  br label %295

; <label>:83:                                     ; preds = %22
  %84 = load i32, i32* @x.1044
  %85 = load i32, i32* @y.1045
  %86 = sub i32 %84, 1066662641
  %87 = sub i32 %86, 1
  %88 = add i32 %87, 1066662641
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 -2100175267, i32 -1108934913
  store i32 %110, i32* %21
  br label %295

; <label>:111:                                    ; preds = %22
  %112 = load volatile i32**, i32*** %7
  %113 = load i32*, i32** %112, align 8
  %114 = bitcast i32* %113 to i8*
  %115 = load volatile i32**, i32*** %8
  %116 = load i32*, i32** %115, align 8
  %117 = bitcast i32* %116 to i8*
  %118 = load volatile i64*, i64** %6
  %119 = load i64, i64* %118, align 8
  %120 = mul i64 4, %119
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %114, i8* %117, i64 %120, i32 4, i1 false)
  %121 = load i32, i32* @x.1044
  %122 = load i32, i32* @y.1045
  %123 = add i32 %121, -595295260
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -595295260
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  %135 = select i1 %133, i32 -1255109855, i32 -1108934913
  store i32 %135, i32* %21
  br label %295

; <label>:136:                                    ; preds = %22
  store i32 2050162399, i32* %21
  br label %295

; <label>:137:                                    ; preds = %22
  %138 = load i32, i32* @x.1044
  %139 = load i32, i32* @y.1045
  %140 = add i32 %138, 1111618690
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, 1111618690
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  %152 = select i1 %150, i32 -579200676, i32 -1328921603
  store i32 %152, i32* %21
  br label %295

; <label>:153:                                    ; preds = %22
  %154 = load volatile i32**, i32*** %7
  %155 = load i32*, i32** %154, align 8
  %156 = load volatile i64*, i64** %6
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds i32, i32* %155, i64 %157
  store i32* %158, i32** %4
  %159 = load i32, i32* @x.1044
  %160 = load i32, i32* @y.1045
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 true, true
  %171 = and i1 %168, true
  %172 = and i1 %166, %170
  %173 = and i1 %169, true
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 true, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  %184 = select i1 %182, i32 -274522336, i32 -1328921603
  store i32 %184, i32* %21
  br label %295

; <label>:185:                                    ; preds = %22
  %186 = load volatile i32*, i32** %4
  ret i32* %186

; <label>:187:                                    ; preds = %22
  %188 = alloca i32*, align 8
  %189 = alloca i32*, align 8
  %190 = alloca i32*, align 8
  %191 = alloca i64, align 8
  store i32* %0, i32** %188, align 8
  store i32* %1, i32** %189, align 8
  store i32* %2, i32** %190, align 8
  %192 = load i32*, i32** %189, align 8
  %193 = load i32*, i32** %188, align 8
  %194 = ptrtoint i32* %192 to i64
  %195 = ptrtoint i32* %193 to i64
  %196 = shl i64 %194, %195
  %197 = sub i64 0, %195
  %198 = add i64 %194, %197
  %199 = sub i64 %194, %195
  %200 = mul i64 %198, %195
  %201 = sub i64 0, %195
  %202 = add i64 %194, %201
  %203 = sub i64 %194, %195
  %204 = mul i64 %202, %195
  %205 = add i64 0, -6405442839729663220
  %206 = sub i64 %205, %194
  %207 = sub i64 %206, -6405442839729663220
  %208 = sub i64 0, %194
  %209 = add i64 %207, -5891994703799263008
  %210 = add i64 %209, %195
  %211 = sub i64 %210, -5891994703799263008
  %212 = add i64 %207, %195
  %213 = sub i64 0, %194
  %214 = add i64 0, %213
  %215 = sub i64 0, %194
  %216 = sub i64 %214, 2060067543327869315
  %217 = add i64 %216, %195
  %218 = add i64 %217, 2060067543327869315
  %219 = add i64 %214, %195
  %220 = shl i64 %194, %195
  %221 = add i64 0, -4581512477921081954
  %222 = sub i64 %221, %194
  %223 = sub i64 %222, -4581512477921081954
  %224 = sub i64 0, %194
  %225 = sub i64 0, %223
  %226 = sub i64 0, %195
  %227 = add i64 %225, %226
  %228 = sub i64 0, %227
  %229 = add i64 %223, %195
  %230 = sub i64 0, %195
  %231 = add i64 %194, %230
  %232 = sub i64 %194, %195
  %233 = shl i64 %231, 4
  %234 = sub i64 0, %231
  %235 = add i64 0, %234
  %236 = sub i64 0, %231
  %237 = add i64 %235, -4725670634097439298
  %238 = add i64 %237, 4
  %239 = sub i64 %238, -4725670634097439298
  %240 = add i64 %235, 4
  %241 = sub i64 %231, 2720408654191434482
  %242 = sub i64 %241, 4
  %243 = add i64 %242, 2720408654191434482
  %244 = sub i64 %231, 4
  %245 = mul i64 %243, 4
  %246 = sdiv exact i64 %231, 4
  store i64 %246, i64* %191, align 8
  %247 = load i64, i64* %191, align 8
  %248 = icmp ne i64 %247, 0
  store i32 744661360, i32* %21
  br label %295

; <label>:249:                                    ; preds = %22
  %250 = load volatile i32**, i32*** %7
  %251 = load i32*, i32** %250, align 8
  %252 = bitcast i32* %251 to i8*
  %253 = load volatile i32**, i32*** %8
  %254 = load i32*, i32** %253, align 8
  %255 = bitcast i32* %254 to i8*
  %256 = load volatile i64*, i64** %6
  %257 = load i64, i64* %256, align 8
  %258 = sub i64 0, 7145062593263172487
  %259 = sub i64 %258, 4
  %260 = add i64 %259, 7145062593263172487
  %261 = sub i64 0, 4
  %262 = add i64 %260, -1243236430255268891
  %263 = add i64 %262, %257
  %264 = sub i64 %263, -1243236430255268891
  %265 = add i64 %260, %257
  %266 = add i64 0, 3162165046116566750
  %267 = sub i64 %266, 4
  %268 = sub i64 %267, 3162165046116566750
  %269 = sub i64 0, 4
  %270 = sub i64 0, %257
  %271 = sub i64 %268, %270
  %272 = add i64 %268, %257
  %273 = shl i64 4, %257
  %274 = add i64 0, 7102831457376198881
  %275 = sub i64 %274, 4
  %276 = sub i64 %275, 7102831457376198881
  %277 = sub i64 0, 4
  %278 = add i64 %276, 2016529925180149695
  %279 = add i64 %278, %257
  %280 = sub i64 %279, 2016529925180149695
  %281 = add i64 %276, %257
  %282 = add i64 4, -5818488003726822351
  %283 = sub i64 %282, %257
  %284 = sub i64 %283, -5818488003726822351
  %285 = sub i64 4, %257
  %286 = mul i64 %284, %257
  %287 = shl i64 4, %257
  %288 = mul i64 4, %257
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %252, i8* %255, i64 %288, i32 4, i1 false)
  store i32 -2100175267, i32* %21
  br label %295

; <label>:289:                                    ; preds = %22
  %290 = load volatile i32**, i32*** %7
  %291 = load i32*, i32** %290, align 8
  %292 = load volatile i64*, i64** %6
  %293 = load i64, i64* %292, align 8
  %294 = getelementptr inbounds i32, i32* %291, i64 %293
  store i32 -579200676, i32* %21
  br label %295

; <label>:295:                                    ; preds = %289, %249, %187, %153, %137, %136, %111, %83, %80, %33, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.34", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.34"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.34"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.34"*, align 8
  store %"class.std::move_iterator.34"* %0, %"class.std::move_iterator.34"** %2, align 8
  %3 = load %"class.std::move_iterator.34"*, %"class.std::move_iterator.34"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.34"*, i32*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.34"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::move_iterator.34"* %0, %"class.std::move_iterator.34"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::move_iterator.34"*, %"class.std::move_iterator.34"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.34", %"class.std::move_iterator.34"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.20"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.21"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.21"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1060
  %3 = load i32, i32* @y.1061
  %4 = sub i32 %2, 14776861
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 14776861
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %194

; <label>:28:                                     ; preds = %1, %194
  %29 = alloca %"struct.std::_Vector_base.19"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %29, align 8
  %32 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = ptrtoint i32* %38 to i64
  %43 = ptrtoint i32* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 4
  %48 = load i32, i32* @x.1060
  %49 = load i32, i32* @y.1061
  %50 = sub i32 %48, -836151810
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -836151810
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %194

; <label>:62:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.19"* %32, i32* %35, i64 %47)
          to label %63 unwind label %93

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* @x.1060
  %65 = load i32, i32* @y.1061
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %266

; <label>:77:                                     ; preds = %63, %266
  %78 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78) #3
  %79 = load i32, i32* @x.1060
  %80 = load i32, i32* @y.1061
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %266

; <label>:92:                                     ; preds = %77
  ret void

; <label>:93:                                     ; preds = %62
  %94 = load i32, i32* @x.1060
  %95 = load i32, i32* @y.1061
  %96 = sub i32 %94, 1655966961
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 1655966961
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %268

; <label>:120:                                    ; preds = %93, %268
  %121 = landingpad { i8*, i32 }
          catch i8* null
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %30, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %31, align 4
  %124 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %124) #3
  %125 = load i32, i32* @x.1060
  %126 = load i32, i32* @y.1061
  %127 = sub i32 %125, 1601695183
  %128 = sub i32 %127, 1
  %129 = add i32 %128, 1601695183
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 true, true
  %138 = and i1 %135, true
  %139 = and i1 %133, %137
  %140 = and i1 %136, true
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 true, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %268

; <label>:151:                                    ; preds = %120
  br label %152

; <label>:152:                                    ; preds = %151
  %153 = load i32, i32* @x.1060
  %154 = load i32, i32* @y.1061
  %155 = sub i32 0, 1
  %156 = add i32 %153, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 %153, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %154, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 true, true
  %165 = and i1 %162, true
  %166 = and i1 %160, %164
  %167 = and i1 %163, true
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 true, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  br i1 %176, label %178, label %273

; <label>:178:                                    ; preds = %152, %273
  %179 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %179) #10
  %180 = load i32, i32* @x.1060
  %181 = load i32, i32* @y.1061
  %182 = sub i32 0, 1
  %183 = add i32 %180, %182
  %184 = sub i32 %180, 1
  %185 = mul i32 %180, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %181, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  br i1 %191, label %193, label %273

; <label>:193:                                    ; preds = %178
  unreachable

; <label>:194:                                    ; preds = %28, %1
  %195 = alloca %"struct.std::_Vector_base.19"*, align 8
  %196 = alloca i8*
  %197 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %195, align 8
  %198 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %195, align 8
  %199 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %198, i32 0, i32 0
  %200 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %199, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %198, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %202, i32 0, i32 2
  %204 = load i32*, i32** %203, align 8
  %205 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %198, i32 0, i32 0
  %206 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %205, i32 0, i32 0
  %207 = load i32*, i32** %206, align 8
  %208 = ptrtoint i32* %204 to i64
  %209 = ptrtoint i32* %207 to i64
  %210 = sub i64 0, -9096622101492731343
  %211 = sub i64 %210, %208
  %212 = add i64 %211, -9096622101492731343
  %213 = sub i64 0, %208
  %214 = sub i64 0, %212
  %215 = sub i64 0, %209
  %216 = add i64 %214, %215
  %217 = sub i64 0, %216
  %218 = add i64 %212, %209
  %219 = add i64 0, 2659926044162751913
  %220 = sub i64 %219, %208
  %221 = sub i64 %220, 2659926044162751913
  %222 = sub i64 0, %208
  %223 = sub i64 0, %209
  %224 = sub i64 %221, %223
  %225 = add i64 %221, %209
  %226 = sub i64 %208, 6036506050451575428
  %227 = sub i64 %226, %209
  %228 = add i64 %227, 6036506050451575428
  %229 = sub i64 %208, %209
  %230 = mul i64 %228, %209
  %231 = sub i64 0, %208
  %232 = add i64 0, %231
  %233 = sub i64 0, %208
  %234 = sub i64 0, %232
  %235 = sub i64 0, %209
  %236 = add i64 %234, %235
  %237 = sub i64 0, %236
  %238 = add i64 %232, %209
  %239 = add i64 0, 5371562719844248615
  %240 = sub i64 %239, %208
  %241 = sub i64 %240, 5371562719844248615
  %242 = sub i64 0, %208
  %243 = sub i64 0, %241
  %244 = sub i64 0, %209
  %245 = add i64 %243, %244
  %246 = sub i64 0, %245
  %247 = add i64 %241, %209
  %248 = shl i64 %208, %209
  %249 = shl i64 %208, %209
  %250 = shl i64 %208, %209
  %251 = shl i64 %208, %209
  %252 = shl i64 %208, %209
  %253 = add i64 %208, -3493494330262207192
  %254 = sub i64 %253, %209
  %255 = sub i64 %254, -3493494330262207192
  %256 = sub i64 %208, %209
  %257 = sub i64 0, -1789169881997141659
  %258 = sub i64 %257, %255
  %259 = add i64 %258, -1789169881997141659
  %260 = sub i64 0, %255
  %261 = sub i64 %259, 552305501710590749
  %262 = add i64 %261, 4
  %263 = add i64 %262, 552305501710590749
  %264 = add i64 %259, 4
  %265 = sdiv exact i64 %255, 4
  br label %28

; <label>:266:                                    ; preds = %77, %63
  %267 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %267) #3
  br label %77

; <label>:268:                                    ; preds = %120, %93
  %269 = landingpad { i8*, i32 }
          catch i8* null
  %270 = extractvalue { i8*, i32 } %269, 0
  store i8* %270, i8** %30, align 8
  %271 = extractvalue { i8*, i32 } %269, 1
  store i32 %271, i32* %31, align 4
  %272 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %272) #3
  br label %120

; <label>:273:                                    ; preds = %178, %152
  %274 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %274) #10
  br label %178
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1062
  %5 = load i32, i32* @y.1063
  %6 = sub i32 %4, -963574964
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -963574964
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1118626964, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1118626964, label %18
    i32 886439004, label %26
    i32 525131787, label %56
    i32 -1643062409, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 886439004, i32 -1643062409
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28 to %"class.std::allocator.20"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.20"* %29) #3
  %30 = load i32, i32* @x.1062
  %31 = load i32, i32* @y.1063
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 525131787, i32 -1643062409
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %59 to %"class.std::allocator.20"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.20"* %60) #3
  store i32 886439004, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7) #3
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.1068
  %10 = load i32, i32* @y.1069
  %11 = add i32 %9, -318784468
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, -318784468
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %45

; <label>:23:                                     ; preds = %8, %45
  %24 = landingpad { i8*, i32 }
          cleanup
          filter [0 x i8*] zeroinitializer
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %27) #3
  %28 = load i32, i32* @x.1068
  %29 = load i32, i32* @y.1069
  %30 = sub i32 %28, 2097204149
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 2097204149
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %45

; <label>:42:                                     ; preds = %23
  br label %43

; <label>:43:                                     ; preds = %42
  %44 = load i8*, i8** %3, align 8
  call void @__cxa_call_unexpected(i8* %44) #13
  unreachable

; <label>:45:                                     ; preds = %23, %8
  %46 = landingpad { i8*, i32 }
          cleanup
          filter [0 x i8*] zeroinitializer
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %49) #3
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %3 to %"class.std::allocator.24"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.24"* %4) #3
  ret void
}

declare void @__cxa_call_unexpected(i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1072
  %3 = load i32, i32* @y.1073
  %4 = sub i32 %2, -1718573912
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1718573912
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %61

; <label>:16:                                     ; preds = %1, %61
  %17 = alloca %"struct.std::_Vector_base.14"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %17, align 8
  %20 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.18"*, %"class.std::vector.18"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::vector.18"*, %"class.std::vector.18"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %28, align 8
  %30 = ptrtoint %"class.std::vector.18"* %26 to i64
  %31 = ptrtoint %"class.std::vector.18"* %29 to i64
  %32 = add i64 %30, 5638566709657302715
  %33 = sub i64 %32, %31
  %34 = sub i64 %33, 5638566709657302715
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.1072
  %38 = load i32, i32* @y.1073
  %39 = add i32 %37, -931065246
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -931065246
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %61

; <label>:51:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.14"* %20, %"class.std::vector.18"* %23, i64 %36)
          to label %52 unwind label %54

; <label>:52:                                     ; preds = %51
  %53 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %53) #3
  ret void

; <label>:54:                                     ; preds = %51
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %18, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %19, align 4
  %58 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %60) #10
  unreachable

; <label>:61:                                     ; preds = %16, %1
  %62 = alloca %"struct.std::_Vector_base.14"*, align 8
  %63 = alloca i8*
  %64 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %62, align 8
  %65 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %62, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"class.std::vector.18"*, %"class.std::vector.18"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %65, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %69, i32 0, i32 2
  %71 = load %"class.std::vector.18"*, %"class.std::vector.18"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %65, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.18"*, %"class.std::vector.18"** %73, align 8
  %75 = ptrtoint %"class.std::vector.18"* %71 to i64
  %76 = ptrtoint %"class.std::vector.18"* %74 to i64
  %77 = sub i64 0, %75
  %78 = add i64 0, %77
  %79 = sub i64 0, %75
  %80 = add i64 %78, 3473095038025631656
  %81 = add i64 %80, %76
  %82 = sub i64 %81, 3473095038025631656
  %83 = add i64 %78, %76
  %84 = sub i64 %75, 7361067610953751629
  %85 = sub i64 %84, %76
  %86 = add i64 %85, 7361067610953751629
  %87 = sub i64 %75, %76
  %88 = mul i64 %86, %76
  %89 = add i64 %75, 2765537080837427820
  %90 = sub i64 %89, %76
  %91 = sub i64 %90, 2765537080837427820
  %92 = sub i64 %75, %76
  %93 = sub i64 0, %91
  %94 = add i64 0, %93
  %95 = sub i64 0, %91
  %96 = sub i64 0, 24
  %97 = sub i64 %94, %96
  %98 = add i64 %94, 24
  %99 = sub i64 0, -5982228275482672376
  %100 = sub i64 %99, %91
  %101 = add i64 %100, -5982228275482672376
  %102 = sub i64 0, %91
  %103 = sub i64 %101, -8539394649345331651
  %104 = add i64 %103, 24
  %105 = add i64 %104, -8539394649345331651
  %106 = add i64 %101, 24
  %107 = sdiv exact i64 %91, 24
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1076
  %5 = load i32, i32* @y.1077
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -567111838, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -567111838, label %17
    i32 -1192637916, label %25
    i32 1201217597, label %55
    i32 873686253, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1192637916, i32 873686253
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %26, align 8
  %27 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %26, align 8
  %28 = bitcast %"class.std::allocator.15"* %27 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %28) #3
  %29 = load i32, i32* @x.1076
  %30 = load i32, i32* @y.1077
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1201217597, i32 873686253
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %57, align 8
  %58 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %57, align 8
  %59 = bitcast %"class.std::allocator.15"* %58 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %59) #3
  store i32 -1192637916, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %9, i64 %10
  ret %"class.std::vector.18"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.18"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1082
  %9 = load i32, i32* @y.1083
  %10 = sub i32 %8, 1751310180
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1751310180
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -397022743, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %191
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -397022743, label %22
    i32 441356466, label %30
    i32 1592116939, label %60
    i32 -242772190, label %63
    i32 2092305658, label %81
    i32 -1884406888, label %109
    i32 273561229, label %128
    i32 -1323848651, label %129
    i32 644518063, label %145
    i32 1408140043, label %172
    i32 654747712, label %173
    i32 1382055388, label %186
    i32 10635328, label %190
  ]

; <label>:21:                                     ; preds = %19
  br label %191

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 441356466, i32 654747712
  store i32 %29, i32* %18
  br label %191

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.18"*, align 8
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %5
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %31, align 8
  %33 = load volatile i32**, i32*** %5
  store i32* %1, i32** %33, align 8
  %34 = load %"class.std::vector.18"*, %"class.std::vector.18"** %31, align 8
  store %"class.std::vector.18"* %34, %"class.std::vector.18"** %4
  %35 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %36 = bitcast %"class.std::vector.18"* %35 to %"struct.std::_Vector_base.19"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %41 = bitcast %"class.std::vector.18"* %40 to %"struct.std::_Vector_base.19"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load i32*, i32** %43, align 8
  %45 = icmp ne i32* %39, %44
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.1082
  %47 = load i32, i32* @y.1083
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1592116939, i32 654747712
  store i32 %59, i32* %18
  br label %191

; <label>:60:                                     ; preds = %19
  %61 = load volatile i1, i1* %3
  %62 = select i1 %61, i32 -242772190, i32 2092305658
  store i32 %62, i32* %18
  br label %191

; <label>:63:                                     ; preds = %19
  %64 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %65 = bitcast %"class.std::vector.18"* %64 to %"struct.std::_Vector_base.19"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %66 to %"class.std::allocator.20"*
  %68 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %69 = bitcast %"class.std::vector.18"* %68 to %"struct.std::_Vector_base.19"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 1
  %72 = load i32*, i32** %71, align 8
  %73 = load volatile i32**, i32*** %5
  %74 = load i32*, i32** %73, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %67, i32* %72, i32* dereferenceable(4) %74)
  %75 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %76 = bitcast %"class.std::vector.18"* %75 to %"struct.std::_Vector_base.19"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds i32, i32* %79, i32 1
  store i32* %80, i32** %78, align 8
  store i32 -1323848651, i32* %18
  br label %191

; <label>:81:                                     ; preds = %19
  %82 = load i32, i32* @x.1082
  %83 = load i32, i32* @y.1083
  %84 = add i32 %82, 1693801696
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 1693801696
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -1884406888, i32 1382055388
  store i32 %108, i32* %18
  br label %191

; <label>:109:                                    ; preds = %19
  %110 = load volatile i32**, i32*** %5
  %111 = load i32*, i32** %110, align 8
  %112 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.18"* %112, i32* dereferenceable(4) %111)
  %113 = load i32, i32* @x.1082
  %114 = load i32, i32* @y.1083
  %115 = sub i32 %113, -710673935
  %116 = sub i32 %115, 1
  %117 = add i32 %116, -710673935
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 273561229, i32 1382055388
  store i32 %127, i32* %18
  br label %191

; <label>:128:                                    ; preds = %19
  store i32 -1323848651, i32* %18
  br label %191

; <label>:129:                                    ; preds = %19
  %130 = load i32, i32* @x.1082
  %131 = load i32, i32* @y.1083
  %132 = add i32 %130, 931992660
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, 931992660
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  %144 = select i1 %142, i32 644518063, i32 10635328
  store i32 %144, i32* %18
  br label %191

; <label>:145:                                    ; preds = %19
  %146 = load i32, i32* @x.1082
  %147 = load i32, i32* @y.1083
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  %171 = select i1 %169, i32 1408140043, i32 10635328
  store i32 %171, i32* %18
  br label %191

; <label>:172:                                    ; preds = %19
  ret void

; <label>:173:                                    ; preds = %19
  %174 = alloca %"class.std::vector.18"*, align 8
  %175 = alloca i32*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %174, align 8
  store i32* %1, i32** %175, align 8
  %176 = load %"class.std::vector.18"*, %"class.std::vector.18"** %174, align 8
  %177 = bitcast %"class.std::vector.18"* %176 to %"struct.std::_Vector_base.19"*
  %178 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %177, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %178, i32 0, i32 1
  %180 = load i32*, i32** %179, align 8
  %181 = bitcast %"class.std::vector.18"* %176 to %"struct.std::_Vector_base.19"*
  %182 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %182, i32 0, i32 2
  %184 = load i32*, i32** %183, align 8
  %185 = icmp ne i32* %180, %184
  store i32 441356466, i32* %18
  br label %191

; <label>:186:                                    ; preds = %19
  %187 = load volatile i32**, i32*** %5
  %188 = load i32*, i32** %187, align 8
  %189 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.18"* %189, i32* dereferenceable(4) %188)
  store i32 -1884406888, i32* %18
  br label %191

; <label>:190:                                    ; preds = %19
  store i32 644518063, i32* %18
  br label %191

; <label>:191:                                    ; preds = %190, %186, %173, %145, %129, %128, %109, %81, %63, %60, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.18"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.18"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.19"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator.20"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %10) #3
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %111

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.1086
  %26 = load i32, i32* @y.1087
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %321

; <label>:38:                                     ; preds = %24, %321
  store i32* null, i32** %7, align 8
  %39 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load i32*, i32** %45, align 8
  %47 = load i32*, i32** %6, align 8
  %48 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %49 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %48) #3
  %50 = load i32, i32* @x.1086
  %51 = load i32, i32* @y.1087
  %52 = add i32 %50, 539571335
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 539571335
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %321

; <label>:64:                                     ; preds = %38
  %65 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %42, i32* %46, i32* %47, %"class.std::allocator.20"* dereferenceable(1) %49)
          to label %66 unwind label %111

; <label>:66:                                     ; preds = %64
  %67 = load i32, i32* @x.1086
  %68 = load i32, i32* @y.1087
  %69 = sub i32 %67, -729392890
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -729392890
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %333

; <label>:93:                                     ; preds = %66, %333
  store i32* %65, i32** %7, align 8
  %94 = load i32*, i32** %7, align 8
  %95 = getelementptr inbounds i32, i32* %94, i32 1
  store i32* %95, i32** %7, align 8
  %96 = load i32, i32* @x.1086
  %97 = load i32, i32* @y.1087
  %98 = sub i32 %96, 1999876806
  %99 = sub i32 %98, 1
  %100 = add i32 %99, 1999876806
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %333

; <label>:110:                                    ; preds = %93
  br label %268

; <label>:111:                                    ; preds = %64, %2
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %8, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %9, align 4
  br label %115

; <label>:115:                                    ; preds = %111
  %116 = load i32, i32* @x.1086
  %117 = load i32, i32* @y.1087
  %118 = sub i32 %116, -88870929
  %119 = sub i32 %118, 1
  %120 = add i32 %119, -88870929
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %336

; <label>:130:                                    ; preds = %115, %336
  %131 = load i8*, i8** %8, align 8
  %132 = call i8* @__cxa_begin_catch(i8* %131) #3
  %133 = load i32*, i32** %7, align 8
  %134 = icmp ne i32* %133, null
  %135 = load i32, i32* @x.1086
  %136 = load i32, i32* @y.1087
  %137 = add i32 %135, -856298470
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -856298470
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  br i1 %159, label %161, label %336

; <label>:161:                                    ; preds = %130
  br i1 %134, label %174, label %162

; <label>:162:                                    ; preds = %161
  %163 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %164 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %163, i32 0, i32 0
  %165 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %164 to %"class.std::allocator.20"*
  %166 = load i32*, i32** %6, align 8
  %167 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %10) #3
  %168 = getelementptr inbounds i32, i32* %166, i64 %167
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.20"* dereferenceable(1) %165, i32* %168)
          to label %169 unwind label %170

; <label>:169:                                    ; preds = %162
  br label %262

; <label>:170:                                    ; preds = %266, %262, %231, %162
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %8, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %267 unwind label %317

; <label>:174:                                    ; preds = %161
  %175 = load i32, i32* @x.1086
  %176 = load i32, i32* @y.1087
  %177 = sub i32 0, 1
  %178 = add i32 %175, %177
  %179 = sub i32 %175, 1
  %180 = mul i32 %175, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %176, 10
  %184 = xor i1 %182, true
  %185 = xor i1 %183, true
  %186 = xor i1 true, true
  %187 = and i1 %184, true
  %188 = and i1 %182, %186
  %189 = and i1 %185, true
  %190 = and i1 %183, %186
  %191 = or i1 %187, %188
  %192 = or i1 %189, %190
  %193 = xor i1 %191, %192
  %194 = or i1 %184, %185
  %195 = xor i1 %194, true
  %196 = or i1 true, %186
  %197 = and i1 %195, %196
  %198 = or i1 %193, %197
  %199 = or i1 %182, %183
  br i1 %198, label %200, label %341

; <label>:200:                                    ; preds = %174, %341
  %201 = load i32*, i32** %6, align 8
  %202 = load i32*, i32** %7, align 8
  %203 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %204 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %203) #3
  %205 = load i32, i32* @x.1086
  %206 = load i32, i32* @y.1087
  %207 = sub i32 %205, 1191713353
  %208 = sub i32 %207, 1
  %209 = add i32 %208, 1191713353
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 false, true
  %218 = and i1 %215, false
  %219 = and i1 %213, %217
  %220 = and i1 %216, false
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 false, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %341

; <label>:231:                                    ; preds = %200
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %201, i32* %202, %"class.std::allocator.20"* dereferenceable(1) %204)
          to label %232 unwind label %170

; <label>:232:                                    ; preds = %231
  %233 = load i32, i32* @x.1086
  %234 = load i32, i32* @y.1087
  %235 = add i32 %233, -60070594
  %236 = sub i32 %235, 1
  %237 = sub i32 %236, -60070594
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = and i1 %241, %242
  %244 = xor i1 %241, %242
  %245 = or i1 %243, %244
  %246 = or i1 %241, %242
  br i1 %245, label %247, label %346

; <label>:247:                                    ; preds = %232, %346
  %248 = load i32, i32* @x.1086
  %249 = load i32, i32* @y.1087
  %250 = sub i32 0, 1
  %251 = add i32 %248, %250
  %252 = sub i32 %248, 1
  %253 = mul i32 %248, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %249, 10
  %257 = and i1 %255, %256
  %258 = xor i1 %255, %256
  %259 = or i1 %257, %258
  %260 = or i1 %255, %256
  br i1 %259, label %261, label %346

; <label>:261:                                    ; preds = %247
  br label %262

; <label>:262:                                    ; preds = %261, %169
  %263 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %264 = load i32*, i32** %6, align 8
  %265 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.19"* %263, i32* %264, i64 %265)
          to label %266 unwind label %170

; <label>:266:                                    ; preds = %262
  invoke void @__cxa_rethrow() #13
          to label %320 unwind label %170

; <label>:267:                                    ; preds = %170
  br label %312

; <label>:268:                                    ; preds = %110
  %269 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %270, i32 0, i32 0
  %272 = load i32*, i32** %271, align 8
  %273 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %274 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %273, i32 0, i32 0
  %275 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %274, i32 0, i32 1
  %276 = load i32*, i32** %275, align 8
  %277 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %278 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %277) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %272, i32* %276, %"class.std::allocator.20"* dereferenceable(1) %278)
  %279 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %280 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %281 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %280, i32 0, i32 0
  %282 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %281, i32 0, i32 0
  %283 = load i32*, i32** %282, align 8
  %284 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %285 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %284, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %285, i32 0, i32 2
  %287 = load i32*, i32** %286, align 8
  %288 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %289 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %288, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %289, i32 0, i32 0
  %291 = load i32*, i32** %290, align 8
  %292 = ptrtoint i32* %287 to i64
  %293 = ptrtoint i32* %291 to i64
  %294 = sub i64 0, %293
  %295 = add i64 %292, %294
  %296 = sub i64 %292, %293
  %297 = sdiv exact i64 %295, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.19"* %279, i32* %283, i64 %297)
  %298 = load i32*, i32** %6, align 8
  %299 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %300 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %299, i32 0, i32 0
  %301 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %300, i32 0, i32 0
  store i32* %298, i32** %301, align 8
  %302 = load i32*, i32** %7, align 8
  %303 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %304 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %303, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %304, i32 0, i32 1
  store i32* %302, i32** %305, align 8
  %306 = load i32*, i32** %6, align 8
  %307 = load i64, i64* %5, align 8
  %308 = getelementptr inbounds i32, i32* %306, i64 %307
  %309 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %310 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %309, i32 0, i32 0
  %311 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %310, i32 0, i32 2
  store i32* %308, i32** %311, align 8
  ret void

; <label>:312:                                    ; preds = %267
  %313 = load i8*, i8** %8, align 8
  %314 = load i32, i32* %9, align 4
  %315 = insertvalue { i8*, i32 } undef, i8* %313, 0
  %316 = insertvalue { i8*, i32 } %315, i32 %314, 1
  resume { i8*, i32 } %316

; <label>:317:                                    ; preds = %170
  %318 = landingpad { i8*, i32 }
          catch i8* null
  %319 = extractvalue { i8*, i32 } %318, 0
  call void @__clang_call_terminate(i8* %319) #10
  unreachable

; <label>:320:                                    ; preds = %266
  unreachable

; <label>:321:                                    ; preds = %38, %24
  store i32* null, i32** %7, align 8
  %322 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %323 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %323, i32 0, i32 0
  %325 = load i32*, i32** %324, align 8
  %326 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %327 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %326, i32 0, i32 0
  %328 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %327, i32 0, i32 1
  %329 = load i32*, i32** %328, align 8
  %330 = load i32*, i32** %6, align 8
  %331 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %332 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %331) #3
  br label %38

; <label>:333:                                    ; preds = %93, %66
  store i32* %65, i32** %7, align 8
  %334 = load i32*, i32** %7, align 8
  %335 = getelementptr inbounds i32, i32* %334, i32 1
  store i32* %335, i32** %7, align 8
  br label %93

; <label>:336:                                    ; preds = %130, %115
  %337 = load i8*, i8** %8, align 8
  %338 = call i8* @__cxa_begin_catch(i8* %337) #3
  %339 = load i32*, i32** %7, align 8
  %340 = icmp ne i32* %339, null
  br label %130

; <label>:341:                                    ; preds = %200, %174
  %342 = load i32*, i32** %6, align 8
  %343 = load i32*, i32** %7, align 8
  %344 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %345 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %344) #3
  br label %200

; <label>:346:                                    ; preds = %247, %232
  br label %247
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.20"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.21"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.21"*, i32*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE5clearEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.18"* %3, i32* %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.23"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference", align 8
  %4 = alloca %"class.std::vector.23"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %8 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Bvector_base"*
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Bit_iterator"* %10 to %"struct.std::_Bit_iterator_base"*
  %12 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %5, align 8
  %15 = udiv i64 %14, 64
  %16 = getelementptr inbounds i64, i64* %13, i64 %15
  %17 = load i64, i64* %5, align 8
  %18 = urem i64 %17, 64
  %19 = trunc i64 %18 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %6, i64* %16, i32 %19)
  %20 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %21 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %22 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %21, i32 0, i32 0
  %23 = extractvalue { i64*, i64 } %20, 0
  store i64* %23, i64** %22, align 8
  %24 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %21, i32 0, i32 1
  %25 = extractvalue { i64*, i64 } %20, 1
  store i64 %25, i64* %24, align 8
  %26 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %27 = load { i64*, i64 }, { i64*, i64 }* %26, align 8
  ret { i64*, i64 } %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCC3dfsEi(%struct.SCC*, i32) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %struct.SCC*
  %5 = alloca %struct.SCC*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.std::_Bit_reference", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.std::_Bit_reference", align 8
  store %struct.SCC* %0, %struct.SCC** %5, align 8
  store i32 %1, i32* %6, align 4
  %10 = load %struct.SCC*, %struct.SCC** %5, align 8
  store %struct.SCC* %10, %struct.SCC** %4
  %11 = load volatile %struct.SCC*, %struct.SCC** %4
  %12 = getelementptr inbounds %struct.SCC, %struct.SCC* %11, i32 0, i32 4
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.23"* %12, i64 %14)
  %16 = bitcast %"struct.std::_Bit_reference"* %7 to { i64*, i64 }*
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %16, i32 0, i32 0
  %18 = extractvalue { i64*, i64 } %15, 0
  store i64* %18, i64** %17, align 8
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %16, i32 0, i32 1
  %20 = extractvalue { i64*, i64 } %15, 1
  store i64 %20, i64* %19, align 8
  %21 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %7, i1 zeroext true) #3
  store i32 0, i32* %8, align 4
  %22 = alloca i32
  store i32 -1517957452, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %195
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -1517957452, label %26
    i32 -2004285510, label %53
    i32 1588077917, label %78
    i32 755698910, label %81
    i32 -1511230044, label %102
    i32 1185710257, label %113
    i32 2020977661, label %114
    i32 1459198197, label %130
    i32 -46325939, label %150
    i32 891759167, label %151
    i32 -1371132889, label %154
    i32 1272201082, label %164
  ]

; <label>:25:                                     ; preds = %23
  br label %195

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.1100
  %28 = load i32, i32* @y.1101
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -2004285510, i32 -1371132889
  store i32 %52, i32* %22
  br label %195

; <label>:53:                                     ; preds = %23
  %54 = load i32, i32* %8, align 4
  %55 = sext i32 %54 to i64
  %56 = load volatile %struct.SCC*, %struct.SCC** %4
  %57 = getelementptr inbounds %struct.SCC, %struct.SCC* %56, i32 0, i32 1
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %57, i64 %59) #3
  %61 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %60) #3
  %62 = icmp ult i64 %55, %61
  store i1 %62, i1* %3
  %63 = load i32, i32* @x.1100
  %64 = load i32, i32* @y.1101
  %65 = sub i32 %63, 1294481206
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1294481206
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 1588077917, i32 -1371132889
  store i32 %77, i32* %22
  br label %195

; <label>:78:                                     ; preds = %23
  %79 = load volatile i1, i1* %3
  %80 = select i1 %79, i32 755698910, i32 891759167
  store i32 %80, i32* %22
  br label %195

; <label>:81:                                     ; preds = %23
  %82 = load volatile %struct.SCC*, %struct.SCC** %4
  %83 = getelementptr inbounds %struct.SCC, %struct.SCC* %82, i32 0, i32 4
  %84 = load volatile %struct.SCC*, %struct.SCC** %4
  %85 = getelementptr inbounds %struct.SCC, %struct.SCC* %84, i32 0, i32 1
  %86 = load i32, i32* %6, align 4
  %87 = sext i32 %86 to i64
  %88 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %85, i64 %87) #3
  %89 = load i32, i32* %8, align 4
  %90 = sext i32 %89 to i64
  %91 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"* %88, i64 %90) #3
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.23"* %83, i64 %93)
  %95 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %96 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %95, i32 0, i32 0
  %97 = extractvalue { i64*, i64 } %94, 0
  store i64* %97, i64** %96, align 8
  %98 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %95, i32 0, i32 1
  %99 = extractvalue { i64*, i64 } %94, 1
  store i64 %99, i64* %98, align 8
  %100 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %9) #3
  %101 = select i1 %100, i32 1185710257, i32 -1511230044
  store i32 %101, i32* %22
  br label %195

; <label>:102:                                    ; preds = %23
  %103 = load volatile %struct.SCC*, %struct.SCC** %4
  %104 = getelementptr inbounds %struct.SCC, %struct.SCC* %103, i32 0, i32 1
  %105 = load i32, i32* %6, align 4
  %106 = sext i32 %105 to i64
  %107 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %104, i64 %106) #3
  %108 = load i32, i32* %8, align 4
  %109 = sext i32 %108 to i64
  %110 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"* %107, i64 %109) #3
  %111 = load i32, i32* %110, align 4
  %112 = load volatile %struct.SCC*, %struct.SCC** %4
  call void @_ZN3SCC3dfsEi(%struct.SCC* %112, i32 %111)
  store i32 1185710257, i32* %22
  br label %195

; <label>:113:                                    ; preds = %23
  store i32 2020977661, i32* %22
  br label %195

; <label>:114:                                    ; preds = %23
  %115 = load i32, i32* @x.1100
  %116 = load i32, i32* @y.1101
  %117 = add i32 %115, 694890103
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, 694890103
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 1459198197, i32 1272201082
  store i32 %129, i32* %22
  br label %195

; <label>:130:                                    ; preds = %23
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -651122997
  %133 = add i32 %132, 1
  %134 = sub i32 %133, -651122997
  %135 = add nsw i32 %131, 1
  store i32 %134, i32* %8, align 4
  %136 = load i32, i32* @x.1100
  %137 = load i32, i32* @y.1101
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 -46325939, i32 1272201082
  store i32 %149, i32* %22
  br label %195

; <label>:150:                                    ; preds = %23
  store i32 -1517957452, i32* %22
  br label %195

; <label>:151:                                    ; preds = %23
  %152 = load volatile %struct.SCC*, %struct.SCC** %4
  %153 = getelementptr inbounds %struct.SCC, %struct.SCC* %152, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.18"* %153, i32* dereferenceable(4) %6)
  ret void

; <label>:154:                                    ; preds = %23
  %155 = load i32, i32* %8, align 4
  %156 = sext i32 %155 to i64
  %157 = load volatile %struct.SCC*, %struct.SCC** %4
  %158 = getelementptr inbounds %struct.SCC, %struct.SCC* %157, i32 0, i32 1
  %159 = load i32, i32* %6, align 4
  %160 = sext i32 %159 to i64
  %161 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %158, i64 %160) #3
  %162 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %161) #3
  %163 = icmp ult i64 %156, %162
  store i32 -2004285510, i32* %22
  br label %195

; <label>:164:                                    ; preds = %23
  %165 = load i32, i32* %8, align 4
  %166 = sub i32 0, %165
  %167 = add i32 0, %166
  %168 = sub i32 0, %165
  %169 = add i32 %167, -940995779
  %170 = add i32 %169, 1
  %171 = sub i32 %170, -940995779
  %172 = add i32 %167, 1
  %173 = sub i32 %165, 1987467427
  %174 = sub i32 %173, 1
  %175 = add i32 %174, 1987467427
  %176 = sub i32 %165, 1
  %177 = mul i32 %175, 1
  %178 = shl i32 %165, 1
  %179 = add i32 %165, 141296774
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 141296774
  %182 = sub i32 %165, 1
  %183 = mul i32 %181, 1
  %184 = shl i32 %165, 1
  %185 = shl i32 %165, 1
  %186 = add i32 %165, 92889199
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, 92889199
  %189 = sub i32 %165, 1
  %190 = mul i32 %188, 1
  %191 = shl i32 %165, 1
  %192 = sub i32 0, 1
  %193 = sub i32 %165, %192
  %194 = add nsw i32 %165, 1
  store i32 %193, i32* %8, align 4
  store i32 1459198197, i32* %22
  br label %195

; <label>:195:                                    ; preds = %164, %154, %150, %130, %114, %113, %102, %81, %78, %53, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCC4rdfsEii(%struct.SCC*, i32, i32) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %struct.SCC*
  %6 = alloca %struct.SCC*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"struct.std::_Bit_reference", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"struct.std::_Bit_reference", align 8
  store %struct.SCC* %0, %struct.SCC** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  %12 = load %struct.SCC*, %struct.SCC** %6, align 8
  store %struct.SCC* %12, %struct.SCC** %5
  %13 = load volatile %struct.SCC*, %struct.SCC** %5
  %14 = getelementptr inbounds %struct.SCC, %struct.SCC* %13, i32 0, i32 4
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.23"* %14, i64 %16)
  %18 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %18, i32 0, i32 0
  %20 = extractvalue { i64*, i64 } %17, 0
  store i64* %20, i64** %19, align 8
  %21 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %18, i32 0, i32 1
  %22 = extractvalue { i64*, i64 } %17, 1
  store i64 %22, i64* %21, align 8
  %23 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %9, i1 zeroext true) #3
  %24 = load i32, i32* %8, align 4
  %25 = load volatile %struct.SCC*, %struct.SCC** %5
  %26 = getelementptr inbounds %struct.SCC, %struct.SCC* %25, i32 0, i32 5
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"* %26, i64 %28) #3
  store i32 %24, i32* %29, align 4
  store i32 0, i32* %10, align 4
  %30 = alloca i32
  store i32 -1391905834, i32* %30
  br label %31

; <label>:31:                                     ; preds = %3, %218
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 -1391905834, label %34
    i32 -1025104834, label %49
    i32 -1893746915, label %73
    i32 -151251080, label %76
    i32 -1412305959, label %97
    i32 -713715150, label %109
    i32 -728612310, label %125
    i32 -910082323, label %153
    i32 -1082049781, label %154
    i32 1012487694, label %161
    i32 -1072985, label %177
    i32 1313886827, label %205
    i32 -1871222130, label %206
    i32 1400792787, label %216
    i32 -295792863, label %217
  ]

; <label>:33:                                     ; preds = %31
  br label %218

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* @x.1104
  %36 = load i32, i32* @y.1105
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1025104834, i32 -1871222130
  store i32 %48, i32* %30
  br label %218

; <label>:49:                                     ; preds = %31
  %50 = load i32, i32* %10, align 4
  %51 = sext i32 %50 to i64
  %52 = load volatile %struct.SCC*, %struct.SCC** %5
  %53 = getelementptr inbounds %struct.SCC, %struct.SCC* %52, i32 0, i32 2
  %54 = load i32, i32* %7, align 4
  %55 = sext i32 %54 to i64
  %56 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %53, i64 %55) #3
  %57 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %56) #3
  %58 = icmp ult i64 %51, %57
  store i1 %58, i1* %4
  %59 = load i32, i32* @x.1104
  %60 = load i32, i32* @y.1105
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -1893746915, i32 -1871222130
  store i32 %72, i32* %30
  br label %218

; <label>:73:                                     ; preds = %31
  %74 = load volatile i1, i1* %4
  %75 = select i1 %74, i32 -151251080, i32 1012487694
  store i32 %75, i32* %30
  br label %218

; <label>:76:                                     ; preds = %31
  %77 = load volatile %struct.SCC*, %struct.SCC** %5
  %78 = getelementptr inbounds %struct.SCC, %struct.SCC* %77, i32 0, i32 4
  %79 = load volatile %struct.SCC*, %struct.SCC** %5
  %80 = getelementptr inbounds %struct.SCC, %struct.SCC* %79, i32 0, i32 2
  %81 = load i32, i32* %7, align 4
  %82 = sext i32 %81 to i64
  %83 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %80, i64 %82) #3
  %84 = load i32, i32* %10, align 4
  %85 = sext i32 %84 to i64
  %86 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"* %83, i64 %85) #3
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.23"* %78, i64 %88)
  %90 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %91 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %90, i32 0, i32 0
  %92 = extractvalue { i64*, i64 } %89, 0
  store i64* %92, i64** %91, align 8
  %93 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %90, i32 0, i32 1
  %94 = extractvalue { i64*, i64 } %89, 1
  store i64 %94, i64* %93, align 8
  %95 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %11) #3
  %96 = select i1 %95, i32 -713715150, i32 -1412305959
  store i32 %96, i32* %30
  br label %218

; <label>:97:                                     ; preds = %31
  %98 = load volatile %struct.SCC*, %struct.SCC** %5
  %99 = getelementptr inbounds %struct.SCC, %struct.SCC* %98, i32 0, i32 2
  %100 = load i32, i32* %7, align 4
  %101 = sext i32 %100 to i64
  %102 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %99, i64 %101) #3
  %103 = load i32, i32* %10, align 4
  %104 = sext i32 %103 to i64
  %105 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.18"* %102, i64 %104) #3
  %106 = load i32, i32* %105, align 4
  %107 = load i32, i32* %8, align 4
  %108 = load volatile %struct.SCC*, %struct.SCC** %5
  call void @_ZN3SCC4rdfsEii(%struct.SCC* %108, i32 %106, i32 %107)
  store i32 -713715150, i32* %30
  br label %218

; <label>:109:                                    ; preds = %31
  %110 = load i32, i32* @x.1104
  %111 = load i32, i32* @y.1105
  %112 = add i32 %110, 320974271
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 320974271
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -728612310, i32 1400792787
  store i32 %124, i32* %30
  br label %218

; <label>:125:                                    ; preds = %31
  %126 = load i32, i32* @x.1104
  %127 = load i32, i32* @y.1105
  %128 = sub i32 %126, -955252522
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -955252522
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 -910082323, i32 1400792787
  store i32 %152, i32* %30
  br label %218

; <label>:153:                                    ; preds = %31
  store i32 -1082049781, i32* %30
  br label %218

; <label>:154:                                    ; preds = %31
  %155 = load i32, i32* %10, align 4
  %156 = sub i32 0, %155
  %157 = sub i32 0, 1
  %158 = add i32 %156, %157
  %159 = sub i32 0, %158
  %160 = add nsw i32 %155, 1
  store i32 %159, i32* %10, align 4
  store i32 -1391905834, i32* %30
  br label %218

; <label>:161:                                    ; preds = %31
  %162 = load i32, i32* @x.1104
  %163 = load i32, i32* @y.1105
  %164 = add i32 %162, -890228322
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, -890228322
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  %176 = select i1 %174, i32 -1072985, i32 -295792863
  store i32 %176, i32* %30
  br label %218

; <label>:177:                                    ; preds = %31
  %178 = load i32, i32* @x.1104
  %179 = load i32, i32* @y.1105
  %180 = add i32 %178, -1971887792
  %181 = sub i32 %180, 1
  %182 = sub i32 %181, -1971887792
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 false, true
  %191 = and i1 %188, false
  %192 = and i1 %186, %190
  %193 = and i1 %189, false
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 false, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  %204 = select i1 %202, i32 1313886827, i32 -295792863
  store i32 %204, i32* %30
  br label %218

; <label>:205:                                    ; preds = %31
  ret void

; <label>:206:                                    ; preds = %31
  %207 = load i32, i32* %10, align 4
  %208 = sext i32 %207 to i64
  %209 = load volatile %struct.SCC*, %struct.SCC** %5
  %210 = getelementptr inbounds %struct.SCC, %struct.SCC* %209, i32 0, i32 2
  %211 = load i32, i32* %7, align 4
  %212 = sext i32 %211 to i64
  %213 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.13"* %210, i64 %212) #3
  %214 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.18"* %213) #3
  %215 = icmp ult i64 %208, %214
  store i32 -1025104834, i32* %30
  br label %218

; <label>:216:                                    ; preds = %31
  store i32 -728612310, i32* %30
  br label %218

; <label>:217:                                    ; preds = %31
  store i32 -1072985, i32* %30
  br label %218

; <label>:218:                                    ; preds = %217, %216, %206, %177, %161, %154, %153, %125, %109, %97, %76, %73, %49, %34, %33
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IS_IN5Solve4edgeESaIS1_EESaIS3_EESaIS5_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EES6_EvT_S8_RSaIT0_E(%"class.std::vector.3"* %9, %"class.std::vector.3"* %13, %"class.std::allocator.0"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #10
  unreachable
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %15 = ptrtoint %"class.std::vector.3"* %11 to i64
  %16 = ptrtoint %"class.std::vector.3"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE13_M_deallocateEPS6_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.3"* %8, i64 %20)
          to label %21 unwind label %76

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.1108
  %23 = load i32, i32* @y.1109
  %24 = add i32 %22, 1335327801
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1335327801
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %113

; <label>:48:                                     ; preds = %21, %113
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %49) #3
  %50 = load i32, i32* @x.1108
  %51 = load i32, i32* @y.1109
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %113

; <label>:75:                                     ; preds = %48
  ret void

; <label>:76:                                     ; preds = %1
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %3, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %4, align 4
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %80) #3
  br label %81

; <label>:81:                                     ; preds = %76
  %82 = load i32, i32* @x.1108
  %83 = load i32, i32* @y.1109
  %84 = add i32 %82, -289205311
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -289205311
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %115

; <label>:96:                                     ; preds = %81, %115
  %97 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %97) #10
  %98 = load i32, i32* @x.1108
  %99 = load i32, i32* @y.1109
  %100 = add i32 %98, 1361809269
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 1361809269
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %115

; <label>:112:                                    ; preds = %96
  unreachable

; <label>:113:                                    ; preds = %48, %21
  %114 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %114) #3
  br label %48

; <label>:115:                                    ; preds = %96, %81
  %116 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %116) #10
  br label %96
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIS0_IN5Solve4edgeESaIS2_EESaIS4_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1110
  %5 = load i32, i32* @y.1111
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2028825582, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2028825582, label %17
    i32 -293450408, label %25
    i32 506021608, label %44
    i32 -369785059, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -293450408, i32 -369785059
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %27 to %"class.std::allocator.0"*
  call void @_ZNSaISt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEED2Ev(%"class.std::allocator.0"* %28) #3
  %29 = load i32, i32* @x.1110
  %30 = load i32, i32* @y.1111
  %31 = sub i32 %29, 594983718
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 594983718
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 506021608, i32 -369785059
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"** %46, align 8
  %47 = load %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Vector_base<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > >, std::allocator<std::vector<std::vector<Solve::edge, std::allocator<Solve::edge> >, std::allocator<std::vector<Solve::edge, std::allocator<Solve::edge> > > > > >::_Vector_impl"* %47 to %"class.std::allocator.0"*
  call void @_ZNSaISt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEED2Ev(%"class.std::allocator.0"* %48) #3
  store i32 -293450408, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIS_IN5Solve4edgeESaIS1_EESaIS3_EEED2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEED2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IN5Solve4edgeESaIS3_EESaIS5_EEED2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1114
  %5 = load i32, i32* @y.1115
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1863220238, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1863220238, label %17
    i32 -1853684702, label %37
    i32 -207648298, label %55
    i32 517013612, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1853684702, i32 517013612
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %38, align 8
  %40 = load i32, i32* @x.1114
  %41 = load i32, i32* @y.1115
  %42 = add i32 %40, -180770456
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -180770456
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -207648298, i32 517013612
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %57, align 8
  store i32 -1853684702, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s545954551.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
