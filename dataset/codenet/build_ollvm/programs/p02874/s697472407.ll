; ModuleID = 'Project_CodeNet_C++1400/p02874/s697472407.cpp'
source_filename = "Project_CodeNet_C++1400/p02874/s697472407.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl" }
%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl" = type { %struct.P*, %struct.P*, %struct.P* }
%struct.P = type { i64, i64 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::allocator" = type { i8 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl" }
%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl" = type { %struct.T*, %struct.T*, %struct.T* }
%struct.T = type { i64, i64 }
%"class.__gnu_cxx::__normal_iterator" = type { %struct.T* }
%class.anon = type { i8 }
%class.SegTree = type { i32, i64, %"class.std::vector.5", %"class.std::function" }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl" }
%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::function" = type { %"class.std::_Function_base", i64 (%"union.std::_Any_data"*, i64*, i64*)* }
%"class.std::_Function_base" = type { %"union.std::_Any_data", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* }
%"union.std::_Any_data" = type { %"union.std::_Nocopy_types" }
%"union.std::_Nocopy_types" = type { { i64, i64 } }
%class.anon.10 = type { i8 }
%class.anon.12 = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %class.anon }
%"struct.std::_Maybe_unary_or_binary_function" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator.7" = type { i8 }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %struct.P* }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::move_iterator.14" = type { %struct.T* }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %class.anon }
%"struct.__gnu_cxx::__ops::_Val_comp_iter" = type { %class.anon }
%"struct.std::integral_constant" = type { i8 }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.__gnu_cxx::__normal_iterator.15" = type { i64* }
%"class.__gnu_cxx::__normal_iterator.16" = type { i64* }
%"class.std::move_iterator.17" = type { i64* }

$_ZNSt6vectorI1PSaIS0_EEC2Ev = comdat any

$_ZNSt6vectorI1PSaIS0_EED2Ev = comdat any

$_ZNSt6vectorI1PSaIS0_EE9push_backEOS0_ = comdat any

$_ZNSt6vectorI1PSaIS0_EEixEm = comdat any

$_ZSt3maxIlERKT_S2_S2_ = comdat any

$_ZSt3minIlERKT_S2_S2_ = comdat any

$_ZN7SegTreeIlEC2EilSt8functionIFlllEE = comdat any

$_ZNSt8functionIFlllEED2Ev = comdat any

$_ZN7SegTreeIlE6updateEil = comdat any

$_ZN7SegTreeIlE5queryEii = comdat any

$_ZN7SegTreeIlED2Ev = comdat any

$_ZNSt14_Function_baseD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorIlSaIlEED2Ev = comdat any

$_ZSt8_DestroyIPllEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIlSaIlEED2Ev = comdat any

$_ZSt8_DestroyIPlEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm = comdat any

$_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm = comdat any

$_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm = comdat any

$_ZNSaIlED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIlED2Ev = comdat any

$_ZNSt12_Vector_baseI1PSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implC2Ev = comdat any

$_ZNSaI1PEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI1PEC2Ev = comdat any

$_ZSt8_DestroyIP1PS0_EvT_S2_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI1PSaIS0_EED2Ev = comdat any

$_ZSt8_DestroyIP1PEvT_S2_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP1PEEvT_S4_ = comdat any

$_ZNSt12_Vector_baseI1PSaIS0_EE13_M_deallocateEPS0_m = comdat any

$_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaI1PEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI1PE10deallocateEPS1_m = comdat any

$_ZNSaI1PED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI1PED2Ev = comdat any

$_ZNSt6vectorI1PSaIS0_EE12emplace_backIJS0_EEEvDpOT_ = comdat any

$_ZSt4moveIR1PEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt16allocator_traitsISaI1PEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorI1PSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI1PE9constructIS1_JS1_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorI1PSaIS0_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseI1PSaIS0_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorI1PSaIS0_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP1PS1_SaIS0_EET0_T_S4_S3_RT1_ = comdat any

$_ZNSt16allocator_traitsISaI1PEE7destroyIS0_EEvRS1_PT_ = comdat any

$_ZNKSt6vectorI1PSaIS0_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaI1PEE8max_sizeERKS1_ = comdat any

$_ZNKSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI1PE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI1PEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI1PE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIP1PES2_S1_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP1PSt13move_iteratorIS1_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIP1PES2_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP1PES4_EET0_T_S7_S6_ = comdat any

$_ZSt4copyISt13move_iteratorIP1PES2_ET0_T_S5_S4_ = comdat any

$_ZSt14__copy_move_a2ILb1EP1PS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIP1PEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt13__copy_move_aILb1EP1PS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIP1PENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI1PEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIP1PLb0EE7_S_baseES1_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIP1PELb1EE7_S_baseES3_ = comdat any

$_ZNKSt13move_iteratorIP1PE4baseEv = comdat any

$_ZNSt13move_iteratorIP1PEC2ES1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI1PE7destroyIS1_EEvPT_ = comdat any

$_ZSt4__lgl = comdat any

$_ZNSt14_Function_baseC2Ev = comdat any

$_ZNSt9_Any_data9_M_accessEv = comdat any

$_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNKSt9_Any_data9_M_accessEv = comdat any

$_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v = comdat any

$_ZNSt6vectorIlSaIlEEC2Ev = comdat any

$_ZNSt8functionIFlllEEC2Ev = comdat any

$_ZNSt8functionIFlllEEaSERKS1_ = comdat any

$_ZNSt6vectorIlSaIlEE6resizeEmRKl = comdat any

$_ZNSt12_Vector_baseIlSaIlEEC2Ev = comdat any

$_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev = comdat any

$_ZNSaIlEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIlEC2Ev = comdat any

$_ZNSt8functionIFlllEEC2ERKS1_ = comdat any

$_ZNSt8functionIFlllEE4swapERS1_ = comdat any

$_ZNKSt8functionIFlllEEcvbEv = comdat any

$_ZNKSt14_Function_base8_M_emptyEv = comdat any

$_ZSt4swapISt9_Any_dataEvRT_S2_ = comdat any

$_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEEvRT_S8_ = comdat any

$_ZSt4swapIPFlRKSt9_Any_dataOlS3_EEvRT_S7_ = comdat any

$_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_ = comdat any

$_ZSt4moveIRPFlRKSt9_Any_dataOlS3_EEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNKSt6vectorIlSaIlEE4sizeEv = comdat any

$_ZNSt6vectorIlSaIlEE6insertEN9__gnu_cxx17__normal_iteratorIPKlS1_EEmRS4_ = comdat any

$_ZNSt6vectorIlSaIlEE3endEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2IPlEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE = comdat any

$_ZNSt6vectorIlSaIlEE15_M_erase_at_endEPl = comdat any

$_ZN9__gnu_cxxmiIPKlSt6vectorIlSaIlEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZNKSt6vectorIlSaIlEE6cbeginEv = comdat any

$_ZNSt6vectorIlSaIlEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPlS1_EEmRKl = comdat any

$_ZNSt6vectorIlSaIlEE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxxmiIPlSt6vectorIlSaIlEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPlS0_SaIlEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13move_backwardIPlS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv = comdat any

$_ZSt4fillIPllEvT_S1_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPlmllET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPlS0_SaIlEET0_T_S3_S2_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorIPlESt13move_iteratorIT_ES2_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPlES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPlES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPlES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPlELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPlE4baseEv = comdat any

$_ZNSt13move_iteratorIPlEC2ES0_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIlEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPllEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPlmlET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPlmlEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPlmlET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPlmlEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNKSt6vectorIlSaIlEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIlEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIlEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_ = comdat any

$_ZNSt6vectorIlSaIlEEixEm = comdat any

$_ZNKSt8functionIFlllEEclEll = comdat any

$_ZN7SegTreeIlE6_queryEiiiii = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@N = global i64 0, align 8
@v = global %"class.std::vector" zeroinitializer, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@"_ZTSZ4mainE3$_1" = internal constant [12 x i8] c"Z4mainE3$_1\00"
@"_ZTIZ4mainE3$_1" = internal constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"_ZTSZ4mainE3$_1", i32 0, i32 0) }
@.str.2 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@"_ZTSZ4mainE3$_2" = internal constant [12 x i8] c"Z4mainE3$_2\00"
@"_ZTIZ4mainE3$_2" = internal constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"_ZTSZ4mainE3$_2", i32 0, i32 0) }
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s697472407.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = add i32 %3, 914734709
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 914734709
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -320809083, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -320809083, label %17
    i32 382957981, label %37
    i32 467788681, label %54
    i32 -68165359, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 382957981, i32 -68165359
  store i32 %36, i32* %13
  br label %57

; <label>:37:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %38 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 468212620
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 468212620
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 467788681, i32 -68165359
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %56 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 382957981, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %37, %17, %16
  br label %14
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  call void @_ZNSt6vectorI1PSaIS0_EEC2Ev(%"class.std::vector"* @v) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorI1PSaIS0_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @v to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI1PSaIS0_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseI1PSaIS0_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI1PSaIS0_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %106

; <label>:27:                                     ; preds = %1, %106
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %struct.P*, %struct.P** %34, align 8
  %36 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %struct.P*, %struct.P** %38, align 8
  %40 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %41 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %40) #3
  %42 = load i32, i32* @x.7
  %43 = load i32, i32* @y.8
  %44 = add i32 %42, 912643583
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 912643583
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %106

; <label>:56:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIP1PS0_EvT_S2_RSaIT0_E(%struct.P* %35, %struct.P* %39, %"class.std::allocator"* dereferenceable(1) %41)
          to label %57 unwind label %99

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* @x.7
  %59 = load i32, i32* @y.8
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %121

; <label>:71:                                     ; preds = %57, %121
  %72 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI1PSaIS0_EED2Ev(%"struct.std::_Vector_base"* %72) #3
  %73 = load i32, i32* @x.7
  %74 = load i32, i32* @y.8
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %121

; <label>:98:                                     ; preds = %71
  ret void

; <label>:99:                                     ; preds = %56
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %29, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %30, align 4
  %103 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI1PSaIS0_EED2Ev(%"struct.std::_Vector_base"* %103) #3
  br label %104

; <label>:104:                                    ; preds = %99
  %105 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %105) #12
  unreachable

; <label>:106:                                    ; preds = %27, %1
  %107 = alloca %"class.std::vector"*, align 8
  %108 = alloca i8*
  %109 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %107, align 8
  %110 = load %"class.std::vector"*, %"class.std::vector"** %107, align 8
  %111 = bitcast %"class.std::vector"* %110 to %"struct.std::_Vector_base"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %112, i32 0, i32 0
  %114 = load %struct.P*, %struct.P** %113, align 8
  %115 = bitcast %"class.std::vector"* %110 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %116, i32 0, i32 1
  %118 = load %struct.P*, %struct.P** %117, align 8
  %119 = bitcast %"class.std::vector"* %110 to %"struct.std::_Vector_base"*
  %120 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %119) #3
  br label %27

; <label>:121:                                    ; preds = %71, %57
  %122 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI1PSaIS0_EED2Ev(%"struct.std::_Vector_base"* %122) #3
  br label %71
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.9
  %2 = load i32, i32* @y.10
  %3 = sub i32 %1, 512834885
  %4 = sub i32 %3, 1
  %5 = add i32 %4, 512834885
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %1707

; <label>:27:                                     ; preds = %0, %1707
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca %struct.P, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca %"class.std::vector.0", align 8
  %49 = alloca i64, align 8
  %50 = alloca %struct.T, align 8
  %51 = alloca i64, align 8
  %52 = alloca i64, align 8
  %53 = alloca i8*
  %54 = alloca i32
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %59 = alloca %class.anon, align 1
  %60 = alloca i64, align 8
  %61 = alloca i64, align 8
  %62 = alloca %class.SegTree, align 8
  %63 = alloca %"class.std::function", align 8
  %64 = alloca %class.anon.10, align 1
  %65 = alloca %class.SegTree, align 8
  %66 = alloca %"class.std::function", align 8
  %67 = alloca %class.anon.12, align 1
  %68 = alloca i64, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64, align 8
  %71 = alloca i64, align 8
  store i32 0, i32* %28, align 4
  %72 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) @N)
  store i64 0, i64* %29, align 8
  %73 = load i32, i32* @x.9
  %74 = load i32, i32* @y.10
  %75 = sub i32 %73, -1072467859
  %76 = sub i32 %75, 1
  %77 = add i32 %76, -1072467859
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %1707

; <label>:87:                                     ; preds = %27
  br label %88

; <label>:88:                                     ; preds = %157, %87
  %89 = load i64, i64* %29, align 8
  %90 = load i64, i64* @N, align 8
  %91 = icmp slt i64 %89, %90
  br i1 %91, label %92, label %163

; <label>:92:                                     ; preds = %88
  %93 = load i32, i32* @x.9
  %94 = load i32, i32* @y.10
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %1753

; <label>:118:                                    ; preds = %92, %1753
  %119 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %30)
  %120 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* %119, i64* dereferenceable(8) %31)
  %121 = getelementptr inbounds %struct.P, %struct.P* %32, i32 0, i32 0
  %122 = load i64, i64* %30, align 8
  store i64 %122, i64* %121, align 8
  %123 = getelementptr inbounds %struct.P, %struct.P* %32, i32 0, i32 1
  %124 = load i64, i64* %31, align 8
  %125 = sub i64 0, %124
  %126 = sub i64 0, 1
  %127 = add i64 %125, %126
  %128 = sub i64 0, %127
  %129 = add nsw i64 %124, 1
  store i64 %128, i64* %123, align 8
  call void @_ZNSt6vectorI1PSaIS0_EE9push_backEOS0_(%"class.std::vector"* @v, %struct.P* dereferenceable(16) %32)
  %130 = load i32, i32* @x.9
  %131 = load i32, i32* @y.10
  %132 = sub i32 %130, 728395205
  %133 = sub i32 %132, 1
  %134 = add i32 %133, 728395205
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  br i1 %154, label %156, label %1753

; <label>:156:                                    ; preds = %118
  br label %157

; <label>:157:                                    ; preds = %156
  %158 = load i64, i64* %29, align 8
  %159 = sub i64 %158, 3311715369787120116
  %160 = add i64 %159, 1
  %161 = add i64 %160, 3311715369787120116
  %162 = add nsw i64 %158, 1
  store i64 %161, i64* %29, align 8
  br label %88

; <label>:163:                                    ; preds = %88
  store i64 0, i64* %33, align 8
  store i64 0, i64* %34, align 8
  store i64 0, i64* %35, align 8
  br label %164

; <label>:164:                                    ; preds = %311, %163
  %165 = load i64, i64* %35, align 8
  %166 = load i64, i64* @N, align 8
  %167 = icmp slt i64 %165, %166
  br i1 %167, label %168, label %312

; <label>:168:                                    ; preds = %164
  %169 = load i32, i32* @x.9
  %170 = load i32, i32* @y.10
  %171 = add i32 %169, -870941847
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -870941847
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %1781

; <label>:183:                                    ; preds = %168, %1781
  %184 = load i64, i64* %35, align 8
  %185 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %184) #3
  %186 = getelementptr inbounds %struct.P, %struct.P* %185, i32 0, i32 0
  %187 = load i64, i64* %186, align 8
  %188 = load i64, i64* %33, align 8
  %189 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %188) #3
  %190 = getelementptr inbounds %struct.P, %struct.P* %189, i32 0, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = icmp sgt i64 %187, %191
  %193 = load i32, i32* @x.9
  %194 = load i32, i32* @y.10
  %195 = sub i32 %193, 1620970367
  %196 = sub i32 %195, 1
  %197 = add i32 %196, 1620970367
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %1781

; <label>:207:                                    ; preds = %183
  br i1 %192, label %208, label %210

; <label>:208:                                    ; preds = %207
  %209 = load i64, i64* %35, align 8
  store i64 %209, i64* %33, align 8
  br label %210

; <label>:210:                                    ; preds = %208, %207
  %211 = load i64, i64* %35, align 8
  %212 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %211) #3
  %213 = getelementptr inbounds %struct.P, %struct.P* %212, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = load i64, i64* %34, align 8
  %216 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %215) #3
  %217 = getelementptr inbounds %struct.P, %struct.P* %216, i32 0, i32 1
  %218 = load i64, i64* %217, align 8
  %219 = icmp slt i64 %214, %218
  br i1 %219, label %220, label %251

; <label>:220:                                    ; preds = %210
  %221 = load i32, i32* @x.9
  %222 = load i32, i32* @y.10
  %223 = sub i32 0, 1
  %224 = add i32 %221, %223
  %225 = sub i32 %221, 1
  %226 = mul i32 %221, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %222, 10
  %230 = and i1 %228, %229
  %231 = xor i1 %228, %229
  %232 = or i1 %230, %231
  %233 = or i1 %228, %229
  br i1 %232, label %234, label %1791

; <label>:234:                                    ; preds = %220, %1791
  %235 = load i64, i64* %35, align 8
  store i64 %235, i64* %34, align 8
  %236 = load i32, i32* @x.9
  %237 = load i32, i32* @y.10
  %238 = sub i32 %236, 709311366
  %239 = sub i32 %238, 1
  %240 = add i32 %239, 709311366
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = and i1 %244, %245
  %247 = xor i1 %244, %245
  %248 = or i1 %246, %247
  %249 = or i1 %244, %245
  br i1 %248, label %250, label %1791

; <label>:250:                                    ; preds = %234
  br label %251

; <label>:251:                                    ; preds = %250, %210
  br label %252

; <label>:252:                                    ; preds = %251
  %253 = load i32, i32* @x.9
  %254 = load i32, i32* @y.10
  %255 = sub i32 %253, 448914552
  %256 = sub i32 %255, 1
  %257 = add i32 %256, 448914552
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = xor i1 %261, true
  %264 = xor i1 %262, true
  %265 = xor i1 true, true
  %266 = and i1 %263, true
  %267 = and i1 %261, %265
  %268 = and i1 %264, true
  %269 = and i1 %262, %265
  %270 = or i1 %266, %267
  %271 = or i1 %268, %269
  %272 = xor i1 %270, %271
  %273 = or i1 %263, %264
  %274 = xor i1 %273, true
  %275 = or i1 true, %265
  %276 = and i1 %274, %275
  %277 = or i1 %272, %276
  %278 = or i1 %261, %262
  br i1 %277, label %279, label %1793

; <label>:279:                                    ; preds = %252, %1793
  %280 = load i64, i64* %35, align 8
  %281 = add i64 %280, 6576734852679583567
  %282 = add i64 %281, 1
  %283 = sub i64 %282, 6576734852679583567
  %284 = add nsw i64 %280, 1
  store i64 %283, i64* %35, align 8
  %285 = load i32, i32* @x.9
  %286 = load i32, i32* @y.10
  %287 = sub i32 %285, -865468476
  %288 = sub i32 %287, 1
  %289 = add i32 %288, -865468476
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 true, true
  %298 = and i1 %295, true
  %299 = and i1 %293, %297
  %300 = and i1 %296, true
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 true, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %1793

; <label>:311:                                    ; preds = %279
  br label %164

; <label>:312:                                    ; preds = %164
  %313 = load i64, i64* %33, align 8
  %314 = load i64, i64* %34, align 8
  %315 = icmp eq i64 %313, %314
  br i1 %315, label %316, label %428

; <label>:316:                                    ; preds = %312
  %317 = load i64, i64* %33, align 8
  %318 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %317) #3
  %319 = getelementptr inbounds %struct.P, %struct.P* %318, i32 0, i32 1
  %320 = load i64, i64* %319, align 8
  %321 = load i64, i64* %33, align 8
  %322 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %321) #3
  %323 = getelementptr inbounds %struct.P, %struct.P* %322, i32 0, i32 0
  %324 = load i64, i64* %323, align 8
  %325 = add i64 %320, 8713421029577229655
  %326 = sub i64 %325, %324
  %327 = sub i64 %326, 8713421029577229655
  %328 = sub nsw i64 %320, %324
  store i64 %327, i64* %36, align 8
  store i64 -1, i64* %37, align 8
  store i64 0, i64* %38, align 8
  br label %329

; <label>:329:                                    ; preds = %418, %316
  %330 = load i64, i64* %38, align 8
  %331 = load i64, i64* @N, align 8
  %332 = icmp slt i64 %330, %331
  br i1 %332, label %333, label %419

; <label>:333:                                    ; preds = %329
  %334 = load i64, i64* %38, align 8
  %335 = load i64, i64* %33, align 8
  %336 = icmp ne i64 %334, %335
  br i1 %336, label %337, label %383

; <label>:337:                                    ; preds = %333
  br label %338

; <label>:338:                                    ; preds = %337
  %339 = load i32, i32* @x.9
  %340 = load i32, i32* @y.10
  %341 = add i32 %339, -2027637131
  %342 = sub i32 %341, 1
  %343 = sub i32 %342, -2027637131
  %344 = sub i32 %339, 1
  %345 = mul i32 %339, %343
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %340, 10
  %349 = and i1 %347, %348
  %350 = xor i1 %347, %348
  %351 = or i1 %349, %350
  %352 = or i1 %347, %348
  br i1 %351, label %353, label %1818

; <label>:353:                                    ; preds = %338, %1818
  %354 = load i64, i64* %38, align 8
  %355 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %354) #3
  %356 = getelementptr inbounds %struct.P, %struct.P* %355, i32 0, i32 1
  %357 = load i64, i64* %356, align 8
  %358 = load i64, i64* %38, align 8
  %359 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %358) #3
  %360 = getelementptr inbounds %struct.P, %struct.P* %359, i32 0, i32 0
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %357, 4514338306817618963
  %363 = sub i64 %362, %361
  %364 = add i64 %363, 4514338306817618963
  %365 = sub nsw i64 %357, %361
  store i64 %364, i64* %39, align 8
  %366 = call dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %37, i64* dereferenceable(8) %39)
  %367 = load i64, i64* %366, align 8
  store i64 %367, i64* %37, align 8
  %368 = load i32, i32* @x.9
  %369 = load i32, i32* @y.10
  %370 = sub i32 0, 1
  %371 = add i32 %368, %370
  %372 = sub i32 %368, 1
  %373 = mul i32 %368, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %369, 10
  %377 = and i1 %375, %376
  %378 = xor i1 %375, %376
  %379 = or i1 %377, %378
  %380 = or i1 %375, %376
  br i1 %379, label %381, label %1818

; <label>:381:                                    ; preds = %353
  br label %382

; <label>:382:                                    ; preds = %381
  br label %383

; <label>:383:                                    ; preds = %382, %333
  br label %384

; <label>:384:                                    ; preds = %383
  %385 = load i32, i32* @x.9
  %386 = load i32, i32* @y.10
  %387 = add i32 %385, 2027474988
  %388 = sub i32 %387, 1
  %389 = sub i32 %388, 2027474988
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = and i1 %393, %394
  %396 = xor i1 %393, %394
  %397 = or i1 %395, %396
  %398 = or i1 %393, %394
  br i1 %397, label %399, label %1857

; <label>:399:                                    ; preds = %384, %1857
  %400 = load i64, i64* %38, align 8
  %401 = sub i64 0, 1
  %402 = sub i64 %400, %401
  %403 = add nsw i64 %400, 1
  store i64 %402, i64* %38, align 8
  %404 = load i32, i32* @x.9
  %405 = load i32, i32* @y.10
  %406 = sub i32 %404, 1387228552
  %407 = sub i32 %406, 1
  %408 = add i32 %407, 1387228552
  %409 = sub i32 %404, 1
  %410 = mul i32 %404, %408
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %405, 10
  %414 = and i1 %412, %413
  %415 = xor i1 %412, %413
  %416 = or i1 %414, %415
  %417 = or i1 %412, %413
  br i1 %416, label %418, label %1857

; <label>:418:                                    ; preds = %399
  br label %329

; <label>:419:                                    ; preds = %329
  %420 = load i64, i64* %36, align 8
  %421 = load i64, i64* %37, align 8
  %422 = add i64 %420, -9104291322650315897
  %423 = add i64 %422, %421
  %424 = sub i64 %423, -9104291322650315897
  %425 = add nsw i64 %420, %421
  %426 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEl(%"class.std::basic_ostream"* @_ZSt4cout, i64 %424)
  %427 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %426, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 0, i32* %28, align 4
  br label %1670

; <label>:428:                                    ; preds = %312
  store i64 -1, i64* %40, align 8
  %429 = load i64, i64* %34, align 8
  %430 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %429) #3
  %431 = getelementptr inbounds %struct.P, %struct.P* %430, i32 0, i32 1
  %432 = load i64, i64* %34, align 8
  %433 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %432) #3
  %434 = getelementptr inbounds %struct.P, %struct.P* %433, i32 0, i32 1
  %435 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %431, i64* dereferenceable(8) %434)
  %436 = load i64, i64* %435, align 8
  %437 = load i64, i64* %33, align 8
  %438 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %437) #3
  %439 = getelementptr inbounds %struct.P, %struct.P* %438, i32 0, i32 0
  %440 = load i64, i64* %34, align 8
  %441 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %440) #3
  %442 = getelementptr inbounds %struct.P, %struct.P* %441, i32 0, i32 0
  %443 = call dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %439, i64* dereferenceable(8) %442)
  %444 = load i64, i64* %443, align 8
  %445 = sub i64 %436, 1309919504636738541
  %446 = sub i64 %445, %444
  %447 = add i64 %446, 1309919504636738541
  %448 = sub nsw i64 %436, %444
  store i64 %447, i64* %42, align 8
  store i64 0, i64* %43, align 8
  %449 = call dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %42, i64* dereferenceable(8) %43)
  %450 = load i64, i64* %449, align 8
  store i64 %450, i64* %41, align 8
  store i64 -1, i64* %44, align 8
  store i64 0, i64* %45, align 8
  br label %451

; <label>:451:                                    ; preds = %687, %428
  %452 = load i32, i32* @x.9
  %453 = load i32, i32* @y.10
  %454 = add i32 %452, -1376706973
  %455 = sub i32 %454, 1
  %456 = sub i32 %455, -1376706973
  %457 = sub i32 %452, 1
  %458 = mul i32 %452, %456
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %453, 10
  %462 = and i1 %460, %461
  %463 = xor i1 %460, %461
  %464 = or i1 %462, %463
  %465 = or i1 %460, %461
  br i1 %464, label %466, label %1872

; <label>:466:                                    ; preds = %451, %1872
  %467 = load i64, i64* %45, align 8
  %468 = load i64, i64* @N, align 8
  %469 = icmp slt i64 %467, %468
  %470 = load i32, i32* @x.9
  %471 = load i32, i32* @y.10
  %472 = sub i32 %470, 241437788
  %473 = sub i32 %472, 1
  %474 = add i32 %473, 241437788
  %475 = sub i32 %470, 1
  %476 = mul i32 %470, %474
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %471, 10
  %480 = and i1 %478, %479
  %481 = xor i1 %478, %479
  %482 = or i1 %480, %481
  %483 = or i1 %478, %479
  br i1 %482, label %484, label %1872

; <label>:484:                                    ; preds = %466
  br i1 %469, label %485, label %694

; <label>:485:                                    ; preds = %484
  %486 = load i64, i64* %45, align 8
  %487 = load i64, i64* %33, align 8
  %488 = icmp ne i64 %486, %487
  br i1 %488, label %489, label %645

; <label>:489:                                    ; preds = %485
  %490 = load i32, i32* @x.9
  %491 = load i32, i32* @y.10
  %492 = sub i32 0, 1
  %493 = add i32 %490, %492
  %494 = sub i32 %490, 1
  %495 = mul i32 %490, %493
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %491, 10
  %499 = and i1 %497, %498
  %500 = xor i1 %497, %498
  %501 = or i1 %499, %500
  %502 = or i1 %497, %498
  br i1 %501, label %503, label %1876

; <label>:503:                                    ; preds = %489, %1876
  %504 = load i64, i64* %45, align 8
  %505 = load i64, i64* %34, align 8
  %506 = icmp ne i64 %504, %505
  %507 = load i32, i32* @x.9
  %508 = load i32, i32* @y.10
  %509 = sub i32 %507, -1934637703
  %510 = sub i32 %509, 1
  %511 = add i32 %510, -1934637703
  %512 = sub i32 %507, 1
  %513 = mul i32 %507, %511
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %508, 10
  %517 = xor i1 %515, true
  %518 = xor i1 %516, true
  %519 = xor i1 true, true
  %520 = and i1 %517, true
  %521 = and i1 %515, %519
  %522 = and i1 %518, true
  %523 = and i1 %516, %519
  %524 = or i1 %520, %521
  %525 = or i1 %522, %523
  %526 = xor i1 %524, %525
  %527 = or i1 %517, %518
  %528 = xor i1 %527, true
  %529 = or i1 true, %519
  %530 = and i1 %528, %529
  %531 = or i1 %526, %530
  %532 = or i1 %515, %516
  br i1 %531, label %533, label %1876

; <label>:533:                                    ; preds = %503
  br i1 %506, label %534, label %645

; <label>:534:                                    ; preds = %533
  br label %535

; <label>:535:                                    ; preds = %534
  %536 = load i32, i32* @x.9
  %537 = load i32, i32* @y.10
  %538 = sub i32 0, 1
  %539 = add i32 %536, %538
  %540 = sub i32 %536, 1
  %541 = mul i32 %536, %539
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %537, 10
  %545 = xor i1 %543, true
  %546 = xor i1 %544, true
  %547 = xor i1 false, true
  %548 = and i1 %545, false
  %549 = and i1 %543, %547
  %550 = and i1 %546, false
  %551 = and i1 %544, %547
  %552 = or i1 %548, %549
  %553 = or i1 %550, %551
  %554 = xor i1 %552, %553
  %555 = or i1 %545, %546
  %556 = xor i1 %555, true
  %557 = or i1 false, %547
  %558 = and i1 %556, %557
  %559 = or i1 %554, %558
  %560 = or i1 %543, %544
  br i1 %559, label %561, label %1880

; <label>:561:                                    ; preds = %535, %1880
  %562 = load i64, i64* %45, align 8
  %563 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %562) #3
  %564 = getelementptr inbounds %struct.P, %struct.P* %563, i32 0, i32 1
  %565 = load i64, i64* %564, align 8
  %566 = load i64, i64* %45, align 8
  %567 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %566) #3
  %568 = getelementptr inbounds %struct.P, %struct.P* %567, i32 0, i32 0
  %569 = load i64, i64* %568, align 8
  %570 = sub i64 %565, 5380921641975417054
  %571 = sub i64 %570, %569
  %572 = add i64 %571, 5380921641975417054
  %573 = sub nsw i64 %565, %569
  store i64 %572, i64* %46, align 8
  %574 = call dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %44, i64* dereferenceable(8) %46)
  %575 = load i64, i64* %574, align 8
  store i64 %575, i64* %44, align 8
  %576 = load i32, i32* @x.9
  %577 = load i32, i32* @y.10
  %578 = sub i32 0, 1
  %579 = add i32 %576, %578
  %580 = sub i32 %576, 1
  %581 = mul i32 %576, %579
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %577, 10
  %585 = and i1 %583, %584
  %586 = xor i1 %583, %584
  %587 = or i1 %585, %586
  %588 = or i1 %583, %584
  br i1 %587, label %589, label %1880

; <label>:589:                                    ; preds = %561
  br label %590

; <label>:590:                                    ; preds = %589
  %591 = load i32, i32* @x.9
  %592 = load i32, i32* @y.10
  %593 = add i32 %591, 867826180
  %594 = sub i32 %593, 1
  %595 = sub i32 %594, 867826180
  %596 = sub i32 %591, 1
  %597 = mul i32 %591, %595
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %592, 10
  %601 = xor i1 %599, true
  %602 = xor i1 %600, true
  %603 = xor i1 false, true
  %604 = and i1 %601, false
  %605 = and i1 %599, %603
  %606 = and i1 %602, false
  %607 = and i1 %600, %603
  %608 = or i1 %604, %605
  %609 = or i1 %606, %607
  %610 = xor i1 %608, %609
  %611 = or i1 %601, %602
  %612 = xor i1 %611, true
  %613 = or i1 false, %603
  %614 = and i1 %612, %613
  %615 = or i1 %610, %614
  %616 = or i1 %599, %600
  br i1 %615, label %617, label %1900

; <label>:617:                                    ; preds = %590, %1900
  %618 = load i32, i32* @x.9
  %619 = load i32, i32* @y.10
  %620 = sub i32 %618, -96714154
  %621 = sub i32 %620, 1
  %622 = add i32 %621, -96714154
  %623 = sub i32 %618, 1
  %624 = mul i32 %618, %622
  %625 = urem i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %619, 10
  %628 = xor i1 %626, true
  %629 = xor i1 %627, true
  %630 = xor i1 true, true
  %631 = and i1 %628, true
  %632 = and i1 %626, %630
  %633 = and i1 %629, true
  %634 = and i1 %627, %630
  %635 = or i1 %631, %632
  %636 = or i1 %633, %634
  %637 = xor i1 %635, %636
  %638 = or i1 %628, %629
  %639 = xor i1 %638, true
  %640 = or i1 true, %630
  %641 = and i1 %639, %640
  %642 = or i1 %637, %641
  %643 = or i1 %626, %627
  br i1 %642, label %644, label %1900

; <label>:644:                                    ; preds = %617
  br label %645

; <label>:645:                                    ; preds = %644, %533, %485
  %646 = load i32, i32* @x.9
  %647 = load i32, i32* @y.10
  %648 = add i32 %646, -1167685610
  %649 = sub i32 %648, 1
  %650 = sub i32 %649, -1167685610
  %651 = sub i32 %646, 1
  %652 = mul i32 %646, %650
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %647, 10
  %656 = and i1 %654, %655
  %657 = xor i1 %654, %655
  %658 = or i1 %656, %657
  %659 = or i1 %654, %655
  br i1 %658, label %660, label %1901

; <label>:660:                                    ; preds = %645, %1901
  %661 = load i32, i32* @x.9
  %662 = load i32, i32* @y.10
  %663 = sub i32 0, 1
  %664 = add i32 %661, %663
  %665 = sub i32 %661, 1
  %666 = mul i32 %661, %664
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %662, 10
  %670 = xor i1 %668, true
  %671 = xor i1 %669, true
  %672 = xor i1 true, true
  %673 = and i1 %670, true
  %674 = and i1 %668, %672
  %675 = and i1 %671, true
  %676 = and i1 %669, %672
  %677 = or i1 %673, %674
  %678 = or i1 %675, %676
  %679 = xor i1 %677, %678
  %680 = or i1 %670, %671
  %681 = xor i1 %680, true
  %682 = or i1 true, %672
  %683 = and i1 %681, %682
  %684 = or i1 %679, %683
  %685 = or i1 %668, %669
  br i1 %684, label %686, label %1901

; <label>:686:                                    ; preds = %660
  br label %687

; <label>:687:                                    ; preds = %686
  %688 = load i64, i64* %45, align 8
  %689 = sub i64 0, %688
  %690 = sub i64 0, 1
  %691 = add i64 %689, %690
  %692 = sub i64 0, %691
  %693 = add nsw i64 %688, 1
  store i64 %692, i64* %45, align 8
  br label %451

; <label>:694:                                    ; preds = %484
  br label %695

; <label>:695:                                    ; preds = %694
  %696 = load i64, i64* %41, align 8
  %697 = load i64, i64* %44, align 8
  %698 = sub i64 0, %697
  %699 = sub i64 %696, %698
  %700 = add nsw i64 %696, %697
  store i64 %699, i64* %47, align 8
  %701 = call dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %40, i64* dereferenceable(8) %47)
  %702 = load i64, i64* %701, align 8
  store i64 %702, i64* %40, align 8
  br label %703

; <label>:703:                                    ; preds = %695
  call void @_ZNSt6vectorIZ4mainE1TSaIS0_EEC2Ev(%"class.std::vector.0"* %48) #3
  store i64 0, i64* %49, align 8
  br label %704

; <label>:704:                                    ; preds = %985, %703
  %705 = load i32, i32* @x.9
  %706 = load i32, i32* @y.10
  %707 = sub i32 %705, 1483297720
  %708 = sub i32 %707, 1
  %709 = add i32 %708, 1483297720
  %710 = sub i32 %705, 1
  %711 = mul i32 %705, %709
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %706, 10
  %715 = xor i1 %713, true
  %716 = xor i1 %714, true
  %717 = xor i1 true, true
  %718 = and i1 %715, true
  %719 = and i1 %713, %717
  %720 = and i1 %716, true
  %721 = and i1 %714, %717
  %722 = or i1 %718, %719
  %723 = or i1 %720, %721
  %724 = xor i1 %722, %723
  %725 = or i1 %715, %716
  %726 = xor i1 %725, true
  %727 = or i1 true, %717
  %728 = and i1 %726, %727
  %729 = or i1 %724, %728
  %730 = or i1 %713, %714
  br i1 %729, label %731, label %1902

; <label>:731:                                    ; preds = %704, %1902
  %732 = load i64, i64* %49, align 8
  %733 = load i64, i64* @N, align 8
  %734 = icmp slt i64 %732, %733
  %735 = load i32, i32* @x.9
  %736 = load i32, i32* @y.10
  %737 = add i32 %735, 2096106766
  %738 = sub i32 %737, 1
  %739 = sub i32 %738, 2096106766
  %740 = sub i32 %735, 1
  %741 = mul i32 %735, %739
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %736, 10
  %745 = xor i1 %743, true
  %746 = xor i1 %744, true
  %747 = xor i1 true, true
  %748 = and i1 %745, true
  %749 = and i1 %743, %747
  %750 = and i1 %746, true
  %751 = and i1 %744, %747
  %752 = or i1 %748, %749
  %753 = or i1 %750, %751
  %754 = xor i1 %752, %753
  %755 = or i1 %745, %746
  %756 = xor i1 %755, true
  %757 = or i1 true, %747
  %758 = and i1 %756, %757
  %759 = or i1 %754, %758
  %760 = or i1 %743, %744
  br i1 %759, label %761, label %1902

; <label>:761:                                    ; preds = %731
  br i1 %734, label %762, label %991

; <label>:762:                                    ; preds = %761
  %763 = load i32, i32* @x.9
  %764 = load i32, i32* @y.10
  %765 = sub i32 %763, -1426145553
  %766 = sub i32 %765, 1
  %767 = add i32 %766, -1426145553
  %768 = sub i32 %763, 1
  %769 = mul i32 %763, %767
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %764, 10
  %773 = and i1 %771, %772
  %774 = xor i1 %771, %772
  %775 = or i1 %773, %774
  %776 = or i1 %771, %772
  br i1 %775, label %777, label %1906

; <label>:777:                                    ; preds = %762, %1906
  %778 = load i64, i64* %49, align 8
  %779 = load i64, i64* %33, align 8
  %780 = icmp ne i64 %778, %779
  %781 = load i32, i32* @x.9
  %782 = load i32, i32* @y.10
  %783 = sub i32 %781, 789396426
  %784 = sub i32 %783, 1
  %785 = add i32 %784, 789396426
  %786 = sub i32 %781, 1
  %787 = mul i32 %781, %785
  %788 = urem i32 %787, 2
  %789 = icmp eq i32 %788, 0
  %790 = icmp slt i32 %782, 10
  %791 = xor i1 %789, true
  %792 = xor i1 %790, true
  %793 = xor i1 false, true
  %794 = and i1 %791, false
  %795 = and i1 %789, %793
  %796 = and i1 %792, false
  %797 = and i1 %790, %793
  %798 = or i1 %794, %795
  %799 = or i1 %796, %797
  %800 = xor i1 %798, %799
  %801 = or i1 %791, %792
  %802 = xor i1 %801, true
  %803 = or i1 false, %793
  %804 = and i1 %802, %803
  %805 = or i1 %800, %804
  %806 = or i1 %789, %790
  br i1 %805, label %807, label %1906

; <label>:807:                                    ; preds = %777
  br i1 %780, label %808, label %943

; <label>:808:                                    ; preds = %807
  %809 = load i64, i64* %49, align 8
  %810 = load i64, i64* %34, align 8
  %811 = icmp ne i64 %809, %810
  br i1 %811, label %812, label %943

; <label>:812:                                    ; preds = %808
  %813 = getelementptr inbounds %struct.T, %struct.T* %50, i32 0, i32 0
  %814 = load i64, i64* %49, align 8
  %815 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %814) #3
  %816 = getelementptr inbounds %struct.P, %struct.P* %815, i32 0, i32 1
  %817 = load i64, i64* %816, align 8
  %818 = load i64, i64* %33, align 8
  %819 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %818) #3
  %820 = getelementptr inbounds %struct.P, %struct.P* %819, i32 0, i32 0
  %821 = load i64, i64* %820, align 8
  %822 = add i64 %817, -850082619289003397
  %823 = sub i64 %822, %821
  %824 = sub i64 %823, -850082619289003397
  %825 = sub nsw i64 %817, %821
  store i64 %824, i64* %51, align 8
  store i64 0, i64* %52, align 8
  %826 = invoke dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %51, i64* dereferenceable(8) %52)
          to label %827 unwind label %939

; <label>:827:                                    ; preds = %812
  %828 = load i64, i64* %826, align 8
  store i64 %828, i64* %813, align 8
  %829 = getelementptr inbounds %struct.T, %struct.T* %50, i32 0, i32 1
  %830 = load i64, i64* %34, align 8
  %831 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %830) #3
  %832 = getelementptr inbounds %struct.P, %struct.P* %831, i32 0, i32 1
  %833 = load i64, i64* %832, align 8
  %834 = load i64, i64* %49, align 8
  %835 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %834) #3
  %836 = getelementptr inbounds %struct.P, %struct.P* %835, i32 0, i32 0
  %837 = load i64, i64* %836, align 8
  %838 = sub i64 0, %837
  %839 = add i64 %833, %838
  %840 = sub nsw i64 %833, %837
  store i64 %839, i64* %55, align 8
  store i64 0, i64* %56, align 8
  %841 = invoke dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %55, i64* dereferenceable(8) %56)
          to label %842 unwind label %939

; <label>:842:                                    ; preds = %827
  %843 = load i32, i32* @x.9
  %844 = load i32, i32* @y.10
  %845 = sub i32 0, 1
  %846 = add i32 %843, %845
  %847 = sub i32 %843, 1
  %848 = mul i32 %843, %846
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %844, 10
  %852 = and i1 %850, %851
  %853 = xor i1 %850, %851
  %854 = or i1 %852, %853
  %855 = or i1 %850, %851
  br i1 %854, label %856, label %1910

; <label>:856:                                    ; preds = %842, %1910
  %857 = load i64, i64* %841, align 8
  store i64 %857, i64* %829, align 8
  %858 = load i32, i32* @x.9
  %859 = load i32, i32* @y.10
  %860 = sub i32 %858, 1373604279
  %861 = sub i32 %860, 1
  %862 = add i32 %861, 1373604279
  %863 = sub i32 %858, 1
  %864 = mul i32 %858, %862
  %865 = urem i32 %864, 2
  %866 = icmp eq i32 %865, 0
  %867 = icmp slt i32 %859, 10
  %868 = xor i1 %866, true
  %869 = xor i1 %867, true
  %870 = xor i1 false, true
  %871 = and i1 %868, false
  %872 = and i1 %866, %870
  %873 = and i1 %869, false
  %874 = and i1 %867, %870
  %875 = or i1 %871, %872
  %876 = or i1 %873, %874
  %877 = xor i1 %875, %876
  %878 = or i1 %868, %869
  %879 = xor i1 %878, true
  %880 = or i1 false, %870
  %881 = and i1 %879, %880
  %882 = or i1 %877, %881
  %883 = or i1 %866, %867
  br i1 %882, label %884, label %1910

; <label>:884:                                    ; preds = %856
  invoke void @_ZNSt6vectorIZ4mainE1TSaIS0_EE9push_backEOS0_(%"class.std::vector.0"* %48, %struct.T* dereferenceable(16) %50)
          to label %885 unwind label %939

; <label>:885:                                    ; preds = %884
  %886 = load i32, i32* @x.9
  %887 = load i32, i32* @y.10
  %888 = sub i32 %886, -2031835696
  %889 = sub i32 %888, 1
  %890 = add i32 %889, -2031835696
  %891 = sub i32 %886, 1
  %892 = mul i32 %886, %890
  %893 = urem i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = icmp slt i32 %887, 10
  %896 = xor i1 %894, true
  %897 = xor i1 %895, true
  %898 = xor i1 true, true
  %899 = and i1 %896, true
  %900 = and i1 %894, %898
  %901 = and i1 %897, true
  %902 = and i1 %895, %898
  %903 = or i1 %899, %900
  %904 = or i1 %901, %902
  %905 = xor i1 %903, %904
  %906 = or i1 %896, %897
  %907 = xor i1 %906, true
  %908 = or i1 true, %898
  %909 = and i1 %907, %908
  %910 = or i1 %905, %909
  %911 = or i1 %894, %895
  br i1 %910, label %912, label %1912

; <label>:912:                                    ; preds = %885, %1912
  %913 = load i32, i32* @x.9
  %914 = load i32, i32* @y.10
  %915 = sub i32 0, 1
  %916 = add i32 %913, %915
  %917 = sub i32 %913, 1
  %918 = mul i32 %913, %916
  %919 = urem i32 %918, 2
  %920 = icmp eq i32 %919, 0
  %921 = icmp slt i32 %914, 10
  %922 = xor i1 %920, true
  %923 = xor i1 %921, true
  %924 = xor i1 true, true
  %925 = and i1 %922, true
  %926 = and i1 %920, %924
  %927 = and i1 %923, true
  %928 = and i1 %921, %924
  %929 = or i1 %925, %926
  %930 = or i1 %927, %928
  %931 = xor i1 %929, %930
  %932 = or i1 %922, %923
  %933 = xor i1 %932, true
  %934 = or i1 true, %924
  %935 = and i1 %933, %934
  %936 = or i1 %931, %935
  %937 = or i1 %920, %921
  br i1 %936, label %938, label %1912

; <label>:938:                                    ; preds = %912
  br label %943

; <label>:939:                                    ; preds = %1002, %996, %993, %991, %884, %827, %812
  %940 = landingpad { i8*, i32 }
          cleanup
  %941 = extractvalue { i8*, i32 } %940, 0
  store i8* %941, i8** %53, align 8
  %942 = extractvalue { i8*, i32 } %940, 1
  store i32 %942, i32* %54, align 4
  br label %1669

; <label>:943:                                    ; preds = %938, %808, %807
  %944 = load i32, i32* @x.9
  %945 = load i32, i32* @y.10
  %946 = sub i32 0, 1
  %947 = add i32 %944, %946
  %948 = sub i32 %944, 1
  %949 = mul i32 %944, %947
  %950 = urem i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = icmp slt i32 %945, 10
  %953 = and i1 %951, %952
  %954 = xor i1 %951, %952
  %955 = or i1 %953, %954
  %956 = or i1 %951, %952
  br i1 %955, label %957, label %1913

; <label>:957:                                    ; preds = %943, %1913
  %958 = load i32, i32* @x.9
  %959 = load i32, i32* @y.10
  %960 = sub i32 %958, 2137892773
  %961 = sub i32 %960, 1
  %962 = add i32 %961, 2137892773
  %963 = sub i32 %958, 1
  %964 = mul i32 %958, %962
  %965 = urem i32 %964, 2
  %966 = icmp eq i32 %965, 0
  %967 = icmp slt i32 %959, 10
  %968 = xor i1 %966, true
  %969 = xor i1 %967, true
  %970 = xor i1 true, true
  %971 = and i1 %968, true
  %972 = and i1 %966, %970
  %973 = and i1 %969, true
  %974 = and i1 %967, %970
  %975 = or i1 %971, %972
  %976 = or i1 %973, %974
  %977 = xor i1 %975, %976
  %978 = or i1 %968, %969
  %979 = xor i1 %978, true
  %980 = or i1 true, %970
  %981 = and i1 %979, %980
  %982 = or i1 %977, %981
  %983 = or i1 %966, %967
  br i1 %982, label %984, label %1913

; <label>:984:                                    ; preds = %957
  br label %985

; <label>:985:                                    ; preds = %984
  %986 = load i64, i64* %49, align 8
  %987 = add i64 %986, -6760437374222756223
  %988 = add i64 %987, 1
  %989 = sub i64 %988, -6760437374222756223
  %990 = add nsw i64 %986, 1
  store i64 %989, i64* %49, align 8
  br label %704

; <label>:991:                                    ; preds = %761
  %992 = invoke %struct.T* @_ZSt5beginISt6vectorIZ4mainE1TSaIS1_EEEDTcldtfp_5beginEERT_(%"class.std::vector.0"* dereferenceable(24) %48)
          to label %993 unwind label %939

; <label>:993:                                    ; preds = %991
  %994 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %57, i32 0, i32 0
  store %struct.T* %992, %struct.T** %994, align 8
  %995 = invoke %struct.T* @_ZSt3endISt6vectorIZ4mainE1TSaIS1_EEEDTcldtfp_3endEERT_(%"class.std::vector.0"* dereferenceable(24) %48)
          to label %996 unwind label %939

; <label>:996:                                    ; preds = %993
  %997 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %58, i32 0, i32 0
  store %struct.T* %995, %struct.T** %997, align 8
  %998 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %57, i32 0, i32 0
  %999 = load %struct.T*, %struct.T** %998, align 8
  %1000 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %58, i32 0, i32 0
  %1001 = load %struct.T*, %struct.T** %1000, align 8
  invoke void @"_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEZ4mainE3$_0EvT_S9_T0_"(%struct.T* %999, %struct.T* %1001)
          to label %1002 unwind label %939

; <label>:1002:                                   ; preds = %996
  %1003 = load i64, i64* %33, align 8
  %1004 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1003) #3
  %1005 = getelementptr inbounds %struct.P, %struct.P* %1004, i32 0, i32 1
  %1006 = load i64, i64* %1005, align 8
  %1007 = load i64, i64* %33, align 8
  %1008 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1007) #3
  %1009 = getelementptr inbounds %struct.P, %struct.P* %1008, i32 0, i32 0
  %1010 = load i64, i64* %1009, align 8
  %1011 = sub i64 %1006, 8915381747283899379
  %1012 = sub i64 %1011, %1010
  %1013 = add i64 %1012, 8915381747283899379
  %1014 = sub nsw i64 %1006, %1010
  store i64 %1013, i64* %60, align 8
  %1015 = load i64, i64* %34, align 8
  %1016 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1015) #3
  %1017 = getelementptr inbounds %struct.P, %struct.P* %1016, i32 0, i32 1
  %1018 = load i64, i64* %1017, align 8
  %1019 = load i64, i64* %34, align 8
  %1020 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1019) #3
  %1021 = getelementptr inbounds %struct.P, %struct.P* %1020, i32 0, i32 0
  %1022 = load i64, i64* %1021, align 8
  %1023 = sub i64 %1018, -2088098408207123564
  %1024 = sub i64 %1023, %1022
  %1025 = add i64 %1024, -2088098408207123564
  %1026 = sub nsw i64 %1018, %1022
  store i64 %1025, i64* %61, align 8
  %1027 = load i64, i64* @N, align 8
  %1028 = trunc i64 %1027 to i32
  %1029 = load i64, i64* %60, align 8
  invoke void @"_ZNSt8functionIFlllEEC2IZ4mainE3$_1vvEET_"(%"class.std::function"* %63)
          to label %1030 unwind label %939

; <label>:1030:                                   ; preds = %1002
  invoke void @_ZN7SegTreeIlEC2EilSt8functionIFlllEE(%class.SegTree* %62, i32 %1028, i64 %1029, %"class.std::function"* %63)
          to label %1031 unwind label %1112

; <label>:1031:                                   ; preds = %1030
  %1032 = load i32, i32* @x.9
  %1033 = load i32, i32* @y.10
  %1034 = sub i32 0, 1
  %1035 = add i32 %1032, %1034
  %1036 = sub i32 %1032, 1
  %1037 = mul i32 %1032, %1035
  %1038 = urem i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = icmp slt i32 %1033, 10
  %1041 = and i1 %1039, %1040
  %1042 = xor i1 %1039, %1040
  %1043 = or i1 %1041, %1042
  %1044 = or i1 %1039, %1040
  br i1 %1043, label %1045, label %1914

; <label>:1045:                                   ; preds = %1031, %1914
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %63) #3
  %1046 = load i64, i64* @N, align 8
  %1047 = trunc i64 %1046 to i32
  %1048 = load i64, i64* %61, align 8
  %1049 = load i32, i32* @x.9
  %1050 = load i32, i32* @y.10
  %1051 = sub i32 0, 1
  %1052 = add i32 %1049, %1051
  %1053 = sub i32 %1049, 1
  %1054 = mul i32 %1049, %1052
  %1055 = urem i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  %1057 = icmp slt i32 %1050, 10
  %1058 = and i1 %1056, %1057
  %1059 = xor i1 %1056, %1057
  %1060 = or i1 %1058, %1059
  %1061 = or i1 %1056, %1057
  br i1 %1060, label %1062, label %1914

; <label>:1062:                                   ; preds = %1045
  invoke void @"_ZNSt8functionIFlllEEC2IZ4mainE3$_2vvEET_"(%"class.std::function"* %66)
          to label %1063 unwind label %1169

; <label>:1063:                                   ; preds = %1062
  invoke void @_ZN7SegTreeIlEC2EilSt8functionIFlllEE(%class.SegTree* %65, i32 %1047, i64 %1048, %"class.std::function"* %66)
          to label %1064 unwind label %1173

; <label>:1064:                                   ; preds = %1063
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %66) #3
  store i64 0, i64* %68, align 8
  br label %1065

; <label>:1065:                                   ; preds = %1111, %1064
  %1066 = load i64, i64* %68, align 8
  %1067 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %48) #3
  %1068 = icmp ult i64 %1066, %1067
  br i1 %1068, label %1069, label %1222

; <label>:1069:                                   ; preds = %1065
  %1070 = load i64, i64* %68, align 8
  %1071 = trunc i64 %1070 to i32
  %1072 = load i64, i64* %68, align 8
  %1073 = call dereferenceable(16) %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EEixEm(%"class.std::vector.0"* %48, i64 %1072) #3
  %1074 = getelementptr inbounds %struct.T, %struct.T* %1073, i32 0, i32 1
  %1075 = load i64, i64* %1074, align 8
  invoke void @_ZN7SegTreeIlE6updateEil(%class.SegTree* %65, i32 %1071, i64 %1075)
          to label %1076 unwind label %1177

; <label>:1076:                                   ; preds = %1069
  br label %1077

; <label>:1077:                                   ; preds = %1076
  %1078 = load i32, i32* @x.9
  %1079 = load i32, i32* @y.10
  %1080 = add i32 %1078, 1936931231
  %1081 = sub i32 %1080, 1
  %1082 = sub i32 %1081, 1936931231
  %1083 = sub i32 %1078, 1
  %1084 = mul i32 %1078, %1082
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1079, 10
  %1088 = and i1 %1086, %1087
  %1089 = xor i1 %1086, %1087
  %1090 = or i1 %1088, %1089
  %1091 = or i1 %1086, %1087
  br i1 %1090, label %1092, label %1918

; <label>:1092:                                   ; preds = %1077, %1918
  %1093 = load i64, i64* %68, align 8
  %1094 = sub i64 %1093, 7901655210690676691
  %1095 = add i64 %1094, 1
  %1096 = add i64 %1095, 7901655210690676691
  %1097 = add nsw i64 %1093, 1
  store i64 %1096, i64* %68, align 8
  %1098 = load i32, i32* @x.9
  %1099 = load i32, i32* @y.10
  %1100 = sub i32 0, 1
  %1101 = add i32 %1098, %1100
  %1102 = sub i32 %1098, 1
  %1103 = mul i32 %1098, %1101
  %1104 = urem i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  %1106 = icmp slt i32 %1099, 10
  %1107 = and i1 %1105, %1106
  %1108 = xor i1 %1105, %1106
  %1109 = or i1 %1107, %1108
  %1110 = or i1 %1105, %1106
  br i1 %1109, label %1111, label %1918

; <label>:1111:                                   ; preds = %1092
  br label %1065

; <label>:1112:                                   ; preds = %1030
  %1113 = load i32, i32* @x.9
  %1114 = load i32, i32* @y.10
  %1115 = sub i32 0, 1
  %1116 = add i32 %1113, %1115
  %1117 = sub i32 %1113, 1
  %1118 = mul i32 %1113, %1116
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1114, 10
  %1122 = xor i1 %1120, true
  %1123 = xor i1 %1121, true
  %1124 = xor i1 false, true
  %1125 = and i1 %1122, false
  %1126 = and i1 %1120, %1124
  %1127 = and i1 %1123, false
  %1128 = and i1 %1121, %1124
  %1129 = or i1 %1125, %1126
  %1130 = or i1 %1127, %1128
  %1131 = xor i1 %1129, %1130
  %1132 = or i1 %1122, %1123
  %1133 = xor i1 %1132, true
  %1134 = or i1 false, %1124
  %1135 = and i1 %1133, %1134
  %1136 = or i1 %1131, %1135
  %1137 = or i1 %1120, %1121
  br i1 %1136, label %1138, label %1945

; <label>:1138:                                   ; preds = %1112, %1945
  %1139 = landingpad { i8*, i32 }
          cleanup
  %1140 = extractvalue { i8*, i32 } %1139, 0
  store i8* %1140, i8** %53, align 8
  %1141 = extractvalue { i8*, i32 } %1139, 1
  store i32 %1141, i32* %54, align 4
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %63) #3
  %1142 = load i32, i32* @x.9
  %1143 = load i32, i32* @y.10
  %1144 = sub i32 %1142, -228912650
  %1145 = sub i32 %1144, 1
  %1146 = add i32 %1145, -228912650
  %1147 = sub i32 %1142, 1
  %1148 = mul i32 %1142, %1146
  %1149 = urem i32 %1148, 2
  %1150 = icmp eq i32 %1149, 0
  %1151 = icmp slt i32 %1143, 10
  %1152 = xor i1 %1150, true
  %1153 = xor i1 %1151, true
  %1154 = xor i1 true, true
  %1155 = and i1 %1152, true
  %1156 = and i1 %1150, %1154
  %1157 = and i1 %1153, true
  %1158 = and i1 %1151, %1154
  %1159 = or i1 %1155, %1156
  %1160 = or i1 %1157, %1158
  %1161 = xor i1 %1159, %1160
  %1162 = or i1 %1152, %1153
  %1163 = xor i1 %1162, true
  %1164 = or i1 true, %1154
  %1165 = and i1 %1163, %1164
  %1166 = or i1 %1161, %1165
  %1167 = or i1 %1150, %1151
  br i1 %1166, label %1168, label %1945

; <label>:1168:                                   ; preds = %1138
  br label %1669

; <label>:1169:                                   ; preds = %1062
  %1170 = landingpad { i8*, i32 }
          cleanup
  %1171 = extractvalue { i8*, i32 } %1170, 0
  store i8* %1171, i8** %53, align 8
  %1172 = extractvalue { i8*, i32 } %1170, 1
  store i32 %1172, i32* %54, align 4
  br label %1616

; <label>:1173:                                   ; preds = %1063
  %1174 = landingpad { i8*, i32 }
          cleanup
  %1175 = extractvalue { i8*, i32 } %1174, 0
  store i8* %1175, i8** %53, align 8
  %1176 = extractvalue { i8*, i32 } %1174, 1
  store i32 %1176, i32* %54, align 4
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %66) #3
  br label %1616

; <label>:1177:                                   ; preds = %1567, %1563, %1559, %1497, %1496, %1307, %1257, %1255, %1069
  %1178 = load i32, i32* @x.9
  %1179 = load i32, i32* @y.10
  %1180 = add i32 %1178, 1892770069
  %1181 = sub i32 %1180, 1
  %1182 = sub i32 %1181, 1892770069
  %1183 = sub i32 %1178, 1
  %1184 = mul i32 %1178, %1182
  %1185 = urem i32 %1184, 2
  %1186 = icmp eq i32 %1185, 0
  %1187 = icmp slt i32 %1179, 10
  %1188 = and i1 %1186, %1187
  %1189 = xor i1 %1186, %1187
  %1190 = or i1 %1188, %1189
  %1191 = or i1 %1186, %1187
  br i1 %1190, label %1192, label %1949

; <label>:1192:                                   ; preds = %1177, %1949
  %1193 = landingpad { i8*, i32 }
          cleanup
  %1194 = extractvalue { i8*, i32 } %1193, 0
  store i8* %1194, i8** %53, align 8
  %1195 = extractvalue { i8*, i32 } %1193, 1
  store i32 %1195, i32* %54, align 4
  call void @_ZN7SegTreeIlED2Ev(%class.SegTree* %65) #3
  %1196 = load i32, i32* @x.9
  %1197 = load i32, i32* @y.10
  %1198 = sub i32 0, 1
  %1199 = add i32 %1196, %1198
  %1200 = sub i32 %1196, 1
  %1201 = mul i32 %1196, %1199
  %1202 = urem i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  %1204 = icmp slt i32 %1197, 10
  %1205 = xor i1 %1203, true
  %1206 = xor i1 %1204, true
  %1207 = xor i1 false, true
  %1208 = and i1 %1205, false
  %1209 = and i1 %1203, %1207
  %1210 = and i1 %1206, false
  %1211 = and i1 %1204, %1207
  %1212 = or i1 %1208, %1209
  %1213 = or i1 %1210, %1211
  %1214 = xor i1 %1212, %1213
  %1215 = or i1 %1205, %1206
  %1216 = xor i1 %1215, true
  %1217 = or i1 false, %1207
  %1218 = and i1 %1216, %1217
  %1219 = or i1 %1214, %1218
  %1220 = or i1 %1203, %1204
  br i1 %1219, label %1221, label %1949

; <label>:1221:                                   ; preds = %1192
  br label %1616

; <label>:1222:                                   ; preds = %1065
  br label %1223

; <label>:1223:                                   ; preds = %1222
  %1224 = load i32, i32* @x.9
  %1225 = load i32, i32* @y.10
  %1226 = add i32 %1224, -1088172154
  %1227 = sub i32 %1226, 1
  %1228 = sub i32 %1227, -1088172154
  %1229 = sub i32 %1224, 1
  %1230 = mul i32 %1224, %1228
  %1231 = urem i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp slt i32 %1225, 10
  %1234 = and i1 %1232, %1233
  %1235 = xor i1 %1232, %1233
  %1236 = or i1 %1234, %1235
  %1237 = or i1 %1232, %1233
  br i1 %1236, label %1238, label %1953

; <label>:1238:                                   ; preds = %1223, %1953
  %1239 = load i64, i64* @N, align 8
  %1240 = trunc i64 %1239 to i32
  %1241 = load i32, i32* @x.9
  %1242 = load i32, i32* @y.10
  %1243 = sub i32 %1241, 876299677
  %1244 = sub i32 %1243, 1
  %1245 = add i32 %1244, 876299677
  %1246 = sub i32 %1241, 1
  %1247 = mul i32 %1241, %1245
  %1248 = urem i32 %1247, 2
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp slt i32 %1242, 10
  %1251 = and i1 %1249, %1250
  %1252 = xor i1 %1249, %1250
  %1253 = or i1 %1251, %1252
  %1254 = or i1 %1249, %1250
  br i1 %1253, label %1255, label %1953

; <label>:1255:                                   ; preds = %1238
  %1256 = invoke i64 @_ZN7SegTreeIlE5queryEii(%class.SegTree* %62, i32 0, i32 %1240)
          to label %1257 unwind label %1177

; <label>:1257:                                   ; preds = %1255
  %1258 = load i64, i64* @N, align 8
  %1259 = trunc i64 %1258 to i32
  %1260 = invoke i64 @_ZN7SegTreeIlE5queryEii(%class.SegTree* %65, i32 0, i32 %1259)
          to label %1261 unwind label %1177

; <label>:1261:                                   ; preds = %1257
  %1262 = load i32, i32* @x.9
  %1263 = load i32, i32* @y.10
  %1264 = sub i32 %1262, -817237874
  %1265 = sub i32 %1264, 1
  %1266 = add i32 %1265, -817237874
  %1267 = sub i32 %1262, 1
  %1268 = mul i32 %1262, %1266
  %1269 = urem i32 %1268, 2
  %1270 = icmp eq i32 %1269, 0
  %1271 = icmp slt i32 %1263, 10
  %1272 = xor i1 %1270, true
  %1273 = xor i1 %1271, true
  %1274 = xor i1 false, true
  %1275 = and i1 %1272, false
  %1276 = and i1 %1270, %1274
  %1277 = and i1 %1273, false
  %1278 = and i1 %1271, %1274
  %1279 = or i1 %1275, %1276
  %1280 = or i1 %1277, %1278
  %1281 = xor i1 %1279, %1280
  %1282 = or i1 %1272, %1273
  %1283 = xor i1 %1282, true
  %1284 = or i1 false, %1274
  %1285 = and i1 %1283, %1284
  %1286 = or i1 %1281, %1285
  %1287 = or i1 %1270, %1271
  br i1 %1286, label %1288, label %1956

; <label>:1288:                                   ; preds = %1261, %1956
  %1289 = add i64 %1256, 5476486119728711718
  %1290 = add i64 %1289, %1260
  %1291 = sub i64 %1290, 5476486119728711718
  %1292 = add nsw i64 %1256, %1260
  store i64 %1291, i64* %69, align 8
  %1293 = load i32, i32* @x.9
  %1294 = load i32, i32* @y.10
  %1295 = sub i32 %1293, -548846728
  %1296 = sub i32 %1295, 1
  %1297 = add i32 %1296, -548846728
  %1298 = sub i32 %1293, 1
  %1299 = mul i32 %1293, %1297
  %1300 = urem i32 %1299, 2
  %1301 = icmp eq i32 %1300, 0
  %1302 = icmp slt i32 %1294, 10
  %1303 = and i1 %1301, %1302
  %1304 = xor i1 %1301, %1302
  %1305 = or i1 %1303, %1304
  %1306 = or i1 %1301, %1302
  br i1 %1305, label %1307, label %1956

; <label>:1307:                                   ; preds = %1288
  %1308 = invoke dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %40, i64* dereferenceable(8) %69)
          to label %1309 unwind label %1177

; <label>:1309:                                   ; preds = %1307
  %1310 = load i32, i32* @x.9
  %1311 = load i32, i32* @y.10
  %1312 = add i32 %1310, 104317970
  %1313 = sub i32 %1312, 1
  %1314 = sub i32 %1313, 104317970
  %1315 = sub i32 %1310, 1
  %1316 = mul i32 %1310, %1314
  %1317 = urem i32 %1316, 2
  %1318 = icmp eq i32 %1317, 0
  %1319 = icmp slt i32 %1311, 10
  %1320 = xor i1 %1318, true
  %1321 = xor i1 %1319, true
  %1322 = xor i1 false, true
  %1323 = and i1 %1320, false
  %1324 = and i1 %1318, %1322
  %1325 = and i1 %1321, false
  %1326 = and i1 %1319, %1322
  %1327 = or i1 %1323, %1324
  %1328 = or i1 %1325, %1326
  %1329 = xor i1 %1327, %1328
  %1330 = or i1 %1320, %1321
  %1331 = xor i1 %1330, true
  %1332 = or i1 false, %1322
  %1333 = and i1 %1331, %1332
  %1334 = or i1 %1329, %1333
  %1335 = or i1 %1318, %1319
  br i1 %1334, label %1336, label %1981

; <label>:1336:                                   ; preds = %1309, %1981
  %1337 = load i64, i64* %1308, align 8
  store i64 %1337, i64* %40, align 8
  %1338 = load i32, i32* @x.9
  %1339 = load i32, i32* @y.10
  %1340 = add i32 %1338, -1872635268
  %1341 = sub i32 %1340, 1
  %1342 = sub i32 %1341, -1872635268
  %1343 = sub i32 %1338, 1
  %1344 = mul i32 %1338, %1342
  %1345 = urem i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  %1347 = icmp slt i32 %1339, 10
  %1348 = xor i1 %1346, true
  %1349 = xor i1 %1347, true
  %1350 = xor i1 false, true
  %1351 = and i1 %1348, false
  %1352 = and i1 %1346, %1350
  %1353 = and i1 %1349, false
  %1354 = and i1 %1347, %1350
  %1355 = or i1 %1351, %1352
  %1356 = or i1 %1353, %1354
  %1357 = xor i1 %1355, %1356
  %1358 = or i1 %1348, %1349
  %1359 = xor i1 %1358, true
  %1360 = or i1 false, %1350
  %1361 = and i1 %1359, %1360
  %1362 = or i1 %1357, %1361
  %1363 = or i1 %1346, %1347
  br i1 %1362, label %1364, label %1981

; <label>:1364:                                   ; preds = %1336
  br label %1365

; <label>:1365:                                   ; preds = %1364
  %1366 = load i32, i32* @x.9
  %1367 = load i32, i32* @y.10
  %1368 = sub i32 %1366, -1666676016
  %1369 = sub i32 %1368, 1
  %1370 = add i32 %1369, -1666676016
  %1371 = sub i32 %1366, 1
  %1372 = mul i32 %1366, %1370
  %1373 = urem i32 %1372, 2
  %1374 = icmp eq i32 %1373, 0
  %1375 = icmp slt i32 %1367, 10
  %1376 = and i1 %1374, %1375
  %1377 = xor i1 %1374, %1375
  %1378 = or i1 %1376, %1377
  %1379 = or i1 %1374, %1375
  br i1 %1378, label %1380, label %1983

; <label>:1380:                                   ; preds = %1365, %1983
  %1381 = load i32, i32* @x.9
  %1382 = load i32, i32* @y.10
  %1383 = sub i32 0, 1
  %1384 = add i32 %1381, %1383
  %1385 = sub i32 %1381, 1
  %1386 = mul i32 %1381, %1384
  %1387 = urem i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = icmp slt i32 %1382, 10
  %1390 = xor i1 %1388, true
  %1391 = xor i1 %1389, true
  %1392 = xor i1 false, true
  %1393 = and i1 %1390, false
  %1394 = and i1 %1388, %1392
  %1395 = and i1 %1391, false
  %1396 = and i1 %1389, %1392
  %1397 = or i1 %1393, %1394
  %1398 = or i1 %1395, %1396
  %1399 = xor i1 %1397, %1398
  %1400 = or i1 %1390, %1391
  %1401 = xor i1 %1400, true
  %1402 = or i1 false, %1392
  %1403 = and i1 %1401, %1402
  %1404 = or i1 %1399, %1403
  %1405 = or i1 %1388, %1389
  br i1 %1404, label %1406, label %1983

; <label>:1406:                                   ; preds = %1380
  br label %1407

; <label>:1407:                                   ; preds = %1406
  %1408 = load i32, i32* @x.9
  %1409 = load i32, i32* @y.10
  %1410 = sub i32 0, 1
  %1411 = add i32 %1408, %1410
  %1412 = sub i32 %1408, 1
  %1413 = mul i32 %1408, %1411
  %1414 = urem i32 %1413, 2
  %1415 = icmp eq i32 %1414, 0
  %1416 = icmp slt i32 %1409, 10
  %1417 = xor i1 %1415, true
  %1418 = xor i1 %1416, true
  %1419 = xor i1 false, true
  %1420 = and i1 %1417, false
  %1421 = and i1 %1415, %1419
  %1422 = and i1 %1418, false
  %1423 = and i1 %1416, %1419
  %1424 = or i1 %1420, %1421
  %1425 = or i1 %1422, %1423
  %1426 = xor i1 %1424, %1425
  %1427 = or i1 %1417, %1418
  %1428 = xor i1 %1427, true
  %1429 = or i1 false, %1419
  %1430 = and i1 %1428, %1429
  %1431 = or i1 %1426, %1430
  %1432 = or i1 %1415, %1416
  br i1 %1431, label %1433, label %1984

; <label>:1433:                                   ; preds = %1407, %1984
  store i64 0, i64* %70, align 8
  %1434 = load i32, i32* @x.9
  %1435 = load i32, i32* @y.10
  %1436 = sub i32 0, 1
  %1437 = add i32 %1434, %1436
  %1438 = sub i32 %1434, 1
  %1439 = mul i32 %1434, %1437
  %1440 = urem i32 %1439, 2
  %1441 = icmp eq i32 %1440, 0
  %1442 = icmp slt i32 %1435, 10
  %1443 = and i1 %1441, %1442
  %1444 = xor i1 %1441, %1442
  %1445 = or i1 %1443, %1444
  %1446 = or i1 %1441, %1442
  br i1 %1445, label %1447, label %1984

; <label>:1447:                                   ; preds = %1433
  br label %1448

; <label>:1448:                                   ; preds = %1605, %1447
  %1449 = load i64, i64* %70, align 8
  %1450 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %48) #3
  %1451 = icmp ult i64 %1449, %1450
  br i1 %1451, label %1452, label %1612

; <label>:1452:                                   ; preds = %1448
  %1453 = load i32, i32* @x.9
  %1454 = load i32, i32* @y.10
  %1455 = sub i32 0, 1
  %1456 = add i32 %1453, %1455
  %1457 = sub i32 %1453, 1
  %1458 = mul i32 %1453, %1456
  %1459 = urem i32 %1458, 2
  %1460 = icmp eq i32 %1459, 0
  %1461 = icmp slt i32 %1454, 10
  %1462 = xor i1 %1460, true
  %1463 = xor i1 %1461, true
  %1464 = xor i1 true, true
  %1465 = and i1 %1462, true
  %1466 = and i1 %1460, %1464
  %1467 = and i1 %1463, true
  %1468 = and i1 %1461, %1464
  %1469 = or i1 %1465, %1466
  %1470 = or i1 %1467, %1468
  %1471 = xor i1 %1469, %1470
  %1472 = or i1 %1462, %1463
  %1473 = xor i1 %1472, true
  %1474 = or i1 true, %1464
  %1475 = and i1 %1473, %1474
  %1476 = or i1 %1471, %1475
  %1477 = or i1 %1460, %1461
  br i1 %1476, label %1478, label %1985

; <label>:1478:                                   ; preds = %1452, %1985
  %1479 = load i64, i64* %70, align 8
  %1480 = trunc i64 %1479 to i32
  %1481 = load i64, i64* %61, align 8
  %1482 = load i32, i32* @x.9
  %1483 = load i32, i32* @y.10
  %1484 = add i32 %1482, -399326914
  %1485 = sub i32 %1484, 1
  %1486 = sub i32 %1485, -399326914
  %1487 = sub i32 %1482, 1
  %1488 = mul i32 %1482, %1486
  %1489 = urem i32 %1488, 2
  %1490 = icmp eq i32 %1489, 0
  %1491 = icmp slt i32 %1483, 10
  %1492 = and i1 %1490, %1491
  %1493 = xor i1 %1490, %1491
  %1494 = or i1 %1492, %1493
  %1495 = or i1 %1490, %1491
  br i1 %1494, label %1496, label %1985

; <label>:1496:                                   ; preds = %1478
  invoke void @_ZN7SegTreeIlE6updateEil(%class.SegTree* %65, i32 %1480, i64 %1481)
          to label %1497 unwind label %1177

; <label>:1497:                                   ; preds = %1496
  %1498 = load i64, i64* %70, align 8
  %1499 = trunc i64 %1498 to i32
  %1500 = load i64, i64* %70, align 8
  %1501 = call dereferenceable(16) %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EEixEm(%"class.std::vector.0"* %48, i64 %1500) #3
  %1502 = getelementptr inbounds %struct.T, %struct.T* %1501, i32 0, i32 0
  %1503 = load i64, i64* %1502, align 8
  invoke void @_ZN7SegTreeIlE6updateEil(%class.SegTree* %62, i32 %1499, i64 %1503)
          to label %1504 unwind label %1177

; <label>:1504:                                   ; preds = %1497
  %1505 = load i32, i32* @x.9
  %1506 = load i32, i32* @y.10
  %1507 = add i32 %1505, -1644646284
  %1508 = sub i32 %1507, 1
  %1509 = sub i32 %1508, -1644646284
  %1510 = sub i32 %1505, 1
  %1511 = mul i32 %1505, %1509
  %1512 = urem i32 %1511, 2
  %1513 = icmp eq i32 %1512, 0
  %1514 = icmp slt i32 %1506, 10
  %1515 = xor i1 %1513, true
  %1516 = xor i1 %1514, true
  %1517 = xor i1 false, true
  %1518 = and i1 %1515, false
  %1519 = and i1 %1513, %1517
  %1520 = and i1 %1516, false
  %1521 = and i1 %1514, %1517
  %1522 = or i1 %1518, %1519
  %1523 = or i1 %1520, %1521
  %1524 = xor i1 %1522, %1523
  %1525 = or i1 %1515, %1516
  %1526 = xor i1 %1525, true
  %1527 = or i1 false, %1517
  %1528 = and i1 %1526, %1527
  %1529 = or i1 %1524, %1528
  %1530 = or i1 %1513, %1514
  br i1 %1529, label %1531, label %1989

; <label>:1531:                                   ; preds = %1504, %1989
  %1532 = load i32, i32* @x.9
  %1533 = load i32, i32* @y.10
  %1534 = add i32 %1532, -468829217
  %1535 = sub i32 %1534, 1
  %1536 = sub i32 %1535, -468829217
  %1537 = sub i32 %1532, 1
  %1538 = mul i32 %1532, %1536
  %1539 = urem i32 %1538, 2
  %1540 = icmp eq i32 %1539, 0
  %1541 = icmp slt i32 %1533, 10
  %1542 = xor i1 %1540, true
  %1543 = xor i1 %1541, true
  %1544 = xor i1 false, true
  %1545 = and i1 %1542, false
  %1546 = and i1 %1540, %1544
  %1547 = and i1 %1543, false
  %1548 = and i1 %1541, %1544
  %1549 = or i1 %1545, %1546
  %1550 = or i1 %1547, %1548
  %1551 = xor i1 %1549, %1550
  %1552 = or i1 %1542, %1543
  %1553 = xor i1 %1552, true
  %1554 = or i1 false, %1544
  %1555 = and i1 %1553, %1554
  %1556 = or i1 %1551, %1555
  %1557 = or i1 %1540, %1541
  br i1 %1556, label %1558, label %1989

; <label>:1558:                                   ; preds = %1531
  br label %1559

; <label>:1559:                                   ; preds = %1558
  %1560 = load i64, i64* @N, align 8
  %1561 = trunc i64 %1560 to i32
  %1562 = invoke i64 @_ZN7SegTreeIlE5queryEii(%class.SegTree* %62, i32 0, i32 %1561)
          to label %1563 unwind label %1177

; <label>:1563:                                   ; preds = %1559
  %1564 = load i64, i64* @N, align 8
  %1565 = trunc i64 %1564 to i32
  %1566 = invoke i64 @_ZN7SegTreeIlE5queryEii(%class.SegTree* %65, i32 0, i32 %1565)
          to label %1567 unwind label %1177

; <label>:1567:                                   ; preds = %1563
  %1568 = sub i64 0, %1566
  %1569 = sub i64 %1562, %1568
  %1570 = add nsw i64 %1562, %1566
  store i64 %1569, i64* %71, align 8
  %1571 = invoke dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %40, i64* dereferenceable(8) %71)
          to label %1572 unwind label %1177

; <label>:1572:                                   ; preds = %1567
  %1573 = load i64, i64* %1571, align 8
  store i64 %1573, i64* %40, align 8
  br label %1574

; <label>:1574:                                   ; preds = %1572
  br label %1575

; <label>:1575:                                   ; preds = %1574
  %1576 = load i32, i32* @x.9
  %1577 = load i32, i32* @y.10
  %1578 = sub i32 %1576, -2062579865
  %1579 = sub i32 %1578, 1
  %1580 = add i32 %1579, -2062579865
  %1581 = sub i32 %1576, 1
  %1582 = mul i32 %1576, %1580
  %1583 = urem i32 %1582, 2
  %1584 = icmp eq i32 %1583, 0
  %1585 = icmp slt i32 %1577, 10
  %1586 = and i1 %1584, %1585
  %1587 = xor i1 %1584, %1585
  %1588 = or i1 %1586, %1587
  %1589 = or i1 %1584, %1585
  br i1 %1588, label %1590, label %1990

; <label>:1590:                                   ; preds = %1575, %1990
  %1591 = load i32, i32* @x.9
  %1592 = load i32, i32* @y.10
  %1593 = sub i32 0, 1
  %1594 = add i32 %1591, %1593
  %1595 = sub i32 %1591, 1
  %1596 = mul i32 %1591, %1594
  %1597 = urem i32 %1596, 2
  %1598 = icmp eq i32 %1597, 0
  %1599 = icmp slt i32 %1592, 10
  %1600 = and i1 %1598, %1599
  %1601 = xor i1 %1598, %1599
  %1602 = or i1 %1600, %1601
  %1603 = or i1 %1598, %1599
  br i1 %1602, label %1604, label %1990

; <label>:1604:                                   ; preds = %1590
  br label %1605

; <label>:1605:                                   ; preds = %1604
  %1606 = load i64, i64* %70, align 8
  %1607 = sub i64 0, %1606
  %1608 = sub i64 0, 1
  %1609 = add i64 %1607, %1608
  %1610 = sub i64 0, %1609
  %1611 = add nsw i64 %1606, 1
  store i64 %1610, i64* %70, align 8
  br label %1448

; <label>:1612:                                   ; preds = %1448
  call void @_ZN7SegTreeIlED2Ev(%class.SegTree* %65) #3
  call void @_ZN7SegTreeIlED2Ev(%class.SegTree* %62) #3
  call void @_ZNSt6vectorIZ4mainE1TSaIS0_EED2Ev(%"class.std::vector.0"* %48) #3
  %1613 = load i64, i64* %40, align 8
  %1614 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEl(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1613)
  %1615 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1614, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 0, i32* %28, align 4
  br label %1670

; <label>:1616:                                   ; preds = %1221, %1173, %1169
  %1617 = load i32, i32* @x.9
  %1618 = load i32, i32* @y.10
  %1619 = sub i32 0, 1
  %1620 = add i32 %1617, %1619
  %1621 = sub i32 %1617, 1
  %1622 = mul i32 %1617, %1620
  %1623 = urem i32 %1622, 2
  %1624 = icmp eq i32 %1623, 0
  %1625 = icmp slt i32 %1618, 10
  %1626 = xor i1 %1624, true
  %1627 = xor i1 %1625, true
  %1628 = xor i1 true, true
  %1629 = and i1 %1626, true
  %1630 = and i1 %1624, %1628
  %1631 = and i1 %1627, true
  %1632 = and i1 %1625, %1628
  %1633 = or i1 %1629, %1630
  %1634 = or i1 %1631, %1632
  %1635 = xor i1 %1633, %1634
  %1636 = or i1 %1626, %1627
  %1637 = xor i1 %1636, true
  %1638 = or i1 true, %1628
  %1639 = and i1 %1637, %1638
  %1640 = or i1 %1635, %1639
  %1641 = or i1 %1624, %1625
  br i1 %1640, label %1642, label %1991

; <label>:1642:                                   ; preds = %1616, %1991
  call void @_ZN7SegTreeIlED2Ev(%class.SegTree* %62) #3
  %1643 = load i32, i32* @x.9
  %1644 = load i32, i32* @y.10
  %1645 = sub i32 0, 1
  %1646 = add i32 %1643, %1645
  %1647 = sub i32 %1643, 1
  %1648 = mul i32 %1643, %1646
  %1649 = urem i32 %1648, 2
  %1650 = icmp eq i32 %1649, 0
  %1651 = icmp slt i32 %1644, 10
  %1652 = xor i1 %1650, true
  %1653 = xor i1 %1651, true
  %1654 = xor i1 true, true
  %1655 = and i1 %1652, true
  %1656 = and i1 %1650, %1654
  %1657 = and i1 %1653, true
  %1658 = and i1 %1651, %1654
  %1659 = or i1 %1655, %1656
  %1660 = or i1 %1657, %1658
  %1661 = xor i1 %1659, %1660
  %1662 = or i1 %1652, %1653
  %1663 = xor i1 %1662, true
  %1664 = or i1 true, %1654
  %1665 = and i1 %1663, %1664
  %1666 = or i1 %1661, %1665
  %1667 = or i1 %1650, %1651
  br i1 %1666, label %1668, label %1991

; <label>:1668:                                   ; preds = %1642
  br label %1669

; <label>:1669:                                   ; preds = %1668, %1168, %939
  call void @_ZNSt6vectorIZ4mainE1TSaIS0_EED2Ev(%"class.std::vector.0"* %48) #3
  br label %1702

; <label>:1670:                                   ; preds = %1612, %419
  %1671 = load i32, i32* @x.9
  %1672 = load i32, i32* @y.10
  %1673 = sub i32 %1671, -1082436084
  %1674 = sub i32 %1673, 1
  %1675 = add i32 %1674, -1082436084
  %1676 = sub i32 %1671, 1
  %1677 = mul i32 %1671, %1675
  %1678 = urem i32 %1677, 2
  %1679 = icmp eq i32 %1678, 0
  %1680 = icmp slt i32 %1672, 10
  %1681 = and i1 %1679, %1680
  %1682 = xor i1 %1679, %1680
  %1683 = or i1 %1681, %1682
  %1684 = or i1 %1679, %1680
  br i1 %1683, label %1685, label %1992

; <label>:1685:                                   ; preds = %1670, %1992
  %1686 = load i32, i32* %28, align 4
  %1687 = load i32, i32* @x.9
  %1688 = load i32, i32* @y.10
  %1689 = add i32 %1687, -1823858390
  %1690 = sub i32 %1689, 1
  %1691 = sub i32 %1690, -1823858390
  %1692 = sub i32 %1687, 1
  %1693 = mul i32 %1687, %1691
  %1694 = urem i32 %1693, 2
  %1695 = icmp eq i32 %1694, 0
  %1696 = icmp slt i32 %1688, 10
  %1697 = and i1 %1695, %1696
  %1698 = xor i1 %1695, %1696
  %1699 = or i1 %1697, %1698
  %1700 = or i1 %1695, %1696
  br i1 %1699, label %1701, label %1992

; <label>:1701:                                   ; preds = %1685
  ret i32 %1686

; <label>:1702:                                   ; preds = %1669
  %1703 = load i8*, i8** %53, align 8
  %1704 = load i32, i32* %54, align 4
  %1705 = insertvalue { i8*, i32 } undef, i8* %1703, 0
  %1706 = insertvalue { i8*, i32 } %1705, i32 %1704, 1
  resume { i8*, i32 } %1706

; <label>:1707:                                   ; preds = %27, %0
  %1708 = alloca i32, align 4
  %1709 = alloca i64, align 8
  %1710 = alloca i64, align 8
  %1711 = alloca i64, align 8
  %1712 = alloca %struct.P, align 8
  %1713 = alloca i64, align 8
  %1714 = alloca i64, align 8
  %1715 = alloca i64, align 8
  %1716 = alloca i64, align 8
  %1717 = alloca i64, align 8
  %1718 = alloca i64, align 8
  %1719 = alloca i64, align 8
  %1720 = alloca i64, align 8
  %1721 = alloca i64, align 8
  %1722 = alloca i64, align 8
  %1723 = alloca i64, align 8
  %1724 = alloca i64, align 8
  %1725 = alloca i64, align 8
  %1726 = alloca i64, align 8
  %1727 = alloca i64, align 8
  %1728 = alloca %"class.std::vector.0", align 8
  %1729 = alloca i64, align 8
  %1730 = alloca %struct.T, align 8
  %1731 = alloca i64, align 8
  %1732 = alloca i64, align 8
  %1733 = alloca i8*
  %1734 = alloca i32
  %1735 = alloca i64, align 8
  %1736 = alloca i64, align 8
  %1737 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %1738 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %1739 = alloca %class.anon, align 1
  %1740 = alloca i64, align 8
  %1741 = alloca i64, align 8
  %1742 = alloca %class.SegTree, align 8
  %1743 = alloca %"class.std::function", align 8
  %1744 = alloca %class.anon.10, align 1
  %1745 = alloca %class.SegTree, align 8
  %1746 = alloca %"class.std::function", align 8
  %1747 = alloca %class.anon.12, align 1
  %1748 = alloca i64, align 8
  %1749 = alloca i64, align 8
  %1750 = alloca i64, align 8
  %1751 = alloca i64, align 8
  store i32 0, i32* %1708, align 4
  %1752 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) @N)
  store i64 0, i64* %1709, align 8
  br label %27

; <label>:1753:                                   ; preds = %118, %92
  %1754 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %30)
  %1755 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* %1754, i64* dereferenceable(8) %31)
  %1756 = getelementptr inbounds %struct.P, %struct.P* %32, i32 0, i32 0
  %1757 = load i64, i64* %30, align 8
  store i64 %1757, i64* %1756, align 8
  %1758 = getelementptr inbounds %struct.P, %struct.P* %32, i32 0, i32 1
  %1759 = load i64, i64* %31, align 8
  %1760 = add i64 %1759, 7338978131506773055
  %1761 = sub i64 %1760, 1
  %1762 = sub i64 %1761, 7338978131506773055
  %1763 = sub i64 %1759, 1
  %1764 = mul i64 %1762, 1
  %1765 = sub i64 0, 1
  %1766 = add i64 %1759, %1765
  %1767 = sub i64 %1759, 1
  %1768 = mul i64 %1766, 1
  %1769 = add i64 0, -831194792211019695
  %1770 = sub i64 %1769, %1759
  %1771 = sub i64 %1770, -831194792211019695
  %1772 = sub i64 0, %1759
  %1773 = sub i64 0, %1771
  %1774 = sub i64 0, 1
  %1775 = add i64 %1773, %1774
  %1776 = sub i64 0, %1775
  %1777 = add i64 %1771, 1
  %1778 = sub i64 0, 1
  %1779 = sub i64 %1759, %1778
  %1780 = add nsw i64 %1759, 1
  store i64 %1779, i64* %1758, align 8
  call void @_ZNSt6vectorI1PSaIS0_EE9push_backEOS0_(%"class.std::vector"* @v, %struct.P* dereferenceable(16) %32)
  br label %118

; <label>:1781:                                   ; preds = %183, %168
  %1782 = load i64, i64* %35, align 8
  %1783 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1782) #3
  %1784 = getelementptr inbounds %struct.P, %struct.P* %1783, i32 0, i32 0
  %1785 = load i64, i64* %1784, align 8
  %1786 = load i64, i64* %33, align 8
  %1787 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1786) #3
  %1788 = getelementptr inbounds %struct.P, %struct.P* %1787, i32 0, i32 0
  %1789 = load i64, i64* %1788, align 8
  %1790 = icmp sgt i64 %1785, %1789
  br label %183

; <label>:1791:                                   ; preds = %234, %220
  %1792 = load i64, i64* %35, align 8
  store i64 %1792, i64* %34, align 8
  br label %234

; <label>:1793:                                   ; preds = %279, %252
  %1794 = load i64, i64* %35, align 8
  %1795 = sub i64 0, 1
  %1796 = add i64 %1794, %1795
  %1797 = sub i64 %1794, 1
  %1798 = mul i64 %1796, 1
  %1799 = add i64 %1794, 7782157623462865333
  %1800 = sub i64 %1799, 1
  %1801 = sub i64 %1800, 7782157623462865333
  %1802 = sub i64 %1794, 1
  %1803 = mul i64 %1801, 1
  %1804 = sub i64 0, -4420784110488406389
  %1805 = sub i64 %1804, %1794
  %1806 = add i64 %1805, -4420784110488406389
  %1807 = sub i64 0, %1794
  %1808 = add i64 %1806, 34340491790266833
  %1809 = add i64 %1808, 1
  %1810 = sub i64 %1809, 34340491790266833
  %1811 = add i64 %1806, 1
  %1812 = shl i64 %1794, 1
  %1813 = shl i64 %1794, 1
  %1814 = add i64 %1794, 1160816726360713978
  %1815 = add i64 %1814, 1
  %1816 = sub i64 %1815, 1160816726360713978
  %1817 = add nsw i64 %1794, 1
  store i64 %1816, i64* %35, align 8
  br label %279

; <label>:1818:                                   ; preds = %353, %338
  %1819 = load i64, i64* %38, align 8
  %1820 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1819) #3
  %1821 = getelementptr inbounds %struct.P, %struct.P* %1820, i32 0, i32 1
  %1822 = load i64, i64* %1821, align 8
  %1823 = load i64, i64* %38, align 8
  %1824 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1823) #3
  %1825 = getelementptr inbounds %struct.P, %struct.P* %1824, i32 0, i32 0
  %1826 = load i64, i64* %1825, align 8
  %1827 = sub i64 %1822, 95458111537927379
  %1828 = sub i64 %1827, %1826
  %1829 = add i64 %1828, 95458111537927379
  %1830 = sub i64 %1822, %1826
  %1831 = mul i64 %1829, %1826
  %1832 = sub i64 %1822, -4691801784409482792
  %1833 = sub i64 %1832, %1826
  %1834 = add i64 %1833, -4691801784409482792
  %1835 = sub i64 %1822, %1826
  %1836 = mul i64 %1834, %1826
  %1837 = shl i64 %1822, %1826
  %1838 = sub i64 0, %1826
  %1839 = add i64 %1822, %1838
  %1840 = sub i64 %1822, %1826
  %1841 = mul i64 %1839, %1826
  %1842 = shl i64 %1822, %1826
  %1843 = shl i64 %1822, %1826
  %1844 = shl i64 %1822, %1826
  %1845 = add i64 %1822, -8852247239100877786
  %1846 = sub i64 %1845, %1826
  %1847 = sub i64 %1846, -8852247239100877786
  %1848 = sub i64 %1822, %1826
  %1849 = mul i64 %1847, %1826
  %1850 = shl i64 %1822, %1826
  %1851 = add i64 %1822, 1312666051041200838
  %1852 = sub i64 %1851, %1826
  %1853 = sub i64 %1852, 1312666051041200838
  %1854 = sub nsw i64 %1822, %1826
  store i64 %1853, i64* %39, align 8
  %1855 = call dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %37, i64* dereferenceable(8) %39)
  %1856 = load i64, i64* %1855, align 8
  store i64 %1856, i64* %37, align 8
  br label %353

; <label>:1857:                                   ; preds = %399, %384
  %1858 = load i64, i64* %38, align 8
  %1859 = sub i64 0, 1
  %1860 = add i64 %1858, %1859
  %1861 = sub i64 %1858, 1
  %1862 = mul i64 %1860, 1
  %1863 = add i64 %1858, -2684596716238705531
  %1864 = sub i64 %1863, 1
  %1865 = sub i64 %1864, -2684596716238705531
  %1866 = sub i64 %1858, 1
  %1867 = mul i64 %1865, 1
  %1868 = sub i64 %1858, 4163218247430807478
  %1869 = add i64 %1868, 1
  %1870 = add i64 %1869, 4163218247430807478
  %1871 = add nsw i64 %1858, 1
  store i64 %1870, i64* %38, align 8
  br label %399

; <label>:1872:                                   ; preds = %466, %451
  %1873 = load i64, i64* %45, align 8
  %1874 = load i64, i64* @N, align 8
  %1875 = icmp slt i64 %1873, %1874
  br label %466

; <label>:1876:                                   ; preds = %503, %489
  %1877 = load i64, i64* %45, align 8
  %1878 = load i64, i64* %34, align 8
  %1879 = icmp ne i64 %1877, %1878
  br label %503

; <label>:1880:                                   ; preds = %561, %535
  %1881 = load i64, i64* %45, align 8
  %1882 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1881) #3
  %1883 = getelementptr inbounds %struct.P, %struct.P* %1882, i32 0, i32 1
  %1884 = load i64, i64* %1883, align 8
  %1885 = load i64, i64* %45, align 8
  %1886 = call dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"* @v, i64 %1885) #3
  %1887 = getelementptr inbounds %struct.P, %struct.P* %1886, i32 0, i32 0
  %1888 = load i64, i64* %1887, align 8
  %1889 = sub i64 %1884, 8217609886419174502
  %1890 = sub i64 %1889, %1888
  %1891 = add i64 %1890, 8217609886419174502
  %1892 = sub i64 %1884, %1888
  %1893 = mul i64 %1891, %1888
  %1894 = sub i64 %1884, -3875613344263651127
  %1895 = sub i64 %1894, %1888
  %1896 = add i64 %1895, -3875613344263651127
  %1897 = sub nsw i64 %1884, %1888
  store i64 %1896, i64* %46, align 8
  %1898 = call dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8) %44, i64* dereferenceable(8) %46)
  %1899 = load i64, i64* %1898, align 8
  store i64 %1899, i64* %44, align 8
  br label %561

; <label>:1900:                                   ; preds = %617, %590
  br label %617

; <label>:1901:                                   ; preds = %660, %645
  br label %660

; <label>:1902:                                   ; preds = %731, %704
  %1903 = load i64, i64* %49, align 8
  %1904 = load i64, i64* @N, align 8
  %1905 = icmp slt i64 %1903, %1904
  br label %731

; <label>:1906:                                   ; preds = %777, %762
  %1907 = load i64, i64* %49, align 8
  %1908 = load i64, i64* %33, align 8
  %1909 = icmp ne i64 %1907, %1908
  br label %777

; <label>:1910:                                   ; preds = %856, %842
  %1911 = load i64, i64* %841, align 8
  store i64 %1911, i64* %829, align 8
  br label %856

; <label>:1912:                                   ; preds = %912, %885
  br label %912

; <label>:1913:                                   ; preds = %957, %943
  br label %957

; <label>:1914:                                   ; preds = %1045, %1031
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %63) #3
  %1915 = load i64, i64* @N, align 8
  %1916 = trunc i64 %1915 to i32
  %1917 = load i64, i64* %61, align 8
  br label %1045

; <label>:1918:                                   ; preds = %1092, %1077
  %1919 = load i64, i64* %68, align 8
  %1920 = sub i64 0, %1919
  %1921 = add i64 0, %1920
  %1922 = sub i64 0, %1919
  %1923 = add i64 %1921, -2646849629463016498
  %1924 = add i64 %1923, 1
  %1925 = sub i64 %1924, -2646849629463016498
  %1926 = add i64 %1921, 1
  %1927 = sub i64 0, -2071131595422653574
  %1928 = sub i64 %1927, %1919
  %1929 = add i64 %1928, -2071131595422653574
  %1930 = sub i64 0, %1919
  %1931 = sub i64 0, 1
  %1932 = sub i64 %1929, %1931
  %1933 = add i64 %1929, 1
  %1934 = add i64 %1919, 2997833816420184556
  %1935 = sub i64 %1934, 1
  %1936 = sub i64 %1935, 2997833816420184556
  %1937 = sub i64 %1919, 1
  %1938 = mul i64 %1936, 1
  %1939 = shl i64 %1919, 1
  %1940 = sub i64 0, %1919
  %1941 = sub i64 0, 1
  %1942 = add i64 %1940, %1941
  %1943 = sub i64 0, %1942
  %1944 = add nsw i64 %1919, 1
  store i64 %1943, i64* %68, align 8
  br label %1092

; <label>:1945:                                   ; preds = %1138, %1112
  %1946 = landingpad { i8*, i32 }
          cleanup
  %1947 = extractvalue { i8*, i32 } %1946, 0
  store i8* %1947, i8** %53, align 8
  %1948 = extractvalue { i8*, i32 } %1946, 1
  store i32 %1948, i32* %54, align 4
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %63) #3
  br label %1138

; <label>:1949:                                   ; preds = %1192, %1177
  %1950 = landingpad { i8*, i32 }
          cleanup
  %1951 = extractvalue { i8*, i32 } %1950, 0
  store i8* %1951, i8** %53, align 8
  %1952 = extractvalue { i8*, i32 } %1950, 1
  store i32 %1952, i32* %54, align 4
  call void @_ZN7SegTreeIlED2Ev(%class.SegTree* %65) #3
  br label %1192

; <label>:1953:                                   ; preds = %1238, %1223
  %1954 = load i64, i64* @N, align 8
  %1955 = trunc i64 %1954 to i32
  br label %1238

; <label>:1956:                                   ; preds = %1288, %1261
  %1957 = shl i64 %1256, %1260
  %1958 = sub i64 0, %1256
  %1959 = add i64 0, %1958
  %1960 = sub i64 0, %1256
  %1961 = sub i64 0, %1959
  %1962 = sub i64 0, %1260
  %1963 = add i64 %1961, %1962
  %1964 = sub i64 0, %1963
  %1965 = add i64 %1959, %1260
  %1966 = sub i64 0, %1260
  %1967 = add i64 %1256, %1966
  %1968 = sub i64 %1256, %1260
  %1969 = mul i64 %1967, %1260
  %1970 = add i64 %1256, -3234639208445962306
  %1971 = sub i64 %1970, %1260
  %1972 = sub i64 %1971, -3234639208445962306
  %1973 = sub i64 %1256, %1260
  %1974 = mul i64 %1972, %1260
  %1975 = shl i64 %1256, %1260
  %1976 = sub i64 0, %1256
  %1977 = sub i64 0, %1260
  %1978 = add i64 %1976, %1977
  %1979 = sub i64 0, %1978
  %1980 = add nsw i64 %1256, %1260
  store i64 %1979, i64* %69, align 8
  br label %1288

; <label>:1981:                                   ; preds = %1336, %1309
  %1982 = load i64, i64* %1308, align 8
  store i64 %1982, i64* %40, align 8
  br label %1336

; <label>:1983:                                   ; preds = %1380, %1365
  br label %1380

; <label>:1984:                                   ; preds = %1433, %1407
  store i64 0, i64* %70, align 8
  br label %1433

; <label>:1985:                                   ; preds = %1478, %1452
  %1986 = load i64, i64* %70, align 8
  %1987 = trunc i64 %1986 to i32
  %1988 = load i64, i64* %61, align 8
  br label %1478

; <label>:1989:                                   ; preds = %1531, %1504
  br label %1531

; <label>:1990:                                   ; preds = %1590, %1575
  br label %1590

; <label>:1991:                                   ; preds = %1642, %1616
  call void @_ZN7SegTreeIlED2Ev(%class.SegTree* %62) #3
  br label %1642

; <label>:1992:                                   ; preds = %1685, %1670
  %1993 = load i32, i32* %28, align 4
  br label %1685
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI1PSaIS0_EE9push_backEOS0_(%"class.std::vector"*, %struct.P* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.11
  %6 = load i32, i32* @y.12
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -165135517, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -165135517, label %18
    i32 -1486669967, label %38
    i32 1060103356, label %70
    i32 -1134835136, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1486669967, i32 -1134835136
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector"*, align 8
  %40 = alloca %struct.P*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %39, align 8
  store %struct.P* %1, %struct.P** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8
  %42 = load %struct.P*, %struct.P** %40, align 8
  %43 = call dereferenceable(16) %struct.P* @_ZSt4moveIR1PEONSt16remove_referenceIT_E4typeEOS3_(%struct.P* dereferenceable(16) %42) #3
  call void @_ZNSt6vectorI1PSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector"* %41, %struct.P* dereferenceable(16) %43)
  %44 = load i32, i32* @x.11
  %45 = load i32, i32* @y.12
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1060103356, i32 -1134835136
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::vector"*, align 8
  %73 = alloca %struct.P*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %72, align 8
  store %struct.P* %1, %struct.P** %73, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %72, align 8
  %75 = load %struct.P*, %struct.P** %73, align 8
  %76 = call dereferenceable(16) %struct.P* @_ZSt4moveIR1PEONSt16remove_referenceIT_E4typeEOS3_(%struct.P* dereferenceable(16) %75) #3
  call void @_ZNSt6vectorI1PSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector"* %74, %struct.P* dereferenceable(16) %76)
  store i32 -1486669967, i32* %14
  br label %77

; <label>:77:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %struct.P* @_ZNSt6vectorI1PSaIS0_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.P*, %struct.P** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %struct.P, %struct.P* %9, i64 %10
  ret %struct.P* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIlERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -1800620536, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %73
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1800620536, label %16
    i32 170275319, label %21
    i32 -1704568518, label %23
    i32 -674743895, label %39
    i32 -303040323, label %68
    i32 -373317540, label %69
    i32 2124173452, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %73

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 170275319, i32 -1704568518
  store i32 %20, i32* %12
  br label %73

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -373317540, i32* %12
  br label %73

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.15
  %25 = load i32, i32* @y.16
  %26 = sub i32 %24, -1883590995
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1883590995
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -674743895, i32 2124173452
  store i32 %38, i32* %12
  br label %73

; <label>:39:                                     ; preds = %13
  %40 = load i64*, i64** %6, align 8
  store i64* %40, i64** %5, align 8
  %41 = load i32, i32* @x.15
  %42 = load i32, i32* @y.16
  %43 = add i32 %41, 2114482880
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 2114482880
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -303040323, i32 2124173452
  store i32 %67, i32* %12
  br label %73

; <label>:68:                                     ; preds = %13
  store i32 -373317540, i32* %12
  br label %73

; <label>:69:                                     ; preds = %13
  %70 = load i64*, i64** %5, align 8
  ret i64* %70

; <label>:71:                                     ; preds = %13
  %72 = load i64*, i64** %6, align 8
  store i64* %72, i64** %5, align 8
  store i32 -674743895, i32* %12
  br label %73

; <label>:73:                                     ; preds = %71, %68, %39, %23, %21, %16, %15
  br label %13
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEl(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.17
  %10 = load i32, i32* @y.18
  %11 = add i32 %9, 184099370
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 184099370
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -1473324754, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %153
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1473324754, label %23
    i32 686433883, label %43
    i32 -1149605167, label %83
    i32 -209020037, label %86
    i32 -1287524396, label %102
    i32 72971578, label %132
    i32 -1316621590, label %133
    i32 -2135687518, label %137
    i32 -1795921693, label %140
    i32 1419784734, label %149
  ]

; <label>:22:                                     ; preds = %20
  br label %153

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 686433883, i32 -1795921693
  store i32 %42, i32* %19
  br label %153

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %6
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %5
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %4
  %47 = load volatile i64**, i64*** %5
  store i64* %0, i64** %47, align 8
  %48 = load volatile i64**, i64*** %4
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64**, i64*** %4
  %50 = load i64*, i64** %49, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64**, i64*** %5
  %53 = load i64*, i64** %52, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %51, %54
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.17
  %57 = load i32, i32* @y.18
  %58 = add i32 %56, -1813910142
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1813910142
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1149605167, i32 -1795921693
  store i32 %82, i32* %19
  br label %153

; <label>:83:                                     ; preds = %20
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 -209020037, i32 -1316621590
  store i32 %85, i32* %19
  br label %153

; <label>:86:                                     ; preds = %20
  %87 = load i32, i32* @x.17
  %88 = load i32, i32* @y.18
  %89 = sub i32 %87, 1356032420
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 1356032420
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -1287524396, i32 1419784734
  store i32 %101, i32* %19
  br label %153

; <label>:102:                                    ; preds = %20
  %103 = load volatile i64**, i64*** %4
  %104 = load i64*, i64** %103, align 8
  %105 = load volatile i64**, i64*** %6
  store i64* %104, i64** %105, align 8
  %106 = load i32, i32* @x.17
  %107 = load i32, i32* @y.18
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 72971578, i32 1419784734
  store i32 %131, i32* %19
  br label %153

; <label>:132:                                    ; preds = %20
  store i32 -2135687518, i32* %19
  br label %153

; <label>:133:                                    ; preds = %20
  %134 = load volatile i64**, i64*** %5
  %135 = load i64*, i64** %134, align 8
  %136 = load volatile i64**, i64*** %6
  store i64* %135, i64** %136, align 8
  store i32 -2135687518, i32* %19
  br label %153

; <label>:137:                                    ; preds = %20
  %138 = load volatile i64**, i64*** %6
  %139 = load i64*, i64** %138, align 8
  ret i64* %139

; <label>:140:                                    ; preds = %20
  %141 = alloca i64*, align 8
  %142 = alloca i64*, align 8
  %143 = alloca i64*, align 8
  store i64* %0, i64** %142, align 8
  store i64* %1, i64** %143, align 8
  %144 = load i64*, i64** %143, align 8
  %145 = load i64, i64* %144, align 8
  %146 = load i64*, i64** %142, align 8
  %147 = load i64, i64* %146, align 8
  %148 = icmp slt i64 %145, %147
  store i32 686433883, i32* %19
  br label %153

; <label>:149:                                    ; preds = %20
  %150 = load volatile i64**, i64*** %4
  %151 = load i64*, i64** %150, align 8
  %152 = load volatile i64**, i64*** %6
  store i64* %151, i64** %152, align 8
  store i32 -1287524396, i32* %19
  br label %153

; <label>:153:                                    ; preds = %149, %140, %133, %132, %102, %86, %83, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt6vectorIZ4mainE1TSaIS0_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #12
  unreachable
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt6vectorIZ4mainE1TSaIS0_EE9push_backEOS0_(%"class.std::vector.0"*, %struct.T* dereferenceable(16)) #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.21
  %6 = load i32, i32* @y.22
  %7 = sub i32 %5, -1899726875
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1899726875
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 288538563, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 288538563, label %19
    i32 -610306798, label %27
    i32 -1916301318, label %47
    i32 1615206998, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -610306798, i32 1615206998
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca %struct.T*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store %struct.T* %1, %struct.T** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %31 = load %struct.T*, %struct.T** %29, align 8
  %32 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %31) #3
  call void @_ZNSt6vectorIZ4mainE1TSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector.0"* %30, %struct.T* dereferenceable(16) %32)
  %33 = load i32, i32* @x.21
  %34 = load i32, i32* @y.22
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1916301318, i32 1615206998
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::vector.0"*, align 8
  %50 = alloca %struct.T*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %49, align 8
  store %struct.T* %1, %struct.T** %50, align 8
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %49, align 8
  %52 = load %struct.T*, %struct.T** %50, align 8
  %53 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %52) #3
  call void @_ZNSt6vectorIZ4mainE1TSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector.0"* %51, %struct.T* dereferenceable(16) %53)
  store i32 -610306798, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define internal void @"_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEZ4mainE3$_0EvT_S9_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %class.anon, align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %class.anon, align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %struct.T* %0, %struct.T** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %1, %struct.T** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @"_ZN9__gnu_cxx5__ops16__iter_comp_iterIZ4mainE3$_0EENS0_15_Iter_comp_iterIT_EES4_"()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %18 = load %struct.T*, %struct.T** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %20 = load %struct.T*, %struct.T** %19, align 8
  call void @"_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %18, %struct.T* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZSt5beginISt6vectorIZ4mainE1TSaIS1_EEEDTcldtfp_5beginEERT_(%"class.std::vector.0"* dereferenceable(24)) #4 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = call %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EE5beginEv(%"class.std::vector.0"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %struct.T* %5, %struct.T** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %struct.T*, %struct.T** %7, align 8
  ret %struct.T* %8
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZSt3endISt6vectorIZ4mainE1TSaIS1_EEEDTcldtfp_3endEERT_(%"class.std::vector.0"* dereferenceable(24)) #4 {
  %2 = alloca %struct.T*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.27
  %6 = load i32, i32* @y.28
  %7 = add i32 %5, -2111322471
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2111322471
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1904400866, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1904400866, label %19
    i32 -1414497046, label %39
    i32 1240602834, label %62
    i32 -1238989462, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1414497046, i32 -1238989462
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %43 = call %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EE3endEv(%"class.std::vector.0"* %42) #3
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %struct.T* %43, %struct.T** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %46 = load %struct.T*, %struct.T** %45, align 8
  store %struct.T* %46, %struct.T** %2
  %47 = load i32, i32* @x.27
  %48 = load i32, i32* @y.28
  %49 = add i32 %47, -1768615713
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1768615713
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1240602834, i32 -1238989462
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile %struct.T*, %struct.T** %2
  ret %struct.T* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %66, align 8
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %66, align 8
  %68 = call %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EE3endEv(%"class.std::vector.0"* %67) #3
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  store %struct.T* %68, %struct.T** %69, align 8
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %71 = load %struct.T*, %struct.T** %70, align 8
  store i32 -1414497046, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt8functionIFlllEEC2IZ4mainE3$_1vvEET_"(%"class.std::function"*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = add i32 %2, 21359193
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 21359193
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %114

; <label>:16:                                     ; preds = %1, %114
  %17 = alloca %class.anon.10, align 1
  %18 = alloca %"class.std::function"*, align 8
  %19 = alloca i8*
  %20 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %18, align 8
  %21 = load %"class.std::function"*, %"class.std::function"** %18, align 8
  %22 = bitcast %"class.std::function"* %21 to %"struct.std::_Maybe_unary_or_binary_function"*
  %23 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %23)
  %24 = load i32, i32* @x.29
  %25 = load i32, i32* @y.30
  %26 = add i32 %24, 1115465843
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 1115465843
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %114

; <label>:50:                                     ; preds = %16
  %51 = invoke zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.10* dereferenceable(1) %17)
          to label %52 unwind label %103

; <label>:52:                                     ; preds = %50
  br i1 %51, label %53, label %108

; <label>:53:                                     ; preds = %52
  %54 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  %55 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %54, i32 0, i32 0
  %56 = call dereferenceable(1) %class.anon.10* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.10* dereferenceable(1) %17) #3
  invoke void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16) %55, %class.anon.10* dereferenceable(1) %56)
          to label %57 unwind label %103

; <label>:57:                                     ; preds = %53
  %58 = load i32, i32* @x.29
  %59 = load i32, i32* @y.30
  %60 = add i32 %58, 318174079
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 318174079
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %122

; <label>:84:                                     ; preds = %57, %122
  %85 = getelementptr inbounds %"class.std::function", %"class.std::function"* %21, i32 0, i32 1
  store i64 (%"union.std::_Any_data"*, i64*, i64*)* @"_ZNSt17_Function_handlerIFlllEZ4mainE3$_1E9_M_invokeERKSt9_Any_dataOlS6_", i64 (%"union.std::_Any_data"*, i64*, i64*)** %85, align 8
  %86 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  %87 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %86, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %87, align 8
  %88 = load i32, i32* @x.29
  %89 = load i32, i32* @y.30
  %90 = sub i32 %88, 498392034
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 498392034
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %122

; <label>:102:                                    ; preds = %84
  br label %108

; <label>:103:                                    ; preds = %53, %50
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %19, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %20, align 4
  %107 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %107) #3
  br label %109

; <label>:108:                                    ; preds = %102, %52
  ret void

; <label>:109:                                    ; preds = %103
  %110 = load i8*, i8** %19, align 8
  %111 = load i32, i32* %20, align 4
  %112 = insertvalue { i8*, i32 } undef, i8* %110, 0
  %113 = insertvalue { i8*, i32 } %112, i32 %111, 1
  resume { i8*, i32 } %113

; <label>:114:                                    ; preds = %16, %1
  %115 = alloca %class.anon.10, align 1
  %116 = alloca %"class.std::function"*, align 8
  %117 = alloca i8*
  %118 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %116, align 8
  %119 = load %"class.std::function"*, %"class.std::function"** %116, align 8
  %120 = bitcast %"class.std::function"* %119 to %"struct.std::_Maybe_unary_or_binary_function"*
  %121 = bitcast %"class.std::function"* %119 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %121)
  br label %16

; <label>:122:                                    ; preds = %84, %57
  %123 = getelementptr inbounds %"class.std::function", %"class.std::function"* %21, i32 0, i32 1
  store i64 (%"union.std::_Any_data"*, i64*, i64*)* @"_ZNSt17_Function_handlerIFlllEZ4mainE3$_1E9_M_invokeERKSt9_Any_dataOlS6_", i64 (%"union.std::_Any_data"*, i64*, i64*)** %123, align 8
  %124 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  %125 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %124, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %125, align 8
  br label %84
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7SegTreeIlEC2EilSt8functionIFlllEE(%class.SegTree*, i32, i64, %"class.std::function"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.SegTree*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.SegTree* %0, %class.SegTree** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  %10 = load %class.SegTree*, %class.SegTree** %5, align 8
  %11 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 2
  call void @_ZNSt6vectorIlSaIlEEC2Ev(%"class.std::vector.5"* %11) #3
  %12 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 3
  call void @_ZNSt8functionIFlllEEC2Ev(%"class.std::function"* %12) #3
  %13 = load i64, i64* %7, align 8
  %14 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 1
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 0
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 3
  %17 = invoke dereferenceable(32) %"class.std::function"* @_ZNSt8functionIFlllEEaSERKS1_(%"class.std::function"* %16, %"class.std::function"* dereferenceable(32) %3)
          to label %18 unwind label %68

; <label>:18:                                     ; preds = %4
  br label %19

; <label>:19:                                     ; preds = %64, %18
  %20 = load i32, i32* @x.31
  %21 = load i32, i32* @y.32
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %84

; <label>:33:                                     ; preds = %19, %84
  %34 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = load i32, i32* %6, align 4
  %37 = icmp slt i32 %35, %36
  %38 = load i32, i32* @x.31
  %39 = load i32, i32* @y.32
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %84

; <label>:63:                                     ; preds = %33
  br i1 %37, label %64, label %72

; <label>:64:                                     ; preds = %63
  %65 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = mul nsw i32 %66, 2
  store i32 %67, i32* %65, align 8
  br label %19

; <label>:68:                                     ; preds = %72, %4
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %8, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %9, align 4
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %12) #3
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %11) #3
  br label %79

; <label>:72:                                     ; preds = %63
  %73 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 2
  %74 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = mul nsw i32 2, %75
  %77 = sext i32 %76 to i64
  invoke void @_ZNSt6vectorIlSaIlEE6resizeEmRKl(%"class.std::vector.5"* %73, i64 %77, i64* dereferenceable(8) %7)
          to label %78 unwind label %68

; <label>:78:                                     ; preds = %72
  ret void

; <label>:79:                                     ; preds = %68
  %80 = load i8*, i8** %8, align 8
  %81 = load i32, i32* %9, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  resume { i8*, i32 } %83

; <label>:84:                                     ; preds = %33, %19
  %85 = getelementptr inbounds %class.SegTree, %class.SegTree* %10, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = load i32, i32* %6, align 4
  %88 = icmp slt i32 %86, %87
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %0, %"class.std::function"** %2, align 8
  %3 = load %"class.std::function"*, %"class.std::function"** %2, align 8
  %4 = bitcast %"class.std::function"* %3 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt8functionIFlllEEC2IZ4mainE3$_2vvEET_"(%"class.std::function"*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.35
  %3 = load i32, i32* @y.36
  %4 = sub i32 %2, -351995444
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -351995444
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %126

; <label>:28:                                     ; preds = %1, %126
  %29 = alloca %class.anon.12, align 1
  %30 = alloca %"class.std::function"*, align 8
  %31 = alloca i8*
  %32 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %30, align 8
  %33 = load %"class.std::function"*, %"class.std::function"** %30, align 8
  %34 = bitcast %"class.std::function"* %33 to %"struct.std::_Maybe_unary_or_binary_function"*
  %35 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %35)
  %36 = load i32, i32* @x.35
  %37 = load i32, i32* @y.36
  %38 = add i32 %36, -381276463
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -381276463
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %126

; <label>:62:                                     ; preds = %28
  %63 = invoke zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.12* dereferenceable(1) %29)
          to label %64 unwind label %73

; <label>:64:                                     ; preds = %62
  br i1 %63, label %65, label %78

; <label>:65:                                     ; preds = %64
  %66 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  %67 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %66, i32 0, i32 0
  %68 = call dereferenceable(1) %class.anon.12* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.12* dereferenceable(1) %29) #3
  invoke void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16) %67, %class.anon.12* dereferenceable(1) %68)
          to label %69 unwind label %73

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %"class.std::function", %"class.std::function"* %33, i32 0, i32 1
  store i64 (%"union.std::_Any_data"*, i64*, i64*)* @"_ZNSt17_Function_handlerIFlllEZ4mainE3$_2E9_M_invokeERKSt9_Any_dataOlS6_", i64 (%"union.std::_Any_data"*, i64*, i64*)** %70, align 8
  %71 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  %72 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %71, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %72, align 8
  br label %78

; <label>:73:                                     ; preds = %65, %62
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %31, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %32, align 4
  %77 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %77) #3
  br label %79

; <label>:78:                                     ; preds = %69, %64
  ret void

; <label>:79:                                     ; preds = %73
  %80 = load i32, i32* @x.35
  %81 = load i32, i32* @y.36
  %82 = add i32 %80, -1070928343
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -1070928343
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %134

; <label>:94:                                     ; preds = %79, %134
  %95 = load i8*, i8** %31, align 8
  %96 = load i32, i32* %32, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  %99 = load i32, i32* @x.35
  %100 = load i32, i32* @y.36
  %101 = add i32 %99, -2011546889
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -2011546889
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %134

; <label>:125:                                    ; preds = %94
  resume { i8*, i32 } %98

; <label>:126:                                    ; preds = %28, %1
  %127 = alloca %class.anon.12, align 1
  %128 = alloca %"class.std::function"*, align 8
  %129 = alloca i8*
  %130 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %128, align 8
  %131 = load %"class.std::function"*, %"class.std::function"** %128, align 8
  %132 = bitcast %"class.std::function"* %131 to %"struct.std::_Maybe_unary_or_binary_function"*
  %133 = bitcast %"class.std::function"* %131 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %133)
  br label %28

; <label>:134:                                    ; preds = %94, %79
  %135 = load i8*, i8** %31, align 8
  %136 = load i32, i32* %32, align 4
  %137 = insertvalue { i8*, i32 } undef, i8* %135, 0
  %138 = insertvalue { i8*, i32 } %137, i32 %136, 1
  br label %94
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"*) #4 align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.T*, %struct.T** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.T*, %struct.T** %10, align 8
  %12 = ptrtoint %struct.T* %7 to i64
  %13 = ptrtoint %struct.T* %11 to i64
  %14 = add i64 %12, -6018504870327658524
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -6018504870327658524
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7SegTreeIlE6updateEil(%class.SegTree*, i32, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %class.SegTree*
  %6 = alloca i32*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.39
  %10 = load i32, i32* @y.40
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1619415054, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %435
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1619415054, label %22
    i32 -582697172, label %42
    i32 522780829, label %96
    i32 -1473132910, label %97
    i32 1879823438, label %113
    i32 916040113, label %143
    i32 785464908, label %146
    i32 141093785, label %174
    i32 -671619410, label %230
    i32 1868264693, label %231
    i32 -1856550269, label %232
    i32 -1874439013, label %275
    i32 1593237839, label %279
  ]

; <label>:21:                                     ; preds = %19
  br label %435

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -582697172, i32 -1856550269
  store i32 %41, i32* %18
  br label %435

; <label>:42:                                     ; preds = %19
  %43 = alloca %class.SegTree*, align 8
  %44 = alloca i32, align 4
  store i32* %44, i32** %6
  %45 = alloca i64, align 8
  store %class.SegTree* %0, %class.SegTree** %43, align 8
  %46 = load volatile i32*, i32** %6
  store i32 %1, i32* %46, align 4
  store i64 %2, i64* %45, align 8
  %47 = load %class.SegTree*, %class.SegTree** %43, align 8
  store %class.SegTree* %47, %class.SegTree** %5
  %48 = load volatile %class.SegTree*, %class.SegTree** %5
  %49 = getelementptr inbounds %class.SegTree, %class.SegTree* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = sub i32 %50, 903087004
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 903087004
  %54 = sub nsw i32 %50, 1
  %55 = load volatile i32*, i32** %6
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 %56, 1535197273
  %58 = add i32 %57, %53
  %59 = add i32 %58, 1535197273
  %60 = add nsw i32 %56, %53
  %61 = load volatile i32*, i32** %6
  store i32 %59, i32* %61, align 4
  %62 = load i64, i64* %45, align 8
  %63 = load volatile %class.SegTree*, %class.SegTree** %5
  %64 = getelementptr inbounds %class.SegTree, %class.SegTree* %63, i32 0, i32 2
  %65 = load volatile i32*, i32** %6
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %64, i64 %67) #3
  store i64 %62, i64* %68, align 8
  %69 = load i32, i32* @x.39
  %70 = load i32, i32* @y.40
  %71 = add i32 %69, 1970575210
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 1970575210
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 522780829, i32 -1856550269
  store i32 %95, i32* %18
  br label %435

; <label>:96:                                     ; preds = %19
  store i32 -1473132910, i32* %18
  br label %435

; <label>:97:                                     ; preds = %19
  %98 = load i32, i32* @x.39
  %99 = load i32, i32* @y.40
  %100 = sub i32 %98, 370474656
  %101 = sub i32 %100, 1
  %102 = add i32 %101, 370474656
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 1879823438, i32 -1874439013
  store i32 %112, i32* %18
  br label %435

; <label>:113:                                    ; preds = %19
  %114 = load volatile i32*, i32** %6
  %115 = load i32, i32* %114, align 4
  %116 = icmp sgt i32 %115, 0
  store i1 %116, i1* %4
  %117 = load i32, i32* @x.39
  %118 = load i32, i32* @y.40
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 916040113, i32 -1874439013
  store i32 %142, i32* %18
  br label %435

; <label>:143:                                    ; preds = %19
  %144 = load volatile i1, i1* %4
  %145 = select i1 %144, i32 785464908, i32 1868264693
  store i32 %145, i32* %18
  br label %435

; <label>:146:                                    ; preds = %19
  %147 = load i32, i32* @x.39
  %148 = load i32, i32* @y.40
  %149 = add i32 %147, -1133663054
  %150 = sub i32 %149, 1
  %151 = sub i32 %150, -1133663054
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 true, true
  %160 = and i1 %157, true
  %161 = and i1 %155, %159
  %162 = and i1 %158, true
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 true, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 141093785, i32 1593237839
  store i32 %173, i32* %18
  br label %435

; <label>:174:                                    ; preds = %19
  %175 = load volatile i32*, i32** %6
  %176 = load i32, i32* %175, align 4
  %177 = sub i32 %176, -1105082319
  %178 = sub i32 %177, 1
  %179 = add i32 %178, -1105082319
  %180 = sub nsw i32 %176, 1
  %181 = sdiv i32 %179, 2
  %182 = load volatile i32*, i32** %6
  store i32 %181, i32* %182, align 4
  %183 = load volatile %class.SegTree*, %class.SegTree** %5
  %184 = getelementptr inbounds %class.SegTree, %class.SegTree* %183, i32 0, i32 3
  %185 = load volatile %class.SegTree*, %class.SegTree** %5
  %186 = getelementptr inbounds %class.SegTree, %class.SegTree* %185, i32 0, i32 2
  %187 = load volatile i32*, i32** %6
  %188 = load i32, i32* %187, align 4
  %189 = mul nsw i32 %188, 2
  %190 = sub i32 %189, 1508954060
  %191 = add i32 %190, 1
  %192 = add i32 %191, 1508954060
  %193 = add nsw i32 %189, 1
  %194 = sext i32 %192 to i64
  %195 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %186, i64 %194) #3
  %196 = load i64, i64* %195, align 8
  %197 = load volatile %class.SegTree*, %class.SegTree** %5
  %198 = getelementptr inbounds %class.SegTree, %class.SegTree* %197, i32 0, i32 2
  %199 = load volatile i32*, i32** %6
  %200 = load i32, i32* %199, align 4
  %201 = mul nsw i32 %200, 2
  %202 = sub i32 0, 2
  %203 = sub i32 %201, %202
  %204 = add nsw i32 %201, 2
  %205 = sext i32 %203 to i64
  %206 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %198, i64 %205) #3
  %207 = load i64, i64* %206, align 8
  %208 = call i64 @_ZNKSt8functionIFlllEEclEll(%"class.std::function"* %184, i64 %196, i64 %207)
  %209 = load volatile %class.SegTree*, %class.SegTree** %5
  %210 = getelementptr inbounds %class.SegTree, %class.SegTree* %209, i32 0, i32 2
  %211 = load volatile i32*, i32** %6
  %212 = load i32, i32* %211, align 4
  %213 = sext i32 %212 to i64
  %214 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %210, i64 %213) #3
  store i64 %208, i64* %214, align 8
  %215 = load i32, i32* @x.39
  %216 = load i32, i32* @y.40
  %217 = add i32 %215, 701077345
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, 701077345
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  %229 = select i1 %227, i32 -671619410, i32 1593237839
  store i32 %229, i32* %18
  br label %435

; <label>:230:                                    ; preds = %19
  store i32 -1473132910, i32* %18
  br label %435

; <label>:231:                                    ; preds = %19
  ret void

; <label>:232:                                    ; preds = %19
  %233 = alloca %class.SegTree*, align 8
  %234 = alloca i32, align 4
  %235 = alloca i64, align 8
  store %class.SegTree* %0, %class.SegTree** %233, align 8
  store i32 %1, i32* %234, align 4
  store i64 %2, i64* %235, align 8
  %236 = load %class.SegTree*, %class.SegTree** %233, align 8
  %237 = getelementptr inbounds %class.SegTree, %class.SegTree* %236, i32 0, i32 0
  %238 = load i32, i32* %237, align 8
  %239 = add i32 %238, -2133585648
  %240 = sub i32 %239, 1
  %241 = sub i32 %240, -2133585648
  %242 = sub nsw i32 %238, 1
  %243 = load i32, i32* %234, align 4
  %244 = sub i32 0, 1881052120
  %245 = sub i32 %244, %243
  %246 = add i32 %245, 1881052120
  %247 = sub i32 0, %243
  %248 = add i32 %246, -279933352
  %249 = add i32 %248, %241
  %250 = sub i32 %249, -279933352
  %251 = add i32 %246, %241
  %252 = shl i32 %243, %241
  %253 = sub i32 %243, 1336292906
  %254 = sub i32 %253, %241
  %255 = add i32 %254, 1336292906
  %256 = sub i32 %243, %241
  %257 = mul i32 %255, %241
  %258 = sub i32 0, -706413290
  %259 = sub i32 %258, %243
  %260 = add i32 %259, -706413290
  %261 = sub i32 0, %243
  %262 = sub i32 %260, 1430530455
  %263 = add i32 %262, %241
  %264 = add i32 %263, 1430530455
  %265 = add i32 %260, %241
  %266 = sub i32 %243, 1373640816
  %267 = add i32 %266, %241
  %268 = add i32 %267, 1373640816
  %269 = add nsw i32 %243, %241
  store i32 %268, i32* %234, align 4
  %270 = load i64, i64* %235, align 8
  %271 = getelementptr inbounds %class.SegTree, %class.SegTree* %236, i32 0, i32 2
  %272 = load i32, i32* %234, align 4
  %273 = sext i32 %272 to i64
  %274 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %271, i64 %273) #3
  store i64 %270, i64* %274, align 8
  store i32 -582697172, i32* %18
  br label %435

; <label>:275:                                    ; preds = %19
  %276 = load volatile i32*, i32** %6
  %277 = load i32, i32* %276, align 4
  %278 = icmp sgt i32 %277, 0
  store i32 1879823438, i32* %18
  br label %435

; <label>:279:                                    ; preds = %19
  %280 = load volatile i32*, i32** %6
  %281 = load i32, i32* %280, align 4
  %282 = shl i32 %281, 1
  %283 = shl i32 %281, 1
  %284 = add i32 0, 1567817726
  %285 = sub i32 %284, %281
  %286 = sub i32 %285, 1567817726
  %287 = sub i32 0, %281
  %288 = add i32 %286, -1423706315
  %289 = add i32 %288, 1
  %290 = sub i32 %289, -1423706315
  %291 = add i32 %286, 1
  %292 = add i32 0, -1808044539
  %293 = sub i32 %292, %281
  %294 = sub i32 %293, -1808044539
  %295 = sub i32 0, %281
  %296 = sub i32 0, 1
  %297 = sub i32 %294, %296
  %298 = add i32 %294, 1
  %299 = shl i32 %281, 1
  %300 = sub i32 %281, 205915808
  %301 = sub i32 %300, 1
  %302 = add i32 %301, 205915808
  %303 = sub nsw i32 %281, 1
  %304 = add i32 %302, 570279055
  %305 = sub i32 %304, 2
  %306 = sub i32 %305, 570279055
  %307 = sub i32 %302, 2
  %308 = mul i32 %306, 2
  %309 = add i32 %302, -1241609281
  %310 = sub i32 %309, 2
  %311 = sub i32 %310, -1241609281
  %312 = sub i32 %302, 2
  %313 = mul i32 %311, 2
  %314 = sdiv i32 %302, 2
  %315 = load volatile i32*, i32** %6
  store i32 %314, i32* %315, align 4
  %316 = load volatile %class.SegTree*, %class.SegTree** %5
  %317 = getelementptr inbounds %class.SegTree, %class.SegTree* %316, i32 0, i32 3
  %318 = load volatile %class.SegTree*, %class.SegTree** %5
  %319 = getelementptr inbounds %class.SegTree, %class.SegTree* %318, i32 0, i32 2
  %320 = load volatile i32*, i32** %6
  %321 = load i32, i32* %320, align 4
  %322 = sub i32 0, 2
  %323 = add i32 %321, %322
  %324 = sub i32 %321, 2
  %325 = mul i32 %323, 2
  %326 = add i32 0, 1045786408
  %327 = sub i32 %326, %321
  %328 = sub i32 %327, 1045786408
  %329 = sub i32 0, %321
  %330 = sub i32 %328, -2132049119
  %331 = add i32 %330, 2
  %332 = add i32 %331, -2132049119
  %333 = add i32 %328, 2
  %334 = add i32 %321, -810813290
  %335 = sub i32 %334, 2
  %336 = sub i32 %335, -810813290
  %337 = sub i32 %321, 2
  %338 = mul i32 %336, 2
  %339 = mul nsw i32 %321, 2
  %340 = sub i32 0, %339
  %341 = add i32 0, %340
  %342 = sub i32 0, %339
  %343 = sub i32 %341, -336090361
  %344 = add i32 %343, 1
  %345 = add i32 %344, -336090361
  %346 = add i32 %341, 1
  %347 = sub i32 %339, -881353231
  %348 = sub i32 %347, 1
  %349 = add i32 %348, -881353231
  %350 = sub i32 %339, 1
  %351 = mul i32 %349, 1
  %352 = add i32 0, -1153935739
  %353 = sub i32 %352, %339
  %354 = sub i32 %353, -1153935739
  %355 = sub i32 0, %339
  %356 = sub i32 %354, -1171893340
  %357 = add i32 %356, 1
  %358 = add i32 %357, -1171893340
  %359 = add i32 %354, 1
  %360 = shl i32 %339, 1
  %361 = shl i32 %339, 1
  %362 = sub i32 %339, -299806426
  %363 = sub i32 %362, 1
  %364 = add i32 %363, -299806426
  %365 = sub i32 %339, 1
  %366 = mul i32 %364, 1
  %367 = sub i32 0, -1156740942
  %368 = sub i32 %367, %339
  %369 = add i32 %368, -1156740942
  %370 = sub i32 0, %339
  %371 = sub i32 0, 1
  %372 = sub i32 %369, %371
  %373 = add i32 %369, 1
  %374 = add i32 %339, -1950482432
  %375 = add i32 %374, 1
  %376 = sub i32 %375, -1950482432
  %377 = add nsw i32 %339, 1
  %378 = sext i32 %376 to i64
  %379 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %319, i64 %378) #3
  %380 = load i64, i64* %379, align 8
  %381 = load volatile %class.SegTree*, %class.SegTree** %5
  %382 = getelementptr inbounds %class.SegTree, %class.SegTree* %381, i32 0, i32 2
  %383 = load volatile i32*, i32** %6
  %384 = load i32, i32* %383, align 4
  %385 = sub i32 %384, -2050237270
  %386 = sub i32 %385, 2
  %387 = add i32 %386, -2050237270
  %388 = sub i32 %384, 2
  %389 = mul i32 %387, 2
  %390 = add i32 %384, -1971970848
  %391 = sub i32 %390, 2
  %392 = sub i32 %391, -1971970848
  %393 = sub i32 %384, 2
  %394 = mul i32 %392, 2
  %395 = sub i32 0, 2
  %396 = add i32 %384, %395
  %397 = sub i32 %384, 2
  %398 = mul i32 %396, 2
  %399 = add i32 0, 570030568
  %400 = sub i32 %399, %384
  %401 = sub i32 %400, 570030568
  %402 = sub i32 0, %384
  %403 = sub i32 0, 2
  %404 = sub i32 %401, %403
  %405 = add i32 %401, 2
  %406 = sub i32 0, 2
  %407 = add i32 %384, %406
  %408 = sub i32 %384, 2
  %409 = mul i32 %407, 2
  %410 = mul nsw i32 %384, 2
  %411 = shl i32 %410, 2
  %412 = shl i32 %410, 2
  %413 = add i32 0, 1090547189
  %414 = sub i32 %413, %410
  %415 = sub i32 %414, 1090547189
  %416 = sub i32 0, %410
  %417 = sub i32 0, %415
  %418 = sub i32 0, 2
  %419 = add i32 %417, %418
  %420 = sub i32 0, %419
  %421 = add i32 %415, 2
  %422 = sub i32 0, 2
  %423 = sub i32 %410, %422
  %424 = add nsw i32 %410, 2
  %425 = sext i32 %423 to i64
  %426 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %382, i64 %425) #3
  %427 = load i64, i64* %426, align 8
  %428 = call i64 @_ZNKSt8functionIFlllEEclEll(%"class.std::function"* %317, i64 %380, i64 %427)
  %429 = load volatile %class.SegTree*, %class.SegTree** %5
  %430 = getelementptr inbounds %class.SegTree, %class.SegTree* %429, i32 0, i32 2
  %431 = load volatile i32*, i32** %6
  %432 = load i32, i32* %431, align 4
  %433 = sext i32 %432 to i64
  %434 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %430, i64 %433) #3
  store i64 %428, i64* %434, align 8
  store i32 141093785, i32* %18
  br label %435

; <label>:435:                                    ; preds = %279, %275, %232, %230, %174, %146, %143, %113, %97, %96, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(16) %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EEixEm(%"class.std::vector.0"*, i64) #4 align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.T*, %struct.T** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %struct.T, %struct.T* %9, i64 %10
  ret %struct.T* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN7SegTreeIlE5queryEii(%class.SegTree*, i32, i32) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.43
  %8 = load i32, i32* @y.44
  %9 = sub i32 %7, -1739768543
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1739768543
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1560437728, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %78
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1560437728, label %21
    i32 -1883231354, label %29
    i32 433183701, label %66
    i32 1770381204, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %78

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1883231354, i32 1770381204
  store i32 %28, i32* %17
  br label %78

; <label>:29:                                     ; preds = %18
  %30 = alloca %class.SegTree*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  store %class.SegTree* %0, %class.SegTree** %30, align 8
  store i32 %1, i32* %31, align 4
  store i32 %2, i32* %32, align 4
  %33 = load %class.SegTree*, %class.SegTree** %30, align 8
  %34 = load i32, i32* %31, align 4
  %35 = load i32, i32* %32, align 4
  %36 = getelementptr inbounds %class.SegTree, %class.SegTree* %33, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = call i64 @_ZN7SegTreeIlE6_queryEiiiii(%class.SegTree* %33, i32 %34, i32 %35, i32 0, i32 0, i32 %37)
  store i64 %38, i64* %4
  %39 = load i32, i32* @x.43
  %40 = load i32, i32* @y.44
  %41 = sub i32 %39, -86178878
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -86178878
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 433183701, i32 1770381204
  store i32 %65, i32* %17
  br label %78

; <label>:66:                                     ; preds = %18
  %67 = load volatile i64, i64* %4
  ret i64 %67

; <label>:68:                                     ; preds = %18
  %69 = alloca %class.SegTree*, align 8
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  store %class.SegTree* %0, %class.SegTree** %69, align 8
  store i32 %1, i32* %70, align 4
  store i32 %2, i32* %71, align 4
  %72 = load %class.SegTree*, %class.SegTree** %69, align 8
  %73 = load i32, i32* %70, align 4
  %74 = load i32, i32* %71, align 4
  %75 = getelementptr inbounds %class.SegTree, %class.SegTree* %72, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = call i64 @_ZN7SegTreeIlE6_queryEiiiii(%class.SegTree* %72, i32 %73, i32 %74, i32 0, i32 0, i32 %76)
  store i32 -1883231354, i32* %17
  br label %78

; <label>:78:                                     ; preds = %68, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7SegTreeIlED2Ev(%class.SegTree*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %class.SegTree*, align 8
  store %class.SegTree* %0, %class.SegTree** %2, align 8
  %3 = load %class.SegTree*, %class.SegTree** %2, align 8
  %4 = getelementptr inbounds %class.SegTree, %class.SegTree* %3, i32 0, i32 3
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %4) #3
  %5 = getelementptr inbounds %class.SegTree, %class.SegTree* %3, i32 0, i32 2
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt6vectorIZ4mainE1TSaIS0_EED2Ev(%"class.std::vector.0"*) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.T*, %struct.T** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.T*, %struct.T** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPZ4mainE1TS0_EvT_S2_RSaIT0_E(%struct.T* %9, %struct.T* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %70

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.47
  %18 = load i32, i32* @y.48
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %119

; <label>:42:                                     ; preds = %16, %119
  %43 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %43) #3
  %44 = load i32, i32* @x.47
  %45 = load i32, i32* @y.48
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %119

; <label>:69:                                     ; preds = %42
  ret void

; <label>:70:                                     ; preds = %1
  %71 = load i32, i32* @x.47
  %72 = load i32, i32* @y.48
  %73 = sub i32 %71, 1824929755
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 1824929755
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %121

; <label>:85:                                     ; preds = %70, %121
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %3, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %4, align 4
  %89 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %89) #3
  %90 = load i32, i32* @x.47
  %91 = load i32, i32* @y.48
  %92 = sub i32 %90, 1459599578
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1459599578
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %121

; <label>:116:                                    ; preds = %85
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %118) #12
  unreachable

; <label>:119:                                    ; preds = %42, %16
  %120 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %120) #3
  br label %42

; <label>:121:                                    ; preds = %85, %70
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %3, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %4, align 4
  %125 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EED2Ev(%"struct.std::_Vector_base.1"* %125) #3
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %2, align 8
  %3 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 1
  %5 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8
  %6 = icmp ne i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %5, null
  br i1 %6, label %7, label %122

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.49
  %9 = load i32, i32* @y.50
  %10 = add i32 %8, 467141485
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 467141485
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = xor i1 %16, true
  %19 = xor i1 %17, true
  %20 = xor i1 true, true
  %21 = and i1 %18, true
  %22 = and i1 %16, %20
  %23 = and i1 %19, true
  %24 = and i1 %17, %20
  %25 = or i1 %21, %22
  %26 = or i1 %23, %24
  %27 = xor i1 %25, %26
  %28 = or i1 %18, %19
  %29 = xor i1 %28, true
  %30 = or i1 true, %20
  %31 = and i1 %29, %30
  %32 = or i1 %27, %31
  %33 = or i1 %16, %17
  br i1 %32, label %34, label %126

; <label>:34:                                     ; preds = %7, %126
  %35 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 1
  %36 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %35, align 8
  %37 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 0
  %39 = load i32, i32* @x.49
  %40 = load i32, i32* @y.50
  %41 = add i32 %39, -402112285
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -402112285
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %126

; <label>:65:                                     ; preds = %34
  %66 = invoke zeroext i1 %36(%"union.std::_Any_data"* dereferenceable(16) %37, %"union.std::_Any_data"* dereferenceable(16) %38, i32 3)
          to label %67 unwind label %123

; <label>:67:                                     ; preds = %65
  %68 = load i32, i32* @x.49
  %69 = load i32, i32* @y.50
  %70 = add i32 %68, -2894482
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -2894482
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %131

; <label>:94:                                     ; preds = %67, %131
  %95 = load i32, i32* @x.49
  %96 = load i32, i32* @y.50
  %97 = sub i32 %95, -1518218290
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1518218290
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %131

; <label>:121:                                    ; preds = %94
  br label %122

; <label>:122:                                    ; preds = %121, %1
  ret void

; <label>:123:                                    ; preds = %65
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  call void @__clang_call_terminate(i8* %125) #12
  unreachable

; <label>:126:                                    ; preds = %34, %7
  %127 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 1
  %128 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %127, align 8
  %129 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 0
  %130 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 0
  br label %34

; <label>:131:                                    ; preds = %94, %67
  br label %94
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.51
  %5 = load i32, i32* @y.52
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 116203433, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %68
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 116203433, label %17
    i32 27785332, label %37
    i32 -1249230417, label %65
    i32 1434759856, label %66
  ]

; <label>:16:                                     ; preds = %14
  br label %68

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 27785332, i32 1434759856
  store i32 %36, i32* %13
  br label %68

; <label>:37:                                     ; preds = %14
  %38 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  %39 = load i32, i32* @x.51
  %40 = load i32, i32* @y.52
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1249230417, i32 1434759856
  store i32 %64, i32* %13
  br label %68

; <label>:65:                                     ; preds = %14
  unreachable

; <label>:66:                                     ; preds = %14
  %67 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  store i32 27785332, i32* %13
  br label %68

; <label>:68:                                     ; preds = %66, %37, %17, %16
  br label %14
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.53
  %3 = load i32, i32* @y.54
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %131

; <label>:27:                                     ; preds = %1, %131
  %28 = alloca %"class.std::vector.5"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %32 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  %41 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %40) #3
  %42 = load i32, i32* @x.53
  %43 = load i32, i32* @y.54
  %44 = sub i32 %42, -595125732
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -595125732
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %131

; <label>:68:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %35, i64* %39, %"class.std::allocator.7"* dereferenceable(1) %41)
          to label %69 unwind label %71

; <label>:69:                                     ; preds = %68
  %70 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"* %70) #3
  ret void

; <label>:71:                                     ; preds = %68
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %29, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %30, align 4
  %75 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"* %75) #3
  br label %76

; <label>:76:                                     ; preds = %71
  %77 = load i32, i32* @x.53
  %78 = load i32, i32* @y.54
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %146

; <label>:102:                                    ; preds = %76, %146
  %103 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %103) #12
  %104 = load i32, i32* @x.53
  %105 = load i32, i32* @y.54
  %106 = add i32 %104, -1603264010
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, -1603264010
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %146

; <label>:130:                                    ; preds = %102
  unreachable

; <label>:131:                                    ; preds = %27, %1
  %132 = alloca %"class.std::vector.5"*, align 8
  %133 = alloca i8*
  %134 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %132, align 8
  %135 = load %"class.std::vector.5"*, %"class.std::vector.5"** %132, align 8
  %136 = bitcast %"class.std::vector.5"* %135 to %"struct.std::_Vector_base.6"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %137, i32 0, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = bitcast %"class.std::vector.5"* %135 to %"struct.std::_Vector_base.6"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %141, i32 0, i32 1
  %143 = load i64*, i64** %142, align 8
  %144 = bitcast %"class.std::vector.5"* %135 to %"struct.std::_Vector_base.6"*
  %145 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %144) #3
  br label %27

; <label>:146:                                    ; preds = %102, %76
  %147 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %147) #12
  br label %102
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPlEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.57
  %6 = load i32, i32* @y.58
  %7 = add i32 %5, 930687475
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 930687475
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 77860943, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 77860943, label %19
    i32 -876091932, label %39
    i32 1361156945, label %71
    i32 898654173, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -876091932, i32 898654173
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %40, align 8
  %41 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42 to %"class.std::allocator.7"*
  store %"class.std::allocator.7"* %43, %"class.std::allocator.7"** %2
  %44 = load i32, i32* @x.57
  %45 = load i32, i32* @y.58
  %46 = sub i32 %44, 473800656
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 473800656
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1361156945, i32 898654173
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator.7"*, %"class.std::allocator.7"** %2
  ret %"class.std::allocator.7"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %74, align 8
  %75 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %76 to %"class.std::allocator.7"*
  store i32 -876091932, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = sub i64 %15, 9157522324681681304
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 9157522324681681304
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %5, i64* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPlEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.63
  %6 = load i32, i32* @y.64
  %7 = sub i32 %5, 1105665853
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1105665853
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 843927851, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 843927851, label %19
    i32 1214847566, label %39
    i32 -337639569, label %69
    i32 1630237749, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1214847566, i32 1630237749
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  %41 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load i32, i32* @x.63
  %43 = load i32, i32* @y.64
  %44 = sub i32 %42, 784023819
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 784023819
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -337639569, i32 1630237749
  store i32 %68, i32* %15
  br label %73

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca i64*, align 8
  %72 = alloca i64*, align 8
  store i64* %0, i64** %71, align 8
  store i64* %1, i64** %72, align 8
  store i32 1214847566, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca %"struct.std::_Vector_base.6"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %6, align 8
  store %"struct.std::_Vector_base.6"* %9, %"struct.std::_Vector_base.6"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 1979250937, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1979250937, label %15
    i32 652986041, label %19
    i32 -2080195340, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 652986041, i32 -2080195340
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %21 to %"class.std::allocator.7"*
  %23 = load i64*, i64** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm(%"class.std::allocator.7"* dereferenceable(1) %22, i64* %23, i64 %24)
  store i32 -2080195340, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.67
  %5 = load i32, i32* @y.68
  %6 = add i32 %4, 1201860746
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1201860746
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -736496163, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -736496163, label %18
    i32 144947331, label %38
    i32 -2118764574, label %69
    i32 -302936519, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 144947331, i32 -302936519
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %40 to %"class.std::allocator.7"*
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %41) #3
  %42 = load i32, i32* @x.67
  %43 = load i32, i32* @y.68
  %44 = sub i32 %42, -1683679860
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1683679860
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -2118764574, i32 -302936519
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %71, align 8
  %72 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %71, align 8
  %73 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %72 to %"class.std::allocator.7"*
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %73) #3
  store i32 144947331, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm(%"class.std::allocator.7"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm(%"class.__gnu_cxx::new_allocator.8"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm(%"class.__gnu_cxx::new_allocator.8"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIlED2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIlED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI1PSaIS0_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.79
  %5 = load i32, i32* @y.80
  %6 = add i32 %4, 983542077
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 983542077
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 533139848, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 533139848, label %18
    i32 -354958312, label %26
    i32 1928171348, label %60
    i32 -859886245, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -354958312, i32 -859886245
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %0, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %28 to %"class.std::allocator"*
  call void @_ZNSaI1PEC2Ev(%"class.std::allocator"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %28, i32 0, i32 0
  store %struct.P* null, %struct.P** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %28, i32 0, i32 1
  store %struct.P* null, %struct.P** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %28, i32 0, i32 2
  store %struct.P* null, %struct.P** %32, align 8
  %33 = load i32, i32* @x.79
  %34 = load i32, i32* @y.80
  %35 = add i32 %33, -1166453493
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1166453493
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1928171348, i32 -859886245
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %0, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %62, align 8
  %63 = load %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %62, align 8
  %64 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %63 to %"class.std::allocator"*
  call void @_ZNSaI1PEC2Ev(%"class.std::allocator"* %64) #3
  %65 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %63, i32 0, i32 0
  store %struct.P* null, %struct.P** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %63, i32 0, i32 1
  store %struct.P* null, %struct.P** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %63, i32 0, i32 2
  store %struct.P* null, %struct.P** %67, align 8
  store i32 -354958312, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI1PEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI1PEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI1PEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP1PS0_EvT_S2_RSaIT0_E(%struct.P*, %struct.P*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %struct.P*, align 8
  %5 = alloca %struct.P*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %struct.P* %0, %struct.P** %4, align 8
  store %struct.P* %1, %struct.P** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %struct.P*, %struct.P** %4, align 8
  %8 = load %struct.P*, %struct.P** %5, align 8
  call void @_ZSt8_DestroyIP1PEvT_S2_(%struct.P* %7, %struct.P* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI1PSaIS0_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %struct.P*, %struct.P** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %struct.P*, %struct.P** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %struct.P*, %struct.P** %13, align 8
  %15 = ptrtoint %struct.P* %11 to i64
  %16 = ptrtoint %struct.P* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 16
  invoke void @_ZNSt12_Vector_baseI1PSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %5, %struct.P* %8, i64 %20)
          to label %21 unwind label %64

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.89
  %23 = load i32, i32* @y.90
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %125

; <label>:35:                                     ; preds = %21, %125
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %36) #3
  %37 = load i32, i32* @x.89
  %38 = load i32, i32* @y.90
  %39 = sub i32 %37, -1836338547
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1836338547
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %125

; <label>:63:                                     ; preds = %35
  ret void

; <label>:64:                                     ; preds = %1
  %65 = load i32, i32* @x.89
  %66 = load i32, i32* @y.90
  %67 = sub i32 %65, 1877573280
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 1877573280
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %127

; <label>:91:                                     ; preds = %64, %127
  %92 = landingpad { i8*, i32 }
          catch i8* null
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %3, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %4, align 4
  %95 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %95) #3
  %96 = load i32, i32* @x.89
  %97 = load i32, i32* @y.90
  %98 = sub i32 %96, -1152762666
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -1152762666
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %127

; <label>:122:                                    ; preds = %91
  br label %123

; <label>:123:                                    ; preds = %122
  %124 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %124) #12
  unreachable

; <label>:125:                                    ; preds = %35, %21
  %126 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %126) #3
  br label %35

; <label>:127:                                    ; preds = %91, %64
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %3, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %4, align 4
  %131 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %131) #3
  br label %91
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP1PEvT_S2_(%struct.P*, %struct.P*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.91
  %6 = load i32, i32* @y.92
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 527504907, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 527504907, label %18
    i32 470305648, label %26
    i32 -1934113459, label %58
    i32 1981464667, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 470305648, i32 1981464667
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.P*, align 8
  %28 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %27, align 8
  store %struct.P* %1, %struct.P** %28, align 8
  %29 = load %struct.P*, %struct.P** %27, align 8
  %30 = load %struct.P*, %struct.P** %28, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP1PEEvT_S4_(%struct.P* %29, %struct.P* %30)
  %31 = load i32, i32* @x.91
  %32 = load i32, i32* @y.92
  %33 = add i32 %31, 221748620
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 221748620
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1934113459, i32 1981464667
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %struct.P*, align 8
  %61 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %60, align 8
  store %struct.P* %1, %struct.P** %61, align 8
  %62 = load %struct.P*, %struct.P** %60, align 8
  %63 = load %struct.P*, %struct.P** %61, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP1PEEvT_S4_(%struct.P* %62, %struct.P* %63)
  store i32 470305648, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP1PEEvT_S4_(%struct.P*, %struct.P*) #4 comdat align 2 {
  %3 = alloca %struct.P*, align 8
  %4 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %3, align 8
  store %struct.P* %1, %struct.P** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI1PSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"*, %struct.P*, i64) #0 comdat align 2 {
  %4 = alloca %struct.P*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %struct.P*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %struct.P* %1, %struct.P** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %struct.P*, %struct.P** %7, align 8
  store %struct.P* %10, %struct.P** %4
  %11 = alloca i32
  store i32 -1016843654, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %71
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1016843654, label %15
    i32 80843662, label %19
    i32 685015685, label %25
    i32 895793328, label %53
    i32 699301485, label %69
    i32 2124947990, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %71

; <label>:15:                                     ; preds = %12
  %16 = load volatile %struct.P*, %struct.P** %4
  %17 = icmp ne %struct.P* %16, null
  %18 = select i1 %17, i32 80843662, i32 685015685
  store i32 %18, i32* %11
  br label %71

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %struct.P*, %struct.P** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaI1PEE10deallocateERS1_PS0_m(%"class.std::allocator"* dereferenceable(1) %22, %struct.P* %23, i64 %24)
  store i32 685015685, i32* %11
  br label %71

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.95
  %27 = load i32, i32* @y.96
  %28 = add i32 %26, -43719703
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -43719703
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 895793328, i32 2124947990
  store i32 %52, i32* %11
  br label %71

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.95
  %55 = load i32, i32* @y.96
  %56 = sub i32 %54, 1896880455
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 1896880455
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 699301485, i32 2124947990
  store i32 %68, i32* %11
  br label %71

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  store i32 895793328, i32* %11
  br label %71

; <label>:71:                                     ; preds = %70, %53, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI1PSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.97
  %5 = load i32, i32* @y.98
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1151959455, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1151959455, label %17
    i32 1910576590, label %37
    i32 -753412756, label %56
    i32 -367638345, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1910576590, i32 -367638345
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %0, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %39 to %"class.std::allocator"*
  call void @_ZNSaI1PED2Ev(%"class.std::allocator"* %40) #3
  %41 = load i32, i32* @x.97
  %42 = load i32, i32* @y.98
  %43 = add i32 %41, 1429182334
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1429182334
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -753412756, i32 -367638345
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %0, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"*, %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %59 to %"class.std::allocator"*
  call void @_ZNSaI1PED2Ev(%"class.std::allocator"* %60) #3
  store i32 1910576590, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI1PEE10deallocateERS1_PS0_m(%"class.std::allocator"* dereferenceable(1), %struct.P*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.99
  %7 = load i32, i32* @y.100
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1276792564, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1276792564, label %19
    i32 -1365560059, label %39
    i32 874150862, label %73
    i32 -857166757, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1365560059, i32 -857166757
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  %41 = alloca %struct.P*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  store %struct.P* %1, %struct.P** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %44 = bitcast %"class.std::allocator"* %43 to %"class.__gnu_cxx::new_allocator"*
  %45 = load %struct.P*, %struct.P** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI1PE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"* %44, %struct.P* %45, i64 %46)
  %47 = load i32, i32* @x.99
  %48 = load i32, i32* @y.100
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 874150862, i32 -857166757
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::allocator"*, align 8
  %76 = alloca %struct.P*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %75, align 8
  store %struct.P* %1, %struct.P** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.std::allocator"*, %"class.std::allocator"** %75, align 8
  %79 = bitcast %"class.std::allocator"* %78 to %"class.__gnu_cxx::new_allocator"*
  %80 = load %struct.P*, %struct.P** %76, align 8
  %81 = load i64, i64* %77, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI1PE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"* %79, %struct.P* %80, i64 %81)
  store i32 -1365560059, i32* %15
  br label %82

; <label>:82:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI1PE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"*, %struct.P*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.101
  %7 = load i32, i32* @y.102
  %8 = add i32 %6, 1268667047
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1268667047
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2019896838, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2019896838, label %20
    i32 -2098249073, label %40
    i32 45034533, label %73
    i32 -107467523, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -2098249073, i32 -107467523
  store i32 %39, i32* %16
  br label %81

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %42 = alloca %struct.P*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %41, align 8
  store %struct.P* %1, %struct.P** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %41, align 8
  %45 = load %struct.P*, %struct.P** %42, align 8
  %46 = bitcast %struct.P* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.101
  %48 = load i32, i32* @y.102
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 45034533, i32 -107467523
  store i32 %72, i32* %16
  br label %81

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %76 = alloca %struct.P*, align 8
  %77 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %75, align 8
  store %struct.P* %1, %struct.P** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %75, align 8
  %79 = load %struct.P*, %struct.P** %76, align 8
  %80 = bitcast %struct.P* %79 to i8*
  call void @_ZdlPv(i8* %80) #3
  store i32 -2098249073, i32* %16
  br label %81

; <label>:81:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI1PED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI1PED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI1PED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI1PSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector"*, %struct.P* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %struct.P*
  %4 = alloca %struct.P*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %struct.P*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store %struct.P* %1, %struct.P** %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.P*, %struct.P** %12, align 8
  store %struct.P* %13, %struct.P** %4
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %struct.P*, %struct.P** %17, align 8
  store %struct.P* %18, %struct.P** %3
  %19 = alloca i32
  store i32 -957841907, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %142
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -957841907, label %23
    i32 1203811753, label %28
    i32 1313201560, label %46
    i32 2119810250, label %62
    i32 1152443906, label %93
    i32 1541138053, label %94
    i32 1951068779, label %121
    i32 773327814, label %136
    i32 1263720728, label %137
    i32 -1625080426, label %141
  ]

; <label>:22:                                     ; preds = %20
  br label %142

; <label>:23:                                     ; preds = %20
  %24 = load volatile %struct.P*, %struct.P** %4
  %25 = load volatile %struct.P*, %struct.P** %3
  %26 = icmp ne %struct.P* %24, %25
  %27 = select i1 %26, i32 1203811753, i32 1313201560
  store i32 %27, i32* %19
  br label %142

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %31 to %"class.std::allocator"*
  %33 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %34 = bitcast %"class.std::vector"* %33 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %struct.P*, %struct.P** %36, align 8
  %38 = load %struct.P*, %struct.P** %7, align 8
  %39 = call dereferenceable(16) %struct.P* @_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE(%struct.P* dereferenceable(16) %38) #3
  call void @_ZNSt16allocator_traitsISaI1PEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %32, %struct.P* %37, %struct.P* dereferenceable(16) %39)
  %40 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %struct.P*, %struct.P** %43, align 8
  %45 = getelementptr inbounds %struct.P, %struct.P* %44, i32 1
  store %struct.P* %45, %struct.P** %43, align 8
  store i32 1541138053, i32* %19
  br label %142

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.107
  %48 = load i32, i32* @y.108
  %49 = add i32 %47, 1998383312
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1998383312
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 2119810250, i32 1263720728
  store i32 %61, i32* %19
  br label %142

; <label>:62:                                     ; preds = %20
  %63 = load %struct.P*, %struct.P** %7, align 8
  %64 = call dereferenceable(16) %struct.P* @_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE(%struct.P* dereferenceable(16) %63) #3
  %65 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorI1PSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector"* %65, %struct.P* dereferenceable(16) %64)
  %66 = load i32, i32* @x.107
  %67 = load i32, i32* @y.108
  %68 = sub i32 %66, -834014781
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -834014781
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 1152443906, i32 1263720728
  store i32 %92, i32* %19
  br label %142

; <label>:93:                                     ; preds = %20
  store i32 1541138053, i32* %19
  br label %142

; <label>:94:                                     ; preds = %20
  %95 = load i32, i32* @x.107
  %96 = load i32, i32* @y.108
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 1951068779, i32 -1625080426
  store i32 %120, i32* %19
  br label %142

; <label>:121:                                    ; preds = %20
  %122 = load i32, i32* @x.107
  %123 = load i32, i32* @y.108
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  %135 = select i1 %133, i32 773327814, i32 -1625080426
  store i32 %135, i32* %19
  br label %142

; <label>:136:                                    ; preds = %20
  ret void

; <label>:137:                                    ; preds = %20
  %138 = load %struct.P*, %struct.P** %7, align 8
  %139 = call dereferenceable(16) %struct.P* @_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE(%struct.P* dereferenceable(16) %138) #3
  %140 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorI1PSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector"* %140, %struct.P* dereferenceable(16) %139)
  store i32 2119810250, i32* %19
  br label %142

; <label>:141:                                    ; preds = %20
  store i32 1951068779, i32* %19
  br label %142

; <label>:142:                                    ; preds = %141, %137, %121, %94, %93, %62, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %struct.P* @_ZSt4moveIR1PEONSt16remove_referenceIT_E4typeEOS3_(%struct.P* dereferenceable(16)) #4 comdat {
  %2 = alloca %struct.P*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.109
  %6 = load i32, i32* @y.110
  %7 = sub i32 %5, -941229674
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -941229674
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1736979212, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1736979212, label %19
    i32 37046363, label %27
    i32 -1823254474, label %57
    i32 -436836624, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 37046363, i32 -436836624
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %28, align 8
  %29 = load %struct.P*, %struct.P** %28, align 8
  store %struct.P* %29, %struct.P** %2
  %30 = load i32, i32* @x.109
  %31 = load i32, i32* @y.110
  %32 = sub i32 %30, 144233045
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 144233045
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1823254474, i32 -436836624
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %struct.P*, %struct.P** %2
  ret %struct.P* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %60, align 8
  %61 = load %struct.P*, %struct.P** %60, align 8
  store i32 37046363, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI1PEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %struct.P*, %struct.P* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.P*, align 8
  %6 = alloca %struct.P*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.P* %1, %struct.P** %5, align 8
  store %struct.P* %2, %struct.P** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.P*, %struct.P** %5, align 8
  %10 = load %struct.P*, %struct.P** %6, align 8
  %11 = call dereferenceable(16) %struct.P* @_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE(%struct.P* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorI1PE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %8, %struct.P* %9, %struct.P* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %struct.P* @_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE(%struct.P* dereferenceable(16)) #4 comdat {
  %2 = alloca %struct.P*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.113
  %6 = load i32, i32* @y.114
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1056276831, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1056276831, label %18
    i32 191586641, label %26
    i32 -463901779, label %56
    i32 950657810, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 191586641, i32 950657810
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %27, align 8
  %28 = load %struct.P*, %struct.P** %27, align 8
  store %struct.P* %28, %struct.P** %2
  %29 = load i32, i32* @x.113
  %30 = load i32, i32* @y.114
  %31 = sub i32 %29, -1200603847
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1200603847
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -463901779, i32 950657810
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %struct.P*, %struct.P** %2
  ret %struct.P* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %59, align 8
  %60 = load %struct.P*, %struct.P** %59, align 8
  store i32 191586641, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI1PSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector"*, %struct.P* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.P*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.P*, align 8
  %7 = alloca %struct.P*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.P* %1, %struct.P** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorI1PSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %5, align 8
  %14 = call %struct.P* @_ZNSt12_Vector_baseI1PSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"* %12, i64 %13)
  store %struct.P* %14, %struct.P** %6, align 8
  %15 = load %struct.P*, %struct.P** %6, align 8
  store %struct.P* %15, %struct.P** %7, align 8
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %17 to %"class.std::allocator"*
  %19 = load %struct.P*, %struct.P** %6, align 8
  %20 = call i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"* %10) #3
  %21 = getelementptr inbounds %struct.P, %struct.P* %19, i64 %20
  %22 = load %struct.P*, %struct.P** %4, align 8
  %23 = call dereferenceable(16) %struct.P* @_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE(%struct.P* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaI1PEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %18, %struct.P* %21, %struct.P* dereferenceable(16) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %struct.P* null, %struct.P** %7, align 8
  %25 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %struct.P*, %struct.P** %27, align 8
  %29 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %struct.P*, %struct.P** %31, align 8
  %33 = load %struct.P*, %struct.P** %6, align 8
  %34 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %35 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %34) #3
  %36 = invoke %struct.P* @_ZSt34__uninitialized_move_if_noexcept_aIP1PS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.P* %28, %struct.P* %32, %struct.P* %33, %"class.std::allocator"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %struct.P* %36, %struct.P** %7, align 8
  %38 = load %struct.P*, %struct.P** %7, align 8
  %39 = getelementptr inbounds %struct.P, %struct.P* %38, i32 1
  store %struct.P* %39, %struct.P** %7, align 8
  br label %115

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load %struct.P*, %struct.P** %7, align 8
  %48 = icmp ne %struct.P* %47, null
  br i1 %48, label %61, label %49

; <label>:49:                                     ; preds = %44
  %50 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %51 to %"class.std::allocator"*
  %53 = load %struct.P*, %struct.P** %6, align 8
  %54 = call i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"* %10) #3
  %55 = getelementptr inbounds %struct.P, %struct.P* %53, i64 %54
  invoke void @_ZNSt16allocator_traitsISaI1PEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator"* dereferenceable(1) %52, %struct.P* %55)
          to label %56 unwind label %57

; <label>:56:                                     ; preds = %49
  br label %67

; <label>:57:                                     ; preds = %113, %67, %61, %49
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %8, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %114 unwind label %164

; <label>:61:                                     ; preds = %44
  %62 = load %struct.P*, %struct.P** %6, align 8
  %63 = load %struct.P*, %struct.P** %7, align 8
  %64 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %65 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %64) #3
  invoke void @_ZSt8_DestroyIP1PS0_EvT_S2_RSaIT0_E(%struct.P* %62, %struct.P* %63, %"class.std::allocator"* dereferenceable(1) %65)
          to label %66 unwind label %57

; <label>:66:                                     ; preds = %61
  br label %67

; <label>:67:                                     ; preds = %66, %56
  %68 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %69 = load %struct.P*, %struct.P** %6, align 8
  %70 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseI1PSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %68, %struct.P* %69, i64 %70)
          to label %71 unwind label %57

; <label>:71:                                     ; preds = %67
  %72 = load i32, i32* @x.115
  %73 = load i32, i32* @y.116
  %74 = sub i32 %72, 1988239
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 1988239
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %168

; <label>:86:                                     ; preds = %71, %168
  %87 = load i32, i32* @x.115
  %88 = load i32, i32* @y.116
  %89 = sub i32 %87, 1777246870
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 1777246870
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %168

; <label>:113:                                    ; preds = %86
  invoke void @__cxa_rethrow() #13
          to label %167 unwind label %57

; <label>:114:                                    ; preds = %57
  br label %159

; <label>:115:                                    ; preds = %37
  %116 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %117, i32 0, i32 0
  %119 = load %struct.P*, %struct.P** %118, align 8
  %120 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %121, i32 0, i32 1
  %123 = load %struct.P*, %struct.P** %122, align 8
  %124 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %125 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %124) #3
  call void @_ZSt8_DestroyIP1PS0_EvT_S2_RSaIT0_E(%struct.P* %119, %struct.P* %123, %"class.std::allocator"* dereferenceable(1) %125)
  %126 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %127 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %127, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %128, i32 0, i32 0
  %130 = load %struct.P*, %struct.P** %129, align 8
  %131 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %132, i32 0, i32 2
  %134 = load %struct.P*, %struct.P** %133, align 8
  %135 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %136, i32 0, i32 0
  %138 = load %struct.P*, %struct.P** %137, align 8
  %139 = ptrtoint %struct.P* %134 to i64
  %140 = ptrtoint %struct.P* %138 to i64
  %141 = sub i64 0, %140
  %142 = add i64 %139, %141
  %143 = sub i64 %139, %140
  %144 = sdiv exact i64 %142, 16
  call void @_ZNSt12_Vector_baseI1PSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %126, %struct.P* %130, i64 %144)
  %145 = load %struct.P*, %struct.P** %6, align 8
  %146 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %147 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %146, i32 0, i32 0
  %148 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %147, i32 0, i32 0
  store %struct.P* %145, %struct.P** %148, align 8
  %149 = load %struct.P*, %struct.P** %7, align 8
  %150 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %150, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %151, i32 0, i32 1
  store %struct.P* %149, %struct.P** %152, align 8
  %153 = load %struct.P*, %struct.P** %6, align 8
  %154 = load i64, i64* %5, align 8
  %155 = getelementptr inbounds %struct.P, %struct.P* %153, i64 %154
  %156 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %157, i32 0, i32 2
  store %struct.P* %155, %struct.P** %158, align 8
  ret void

; <label>:159:                                    ; preds = %114
  %160 = load i8*, i8** %8, align 8
  %161 = load i32, i32* %9, align 4
  %162 = insertvalue { i8*, i32 } undef, i8* %160, 0
  %163 = insertvalue { i8*, i32 } %162, i32 %161, 1
  resume { i8*, i32 } %163

; <label>:164:                                    ; preds = %57
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  call void @__clang_call_terminate(i8* %166) #12
  unreachable

; <label>:167:                                    ; preds = %113
  unreachable

; <label>:168:                                    ; preds = %86, %71
  br label %86
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI1PE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %struct.P*, %struct.P* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.P*, align 8
  %6 = alloca %struct.P*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.P* %1, %struct.P** %5, align 8
  store %struct.P* %2, %struct.P** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.P*, %struct.P** %5, align 8
  %9 = bitcast %struct.P* %8 to i8*
  %10 = bitcast i8* %9 to %struct.P*
  %11 = load %struct.P*, %struct.P** %6, align 8
  %12 = call dereferenceable(16) %struct.P* @_ZSt7forwardI1PEOT_RNSt16remove_referenceIS1_E4typeE(%struct.P* dereferenceable(16) %11) #3
  %13 = bitcast %struct.P* %10 to i8*
  %14 = bitcast %struct.P* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI1PSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector"*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i8**
  %9 = alloca i64*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.119
  %13 = load i32, i32* @y.120
  %14 = add i32 %12, -584690769
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, -584690769
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %11
  %21 = icmp slt i32 %13, 10
  store i1 %21, i1* %10
  %22 = alloca i32
  store i32 1708948234, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %160
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 1708948234, label %27
    i32 -483383978, label %35
    i32 -1594389337, label %68
    i32 -159199464, label %71
    i32 1603844599, label %74
    i32 1815582682, label %96
    i32 859001042, label %103
    i32 -1436896498, label %106
    i32 1143855666, label %109
    i32 1344283326, label %111
  ]

; <label>:26:                                     ; preds = %24
  br label %160

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %11
  %29 = load volatile i1, i1* %10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -483383978, i32 1344283326
  store i32 %34, i32* %22
  br label %160

; <label>:35:                                     ; preds = %24
  %36 = alloca %"class.std::vector"*, align 8
  %37 = alloca i64, align 8
  store i64* %37, i64** %9
  %38 = alloca i8*, align 8
  store i8** %38, i8*** %8
  %39 = alloca i64, align 8
  store i64* %39, i64** %7
  %40 = alloca i64, align 8
  store i64* %40, i64** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %36, align 8
  %41 = load volatile i64*, i64** %9
  store i64 %1, i64* %41, align 8
  %42 = load volatile i8**, i8*** %8
  store i8* %2, i8** %42, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8
  store %"class.std::vector"* %43, %"class.std::vector"** %5
  %44 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %45 = call i64 @_ZNKSt6vectorI1PSaIS0_EE8max_sizeEv(%"class.std::vector"* %44) #3
  %46 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %47 = call i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"* %46) #3
  %48 = sub i64 0, %47
  %49 = add i64 %45, %48
  %50 = sub i64 %45, %47
  %51 = load volatile i64*, i64** %9
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %49, %52
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.119
  %55 = load i32, i32* @y.120
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1594389337, i32 1344283326
  store i32 %67, i32* %22
  br label %160

; <label>:68:                                     ; preds = %24
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 -159199464, i32 1603844599
  store i32 %70, i32* %22
  br label %160

; <label>:71:                                     ; preds = %24
  %72 = load volatile i8**, i8*** %8
  %73 = load i8*, i8** %72, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %73) #13
  unreachable

; <label>:74:                                     ; preds = %24
  %75 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %76 = call i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"* %75) #3
  %77 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %78 = call i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"* %77) #3
  %79 = load volatile i64*, i64** %6
  store i64 %78, i64* %79, align 8
  %80 = load volatile i64*, i64** %9
  %81 = load volatile i64*, i64** %6
  %82 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %81, i64* dereferenceable(8) %80)
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 0, %76
  %85 = sub i64 0, %83
  %86 = add i64 %84, %85
  %87 = sub i64 0, %86
  %88 = add i64 %76, %83
  %89 = load volatile i64*, i64** %7
  store i64 %87, i64* %89, align 8
  %90 = load volatile i64*, i64** %7
  %91 = load i64, i64* %90, align 8
  %92 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %93 = call i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"* %92) #3
  %94 = icmp ult i64 %91, %93
  %95 = select i1 %94, i32 859001042, i32 1815582682
  store i32 %95, i32* %22
  br label %160

; <label>:96:                                     ; preds = %24
  %97 = load volatile i64*, i64** %7
  %98 = load i64, i64* %97, align 8
  %99 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %100 = call i64 @_ZNKSt6vectorI1PSaIS0_EE8max_sizeEv(%"class.std::vector"* %99) #3
  %101 = icmp ugt i64 %98, %100
  %102 = select i1 %101, i32 859001042, i32 -1436896498
  store i32 %102, i32* %22
  br label %160

; <label>:103:                                    ; preds = %24
  %104 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %105 = call i64 @_ZNKSt6vectorI1PSaIS0_EE8max_sizeEv(%"class.std::vector"* %104) #3
  store i32 1143855666, i32* %22
  store i64 %105, i64* %23
  br label %160

; <label>:106:                                    ; preds = %24
  %107 = load volatile i64*, i64** %7
  %108 = load i64, i64* %107, align 8
  store i32 1143855666, i32* %22
  store i64 %108, i64* %23
  br label %160

; <label>:109:                                    ; preds = %24
  %110 = load i64, i64* %23
  ret i64 %110

; <label>:111:                                    ; preds = %24
  %112 = alloca %"class.std::vector"*, align 8
  %113 = alloca i64, align 8
  %114 = alloca i8*, align 8
  %115 = alloca i64, align 8
  %116 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %112, align 8
  store i64 %1, i64* %113, align 8
  store i8* %2, i8** %114, align 8
  %117 = load %"class.std::vector"*, %"class.std::vector"** %112, align 8
  %118 = call i64 @_ZNKSt6vectorI1PSaIS0_EE8max_sizeEv(%"class.std::vector"* %117) #3
  %119 = call i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"* %117) #3
  %120 = sub i64 0, %119
  %121 = add i64 %118, %120
  %122 = sub i64 %118, %119
  %123 = mul i64 %121, %119
  %124 = add i64 0, 6543361734642368622
  %125 = sub i64 %124, %118
  %126 = sub i64 %125, 6543361734642368622
  %127 = sub i64 0, %118
  %128 = add i64 %126, -5602034273969525204
  %129 = add i64 %128, %119
  %130 = sub i64 %129, -5602034273969525204
  %131 = add i64 %126, %119
  %132 = add i64 0, 2913533531953814152
  %133 = sub i64 %132, %118
  %134 = sub i64 %133, 2913533531953814152
  %135 = sub i64 0, %118
  %136 = add i64 %134, -2988820077981220418
  %137 = add i64 %136, %119
  %138 = sub i64 %137, -2988820077981220418
  %139 = add i64 %134, %119
  %140 = sub i64 0, %118
  %141 = add i64 0, %140
  %142 = sub i64 0, %118
  %143 = sub i64 0, %119
  %144 = sub i64 %141, %143
  %145 = add i64 %141, %119
  %146 = sub i64 0, %118
  %147 = add i64 0, %146
  %148 = sub i64 0, %118
  %149 = sub i64 0, %147
  %150 = sub i64 0, %119
  %151 = add i64 %149, %150
  %152 = sub i64 0, %151
  %153 = add i64 %147, %119
  %154 = sub i64 %118, 452619480159197632
  %155 = sub i64 %154, %119
  %156 = add i64 %155, 452619480159197632
  %157 = sub i64 %118, %119
  %158 = load i64, i64* %113, align 8
  %159 = icmp ult i64 %156, %158
  store i32 -483383978, i32* %22
  br label %160

; <label>:160:                                    ; preds = %111, %106, %103, %96, %74, %68, %35, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZNSt12_Vector_baseI1PSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1986755329, i32* %9
  %10 = alloca %struct.P*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1986755329, label %14
    i32 1227050595, label %18
    i32 1287084318, label %24
    i32 1630754332, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1227050595, i32 1287084318
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call %struct.P* @_ZNSt16allocator_traitsISaI1PEE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 1630754332, i32* %9
  store %struct.P* %23, %struct.P** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1630754332, i32* %9
  store %struct.P* null, %struct.P** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %struct.P*, %struct.P** %10
  ret %struct.P* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI1PSaIS0_EE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.P*, %struct.P** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl", %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.P*, %struct.P** %10, align 8
  %12 = ptrtoint %struct.P* %7 to i64
  %13 = ptrtoint %struct.P* %11 to i64
  %14 = sub i64 %12, -4257951896920320111
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -4257951896920320111
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt34__uninitialized_move_if_noexcept_aIP1PS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.P*, %struct.P*, %struct.P*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %struct.P*, align 8
  %6 = alloca %struct.P*, align 8
  %7 = alloca %struct.P*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %struct.P* %0, %struct.P** %5, align 8
  store %struct.P* %1, %struct.P** %6, align 8
  store %struct.P* %2, %struct.P** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %struct.P*, %struct.P** %5, align 8
  %12 = call %struct.P* @_ZSt32__make_move_if_noexcept_iteratorIP1PSt13move_iteratorIS1_EET0_T_(%struct.P* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %struct.P* %12, %struct.P** %13, align 8
  %14 = load %struct.P*, %struct.P** %6, align 8
  %15 = call %struct.P* @_ZSt32__make_move_if_noexcept_iteratorIP1PSt13move_iteratorIS1_EET0_T_(%struct.P* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %struct.P* %15, %struct.P** %16, align 8
  %17 = load %struct.P*, %struct.P** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.P*, %struct.P** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %struct.P*, %struct.P** %21, align 8
  %23 = call %struct.P* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP1PES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.P* %20, %struct.P* %22, %struct.P* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret %struct.P* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI1PEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator"* dereferenceable(1), %struct.P*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %struct.P*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %struct.P* %1, %struct.P** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %struct.P*, %struct.P** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI1PE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator"* %6, %struct.P* %7)
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI1PSaIS0_EE8max_sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaI1PEE8max_sizeERKS1_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.131
  %10 = load i32, i32* @y.132
  %11 = sub i32 %9, 1170090646
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1170090646
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 754420885, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %94
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 754420885, label %23
    i32 -1165931180, label %43
    i32 9628707, label %71
    i32 -400948361, label %74
    i32 820042407, label %78
    i32 -419785517, label %82
    i32 649896851, label %85
  ]

; <label>:22:                                     ; preds = %20
  br label %94

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1165931180, i32 649896851
  store i32 %42, i32* %19
  br label %94

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %6
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %5
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %4
  %47 = load volatile i64**, i64*** %5
  store i64* %0, i64** %47, align 8
  %48 = load volatile i64**, i64*** %4
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64**, i64*** %5
  %50 = load i64*, i64** %49, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64**, i64*** %4
  %53 = load i64*, i64** %52, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %51, %54
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.131
  %57 = load i32, i32* @y.132
  %58 = add i32 %56, -355039608
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -355039608
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 9628707, i32 649896851
  store i32 %70, i32* %19
  br label %94

; <label>:71:                                     ; preds = %20
  %72 = load volatile i1, i1* %3
  %73 = select i1 %72, i32 -400948361, i32 820042407
  store i32 %73, i32* %19
  br label %94

; <label>:74:                                     ; preds = %20
  %75 = load volatile i64**, i64*** %4
  %76 = load i64*, i64** %75, align 8
  %77 = load volatile i64**, i64*** %6
  store i64* %76, i64** %77, align 8
  store i32 -419785517, i32* %19
  br label %94

; <label>:78:                                     ; preds = %20
  %79 = load volatile i64**, i64*** %5
  %80 = load i64*, i64** %79, align 8
  %81 = load volatile i64**, i64*** %6
  store i64* %80, i64** %81, align 8
  store i32 -419785517, i32* %19
  br label %94

; <label>:82:                                     ; preds = %20
  %83 = load volatile i64**, i64*** %6
  %84 = load i64*, i64** %83, align 8
  ret i64* %84

; <label>:85:                                     ; preds = %20
  %86 = alloca i64*, align 8
  %87 = alloca i64*, align 8
  %88 = alloca i64*, align 8
  store i64* %0, i64** %87, align 8
  store i64* %1, i64** %88, align 8
  %89 = load i64*, i64** %87, align 8
  %90 = load i64, i64* %89, align 8
  %91 = load i64*, i64** %88, align 8
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %90, %92
  store i32 -1165931180, i32* %19
  br label %94

; <label>:94:                                     ; preds = %85, %78, %74, %71, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaI1PEE8max_sizeERKS1_(%"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI1PE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseI1PSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<P, std::allocator<P> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI1PE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZNSt16allocator_traitsISaI1PEE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %struct.P*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.139
  %7 = load i32, i32* @y.140
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 840045738, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 840045738, label %19
    i32 1221216047, label %27
    i32 666008437, label %60
    i32 -157009170, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1221216047, i32 -157009170
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load i64, i64* %29, align 8
  %33 = call %struct.P* @_ZN9__gnu_cxx13new_allocatorI1PE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %31, i64 %32, i8* null)
  store %struct.P* %33, %struct.P** %3
  %34 = load i32, i32* @x.139
  %35 = load i32, i32* @y.140
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 666008437, i32 -157009170
  store i32 %59, i32* %15
  br label %69

; <label>:60:                                     ; preds = %16
  %61 = load volatile %struct.P*, %struct.P** %3
  ret %struct.P* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator"*, align 8
  %64 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"class.std::allocator"*, %"class.std::allocator"** %63, align 8
  %66 = bitcast %"class.std::allocator"* %65 to %"class.__gnu_cxx::new_allocator"*
  %67 = load i64, i64* %64, align 8
  %68 = call %struct.P* @_ZN9__gnu_cxx13new_allocatorI1PE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %66, i64 %67, i8* null)
  store i32 1221216047, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZN9__gnu_cxx13new_allocatorI1PE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %struct.P*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorI1PE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 510354766, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %78
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 510354766, label %17
    i32 -1690955819, label %22
    i32 2008125509, label %23
    i32 -873704974, label %39
    i32 127699208, label %71
    i32 -2129640501, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %78

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1690955819, i32 2008125509
  store i32 %21, i32* %13
  br label %78

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.141
  %25 = load i32, i32* @y.142
  %26 = sub i32 %24, -1552192995
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1552192995
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -873704974, i32 -2129640501
  store i32 %38, i32* %13
  br label %78

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 16
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %struct.P*
  store %struct.P* %43, %struct.P** %4
  %44 = load i32, i32* @x.141
  %45 = load i32, i32* @y.142
  %46 = add i32 %44, 607093875
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 607093875
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 127699208, i32 -2129640501
  store i32 %70, i32* %13
  br label %78

; <label>:71:                                     ; preds = %14
  %72 = load volatile %struct.P*, %struct.P** %4
  ret %struct.P* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = mul i64 %74, 16
  %76 = call i8* @_Znwm(i64 %75)
  %77 = bitcast i8* %76 to %struct.P*
  store i32 -873704974, i32* %13
  br label %78

; <label>:78:                                     ; preds = %73, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP1PES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.P*, %struct.P*, %struct.P*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %struct.P*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.P* %0, %struct.P** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %struct.P* %1, %struct.P** %12, align 8
  store %struct.P* %2, %struct.P** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.P*, %struct.P** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %struct.P*, %struct.P** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %struct.P*, %struct.P** %20, align 8
  %22 = call %struct.P* @_ZSt18uninitialized_copyISt13move_iteratorIP1PES2_ET0_T_S5_S4_(%struct.P* %19, %struct.P* %21, %struct.P* %17)
  ret %struct.P* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt32__make_move_if_noexcept_iteratorIP1PSt13move_iteratorIS1_EET0_T_(%struct.P*) #0 comdat {
  %2 = alloca %struct.P*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.145
  %6 = load i32, i32* @y.146
  %7 = add i32 %5, -1604178079
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1604178079
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -212021713, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -212021713, label %19
    i32 -1778320411, label %39
    i32 1918988783, label %59
    i32 -408029656, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1778320411, i32 -408029656
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator", align 8
  %41 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %41, align 8
  %42 = load %struct.P*, %struct.P** %41, align 8
  call void @_ZNSt13move_iteratorIP1PEC2ES1_(%"class.std::move_iterator"* %40, %struct.P* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %44 = load %struct.P*, %struct.P** %43, align 8
  store %struct.P* %44, %struct.P** %2
  %45 = load i32, i32* @x.145
  %46 = load i32, i32* @y.146
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1918988783, i32 -408029656
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile %struct.P*, %struct.P** %2
  ret %struct.P* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator", align 8
  %63 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %63, align 8
  %64 = load %struct.P*, %struct.P** %63, align 8
  call void @_ZNSt13move_iteratorIP1PEC2ES1_(%"class.std::move_iterator"* %62, %struct.P* %64)
  %65 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %62, i32 0, i32 0
  %66 = load %struct.P*, %struct.P** %65, align 8
  store i32 -1778320411, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt18uninitialized_copyISt13move_iteratorIP1PES2_ET0_T_S5_S4_(%struct.P*, %struct.P*, %struct.P*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.P*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.P* %0, %struct.P** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.P* %1, %struct.P** %11, align 8
  store %struct.P* %2, %struct.P** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %struct.P*, %struct.P** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %struct.P*, %struct.P** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.P*, %struct.P** %19, align 8
  %21 = call %struct.P* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP1PES4_EET0_T_S7_S6_(%struct.P* %18, %struct.P* %20, %struct.P* %16)
  ret %struct.P* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP1PES4_EET0_T_S7_S6_(%struct.P*, %struct.P*, %struct.P*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.P*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.P* %0, %struct.P** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.P* %1, %struct.P** %10, align 8
  store %struct.P* %2, %struct.P** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %struct.P*, %struct.P** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load %struct.P*, %struct.P** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.P*, %struct.P** %18, align 8
  %20 = call %struct.P* @_ZSt4copyISt13move_iteratorIP1PES2_ET0_T_S5_S4_(%struct.P* %17, %struct.P* %19, %struct.P* %15)
  ret %struct.P* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt4copyISt13move_iteratorIP1PES2_ET0_T_S5_S4_(%struct.P*, %struct.P*, %struct.P*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.P*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.P* %0, %struct.P** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.P* %1, %struct.P** %10, align 8
  store %struct.P* %2, %struct.P** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load %struct.P*, %struct.P** %13, align 8
  %15 = call %struct.P* @_ZSt12__miter_baseISt13move_iteratorIP1PEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.P* %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.P*, %struct.P** %18, align 8
  %20 = call %struct.P* @_ZSt12__miter_baseISt13move_iteratorIP1PEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.P* %19)
  %21 = load %struct.P*, %struct.P** %6, align 8
  %22 = call %struct.P* @_ZSt14__copy_move_a2ILb1EP1PS1_ET1_T0_S3_S2_(%struct.P* %15, %struct.P* %20, %struct.P* %21)
  ret %struct.P* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt14__copy_move_a2ILb1EP1PS1_ET1_T0_S3_S2_(%struct.P*, %struct.P*, %struct.P*) #0 comdat {
  %4 = alloca %struct.P*, align 8
  %5 = alloca %struct.P*, align 8
  %6 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %4, align 8
  store %struct.P* %1, %struct.P** %5, align 8
  store %struct.P* %2, %struct.P** %6, align 8
  %7 = load %struct.P*, %struct.P** %4, align 8
  %8 = call %struct.P* @_ZSt12__niter_baseIP1PENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.P* %7)
  %9 = load %struct.P*, %struct.P** %5, align 8
  %10 = call %struct.P* @_ZSt12__niter_baseIP1PENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.P* %9)
  %11 = load %struct.P*, %struct.P** %6, align 8
  %12 = call %struct.P* @_ZSt12__niter_baseIP1PENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.P* %11)
  %13 = call %struct.P* @_ZSt13__copy_move_aILb1EP1PS1_ET1_T0_S3_S2_(%struct.P* %8, %struct.P* %10, %struct.P* %12)
  ret %struct.P* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt12__miter_baseISt13move_iteratorIP1PEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.P*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::move_iterator", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store %struct.P* %0, %struct.P** %4, align 8
  %5 = bitcast %"class.std::move_iterator"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %8 = load %struct.P*, %struct.P** %7, align 8
  %9 = call %struct.P* @_ZNSt10_Iter_baseISt13move_iteratorIP1PELb1EE7_S_baseES3_(%struct.P* %8)
  ret %struct.P* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt13__copy_move_aILb1EP1PS1_ET1_T0_S3_S2_(%struct.P*, %struct.P*, %struct.P*) #0 comdat {
  %4 = alloca %struct.P*, align 8
  %5 = alloca %struct.P*, align 8
  %6 = alloca %struct.P*, align 8
  %7 = alloca i8, align 1
  store %struct.P* %0, %struct.P** %4, align 8
  store %struct.P* %1, %struct.P** %5, align 8
  store %struct.P* %2, %struct.P** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.P*, %struct.P** %4, align 8
  %9 = load %struct.P*, %struct.P** %5, align 8
  %10 = load %struct.P*, %struct.P** %6, align 8
  %11 = call %struct.P* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI1PEEPT_PKS4_S7_S5_(%struct.P* %8, %struct.P* %9, %struct.P* %10)
  ret %struct.P* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZSt12__niter_baseIP1PENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.P*) #0 comdat {
  %2 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %2, align 8
  %3 = load %struct.P*, %struct.P** %2, align 8
  %4 = call %struct.P* @_ZNSt10_Iter_baseIP1PLb0EE7_S_baseES1_(%struct.P* %3)
  ret %struct.P* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.P* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI1PEEPT_PKS4_S7_S5_(%struct.P*, %struct.P*, %struct.P*) #4 comdat align 2 {
  %4 = alloca %struct.P*
  %5 = alloca i64
  %6 = alloca %struct.P*, align 8
  %7 = alloca %struct.P*, align 8
  %8 = alloca %struct.P*, align 8
  %9 = alloca i64, align 8
  store %struct.P* %0, %struct.P** %6, align 8
  store %struct.P* %1, %struct.P** %7, align 8
  store %struct.P* %2, %struct.P** %8, align 8
  %10 = load %struct.P*, %struct.P** %7, align 8
  %11 = load %struct.P*, %struct.P** %6, align 8
  %12 = ptrtoint %struct.P* %10 to i64
  %13 = ptrtoint %struct.P* %11 to i64
  %14 = add i64 %12, 1310362714194294381
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 1310362714194294381
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 1518847292, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %87
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1518847292, label %24
    i32 -1905305549, label %28
    i32 1397477223, label %35
    i32 1823390298, label %50
    i32 -84194567, label %81
    i32 976448633, label %83
  ]

; <label>:23:                                     ; preds = %21
  br label %87

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 -1905305549, i32 1397477223
  store i32 %27, i32* %20
  br label %87

; <label>:28:                                     ; preds = %21
  %29 = load %struct.P*, %struct.P** %8, align 8
  %30 = bitcast %struct.P* %29 to i8*
  %31 = load %struct.P*, %struct.P** %6, align 8
  %32 = bitcast %struct.P* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 16, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 1397477223, i32* %20
  br label %87

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.161
  %37 = load i32, i32* @y.162
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1823390298, i32 976448633
  store i32 %49, i32* %20
  br label %87

; <label>:50:                                     ; preds = %21
  %51 = load %struct.P*, %struct.P** %8, align 8
  %52 = load i64, i64* %9, align 8
  %53 = getelementptr inbounds %struct.P, %struct.P* %51, i64 %52
  store %struct.P* %53, %struct.P** %4
  %54 = load i32, i32* @x.161
  %55 = load i32, i32* @y.162
  %56 = sub i32 %54, 419780637
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 419780637
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -84194567, i32 976448633
  store i32 %80, i32* %20
  br label %87

; <label>:81:                                     ; preds = %21
  %82 = load volatile %struct.P*, %struct.P** %4
  ret %struct.P* %82

; <label>:83:                                     ; preds = %21
  %84 = load %struct.P*, %struct.P** %8, align 8
  %85 = load i64, i64* %9, align 8
  %86 = getelementptr inbounds %struct.P, %struct.P* %84, i64 %85
  store i32 1823390298, i32* %20
  br label %87

; <label>:87:                                     ; preds = %83, %50, %35, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.P* @_ZNSt10_Iter_baseIP1PLb0EE7_S_baseES1_(%struct.P*) #4 comdat align 2 {
  %2 = alloca %struct.P*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.163
  %6 = load i32, i32* @y.164
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -552816858, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -552816858, label %18
    i32 -1247307860, label %38
    i32 -870564757, label %68
    i32 1986515431, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1247307860, i32 1986515431
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %39, align 8
  %40 = load %struct.P*, %struct.P** %39, align 8
  store %struct.P* %40, %struct.P** %2
  %41 = load i32, i32* @x.163
  %42 = load i32, i32* @y.164
  %43 = add i32 %41, 120253495
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 120253495
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -870564757, i32 1986515431
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %struct.P*, %struct.P** %2
  ret %struct.P* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %struct.P*, align 8
  store %struct.P* %0, %struct.P** %71, align 8
  %72 = load %struct.P*, %struct.P** %71, align 8
  store i32 -1247307860, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.P* @_ZNSt10_Iter_baseISt13move_iteratorIP1PELb1EE7_S_baseES3_(%struct.P*) #0 comdat align 2 {
  %2 = alloca %struct.P*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.165
  %6 = load i32, i32* @y.166
  %7 = sub i32 %5, -471872733
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -471872733
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2027501348, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2027501348, label %19
    i32 -1012284332, label %27
    i32 -1044915706, label %58
    i32 -1006380893, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1012284332, i32 -1006380893
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator", align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  store %struct.P* %0, %struct.P** %29, align 8
  %30 = call %struct.P* @_ZNKSt13move_iteratorIP1PE4baseEv(%"class.std::move_iterator"* %28)
  store %struct.P* %30, %struct.P** %2
  %31 = load i32, i32* @x.165
  %32 = load i32, i32* @y.166
  %33 = add i32 %31, -762812454
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -762812454
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1044915706, i32 -1006380893
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %struct.P*, %struct.P** %2
  ret %struct.P* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator", align 8
  %62 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %61, i32 0, i32 0
  store %struct.P* %0, %struct.P** %62, align 8
  %63 = call %struct.P* @_ZNKSt13move_iteratorIP1PE4baseEv(%"class.std::move_iterator"* %61)
  store i32 -1012284332, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.P* @_ZNKSt13move_iteratorIP1PE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %struct.P*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.167
  %6 = load i32, i32* @y.168
  %7 = add i32 %5, -672720384
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -672720384
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1430046416, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1430046416, label %19
    i32 1979347557, label %27
    i32 -225410024, label %46
    i32 565669393, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1979347557, i32 565669393
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  %31 = load %struct.P*, %struct.P** %30, align 8
  store %struct.P* %31, %struct.P** %2
  %32 = load i32, i32* @x.167
  %33 = load i32, i32* @y.168
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -225410024, i32 565669393
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %struct.P*, %struct.P** %2
  ret %struct.P* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %49, align 8
  %50 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %50, i32 0, i32 0
  %52 = load %struct.P*, %struct.P** %51, align 8
  store i32 1979347557, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIP1PEC2ES1_(%"class.std::move_iterator"*, %struct.P*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %struct.P*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %struct.P* %1, %struct.P** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %struct.P*, %struct.P** %4, align 8
  store %struct.P* %7, %struct.P** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI1PE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator"*, %struct.P*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %struct.P*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %struct.P* %1, %struct.P** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %struct.P*, %struct.P** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.173
  %5 = load i32, i32* @y.174
  %6 = sub i32 %4, -767140263
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -767140263
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -904637457, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -904637457, label %18
    i32 451920413, label %38
    i32 -1963586864, label %69
    i32 -1322390720, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 451920413, i32 -1322390720
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %39, align 8
  %40 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.173
  %43 = load i32, i32* @y.174
  %44 = sub i32 %42, -851908519
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -851908519
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1963586864, i32 -1322390720
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %71, align 8
  %72 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %72, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %73)
  store i32 451920413, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*) unnamed_addr #4 align 2 {
  %2 = alloca %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %0, %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*, %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIZ4mainE1TEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %3, i32 0, i32 0
  store %struct.T* null, %struct.T** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %3, i32 0, i32 1
  store %struct.T* null, %struct.T** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %3, i32 0, i32 2
  store %struct.T* null, %struct.T** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE1TEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZSt8_DestroyIPZ4mainE1TS0_EvT_S2_RSaIT0_E(%struct.T*, %struct.T*, %"class.std::allocator.2"* dereferenceable(1)) #0 {
  %4 = alloca %struct.T*, align 8
  %5 = alloca %struct.T*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %struct.T* %0, %struct.T** %4, align 8
  store %struct.T* %1, %struct.T** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %struct.T*, %struct.T** %4, align 8
  %8 = load %struct.T*, %struct.T** %5, align 8
  call void @_ZSt8_DestroyIPZ4mainE1TEvT_S2_(%struct.T* %7, %struct.T* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.185
  %3 = load i32, i32* @y.186
  %4 = add i32 %2, -748475015
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -748475015
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %143

; <label>:16:                                     ; preds = %1, %143
  %17 = alloca %"struct.std::_Vector_base.1"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %17, align 8
  %20 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %struct.T*, %struct.T** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %struct.T*, %struct.T** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %struct.T*, %struct.T** %28, align 8
  %30 = ptrtoint %struct.T* %26 to i64
  %31 = ptrtoint %struct.T* %29 to i64
  %32 = sub i64 %30, 302358128149502078
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 302358128149502078
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 16
  %37 = load i32, i32* @x.185
  %38 = load i32, i32* @y.186
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %143

; <label>:50:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"* %20, %struct.T* %23, i64 %36)
          to label %51 unwind label %94

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* @x.185
  %53 = load i32, i32* @y.186
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %202

; <label>:77:                                     ; preds = %51, %202
  %78 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %78) #3
  %79 = load i32, i32* @x.185
  %80 = load i32, i32* @y.186
  %81 = add i32 %79, -1828738593
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, -1828738593
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %202

; <label>:93:                                     ; preds = %77
  ret void

; <label>:94:                                     ; preds = %50
  %95 = load i32, i32* @x.185
  %96 = load i32, i32* @y.186
  %97 = sub i32 %95, 1216411393
  %98 = sub i32 %97, 1
  %99 = add i32 %98, 1216411393
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %204

; <label>:121:                                    ; preds = %94, %204
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %18, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %19, align 4
  %125 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %125) #3
  %126 = load i32, i32* @x.185
  %127 = load i32, i32* @y.186
  %128 = sub i32 %126, 86097714
  %129 = sub i32 %128, 1
  %130 = add i32 %129, 86097714
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %204

; <label>:140:                                    ; preds = %121
  br label %141

; <label>:141:                                    ; preds = %140
  %142 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %142) #12
  unreachable

; <label>:143:                                    ; preds = %16, %1
  %144 = alloca %"struct.std::_Vector_base.1"*, align 8
  %145 = alloca i8*
  %146 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %144, align 8
  %147 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %144, align 8
  %148 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %148, i32 0, i32 0
  %150 = load %struct.T*, %struct.T** %149, align 8
  %151 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %147, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %151, i32 0, i32 2
  %153 = load %struct.T*, %struct.T** %152, align 8
  %154 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %147, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %154, i32 0, i32 0
  %156 = load %struct.T*, %struct.T** %155, align 8
  %157 = ptrtoint %struct.T* %153 to i64
  %158 = ptrtoint %struct.T* %156 to i64
  %159 = sub i64 0, -2946032356799290066
  %160 = sub i64 %159, %157
  %161 = add i64 %160, -2946032356799290066
  %162 = sub i64 0, %157
  %163 = add i64 %161, 8468150006106485888
  %164 = add i64 %163, %158
  %165 = sub i64 %164, 8468150006106485888
  %166 = add i64 %161, %158
  %167 = shl i64 %157, %158
  %168 = add i64 %157, 7154087988930295120
  %169 = sub i64 %168, %158
  %170 = sub i64 %169, 7154087988930295120
  %171 = sub i64 %157, %158
  %172 = mul i64 %170, %158
  %173 = sub i64 %157, -3426086006709939636
  %174 = sub i64 %173, %158
  %175 = add i64 %174, -3426086006709939636
  %176 = sub i64 %157, %158
  %177 = mul i64 %175, %158
  %178 = sub i64 %157, -2698076839432464122
  %179 = sub i64 %178, %158
  %180 = add i64 %179, -2698076839432464122
  %181 = sub i64 %157, %158
  %182 = mul i64 %180, %158
  %183 = sub i64 0, %157
  %184 = add i64 0, %183
  %185 = sub i64 0, %157
  %186 = sub i64 0, %184
  %187 = sub i64 0, %158
  %188 = add i64 %186, %187
  %189 = sub i64 0, %188
  %190 = add i64 %184, %158
  %191 = sub i64 0, %158
  %192 = add i64 %157, %191
  %193 = sub i64 %157, %158
  %194 = sub i64 0, %192
  %195 = add i64 0, %194
  %196 = sub i64 0, %192
  %197 = sub i64 %195, -718906911178710799
  %198 = add i64 %197, 16
  %199 = add i64 %198, -718906911178710799
  %200 = add i64 %195, 16
  %201 = sdiv exact i64 %192, 16
  br label %16

; <label>:202:                                    ; preds = %77, %51
  %203 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %203) #3
  br label %77

; <label>:204:                                    ; preds = %121, %94
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  store i8* %206, i8** %18, align 8
  %207 = extractvalue { i8*, i32 } %205, 1
  store i32 %207, i32* %19, align 4
  %208 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %208) #3
  br label %121
}

; Function Attrs: noinline uwtable
define internal void @_ZSt8_DestroyIPZ4mainE1TEvT_S2_(%struct.T*, %struct.T*) #0 {
  %3 = alloca %struct.T*, align 8
  %4 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %3, align 8
  store %struct.T* %1, %struct.T** %4, align 8
  %5 = load %struct.T*, %struct.T** %3, align 8
  %6 = load %struct.T*, %struct.T** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPZ4mainE1TEEvT_S4_(%struct.T* %5, %struct.T* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Destroy_auxILb1EE9__destroyIPZ4mainE1TEEvT_S4_(%struct.T*, %struct.T*) #4 align 2 {
  %3 = alloca %struct.T*, align 8
  %4 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %3, align 8
  store %struct.T* %1, %struct.T** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"*, %struct.T*, i64) #0 align 2 {
  %4 = alloca %struct.T*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %struct.T*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %struct.T* %1, %struct.T** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %struct.T*, %struct.T** %7, align 8
  store %struct.T* %10, %struct.T** %4
  %11 = alloca i32
  store i32 325028530, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %88
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 325028530, label %15
    i32 955259278, label %19
    i32 -771049822, label %47
    i32 -1853642660, label %80
    i32 -2057770386, label %81
    i32 730984166, label %82
  ]

; <label>:14:                                     ; preds = %12
  br label %88

; <label>:15:                                     ; preds = %12
  %16 = load volatile %struct.T*, %struct.T** %4
  %17 = icmp ne %struct.T* %16, null
  %18 = select i1 %17, i32 955259278, i32 -2057770386
  store i32 %18, i32* %11
  br label %88

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.191
  %21 = load i32, i32* @y.192
  %22 = add i32 %20, -1376771891
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1376771891
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -771049822, i32 730984166
  store i32 %46, i32* %11
  br label %88

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %49 to %"class.std::allocator.2"*
  %51 = load %struct.T*, %struct.T** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIZ4mainE1TEE10deallocateERS1_PS0_m(%"class.std::allocator.2"* dereferenceable(1) %50, %struct.T* %51, i64 %52)
  %53 = load i32, i32* @x.191
  %54 = load i32, i32* @y.192
  %55 = sub i32 %53, 1312525440
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 1312525440
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1853642660, i32 730984166
  store i32 %79, i32* %11
  br label %88

; <label>:80:                                     ; preds = %12
  store i32 -2057770386, i32* %11
  br label %88

; <label>:81:                                     ; preds = %12
  ret void

; <label>:82:                                     ; preds = %12
  %83 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %84 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %84 to %"class.std::allocator.2"*
  %86 = load %struct.T*, %struct.T** %7, align 8
  %87 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIZ4mainE1TEE10deallocateERS1_PS0_m(%"class.std::allocator.2"* dereferenceable(1) %85, %struct.T* %86, i64 %87)
  store i32 -771049822, i32* %11
  br label %88

; <label>:88:                                     ; preds = %82, %80, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.193
  %5 = load i32, i32* @y.194
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1183013794, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %72
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1183013794, label %17
    i32 -1502115835, label %37
    i32 -26999211, label %67
    i32 1757436019, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %72

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1502115835, i32 1757436019
  store i32 %36, i32* %13
  br label %72

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %0, %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*, %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %39 to %"class.std::allocator.2"*
  call void @_ZNSaIZ4mainE1TED2Ev(%"class.std::allocator.2"* %40) #3
  %41 = load i32, i32* @x.193
  %42 = load i32, i32* @y.194
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -26999211, i32 1757436019
  store i32 %66, i32* %13
  br label %72

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %0, %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"** %69, align 8
  %70 = load %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"*, %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"** %69, align 8
  %71 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %70 to %"class.std::allocator.2"*
  call void @_ZNSaIZ4mainE1TED2Ev(%"class.std::allocator.2"* %71) #3
  store i32 -1502115835, i32* %13
  br label %72

; <label>:72:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIZ4mainE1TEE10deallocateERS1_PS0_m(%"class.std::allocator.2"* dereferenceable(1), %struct.T*, i64) #0 align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %struct.T*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %struct.T* %1, %struct.T** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %struct.T*, %struct.T** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.3"* %8, %struct.T* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.3"*, %struct.T*, i64) #4 align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %struct.T*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %struct.T* %1, %struct.T** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %struct.T*, %struct.T** %5, align 8
  %9 = bitcast %struct.T* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE1TED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.199
  %5 = load i32, i32* @y.200
  %6 = sub i32 %4, 256968143
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 256968143
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 206405210, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 206405210, label %18
    i32 1917299756, label %26
    i32 1834508442, label %44
    i32 -1274480577, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1917299756, i32 -1274480577
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %27, align 8
  %28 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %27, align 8
  %29 = bitcast %"class.std::allocator.2"* %28 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TED2Ev(%"class.__gnu_cxx::new_allocator.3"* %29) #3
  %30 = load i32, i32* @x.199
  %31 = load i32, i32* @y.200
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1834508442, i32 -1274480577
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %46, align 8
  %47 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %46, align 8
  %48 = bitcast %"class.std::allocator.2"* %47 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TED2Ev(%"class.__gnu_cxx::new_allocator.3"* %48) #3
  store i32 1917299756, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt6vectorIZ4mainE1TSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector.0"*, %struct.T* dereferenceable(16)) #0 align 2 {
  %3 = alloca %struct.T*
  %4 = alloca %struct.T*
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca %struct.T*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store %struct.T* %1, %struct.T** %7, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %5
  %9 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %10 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.T*, %struct.T** %12, align 8
  store %struct.T* %13, %struct.T** %4
  %14 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %struct.T*, %struct.T** %17, align 8
  store %struct.T* %18, %struct.T** %3
  %19 = alloca i32
  store i32 664758456, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %125
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 664758456, label %23
    i32 1693692723, label %28
    i32 802421041, label %56
    i32 -1925229446, label %101
    i32 -548018828, label %102
    i32 -1786733349, label %106
    i32 -1477474115, label %107
  ]

; <label>:22:                                     ; preds = %20
  br label %125

; <label>:23:                                     ; preds = %20
  %24 = load volatile %struct.T*, %struct.T** %4
  %25 = load volatile %struct.T*, %struct.T** %3
  %26 = icmp ne %struct.T* %24, %25
  %27 = select i1 %26, i32 1693692723, i32 -548018828
  store i32 %27, i32* %19
  br label %125

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.203
  %30 = load i32, i32* @y.204
  %31 = add i32 %29, 1401491458
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1401491458
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 802421041, i32 -1477474115
  store i32 %55, i32* %19
  br label %125

; <label>:56:                                     ; preds = %20
  %57 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %58 = bitcast %"class.std::vector.0"* %57 to %"struct.std::_Vector_base.1"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %59 to %"class.std::allocator.2"*
  %61 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %62 = bitcast %"class.std::vector.0"* %61 to %"struct.std::_Vector_base.1"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %63, i32 0, i32 1
  %65 = load %struct.T*, %struct.T** %64, align 8
  %66 = load %struct.T*, %struct.T** %7, align 8
  %67 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %66) #3
  call void @_ZNSt16allocator_traitsISaIZ4mainE1TEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %60, %struct.T* %65, %struct.T* dereferenceable(16) %67)
  %68 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %69 = bitcast %"class.std::vector.0"* %68 to %"struct.std::_Vector_base.1"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %70, i32 0, i32 1
  %72 = load %struct.T*, %struct.T** %71, align 8
  %73 = getelementptr inbounds %struct.T, %struct.T* %72, i32 1
  store %struct.T* %73, %struct.T** %71, align 8
  %74 = load i32, i32* @x.203
  %75 = load i32, i32* @y.204
  %76 = sub i32 %74, -1067755984
  %77 = sub i32 %76, 1
  %78 = add i32 %77, -1067755984
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  %100 = select i1 %98, i32 -1925229446, i32 -1477474115
  store i32 %100, i32* %19
  br label %125

; <label>:101:                                    ; preds = %20
  store i32 -1786733349, i32* %19
  br label %125

; <label>:102:                                    ; preds = %20
  %103 = load %struct.T*, %struct.T** %7, align 8
  %104 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %103) #3
  %105 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  call void @_ZNSt6vectorIZ4mainE1TSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector.0"* %105, %struct.T* dereferenceable(16) %104)
  store i32 -1786733349, i32* %19
  br label %125

; <label>:106:                                    ; preds = %20
  ret void

; <label>:107:                                    ; preds = %20
  %108 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %109 = bitcast %"class.std::vector.0"* %108 to %"struct.std::_Vector_base.1"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %109, i32 0, i32 0
  %111 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %110 to %"class.std::allocator.2"*
  %112 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %113 = bitcast %"class.std::vector.0"* %112 to %"struct.std::_Vector_base.1"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %113, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %114, i32 0, i32 1
  %116 = load %struct.T*, %struct.T** %115, align 8
  %117 = load %struct.T*, %struct.T** %7, align 8
  %118 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %117) #3
  call void @_ZNSt16allocator_traitsISaIZ4mainE1TEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %111, %struct.T* %116, %struct.T* dereferenceable(16) %118)
  %119 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %120 = bitcast %"class.std::vector.0"* %119 to %"struct.std::_Vector_base.1"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %121, i32 0, i32 1
  %123 = load %struct.T*, %struct.T** %122, align 8
  %124 = getelementptr inbounds %struct.T, %struct.T* %123, i32 1
  store %struct.T* %124, %struct.T** %122, align 8
  store i32 802421041, i32* %19
  br label %125

; <label>:125:                                    ; preds = %107, %102, %101, %56, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16)) #4 {
  %2 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %2, align 8
  %3 = load %struct.T*, %struct.T** %2, align 8
  ret %struct.T* %3
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIZ4mainE1TEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), %struct.T*, %struct.T* dereferenceable(16)) #0 align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %struct.T*, align 8
  %6 = alloca %struct.T*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %struct.T* %1, %struct.T** %5, align 8
  store %struct.T* %2, %struct.T** %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %struct.T*, %struct.T** %5, align 8
  %10 = load %struct.T*, %struct.T** %6, align 8
  %11 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %8, %struct.T* %9, %struct.T* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16)) #4 {
  %2 = alloca %struct.T*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.209
  %6 = load i32, i32* @y.210
  %7 = add i32 %5, 936441953
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 936441953
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1183623890, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1183623890, label %19
    i32 -776851172, label %27
    i32 32970519, label %44
    i32 -2022779426, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -776851172, i32 -2022779426
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %28, align 8
  %29 = load %struct.T*, %struct.T** %28, align 8
  store %struct.T* %29, %struct.T** %2
  %30 = load i32, i32* @x.209
  %31 = load i32, i32* @y.210
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 32970519, i32 -2022779426
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %struct.T*, %struct.T** %2
  ret %struct.T* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %47, align 8
  %48 = load %struct.T*, %struct.T** %47, align 8
  store i32 -776851172, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt6vectorIZ4mainE1TSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector.0"*, %struct.T* dereferenceable(16)) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.211
  %4 = load i32, i32* @y.212
  %5 = add i32 %3, 520606973
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 520606973
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %311

; <label>:17:                                     ; preds = %2, %311
  %18 = alloca %"class.std::vector.0"*, align 8
  %19 = alloca %struct.T*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %struct.T*, align 8
  %22 = alloca %struct.T*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %18, align 8
  store %struct.T* %1, %struct.T** %19, align 8
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %26 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %25, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %26, i64* %20, align 8
  %27 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %28 = load i64, i64* %20, align 8
  %29 = call %struct.T* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %27, i64 %28)
  store %struct.T* %29, %struct.T** %21, align 8
  %30 = load %struct.T*, %struct.T** %21, align 8
  store %struct.T* %30, %struct.T** %22, align 8
  %31 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %32 to %"class.std::allocator.2"*
  %34 = load %struct.T*, %struct.T** %21, align 8
  %35 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %25) #3
  %36 = getelementptr inbounds %struct.T, %struct.T* %34, i64 %35
  %37 = load %struct.T*, %struct.T** %19, align 8
  %38 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %37) #3
  %39 = load i32, i32* @x.211
  %40 = load i32, i32* @y.212
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %311

; <label>:52:                                     ; preds = %17
  invoke void @_ZNSt16allocator_traitsISaIZ4mainE1TEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %33, %struct.T* %36, %struct.T* dereferenceable(16) %38)
          to label %53 unwind label %69

; <label>:53:                                     ; preds = %52
  store %struct.T* null, %struct.T** %22, align 8
  %54 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %55, i32 0, i32 0
  %57 = load %struct.T*, %struct.T** %56, align 8
  %58 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %59, i32 0, i32 1
  %61 = load %struct.T*, %struct.T** %60, align 8
  %62 = load %struct.T*, %struct.T** %21, align 8
  %63 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %64 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %63) #3
  %65 = invoke %struct.T* @_ZSt34__uninitialized_move_if_noexcept_aIPZ4mainE1TS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.T* %57, %struct.T* %61, %struct.T* %62, %"class.std::allocator.2"* dereferenceable(1) %64)
          to label %66 unwind label %69

; <label>:66:                                     ; preds = %53
  store %struct.T* %65, %struct.T** %22, align 8
  %67 = load %struct.T*, %struct.T** %22, align 8
  %68 = getelementptr inbounds %struct.T, %struct.T* %67, i32 1
  store %struct.T* %68, %struct.T** %22, align 8
  br label %216

; <label>:69:                                     ; preds = %53, %52
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %23, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %24, align 4
  br label %73

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %23, align 8
  %75 = call i8* @__cxa_begin_catch(i8* %74) #3
  %76 = load %struct.T*, %struct.T** %22, align 8
  %77 = icmp ne %struct.T* %76, null
  br i1 %77, label %162, label %78

; <label>:78:                                     ; preds = %73
  %79 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %80 to %"class.std::allocator.2"*
  %82 = load %struct.T*, %struct.T** %21, align 8
  %83 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %25) #3
  %84 = getelementptr inbounds %struct.T, %struct.T* %82, i64 %83
  invoke void @_ZNSt16allocator_traitsISaIZ4mainE1TEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.2"* dereferenceable(1) %81, %struct.T* %84)
          to label %85 unwind label %116

; <label>:85:                                     ; preds = %78
  %86 = load i32, i32* @x.211
  %87 = load i32, i32* @y.212
  %88 = sub i32 %86, 1234251695
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 1234251695
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %333

; <label>:100:                                    ; preds = %85, %333
  %101 = load i32, i32* @x.211
  %102 = load i32, i32* @y.212
  %103 = sub i32 %101, 1328452464
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 1328452464
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %333

; <label>:115:                                    ; preds = %100
  br label %210

; <label>:116:                                    ; preds = %214, %210, %208, %78
  %117 = load i32, i32* @x.211
  %118 = load i32, i32* @y.212
  %119 = add i32 %117, 589286776
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, 589286776
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %334

; <label>:143:                                    ; preds = %116, %334
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %23, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %24, align 4
  %147 = load i32, i32* @x.211
  %148 = load i32, i32* @y.212
  %149 = sub i32 %147, -805672996
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -805672996
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %334

; <label>:161:                                    ; preds = %143
  invoke void @__cxa_end_catch()
          to label %215 unwind label %266

; <label>:162:                                    ; preds = %73
  %163 = load i32, i32* @x.211
  %164 = load i32, i32* @y.212
  %165 = add i32 %163, 641104972
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, 641104972
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %338

; <label>:177:                                    ; preds = %162, %338
  %178 = load %struct.T*, %struct.T** %21, align 8
  %179 = load %struct.T*, %struct.T** %22, align 8
  %180 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %181 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %180) #3
  %182 = load i32, i32* @x.211
  %183 = load i32, i32* @y.212
  %184 = sub i32 %182, -1408165055
  %185 = sub i32 %184, 1
  %186 = add i32 %185, -1408165055
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 true, true
  %195 = and i1 %192, true
  %196 = and i1 %190, %194
  %197 = and i1 %193, true
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 true, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %338

; <label>:208:                                    ; preds = %177
  invoke void @_ZSt8_DestroyIPZ4mainE1TS0_EvT_S2_RSaIT0_E(%struct.T* %178, %struct.T* %179, %"class.std::allocator.2"* dereferenceable(1) %181)
          to label %209 unwind label %116

; <label>:209:                                    ; preds = %208
  br label %210

; <label>:210:                                    ; preds = %209, %115
  %211 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %212 = load %struct.T*, %struct.T** %21, align 8
  %213 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"* %211, %struct.T* %212, i64 %213)
          to label %214 unwind label %116

; <label>:214:                                    ; preds = %210
  invoke void @__cxa_rethrow() #13
          to label %310 unwind label %116

; <label>:215:                                    ; preds = %161
  br label %261

; <label>:216:                                    ; preds = %66
  %217 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %218, i32 0, i32 0
  %220 = load %struct.T*, %struct.T** %219, align 8
  %221 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %222, i32 0, i32 1
  %224 = load %struct.T*, %struct.T** %223, align 8
  %225 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %226 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %225) #3
  call void @_ZSt8_DestroyIPZ4mainE1TS0_EvT_S2_RSaIT0_E(%struct.T* %220, %struct.T* %224, %"class.std::allocator.2"* dereferenceable(1) %226)
  %227 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %228 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %229, i32 0, i32 0
  %231 = load %struct.T*, %struct.T** %230, align 8
  %232 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %233, i32 0, i32 2
  %235 = load %struct.T*, %struct.T** %234, align 8
  %236 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %237 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %237, i32 0, i32 0
  %239 = load %struct.T*, %struct.T** %238, align 8
  %240 = ptrtoint %struct.T* %235 to i64
  %241 = ptrtoint %struct.T* %239 to i64
  %242 = add i64 %240, -4030616533578605605
  %243 = sub i64 %242, %241
  %244 = sub i64 %243, -4030616533578605605
  %245 = sub i64 %240, %241
  %246 = sdiv exact i64 %244, 16
  call void @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.1"* %227, %struct.T* %231, i64 %246)
  %247 = load %struct.T*, %struct.T** %21, align 8
  %248 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %249 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %248, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %249, i32 0, i32 0
  store %struct.T* %247, %struct.T** %250, align 8
  %251 = load %struct.T*, %struct.T** %22, align 8
  %252 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %253, i32 0, i32 1
  store %struct.T* %251, %struct.T** %254, align 8
  %255 = load %struct.T*, %struct.T** %21, align 8
  %256 = load i64, i64* %20, align 8
  %257 = getelementptr inbounds %struct.T, %struct.T* %255, i64 %256
  %258 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %259, i32 0, i32 2
  store %struct.T* %257, %struct.T** %260, align 8
  ret void

; <label>:261:                                    ; preds = %215
  %262 = load i8*, i8** %23, align 8
  %263 = load i32, i32* %24, align 4
  %264 = insertvalue { i8*, i32 } undef, i8* %262, 0
  %265 = insertvalue { i8*, i32 } %264, i32 %263, 1
  resume { i8*, i32 } %265

; <label>:266:                                    ; preds = %161
  %267 = load i32, i32* @x.211
  %268 = load i32, i32* @y.212
  %269 = sub i32 0, 1
  %270 = add i32 %267, %269
  %271 = sub i32 %267, 1
  %272 = mul i32 %267, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %268, 10
  %276 = and i1 %274, %275
  %277 = xor i1 %274, %275
  %278 = or i1 %276, %277
  %279 = or i1 %274, %275
  br i1 %278, label %280, label %343

; <label>:280:                                    ; preds = %266, %343
  %281 = landingpad { i8*, i32 }
          catch i8* null
  %282 = extractvalue { i8*, i32 } %281, 0
  call void @__clang_call_terminate(i8* %282) #12
  %283 = load i32, i32* @x.211
  %284 = load i32, i32* @y.212
  %285 = sub i32 %283, -1377846084
  %286 = sub i32 %285, 1
  %287 = add i32 %286, -1377846084
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = xor i1 %291, true
  %294 = xor i1 %292, true
  %295 = xor i1 false, true
  %296 = and i1 %293, false
  %297 = and i1 %291, %295
  %298 = and i1 %294, false
  %299 = and i1 %292, %295
  %300 = or i1 %296, %297
  %301 = or i1 %298, %299
  %302 = xor i1 %300, %301
  %303 = or i1 %293, %294
  %304 = xor i1 %303, true
  %305 = or i1 false, %295
  %306 = and i1 %304, %305
  %307 = or i1 %302, %306
  %308 = or i1 %291, %292
  br i1 %307, label %309, label %343

; <label>:309:                                    ; preds = %280
  unreachable

; <label>:310:                                    ; preds = %214
  unreachable

; <label>:311:                                    ; preds = %17, %2
  %312 = alloca %"class.std::vector.0"*, align 8
  %313 = alloca %struct.T*, align 8
  %314 = alloca i64, align 8
  %315 = alloca %struct.T*, align 8
  %316 = alloca %struct.T*, align 8
  %317 = alloca i8*
  %318 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %312, align 8
  store %struct.T* %1, %struct.T** %313, align 8
  %319 = load %"class.std::vector.0"*, %"class.std::vector.0"** %312, align 8
  %320 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %319, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %320, i64* %314, align 8
  %321 = bitcast %"class.std::vector.0"* %319 to %"struct.std::_Vector_base.1"*
  %322 = load i64, i64* %314, align 8
  %323 = call %struct.T* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %321, i64 %322)
  store %struct.T* %323, %struct.T** %315, align 8
  %324 = load %struct.T*, %struct.T** %315, align 8
  store %struct.T* %324, %struct.T** %316, align 8
  %325 = bitcast %"class.std::vector.0"* %319 to %"struct.std::_Vector_base.1"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %325, i32 0, i32 0
  %327 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %326 to %"class.std::allocator.2"*
  %328 = load %struct.T*, %struct.T** %315, align 8
  %329 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %319) #3
  %330 = getelementptr inbounds %struct.T, %struct.T* %328, i64 %329
  %331 = load %struct.T*, %struct.T** %313, align 8
  %332 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %331) #3
  br label %17

; <label>:333:                                    ; preds = %100, %85
  br label %100

; <label>:334:                                    ; preds = %143, %116
  %335 = landingpad { i8*, i32 }
          cleanup
  %336 = extractvalue { i8*, i32 } %335, 0
  store i8* %336, i8** %23, align 8
  %337 = extractvalue { i8*, i32 } %335, 1
  store i32 %337, i32* %24, align 4
  br label %143

; <label>:338:                                    ; preds = %177, %162
  %339 = load %struct.T*, %struct.T** %21, align 8
  %340 = load %struct.T*, %struct.T** %22, align 8
  %341 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %342 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %341) #3
  br label %177

; <label>:343:                                    ; preds = %280, %266
  %344 = landingpad { i8*, i32 }
          catch i8* null
  %345 = extractvalue { i8*, i32 } %344, 0
  call void @__clang_call_terminate(i8* %345) #12
  br label %280
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, %struct.T*, %struct.T* dereferenceable(16)) #4 align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.213
  %7 = load i32, i32* @y.214
  %8 = add i32 %6, -214416241
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -214416241
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 925158874, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 925158874, label %20
    i32 715965672, label %28
    i32 1210897573, label %67
    i32 -783524318, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 715965672, i32 -783524318
  store i32 %27, i32* %16
  br label %80

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %30 = alloca %struct.T*, align 8
  %31 = alloca %struct.T*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  store %struct.T* %1, %struct.T** %30, align 8
  store %struct.T* %2, %struct.T** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  %33 = load %struct.T*, %struct.T** %30, align 8
  %34 = bitcast %struct.T* %33 to i8*
  %35 = bitcast i8* %34 to %struct.T*
  %36 = load %struct.T*, %struct.T** %31, align 8
  %37 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %36) #3
  %38 = bitcast %struct.T* %35 to i8*
  %39 = bitcast %struct.T* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = load i32, i32* @x.213
  %41 = load i32, i32* @y.214
  %42 = add i32 %40, 1623550272
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1623550272
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1210897573, i32 -783524318
  store i32 %66, i32* %16
  br label %80

; <label>:67:                                     ; preds = %17
  ret void

; <label>:68:                                     ; preds = %17
  %69 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %70 = alloca %struct.T*, align 8
  %71 = alloca %struct.T*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %69, align 8
  store %struct.T* %1, %struct.T** %70, align 8
  store %struct.T* %2, %struct.T** %71, align 8
  %72 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %69, align 8
  %73 = load %struct.T*, %struct.T** %70, align 8
  %74 = bitcast %struct.T* %73 to i8*
  %75 = bitcast i8* %74 to %struct.T*
  %76 = load %struct.T*, %struct.T** %71, align 8
  %77 = call dereferenceable(16) %struct.T* @_ZSt7forwardIZ4mainE1TEOT_RNSt16remove_referenceIS1_E4typeE(%struct.T* dereferenceable(16) %76) #3
  %78 = bitcast %struct.T* %75 to i8*
  %79 = bitcast %struct.T* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 16, i32 8, i1 false)
  store i32 715965672, i32* %16
  br label %80

; <label>:80:                                     ; preds = %68, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define internal i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.0"*
  %9 = alloca %"class.std::vector.0"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %8
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %16 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %15) #3
  %17 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %18 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %17) #3
  %19 = sub i64 %16, -7864884966754968592
  %20 = sub i64 %19, %18
  %21 = add i64 %20, -7864884966754968592
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -1721075917, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %170
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1721075917, label %29
    i32 1460104417, label %34
    i32 883013281, label %36
    i32 -1853283721, label %52
    i32 -1020939441, label %58
    i32 259272722, label %86
    i32 -1745955959, label %103
    i32 -973760794, label %105
    i32 2081971114, label %107
    i32 760731257, label %136
    i32 1815230994, label %164
    i32 1095496800, label %166
    i32 -280210402, label %169
  ]

; <label>:28:                                     ; preds = %26
  br label %170

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 1460104417, i32 883013281
  store i32 %33, i32* %24
  br label %170

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #13
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %38 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %37) #3
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %40 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %39) #3
  store i64 %40, i64* %13, align 8
  %41 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %38, -1137817571004705352
  %44 = add i64 %43, %42
  %45 = add i64 %44, -1137817571004705352
  %46 = add i64 %38, %42
  store i64 %45, i64* %12, align 8
  %47 = load i64, i64* %12, align 8
  %48 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %49 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE4sizeEv(%"class.std::vector.0"* %48) #3
  %50 = icmp ult i64 %47, %49
  %51 = select i1 %50, i32 -1020939441, i32 -1853283721
  store i32 %51, i32* %24
  br label %170

; <label>:52:                                     ; preds = %26
  %53 = load i64, i64* %12, align 8
  %54 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %55 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %54) #3
  %56 = icmp ugt i64 %53, %55
  %57 = select i1 %56, i32 -1020939441, i32 -973760794
  store i32 %57, i32* %24
  br label %170

; <label>:58:                                     ; preds = %26
  %59 = load i32, i32* @x.215
  %60 = load i32, i32* @y.216
  %61 = sub i32 %59, -762931038
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -762931038
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 259272722, i32 1095496800
  store i32 %85, i32* %24
  br label %170

; <label>:86:                                     ; preds = %26
  %87 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %88 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %87) #3
  store i64 %88, i64* %5
  %89 = load i32, i32* @x.215
  %90 = load i32, i32* @y.216
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 -1745955959, i32 1095496800
  store i32 %102, i32* %24
  br label %170

; <label>:103:                                    ; preds = %26
  store i32 2081971114, i32* %24
  %104 = load volatile i64, i64* %5
  store i64 %104, i64* %25
  br label %170

; <label>:105:                                    ; preds = %26
  %106 = load i64, i64* %12, align 8
  store i32 2081971114, i32* %24
  store i64 %106, i64* %25
  br label %170

; <label>:107:                                    ; preds = %26
  %108 = load i64, i64* %25
  store i64 %108, i64* %4
  %109 = load i32, i32* @x.215
  %110 = load i32, i32* @y.216
  %111 = sub i32 %109, -277117024
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -277117024
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 760731257, i32 -280210402
  store i32 %135, i32* %24
  br label %170

; <label>:136:                                    ; preds = %26
  %137 = load i32, i32* @x.215
  %138 = load i32, i32* @y.216
  %139 = add i32 %137, 286412180
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, 286412180
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 1815230994, i32 -280210402
  store i32 %163, i32* %24
  br label %170

; <label>:164:                                    ; preds = %26
  %165 = load volatile i64, i64* %4
  ret i64 %165

; <label>:166:                                    ; preds = %26
  %167 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %168 = call i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE8max_sizeEv(%"class.std::vector.0"* %167) #3
  store i32 259272722, i32* %24
  br label %170

; <label>:169:                                    ; preds = %26
  store i32 760731257, i32* %24
  br label %170

; <label>:170:                                    ; preds = %169, %166, %136, %107, %105, %103, %86, %58, %52, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZNSt12_Vector_baseIZ4mainE1TSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 align 2 {
  %3 = alloca %struct.T*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %8, %"struct.std::_Vector_base.1"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1180215004, i32* %10
  %11 = alloca %struct.T*
  br label %12

; <label>:12:                                     ; preds = %2, %89
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1180215004, label %15
    i32 1183295345, label %19
    i32 -848836127, label %46
    i32 1922568474, label %78
    i32 168105172, label %80
    i32 -2064835475, label %81
    i32 1251235083, label %83
  ]

; <label>:14:                                     ; preds = %12
  br label %89

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1183295345, i32 168105172
  store i32 %18, i32* %10
  br label %89

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.217
  %21 = load i32, i32* @y.218
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -848836127, i32 1251235083
  store i32 %45, i32* %10
  br label %89

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %48 to %"class.std::allocator.2"*
  %50 = load i64, i64* %7, align 8
  %51 = call %struct.T* @_ZNSt16allocator_traitsISaIZ4mainE1TEE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1) %49, i64 %50)
  store %struct.T* %51, %struct.T** %3
  %52 = load i32, i32* @x.217
  %53 = load i32, i32* @y.218
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1922568474, i32 1251235083
  store i32 %77, i32* %10
  br label %89

; <label>:78:                                     ; preds = %12
  store i32 -2064835475, i32* %10
  %79 = load volatile %struct.T*, %struct.T** %3
  store %struct.T* %79, %struct.T** %11
  br label %89

; <label>:80:                                     ; preds = %12
  store i32 -2064835475, i32* %10
  store %struct.T* null, %struct.T** %11
  br label %89

; <label>:81:                                     ; preds = %12
  %82 = load %struct.T*, %struct.T** %11
  ret %struct.T* %82

; <label>:83:                                     ; preds = %12
  %84 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %85 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %84, i32 0, i32 0
  %86 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %85 to %"class.std::allocator.2"*
  %87 = load i64, i64* %7, align 8
  %88 = call %struct.T* @_ZNSt16allocator_traitsISaIZ4mainE1TEE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1) %86, i64 %87)
  store i32 -848836127, i32* %10
  br label %89

; <label>:89:                                     ; preds = %83, %80, %78, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt34__uninitialized_move_if_noexcept_aIPZ4mainE1TS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.T*, %struct.T*, %struct.T*, %"class.std::allocator.2"* dereferenceable(1)) #0 {
  %5 = alloca %struct.T*, align 8
  %6 = alloca %struct.T*, align 8
  %7 = alloca %struct.T*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.14", align 8
  %10 = alloca %"class.std::move_iterator.14", align 8
  store %struct.T* %0, %struct.T** %5, align 8
  store %struct.T* %1, %struct.T** %6, align 8
  store %struct.T* %2, %struct.T** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %struct.T*, %struct.T** %5, align 8
  %12 = call %struct.T* @_ZSt32__make_move_if_noexcept_iteratorIPZ4mainE1TSt13move_iteratorIS1_EET0_T_(%struct.T* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %9, i32 0, i32 0
  store %struct.T* %12, %struct.T** %13, align 8
  %14 = load %struct.T*, %struct.T** %6, align 8
  %15 = call %struct.T* @_ZSt32__make_move_if_noexcept_iteratorIPZ4mainE1TSt13move_iteratorIS1_EET0_T_(%struct.T* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %10, i32 0, i32 0
  store %struct.T* %15, %struct.T** %16, align 8
  %17 = load %struct.T*, %struct.T** %7, align 8
  %18 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %9, i32 0, i32 0
  %20 = load %struct.T*, %struct.T** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %10, i32 0, i32 0
  %22 = load %struct.T*, %struct.T** %21, align 8
  %23 = call %struct.T* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPZ4mainE1TES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.T* %20, %struct.T* %22, %struct.T* %17, %"class.std::allocator.2"* dereferenceable(1) %18)
  ret %struct.T* %23
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIZ4mainE1TEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.2"* dereferenceable(1), %struct.T*) #0 align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %struct.T*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %struct.T* %1, %struct.T** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %struct.T*, %struct.T** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, %struct.T* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNKSt6vectorIZ4mainE1TSaIS0_EE8max_sizeEv(%"class.std::vector.0"*) #4 align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.223
  %6 = load i32, i32* @y.224
  %7 = add i32 %5, -61296681
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -61296681
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -553757432, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -553757432, label %19
    i32 -664119472, label %39
    i32 -123420508, label %71
    i32 1825413344, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -664119472, i32 1825413344
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %43 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaIZ4mainE1TEE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.223
  %46 = load i32, i32* @y.224
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -123420508, i32 1825413344
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %74, align 8
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %74, align 8
  %76 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %77 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %76) #3
  %78 = call i64 @_ZNSt16allocator_traitsISaIZ4mainE1TEE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1) %77) #3
  store i32 -664119472, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNSt16allocator_traitsISaIZ4mainE1TEE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1)) #4 align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE1TE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIZ4mainE1TSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.227
  %6 = load i32, i32* @y.228
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -486095598, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -486095598, label %18
    i32 -381246601, label %38
    i32 -361093303, label %58
    i32 2082335575, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -381246601, i32 2082335575
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %39, align 8
  %40 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %41 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %42, %"class.std::allocator.2"** %2
  %43 = load i32, i32* @x.227
  %44 = load i32, i32* @y.228
  %45 = add i32 %43, -1355134152
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1355134152
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -361093303, i32 2082335575
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %61, align 8
  %62 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %63 to %"class.std::allocator.2"*
  store i32 -381246601, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE1TE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZNSt16allocator_traitsISaIZ4mainE1TEE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 align 2 {
  %3 = alloca %struct.T*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.231
  %7 = load i32, i32* @y.232
  %8 = add i32 %6, 1117996931
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1117996931
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -96714878, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -96714878, label %20
    i32 1132105672, label %28
    i32 1659066961, label %61
    i32 306718751, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1132105672, i32 306718751
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.2"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  %32 = bitcast %"class.std::allocator.2"* %31 to %"class.__gnu_cxx::new_allocator.3"*
  %33 = load i64, i64* %30, align 8
  %34 = call %struct.T* @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %32, i64 %33, i8* null)
  store %struct.T* %34, %struct.T** %3
  %35 = load i32, i32* @x.231
  %36 = load i32, i32* @y.232
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1659066961, i32 306718751
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile %struct.T*, %struct.T** %3
  ret %struct.T* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.2"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %64, align 8
  %67 = bitcast %"class.std::allocator.2"* %66 to %"class.__gnu_cxx::new_allocator.3"*
  %68 = load i64, i64* %65, align 8
  %69 = call %struct.T* @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %67, i64 %68, i8* null)
  store i32 1132105672, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 align 2 {
  %4 = alloca %struct.T*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE1TE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 356916971, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %92
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 356916971, label %17
    i32 -2139697054, label %22
    i32 -733717514, label %23
    i32 -387927760, label %39
    i32 -1339462616, label %70
    i32 1394384343, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %92

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -2139697054, i32 -733717514
  store i32 %21, i32* %13
  br label %92

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.233
  %25 = load i32, i32* @y.234
  %26 = sub i32 %24, 1860369097
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1860369097
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -387927760, i32 1394384343
  store i32 %38, i32* %13
  br label %92

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 16
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %struct.T*
  store %struct.T* %43, %struct.T** %4
  %44 = load i32, i32* @x.233
  %45 = load i32, i32* @y.234
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1339462616, i32 1394384343
  store i32 %69, i32* %13
  br label %92

; <label>:70:                                     ; preds = %14
  %71 = load volatile %struct.T*, %struct.T** %4
  ret %struct.T* %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = sub i64 0, 16
  %75 = add i64 %73, %74
  %76 = sub i64 %73, 16
  %77 = mul i64 %75, 16
  %78 = sub i64 0, %73
  %79 = add i64 0, %78
  %80 = sub i64 0, %73
  %81 = sub i64 0, 16
  %82 = sub i64 %79, %81
  %83 = add i64 %79, 16
  %84 = add i64 %73, -1821880386909017490
  %85 = sub i64 %84, 16
  %86 = sub i64 %85, -1821880386909017490
  %87 = sub i64 %73, 16
  %88 = mul i64 %86, 16
  %89 = mul i64 %73, 16
  %90 = call i8* @_Znwm(i64 %89)
  %91 = bitcast i8* %90 to %struct.T*
  store i32 -387927760, i32* %13
  br label %92

; <label>:92:                                     ; preds = %72, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPZ4mainE1TES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.T*, %struct.T*, %struct.T*, %"class.std::allocator.2"* dereferenceable(1)) #0 {
  %5 = alloca %"class.std::move_iterator.14", align 8
  %6 = alloca %"class.std::move_iterator.14", align 8
  %7 = alloca %struct.T*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.14", align 8
  %10 = alloca %"class.std::move_iterator.14", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %5, i32 0, i32 0
  store %struct.T* %0, %struct.T** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %6, i32 0, i32 0
  store %struct.T* %1, %struct.T** %12, align 8
  store %struct.T* %2, %struct.T** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.14"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.14"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.T*, %struct.T** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %9, i32 0, i32 0
  %19 = load %struct.T*, %struct.T** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %10, i32 0, i32 0
  %21 = load %struct.T*, %struct.T** %20, align 8
  %22 = call %struct.T* @_ZSt18uninitialized_copyISt13move_iteratorIPZ4mainE1TES2_ET0_T_S5_S4_(%struct.T* %19, %struct.T* %21, %struct.T* %17)
  ret %struct.T* %22
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt32__make_move_if_noexcept_iteratorIPZ4mainE1TSt13move_iteratorIS1_EET0_T_(%struct.T*) #0 {
  %2 = alloca %struct.T*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.237
  %6 = load i32, i32* @y.238
  %7 = add i32 %5, -2111306487
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2111306487
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 301169817, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 301169817, label %19
    i32 -1145922613, label %27
    i32 1977833340, label %60
    i32 -751844447, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1145922613, i32 -751844447
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.14", align 8
  %29 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %29, align 8
  %30 = load %struct.T*, %struct.T** %29, align 8
  call void @_ZNSt13move_iteratorIPZ4mainE1TEC2ES1_(%"class.std::move_iterator.14"* %28, %struct.T* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %28, i32 0, i32 0
  %32 = load %struct.T*, %struct.T** %31, align 8
  store %struct.T* %32, %struct.T** %2
  %33 = load i32, i32* @x.237
  %34 = load i32, i32* @y.238
  %35 = sub i32 %33, 1580971220
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1580971220
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1977833340, i32 -751844447
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %struct.T*, %struct.T** %2
  ret %struct.T* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator.14", align 8
  %64 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %64, align 8
  %65 = load %struct.T*, %struct.T** %64, align 8
  call void @_ZNSt13move_iteratorIPZ4mainE1TEC2ES1_(%"class.std::move_iterator.14"* %63, %struct.T* %65)
  %66 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %63, i32 0, i32 0
  %67 = load %struct.T*, %struct.T** %66, align 8
  store i32 -1145922613, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt18uninitialized_copyISt13move_iteratorIPZ4mainE1TES2_ET0_T_S5_S4_(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %"class.std::move_iterator.14", align 8
  %5 = alloca %"class.std::move_iterator.14", align 8
  %6 = alloca %struct.T*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.14", align 8
  %9 = alloca %"class.std::move_iterator.14", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %11, align 8
  store %struct.T* %2, %struct.T** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.14"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.14"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %struct.T*, %struct.T** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %8, i32 0, i32 0
  %18 = load %struct.T*, %struct.T** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %9, i32 0, i32 0
  %20 = load %struct.T*, %struct.T** %19, align 8
  %21 = call %struct.T* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPZ4mainE1TES4_EET0_T_S7_S6_(%struct.T* %18, %struct.T* %20, %struct.T* %16)
  ret %struct.T* %21
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPZ4mainE1TES4_EET0_T_S7_S6_(%struct.T*, %struct.T*, %struct.T*) #0 align 2 {
  %4 = alloca %"class.std::move_iterator.14", align 8
  %5 = alloca %"class.std::move_iterator.14", align 8
  %6 = alloca %struct.T*, align 8
  %7 = alloca %"class.std::move_iterator.14", align 8
  %8 = alloca %"class.std::move_iterator.14", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %10, align 8
  store %struct.T* %2, %struct.T** %6, align 8
  %11 = bitcast %"class.std::move_iterator.14"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.14"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %struct.T*, %struct.T** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %7, i32 0, i32 0
  %17 = load %struct.T*, %struct.T** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %8, i32 0, i32 0
  %19 = load %struct.T*, %struct.T** %18, align 8
  %20 = call %struct.T* @_ZSt4copyISt13move_iteratorIPZ4mainE1TES2_ET0_T_S5_S4_(%struct.T* %17, %struct.T* %19, %struct.T* %15)
  ret %struct.T* %20
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt4copyISt13move_iteratorIPZ4mainE1TES2_ET0_T_S5_S4_(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %"class.std::move_iterator.14", align 8
  %5 = alloca %"class.std::move_iterator.14", align 8
  %6 = alloca %struct.T*, align 8
  %7 = alloca %"class.std::move_iterator.14", align 8
  %8 = alloca %"class.std::move_iterator.14", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %10, align 8
  store %struct.T* %2, %struct.T** %6, align 8
  %11 = bitcast %"class.std::move_iterator.14"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %7, i32 0, i32 0
  %14 = load %struct.T*, %struct.T** %13, align 8
  %15 = call %struct.T* @_ZSt12__miter_baseISt13move_iteratorIPZ4mainE1TEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.T* %14)
  %16 = bitcast %"class.std::move_iterator.14"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %8, i32 0, i32 0
  %19 = load %struct.T*, %struct.T** %18, align 8
  %20 = call %struct.T* @_ZSt12__miter_baseISt13move_iteratorIPZ4mainE1TEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.T* %19)
  %21 = load %struct.T*, %struct.T** %6, align 8
  %22 = call %struct.T* @_ZSt14__copy_move_a2ILb1EPZ4mainE1TS1_ET1_T0_S3_S2_(%struct.T* %15, %struct.T* %20, %struct.T* %21)
  ret %struct.T* %22
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt14__copy_move_a2ILb1EPZ4mainE1TS1_ET1_T0_S3_S2_(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %struct.T*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.245
  %8 = load i32, i32* @y.246
  %9 = sub i32 %7, 1696864977
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1696864977
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1307885053, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1307885053, label %21
    i32 -1411098101, label %41
    i32 -49366158, label %67
    i32 -1787576040, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1411098101, i32 -1787576040
  store i32 %40, i32* %17
  br label %80

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.T*, align 8
  %43 = alloca %struct.T*, align 8
  %44 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %42, align 8
  store %struct.T* %1, %struct.T** %43, align 8
  store %struct.T* %2, %struct.T** %44, align 8
  %45 = load %struct.T*, %struct.T** %42, align 8
  %46 = call %struct.T* @_ZSt12__niter_baseIPZ4mainE1TENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.T* %45)
  %47 = load %struct.T*, %struct.T** %43, align 8
  %48 = call %struct.T* @_ZSt12__niter_baseIPZ4mainE1TENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.T* %47)
  %49 = load %struct.T*, %struct.T** %44, align 8
  %50 = call %struct.T* @_ZSt12__niter_baseIPZ4mainE1TENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.T* %49)
  %51 = call %struct.T* @_ZSt13__copy_move_aILb1EPZ4mainE1TS1_ET1_T0_S3_S2_(%struct.T* %46, %struct.T* %48, %struct.T* %50)
  store %struct.T* %51, %struct.T** %4
  %52 = load i32, i32* @x.245
  %53 = load i32, i32* @y.246
  %54 = add i32 %52, -405351466
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -405351466
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -49366158, i32 -1787576040
  store i32 %66, i32* %17
  br label %80

; <label>:67:                                     ; preds = %18
  %68 = load volatile %struct.T*, %struct.T** %4
  ret %struct.T* %68

; <label>:69:                                     ; preds = %18
  %70 = alloca %struct.T*, align 8
  %71 = alloca %struct.T*, align 8
  %72 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %70, align 8
  store %struct.T* %1, %struct.T** %71, align 8
  store %struct.T* %2, %struct.T** %72, align 8
  %73 = load %struct.T*, %struct.T** %70, align 8
  %74 = call %struct.T* @_ZSt12__niter_baseIPZ4mainE1TENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.T* %73)
  %75 = load %struct.T*, %struct.T** %71, align 8
  %76 = call %struct.T* @_ZSt12__niter_baseIPZ4mainE1TENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.T* %75)
  %77 = load %struct.T*, %struct.T** %72, align 8
  %78 = call %struct.T* @_ZSt12__niter_baseIPZ4mainE1TENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.T* %77)
  %79 = call %struct.T* @_ZSt13__copy_move_aILb1EPZ4mainE1TS1_ET1_T0_S3_S2_(%struct.T* %74, %struct.T* %76, %struct.T* %78)
  store i32 -1411098101, i32* %17
  br label %80

; <label>:80:                                     ; preds = %69, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt12__miter_baseISt13move_iteratorIPZ4mainE1TEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.T*) #0 {
  %2 = alloca %"class.std::move_iterator.14", align 8
  %3 = alloca %"class.std::move_iterator.14", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %2, i32 0, i32 0
  store %struct.T* %0, %struct.T** %4, align 8
  %5 = bitcast %"class.std::move_iterator.14"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.14"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %3, i32 0, i32 0
  %8 = load %struct.T*, %struct.T** %7, align 8
  %9 = call %struct.T* @_ZNSt10_Iter_baseISt13move_iteratorIPZ4mainE1TELb1EE7_S_baseES3_(%struct.T* %8)
  ret %struct.T* %9
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt13__copy_move_aILb1EPZ4mainE1TS1_ET1_T0_S3_S2_(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %struct.T*, align 8
  %5 = alloca %struct.T*, align 8
  %6 = alloca %struct.T*, align 8
  %7 = alloca i8, align 1
  store %struct.T* %0, %struct.T** %4, align 8
  store %struct.T* %1, %struct.T** %5, align 8
  store %struct.T* %2, %struct.T** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.T*, %struct.T** %4, align 8
  %9 = load %struct.T*, %struct.T** %5, align 8
  %10 = load %struct.T*, %struct.T** %6, align 8
  %11 = call %struct.T* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIZ4mainE1TEEPT_PKS4_S7_S5_(%struct.T* %8, %struct.T* %9, %struct.T* %10)
  ret %struct.T* %11
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt12__niter_baseIPZ4mainE1TENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.T*) #0 {
  %2 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %2, align 8
  %3 = load %struct.T*, %struct.T** %2, align 8
  %4 = call %struct.T* @_ZNSt10_Iter_baseIPZ4mainE1TLb0EE7_S_baseES1_(%struct.T* %3)
  ret %struct.T* %4
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIZ4mainE1TEEPT_PKS4_S7_S5_(%struct.T*, %struct.T*, %struct.T*) #4 align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %struct.T**
  %7 = alloca %struct.T**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.253
  %11 = load i32, i32* @y.254
  %12 = add i32 %10, 617553887
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 617553887
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 887250578, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %268
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 887250578, label %24
    i32 1595831524, label %32
    i32 1757820829, label %67
    i32 -248702211, label %70
    i32 -1495135607, label %98
    i32 -1773272878, label %135
    i32 -886994402, label %136
    i32 -1753655376, label %142
    i32 1244939441, label %215
  ]

; <label>:23:                                     ; preds = %21
  br label %268

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1595831524, i32 -1753655376
  store i32 %31, i32* %20
  br label %268

; <label>:32:                                     ; preds = %21
  %33 = alloca %struct.T*, align 8
  store %struct.T** %33, %struct.T*** %7
  %34 = alloca %struct.T*, align 8
  %35 = alloca %struct.T*, align 8
  store %struct.T** %35, %struct.T*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile %struct.T**, %struct.T*** %7
  store %struct.T* %0, %struct.T** %37, align 8
  store %struct.T* %1, %struct.T** %34, align 8
  %38 = load volatile %struct.T**, %struct.T*** %6
  store %struct.T* %2, %struct.T** %38, align 8
  %39 = load %struct.T*, %struct.T** %34, align 8
  %40 = load volatile %struct.T**, %struct.T*** %7
  %41 = load %struct.T*, %struct.T** %40, align 8
  %42 = ptrtoint %struct.T* %39 to i64
  %43 = ptrtoint %struct.T* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 16
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.253
  %53 = load i32, i32* @y.254
  %54 = add i32 %52, -1444449253
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1444449253
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1757820829, i32 -1753655376
  store i32 %66, i32* %20
  br label %268

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -248702211, i32 -886994402
  store i32 %69, i32* %20
  br label %268

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.253
  %72 = load i32, i32* @y.254
  %73 = add i32 %71, -952615133
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -952615133
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -1495135607, i32 1244939441
  store i32 %97, i32* %20
  br label %268

; <label>:98:                                     ; preds = %21
  %99 = load volatile %struct.T**, %struct.T*** %6
  %100 = load %struct.T*, %struct.T** %99, align 8
  %101 = bitcast %struct.T* %100 to i8*
  %102 = load volatile %struct.T**, %struct.T*** %7
  %103 = load %struct.T*, %struct.T** %102, align 8
  %104 = bitcast %struct.T* %103 to i8*
  %105 = load volatile i64*, i64** %5
  %106 = load i64, i64* %105, align 8
  %107 = mul i64 16, %106
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %101, i8* %104, i64 %107, i32 8, i1 false)
  %108 = load i32, i32* @x.253
  %109 = load i32, i32* @y.254
  %110 = sub i32 %108, 807219863
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 807219863
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1773272878, i32 1244939441
  store i32 %134, i32* %20
  br label %268

; <label>:135:                                    ; preds = %21
  store i32 -886994402, i32* %20
  br label %268

; <label>:136:                                    ; preds = %21
  %137 = load volatile %struct.T**, %struct.T*** %6
  %138 = load %struct.T*, %struct.T** %137, align 8
  %139 = load volatile i64*, i64** %5
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %struct.T, %struct.T* %138, i64 %140
  ret %struct.T* %141

; <label>:142:                                    ; preds = %21
  %143 = alloca %struct.T*, align 8
  %144 = alloca %struct.T*, align 8
  %145 = alloca %struct.T*, align 8
  %146 = alloca i64, align 8
  store %struct.T* %0, %struct.T** %143, align 8
  store %struct.T* %1, %struct.T** %144, align 8
  store %struct.T* %2, %struct.T** %145, align 8
  %147 = load %struct.T*, %struct.T** %144, align 8
  %148 = load %struct.T*, %struct.T** %143, align 8
  %149 = ptrtoint %struct.T* %147 to i64
  %150 = ptrtoint %struct.T* %148 to i64
  %151 = add i64 0, 1007965731771659616
  %152 = sub i64 %151, %149
  %153 = sub i64 %152, 1007965731771659616
  %154 = sub i64 0, %149
  %155 = add i64 %153, -6251776214744053396
  %156 = add i64 %155, %150
  %157 = sub i64 %156, -6251776214744053396
  %158 = add i64 %153, %150
  %159 = add i64 0, 1569693795741729154
  %160 = sub i64 %159, %149
  %161 = sub i64 %160, 1569693795741729154
  %162 = sub i64 0, %149
  %163 = sub i64 0, %150
  %164 = sub i64 %161, %163
  %165 = add i64 %161, %150
  %166 = add i64 0, 2199766191975590141
  %167 = sub i64 %166, %149
  %168 = sub i64 %167, 2199766191975590141
  %169 = sub i64 0, %149
  %170 = sub i64 0, %168
  %171 = sub i64 0, %150
  %172 = add i64 %170, %171
  %173 = sub i64 0, %172
  %174 = add i64 %168, %150
  %175 = shl i64 %149, %150
  %176 = shl i64 %149, %150
  %177 = shl i64 %149, %150
  %178 = shl i64 %149, %150
  %179 = add i64 %149, -1141805473780610943
  %180 = sub i64 %179, %150
  %181 = sub i64 %180, -1141805473780610943
  %182 = sub i64 %149, %150
  %183 = mul i64 %181, %150
  %184 = add i64 %149, -4051702444406648071
  %185 = sub i64 %184, %150
  %186 = sub i64 %185, -4051702444406648071
  %187 = sub i64 %149, %150
  %188 = shl i64 %186, 16
  %189 = add i64 0, -578167219139929783
  %190 = sub i64 %189, %186
  %191 = sub i64 %190, -578167219139929783
  %192 = sub i64 0, %186
  %193 = sub i64 0, 16
  %194 = sub i64 %191, %193
  %195 = add i64 %191, 16
  %196 = sub i64 0, %186
  %197 = add i64 0, %196
  %198 = sub i64 0, %186
  %199 = sub i64 0, %197
  %200 = sub i64 0, 16
  %201 = add i64 %199, %200
  %202 = sub i64 0, %201
  %203 = add i64 %197, 16
  %204 = sub i64 0, 2651184225650527245
  %205 = sub i64 %204, %186
  %206 = add i64 %205, 2651184225650527245
  %207 = sub i64 0, %186
  %208 = sub i64 %206, -3073958801091467805
  %209 = add i64 %208, 16
  %210 = add i64 %209, -3073958801091467805
  %211 = add i64 %206, 16
  %212 = sdiv exact i64 %186, 16
  store i64 %212, i64* %146, align 8
  %213 = load i64, i64* %146, align 8
  %214 = icmp ne i64 %213, 0
  store i32 1595831524, i32* %20
  br label %268

; <label>:215:                                    ; preds = %21
  %216 = load volatile %struct.T**, %struct.T*** %6
  %217 = load %struct.T*, %struct.T** %216, align 8
  %218 = bitcast %struct.T* %217 to i8*
  %219 = load volatile %struct.T**, %struct.T*** %7
  %220 = load %struct.T*, %struct.T** %219, align 8
  %221 = bitcast %struct.T* %220 to i8*
  %222 = load volatile i64*, i64** %5
  %223 = load i64, i64* %222, align 8
  %224 = add i64 0, 626081873842732099
  %225 = sub i64 %224, 16
  %226 = sub i64 %225, 626081873842732099
  %227 = sub i64 0, 16
  %228 = sub i64 0, %226
  %229 = sub i64 0, %223
  %230 = add i64 %228, %229
  %231 = sub i64 0, %230
  %232 = add i64 %226, %223
  %233 = shl i64 16, %223
  %234 = shl i64 16, %223
  %235 = sub i64 0, 16
  %236 = add i64 0, %235
  %237 = sub i64 0, 16
  %238 = sub i64 0, %223
  %239 = sub i64 %236, %238
  %240 = add i64 %236, %223
  %241 = add i64 0, -330649697790857746
  %242 = sub i64 %241, 16
  %243 = sub i64 %242, -330649697790857746
  %244 = sub i64 0, 16
  %245 = sub i64 %243, 7117797986325271750
  %246 = add i64 %245, %223
  %247 = add i64 %246, 7117797986325271750
  %248 = add i64 %243, %223
  %249 = sub i64 0, 5174752629849006163
  %250 = sub i64 %249, 16
  %251 = add i64 %250, 5174752629849006163
  %252 = sub i64 0, 16
  %253 = add i64 %251, 6515798315970153197
  %254 = add i64 %253, %223
  %255 = sub i64 %254, 6515798315970153197
  %256 = add i64 %251, %223
  %257 = sub i64 0, -5308616009398995890
  %258 = sub i64 %257, 16
  %259 = add i64 %258, -5308616009398995890
  %260 = sub i64 0, 16
  %261 = sub i64 0, %259
  %262 = sub i64 0, %223
  %263 = add i64 %261, %262
  %264 = sub i64 0, %263
  %265 = add i64 %259, %223
  %266 = shl i64 16, %223
  %267 = mul i64 16, %223
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %218, i8* %221, i64 %267, i32 8, i1 false)
  store i32 -1495135607, i32* %20
  br label %268

; <label>:268:                                    ; preds = %215, %142, %135, %98, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNSt10_Iter_baseIPZ4mainE1TLb0EE7_S_baseES1_(%struct.T*) #4 align 2 {
  %2 = alloca %struct.T*, align 8
  store %struct.T* %0, %struct.T** %2, align 8
  %3 = load %struct.T*, %struct.T** %2, align 8
  ret %struct.T* %3
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZNSt10_Iter_baseISt13move_iteratorIPZ4mainE1TELb1EE7_S_baseES3_(%struct.T*) #0 align 2 {
  %2 = alloca %struct.T*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.257
  %6 = load i32, i32* @y.258
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1542057221, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1542057221, label %18
    i32 -1159386330, label %26
    i32 -1392744167, label %44
    i32 -2083210228, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1159386330, i32 -2083210228
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.14", align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %27, i32 0, i32 0
  store %struct.T* %0, %struct.T** %28, align 8
  %29 = call %struct.T* @_ZNKSt13move_iteratorIPZ4mainE1TE4baseEv(%"class.std::move_iterator.14"* %27)
  store %struct.T* %29, %struct.T** %2
  %30 = load i32, i32* @x.257
  %31 = load i32, i32* @y.258
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1392744167, i32 -2083210228
  store i32 %43, i32* %14
  br label %50

; <label>:44:                                     ; preds = %15
  %45 = load volatile %struct.T*, %struct.T** %2
  ret %struct.T* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::move_iterator.14", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %47, i32 0, i32 0
  store %struct.T* %0, %struct.T** %48, align 8
  %49 = call %struct.T* @_ZNKSt13move_iteratorIPZ4mainE1TE4baseEv(%"class.std::move_iterator.14"* %47)
  store i32 -1159386330, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNKSt13move_iteratorIPZ4mainE1TE4baseEv(%"class.std::move_iterator.14"*) #4 align 2 {
  %2 = alloca %"class.std::move_iterator.14"*, align 8
  store %"class.std::move_iterator.14"* %0, %"class.std::move_iterator.14"** %2, align 8
  %3 = load %"class.std::move_iterator.14"*, %"class.std::move_iterator.14"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %3, i32 0, i32 0
  %5 = load %struct.T*, %struct.T** %4, align 8
  ret %struct.T* %5
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt13move_iteratorIPZ4mainE1TEC2ES1_(%"class.std::move_iterator.14"*, %struct.T*) unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::move_iterator.14"*, align 8
  %4 = alloca %struct.T*, align 8
  store %"class.std::move_iterator.14"* %0, %"class.std::move_iterator.14"** %3, align 8
  store %struct.T* %1, %struct.T** %4, align 8
  %5 = load %"class.std::move_iterator.14"*, %"class.std::move_iterator.14"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.14", %"class.std::move_iterator.14"* %5, i32 0, i32 0
  %7 = load %struct.T*, %struct.T** %4, align 8
  store %struct.T* %7, %struct.T** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE1TE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.3"*, %struct.T*) #4 align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %struct.T*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %struct.T* %1, %struct.T** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  %6 = load %struct.T*, %struct.T** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EE5beginEv(%"class.std::vector.0"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.T** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.T*, %struct.T** %8, align 8
  ret %struct.T* %9
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"*, %struct.T** dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %struct.T**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %struct.T** %1, %struct.T*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %struct.T**, %struct.T*** %4, align 8
  %8 = load %struct.T*, %struct.T** %7, align 8
  store %struct.T* %8, %struct.T** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNSt6vectorIZ4mainE1TSaIS0_EE3endEv(%"class.std::vector.0"*) #4 align 2 {
  %2 = alloca %struct.T*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.269
  %6 = load i32, i32* @y.270
  %7 = add i32 %5, 1442034192
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1442034192
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1160071308, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1160071308, label %19
    i32 -910836950, label %27
    i32 105526356, label %63
    i32 -435044242, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -910836950, i32 -435044242
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %28, %struct.T** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %35 = load %struct.T*, %struct.T** %34, align 8
  store %struct.T* %35, %struct.T** %2
  %36 = load i32, i32* @x.269
  %37 = load i32, i32* @y.270
  %38 = sub i32 %36, -478805731
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -478805731
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 105526356, i32 -435044242
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %struct.T*, %struct.T** %2
  ret %struct.T* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %67, align 8
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %69 = bitcast %"class.std::vector.0"* %68 to %"struct.std::_Vector_base.1"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl", %"struct.std::_Vector_base<T, std::allocator<T> >::_Vector_impl"* %70, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %66, %struct.T** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %73 = load %struct.T*, %struct.T** %72, align 8
  store i32 -910836950, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %struct.T* %0, %struct.T** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %1, %struct.T** %13, align 8
  %14 = alloca i32
  store i32 747007846, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %135
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 747007846, label %18
    i32 -1472018181, label %21
    i32 552842622, label %49
    i32 2036938587, label %100
    i32 1198473577, label %101
    i32 -1886928689, label %102
  ]

; <label>:17:                                     ; preds = %15
  br label %135

; <label>:18:                                     ; preds = %15
  %19 = call zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4) #3
  %20 = select i1 %19, i32 -1472018181, i32 1198473577
  store i32 %20, i32* %14
  br label %135

; <label>:21:                                     ; preds = %15
  %22 = load i32, i32* @x.271
  %23 = load i32, i32* @y.272
  %24 = add i32 %22, 82331648
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 82331648
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 552842622, i32 -1886928689
  store i32 %48, i32* %14
  br label %135

; <label>:49:                                     ; preds = %15
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3) #3
  %55 = call i64 @_ZSt4__lgl(i64 %54)
  %56 = mul nsw i64 %55, 2
  %57 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %8 to i8*
  %58 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 1, i32 1, i1 false)
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %60 = load %struct.T*, %struct.T** %59, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %62 = load %struct.T*, %struct.T** %61, align 8
  call void @"_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElNS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_T1_"(%struct.T* %60, %struct.T* %62, i64 %56)
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %64 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 8, i1 false)
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 8, i1 false)
  %67 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %68 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 1, i32 1, i1 false)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %70 = load %struct.T*, %struct.T** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %72 = load %struct.T*, %struct.T** %71, align 8
  call void @"_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %70, %struct.T* %72)
  %73 = load i32, i32* @x.271
  %74 = load i32, i32* @y.272
  %75 = sub i32 %73, 149853425
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 149853425
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 2036938587, i32 -1886928689
  store i32 %99, i32* %14
  br label %135

; <label>:100:                                    ; preds = %15
  store i32 1198473577, i32* %14
  br label %135

; <label>:101:                                    ; preds = %15
  ret void

; <label>:102:                                    ; preds = %15
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 8, i32 8, i1 false)
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 8, i32 8, i1 false)
  %107 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3) #3
  %108 = call i64 @_ZSt4__lgl(i64 %107)
  %109 = sub i64 0, 2
  %110 = add i64 %108, %109
  %111 = sub i64 %108, 2
  %112 = mul i64 %110, 2
  %113 = add i64 %108, 7955120614396006385
  %114 = sub i64 %113, 2
  %115 = sub i64 %114, 7955120614396006385
  %116 = sub i64 %108, 2
  %117 = mul i64 %115, 2
  %118 = mul nsw i64 %108, 2
  %119 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %8 to i8*
  %120 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 1, i32 1, i1 false)
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %122 = load %struct.T*, %struct.T** %121, align 8
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %124 = load %struct.T*, %struct.T** %123, align 8
  call void @"_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElNS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_T1_"(%struct.T* %122, %struct.T* %124, i64 %118)
  %125 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %126 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 8, i1 false)
  %127 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %128 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 8, i32 8, i1 false)
  %129 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %130 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 1, i32 1, i1 false)
  %131 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %132 = load %struct.T*, %struct.T** %131, align 8
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %134 = load %struct.T*, %struct.T** %133, align 8
  call void @"_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %132, %struct.T* %134)
  store i32 552842622, i32* %14
  br label %135

; <label>:135:                                    ; preds = %102, %100, %49, %21, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @"_ZN9__gnu_cxx5__ops16__iter_comp_iterIZ4mainE3$_0EENS0_15_Iter_comp_iterIT_EES4_"() #0 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %2 = alloca %class.anon, align 1
  %3 = alloca %class.anon, align 1
  call void @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EC2ES2_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %struct.T*, %struct.T** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %struct.T*, %struct.T** %9, align 8
  %11 = icmp ne %struct.T* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElNS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_T1_"(%struct.T*, %struct.T*, i64) #0 {
  %4 = alloca i1
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %16 = alloca i64*
  %17 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %18 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %19 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %20 = alloca i1
  %21 = alloca i1
  %22 = load i32, i32* @x.277
  %23 = load i32, i32* @y.278
  %24 = add i32 %22, 1006949591
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1006949591
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  store i1 %30, i1* %21
  %31 = icmp slt i32 %23, 10
  store i1 %31, i1* %20
  %32 = alloca i32
  store i32 483355381, i32* %32
  br label %33

; <label>:33:                                     ; preds = %3, %377
  %34 = load i32, i32* %32
  switch i32 %34, label %35 [
    i32 483355381, label %36
    i32 273904153, label %44
    i32 -2078369883, label %91
    i32 1048004734, label %92
    i32 429485186, label %108
    i32 847327095, label %128
    i32 2119574668, label %131
    i32 1440530592, label %136
    i32 1759126258, label %164
    i32 2078903031, label %217
    i32 1314608911, label %218
    i32 1080679218, label %270
    i32 -1387645550, label %298
    i32 502440061, label %326
    i32 388366739, label %327
    i32 1136686519, label %345
    i32 1912084854, label %350
    i32 1124364311, label %376
  ]

; <label>:35:                                     ; preds = %33
  br label %377

; <label>:36:                                     ; preds = %33
  %37 = load volatile i1, i1* %21
  %38 = load volatile i1, i1* %20
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 273904153, i32 388366739
  store i32 %43, i32* %32
  br label %377

; <label>:44:                                     ; preds = %33
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %45, %"class.__gnu_cxx::__normal_iterator"** %19
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %46, %"class.__gnu_cxx::__normal_iterator"** %18
  %47 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %47, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %17
  %48 = alloca i64, align 8
  store i64* %48, i64** %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %49, %"class.__gnu_cxx::__normal_iterator"** %15
  %50 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %50, %"class.__gnu_cxx::__normal_iterator"** %14
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %51, %"class.__gnu_cxx::__normal_iterator"** %13
  %52 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %52, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %53, %"class.__gnu_cxx::__normal_iterator"** %11
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %54, %"class.__gnu_cxx::__normal_iterator"** %10
  %55 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %55, %"class.__gnu_cxx::__normal_iterator"** %9
  %56 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %56, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %57, %"class.__gnu_cxx::__normal_iterator"** %7
  %58 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %58, %"class.__gnu_cxx::__normal_iterator"** %6
  %59 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %59, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %5
  %60 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %60, i32 0, i32 0
  store %struct.T* %0, %struct.T** %61, align 8
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %62, i32 0, i32 0
  store %struct.T* %1, %struct.T** %63, align 8
  %64 = load volatile i64*, i64** %16
  store i64 %2, i64* %64, align 8
  %65 = load i32, i32* @x.277
  %66 = load i32, i32* @y.278
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 -2078369883, i32 388366739
  store i32 %90, i32* %32
  br label %377

; <label>:91:                                     ; preds = %33
  store i32 1048004734, i32* %32
  br label %377

; <label>:92:                                     ; preds = %33
  %93 = load i32, i32* @x.277
  %94 = load i32, i32* @y.278
  %95 = sub i32 %93, -166817737
  %96 = sub i32 %95, 1
  %97 = add i32 %96, -166817737
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 429485186, i32 1136686519
  store i32 %107, i32* %32
  br label %377

; <label>:108:                                    ; preds = %33
  %109 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %111 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %110, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %109) #3
  %112 = icmp sgt i64 %111, 16
  store i1 %112, i1* %4
  %113 = load i32, i32* @x.277
  %114 = load i32, i32* @y.278
  %115 = add i32 %113, -993900808
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -993900808
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 847327095, i32 1136686519
  store i32 %127, i32* %32
  br label %377

; <label>:128:                                    ; preds = %33
  %129 = load volatile i1, i1* %4
  %130 = select i1 %129, i32 2119574668, i32 1080679218
  store i32 %130, i32* %32
  br label %377

; <label>:131:                                    ; preds = %33
  %132 = load volatile i64*, i64** %16
  %133 = load i64, i64* %132, align 8
  %134 = icmp eq i64 %133, 0
  %135 = select i1 %134, i32 1440530592, i32 1314608911
  store i32 %135, i32* %32
  br label %377

; <label>:136:                                    ; preds = %33
  %137 = load i32, i32* @x.277
  %138 = load i32, i32* @y.278
  %139 = sub i32 %137, -249747134
  %140 = sub i32 %139, 1
  %141 = add i32 %140, -249747134
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 1759126258, i32 1912084854
  store i32 %163, i32* %32
  br label %377

; <label>:164:                                    ; preds = %33
  %165 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %166 = bitcast %"class.__gnu_cxx::__normal_iterator"* %165 to i8*
  %167 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %168 = bitcast %"class.__gnu_cxx::__normal_iterator"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %166, i8* %168, i64 8, i32 8, i1 false)
  %169 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %170 = bitcast %"class.__gnu_cxx::__normal_iterator"* %169 to i8*
  %171 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %172 = bitcast %"class.__gnu_cxx::__normal_iterator"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %170, i8* %172, i64 8, i32 8, i1 false)
  %173 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %174 = bitcast %"class.__gnu_cxx::__normal_iterator"* %173 to i8*
  %175 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %176 = bitcast %"class.__gnu_cxx::__normal_iterator"* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %174, i8* %176, i64 8, i32 8, i1 false)
  %177 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %178 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %177 to i8*
  %179 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %17
  %180 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %178, i8* %180, i64 1, i32 1, i1 false)
  %181 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %182 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %181, i32 0, i32 0
  %183 = load %struct.T*, %struct.T** %182, align 8
  %184 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %185 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %184, i32 0, i32 0
  %186 = load %struct.T*, %struct.T** %185, align 8
  %187 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %188 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %187, i32 0, i32 0
  %189 = load %struct.T*, %struct.T** %188, align 8
  call void @"_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T* %183, %struct.T* %186, %struct.T* %189)
  %190 = load i32, i32* @x.277
  %191 = load i32, i32* @y.278
  %192 = sub i32 %190, 1283887283
  %193 = sub i32 %192, 1
  %194 = add i32 %193, 1283887283
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 false, true
  %203 = and i1 %200, false
  %204 = and i1 %198, %202
  %205 = and i1 %201, false
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 false, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  %216 = select i1 %214, i32 2078903031, i32 1912084854
  store i32 %216, i32* %32
  br label %377

; <label>:217:                                    ; preds = %33
  store i32 1080679218, i32* %32
  br label %377

; <label>:218:                                    ; preds = %33
  %219 = load volatile i64*, i64** %16
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 0, -1
  %222 = sub i64 %220, %221
  %223 = add nsw i64 %220, -1
  %224 = load volatile i64*, i64** %16
  store i64 %222, i64* %224, align 8
  %225 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %226 = bitcast %"class.__gnu_cxx::__normal_iterator"* %225 to i8*
  %227 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %228 = bitcast %"class.__gnu_cxx::__normal_iterator"* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %226, i8* %228, i64 8, i32 8, i1 false)
  %229 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %230 = bitcast %"class.__gnu_cxx::__normal_iterator"* %229 to i8*
  %231 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %232 = bitcast %"class.__gnu_cxx::__normal_iterator"* %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %230, i8* %232, i64 8, i32 8, i1 false)
  %233 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %8
  %234 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %233 to i8*
  %235 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %17
  %236 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %234, i8* %236, i64 1, i32 1, i1 false)
  %237 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %238 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %237, i32 0, i32 0
  %239 = load %struct.T*, %struct.T** %238, align 8
  %240 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %240, i32 0, i32 0
  %242 = load %struct.T*, %struct.T** %241, align 8
  %243 = call %struct.T* @"_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEET_SC_SC_T0_"(%struct.T* %239, %struct.T* %242)
  %244 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %245 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %244, i32 0, i32 0
  store %struct.T* %243, %struct.T** %245, align 8
  %246 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %247 = bitcast %"class.__gnu_cxx::__normal_iterator"* %246 to i8*
  %248 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %249 = bitcast %"class.__gnu_cxx::__normal_iterator"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %247, i8* %249, i64 8, i32 8, i1 false)
  %250 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %251 = bitcast %"class.__gnu_cxx::__normal_iterator"* %250 to i8*
  %252 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %253 = bitcast %"class.__gnu_cxx::__normal_iterator"* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %251, i8* %253, i64 8, i32 8, i1 false)
  %254 = load volatile i64*, i64** %16
  %255 = load i64, i64* %254, align 8
  %256 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %5
  %257 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %256 to i8*
  %258 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %17
  %259 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %257, i8* %259, i64 1, i32 1, i1 false)
  %260 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %261 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %260, i32 0, i32 0
  %262 = load %struct.T*, %struct.T** %261, align 8
  %263 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %264 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %263, i32 0, i32 0
  %265 = load %struct.T*, %struct.T** %264, align 8
  call void @"_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElNS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_T1_"(%struct.T* %262, %struct.T* %265, i64 %255)
  %266 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %267 = bitcast %"class.__gnu_cxx::__normal_iterator"* %266 to i8*
  %268 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %269 = bitcast %"class.__gnu_cxx::__normal_iterator"* %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %267, i8* %269, i64 8, i32 8, i1 false)
  store i32 1048004734, i32* %32
  br label %377

; <label>:270:                                    ; preds = %33
  %271 = load i32, i32* @x.277
  %272 = load i32, i32* @y.278
  %273 = add i32 %271, 1218774312
  %274 = sub i32 %273, 1
  %275 = sub i32 %274, 1218774312
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 true, true
  %284 = and i1 %281, true
  %285 = and i1 %279, %283
  %286 = and i1 %282, true
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 true, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  %297 = select i1 %295, i32 -1387645550, i32 1124364311
  store i32 %297, i32* %32
  br label %377

; <label>:298:                                    ; preds = %33
  %299 = load i32, i32* @x.277
  %300 = load i32, i32* @y.278
  %301 = sub i32 %299, -50620524
  %302 = sub i32 %301, 1
  %303 = add i32 %302, -50620524
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = xor i1 %307, true
  %310 = xor i1 %308, true
  %311 = xor i1 false, true
  %312 = and i1 %309, false
  %313 = and i1 %307, %311
  %314 = and i1 %310, false
  %315 = and i1 %308, %311
  %316 = or i1 %312, %313
  %317 = or i1 %314, %315
  %318 = xor i1 %316, %317
  %319 = or i1 %309, %310
  %320 = xor i1 %319, true
  %321 = or i1 false, %311
  %322 = and i1 %320, %321
  %323 = or i1 %318, %322
  %324 = or i1 %307, %308
  %325 = select i1 %323, i32 502440061, i32 1124364311
  store i32 %325, i32* %32
  br label %377

; <label>:326:                                    ; preds = %33
  ret void

; <label>:327:                                    ; preds = %33
  %328 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %329 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %330 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %331 = alloca i64, align 8
  %332 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %333 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %334 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %335 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %336 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %337 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %338 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %339 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %340 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %341 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %342 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %343 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %328, i32 0, i32 0
  store %struct.T* %0, %struct.T** %343, align 8
  %344 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %329, i32 0, i32 0
  store %struct.T* %1, %struct.T** %344, align 8
  store i64 %2, i64* %331, align 8
  store i32 273904153, i32* %32
  br label %377

; <label>:345:                                    ; preds = %33
  %346 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %347 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %348 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %347, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %346) #3
  %349 = icmp sgt i64 %348, 16
  store i32 429485186, i32* %32
  br label %377

; <label>:350:                                    ; preds = %33
  %351 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %352 = bitcast %"class.__gnu_cxx::__normal_iterator"* %351 to i8*
  %353 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %19
  %354 = bitcast %"class.__gnu_cxx::__normal_iterator"* %353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %352, i8* %354, i64 8, i32 8, i1 false)
  %355 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %356 = bitcast %"class.__gnu_cxx::__normal_iterator"* %355 to i8*
  %357 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %358 = bitcast %"class.__gnu_cxx::__normal_iterator"* %357 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %356, i8* %358, i64 8, i32 8, i1 false)
  %359 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %360 = bitcast %"class.__gnu_cxx::__normal_iterator"* %359 to i8*
  %361 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %362 = bitcast %"class.__gnu_cxx::__normal_iterator"* %361 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %360, i8* %362, i64 8, i32 8, i1 false)
  %363 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %364 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %363 to i8*
  %365 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %17
  %366 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %365 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %364, i8* %366, i64 1, i32 1, i1 false)
  %367 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %368 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %367, i32 0, i32 0
  %369 = load %struct.T*, %struct.T** %368, align 8
  %370 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %371 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %370, i32 0, i32 0
  %372 = load %struct.T*, %struct.T** %371, align 8
  %373 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %374 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %373, i32 0, i32 0
  %375 = load %struct.T*, %struct.T** %374, align 8
  call void @"_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T* %369, %struct.T* %372, %struct.T* %375)
  store i32 1759126258, i32* %32
  br label %377

; <label>:376:                                    ; preds = %33
  store i32 -1387645550, i32* %32
  br label %377

; <label>:377:                                    ; preds = %376, %350, %345, %327, %298, %270, %218, %217, %164, %136, %131, %128, %108, %92, %91, %44, %36, %35
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt4__lgl(i64) #4 comdat {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @llvm.ctlz.i64(i64 %3, i1 true)
  %5 = trunc i64 %4 to i32
  %6 = sext i32 %5 to i64
  %7 = sub i64 63, 6865038469845819845
  %8 = sub i64 %7, %6
  %9 = add i64 %8, 6865038469845819845
  %10 = sub i64 63, %6
  ret i64 %9
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %struct.T*, %struct.T** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %struct.T*, %struct.T** %9, align 8
  %11 = ptrtoint %struct.T* %7 to i64
  %12 = ptrtoint %struct.T* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 16
  ret i64 %16
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %17, align 8
  %18 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4) #3
  store i64 %18, i64* %3
  %19 = alloca i32
  store i32 -388473790, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %60
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -388473790, label %23
    i32 11200216, label %27
    i32 1996216768, label %48
    i32 -1622291138, label %59
  ]

; <label>:22:                                     ; preds = %20
  br label %60

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %3
  %25 = icmp sgt i64 %24, 16
  %26 = select i1 %25, i32 11200216, i32 1996216768
  store i32 %26, i32* %19
  br label %60

; <label>:27:                                     ; preds = %20
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 16) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %struct.T* %30, %struct.T** %31, align 8
  %32 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9 to i8*
  %33 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 1, i32 1, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %35 = load %struct.T*, %struct.T** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %37 = load %struct.T*, %struct.T** %36, align 8
  call void @"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %35, %struct.T* %37)
  %38 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 16) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %struct.T* %38, %struct.T** %39, align 8
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %43 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 1, i32 1, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %45 = load %struct.T*, %struct.T** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %47 = load %struct.T*, %struct.T** %46, align 8
  call void @"_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %45, %struct.T* %47)
  store i32 -1622291138, i32* %19
  br label %60

; <label>:48:                                     ; preds = %20
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %15 to i8*
  %54 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 1, i32 1, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %56 = load %struct.T*, %struct.T** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %58 = load %struct.T*, %struct.T** %57, align 8
  call void @"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %56, %struct.T* %58)
  store i32 -1622291138, i32* %19
  br label %60

; <label>:59:                                     ; preds = %20
  ret void

; <label>:60:                                     ; preds = %48, %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %struct.T** %4
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %struct.T* %2, %struct.T** %17, align 8
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %25 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 1, i32 1, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %27 = load %struct.T*, %struct.T** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %29 = load %struct.T*, %struct.T** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %31 = load %struct.T*, %struct.T** %30, align 8
  call void @"_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T* %27, %struct.T* %29, %struct.T* %31)
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 8, i1 false)
  %36 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %14 to i8*
  %37 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 1, i32 1, i1 false)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %39 = load %struct.T*, %struct.T** %38, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %41 = load %struct.T*, %struct.T** %40, align 8
  call void @"_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %39, %struct.T* %41)
  ret void
}

; Function Attrs: noinline uwtable
define internal %struct.T* @"_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEET_SC_SC_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4) #3
  %20 = sdiv i64 %19, 2
  %21 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 %20) #3
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %struct.T* %21, %struct.T** %22, align 8
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 1) #3
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %struct.T* %25, %struct.T** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 1) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.T* %29, %struct.T** %30, align 8
  %31 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %32 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 1, i32 1, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %34 = load %struct.T*, %struct.T** %33, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %36 = load %struct.T*, %struct.T** %35, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %38 = load %struct.T*, %struct.T** %37, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %40 = load %struct.T*, %struct.T** %39, align 8
  call void @"_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_SC_T0_"(%struct.T* %34, %struct.T* %36, %struct.T* %38, %struct.T* %40)
  %41 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 1) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %struct.T* %41, %struct.T** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  %47 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %16 to i8*
  %48 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 1, i32 1, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %50 = load %struct.T*, %struct.T** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %52 = load %struct.T*, %struct.T** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %54 = load %struct.T*, %struct.T** %53, align 8
  %55 = call %struct.T* @"_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEET_SC_SC_SC_T0_"(%struct.T* %50, %struct.T* %52, %struct.T* %54)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %struct.T* %55, %struct.T** %56, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %58 = load %struct.T*, %struct.T** %57, align 8
  ret %struct.T* %58
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %struct.T* %2, %struct.T** %20, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %10 to i8*
  %26 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 1, i32 1, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %28 = load %struct.T*, %struct.T** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %30 = load %struct.T*, %struct.T** %29, align 8
  call void @"_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T* %28, %struct.T* %30)
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = alloca i32
  store i32 900671088, i32* %33
  br label %34

; <label>:34:                                     ; preds = %3, %102
  %35 = load i32, i32* %33
  switch i32 %35, label %36 [
    i32 900671088, label %37
    i32 -2094930143, label %40
    i32 547009410, label %51
    i32 1247092106, label %66
    i32 43855215, label %82
    i32 -710527310, label %97
    i32 -1398190055, label %98
    i32 795429024, label %100
    i32 -743265774, label %101
  ]

; <label>:36:                                     ; preds = %34
  br label %102

; <label>:37:                                     ; preds = %34
  %38 = call zeroext i1 @_ZN9__gnu_cxxltIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6) #3
  %39 = select i1 %38, i32 -2094930143, i32 795429024
  store i32 %39, i32* %33
  br label %102

; <label>:40:                                     ; preds = %34
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %46 = load %struct.T*, %struct.T** %45, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %48 = load %struct.T*, %struct.T** %47, align 8
  %49 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7, %struct.T* %46, %struct.T* %48)
  %50 = select i1 %49, i32 547009410, i32 1247092106
  store i32 %50, i32* %33
  br label %102

; <label>:51:                                     ; preds = %34
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %17 to i8*
  %59 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 1, i32 1, i1 false)
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %61 = load %struct.T*, %struct.T** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %63 = load %struct.T*, %struct.T** %62, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %65 = load %struct.T*, %struct.T** %64, align 8
  call void @"_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T* %61, %struct.T* %63, %struct.T* %65)
  store i32 1247092106, i32* %33
  br label %102

; <label>:66:                                     ; preds = %34
  %67 = load i32, i32* @x.291
  %68 = load i32, i32* @y.292
  %69 = sub i32 %67, -542058344
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -542058344
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 43855215, i32 -743265774
  store i32 %81, i32* %33
  br label %102

; <label>:82:                                     ; preds = %34
  %83 = load i32, i32* @x.291
  %84 = load i32, i32* @y.292
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -710527310, i32 -743265774
  store i32 %96, i32* %33
  br label %102

; <label>:97:                                     ; preds = %34
  store i32 -1398190055, i32* %33
  br label %102

; <label>:98:                                     ; preds = %34
  %99 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  store i32 900671088, i32* %33
  br label %102

; <label>:100:                                    ; preds = %34
  ret void

; <label>:101:                                    ; preds = %34
  store i32 43855215, i32* %33
  br label %102

; <label>:102:                                    ; preds = %101, %98, %97, %82, %66, %51, %40, %37, %36
  br label %34
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.293
  %13 = load i32, i32* @y.294
  %14 = sub i32 %12, 1168886166
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 1168886166
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %11
  %21 = icmp slt i32 %13, 10
  store i1 %21, i1* %10
  %22 = alloca i32
  store i32 -1923934317, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %119
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -1923934317, label %26
    i32 -749976764, label %46
    i32 1514069924, label %73
    i32 -744606064, label %74
    i32 -881838637, label %80
    i32 1516570247, label %108
    i32 -295878024, label %109
  ]

; <label>:25:                                     ; preds = %23
  br label %119

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %11
  %28 = load volatile i1, i1* %10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -749976764, i32 -295878024
  store i32 %45, i32* %22
  br label %119

; <label>:46:                                     ; preds = %23
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %47, %"class.__gnu_cxx::__normal_iterator"** %9
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %48, %"class.__gnu_cxx::__normal_iterator"** %8
  %49 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %49, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %7
  %50 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %50, %"class.__gnu_cxx::__normal_iterator"** %6
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %51, %"class.__gnu_cxx::__normal_iterator"** %5
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %52, %"class.__gnu_cxx::__normal_iterator"** %4
  %53 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %53, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3
  %54 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %54, i32 0, i32 0
  store %struct.T* %0, %struct.T** %55, align 8
  %56 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %56, i32 0, i32 0
  store %struct.T* %1, %struct.T** %57, align 8
  %58 = load i32, i32* @x.293
  %59 = load i32, i32* @y.294
  %60 = add i32 %58, -109031649
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -109031649
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 1514069924, i32 -295878024
  store i32 %72, i32* %22
  br label %119

; <label>:73:                                     ; preds = %23
  store i32 -744606064, i32* %22
  br label %119

; <label>:74:                                     ; preds = %23
  %75 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %76 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %77 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %76, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %75) #3
  %78 = icmp sgt i64 %77, 1
  %79 = select i1 %78, i32 -881838637, i32 1516570247
  store i32 %79, i32* %22
  br label %119

; <label>:80:                                     ; preds = %23
  %81 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %82 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %81) #3
  %83 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator"* %83 to i8*
  %85 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %86, i64 8, i32 8, i1 false)
  %87 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator"* %87 to i8*
  %89 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %90, i64 8, i32 8, i1 false)
  %91 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4
  %92 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  %93 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %94, i64 8, i32 8, i1 false)
  %95 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3
  %96 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %95 to i8*
  %97 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %7
  %98 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %98, i64 1, i32 1, i1 false)
  %99 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %99, i32 0, i32 0
  %101 = load %struct.T*, %struct.T** %100, align 8
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %102, i32 0, i32 0
  %104 = load %struct.T*, %struct.T** %103, align 8
  %105 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %105, i32 0, i32 0
  %107 = load %struct.T*, %struct.T** %106, align 8
  call void @"_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T* %101, %struct.T* %104, %struct.T* %107)
  store i32 -744606064, i32* %22
  br label %119

; <label>:108:                                    ; preds = %23
  ret void

; <label>:109:                                    ; preds = %23
  %110 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %111 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %112 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %113 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %114 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %115 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %116 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %110, i32 0, i32 0
  store %struct.T* %0, %struct.T** %117, align 8
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %111, i32 0, i32 0
  store %struct.T* %1, %struct.T** %118, align 8
  store i32 -749976764, i32* %22
  br label %119

; <label>:119:                                    ; preds = %109, %80, %74, %73, %46, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.T, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %struct.T, align 8
  %14 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %0, %struct.T** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %struct.T* %1, %struct.T** %16, align 8
  %17 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 653656137, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %244
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 653656137, label %22
    i32 -501166027, label %26
    i32 -1226755216, label %27
    i32 -204051189, label %43
    i32 -1080192767, label %66
    i32 -209753103, label %67
    i32 -2021430704, label %82
    i32 940410631, label %123
    i32 1556571984, label %126
    i32 191212141, label %127
    i32 -1001439779, label %132
    i32 -1411812296, label %133
    i32 -735133809, label %218
  ]

; <label>:21:                                     ; preds = %19
  br label %244

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp slt i64 %23, 2
  %25 = select i1 %24, i32 -501166027, i32 -1226755216
  store i32 %25, i32* %18
  br label %244

; <label>:26:                                     ; preds = %19
  store i32 -1001439779, i32* %18
  br label %244

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* @x.295
  %29 = load i32, i32* @y.296
  %30 = add i32 %28, -1598180444
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1598180444
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -204051189, i32 -1411812296
  store i32 %42, i32* %18
  br label %244

; <label>:43:                                     ; preds = %19
  %44 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %44, i64* %8, align 8
  %45 = load i64, i64* %8, align 8
  %46 = sub i64 %45, 3510582148755820645
  %47 = sub i64 %46, 2
  %48 = add i64 %47, 3510582148755820645
  %49 = sub nsw i64 %45, 2
  %50 = sdiv i64 %48, 2
  store i64 %50, i64* %9, align 8
  %51 = load i32, i32* @x.295
  %52 = load i32, i32* @y.296
  %53 = sub i32 %51, -1873595042
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1873595042
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1080192767, i32 -1411812296
  store i32 %65, i32* %18
  br label %244

; <label>:66:                                     ; preds = %19
  store i32 -209753103, i32* %18
  br label %244

; <label>:67:                                     ; preds = %19
  %68 = load i32, i32* @x.295
  %69 = load i32, i32* @y.296
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 -2021430704, i32 -735133809
  store i32 %81, i32* %18
  br label %244

; <label>:82:                                     ; preds = %19
  %83 = load i64, i64* %9, align 8
  %84 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 %83) #3
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.T* %84, %struct.T** %85, align 8
  %86 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %87 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %86) #3
  %88 = bitcast %struct.T* %10 to i8*
  %89 = bitcast %struct.T* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 16, i32 8, i1 false)
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %91 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 8, i1 false)
  %92 = load i64, i64* %9, align 8
  %93 = load i64, i64* %8, align 8
  %94 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %10) #3
  %95 = bitcast %struct.T* %13 to i8*
  %96 = bitcast %struct.T* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 16, i32 8, i1 false)
  %97 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %14 to i8*
  %98 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 1, i32 1, i1 false)
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %100 = load %struct.T*, %struct.T** %99, align 8
  %101 = bitcast %struct.T* %13 to { i64, i64 }*
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %101, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %101, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  call void @"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_T0_SD_T1_T2_"(%struct.T* %100, i64 %92, i64 %93, i64 %103, i64 %105)
  %106 = load i64, i64* %9, align 8
  %107 = icmp eq i64 %106, 0
  store i1 %107, i1* %3
  %108 = load i32, i32* @x.295
  %109 = load i32, i32* @y.296
  %110 = sub i32 %108, 1196777855
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 1196777855
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 940410631, i32 -735133809
  store i32 %122, i32* %18
  br label %244

; <label>:123:                                    ; preds = %19
  %124 = load volatile i1, i1* %3
  %125 = select i1 %124, i32 1556571984, i32 191212141
  store i32 %125, i32* %18
  br label %244

; <label>:126:                                    ; preds = %19
  store i32 -1001439779, i32* %18
  br label %244

; <label>:127:                                    ; preds = %19
  %128 = load i64, i64* %9, align 8
  %129 = sub i64 0, -1
  %130 = sub i64 %128, %129
  %131 = add nsw i64 %128, -1
  store i64 %130, i64* %9, align 8
  store i32 -209753103, i32* %18
  br label %244

; <label>:132:                                    ; preds = %19
  ret void

; <label>:133:                                    ; preds = %19
  %134 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %134, i64* %8, align 8
  %135 = load i64, i64* %8, align 8
  %136 = shl i64 %135, 2
  %137 = shl i64 %135, 2
  %138 = shl i64 %135, 2
  %139 = sub i64 %135, 2428623853500591135
  %140 = sub i64 %139, 2
  %141 = add i64 %140, 2428623853500591135
  %142 = sub i64 %135, 2
  %143 = mul i64 %141, 2
  %144 = add i64 0, 6119726767768936442
  %145 = sub i64 %144, %135
  %146 = sub i64 %145, 6119726767768936442
  %147 = sub i64 0, %135
  %148 = sub i64 0, 2
  %149 = sub i64 %146, %148
  %150 = add i64 %146, 2
  %151 = sub i64 0, 5916685889600553864
  %152 = sub i64 %151, %135
  %153 = add i64 %152, 5916685889600553864
  %154 = sub i64 0, %135
  %155 = sub i64 %153, -4322874322660284649
  %156 = add i64 %155, 2
  %157 = add i64 %156, -4322874322660284649
  %158 = add i64 %153, 2
  %159 = sub i64 0, 2
  %160 = add i64 %135, %159
  %161 = sub nsw i64 %135, 2
  %162 = add i64 0, 955023410845947940
  %163 = sub i64 %162, %160
  %164 = sub i64 %163, 955023410845947940
  %165 = sub i64 0, %160
  %166 = sub i64 %164, -7707572673296403919
  %167 = add i64 %166, 2
  %168 = add i64 %167, -7707572673296403919
  %169 = add i64 %164, 2
  %170 = sub i64 0, 5499092549398194842
  %171 = sub i64 %170, %160
  %172 = add i64 %171, 5499092549398194842
  %173 = sub i64 0, %160
  %174 = sub i64 0, 2
  %175 = sub i64 %172, %174
  %176 = add i64 %172, 2
  %177 = sub i64 %160, 1471007370901352072
  %178 = sub i64 %177, 2
  %179 = add i64 %178, 1471007370901352072
  %180 = sub i64 %160, 2
  %181 = mul i64 %179, 2
  %182 = add i64 0, 3868967612288403352
  %183 = sub i64 %182, %160
  %184 = sub i64 %183, 3868967612288403352
  %185 = sub i64 0, %160
  %186 = sub i64 0, %184
  %187 = sub i64 0, 2
  %188 = add i64 %186, %187
  %189 = sub i64 0, %188
  %190 = add i64 %184, 2
  %191 = sub i64 %160, 352601664012613349
  %192 = sub i64 %191, 2
  %193 = add i64 %192, 352601664012613349
  %194 = sub i64 %160, 2
  %195 = mul i64 %193, 2
  %196 = sub i64 0, %160
  %197 = add i64 0, %196
  %198 = sub i64 0, %160
  %199 = add i64 %197, -589415260129035278
  %200 = add i64 %199, 2
  %201 = sub i64 %200, -589415260129035278
  %202 = add i64 %197, 2
  %203 = add i64 0, 1676945254454665138
  %204 = sub i64 %203, %160
  %205 = sub i64 %204, 1676945254454665138
  %206 = sub i64 0, %160
  %207 = add i64 %205, -809067951628557573
  %208 = add i64 %207, 2
  %209 = sub i64 %208, -809067951628557573
  %210 = add i64 %205, 2
  %211 = sub i64 0, %160
  %212 = add i64 0, %211
  %213 = sub i64 0, %160
  %214 = sub i64 0, 2
  %215 = sub i64 %212, %214
  %216 = add i64 %212, 2
  %217 = sdiv i64 %160, 2
  store i64 %217, i64* %9, align 8
  store i32 -204051189, i32* %18
  br label %244

; <label>:218:                                    ; preds = %19
  %219 = load i64, i64* %9, align 8
  %220 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 %219) #3
  %221 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.T* %220, %struct.T** %221, align 8
  %222 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %223 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %222) #3
  %224 = bitcast %struct.T* %10 to i8*
  %225 = bitcast %struct.T* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %224, i8* %225, i64 16, i32 8, i1 false)
  %226 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %227 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %226, i8* %227, i64 8, i32 8, i1 false)
  %228 = load i64, i64* %9, align 8
  %229 = load i64, i64* %8, align 8
  %230 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %10) #3
  %231 = bitcast %struct.T* %13 to i8*
  %232 = bitcast %struct.T* %230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %231, i8* %232, i64 16, i32 8, i1 false)
  %233 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %14 to i8*
  %234 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %233, i8* %234, i64 1, i32 1, i1 false)
  %235 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %236 = load %struct.T*, %struct.T** %235, align 8
  %237 = bitcast %struct.T* %13 to { i64, i64 }*
  %238 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %237, i32 0, i32 0
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %237, i32 0, i32 1
  %241 = load i64, i64* %240, align 8
  call void @"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_T0_SD_T1_T2_"(%struct.T* %236, i64 %228, i64 %229, i64 %239, i64 %241)
  %242 = load i64, i64* %9, align 8
  %243 = icmp eq i64 %242, 0
  store i32 -2021430704, i32* %18
  br label %244

; <label>:244:                                    ; preds = %218, %133, %127, %126, %123, %82, %67, %66, %43, %27, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @_ZN9__gnu_cxxltIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %struct.T*, %struct.T** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %struct.T*, %struct.T** %9, align 8
  %11 = icmp ult %struct.T* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %struct.T*, %struct.T*) #4 align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %1, %struct.T** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %2, %struct.T** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, i32 0, i32 0
  %11 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %12 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %13 = call zeroext i1 @"_ZZ4mainENK3$_0clERKZ4mainE1TS2_"(%class.anon* %10, %struct.T* dereferenceable(16) %11, %struct.T* dereferenceable(16) %12)
  ret i1 %13
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_T0_"(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.301
  %7 = load i32, i32* @y.302
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1448571699, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %115
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1448571699, label %19
    i32 -2264329, label %27
    i32 1881048306, label %78
    i32 -1571895144, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %115

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2264329, i32 -1571895144
  store i32 %26, i32* %15
  br label %115

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %32 = alloca %struct.T, align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %struct.T, align 8
  %35 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %struct.T* %0, %struct.T** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %struct.T* %1, %struct.T** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %struct.T* %2, %struct.T** %38, align 8
  %39 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %30) #3
  %40 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %39) #3
  %41 = bitcast %struct.T* %32 to i8*
  %42 = bitcast %struct.T* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 16, i32 8, i1 false)
  %43 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %28) #3
  %44 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %43) #3
  %45 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %30) #3
  %46 = bitcast %struct.T* %45 to i8*
  %47 = bitcast %struct.T* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %29, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %28) #3
  %51 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %32) #3
  %52 = bitcast %struct.T* %34 to i8*
  %53 = bitcast %struct.T* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %35 to i8*
  %55 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 1, i32 1, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %57 = load %struct.T*, %struct.T** %56, align 8
  %58 = bitcast %struct.T* %34 to { i64, i64 }*
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %58, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  call void @"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_T0_SD_T1_T2_"(%struct.T* %57, i64 0, i64 %50, i64 %60, i64 %62)
  %63 = load i32, i32* @x.301
  %64 = load i32, i32* @y.302
  %65 = add i32 %63, 1443981356
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 1443981356
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 1881048306, i32 -1571895144
  store i32 %77, i32* %15
  br label %115

; <label>:78:                                     ; preds = %16
  ret void

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %83 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %84 = alloca %struct.T, align 8
  %85 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %86 = alloca %struct.T, align 8
  %87 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %80, i32 0, i32 0
  store %struct.T* %0, %struct.T** %88, align 8
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %81, i32 0, i32 0
  store %struct.T* %1, %struct.T** %89, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %82, i32 0, i32 0
  store %struct.T* %2, %struct.T** %90, align 8
  %91 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %82) #3
  %92 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %91) #3
  %93 = bitcast %struct.T* %84 to i8*
  %94 = bitcast %struct.T* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 16, i32 8, i1 false)
  %95 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %80) #3
  %96 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %95) #3
  %97 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %82) #3
  %98 = bitcast %struct.T* %97 to i8*
  %99 = bitcast %struct.T* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 16, i32 8, i1 false)
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator"* %85 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = call i64 @_ZN9__gnu_cxxmiIPZ4mainE1TSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %81, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %80) #3
  %103 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %84) #3
  %104 = bitcast %struct.T* %86 to i8*
  %105 = bitcast %struct.T* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 16, i32 8, i1 false)
  %106 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %87 to i8*
  %107 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 1, i32 1, i1 false)
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %85, i32 0, i32 0
  %109 = load %struct.T*, %struct.T** %108, align 8
  %110 = bitcast %struct.T* %86 to { i64, i64 }*
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %110, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %110, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  call void @"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_T0_SD_T1_T2_"(%struct.T* %109, i64 0, i64 %102, i64 %112, i64 %114)
  store i32 -2264329, i32* %15
  br label %115

; <label>:115:                                    ; preds = %79, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %struct.T*, %struct.T** %4, align 8
  %6 = getelementptr inbounds %struct.T, %struct.T* %5, i32 1
  store %struct.T* %6, %struct.T** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #4 align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.T*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %struct.T*, %struct.T** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %struct.T, %struct.T* %9, i64 %10
  store %struct.T* %11, %struct.T** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %3, %struct.T** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %13 = load %struct.T*, %struct.T** %12, align 8
  ret %struct.T* %13
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %struct.T*, %struct.T** %4, align 8
  ret %struct.T* %5
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_T0_SD_T1_T2_"(%struct.T*, i64, i64, i64, i64) #0 {
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %7 = alloca %struct.T*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca i64*
  %16 = alloca i64*
  %17 = alloca i64*
  %18 = alloca i64*
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %20 = alloca %struct.T*
  %21 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %22 = alloca i1
  %23 = alloca i1
  %24 = load i32, i32* @x.309
  %25 = load i32, i32* @y.310
  %26 = sub i32 %24, 1365444129
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1365444129
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  store i1 %32, i1* %23
  %33 = icmp slt i32 %25, 10
  store i1 %33, i1* %22
  %34 = alloca i32
  store i32 173087471, i32* %34
  br label %35

; <label>:35:                                     ; preds = %5, %568
  %36 = load i32, i32* %34
  switch i32 %36, label %37 [
    i32 173087471, label %38
    i32 207502805, label %58
    i32 -157796973, label %118
    i32 1054469975, label %119
    i32 -1596214710, label %131
    i32 2139533932, label %165
    i32 955406205, label %172
    i32 -962857679, label %199
    i32 896030317, label %249
    i32 -304996416, label %250
    i32 1477117349, label %263
    i32 291351190, label %275
    i32 67232687, label %291
    i32 -1608331712, label %356
    i32 -1468780048, label %357
    i32 1807402653, label %384
    i32 1014639179, label %409
    i32 2075274926, label %432
  ]

; <label>:37:                                     ; preds = %35
  br label %568

; <label>:38:                                     ; preds = %35
  %39 = load volatile i1, i1* %23
  %40 = load volatile i1, i1* %22
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 207502805, i32 1807402653
  store i32 %57, i32* %34
  br label %568

; <label>:58:                                     ; preds = %35
  %59 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %59, %"class.__gnu_cxx::__normal_iterator"** %21
  %60 = alloca %struct.T, align 8
  store %struct.T* %60, %struct.T** %20
  %61 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %61, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %19
  %62 = alloca i64, align 8
  store i64* %62, i64** %18
  %63 = alloca i64, align 8
  store i64* %63, i64** %17
  %64 = alloca i64, align 8
  store i64* %64, i64** %16
  %65 = alloca i64, align 8
  store i64* %65, i64** %15
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %66, %"class.__gnu_cxx::__normal_iterator"** %14
  %67 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %67, %"class.__gnu_cxx::__normal_iterator"** %13
  %68 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %68, %"class.__gnu_cxx::__normal_iterator"** %12
  %69 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %69, %"class.__gnu_cxx::__normal_iterator"** %11
  %70 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %70, %"class.__gnu_cxx::__normal_iterator"** %10
  %71 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %71, %"class.__gnu_cxx::__normal_iterator"** %9
  %72 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %72, %"class.__gnu_cxx::__normal_iterator"** %8
  %73 = alloca %struct.T, align 8
  store %struct.T* %73, %struct.T** %7
  %74 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %75 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %75, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6
  %76 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %77 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  store %struct.T* %0, %struct.T** %78, align 8
  %79 = load volatile %struct.T*, %struct.T** %20
  %80 = bitcast %struct.T* %79 to { i64, i64 }*
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %80, i32 0, i32 0
  store i64 %3, i64* %81, align 8
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %80, i32 0, i32 1
  store i64 %4, i64* %82, align 8
  %83 = load volatile i64*, i64** %18
  store i64 %1, i64* %83, align 8
  %84 = load volatile i64*, i64** %17
  store i64 %2, i64* %84, align 8
  %85 = load volatile i64*, i64** %18
  %86 = load i64, i64* %85, align 8
  %87 = load volatile i64*, i64** %16
  store i64 %86, i64* %87, align 8
  %88 = load volatile i64*, i64** %18
  %89 = load i64, i64* %88, align 8
  %90 = load volatile i64*, i64** %15
  store i64 %89, i64* %90, align 8
  %91 = load i32, i32* @x.309
  %92 = load i32, i32* @y.310
  %93 = add i32 %91, -608756913
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -608756913
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -157796973, i32 1807402653
  store i32 %117, i32* %34
  br label %568

; <label>:118:                                    ; preds = %35
  store i32 1054469975, i32* %34
  br label %568

; <label>:119:                                    ; preds = %35
  %120 = load volatile i64*, i64** %15
  %121 = load i64, i64* %120, align 8
  %122 = load volatile i64*, i64** %17
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 2570131263504944427
  %125 = sub i64 %124, 1
  %126 = sub i64 %125, 2570131263504944427
  %127 = sub nsw i64 %123, 1
  %128 = sdiv i64 %126, 2
  %129 = icmp slt i64 %121, %128
  %130 = select i1 %129, i32 -1596214710, i32 -304996416
  store i32 %130, i32* %34
  br label %568

; <label>:131:                                    ; preds = %35
  %132 = load volatile i64*, i64** %15
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 0, %133
  %135 = sub i64 0, 1
  %136 = add i64 %134, %135
  %137 = sub i64 0, %136
  %138 = add nsw i64 %133, 1
  %139 = mul nsw i64 2, %137
  %140 = load volatile i64*, i64** %15
  store i64 %139, i64* %140, align 8
  %141 = load volatile i64*, i64** %15
  %142 = load i64, i64* %141, align 8
  %143 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %144 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %143, i64 %142) #3
  %145 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %145, i32 0, i32 0
  store %struct.T* %144, %struct.T** %146, align 8
  %147 = load volatile i64*, i64** %15
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 0, 1
  %150 = add i64 %148, %149
  %151 = sub nsw i64 %148, 1
  %152 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %153 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %152, i64 %150) #3
  %154 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %155 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %154, i32 0, i32 0
  store %struct.T* %153, %struct.T** %155, align 8
  %156 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %157 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %156, i32 0, i32 0
  %158 = load %struct.T*, %struct.T** %157, align 8
  %159 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %160 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %159, i32 0, i32 0
  %161 = load %struct.T*, %struct.T** %160, align 8
  %162 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %19
  %163 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %162, %struct.T* %158, %struct.T* %161)
  %164 = select i1 %163, i32 2139533932, i32 955406205
  store i32 %164, i32* %34
  br label %568

; <label>:165:                                    ; preds = %35
  %166 = load volatile i64*, i64** %15
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 0, -1
  %169 = sub i64 %167, %168
  %170 = add nsw i64 %167, -1
  %171 = load volatile i64*, i64** %15
  store i64 %169, i64* %171, align 8
  store i32 955406205, i32* %34
  br label %568

; <label>:172:                                    ; preds = %35
  %173 = load i32, i32* @x.309
  %174 = load i32, i32* @y.310
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  %198 = select i1 %196, i32 -962857679, i32 1014639179
  store i32 %198, i32* %34
  br label %568

; <label>:199:                                    ; preds = %35
  %200 = load volatile i64*, i64** %15
  %201 = load i64, i64* %200, align 8
  %202 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %203 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %202, i64 %201) #3
  %204 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %205 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %204, i32 0, i32 0
  store %struct.T* %203, %struct.T** %205, align 8
  %206 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %207 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %206) #3
  %208 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %207) #3
  %209 = load volatile i64*, i64** %18
  %210 = load i64, i64* %209, align 8
  %211 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %212 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %211, i64 %210) #3
  %213 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %214 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %213, i32 0, i32 0
  store %struct.T* %212, %struct.T** %214, align 8
  %215 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %216 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %215) #3
  %217 = bitcast %struct.T* %216 to i8*
  %218 = bitcast %struct.T* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %217, i8* %218, i64 16, i32 8, i1 false)
  %219 = load volatile i64*, i64** %15
  %220 = load i64, i64* %219, align 8
  %221 = load volatile i64*, i64** %18
  store i64 %220, i64* %221, align 8
  %222 = load i32, i32* @x.309
  %223 = load i32, i32* @y.310
  %224 = sub i32 %222, 1846080234
  %225 = sub i32 %224, 1
  %226 = add i32 %225, 1846080234
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 false, true
  %235 = and i1 %232, false
  %236 = and i1 %230, %234
  %237 = and i1 %233, false
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 false, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  %248 = select i1 %246, i32 896030317, i32 1014639179
  store i32 %248, i32* %34
  br label %568

; <label>:249:                                    ; preds = %35
  store i32 1054469975, i32* %34
  br label %568

; <label>:250:                                    ; preds = %35
  %251 = load volatile i64*, i64** %17
  %252 = load i64, i64* %251, align 8
  %253 = xor i64 %252, -1
  %254 = xor i64 1, -1
  %255 = xor i64 -6763814253986768824, -1
  %256 = or i64 %253, %254
  %257 = or i64 -6763814253986768824, %255
  %258 = xor i64 %256, -1
  %259 = and i64 %258, %257
  %260 = and i64 %252, 1
  %261 = icmp eq i64 %259, 0
  %262 = select i1 %261, i32 1477117349, i32 -1468780048
  store i32 %262, i32* %34
  br label %568

; <label>:263:                                    ; preds = %35
  %264 = load volatile i64*, i64** %15
  %265 = load i64, i64* %264, align 8
  %266 = load volatile i64*, i64** %17
  %267 = load i64, i64* %266, align 8
  %268 = sub i64 %267, 7937610027175148840
  %269 = sub i64 %268, 2
  %270 = add i64 %269, 7937610027175148840
  %271 = sub nsw i64 %267, 2
  %272 = sdiv i64 %270, 2
  %273 = icmp eq i64 %265, %272
  %274 = select i1 %273, i32 291351190, i32 -1468780048
  store i32 %274, i32* %34
  br label %568

; <label>:275:                                    ; preds = %35
  %276 = load i32, i32* @x.309
  %277 = load i32, i32* @y.310
  %278 = sub i32 %276, 1927219478
  %279 = sub i32 %278, 1
  %280 = add i32 %279, 1927219478
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = and i1 %284, %285
  %287 = xor i1 %284, %285
  %288 = or i1 %286, %287
  %289 = or i1 %284, %285
  %290 = select i1 %288, i32 67232687, i32 2075274926
  store i32 %290, i32* %34
  br label %568

; <label>:291:                                    ; preds = %35
  %292 = load volatile i64*, i64** %15
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %293, -8606770422501234791
  %295 = add i64 %294, 1
  %296 = sub i64 %295, -8606770422501234791
  %297 = add nsw i64 %293, 1
  %298 = mul nsw i64 2, %296
  %299 = load volatile i64*, i64** %15
  store i64 %298, i64* %299, align 8
  %300 = load volatile i64*, i64** %15
  %301 = load i64, i64* %300, align 8
  %302 = sub i64 %301, 3622620060940339409
  %303 = sub i64 %302, 1
  %304 = add i64 %303, 3622620060940339409
  %305 = sub nsw i64 %301, 1
  %306 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %307 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %306, i64 %304) #3
  %308 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %309 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %308, i32 0, i32 0
  store %struct.T* %307, %struct.T** %309, align 8
  %310 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %311 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %310) #3
  %312 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %311) #3
  %313 = load volatile i64*, i64** %18
  %314 = load i64, i64* %313, align 8
  %315 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %316 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %315, i64 %314) #3
  %317 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %318 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %317, i32 0, i32 0
  store %struct.T* %316, %struct.T** %318, align 8
  %319 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %320 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %319) #3
  %321 = bitcast %struct.T* %320 to i8*
  %322 = bitcast %struct.T* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %321, i8* %322, i64 16, i32 8, i1 false)
  %323 = load volatile i64*, i64** %15
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %324, -871808818676688770
  %326 = sub i64 %325, 1
  %327 = add i64 %326, -871808818676688770
  %328 = sub nsw i64 %324, 1
  %329 = load volatile i64*, i64** %18
  store i64 %327, i64* %329, align 8
  %330 = load i32, i32* @x.309
  %331 = load i32, i32* @y.310
  %332 = sub i32 0, 1
  %333 = add i32 %330, %332
  %334 = sub i32 %330, 1
  %335 = mul i32 %330, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %331, 10
  %339 = xor i1 %337, true
  %340 = xor i1 %338, true
  %341 = xor i1 true, true
  %342 = and i1 %339, true
  %343 = and i1 %337, %341
  %344 = and i1 %340, true
  %345 = and i1 %338, %341
  %346 = or i1 %342, %343
  %347 = or i1 %344, %345
  %348 = xor i1 %346, %347
  %349 = or i1 %339, %340
  %350 = xor i1 %349, true
  %351 = or i1 true, %341
  %352 = and i1 %350, %351
  %353 = or i1 %348, %352
  %354 = or i1 %337, %338
  %355 = select i1 %353, i32 -1608331712, i32 2075274926
  store i32 %355, i32* %34
  br label %568

; <label>:356:                                    ; preds = %35
  store i32 -1468780048, i32* %34
  br label %568

; <label>:357:                                    ; preds = %35
  %358 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %359 = bitcast %"class.__gnu_cxx::__normal_iterator"* %358 to i8*
  %360 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %361 = bitcast %"class.__gnu_cxx::__normal_iterator"* %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %359, i8* %361, i64 8, i32 8, i1 false)
  %362 = load volatile i64*, i64** %18
  %363 = load i64, i64* %362, align 8
  %364 = load volatile i64*, i64** %16
  %365 = load i64, i64* %364, align 8
  %366 = load volatile %struct.T*, %struct.T** %20
  %367 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %366) #3
  %368 = load volatile %struct.T*, %struct.T** %7
  %369 = bitcast %struct.T* %368 to i8*
  %370 = bitcast %struct.T* %367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %369, i8* %370, i64 16, i32 8, i1 false)
  %371 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6
  %372 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %371 to i8*
  %373 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %19
  %374 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %373 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %372, i8* %374, i64 1, i32 1, i1 false)
  call void @"_ZN9__gnu_cxx5__ops15__iter_comp_valIZ4mainE3$_0EENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS4_EE"()
  %375 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %376 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %375, i32 0, i32 0
  %377 = load %struct.T*, %struct.T** %376, align 8
  %378 = load volatile %struct.T*, %struct.T** %7
  %379 = bitcast %struct.T* %378 to { i64, i64 }*
  %380 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %379, i32 0, i32 0
  %381 = load i64, i64* %380, align 8
  %382 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %379, i32 0, i32 1
  %383 = load i64, i64* %382, align 8
  call void @"_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valIZ4mainE3$_0EEEvT_T0_SD_T1_T2_"(%struct.T* %377, i64 %363, i64 %365, i64 %381, i64 %383)
  ret void

; <label>:384:                                    ; preds = %35
  %385 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %386 = alloca %struct.T, align 8
  %387 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %388 = alloca i64, align 8
  %389 = alloca i64, align 8
  %390 = alloca i64, align 8
  %391 = alloca i64, align 8
  %392 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %393 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %394 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %395 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %396 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %397 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %398 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %399 = alloca %struct.T, align 8
  %400 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %401 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %402 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %403 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %385, i32 0, i32 0
  store %struct.T* %0, %struct.T** %403, align 8
  %404 = bitcast %struct.T* %386 to { i64, i64 }*
  %405 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %404, i32 0, i32 0
  store i64 %3, i64* %405, align 8
  %406 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %404, i32 0, i32 1
  store i64 %4, i64* %406, align 8
  store i64 %1, i64* %388, align 8
  store i64 %2, i64* %389, align 8
  %407 = load i64, i64* %388, align 8
  store i64 %407, i64* %390, align 8
  %408 = load i64, i64* %388, align 8
  store i64 %408, i64* %391, align 8
  store i32 207502805, i32* %34
  br label %568

; <label>:409:                                    ; preds = %35
  %410 = load volatile i64*, i64** %15
  %411 = load i64, i64* %410, align 8
  %412 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %413 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %412, i64 %411) #3
  %414 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %415 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %414, i32 0, i32 0
  store %struct.T* %413, %struct.T** %415, align 8
  %416 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %417 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %416) #3
  %418 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %417) #3
  %419 = load volatile i64*, i64** %18
  %420 = load i64, i64* %419, align 8
  %421 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %422 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %421, i64 %420) #3
  %423 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %424 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %423, i32 0, i32 0
  store %struct.T* %422, %struct.T** %424, align 8
  %425 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %426 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %425) #3
  %427 = bitcast %struct.T* %426 to i8*
  %428 = bitcast %struct.T* %418 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %427, i8* %428, i64 16, i32 8, i1 false)
  %429 = load volatile i64*, i64** %15
  %430 = load i64, i64* %429, align 8
  %431 = load volatile i64*, i64** %18
  store i64 %430, i64* %431, align 8
  store i32 -962857679, i32* %34
  br label %568

; <label>:432:                                    ; preds = %35
  %433 = load volatile i64*, i64** %15
  %434 = load i64, i64* %433, align 8
  %435 = sub i64 %434, 2362191122378739528
  %436 = sub i64 %435, 1
  %437 = add i64 %436, 2362191122378739528
  %438 = sub i64 %434, 1
  %439 = mul i64 %437, 1
  %440 = sub i64 0, %434
  %441 = add i64 0, %440
  %442 = sub i64 0, %434
  %443 = add i64 %441, -8119819407673470035
  %444 = add i64 %443, 1
  %445 = sub i64 %444, -8119819407673470035
  %446 = add i64 %441, 1
  %447 = shl i64 %434, 1
  %448 = shl i64 %434, 1
  %449 = add i64 0, -2129405034371810212
  %450 = sub i64 %449, %434
  %451 = sub i64 %450, -2129405034371810212
  %452 = sub i64 0, %434
  %453 = sub i64 0, %451
  %454 = sub i64 0, 1
  %455 = add i64 %453, %454
  %456 = sub i64 0, %455
  %457 = add i64 %451, 1
  %458 = sub i64 0, 1523340118798742599
  %459 = sub i64 %458, %434
  %460 = add i64 %459, 1523340118798742599
  %461 = sub i64 0, %434
  %462 = add i64 %460, 6826272231817768852
  %463 = add i64 %462, 1
  %464 = sub i64 %463, 6826272231817768852
  %465 = add i64 %460, 1
  %466 = sub i64 0, 1
  %467 = sub i64 %434, %466
  %468 = add nsw i64 %434, 1
  %469 = shl i64 2, %467
  %470 = sub i64 0, -6937343917172766404
  %471 = sub i64 %470, 2
  %472 = add i64 %471, -6937343917172766404
  %473 = sub i64 0, 2
  %474 = sub i64 %472, -6522078934865251650
  %475 = add i64 %474, %467
  %476 = add i64 %475, -6522078934865251650
  %477 = add i64 %472, %467
  %478 = sub i64 0, 2
  %479 = add i64 0, %478
  %480 = sub i64 0, 2
  %481 = sub i64 0, %479
  %482 = sub i64 0, %467
  %483 = add i64 %481, %482
  %484 = sub i64 0, %483
  %485 = add i64 %479, %467
  %486 = sub i64 2, -5886652957958151360
  %487 = sub i64 %486, %467
  %488 = add i64 %487, -5886652957958151360
  %489 = sub i64 2, %467
  %490 = mul i64 %488, %467
  %491 = add i64 0, 3502653148166426443
  %492 = sub i64 %491, 2
  %493 = sub i64 %492, 3502653148166426443
  %494 = sub i64 0, 2
  %495 = sub i64 0, %467
  %496 = sub i64 %493, %495
  %497 = add i64 %493, %467
  %498 = sub i64 2, 2790377296978820739
  %499 = sub i64 %498, %467
  %500 = add i64 %499, 2790377296978820739
  %501 = sub i64 2, %467
  %502 = mul i64 %500, %467
  %503 = shl i64 2, %467
  %504 = mul nsw i64 2, %467
  %505 = load volatile i64*, i64** %15
  store i64 %504, i64* %505, align 8
  %506 = load volatile i64*, i64** %15
  %507 = load i64, i64* %506, align 8
  %508 = sub i64 0, %507
  %509 = add i64 0, %508
  %510 = sub i64 0, %507
  %511 = sub i64 %509, -3524110200904887481
  %512 = add i64 %511, 1
  %513 = add i64 %512, -3524110200904887481
  %514 = add i64 %509, 1
  %515 = sub i64 %507, -4702970465477720800
  %516 = sub i64 %515, 1
  %517 = add i64 %516, -4702970465477720800
  %518 = sub i64 %507, 1
  %519 = mul i64 %517, 1
  %520 = sub i64 0, 1226366848573850120
  %521 = sub i64 %520, %507
  %522 = add i64 %521, 1226366848573850120
  %523 = sub i64 0, %507
  %524 = sub i64 0, 1
  %525 = sub i64 %522, %524
  %526 = add i64 %522, 1
  %527 = add i64 %507, 4509033065317392410
  %528 = sub i64 %527, 1
  %529 = sub i64 %528, 4509033065317392410
  %530 = sub nsw i64 %507, 1
  %531 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %532 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %531, i64 %529) #3
  %533 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %534 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %533, i32 0, i32 0
  store %struct.T* %532, %struct.T** %534, align 8
  %535 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %536 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %535) #3
  %537 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %536) #3
  %538 = load volatile i64*, i64** %18
  %539 = load i64, i64* %538, align 8
  %540 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %21
  %541 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %540, i64 %539) #3
  %542 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %543 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %542, i32 0, i32 0
  store %struct.T* %541, %struct.T** %543, align 8
  %544 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %545 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %544) #3
  %546 = bitcast %struct.T* %545 to i8*
  %547 = bitcast %struct.T* %537 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %546, i8* %547, i64 16, i32 8, i1 false)
  %548 = load volatile i64*, i64** %15
  %549 = load i64, i64* %548, align 8
  %550 = sub i64 0, %549
  %551 = add i64 0, %550
  %552 = sub i64 0, %549
  %553 = sub i64 0, 1
  %554 = sub i64 %551, %553
  %555 = add i64 %551, 1
  %556 = sub i64 0, %549
  %557 = add i64 0, %556
  %558 = sub i64 0, %549
  %559 = add i64 %557, -1410477753807552925
  %560 = add i64 %559, 1
  %561 = sub i64 %560, -1410477753807552925
  %562 = add i64 %557, 1
  %563 = add i64 %549, -7065685446418321224
  %564 = sub i64 %563, 1
  %565 = sub i64 %564, -7065685446418321224
  %566 = sub nsw i64 %549, 1
  %567 = load volatile i64*, i64** %18
  store i64 %565, i64* %567, align 8
  store i32 67232687, i32* %34
  br label %568

; <label>:568:                                    ; preds = %432, %409, %384, %356, %291, %275, %263, %250, %249, %199, %172, %165, %131, %119, %118, %58, %38, %37
  br label %35
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valIZ4mainE3$_0EEEvT_T0_SD_T1_T2_"(%struct.T*, i64, i64, i64, i64) #0 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %struct.T, align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %struct.T* %0, %struct.T** %18, align 8
  %19 = bitcast %struct.T* %9 to { i64, i64 }*
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  store i64 %3, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  store i64 %4, i64* %21, align 8
  store i64 %1, i64* %11, align 8
  store i64 %2, i64* %12, align 8
  %22 = load i64, i64* %11, align 8
  %23 = sub i64 %22, 3037077491152529442
  %24 = sub i64 %23, 1
  %25 = add i64 %24, 3037077491152529442
  %26 = sub nsw i64 %22, 1
  %27 = sdiv i64 %25, 2
  store i64 %27, i64* %13, align 8
  %28 = alloca i32
  store i32 381689866, i32* %28
  %29 = alloca i1
  br label %30

; <label>:30:                                     ; preds = %5, %267
  %31 = load i32, i32* %28
  switch i32 %31, label %32 [
    i32 381689866, label %33
    i32 550478639, label %38
    i32 653031488, label %66
    i32 -644188918, label %100
    i32 1891162921, label %102
    i32 1988531695, label %131
    i32 -910922081, label %146
    i32 1163456838, label %149
    i32 1194420362, label %177
    i32 -500216150, label %222
    i32 1322256073, label %223
    i32 296020699, label %231
    i32 -1336044417, label %238
    i32 852014774, label %239
  ]

; <label>:32:                                     ; preds = %30
  br label %267

; <label>:33:                                     ; preds = %30
  %34 = load i64, i64* %11, align 8
  %35 = load i64, i64* %12, align 8
  %36 = icmp sgt i64 %34, %35
  %37 = select i1 %36, i32 550478639, i32 1891162921
  store i32 %37, i32* %28
  store i1 false, i1* %29
  br label %267

; <label>:38:                                     ; preds = %30
  %39 = load i32, i32* @x.311
  %40 = load i32, i32* @y.312
  %41 = sub i32 %39, -1861395127
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1861395127
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 653031488, i32 296020699
  store i32 %65, i32* %28
  br label %267

; <label>:66:                                     ; preds = %30
  %67 = load i64, i64* %13, align 8
  %68 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %67) #3
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %struct.T* %68, %struct.T** %69, align 8
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %71 = load %struct.T*, %struct.T** %70, align 8
  %72 = call zeroext i1 @"_ZN9__gnu_cxx5__ops14_Iter_comp_valIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEES6_EEbT_RT0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %10, %struct.T* %71, %struct.T* dereferenceable(16) %9)
  store i1 %72, i1* %7
  %73 = load i32, i32* @x.311
  %74 = load i32, i32* @y.312
  %75 = add i32 %73, 1040869045
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 1040869045
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -644188918, i32 296020699
  store i32 %99, i32* %28
  br label %267

; <label>:100:                                    ; preds = %30
  store i32 1891162921, i32* %28
  %101 = load volatile i1, i1* %7
  store i1 %101, i1* %29
  br label %267

; <label>:102:                                    ; preds = %30
  %103 = load i1, i1* %29
  store i1 %103, i1* %6
  %104 = load i32, i32* @x.311
  %105 = load i32, i32* @y.312
  %106 = add i32 %104, -1683386830
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, -1683386830
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  %130 = select i1 %128, i32 1988531695, i32 -1336044417
  store i32 %130, i32* %28
  br label %267

; <label>:131:                                    ; preds = %30
  %132 = load i32, i32* @x.311
  %133 = load i32, i32* @y.312
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  %145 = select i1 %143, i32 -910922081, i32 -1336044417
  store i32 %145, i32* %28
  br label %267

; <label>:146:                                    ; preds = %30
  %147 = load volatile i1, i1* %6
  %148 = select i1 %147, i32 1163456838, i32 1322256073
  store i32 %148, i32* %28
  br label %267

; <label>:149:                                    ; preds = %30
  %150 = load i32, i32* @x.311
  %151 = load i32, i32* @y.312
  %152 = sub i32 %150, -1070976607
  %153 = sub i32 %152, 1
  %154 = add i32 %153, -1070976607
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 false, true
  %163 = and i1 %160, false
  %164 = and i1 %158, %162
  %165 = and i1 %161, false
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 false, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  %176 = select i1 %174, i32 1194420362, i32 852014774
  store i32 %176, i32* %28
  br label %267

; <label>:177:                                    ; preds = %30
  %178 = load i64, i64* %13, align 8
  %179 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %178) #3
  %180 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %struct.T* %179, %struct.T** %180, align 8
  %181 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %15) #3
  %182 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %181) #3
  %183 = load i64, i64* %11, align 8
  %184 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %183) #3
  %185 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %struct.T* %184, %struct.T** %185, align 8
  %186 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %16) #3
  %187 = bitcast %struct.T* %186 to i8*
  %188 = bitcast %struct.T* %182 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %187, i8* %188, i64 16, i32 8, i1 false)
  %189 = load i64, i64* %13, align 8
  store i64 %189, i64* %11, align 8
  %190 = load i64, i64* %11, align 8
  %191 = sub i64 %190, -317114307874423856
  %192 = sub i64 %191, 1
  %193 = add i64 %192, -317114307874423856
  %194 = sub nsw i64 %190, 1
  %195 = sdiv i64 %193, 2
  store i64 %195, i64* %13, align 8
  %196 = load i32, i32* @x.311
  %197 = load i32, i32* @y.312
  %198 = sub i32 0, 1
  %199 = add i32 %196, %198
  %200 = sub i32 %196, 1
  %201 = mul i32 %196, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %197, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  %221 = select i1 %219, i32 -500216150, i32 852014774
  store i32 %221, i32* %28
  br label %267

; <label>:222:                                    ; preds = %30
  store i32 381689866, i32* %28
  br label %267

; <label>:223:                                    ; preds = %30
  %224 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %9) #3
  %225 = load i64, i64* %11, align 8
  %226 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %225) #3
  %227 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %struct.T* %226, %struct.T** %227, align 8
  %228 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %17) #3
  %229 = bitcast %struct.T* %228 to i8*
  %230 = bitcast %struct.T* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %229, i8* %230, i64 16, i32 8, i1 false)
  ret void

; <label>:231:                                    ; preds = %30
  %232 = load i64, i64* %13, align 8
  %233 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %232) #3
  %234 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %struct.T* %233, %struct.T** %234, align 8
  %235 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %236 = load %struct.T*, %struct.T** %235, align 8
  %237 = call zeroext i1 @"_ZN9__gnu_cxx5__ops14_Iter_comp_valIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEES6_EEbT_RT0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %10, %struct.T* %236, %struct.T* dereferenceable(16) %9)
  store i32 653031488, i32* %28
  br label %267

; <label>:238:                                    ; preds = %30
  store i32 1988531695, i32* %28
  br label %267

; <label>:239:                                    ; preds = %30
  %240 = load i64, i64* %13, align 8
  %241 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %240) #3
  %242 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %struct.T* %241, %struct.T** %242, align 8
  %243 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %15) #3
  %244 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %243) #3
  %245 = load i64, i64* %11, align 8
  %246 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %245) #3
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %struct.T* %246, %struct.T** %247, align 8
  %248 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %16) #3
  %249 = bitcast %struct.T* %248 to i8*
  %250 = bitcast %struct.T* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %249, i8* %250, i64 16, i32 8, i1 false)
  %251 = load i64, i64* %13, align 8
  store i64 %251, i64* %11, align 8
  %252 = load i64, i64* %11, align 8
  %253 = sub i64 0, %252
  %254 = add i64 0, %253
  %255 = sub i64 0, %252
  %256 = add i64 %254, 3161511344040248284
  %257 = add i64 %256, 1
  %258 = sub i64 %257, 3161511344040248284
  %259 = add i64 %254, 1
  %260 = add i64 %252, -1918075196447174758
  %261 = sub i64 %260, 1
  %262 = sub i64 %261, -1918075196447174758
  %263 = sub nsw i64 %252, 1
  %264 = shl i64 %262, 2
  %265 = shl i64 %262, 2
  %266 = sdiv i64 %262, 2
  store i64 %266, i64* %13, align 8
  store i32 1194420362, i32* %28
  br label %267

; <label>:267:                                    ; preds = %239, %238, %231, %222, %177, %149, %146, %131, %102, %100, %66, %38, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define internal void @"_ZN9__gnu_cxx5__ops15__iter_comp_valIZ4mainE3$_0EENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS4_EE"() #0 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %class.anon, align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @"_ZN9__gnu_cxx5__ops14_Iter_comp_valIZ4mainE3$_0EC2ES2_"(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define internal zeroext i1 @"_ZN9__gnu_cxx5__ops14_Iter_comp_valIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEES6_EEbT_RT0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %struct.T*, %struct.T* dereferenceable(16)) #0 align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %6 = alloca %struct.T*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %1, %struct.T** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  store %struct.T* %2, %struct.T** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, i32 0, i32 0
  %10 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %11 = load %struct.T*, %struct.T** %6, align 8
  %12 = call zeroext i1 @"_ZZ4mainENK3$_0clERKZ4mainE1TS2_"(%class.anon* %9, %struct.T* dereferenceable(16) %10, %struct.T* dereferenceable(16) %11)
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZZ4mainENK3$_0clERKZ4mainE1TS2_"(%class.anon*, %struct.T* dereferenceable(16), %struct.T* dereferenceable(16)) #4 align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1, align 1
  %7 = alloca %class.anon*, align 8
  %8 = alloca %struct.T*, align 8
  %9 = alloca %struct.T*, align 8
  store %class.anon* %0, %class.anon** %7, align 8
  store %struct.T* %1, %struct.T** %8, align 8
  store %struct.T* %2, %struct.T** %9, align 8
  %10 = load %class.anon*, %class.anon** %7, align 8
  %11 = load %struct.T*, %struct.T** %8, align 8
  %12 = getelementptr inbounds %struct.T, %struct.T* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %5
  %14 = load %struct.T*, %struct.T** %9, align 8
  %15 = getelementptr inbounds %struct.T, %struct.T* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 -1348406555, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %44
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1348406555, label %21
    i32 -391579755, label %26
    i32 -1834951297, label %34
    i32 690258146, label %42
  ]

; <label>:20:                                     ; preds = %18
  br label %44

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp eq i64 %22, %23
  %25 = select i1 %24, i32 -391579755, i32 -1834951297
  store i32 %25, i32* %17
  br label %44

; <label>:26:                                     ; preds = %18
  %27 = load %struct.T*, %struct.T** %8, align 8
  %28 = getelementptr inbounds %struct.T, %struct.T* %27, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = load %struct.T*, %struct.T** %9, align 8
  %31 = getelementptr inbounds %struct.T, %struct.T* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %29, %32
  store i1 %33, i1* %6, align 1
  store i32 690258146, i32* %17
  br label %44

; <label>:34:                                     ; preds = %18
  %35 = load %struct.T*, %struct.T** %8, align 8
  %36 = getelementptr inbounds %struct.T, %struct.T* %35, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = load %struct.T*, %struct.T** %9, align 8
  %39 = getelementptr inbounds %struct.T, %struct.T* %38, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp sgt i64 %37, %40
  store i1 %41, i1* %6, align 1
  store i32 690258146, i32* %17
  br label %44

; <label>:42:                                     ; preds = %18
  %43 = load i1, i1* %6, align 1
  ret i1 %43

; <label>:44:                                     ; preds = %34, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZN9__gnu_cxx5__ops14_Iter_comp_valIZ4mainE3$_0EC2ES2_"(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #4 align 2 {
  %2 = alloca %class.anon, align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %struct.T*, %struct.T** %4, align 8
  %6 = getelementptr inbounds %struct.T, %struct.T* %5, i32 -1
  store %struct.T* %6, %struct.T** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_SC_SC_T0_"(%struct.T*, %struct.T*, %struct.T*, %struct.T*) #0 {
  %5 = alloca i1
  %6 = alloca %struct.T*
  %7 = alloca %struct.T*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %22 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %struct.T* %0, %struct.T** %35, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %struct.T* %1, %struct.T** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %struct.T* %2, %struct.T** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.T* %3, %struct.T** %38, align 8
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %44 = load %struct.T*, %struct.T** %43, align 8
  store %struct.T* %44, %struct.T** %7
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %46 = load %struct.T*, %struct.T** %45, align 8
  store %struct.T* %46, %struct.T** %6
  %47 = alloca i32
  store i32 1418391843, i32* %47
  br label %48

; <label>:48:                                     ; preds = %4, %400
  %49 = load i32, i32* %47
  switch i32 %49, label %50 [
    i32 1418391843, label %51
    i32 454233195, label %56
    i32 712428329, label %67
    i32 1800332080, label %82
    i32 -1103250552, label %106
    i32 -777675151, label %107
    i32 -671109031, label %118
    i32 -86509825, label %134
    i32 1290471279, label %158
    i32 1825081586, label %159
    i32 -843314417, label %168
    i32 -1571827562, label %184
    i32 1609962401, label %200
    i32 -1019148990, label %201
    i32 1841344982, label %202
    i32 1883180098, label %217
    i32 1524086623, label %253
    i32 1236590566, label %256
    i32 -2087920081, label %265
    i32 2107917282, label %276
    i32 376275982, label %292
    i32 492392721, label %316
    i32 2050541924, label %317
    i32 882484733, label %326
    i32 -1732355909, label %327
    i32 -2143043848, label %343
    i32 -1445499040, label %359
    i32 535019587, label %360
    i32 776160021, label %361
    i32 255156027, label %370
    i32 -231812480, label %379
    i32 -494666342, label %380
    i32 -1693131050, label %390
    i32 -293447205, label %399
  ]

; <label>:50:                                     ; preds = %48
  br label %400

; <label>:51:                                     ; preds = %48
  %52 = load volatile %struct.T*, %struct.T** %7
  %53 = load volatile %struct.T*, %struct.T** %6
  %54 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12, %struct.T* %52, %struct.T* %53)
  %55 = select i1 %54, i32 454233195, i32 1841344982
  store i32 %55, i32* %47
  br label %400

; <label>:56:                                     ; preds = %48
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %62 = load %struct.T*, %struct.T** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %64 = load %struct.T*, %struct.T** %63, align 8
  %65 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12, %struct.T* %62, %struct.T* %64)
  %66 = select i1 %65, i32 712428329, i32 -777675151
  store i32 %66, i32* %47
  br label %400

; <label>:67:                                     ; preds = %48
  %68 = load i32, i32* @x.323
  %69 = load i32, i32* @y.324
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1800332080, i32 776160021
  store i32 %81, i32* %47
  br label %400

; <label>:82:                                     ; preds = %48
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %88 = load %struct.T*, %struct.T** %87, align 8
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %90 = load %struct.T*, %struct.T** %89, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %88, %struct.T* %90)
  %91 = load i32, i32* @x.323
  %92 = load i32, i32* @y.324
  %93 = sub i32 %91, 1634944412
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 1634944412
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 -1103250552, i32 776160021
  store i32 %105, i32* %47
  br label %400

; <label>:106:                                    ; preds = %48
  store i32 -1019148990, i32* %47
  br label %400

; <label>:107:                                    ; preds = %48
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator"* %19 to i8*
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 8, i32 8, i1 false)
  %110 = bitcast %"class.__gnu_cxx::__normal_iterator"* %20 to i8*
  %111 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 8, i32 8, i1 false)
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  %113 = load %struct.T*, %struct.T** %112, align 8
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %115 = load %struct.T*, %struct.T** %114, align 8
  %116 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12, %struct.T* %113, %struct.T* %115)
  %117 = select i1 %116, i32 -671109031, i32 1825081586
  store i32 %117, i32* %47
  br label %400

; <label>:118:                                    ; preds = %48
  %119 = load i32, i32* @x.323
  %120 = load i32, i32* @y.324
  %121 = add i32 %119, -550600275
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -550600275
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -86509825, i32 255156027
  store i32 %133, i32* %47
  br label %400

; <label>:134:                                    ; preds = %48
  %135 = bitcast %"class.__gnu_cxx::__normal_iterator"* %21 to i8*
  %136 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 8, i32 8, i1 false)
  %137 = bitcast %"class.__gnu_cxx::__normal_iterator"* %22 to i8*
  %138 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 8, i1 false)
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  %140 = load %struct.T*, %struct.T** %139, align 8
  %141 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  %142 = load %struct.T*, %struct.T** %141, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %140, %struct.T* %142)
  %143 = load i32, i32* @x.323
  %144 = load i32, i32* @y.324
  %145 = add i32 %143, 1628361712
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, 1628361712
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 1290471279, i32 255156027
  store i32 %157, i32* %47
  br label %400

; <label>:158:                                    ; preds = %48
  store i32 -843314417, i32* %47
  br label %400

; <label>:159:                                    ; preds = %48
  %160 = bitcast %"class.__gnu_cxx::__normal_iterator"* %23 to i8*
  %161 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 8, i32 8, i1 false)
  %162 = bitcast %"class.__gnu_cxx::__normal_iterator"* %24 to i8*
  %163 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 8, i32 8, i1 false)
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %23, i32 0, i32 0
  %165 = load %struct.T*, %struct.T** %164, align 8
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %24, i32 0, i32 0
  %167 = load %struct.T*, %struct.T** %166, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %165, %struct.T* %167)
  store i32 -843314417, i32* %47
  br label %400

; <label>:168:                                    ; preds = %48
  %169 = load i32, i32* @x.323
  %170 = load i32, i32* @y.324
  %171 = add i32 %169, -36318340
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -36318340
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 -1571827562, i32 -231812480
  store i32 %183, i32* %47
  br label %400

; <label>:184:                                    ; preds = %48
  %185 = load i32, i32* @x.323
  %186 = load i32, i32* @y.324
  %187 = add i32 %185, 1830107589
  %188 = sub i32 %187, 1
  %189 = sub i32 %188, 1830107589
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  %199 = select i1 %197, i32 1609962401, i32 -231812480
  store i32 %199, i32* %47
  br label %400

; <label>:200:                                    ; preds = %48
  store i32 -1019148990, i32* %47
  br label %400

; <label>:201:                                    ; preds = %48
  store i32 535019587, i32* %47
  br label %400

; <label>:202:                                    ; preds = %48
  %203 = load i32, i32* @x.323
  %204 = load i32, i32* @y.324
  %205 = sub i32 0, 1
  %206 = add i32 %203, %205
  %207 = sub i32 %203, 1
  %208 = mul i32 %203, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %204, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  %216 = select i1 %214, i32 1883180098, i32 -494666342
  store i32 %216, i32* %47
  br label %400

; <label>:217:                                    ; preds = %48
  %218 = bitcast %"class.__gnu_cxx::__normal_iterator"* %25 to i8*
  %219 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %218, i8* %219, i64 8, i32 8, i1 false)
  %220 = bitcast %"class.__gnu_cxx::__normal_iterator"* %26 to i8*
  %221 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 8, i32 8, i1 false)
  %222 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  %223 = load %struct.T*, %struct.T** %222, align 8
  %224 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  %225 = load %struct.T*, %struct.T** %224, align 8
  %226 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12, %struct.T* %223, %struct.T* %225)
  store i1 %226, i1* %5
  %227 = load i32, i32* @x.323
  %228 = load i32, i32* @y.324
  %229 = sub i32 0, 1
  %230 = add i32 %227, %229
  %231 = sub i32 %227, 1
  %232 = mul i32 %227, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %228, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 true, true
  %239 = and i1 %236, true
  %240 = and i1 %234, %238
  %241 = and i1 %237, true
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 true, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  %252 = select i1 %250, i32 1524086623, i32 -494666342
  store i32 %252, i32* %47
  br label %400

; <label>:253:                                    ; preds = %48
  %254 = load volatile i1, i1* %5
  %255 = select i1 %254, i32 1236590566, i32 -2087920081
  store i32 %255, i32* %47
  br label %400

; <label>:256:                                    ; preds = %48
  %257 = bitcast %"class.__gnu_cxx::__normal_iterator"* %27 to i8*
  %258 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %257, i8* %258, i64 8, i32 8, i1 false)
  %259 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  %260 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %259, i8* %260, i64 8, i32 8, i1 false)
  %261 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %262 = load %struct.T*, %struct.T** %261, align 8
  %263 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %264 = load %struct.T*, %struct.T** %263, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %262, %struct.T* %264)
  store i32 -1732355909, i32* %47
  br label %400

; <label>:265:                                    ; preds = %48
  %266 = bitcast %"class.__gnu_cxx::__normal_iterator"* %29 to i8*
  %267 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %266, i8* %267, i64 8, i32 8, i1 false)
  %268 = bitcast %"class.__gnu_cxx::__normal_iterator"* %30 to i8*
  %269 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %268, i8* %269, i64 8, i32 8, i1 false)
  %270 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %271 = load %struct.T*, %struct.T** %270, align 8
  %272 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %273 = load %struct.T*, %struct.T** %272, align 8
  %274 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12, %struct.T* %271, %struct.T* %273)
  %275 = select i1 %274, i32 2107917282, i32 2050541924
  store i32 %275, i32* %47
  br label %400

; <label>:276:                                    ; preds = %48
  %277 = load i32, i32* @x.323
  %278 = load i32, i32* @y.324
  %279 = sub i32 %277, -1787006262
  %280 = sub i32 %279, 1
  %281 = add i32 %280, -1787006262
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  %291 = select i1 %289, i32 376275982, i32 -1693131050
  store i32 %291, i32* %47
  br label %400

; <label>:292:                                    ; preds = %48
  %293 = bitcast %"class.__gnu_cxx::__normal_iterator"* %31 to i8*
  %294 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %293, i8* %294, i64 8, i32 8, i1 false)
  %295 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  %296 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %295, i8* %296, i64 8, i32 8, i1 false)
  %297 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  %298 = load %struct.T*, %struct.T** %297, align 8
  %299 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  %300 = load %struct.T*, %struct.T** %299, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %298, %struct.T* %300)
  %301 = load i32, i32* @x.323
  %302 = load i32, i32* @y.324
  %303 = sub i32 %301, 833899695
  %304 = sub i32 %303, 1
  %305 = add i32 %304, 833899695
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = and i1 %309, %310
  %312 = xor i1 %309, %310
  %313 = or i1 %311, %312
  %314 = or i1 %309, %310
  %315 = select i1 %313, i32 492392721, i32 -1693131050
  store i32 %315, i32* %47
  br label %400

; <label>:316:                                    ; preds = %48
  store i32 882484733, i32* %47
  br label %400

; <label>:317:                                    ; preds = %48
  %318 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  %319 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %318, i8* %319, i64 8, i32 8, i1 false)
  %320 = bitcast %"class.__gnu_cxx::__normal_iterator"* %34 to i8*
  %321 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %320, i8* %321, i64 8, i32 8, i1 false)
  %322 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %323 = load %struct.T*, %struct.T** %322, align 8
  %324 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %325 = load %struct.T*, %struct.T** %324, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %323, %struct.T* %325)
  store i32 882484733, i32* %47
  br label %400

; <label>:326:                                    ; preds = %48
  store i32 -1732355909, i32* %47
  br label %400

; <label>:327:                                    ; preds = %48
  %328 = load i32, i32* @x.323
  %329 = load i32, i32* @y.324
  %330 = add i32 %328, 239374769
  %331 = sub i32 %330, 1
  %332 = sub i32 %331, 239374769
  %333 = sub i32 %328, 1
  %334 = mul i32 %328, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %329, 10
  %338 = and i1 %336, %337
  %339 = xor i1 %336, %337
  %340 = or i1 %338, %339
  %341 = or i1 %336, %337
  %342 = select i1 %340, i32 -2143043848, i32 -293447205
  store i32 %342, i32* %47
  br label %400

; <label>:343:                                    ; preds = %48
  %344 = load i32, i32* @x.323
  %345 = load i32, i32* @y.324
  %346 = add i32 %344, -1827687031
  %347 = sub i32 %346, 1
  %348 = sub i32 %347, -1827687031
  %349 = sub i32 %344, 1
  %350 = mul i32 %344, %348
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %345, 10
  %354 = and i1 %352, %353
  %355 = xor i1 %352, %353
  %356 = or i1 %354, %355
  %357 = or i1 %352, %353
  %358 = select i1 %356, i32 -1445499040, i32 -293447205
  store i32 %358, i32* %47
  br label %400

; <label>:359:                                    ; preds = %48
  store i32 535019587, i32* %47
  br label %400

; <label>:360:                                    ; preds = %48
  ret void

; <label>:361:                                    ; preds = %48
  %362 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %363 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %362, i8* %363, i64 8, i32 8, i1 false)
  %364 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %365 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %364, i8* %365, i64 8, i32 8, i1 false)
  %366 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %367 = load %struct.T*, %struct.T** %366, align 8
  %368 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %369 = load %struct.T*, %struct.T** %368, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %367, %struct.T* %369)
  store i32 1800332080, i32* %47
  br label %400

; <label>:370:                                    ; preds = %48
  %371 = bitcast %"class.__gnu_cxx::__normal_iterator"* %21 to i8*
  %372 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %371, i8* %372, i64 8, i32 8, i1 false)
  %373 = bitcast %"class.__gnu_cxx::__normal_iterator"* %22 to i8*
  %374 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %373, i8* %374, i64 8, i32 8, i1 false)
  %375 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  %376 = load %struct.T*, %struct.T** %375, align 8
  %377 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  %378 = load %struct.T*, %struct.T** %377, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %376, %struct.T* %378)
  store i32 -86509825, i32* %47
  br label %400

; <label>:379:                                    ; preds = %48
  store i32 -1571827562, i32* %47
  br label %400

; <label>:380:                                    ; preds = %48
  %381 = bitcast %"class.__gnu_cxx::__normal_iterator"* %25 to i8*
  %382 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %381, i8* %382, i64 8, i32 8, i1 false)
  %383 = bitcast %"class.__gnu_cxx::__normal_iterator"* %26 to i8*
  %384 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %383, i8* %384, i64 8, i32 8, i1 false)
  %385 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  %386 = load %struct.T*, %struct.T** %385, align 8
  %387 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  %388 = load %struct.T*, %struct.T** %387, align 8
  %389 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12, %struct.T* %386, %struct.T* %388)
  store i32 1883180098, i32* %47
  br label %400

; <label>:390:                                    ; preds = %48
  %391 = bitcast %"class.__gnu_cxx::__normal_iterator"* %31 to i8*
  %392 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %391, i8* %392, i64 8, i32 8, i1 false)
  %393 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  %394 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %393, i8* %394, i64 8, i32 8, i1 false)
  %395 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  %396 = load %struct.T*, %struct.T** %395, align 8
  %397 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  %398 = load %struct.T*, %struct.T** %397, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %396, %struct.T* %398)
  store i32 376275982, i32* %47
  br label %400

; <label>:399:                                    ; preds = %48
  store i32 -2143043848, i32* %47
  br label %400

; <label>:400:                                    ; preds = %399, %390, %380, %379, %370, %361, %359, %343, %327, %326, %317, %316, %292, %276, %265, %256, %253, %217, %202, %201, %200, %184, %168, %159, %158, %134, %118, %107, %106, %82, %67, %56, %51, %50
  br label %48
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #4 align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.T*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %struct.T*, %struct.T** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = sub i64 0, 3565781180631826694
  %12 = sub i64 %11, %10
  %13 = add i64 %12, 3565781180631826694
  %14 = sub i64 0, %10
  %15 = getelementptr inbounds %struct.T, %struct.T* %9, i64 %13
  store %struct.T* %15, %struct.T** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %3, %struct.T** dereferenceable(8) %6) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %17 = load %struct.T*, %struct.T** %16, align 8
  ret %struct.T* %17
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @"_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEET_SC_SC_SC_T0_"(%struct.T*, %struct.T*, %struct.T*) #4 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.327
  %20 = load i32, i32* @y.328
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  store i1 %26, i1* %18
  %27 = icmp slt i32 %20, 10
  store i1 %27, i1* %17
  %28 = alloca i32
  store i32 305240862, i32* %28
  br label %29

; <label>:29:                                     ; preds = %3, %495
  %30 = load i32, i32* %28
  switch i32 %30, label %31 [
    i32 305240862, label %32
    i32 1113520571, label %52
    i32 -328213167, label %85
    i32 2128678770, label %86
    i32 -632099498, label %113
    i32 -1866347936, label %129
    i32 -1139605469, label %130
    i32 -1388519212, label %146
    i32 816604158, label %177
    i32 937103968, label %180
    i32 1991974648, label %208
    i32 -125155750, label %226
    i32 -297253942, label %227
    i32 -1143148372, label %242
    i32 269821997, label %272
    i32 -1894589427, label %273
    i32 1801847060, label %301
    i32 1745457535, label %345
    i32 211253913, label %348
    i32 -677054310, label %376
    i32 -1284864022, label %405
    i32 1299588270, label %406
    i32 -937342581, label %411
    i32 563793471, label %419
    i32 -2126914227, label %436
    i32 -249799147, label %451
    i32 -1087645279, label %452
    i32 -798900909, label %469
    i32 102260648, label %472
    i32 -1304854697, label %475
    i32 88955978, label %492
  ]

; <label>:31:                                     ; preds = %29
  br label %495

; <label>:32:                                     ; preds = %29
  %33 = load volatile i1, i1* %18
  %34 = load volatile i1, i1* %17
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 1113520571, i32 -2126914227
  store i32 %51, i32* %28
  br label %495

; <label>:52:                                     ; preds = %29
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %53, %"class.__gnu_cxx::__normal_iterator"** %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %54, %"class.__gnu_cxx::__normal_iterator"** %15
  %55 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %55, %"class.__gnu_cxx::__normal_iterator"** %14
  %56 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %56, %"class.__gnu_cxx::__normal_iterator"** %13
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %57, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %58 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %58, %"class.__gnu_cxx::__normal_iterator"** %11
  %59 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %59, %"class.__gnu_cxx::__normal_iterator"** %10
  %60 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %60, %"class.__gnu_cxx::__normal_iterator"** %9
  %61 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %61, %"class.__gnu_cxx::__normal_iterator"** %8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %62, %"class.__gnu_cxx::__normal_iterator"** %7
  %63 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %63, %"class.__gnu_cxx::__normal_iterator"** %6
  %64 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  store %struct.T* %0, %struct.T** %65, align 8
  %66 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  store %struct.T* %1, %struct.T** %67, align 8
  %68 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %68, i32 0, i32 0
  store %struct.T* %2, %struct.T** %69, align 8
  %70 = load i32, i32* @x.327
  %71 = load i32, i32* @y.328
  %72 = add i32 %70, -1056562902
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1056562902
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -328213167, i32 -2126914227
  store i32 %84, i32* %28
  br label %495

; <label>:85:                                     ; preds = %29
  store i32 2128678770, i32* %28
  br label %495

; <label>:86:                                     ; preds = %29
  %87 = load i32, i32* @x.327
  %88 = load i32, i32* @y.328
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 -632099498, i32 -249799147
  store i32 %112, i32* %28
  br label %495

; <label>:113:                                    ; preds = %29
  %114 = load i32, i32* @x.327
  %115 = load i32, i32* @y.328
  %116 = sub i32 %114, 54793589
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 54793589
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 -1866347936, i32 -249799147
  store i32 %128, i32* %28
  br label %495

; <label>:129:                                    ; preds = %29
  store i32 -1139605469, i32* %28
  br label %495

; <label>:130:                                    ; preds = %29
  %131 = load i32, i32* @x.327
  %132 = load i32, i32* @y.328
  %133 = add i32 %131, 1498847446
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, 1498847446
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  %145 = select i1 %143, i32 -1388519212, i32 -1087645279
  store i32 %145, i32* %28
  br label %495

; <label>:146:                                    ; preds = %29
  %147 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %148 = bitcast %"class.__gnu_cxx::__normal_iterator"* %147 to i8*
  %149 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %150 = bitcast %"class.__gnu_cxx::__normal_iterator"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %150, i64 8, i32 8, i1 false)
  %151 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %152 = bitcast %"class.__gnu_cxx::__normal_iterator"* %151 to i8*
  %153 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %154 = bitcast %"class.__gnu_cxx::__normal_iterator"* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %152, i8* %154, i64 8, i32 8, i1 false)
  %155 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %155, i32 0, i32 0
  %157 = load %struct.T*, %struct.T** %156, align 8
  %158 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %158, i32 0, i32 0
  %160 = load %struct.T*, %struct.T** %159, align 8
  %161 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %162 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %161, %struct.T* %157, %struct.T* %160)
  store i1 %162, i1* %5
  %163 = load i32, i32* @x.327
  %164 = load i32, i32* @y.328
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  %176 = select i1 %174, i32 816604158, i32 -1087645279
  store i32 %176, i32* %28
  br label %495

; <label>:177:                                    ; preds = %29
  %178 = load volatile i1, i1* %5
  %179 = select i1 %178, i32 937103968, i32 -297253942
  store i32 %179, i32* %28
  br label %495

; <label>:180:                                    ; preds = %29
  %181 = load i32, i32* @x.327
  %182 = load i32, i32* @y.328
  %183 = sub i32 %181, 40717519
  %184 = sub i32 %183, 1
  %185 = add i32 %184, 40717519
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 1991974648, i32 -798900909
  store i32 %207, i32* %28
  br label %495

; <label>:208:                                    ; preds = %29
  %209 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %210 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %209) #3
  %211 = load i32, i32* @x.327
  %212 = load i32, i32* @y.328
  %213 = sub i32 %211, -239366481
  %214 = sub i32 %213, 1
  %215 = add i32 %214, -239366481
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  %225 = select i1 %223, i32 -125155750, i32 -798900909
  store i32 %225, i32* %28
  br label %495

; <label>:226:                                    ; preds = %29
  store i32 -1139605469, i32* %28
  br label %495

; <label>:227:                                    ; preds = %29
  %228 = load i32, i32* @x.327
  %229 = load i32, i32* @y.328
  %230 = sub i32 0, 1
  %231 = add i32 %228, %230
  %232 = sub i32 %228, 1
  %233 = mul i32 %228, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %229, 10
  %237 = and i1 %235, %236
  %238 = xor i1 %235, %236
  %239 = or i1 %237, %238
  %240 = or i1 %235, %236
  %241 = select i1 %239, i32 -1143148372, i32 102260648
  store i32 %241, i32* %28
  br label %495

; <label>:242:                                    ; preds = %29
  %243 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %244 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %243) #3
  %245 = load i32, i32* @x.327
  %246 = load i32, i32* @y.328
  %247 = sub i32 %245, -542937039
  %248 = sub i32 %247, 1
  %249 = add i32 %248, -542937039
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = xor i1 %253, true
  %256 = xor i1 %254, true
  %257 = xor i1 false, true
  %258 = and i1 %255, false
  %259 = and i1 %253, %257
  %260 = and i1 %256, false
  %261 = and i1 %254, %257
  %262 = or i1 %258, %259
  %263 = or i1 %260, %261
  %264 = xor i1 %262, %263
  %265 = or i1 %255, %256
  %266 = xor i1 %265, true
  %267 = or i1 false, %257
  %268 = and i1 %266, %267
  %269 = or i1 %264, %268
  %270 = or i1 %253, %254
  %271 = select i1 %269, i32 269821997, i32 102260648
  store i32 %271, i32* %28
  br label %495

; <label>:272:                                    ; preds = %29
  store i32 -1894589427, i32* %28
  br label %495

; <label>:273:                                    ; preds = %29
  %274 = load i32, i32* @x.327
  %275 = load i32, i32* @y.328
  %276 = sub i32 %274, 1596011108
  %277 = sub i32 %276, 1
  %278 = add i32 %277, 1596011108
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = xor i1 %282, true
  %285 = xor i1 %283, true
  %286 = xor i1 false, true
  %287 = and i1 %284, false
  %288 = and i1 %282, %286
  %289 = and i1 %285, false
  %290 = and i1 %283, %286
  %291 = or i1 %287, %288
  %292 = or i1 %289, %290
  %293 = xor i1 %291, %292
  %294 = or i1 %284, %285
  %295 = xor i1 %294, true
  %296 = or i1 false, %286
  %297 = and i1 %295, %296
  %298 = or i1 %293, %297
  %299 = or i1 %282, %283
  %300 = select i1 %298, i32 1801847060, i32 -1304854697
  store i32 %300, i32* %28
  br label %495

; <label>:301:                                    ; preds = %29
  %302 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %303 = bitcast %"class.__gnu_cxx::__normal_iterator"* %302 to i8*
  %304 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %305 = bitcast %"class.__gnu_cxx::__normal_iterator"* %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %303, i8* %305, i64 8, i32 8, i1 false)
  %306 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %307 = bitcast %"class.__gnu_cxx::__normal_iterator"* %306 to i8*
  %308 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %309 = bitcast %"class.__gnu_cxx::__normal_iterator"* %308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %307, i8* %309, i64 8, i32 8, i1 false)
  %310 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %311 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %310, i32 0, i32 0
  %312 = load %struct.T*, %struct.T** %311, align 8
  %313 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %314 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %313, i32 0, i32 0
  %315 = load %struct.T*, %struct.T** %314, align 8
  %316 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %317 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %316, %struct.T* %312, %struct.T* %315)
  store i1 %317, i1* %4
  %318 = load i32, i32* @x.327
  %319 = load i32, i32* @y.328
  %320 = add i32 %318, 577783694
  %321 = sub i32 %320, 1
  %322 = sub i32 %321, 577783694
  %323 = sub i32 %318, 1
  %324 = mul i32 %318, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %319, 10
  %328 = xor i1 %326, true
  %329 = xor i1 %327, true
  %330 = xor i1 false, true
  %331 = and i1 %328, false
  %332 = and i1 %326, %330
  %333 = and i1 %329, false
  %334 = and i1 %327, %330
  %335 = or i1 %331, %332
  %336 = or i1 %333, %334
  %337 = xor i1 %335, %336
  %338 = or i1 %328, %329
  %339 = xor i1 %338, true
  %340 = or i1 false, %330
  %341 = and i1 %339, %340
  %342 = or i1 %337, %341
  %343 = or i1 %326, %327
  %344 = select i1 %342, i32 1745457535, i32 -1304854697
  store i32 %344, i32* %28
  br label %495

; <label>:345:                                    ; preds = %29
  %346 = load volatile i1, i1* %4
  %347 = select i1 %346, i32 211253913, i32 1299588270
  store i32 %347, i32* %28
  br label %495

; <label>:348:                                    ; preds = %29
  %349 = load i32, i32* @x.327
  %350 = load i32, i32* @y.328
  %351 = sub i32 %349, -1149338725
  %352 = sub i32 %351, 1
  %353 = add i32 %352, -1149338725
  %354 = sub i32 %349, 1
  %355 = mul i32 %349, %353
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %350, 10
  %359 = xor i1 %357, true
  %360 = xor i1 %358, true
  %361 = xor i1 false, true
  %362 = and i1 %359, false
  %363 = and i1 %357, %361
  %364 = and i1 %360, false
  %365 = and i1 %358, %361
  %366 = or i1 %362, %363
  %367 = or i1 %364, %365
  %368 = xor i1 %366, %367
  %369 = or i1 %359, %360
  %370 = xor i1 %369, true
  %371 = or i1 false, %361
  %372 = and i1 %370, %371
  %373 = or i1 %368, %372
  %374 = or i1 %357, %358
  %375 = select i1 %373, i32 -677054310, i32 88955978
  store i32 %375, i32* %28
  br label %495

; <label>:376:                                    ; preds = %29
  %377 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %378 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %377) #3
  %379 = load i32, i32* @x.327
  %380 = load i32, i32* @y.328
  %381 = sub i32 0, 1
  %382 = add i32 %379, %381
  %383 = sub i32 %379, 1
  %384 = mul i32 %379, %382
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %380, 10
  %388 = xor i1 %386, true
  %389 = xor i1 %387, true
  %390 = xor i1 true, true
  %391 = and i1 %388, true
  %392 = and i1 %386, %390
  %393 = and i1 %389, true
  %394 = and i1 %387, %390
  %395 = or i1 %391, %392
  %396 = or i1 %393, %394
  %397 = xor i1 %395, %396
  %398 = or i1 %388, %389
  %399 = xor i1 %398, true
  %400 = or i1 true, %390
  %401 = and i1 %399, %400
  %402 = or i1 %397, %401
  %403 = or i1 %386, %387
  %404 = select i1 %402, i32 -1284864022, i32 88955978
  store i32 %404, i32* %28
  br label %495

; <label>:405:                                    ; preds = %29
  store i32 -1894589427, i32* %28
  br label %495

; <label>:406:                                    ; preds = %29
  %407 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %408 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %409 = call zeroext i1 @_ZN9__gnu_cxxltIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %407, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %408) #3
  %410 = select i1 %409, i32 563793471, i32 -937342581
  store i32 %410, i32* %28
  br label %495

; <label>:411:                                    ; preds = %29
  %412 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %413 = bitcast %"class.__gnu_cxx::__normal_iterator"* %412 to i8*
  %414 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %415 = bitcast %"class.__gnu_cxx::__normal_iterator"* %414 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %413, i8* %415, i64 8, i32 8, i1 false)
  %416 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %16
  %417 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %416, i32 0, i32 0
  %418 = load %struct.T*, %struct.T** %417, align 8
  ret %struct.T* %418

; <label>:419:                                    ; preds = %29
  %420 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %421 = bitcast %"class.__gnu_cxx::__normal_iterator"* %420 to i8*
  %422 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %423 = bitcast %"class.__gnu_cxx::__normal_iterator"* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %421, i8* %423, i64 8, i32 8, i1 false)
  %424 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %425 = bitcast %"class.__gnu_cxx::__normal_iterator"* %424 to i8*
  %426 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %427 = bitcast %"class.__gnu_cxx::__normal_iterator"* %426 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %425, i8* %427, i64 8, i32 8, i1 false)
  %428 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %429 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %428, i32 0, i32 0
  %430 = load %struct.T*, %struct.T** %429, align 8
  %431 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %432 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %431, i32 0, i32 0
  %433 = load %struct.T*, %struct.T** %432, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T* %430, %struct.T* %433)
  %434 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %435 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %434) #3
  store i32 2128678770, i32* %28
  br label %495

; <label>:436:                                    ; preds = %29
  %437 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %438 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %439 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %440 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %441 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %442 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %443 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %444 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %445 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %446 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %447 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %448 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %438, i32 0, i32 0
  store %struct.T* %0, %struct.T** %448, align 8
  %449 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %439, i32 0, i32 0
  store %struct.T* %1, %struct.T** %449, align 8
  %450 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %440, i32 0, i32 0
  store %struct.T* %2, %struct.T** %450, align 8
  store i32 1113520571, i32* %28
  br label %495

; <label>:451:                                    ; preds = %29
  store i32 -632099498, i32* %28
  br label %495

; <label>:452:                                    ; preds = %29
  %453 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %454 = bitcast %"class.__gnu_cxx::__normal_iterator"* %453 to i8*
  %455 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %456 = bitcast %"class.__gnu_cxx::__normal_iterator"* %455 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %454, i8* %456, i64 8, i32 8, i1 false)
  %457 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %458 = bitcast %"class.__gnu_cxx::__normal_iterator"* %457 to i8*
  %459 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %460 = bitcast %"class.__gnu_cxx::__normal_iterator"* %459 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %458, i8* %460, i64 8, i32 8, i1 false)
  %461 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %462 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %461, i32 0, i32 0
  %463 = load %struct.T*, %struct.T** %462, align 8
  %464 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %465 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %464, i32 0, i32 0
  %466 = load %struct.T*, %struct.T** %465, align 8
  %467 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %468 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %467, %struct.T* %463, %struct.T* %466)
  store i32 -1388519212, i32* %28
  br label %495

; <label>:469:                                    ; preds = %29
  %470 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %471 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %470) #3
  store i32 1991974648, i32* %28
  br label %495

; <label>:472:                                    ; preds = %29
  %473 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %474 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %473) #3
  store i32 -1143148372, i32* %28
  br label %495

; <label>:475:                                    ; preds = %29
  %476 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %477 = bitcast %"class.__gnu_cxx::__normal_iterator"* %476 to i8*
  %478 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %479 = bitcast %"class.__gnu_cxx::__normal_iterator"* %478 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %477, i8* %479, i64 8, i32 8, i1 false)
  %480 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %481 = bitcast %"class.__gnu_cxx::__normal_iterator"* %480 to i8*
  %482 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %483 = bitcast %"class.__gnu_cxx::__normal_iterator"* %482 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %481, i8* %483, i64 8, i32 8, i1 false)
  %484 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %485 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %484, i32 0, i32 0
  %486 = load %struct.T*, %struct.T** %485, align 8
  %487 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %488 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %487, i32 0, i32 0
  %489 = load %struct.T*, %struct.T** %488, align 8
  %490 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %12
  %491 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %490, %struct.T* %486, %struct.T* %489)
  store i32 1801847060, i32* %28
  br label %495

; <label>:492:                                    ; preds = %29
  %493 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %494 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %493) #3
  store i32 -677054310, i32* %28
  br label %495

; <label>:495:                                    ; preds = %492, %475, %472, %469, %452, %451, %436, %419, %406, %405, %376, %348, %345, %301, %273, %272, %242, %227, %226, %208, %180, %177, %146, %130, %129, %113, %86, %85, %52, %32, %31
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_EvT_T0_(%struct.T*, %struct.T*) #4 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %struct.T* %0, %struct.T** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %1, %struct.T** %6, align 8
  %7 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %8 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  call void @_ZSt4swapIZ4mainE1TEvRT_S2_(%struct.T* dereferenceable(16) %7, %struct.T* dereferenceable(16) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZSt4swapIZ4mainE1TEvRT_S2_(%struct.T* dereferenceable(16), %struct.T* dereferenceable(16)) #4 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.331
  %6 = load i32, i32* @y.332
  %7 = add i32 %5, -763314656
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -763314656
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 773151927, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %100
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 773151927, label %19
    i32 905741086, label %39
    i32 1581264768, label %82
    i32 -260928437, label %83
  ]

; <label>:18:                                     ; preds = %16
  br label %100

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 905741086, i32 -260928437
  store i32 %38, i32* %15
  br label %100

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.T*, align 8
  %41 = alloca %struct.T*, align 8
  %42 = alloca %struct.T, align 8
  store %struct.T* %0, %struct.T** %40, align 8
  store %struct.T* %1, %struct.T** %41, align 8
  %43 = load %struct.T*, %struct.T** %40, align 8
  %44 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %43) #3
  %45 = bitcast %struct.T* %42 to i8*
  %46 = bitcast %struct.T* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 16, i32 8, i1 false)
  %47 = load %struct.T*, %struct.T** %41, align 8
  %48 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %47) #3
  %49 = load %struct.T*, %struct.T** %40, align 8
  %50 = bitcast %struct.T* %49 to i8*
  %51 = bitcast %struct.T* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 8, i1 false)
  %52 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %42) #3
  %53 = load %struct.T*, %struct.T** %41, align 8
  %54 = bitcast %struct.T* %53 to i8*
  %55 = bitcast %struct.T* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 16, i32 8, i1 false)
  %56 = load i32, i32* @x.331
  %57 = load i32, i32* @y.332
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1581264768, i32 -260928437
  store i32 %81, i32* %15
  br label %100

; <label>:82:                                     ; preds = %16
  ret void

; <label>:83:                                     ; preds = %16
  %84 = alloca %struct.T*, align 8
  %85 = alloca %struct.T*, align 8
  %86 = alloca %struct.T, align 8
  store %struct.T* %0, %struct.T** %84, align 8
  store %struct.T* %1, %struct.T** %85, align 8
  %87 = load %struct.T*, %struct.T** %84, align 8
  %88 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %87) #3
  %89 = bitcast %struct.T* %86 to i8*
  %90 = bitcast %struct.T* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 8, i1 false)
  %91 = load %struct.T*, %struct.T** %85, align 8
  %92 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %91) #3
  %93 = load %struct.T*, %struct.T** %84, align 8
  %94 = bitcast %struct.T* %93 to i8*
  %95 = bitcast %struct.T* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 16, i32 8, i1 false)
  %96 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %86) #3
  %97 = load %struct.T*, %struct.T** %85, align 8
  %98 = bitcast %struct.T* %97 to i8*
  %99 = bitcast %struct.T* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 16, i32 8, i1 false)
  store i32 905741086, i32* %15
  br label %100

; <label>:100:                                    ; preds = %83, %39, %19, %18
  br label %16
}

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #11

; Function Attrs: noinline uwtable
define internal void @"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %struct.T, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %18 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %19 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %0, %struct.T** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %struct.T* %1, %struct.T** %21, align 8
  %22 = alloca i32
  store i32 453877593, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %194
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 453877593, label %26
    i32 1111649210, label %29
    i32 -180479747, label %30
    i32 -313343885, label %33
    i32 404336989, label %49
    i32 -1638571266, label %78
    i32 -2100697891, label %81
    i32 -950466175, label %108
    i32 -2111470884, label %145
    i32 -1301152173, label %148
    i32 80833183, label %171
    i32 -512163993, label %178
    i32 1922127489, label %179
    i32 1502161749, label %181
    i32 -1277836911, label %182
    i32 1986008528, label %184
  ]

; <label>:25:                                     ; preds = %23
  br label %194

; <label>:26:                                     ; preds = %23
  %27 = call zeroext i1 @_ZN9__gnu_cxxeqIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6) #3
  %28 = select i1 %27, i32 1111649210, i32 -180479747
  store i32 %28, i32* %22
  br label %194

; <label>:29:                                     ; preds = %23
  store i32 1502161749, i32* %22
  br label %194

; <label>:30:                                     ; preds = %23
  %31 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 1) #3
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %struct.T* %31, %struct.T** %32, align 8
  store i32 -313343885, i32* %22
  br label %194

; <label>:33:                                     ; preds = %23
  %34 = load i32, i32* @x.333
  %35 = load i32, i32* @y.334
  %36 = add i32 %34, -1934942663
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1934942663
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 404336989, i32 -1277836911
  store i32 %48, i32* %22
  br label %194

; <label>:49:                                     ; preds = %23
  %50 = call zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6) #3
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.333
  %52 = load i32, i32* @y.334
  %53 = sub i32 %51, -1756651963
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1756651963
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -1638571266, i32 -1277836911
  store i32 %77, i32* %22
  br label %194

; <label>:78:                                     ; preds = %23
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 -2100697891, i32 1502161749
  store i32 %80, i32* %22
  br label %194

; <label>:81:                                     ; preds = %23
  %82 = load i32, i32* @x.333
  %83 = load i32, i32* @y.334
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -950466175, i32 1986008528
  store i32 %107, i32* %22
  br label %194

; <label>:108:                                    ; preds = %23
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %110 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 8, i32 8, i1 false)
  %111 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %112 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 8, i32 8, i1 false)
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %114 = load %struct.T*, %struct.T** %113, align 8
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %116 = load %struct.T*, %struct.T** %115, align 8
  %117 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7, %struct.T* %114, %struct.T* %116)
  store i1 %117, i1* %3
  %118 = load i32, i32* @x.333
  %119 = load i32, i32* @y.334
  %120 = sub i32 %118, 478632927
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 478632927
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -2111470884, i32 1986008528
  store i32 %144, i32* %22
  br label %194

; <label>:145:                                    ; preds = %23
  %146 = load volatile i1, i1* %3
  %147 = select i1 %146, i32 -1301152173, i32 80833183
  store i32 %147, i32* %22
  br label %194

; <label>:148:                                    ; preds = %23
  %149 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %150 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %149) #3
  %151 = bitcast %struct.T* %11 to i8*
  %152 = bitcast %struct.T* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %151, i8* %152, i64 16, i32 8, i1 false)
  %153 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %154 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 8, i32 8, i1 false)
  %155 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  %156 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 8, i32 8, i1 false)
  %157 = call %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 1) #3
  %158 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %struct.T* %157, %struct.T** %158, align 8
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %160 = load %struct.T*, %struct.T** %159, align 8
  %161 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %162 = load %struct.T*, %struct.T** %161, align 8
  %163 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  %164 = load %struct.T*, %struct.T** %163, align 8
  %165 = call %struct.T* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_(%struct.T* %160, %struct.T* %162, %struct.T* %164)
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %struct.T* %165, %struct.T** %166, align 8
  %167 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %11) #3
  %168 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %169 = bitcast %struct.T* %168 to i8*
  %170 = bitcast %struct.T* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 16, i32 8, i1 false)
  store i32 -512163993, i32* %22
  br label %194

; <label>:171:                                    ; preds = %23
  %172 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %173 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 8, i32 8, i1 false)
  %174 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %18 to i8*
  %175 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %174, i8* %175, i64 1, i32 1, i1 false)
  call void @"_ZN9__gnu_cxx5__ops15__val_comp_iterIZ4mainE3$_0EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS4_EE"()
  %176 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %177 = load %struct.T*, %struct.T** %176, align 8
  call void @"_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops14_Val_comp_iterIZ4mainE3$_0EEEvT_T0_"(%struct.T* %177)
  store i32 -512163993, i32* %22
  br label %194

; <label>:178:                                    ; preds = %23
  store i32 1922127489, i32* %22
  br label %194

; <label>:179:                                    ; preds = %23
  %180 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  store i32 -313343885, i32* %22
  br label %194

; <label>:181:                                    ; preds = %23
  ret void

; <label>:182:                                    ; preds = %23
  %183 = call zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6) #3
  store i32 404336989, i32* %22
  br label %194

; <label>:184:                                    ; preds = %23
  %185 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %186 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %185, i8* %186, i64 8, i32 8, i1 false)
  %187 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %188 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %187, i8* %188, i64 8, i32 8, i1 false)
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %190 = load %struct.T*, %struct.T** %189, align 8
  %191 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %192 = load %struct.T*, %struct.T** %191, align 8
  %193 = call zeroext i1 @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EclINS_17__normal_iteratorIPZ4mainE1TSt6vectorIS6_SaIS6_EEEESB_EEbT_T0_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7, %struct.T* %190, %struct.T* %192)
  store i32 -950466175, i32* %22
  br label %194

; <label>:194:                                    ; preds = %184, %182, %179, %178, %171, %148, %145, %108, %81, %78, %49, %33, %30, %29, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterIZ4mainE3$_0EEEvT_SC_T0_"(%struct.T*, %struct.T*) #0 {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.T* %0, %struct.T** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %1, %struct.T** %13, align 8
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = alloca i32
  store i32 426129678, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 426129678, label %20
    i32 1623244680, label %36
    i32 642479433, label %52
    i32 -2027712677, label %55
    i32 53430412, label %62
    i32 -70748708, label %64
    i32 1889516557, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* @x.335
  %22 = load i32, i32* @y.336
  %23 = sub i32 %21, 894546916
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 894546916
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 1623244680, i32 1889516557
  store i32 %35, i32* %16
  br label %67

; <label>:36:                                     ; preds = %17
  %37 = call zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.335
  %39 = load i32, i32* @y.336
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 642479433, i32 1889516557
  store i32 %51, i32* %16
  br label %67

; <label>:52:                                     ; preds = %17
  %53 = load volatile i1, i1* %3
  %54 = select i1 %53, i32 -2027712677, i32 -70748708
  store i32 %54, i32* %16
  br label %67

; <label>:55:                                     ; preds = %17
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %10 to i8*
  %59 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 1, i32 1, i1 false)
  call void @"_ZN9__gnu_cxx5__ops15__val_comp_iterIZ4mainE3$_0EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS4_EE"()
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %61 = load %struct.T*, %struct.T** %60, align 8
  call void @"_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops14_Val_comp_iterIZ4mainE3$_0EEEvT_T0_"(%struct.T* %61)
  store i32 53430412, i32* %16
  br label %67

; <label>:62:                                     ; preds = %17
  %63 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  store i32 426129678, i32* %16
  br label %67

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = call zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i32 1623244680, i32* %16
  br label %67

; <label>:67:                                     ; preds = %65, %62, %55, %52, %36, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @_ZN9__gnu_cxxeqIPZ4mainE1TSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %struct.T*, %struct.T** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %struct.T*, %struct.T** %9, align 8
  %11 = icmp eq %struct.T* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %struct.T*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.339
  %8 = load i32, i32* @y.340
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1397285010, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %142
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1397285010, label %20
    i32 1016118132, label %40
    i32 1916700255, label %103
    i32 432895790, label %105
  ]

; <label>:19:                                     ; preds = %17
  br label %142

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1016118132, i32 432895790
  store i32 %39, i32* %16
  br label %142

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store %struct.T* %0, %struct.T** %50, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  store %struct.T* %1, %struct.T** %51, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  store %struct.T* %2, %struct.T** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %46 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %46, i32 0, i32 0
  %56 = load %struct.T*, %struct.T** %55, align 8
  %57 = call %struct.T* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeES9_(%struct.T* %56)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %45, i32 0, i32 0
  store %struct.T* %57, %struct.T** %58, align 8
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator"* %48 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %48, i32 0, i32 0
  %62 = load %struct.T*, %struct.T** %61, align 8
  %63 = call %struct.T* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeES9_(%struct.T* %62)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %47, i32 0, i32 0
  store %struct.T* %63, %struct.T** %64, align 8
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator"* %49 to i8*
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 8, i1 false)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %45, i32 0, i32 0
  %68 = load %struct.T*, %struct.T** %67, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %47, i32 0, i32 0
  %70 = load %struct.T*, %struct.T** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %49, i32 0, i32 0
  %72 = load %struct.T*, %struct.T** %71, align 8
  %73 = call %struct.T* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_(%struct.T* %68, %struct.T* %70, %struct.T* %72)
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %struct.T* %73, %struct.T** %74, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %76 = load %struct.T*, %struct.T** %75, align 8
  store %struct.T* %76, %struct.T** %4
  %77 = load i32, i32* @x.339
  %78 = load i32, i32* @y.340
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 1916700255, i32 432895790
  store i32 %102, i32* %16
  br label %142

; <label>:103:                                    ; preds = %17
  %104 = load volatile %struct.T*, %struct.T** %4
  ret %struct.T* %104

; <label>:105:                                    ; preds = %17
  %106 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %107 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %108 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %109 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %110 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %111 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %112 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %113 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %114 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %107, i32 0, i32 0
  store %struct.T* %0, %struct.T** %115, align 8
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %108, i32 0, i32 0
  store %struct.T* %1, %struct.T** %116, align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %109, i32 0, i32 0
  store %struct.T* %2, %struct.T** %117, align 8
  %118 = bitcast %"class.__gnu_cxx::__normal_iterator"* %111 to i8*
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 8, i1 false)
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %111, i32 0, i32 0
  %121 = load %struct.T*, %struct.T** %120, align 8
  %122 = call %struct.T* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeES9_(%struct.T* %121)
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %110, i32 0, i32 0
  store %struct.T* %122, %struct.T** %123, align 8
  %124 = bitcast %"class.__gnu_cxx::__normal_iterator"* %113 to i8*
  %125 = bitcast %"class.__gnu_cxx::__normal_iterator"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %124, i8* %125, i64 8, i32 8, i1 false)
  %126 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %113, i32 0, i32 0
  %127 = load %struct.T*, %struct.T** %126, align 8
  %128 = call %struct.T* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeES9_(%struct.T* %127)
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %112, i32 0, i32 0
  store %struct.T* %128, %struct.T** %129, align 8
  %130 = bitcast %"class.__gnu_cxx::__normal_iterator"* %114 to i8*
  %131 = bitcast %"class.__gnu_cxx::__normal_iterator"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 8, i32 8, i1 false)
  %132 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %110, i32 0, i32 0
  %133 = load %struct.T*, %struct.T** %132, align 8
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %112, i32 0, i32 0
  %135 = load %struct.T*, %struct.T** %134, align 8
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %114, i32 0, i32 0
  %137 = load %struct.T*, %struct.T** %136, align 8
  %138 = call %struct.T* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_(%struct.T* %133, %struct.T* %135, %struct.T* %137)
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %106, i32 0, i32 0
  store %struct.T* %138, %struct.T** %139, align 8
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %106, i32 0, i32 0
  %141 = load %struct.T*, %struct.T** %140, align 8
  store i32 1016118132, i32* %16
  br label %142

; <label>:142:                                    ; preds = %105, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define internal void @"_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEENS0_5__ops14_Val_comp_iterIZ4mainE3$_0EEEvT_T0_"(%struct.T*) #0 {
  %2 = alloca i1
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %5 = alloca %struct.T, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %struct.T* %0, %struct.T** %8, align 8
  %9 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %10 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %9) #3
  %11 = bitcast %struct.T* %5 to i8*
  %12 = bitcast %struct.T* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 16, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %16 = alloca i32
  store i32 1830870799, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %181
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1830870799, label %20
    i32 1134368451, label %47
    i32 1384387620, label %68
    i32 876005352, label %71
    i32 558424322, label %87
    i32 1770402055, label %123
    i32 -1815743349, label %124
    i32 618502865, label %140
    i32 588867715, label %160
    i32 853805249, label %161
    i32 -1349790384, label %167
    i32 -1160717909, label %176
  ]

; <label>:19:                                     ; preds = %17
  br label %181

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* @x.341
  %22 = load i32, i32* @y.342
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1134368451, i32 853805249
  store i32 %46, i32* %16
  br label %181

; <label>:47:                                     ; preds = %17
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %51 = load %struct.T*, %struct.T** %50, align 8
  %52 = call zeroext i1 @"_ZN9__gnu_cxx5__ops14_Val_comp_iterIZ4mainE3$_0EclIZ4mainE1TNS_17__normal_iteratorIPS5_St6vectorIS5_SaIS5_EEEEEEbRT_T0_"(%"struct.__gnu_cxx::__ops::_Val_comp_iter"* %4, %struct.T* dereferenceable(16) %5, %struct.T* %51)
  store i1 %52, i1* %2
  %53 = load i32, i32* @x.341
  %54 = load i32, i32* @y.342
  %55 = add i32 %53, 915123467
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 915123467
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1384387620, i32 853805249
  store i32 %67, i32* %16
  br label %181

; <label>:68:                                     ; preds = %17
  %69 = load volatile i1, i1* %2
  %70 = select i1 %69, i32 876005352, i32 -1815743349
  store i32 %70, i32* %16
  br label %181

; <label>:71:                                     ; preds = %17
  %72 = load i32, i32* @x.341
  %73 = load i32, i32* @y.342
  %74 = sub i32 %72, -833518718
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -833518718
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 558424322, i32 -1349790384
  store i32 %86, i32* %16
  br label %181

; <label>:87:                                     ; preds = %17
  %88 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %89 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %88) #3
  %90 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %91 = bitcast %struct.T* %90 to i8*
  %92 = bitcast %struct.T* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 16, i32 8, i1 false)
  %93 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 8, i32 8, i1 false)
  %95 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %96 = load i32, i32* @x.341
  %97 = load i32, i32* @y.342
  %98 = add i32 %96, -526487961
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, -526487961
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 1770402055, i32 -1349790384
  store i32 %122, i32* %16
  br label %181

; <label>:123:                                    ; preds = %17
  store i32 1830870799, i32* %16
  br label %181

; <label>:124:                                    ; preds = %17
  %125 = load i32, i32* @x.341
  %126 = load i32, i32* @y.342
  %127 = sub i32 %125, -1028218704
  %128 = sub i32 %127, 1
  %129 = add i32 %128, -1028218704
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  %139 = select i1 %137, i32 618502865, i32 -1160717909
  store i32 %139, i32* %16
  br label %181

; <label>:140:                                    ; preds = %17
  %141 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %5) #3
  %142 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %143 = bitcast %struct.T* %142 to i8*
  %144 = bitcast %struct.T* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 16, i32 8, i1 false)
  %145 = load i32, i32* @x.341
  %146 = load i32, i32* @y.342
  %147 = add i32 %145, 1915728995
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 1915728995
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 588867715, i32 -1160717909
  store i32 %159, i32* %16
  br label %181

; <label>:160:                                    ; preds = %17
  ret void

; <label>:161:                                    ; preds = %17
  %162 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %163 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 8, i32 8, i1 false)
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %165 = load %struct.T*, %struct.T** %164, align 8
  %166 = call zeroext i1 @"_ZN9__gnu_cxx5__ops14_Val_comp_iterIZ4mainE3$_0EclIZ4mainE1TNS_17__normal_iteratorIPS5_St6vectorIS5_SaIS5_EEEEEEbRT_T0_"(%"struct.__gnu_cxx::__ops::_Val_comp_iter"* %4, %struct.T* dereferenceable(16) %5, %struct.T* %165)
  store i32 1134368451, i32* %16
  br label %181

; <label>:167:                                    ; preds = %17
  %168 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %169 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %168) #3
  %170 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %171 = bitcast %struct.T* %170 to i8*
  %172 = bitcast %struct.T* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %171, i8* %172, i64 16, i32 8, i1 false)
  %173 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %174 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %173, i8* %174, i64 8, i32 8, i1 false)
  %175 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  store i32 558424322, i32* %16
  br label %181

; <label>:176:                                    ; preds = %17
  %177 = call dereferenceable(16) %struct.T* @_ZSt4moveIRZ4mainE1TEONSt16remove_referenceIT_E4typeEOS3_(%struct.T* dereferenceable(16) %5) #3
  %178 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %179 = bitcast %struct.T* %178 to i8*
  %180 = bitcast %struct.T* %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* %180, i64 16, i32 8, i1 false)
  store i32 618502865, i32* %16
  br label %181

; <label>:181:                                    ; preds = %176, %167, %161, %140, %124, %123, %87, %71, %68, %47, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define internal void @"_ZN9__gnu_cxx5__ops15__val_comp_iterIZ4mainE3$_0EENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS4_EE"() #0 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.343
  %4 = load i32, i32* @y.344
  %5 = add i32 %3, -133720089
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -133720089
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -33744126, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %63
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -33744126, label %17
    i32 -1360936625, label %25
    i32 1008624814, label %57
    i32 -1887474015, label %58
  ]

; <label>:16:                                     ; preds = %14
  br label %63

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1360936625, i32 -1887474015
  store i32 %24, i32* %13
  br label %63

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %27 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %28 = alloca %class.anon, align 1
  %29 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %27, i32 0, i32 0
  call void @"_ZN9__gnu_cxx5__ops14_Val_comp_iterIZ4mainE3$_0EC2ES2_"(%"struct.__gnu_cxx::__ops::_Val_comp_iter"* %26)
  %30 = load i32, i32* @x.343
  %31 = load i32, i32* @y.344
  %32 = sub i32 %30, 1150794497
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1150794497
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1008624814, i32 -1887474015
  store i32 %56, i32* %13
  br label %63

; <label>:57:                                     ; preds = %14
  ret void

; <label>:58:                                     ; preds = %14
  %59 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter", align 1
  %60 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %61 = alloca %class.anon, align 1
  %62 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %60, i32 0, i32 0
  call void @"_ZN9__gnu_cxx5__ops14_Val_comp_iterIZ4mainE3$_0EC2ES2_"(%"struct.__gnu_cxx::__ops::_Val_comp_iter"* %59)
  store i32 -1360936625, i32* %13
  br label %63

; <label>:63:                                     ; preds = %58, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %struct.T*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.T* %0, %struct.T** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %struct.T* %1, %struct.T** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %struct.T* %2, %struct.T** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %18 = load %struct.T*, %struct.T** %17, align 8
  %19 = call %struct.T* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(%struct.T* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %23 = load %struct.T*, %struct.T** %22, align 8
  %24 = call %struct.T* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(%struct.T* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %28 = load %struct.T*, %struct.T** %27, align 8
  %29 = call %struct.T* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(%struct.T* %28)
  %30 = call %struct.T* @_ZSt22__copy_move_backward_aILb1EPZ4mainE1TS1_ET1_T0_S3_S2_(%struct.T* %19, %struct.T* %24, %struct.T* %29)
  store %struct.T* %30, %struct.T** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %4, %struct.T** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %32 = load %struct.T*, %struct.T** %31, align 8
  ret %struct.T* %32
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeES9_(%struct.T*) #0 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %struct.T* %0, %struct.T** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %9 = load %struct.T*, %struct.T** %8, align 8
  %10 = call %struct.T* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES7_(%struct.T* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %struct.T* %10, %struct.T** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %13 = load %struct.T*, %struct.T** %12, align 8
  ret %struct.T* %13
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt22__copy_move_backward_aILb1EPZ4mainE1TS1_ET1_T0_S3_S2_(%struct.T*, %struct.T*, %struct.T*) #0 {
  %4 = alloca %struct.T*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.349
  %8 = load i32, i32* @y.350
  %9 = sub i32 %7, 1741230307
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1741230307
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1564216749, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1564216749, label %21
    i32 799457849, label %29
    i32 982716453, label %64
    i32 -1321674756, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 799457849, i32 -1321674756
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca %struct.T*, align 8
  %31 = alloca %struct.T*, align 8
  %32 = alloca %struct.T*, align 8
  %33 = alloca i8, align 1
  store %struct.T* %0, %struct.T** %30, align 8
  store %struct.T* %1, %struct.T** %31, align 8
  store %struct.T* %2, %struct.T** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %struct.T*, %struct.T** %30, align 8
  %35 = load %struct.T*, %struct.T** %31, align 8
  %36 = load %struct.T*, %struct.T** %32, align 8
  %37 = call %struct.T* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIZ4mainE1TEEPT_PKS4_S7_S5_(%struct.T* %34, %struct.T* %35, %struct.T* %36)
  store %struct.T* %37, %struct.T** %4
  %38 = load i32, i32* @x.349
  %39 = load i32, i32* @y.350
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 982716453, i32 -1321674756
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %struct.T*, %struct.T** %4
  ret %struct.T* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %struct.T*, align 8
  %68 = alloca %struct.T*, align 8
  %69 = alloca %struct.T*, align 8
  %70 = alloca i8, align 1
  store %struct.T* %0, %struct.T** %67, align 8
  store %struct.T* %1, %struct.T** %68, align 8
  store %struct.T* %2, %struct.T** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %struct.T*, %struct.T** %67, align 8
  %72 = load %struct.T*, %struct.T** %68, align 8
  %73 = load %struct.T*, %struct.T** %69, align 8
  %74 = call %struct.T* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIZ4mainE1TEEPT_PKS4_S7_S5_(%struct.T* %71, %struct.T* %72, %struct.T* %73)
  store i32 799457849, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define internal %struct.T* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(%struct.T*) #0 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %struct.T* %0, %struct.T** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %8 = load %struct.T*, %struct.T** %7, align 8
  %9 = call %struct.T* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(%struct.T* %8)
  ret %struct.T* %9
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIZ4mainE1TEEPT_PKS4_S7_S5_(%struct.T*, %struct.T*, %struct.T*) #4 align 2 {
  %4 = alloca %struct.T*
  %5 = alloca i64
  %6 = alloca %struct.T*, align 8
  %7 = alloca %struct.T*, align 8
  %8 = alloca %struct.T*, align 8
  %9 = alloca i64, align 8
  store %struct.T* %0, %struct.T** %6, align 8
  store %struct.T* %1, %struct.T** %7, align 8
  store %struct.T* %2, %struct.T** %8, align 8
  %10 = load %struct.T*, %struct.T** %7, align 8
  %11 = load %struct.T*, %struct.T** %6, align 8
  %12 = ptrtoint %struct.T* %10 to i64
  %13 = ptrtoint %struct.T* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 16
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %5
  %19 = alloca i32
  store i32 -1981285503, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %131
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1981285503, label %23
    i32 526659414, label %27
    i32 2014274264, label %39
    i32 -180204281, label %54
    i32 -2041688125, label %87
    i32 -243639360, label %89
  ]

; <label>:22:                                     ; preds = %20
  br label %131

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %5
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 526659414, i32 2014274264
  store i32 %26, i32* %19
  br label %131

; <label>:27:                                     ; preds = %20
  %28 = load %struct.T*, %struct.T** %8, align 8
  %29 = load i64, i64* %9, align 8
  %30 = sub i64 0, %29
  %31 = add i64 0, %30
  %32 = sub i64 0, %29
  %33 = getelementptr inbounds %struct.T, %struct.T* %28, i64 %31
  %34 = bitcast %struct.T* %33 to i8*
  %35 = load %struct.T*, %struct.T** %6, align 8
  %36 = bitcast %struct.T* %35 to i8*
  %37 = load i64, i64* %9, align 8
  %38 = mul i64 16, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 8, i1 false)
  store i32 2014274264, i32* %19
  br label %131

; <label>:39:                                     ; preds = %20
  %40 = load i32, i32* @x.353
  %41 = load i32, i32* @y.354
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -180204281, i32 -243639360
  store i32 %53, i32* %19
  br label %131

; <label>:54:                                     ; preds = %20
  %55 = load %struct.T*, %struct.T** %8, align 8
  %56 = load i64, i64* %9, align 8
  %57 = sub i64 0, %56
  %58 = add i64 0, %57
  %59 = sub i64 0, %56
  %60 = getelementptr inbounds %struct.T, %struct.T* %55, i64 %58
  store %struct.T* %60, %struct.T** %4
  %61 = load i32, i32* @x.353
  %62 = load i32, i32* @y.354
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -2041688125, i32 -243639360
  store i32 %86, i32* %19
  br label %131

; <label>:87:                                     ; preds = %20
  %88 = load volatile %struct.T*, %struct.T** %4
  ret %struct.T* %88

; <label>:89:                                     ; preds = %20
  %90 = load %struct.T*, %struct.T** %8, align 8
  %91 = load i64, i64* %9, align 8
  %92 = add i64 0, 5629227966140724951
  %93 = sub i64 %92, %91
  %94 = sub i64 %93, 5629227966140724951
  %95 = sub i64 0, %91
  %96 = mul i64 %94, %91
  %97 = add i64 0, 2913331898740597676
  %98 = sub i64 %97, %91
  %99 = sub i64 %98, 2913331898740597676
  %100 = sub i64 0, %91
  %101 = mul i64 %99, %91
  %102 = sub i64 0, 4317470089449106790
  %103 = sub i64 %102, 0
  %104 = add i64 %103, 4317470089449106790
  %105 = sub i64 0, 0
  %106 = sub i64 %104, 900339948992374752
  %107 = add i64 %106, %91
  %108 = add i64 %107, 900339948992374752
  %109 = add i64 %104, %91
  %110 = sub i64 0, 0
  %111 = add i64 0, %110
  %112 = sub i64 0, 0
  %113 = sub i64 0, %91
  %114 = sub i64 %111, %113
  %115 = add i64 %111, %91
  %116 = sub i64 0, -2825332926897674620
  %117 = sub i64 %116, 0
  %118 = add i64 %117, -2825332926897674620
  %119 = sub i64 0, 0
  %120 = sub i64 0, %118
  %121 = sub i64 0, %91
  %122 = add i64 %120, %121
  %123 = sub i64 0, %122
  %124 = add i64 %118, %91
  %125 = shl i64 0, %91
  %126 = add i64 0, -3816189872160934840
  %127 = sub i64 %126, %91
  %128 = sub i64 %127, -3816189872160934840
  %129 = sub i64 0, %91
  %130 = getelementptr inbounds %struct.T, %struct.T* %90, i64 %128
  store i32 -180204281, i32* %19
  br label %131

; <label>:131:                                    ; preds = %89, %54, %39, %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(%struct.T*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %struct.T* %0, %struct.T** %3, align 8
  %4 = call dereferenceable(8) %struct.T** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load %struct.T*, %struct.T** %4, align 8
  ret %struct.T* %5
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.T* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES7_(%struct.T*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %struct.T* %0, %struct.T** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %struct.T*, %struct.T** %7, align 8
  ret %struct.T* %8
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZN9__gnu_cxx5__ops14_Val_comp_iterIZ4mainE3$_0EclIZ4mainE1TNS_17__normal_iteratorIPS5_St6vectorIS5_SaIS5_EEEEEEbRT_T0_"(%"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %struct.T* dereferenceable(16), %struct.T*) #4 align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.359
  %8 = load i32, i32* @y.360
  %9 = add i32 %7, 682363007
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 682363007
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 985166617, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %66
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 985166617, label %21
    i32 -1493642405, label %29
    i32 -1774301537, label %54
    i32 9886129, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %66

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1493642405, i32 9886129
  store i32 %28, i32* %17
  br label %66

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, align 8
  %32 = alloca %struct.T*, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %struct.T* %2, %struct.T** %33, align 8
  store %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %31, align 8
  store %struct.T* %1, %struct.T** %32, align 8
  %34 = load %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %31, align 8
  %35 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Val_comp_iter", %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %34, i32 0, i32 0
  %36 = load %struct.T*, %struct.T** %32, align 8
  %37 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %30) #3
  %38 = call zeroext i1 @"_ZZ4mainENK3$_0clERKZ4mainE1TS2_"(%class.anon* %35, %struct.T* dereferenceable(16) %36, %struct.T* dereferenceable(16) %37)
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.359
  %40 = load i32, i32* @y.360
  %41 = sub i32 %39, -2132673800
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -2132673800
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1774301537, i32 9886129
  store i32 %53, i32* %17
  br label %66

; <label>:54:                                     ; preds = %18
  %55 = load volatile i1, i1* %4
  ret i1 %55

; <label>:56:                                     ; preds = %18
  %57 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %58 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, align 8
  %59 = alloca %struct.T*, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %57, i32 0, i32 0
  store %struct.T* %2, %struct.T** %60, align 8
  store %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %58, align 8
  store %struct.T* %1, %struct.T** %59, align 8
  %61 = load %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %58, align 8
  %62 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Val_comp_iter", %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %61, i32 0, i32 0
  %63 = load %struct.T*, %struct.T** %59, align 8
  %64 = call dereferenceable(16) %struct.T* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE1TSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %57) #3
  %65 = call zeroext i1 @"_ZZ4mainENK3$_0clERKZ4mainE1TS2_"(%class.anon* %62, %struct.T* dereferenceable(16) %63, %struct.T* dereferenceable(16) %64)
  store i32 -1493642405, i32* %17
  br label %66

; <label>:66:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZN9__gnu_cxx5__ops14_Val_comp_iterIZ4mainE3$_0EC2ES2_"(%"struct.__gnu_cxx::__ops::_Val_comp_iter"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.361
  %5 = load i32, i32* @y.362
  %6 = sub i32 %4, -1021555148
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1021555148
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1060283725, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1060283725, label %18
    i32 374117509, label %38
    i32 758728520, label %58
    i32 1001834850, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 374117509, i32 1001834850
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %class.anon, align 1
  %40 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %40, align 8
  %42 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Val_comp_iter", %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %41, i32 0, i32 0
  %43 = load i32, i32* @x.361
  %44 = load i32, i32* @y.362
  %45 = sub i32 %43, -1302513308
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1302513308
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 758728520, i32 1001834850
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %class.anon, align 1
  %61 = alloca %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %61, align 8
  %62 = load %"struct.__gnu_cxx::__ops::_Val_comp_iter"*, %"struct.__gnu_cxx::__ops::_Val_comp_iter"** %61, align 8
  %63 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Val_comp_iter", %"struct.__gnu_cxx::__ops::_Val_comp_iter"* %62, i32 0, i32 0
  store i32 374117509, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZ4mainE3$_0EC2ES2_"(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.363
  %5 = load i32, i32* @y.364
  %6 = sub i32 %4, -2070780097
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -2070780097
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -647096698, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -647096698, label %18
    i32 1235599316, label %38
    i32 -865031905, label %58
    i32 165156787, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1235599316, i32 165156787
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %class.anon, align 1
  %40 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %40, align 8
  %42 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %41, i32 0, i32 0
  %43 = load i32, i32* @x.363
  %44 = load i32, i32* @y.364
  %45 = add i32 %43, 17691327
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 17691327
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -865031905, i32 165156787
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %class.anon, align 1
  %61 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %61, align 8
  %62 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %61, align 8
  %63 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %62, i32 0, i32 0
  store i32 1235599316, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %2, align 8
  %3 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.10* dereferenceable(1)) #4 align 2 {
  %2 = alloca %class.anon.10*, align 8
  store %class.anon.10* %0, %class.anon.10** %2, align 8
  ret i1 true
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.10* dereferenceable(1)) #0 align 2 {
  %3 = alloca %"union.std::_Any_data"*, align 8
  %4 = alloca %class.anon.10*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  store %class.anon.10* %1, %class.anon.10** %4, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %7 = load %class.anon.10*, %class.anon.10** %4, align 8
  %8 = call dereferenceable(1) %class.anon.10* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.10* dereferenceable(1) %7) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %6, %class.anon.10* dereferenceable(1) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.10* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.10* dereferenceable(1)) #4 {
  %2 = alloca %class.anon.10*, align 8
  store %class.anon.10* %0, %class.anon.10** %2, align 8
  %3 = load %class.anon.10*, %class.anon.10** %2, align 8
  ret %class.anon.10* %3
}

; Function Attrs: noinline uwtable
define internal i64 @"_ZNSt17_Function_handlerIFlllEZ4mainE3$_1E9_M_invokeERKSt9_Any_dataOlS6_"(%"union.std::_Any_data"* dereferenceable(16), i64* dereferenceable(8), i64* dereferenceable(8)) #0 align 2 {
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %8 = call %class.anon.10* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = call i64 @"_ZZ4mainENK3$_1clERKlS1_"(%class.anon.10* %8, i64* dereferenceable(8) %10, i64* dereferenceable(8) %12)
  ret i64 %13
}

; Function Attrs: noinline uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16), i32) #0 align 2 {
  %4 = alloca i32
  %5 = alloca %"union.std::_Any_data"**
  %6 = alloca %"union.std::_Any_data"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.375
  %10 = load i32, i32* @y.376
  %11 = sub i32 %9, 1048537734
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1048537734
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -210084788, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %152
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -210084788, label %23
    i32 -1200680735, label %43
    i32 2062490802, label %66
    i32 -1075841662, label %67
    i32 -1657071700, label %71
    i32 -1628153794, label %75
    i32 389144931, label %79
    i32 -677273311, label %83
    i32 1584913892, label %87
    i32 1893354658, label %91
    i32 1423699259, label %106
    i32 160843247, label %127
    i32 315195331, label %128
    i32 1362837536, label %133
    i32 -597508160, label %136
    i32 1478018909, label %137
    i32 357375773, label %138
    i32 345096822, label %145
  ]

; <label>:22:                                     ; preds = %20
  br label %152

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1200680735, i32 357375773
  store i32 %42, i32* %19
  br label %152

; <label>:43:                                     ; preds = %20
  %44 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"** %44, %"union.std::_Any_data"*** %6
  %45 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"** %45, %"union.std::_Any_data"*** %5
  %46 = alloca i32, align 4
  %47 = alloca %"struct.std::integral_constant", align 1
  %48 = alloca %"struct.std::integral_constant", align 1
  %49 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %49, align 8
  %50 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %50, align 8
  store i32 %2, i32* %46, align 4
  %51 = load i32, i32* %46, align 4
  store i32 %51, i32* %4
  %52 = load i32, i32* @x.375
  %53 = load i32, i32* @y.376
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 2062490802, i32 357375773
  store i32 %65, i32* %19
  br label %152

; <label>:66:                                     ; preds = %20
  store i32 -1075841662, i32* %19
  br label %152

; <label>:67:                                     ; preds = %20
  %68 = load volatile i32, i32* %4
  %69 = icmp slt i32 %68, 2
  %70 = select i1 %69, i32 389144931, i32 -1657071700
  store i32 %70, i32* %19
  br label %152

; <label>:71:                                     ; preds = %20
  %72 = load volatile i32, i32* %4
  %73 = icmp slt i32 %72, 3
  %74 = select i1 %73, i32 315195331, i32 -1628153794
  store i32 %74, i32* %19
  br label %152

; <label>:75:                                     ; preds = %20
  %76 = load volatile i32, i32* %4
  %77 = icmp eq i32 %76, 3
  %78 = select i1 %77, i32 1362837536, i32 -597508160
  store i32 %78, i32* %19
  br label %152

; <label>:79:                                     ; preds = %20
  %80 = load volatile i32, i32* %4
  %81 = icmp slt i32 %80, 1
  %82 = select i1 %81, i32 -677273311, i32 1893354658
  store i32 %82, i32* %19
  br label %152

; <label>:83:                                     ; preds = %20
  %84 = load volatile i32, i32* %4
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i32 1584913892, i32 -597508160
  store i32 %86, i32* %19
  br label %152

; <label>:87:                                     ; preds = %20
  %88 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %89 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %88, align 8
  %90 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %89)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_1" to %"class.std::type_info"*), %"class.std::type_info"** %90, align 8
  store i32 1478018909, i32* %19
  br label %152

; <label>:91:                                     ; preds = %20
  %92 = load i32, i32* @x.375
  %93 = load i32, i32* @y.376
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 1423699259, i32 345096822
  store i32 %105, i32* %19
  br label %152

; <label>:106:                                    ; preds = %20
  %107 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %108 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %107, align 8
  %109 = call %class.anon.10* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %108)
  %110 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %111 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %110, align 8
  %112 = call dereferenceable(8) %class.anon.10** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_1EERT_v"(%"union.std::_Any_data"* %111)
  store %class.anon.10* %109, %class.anon.10** %112, align 8
  %113 = load i32, i32* @x.375
  %114 = load i32, i32* @y.376
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  %126 = select i1 %124, i32 160843247, i32 345096822
  store i32 %126, i32* %19
  br label %152

; <label>:127:                                    ; preds = %20
  store i32 1478018909, i32* %19
  br label %152

; <label>:128:                                    ; preds = %20
  %129 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %130 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %129, align 8
  %131 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %132 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %131, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %130, %"union.std::_Any_data"* dereferenceable(16) %132)
  store i32 1478018909, i32* %19
  br label %152

; <label>:133:                                    ; preds = %20
  %134 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %135 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %134, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %135)
  store i32 1478018909, i32* %19
  br label %152

; <label>:136:                                    ; preds = %20
  store i32 1478018909, i32* %19
  br label %152

; <label>:137:                                    ; preds = %20
  ret i1 false

; <label>:138:                                    ; preds = %20
  %139 = alloca %"union.std::_Any_data"*, align 8
  %140 = alloca %"union.std::_Any_data"*, align 8
  %141 = alloca i32, align 4
  %142 = alloca %"struct.std::integral_constant", align 1
  %143 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %139, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %140, align 8
  store i32 %2, i32* %141, align 4
  %144 = load i32, i32* %141, align 4
  store i32 -1200680735, i32* %19
  br label %152

; <label>:145:                                    ; preds = %20
  %146 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %147 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %146, align 8
  %148 = call %class.anon.10* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %147)
  %149 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %150 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %149, align 8
  %151 = call dereferenceable(8) %class.anon.10** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_1EERT_v"(%"union.std::_Any_data"* %150)
  store %class.anon.10* %148, %class.anon.10** %151, align 8
  store i32 1423699259, i32* %19
  br label %152

; <label>:152:                                    ; preds = %145, %138, %136, %133, %128, %127, %106, %91, %87, %83, %79, %75, %71, %67, %66, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.10* dereferenceable(1)) #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.377
  %6 = load i32, i32* @y.378
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 17498376, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 17498376, label %18
    i32 -119418748, label %38
    i32 -1482741890, label %62
    i32 1007233460, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -119418748, i32 1007233460
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::integral_constant", align 1
  %40 = alloca %"union.std::_Any_data"*, align 8
  %41 = alloca %class.anon.10*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %40, align 8
  store %class.anon.10* %1, %class.anon.10** %41, align 8
  %42 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %40, align 8
  %43 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %42)
  %44 = bitcast i8* %43 to %class.anon.10*
  %45 = load %class.anon.10*, %class.anon.10** %41, align 8
  %46 = call dereferenceable(1) %class.anon.10* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.10* dereferenceable(1) %45) #3
  %47 = load i32, i32* @x.377
  %48 = load i32, i32* @y.378
  %49 = sub i32 %47, -1223447179
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1223447179
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1482741890, i32 1007233460
  store i32 %61, i32* %14
  br label %72

; <label>:62:                                     ; preds = %15
  ret void

; <label>:63:                                     ; preds = %15
  %64 = alloca %"struct.std::integral_constant", align 1
  %65 = alloca %"union.std::_Any_data"*, align 8
  %66 = alloca %class.anon.10*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %65, align 8
  store %class.anon.10* %1, %class.anon.10** %66, align 8
  %67 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %65, align 8
  %68 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %67)
  %69 = bitcast i8* %68 to %class.anon.10*
  %70 = load %class.anon.10*, %class.anon.10** %66, align 8
  %71 = call dereferenceable(1) %class.anon.10* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.10* dereferenceable(1) %70) #3
  store i32 -119418748, i32* %14
  br label %72

; <label>:72:                                     ; preds = %63, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"*) #4 comdat align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = bitcast %"union.std::_Any_data"* %3 to [16 x i8]*
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  ret i8* %5
}

; Function Attrs: noinline uwtable
define internal %class.anon.10* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  %3 = alloca %class.anon.10*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %5 = call dereferenceable(1) %class.anon.10* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_1EERKT_v"(%"union.std::_Any_data"* %4)
  %6 = call %class.anon.10* @"_ZSt11__addressofIKZ4mainE3$_1EPT_RS2_"(%class.anon.10* dereferenceable(1) %5) #3
  store %class.anon.10* %6, %class.anon.10** %3, align 8
  %7 = load %class.anon.10*, %class.anon.10** %3, align 8
  ret %class.anon.10* %7
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @"_ZZ4mainENK3$_1clERKlS1_"(%class.anon.10*, i64* dereferenceable(8), i64* dereferenceable(8)) #4 align 2 {
  %4 = alloca %class.anon.10*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %class.anon.10* %0, %class.anon.10** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %class.anon.10*, %class.anon.10** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %9)
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.385
  %6 = load i32, i32* @y.386
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2140615238, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2140615238, label %18
    i32 -880149625, label %26
    i32 812636966, label %43
    i32 -531117954, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -880149625, i32 -531117954
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca i64*, align 8
  store i64* %0, i64** %27, align 8
  %28 = load i64*, i64** %27, align 8
  store i64* %28, i64** %2
  %29 = load i32, i32* @x.385
  %30 = load i32, i32* @y.386
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 812636966, i32 -531117954
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile i64*, i64** %2
  ret i64* %44

; <label>:45:                                     ; preds = %15
  %46 = alloca i64*, align 8
  store i64* %0, i64** %46, align 8
  %47 = load i64*, i64** %46, align 8
  store i32 -880149625, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal %class.anon.10* @"_ZSt11__addressofIKZ4mainE3$_1EPT_RS2_"(%class.anon.10* dereferenceable(1)) #4 {
  %2 = alloca %class.anon.10*, align 8
  store %class.anon.10* %0, %class.anon.10** %2, align 8
  %3 = load %class.anon.10*, %class.anon.10** %2, align 8
  %4 = bitcast %class.anon.10* %3 to i8*
  %5 = bitcast i8* %4 to %class.anon.10*
  ret %class.anon.10* %5
}

; Function Attrs: noinline uwtable
define internal dereferenceable(1) %class.anon.10* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_1EERKT_v"(%"union.std::_Any_data"*) #0 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.10*
  ret %class.anon.10* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"*) #4 comdat align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = bitcast %"union.std::_Any_data"* %3 to [16 x i8]*
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"*) #4 comdat align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %"class.std::type_info"**
  ret %"class.std::type_info"** %5
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %class.anon.10** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_1EERT_v"(%"union.std::_Any_data"*) #4 align 2 {
  %2 = alloca %class.anon.10**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.395
  %6 = load i32, i32* @y.396
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -13516961, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -13516961, label %18
    i32 1199615212, label %38
    i32 1930053425, label %58
    i32 1153631578, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1199615212, i32 1153631578
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %39, align 8
  %40 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %39, align 8
  %41 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %40)
  %42 = bitcast i8* %41 to %class.anon.10**
  store %class.anon.10** %42, %class.anon.10*** %2
  %43 = load i32, i32* @x.395
  %44 = load i32, i32* @y.396
  %45 = add i32 %43, 1359477902
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1359477902
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1930053425, i32 1153631578
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %class.anon.10**, %class.anon.10*** %2
  ret %class.anon.10** %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %61, align 8
  %62 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %61, align 8
  %63 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %62)
  %64 = bitcast i8* %63 to %class.anon.10**
  store i32 1199615212, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %5, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %7 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %6)
  %8 = bitcast i8* %7 to %class.anon.10*
  %9 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %10 = call dereferenceable(1) %class.anon.10* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_1EERKT_v"(%"union.std::_Any_data"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"struct.std::integral_constant", align 1
  %3 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %5 = call dereferenceable(1) %class.anon.10* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_1EERT_v"(%"union.std::_Any_data"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.10* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_1EERT_v"(%"union.std::_Any_data"*) #4 align 2 {
  %2 = alloca %class.anon.10*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.401
  %6 = load i32, i32* @y.402
  %7 = sub i32 %5, -1860006302
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1860006302
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 996544559, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 996544559, label %19
    i32 2102255765, label %39
    i32 -384556892, label %71
    i32 1887433768, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2102255765, i32 1887433768
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %40, align 8
  %41 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %40, align 8
  %42 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %41)
  %43 = bitcast i8* %42 to %class.anon.10*
  store %class.anon.10* %43, %class.anon.10** %2
  %44 = load i32, i32* @x.401
  %45 = load i32, i32* @y.402
  %46 = sub i32 %44, -595310483
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -595310483
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -384556892, i32 1887433768
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %class.anon.10*, %class.anon.10** %2
  ret %class.anon.10* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %74, align 8
  %75 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %74, align 8
  %76 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %75)
  %77 = bitcast i8* %76 to %class.anon.10*
  store i32 2102255765, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEEC2Ev(%"class.std::vector.5"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.403
  %3 = load i32, i32* @y.404
  %4 = sub i32 %2, -2050803047
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -2050803047
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %81

; <label>:16:                                     ; preds = %1, %81
  %17 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %17, align 8
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %17, align 8
  %19 = bitcast %"class.std::vector.5"* %18 to %"struct.std::_Vector_base.6"*
  %20 = load i32, i32* @x.403
  %21 = load i32, i32* @y.404
  %22 = sub i32 %20, -1930005824
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1930005824
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %81

; <label>:34:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIlSaIlEEC2Ev(%"struct.std::_Vector_base.6"* %19)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %34
  ret void

; <label>:36:                                     ; preds = %34
  %37 = load i32, i32* @x.403
  %38 = load i32, i32* @y.404
  %39 = sub i32 %37, -2111500855
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -2111500855
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %85

; <label>:51:                                     ; preds = %36, %85
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #12
  %54 = load i32, i32* @x.403
  %55 = load i32, i32* @y.404
  %56 = add i32 %54, -1831664789
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1831664789
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %85

; <label>:80:                                     ; preds = %51
  unreachable

; <label>:81:                                     ; preds = %16, %1
  %82 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %82, align 8
  %83 = load %"class.std::vector.5"*, %"class.std::vector.5"** %82, align 8
  %84 = bitcast %"class.std::vector.5"* %83 to %"struct.std::_Vector_base.6"*
  br label %16

; <label>:85:                                     ; preds = %51, %36
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #12
  br label %51
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8functionIFlllEEC2Ev(%"class.std::function"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %0, %"class.std::function"** %2, align 8
  %3 = load %"class.std::function"*, %"class.std::function"** %2, align 8
  %4 = bitcast %"class.std::function"* %3 to %"struct.std::_Maybe_unary_or_binary_function"*
  %5 = bitcast %"class.std::function"* %3 to %"class.std::_Function_base"*
  invoke void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %5)
          to label %6 unwind label %48

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.405
  %8 = load i32, i32* @y.406
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %8, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %92

; <label>:32:                                     ; preds = %6, %92
  %33 = load i32, i32* @x.405
  %34 = load i32, i32* @y.406
  %35 = sub i32 %33, -147032189
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -147032189
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %92

; <label>:47:                                     ; preds = %32
  ret void

; <label>:48:                                     ; preds = %1
  %49 = load i32, i32* @x.405
  %50 = load i32, i32* @y.406
  %51 = add i32 %49, 291649691
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 291649691
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %93

; <label>:75:                                     ; preds = %48, %93
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @__clang_call_terminate(i8* %77) #12
  %78 = load i32, i32* @x.405
  %79 = load i32, i32* @y.406
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %93

; <label>:91:                                     ; preds = %75
  unreachable

; <label>:92:                                     ; preds = %32, %6
  br label %32

; <label>:93:                                     ; preds = %75, %48
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #12
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %"class.std::function"* @_ZNSt8functionIFlllEEaSERKS1_(%"class.std::function"*, %"class.std::function"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::function"*, align 8
  %4 = alloca %"class.std::function"*, align 8
  %5 = alloca %"class.std::function", align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %3, align 8
  store %"class.std::function"* %1, %"class.std::function"** %4, align 8
  %8 = load %"class.std::function"*, %"class.std::function"** %3, align 8
  %9 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  call void @_ZNSt8functionIFlllEEC2ERKS1_(%"class.std::function"* %5, %"class.std::function"* dereferenceable(32) %9)
  invoke void @_ZNSt8functionIFlllEE4swapERS1_(%"class.std::function"* %5, %"class.std::function"* dereferenceable(32) %8)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %5) #3
  ret %"class.std::function"* %8

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.407
  %13 = load i32, i32* @y.408
  %14 = sub i32 %12, -1175182493
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -1175182493
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %62

; <label>:38:                                     ; preds = %11, %62
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %6, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %7, align 4
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %5) #3
  %42 = load i32, i32* @x.407
  %43 = load i32, i32* @y.408
  %44 = add i32 %42, -1922226302
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1922226302
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %62

; <label>:56:                                     ; preds = %38
  br label %57

; <label>:57:                                     ; preds = %56
  %58 = load i8*, i8** %6, align 8
  %59 = load i32, i32* %7, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  resume { i8*, i32 } %61

; <label>:62:                                     ; preds = %38, %11
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %6, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %7, align 4
  call void @_ZNSt8functionIFlllEED2Ev(%"class.std::function"* %5) #3
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEE6resizeEmRKl(%"class.std::vector.5"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %9 = alloca i64**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.409
  %14 = load i32, i32* @y.410
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 -417181291, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %284
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -417181291, label %26
    i32 258264408, label %46
    i32 1052727649, label %88
    i32 -1698549304, label %91
    i32 2002068334, label %119
    i32 1574515726, label %156
    i32 -919986516, label %157
    i32 1434174238, label %164
    i32 -596524461, label %174
    i32 2079841286, label %175
    i32 1553494987, label %203
    i32 -1825090594, label %231
    i32 446914777, label %232
    i32 1578099886, label %243
    i32 -812325340, label %283
  ]

; <label>:25:                                     ; preds = %23
  br label %284

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %12
  %28 = load volatile i1, i1* %11
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 258264408, i32 446914777
  store i32 %45, i32* %22
  br label %284

; <label>:46:                                     ; preds = %23
  %47 = alloca %"class.std::vector.5"*, align 8
  %48 = alloca i64, align 8
  store i64* %48, i64** %10
  %49 = alloca i64*, align 8
  store i64** %49, i64*** %9
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %50, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %51, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %52, %"class.__gnu_cxx::__normal_iterator.15"** %6
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %47, align 8
  %53 = load volatile i64*, i64** %10
  store i64 %1, i64* %53, align 8
  %54 = load volatile i64**, i64*** %9
  store i64* %2, i64** %54, align 8
  %55 = load %"class.std::vector.5"*, %"class.std::vector.5"** %47, align 8
  store %"class.std::vector.5"* %55, %"class.std::vector.5"** %5
  %56 = load volatile i64*, i64** %10
  %57 = load i64, i64* %56, align 8
  %58 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %59 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %58) #3
  %60 = icmp ugt i64 %57, %59
  store i1 %60, i1* %4
  %61 = load i32, i32* @x.409
  %62 = load i32, i32* @y.410
  %63 = sub i32 %61, 1513563438
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 1513563438
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 1052727649, i32 446914777
  store i32 %87, i32* %22
  br label %284

; <label>:88:                                     ; preds = %23
  %89 = load volatile i1, i1* %4
  %90 = select i1 %89, i32 -1698549304, i32 -919986516
  store i32 %90, i32* %22
  br label %284

; <label>:91:                                     ; preds = %23
  %92 = load i32, i32* @x.409
  %93 = load i32, i32* @y.410
  %94 = add i32 %92, 1844663662
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 1844663662
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 2002068334, i32 1578099886
  store i32 %118, i32* %22
  br label %284

; <label>:119:                                    ; preds = %23
  %120 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %121 = call i64* @_ZNSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %120) #3
  %122 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %122, i32 0, i32 0
  store i64* %121, i64** %123, align 8
  %124 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %125 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2IPlEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.16"* %124, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %125) #3
  %126 = load volatile i64*, i64** %10
  %127 = load i64, i64* %126, align 8
  %128 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %129 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %128) #3
  %130 = sub i64 0, %129
  %131 = add i64 %127, %130
  %132 = sub i64 %127, %129
  %133 = load volatile i64**, i64*** %9
  %134 = load i64*, i64** %133, align 8
  %135 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %135, i32 0, i32 0
  %137 = load i64*, i64** %136, align 8
  %138 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %139 = call i64* @_ZNSt6vectorIlSaIlEE6insertEN9__gnu_cxx17__normal_iteratorIPKlS1_EEmRS4_(%"class.std::vector.5"* %138, i64* %137, i64 %131, i64* dereferenceable(8) %134)
  %140 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %6
  %141 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %140, i32 0, i32 0
  store i64* %139, i64** %141, align 8
  %142 = load i32, i32* @x.409
  %143 = load i32, i32* @y.410
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  %155 = select i1 %153, i32 1574515726, i32 1578099886
  store i32 %155, i32* %22
  br label %284

; <label>:156:                                    ; preds = %23
  store i32 2079841286, i32* %22
  br label %284

; <label>:157:                                    ; preds = %23
  %158 = load volatile i64*, i64** %10
  %159 = load i64, i64* %158, align 8
  %160 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %161 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %160) #3
  %162 = icmp ult i64 %159, %161
  %163 = select i1 %162, i32 1434174238, i32 -596524461
  store i32 %163, i32* %22
  br label %284

; <label>:164:                                    ; preds = %23
  %165 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %166 = bitcast %"class.std::vector.5"* %165 to %"struct.std::_Vector_base.6"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %167, i32 0, i32 0
  %169 = load i64*, i64** %168, align 8
  %170 = load volatile i64*, i64** %10
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds i64, i64* %169, i64 %171
  %173 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  call void @_ZNSt6vectorIlSaIlEE15_M_erase_at_endEPl(%"class.std::vector.5"* %173, i64* %172) #3
  store i32 -596524461, i32* %22
  br label %284

; <label>:174:                                    ; preds = %23
  store i32 2079841286, i32* %22
  br label %284

; <label>:175:                                    ; preds = %23
  %176 = load i32, i32* @x.409
  %177 = load i32, i32* @y.410
  %178 = sub i32 %176, 1573175008
  %179 = sub i32 %178, 1
  %180 = add i32 %179, 1573175008
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 false, true
  %189 = and i1 %186, false
  %190 = and i1 %184, %188
  %191 = and i1 %187, false
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 false, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  %202 = select i1 %200, i32 1553494987, i32 -812325340
  store i32 %202, i32* %22
  br label %284

; <label>:203:                                    ; preds = %23
  %204 = load i32, i32* @x.409
  %205 = load i32, i32* @y.410
  %206 = sub i32 %204, 520329007
  %207 = sub i32 %206, 1
  %208 = add i32 %207, 520329007
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 true, true
  %217 = and i1 %214, true
  %218 = and i1 %212, %216
  %219 = and i1 %215, true
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 true, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  %230 = select i1 %228, i32 -1825090594, i32 -812325340
  store i32 %230, i32* %22
  br label %284

; <label>:231:                                    ; preds = %23
  ret void

; <label>:232:                                    ; preds = %23
  %233 = alloca %"class.std::vector.5"*, align 8
  %234 = alloca i64, align 8
  %235 = alloca i64*, align 8
  %236 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %237 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %238 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %233, align 8
  store i64 %1, i64* %234, align 8
  store i64* %2, i64** %235, align 8
  %239 = load %"class.std::vector.5"*, %"class.std::vector.5"** %233, align 8
  %240 = load i64, i64* %234, align 8
  %241 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %239) #3
  %242 = icmp ugt i64 %240, %241
  store i32 258264408, i32* %22
  br label %284

; <label>:243:                                    ; preds = %23
  %244 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %245 = call i64* @_ZNSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %244) #3
  %246 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %246, i32 0, i32 0
  store i64* %245, i64** %247, align 8
  %248 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %249 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2IPlEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.16"* %248, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %249) #3
  %250 = load volatile i64*, i64** %10
  %251 = load i64, i64* %250, align 8
  %252 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %253 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %252) #3
  %254 = add i64 0, -3580613319521197844
  %255 = sub i64 %254, %251
  %256 = sub i64 %255, -3580613319521197844
  %257 = sub i64 0, %251
  %258 = sub i64 %256, -950234763515904846
  %259 = add i64 %258, %253
  %260 = add i64 %259, -950234763515904846
  %261 = add i64 %256, %253
  %262 = sub i64 0, %251
  %263 = add i64 0, %262
  %264 = sub i64 0, %251
  %265 = sub i64 0, %263
  %266 = sub i64 0, %253
  %267 = add i64 %265, %266
  %268 = sub i64 0, %267
  %269 = add i64 %263, %253
  %270 = sub i64 %251, 4893447580139196387
  %271 = sub i64 %270, %253
  %272 = add i64 %271, 4893447580139196387
  %273 = sub i64 %251, %253
  %274 = load volatile i64**, i64*** %9
  %275 = load i64*, i64** %274, align 8
  %276 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %277 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %276, i32 0, i32 0
  %278 = load i64*, i64** %277, align 8
  %279 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %280 = call i64* @_ZNSt6vectorIlSaIlEE6insertEN9__gnu_cxx17__normal_iteratorIPKlS1_EEmRS4_(%"class.std::vector.5"* %279, i64* %278, i64 %272, i64* dereferenceable(8) %275)
  %281 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %6
  %282 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %281, i32 0, i32 0
  store i64* %280, i64** %282, align 8
  store i32 2002068334, i32* %22
  br label %284

; <label>:283:                                    ; preds = %23
  store i32 1553494987, i32* %22
  br label %284

; <label>:284:                                    ; preds = %283, %243, %232, %203, %175, %174, %164, %157, %156, %119, %91, %88, %46, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEEC2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.411
  %5 = load i32, i32* @y.412
  %6 = add i32 %4, 916656151
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 916656151
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 908571108, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 908571108, label %18
    i32 -1266949348, label %26
    i32 1871290678, label %57
    i32 1595227661, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1266949348, i32 1595227661
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %27, align 8
  %28 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.411
  %31 = load i32, i32* @y.412
  %32 = sub i32 %30, 1950107082
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1950107082
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1871290678, i32 1595227661
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %59, align 8
  %60 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %61)
  store i32 -1266949348, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaIlEC2Ev(%"class.std::allocator.7"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3, i32 0, i32 1
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3, i32 0, i32 2
  store i64* null, i64** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIlEC2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIlEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8functionIFlllEEC2ERKS1_(%"class.std::function"*, %"class.std::function"* dereferenceable(32)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::function"*, align 8
  %4 = alloca %"class.std::function"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %3, align 8
  store %"class.std::function"* %1, %"class.std::function"** %4, align 8
  %7 = load %"class.std::function"*, %"class.std::function"** %3, align 8
  %8 = bitcast %"class.std::function"* %7 to %"struct.std::_Maybe_unary_or_binary_function"*
  %9 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %9)
  %10 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %11 = call zeroext i1 @_ZNKSt8functionIFlllEEcvbEv(%"class.std::function"* %10) #3
  br i1 %11, label %12, label %80

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.419
  %14 = load i32, i32* @y.420
  %15 = add i32 %13, 175229566
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 175229566
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %86

; <label>:27:                                     ; preds = %12, %86
  %28 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %29 = bitcast %"class.std::function"* %28 to %"class.std::_Function_base"*
  %30 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %29, i32 0, i32 1
  %31 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %30, align 8
  %32 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  %33 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %32, i32 0, i32 0
  %34 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %35 = bitcast %"class.std::function"* %34 to %"class.std::_Function_base"*
  %36 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %35, i32 0, i32 0
  %37 = load i32, i32* @x.419
  %38 = load i32, i32* @y.420
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %86

; <label>:62:                                     ; preds = %27
  %63 = invoke zeroext i1 %31(%"union.std::_Any_data"* dereferenceable(16) %33, %"union.std::_Any_data"* dereferenceable(16) %36, i32 2)
          to label %64 unwind label %75

; <label>:64:                                     ; preds = %62
  %65 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %66 = getelementptr inbounds %"class.std::function", %"class.std::function"* %65, i32 0, i32 1
  %67 = load i64 (%"union.std::_Any_data"*, i64*, i64*)*, i64 (%"union.std::_Any_data"*, i64*, i64*)** %66, align 8
  %68 = getelementptr inbounds %"class.std::function", %"class.std::function"* %7, i32 0, i32 1
  store i64 (%"union.std::_Any_data"*, i64*, i64*)* %67, i64 (%"union.std::_Any_data"*, i64*, i64*)** %68, align 8
  %69 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %70 = bitcast %"class.std::function"* %69 to %"class.std::_Function_base"*
  %71 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %70, i32 0, i32 1
  %72 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %71, align 8
  %73 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  %74 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %73, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %72, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %74, align 8
  br label %80

; <label>:75:                                     ; preds = %62
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %5, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %6, align 4
  %79 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %79) #3
  br label %81

; <label>:80:                                     ; preds = %64, %2
  ret void

; <label>:81:                                     ; preds = %75
  %82 = load i8*, i8** %5, align 8
  %83 = load i32, i32* %6, align 4
  %84 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  resume { i8*, i32 } %85

; <label>:86:                                     ; preds = %27, %12
  %87 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %88 = bitcast %"class.std::function"* %87 to %"class.std::_Function_base"*
  %89 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %88, i32 0, i32 1
  %90 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %89, align 8
  %91 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  %92 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %91, i32 0, i32 0
  %93 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %94 = bitcast %"class.std::function"* %93 to %"class.std::_Function_base"*
  %95 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %94, i32 0, i32 0
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8functionIFlllEE4swapERS1_(%"class.std::function"*, %"class.std::function"* dereferenceable(32)) #4 comdat align 2 {
  %3 = alloca %"class.std::function"*, align 8
  %4 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %0, %"class.std::function"** %3, align 8
  store %"class.std::function"* %1, %"class.std::function"** %4, align 8
  %5 = load %"class.std::function"*, %"class.std::function"** %3, align 8
  %6 = bitcast %"class.std::function"* %5 to %"class.std::_Function_base"*
  %7 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %6, i32 0, i32 0
  %8 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %9 = bitcast %"class.std::function"* %8 to %"class.std::_Function_base"*
  %10 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %9, i32 0, i32 0
  call void @_ZSt4swapISt9_Any_dataEvRT_S2_(%"union.std::_Any_data"* dereferenceable(16) %7, %"union.std::_Any_data"* dereferenceable(16) %10) #3
  %11 = bitcast %"class.std::function"* %5 to %"class.std::_Function_base"*
  %12 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %11, i32 0, i32 1
  %13 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %14 = bitcast %"class.std::function"* %13 to %"class.std::_Function_base"*
  %15 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %14, i32 0, i32 1
  call void @_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEEvRT_S8_(i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8) %12, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8) %15) #3
  %16 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i32 0, i32 1
  %17 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %18 = getelementptr inbounds %"class.std::function", %"class.std::function"* %17, i32 0, i32 1
  call void @_ZSt4swapIPFlRKSt9_Any_dataOlS3_EEvRT_S7_(i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8) %16, i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8) %18) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt8functionIFlllEEcvbEv(%"class.std::function"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %0, %"class.std::function"** %2, align 8
  %3 = load %"class.std::function"*, %"class.std::function"** %2, align 8
  %4 = bitcast %"class.std::function"* %3 to %"class.std::_Function_base"*
  %5 = invoke zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"* %4)
          to label %6 unwind label %55

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.423
  %8 = load i32, i32* @y.424
  %9 = sub i32 %7, 1383794697
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1383794697
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = xor i1 %15, true
  %18 = xor i1 %16, true
  %19 = xor i1 false, true
  %20 = and i1 %17, false
  %21 = and i1 %15, %19
  %22 = and i1 %18, false
  %23 = and i1 %16, %19
  %24 = or i1 %20, %21
  %25 = or i1 %22, %23
  %26 = xor i1 %24, %25
  %27 = or i1 %17, %18
  %28 = xor i1 %27, true
  %29 = or i1 false, %19
  %30 = and i1 %28, %29
  %31 = or i1 %26, %30
  %32 = or i1 %15, %16
  br i1 %31, label %33, label %111

; <label>:33:                                     ; preds = %6, %111
  %34 = xor i1 %5, true
  %35 = and i1 true, %34
  %36 = xor i1 true, true
  %37 = and i1 %5, %36
  %38 = or i1 %35, %37
  %39 = xor i1 %5, true
  %40 = load i32, i32* @x.423
  %41 = load i32, i32* @y.424
  %42 = add i32 %40, -278542618
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -278542618
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %111

; <label>:54:                                     ; preds = %33
  ret i1 %38

; <label>:55:                                     ; preds = %1
  %56 = load i32, i32* @x.423
  %57 = load i32, i32* @y.424
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %133

; <label>:81:                                     ; preds = %55, %133
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  call void @__clang_call_terminate(i8* %83) #12
  %84 = load i32, i32* @x.423
  %85 = load i32, i32* @y.424
  %86 = add i32 %84, 1732434198
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 1732434198
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %133

; <label>:110:                                    ; preds = %81
  unreachable

; <label>:111:                                    ; preds = %33, %6
  %112 = sub i1 %5, false
  %113 = sub i1 %112, true
  %114 = add i1 %113, false
  %115 = sub i1 %5, true
  %116 = mul i1 %114, true
  %117 = sub i1 %5, true
  %118 = sub i1 %117, true
  %119 = add i1 %118, true
  %120 = sub i1 %5, true
  %121 = mul i1 %119, true
  %122 = add i1 %5, false
  %123 = sub i1 %122, true
  %124 = sub i1 %123, false
  %125 = sub i1 %5, true
  %126 = mul i1 %124, true
  %127 = xor i1 %5, true
  %128 = and i1 true, %127
  %129 = xor i1 true, true
  %130 = and i1 %5, %129
  %131 = or i1 %128, %130
  %132 = xor i1 %5, true
  br label %33

; <label>:133:                                    ; preds = %81, %55
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  call void @__clang_call_terminate(i8* %135) #12
  br label %81
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %2, align 8
  %3 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 1
  %5 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8
  %6 = icmp ne i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %5, null
  %7 = xor i1 %6, true
  %8 = and i1 true, %7
  %9 = xor i1 true, true
  %10 = and i1 %6, %9
  %11 = or i1 %8, %10
  %12 = xor i1 %6, true
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt9_Any_dataEvRT_S2_(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"union.std::_Any_data"*, align 8
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %"union.std::_Any_data", align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %4, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %7 = call dereferenceable(16) %"union.std::_Any_data"* @_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_(%"union.std::_Any_data"* dereferenceable(16) %6) #3
  %8 = bitcast %"union.std::_Any_data"* %5 to i8*
  %9 = bitcast %"union.std::_Any_data"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %11 = call dereferenceable(16) %"union.std::_Any_data"* @_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_(%"union.std::_Any_data"* dereferenceable(16) %10) #3
  %12 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %13 = bitcast %"union.std::_Any_data"* %12 to i8*
  %14 = bitcast %"union.std::_Any_data"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  %15 = call dereferenceable(16) %"union.std::_Any_data"* @_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_(%"union.std::_Any_data"* dereferenceable(16) %5) #3
  %16 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %17 = bitcast %"union.std::_Any_data"* %16 to i8*
  %18 = bitcast %"union.std::_Any_data"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEEvRT_S8_(i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8), i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8)) #4 comdat {
  %3 = alloca i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, align 8
  %4 = alloca i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, align 8
  %5 = alloca i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %0, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %3, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %1, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %4, align 8
  %6 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %3, align 8
  %7 = call dereferenceable(8) i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** @_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_(i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8) %6) #3
  %8 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %8, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5, align 8
  %9 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %4, align 8
  %10 = call dereferenceable(8) i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** @_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_(i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8) %9) #3
  %11 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %10, align 8
  %12 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %3, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %11, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %12, align 8
  %13 = call dereferenceable(8) i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** @_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_(i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8) %5) #3
  %14 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %13, align 8
  %15 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %4, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %14, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPFlRKSt9_Any_dataOlS3_EEvRT_S7_(i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8), i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8)) #4 comdat {
  %3 = alloca i64 (%"union.std::_Any_data"*, i64*, i64*)**, align 8
  %4 = alloca i64 (%"union.std::_Any_data"*, i64*, i64*)**, align 8
  %5 = alloca i64 (%"union.std::_Any_data"*, i64*, i64*)*, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)** %0, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %3, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)** %1, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %4, align 8
  %6 = load i64 (%"union.std::_Any_data"*, i64*, i64*)**, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %3, align 8
  %7 = call dereferenceable(8) i64 (%"union.std::_Any_data"*, i64*, i64*)** @_ZSt4moveIRPFlRKSt9_Any_dataOlS3_EEONSt16remove_referenceIT_E4typeEOS8_(i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8) %6) #3
  %8 = load i64 (%"union.std::_Any_data"*, i64*, i64*)*, i64 (%"union.std::_Any_data"*, i64*, i64*)** %7, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)* %8, i64 (%"union.std::_Any_data"*, i64*, i64*)** %5, align 8
  %9 = load i64 (%"union.std::_Any_data"*, i64*, i64*)**, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %4, align 8
  %10 = call dereferenceable(8) i64 (%"union.std::_Any_data"*, i64*, i64*)** @_ZSt4moveIRPFlRKSt9_Any_dataOlS3_EEONSt16remove_referenceIT_E4typeEOS8_(i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8) %9) #3
  %11 = load i64 (%"union.std::_Any_data"*, i64*, i64*)*, i64 (%"union.std::_Any_data"*, i64*, i64*)** %10, align 8
  %12 = load i64 (%"union.std::_Any_data"*, i64*, i64*)**, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %3, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)* %11, i64 (%"union.std::_Any_data"*, i64*, i64*)** %12, align 8
  %13 = call dereferenceable(8) i64 (%"union.std::_Any_data"*, i64*, i64*)** @_ZSt4moveIRPFlRKSt9_Any_dataOlS3_EEONSt16remove_referenceIT_E4typeEOS8_(i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8) %5) #3
  %14 = load i64 (%"union.std::_Any_data"*, i64*, i64*)*, i64 (%"union.std::_Any_data"*, i64*, i64*)** %13, align 8
  %15 = load i64 (%"union.std::_Any_data"*, i64*, i64*)**, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %4, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)* %14, i64 (%"union.std::_Any_data"*, i64*, i64*)** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"union.std::_Any_data"* @_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_(%"union.std::_Any_data"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"union.std::_Any_data"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.433
  %6 = load i32, i32* @y.434
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1804057493, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1804057493, label %18
    i32 -1245153050, label %38
    i32 2145618288, label %68
    i32 -2034215300, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1245153050, i32 -2034215300
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %39, align 8
  %40 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %39, align 8
  store %"union.std::_Any_data"* %40, %"union.std::_Any_data"** %2
  %41 = load i32, i32* @x.433
  %42 = load i32, i32* @y.434
  %43 = sub i32 %41, 1264940713
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1264940713
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 2145618288, i32 -2034215300
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %"union.std::_Any_data"*, %"union.std::_Any_data"** %2
  ret %"union.std::_Any_data"* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %71, align 8
  %72 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %71, align 8
  store i32 -1245153050, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** @_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_(i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** dereferenceable(8)) #4 comdat {
  %2 = alloca i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.435
  %6 = load i32, i32* @y.436
  %7 = sub i32 %5, -1275952709
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1275952709
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1247039523, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1247039523, label %19
    i32 -1929320307, label %27
    i32 -1205610938, label %57
    i32 1151878086, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1929320307, i32 1151878086
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %0, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %28, align 8
  %29 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %28, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %29, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %2
  %30 = load i32, i32* @x.435
  %31 = load i32, i32* @y.436
  %32 = sub i32 %30, 1797997490
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1797997490
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1205610938, i32 1151878086
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %2
  ret i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, align 8
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %0, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %60, align 8
  %61 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)**, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*** %60, align 8
  store i32 -1929320307, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64 (%"union.std::_Any_data"*, i64*, i64*)** @_ZSt4moveIRPFlRKSt9_Any_dataOlS3_EEONSt16remove_referenceIT_E4typeEOS8_(i64 (%"union.std::_Any_data"*, i64*, i64*)** dereferenceable(8)) #4 comdat {
  %2 = alloca i64 (%"union.std::_Any_data"*, i64*, i64*)**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.437
  %6 = load i32, i32* @y.438
  %7 = add i32 %5, 709852436
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 709852436
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1663397416, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1663397416, label %19
    i32 1420783859, label %27
    i32 -854900605, label %45
    i32 -1841967299, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1420783859, i32 -1841967299
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i64 (%"union.std::_Any_data"*, i64*, i64*)**, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)** %0, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %28, align 8
  %29 = load i64 (%"union.std::_Any_data"*, i64*, i64*)**, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %28, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)** %29, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %2
  %30 = load i32, i32* @x.437
  %31 = load i32, i32* @y.438
  %32 = add i32 %30, -753366497
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -753366497
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -854900605, i32 -1841967299
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i64 (%"union.std::_Any_data"*, i64*, i64*)**, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %2
  ret i64 (%"union.std::_Any_data"*, i64*, i64*)** %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i64 (%"union.std::_Any_data"*, i64*, i64*)**, align 8
  store i64 (%"union.std::_Any_data"*, i64*, i64*)** %0, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %48, align 8
  %49 = load i64 (%"union.std::_Any_data"*, i64*, i64*)**, i64 (%"union.std::_Any_data"*, i64*, i64*)*** %48, align 8
  store i32 1420783859, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, 3196364664903060028
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 3196364664903060028
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt6vectorIlSaIlEE6insertEN9__gnu_cxx17__normal_iteratorIPKlS1_EEmRS4_(%"class.std::vector.5"*, i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i64* %1, i64** %15, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %7, align 8
  store i64 %2, i64* %8, align 8
  store i64* %3, i64** %9, align 8
  %16 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %17 = call i64* @_ZNKSt6vectorIlSaIlEE6cbeginEv(%"class.std::vector.5"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPKlSt6vectorIlSaIlEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %11) #3
  store i64 %19, i64* %10, align 8
  %20 = call i64* @_ZNSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %16) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %13, i32 0, i32 0
  store i64* %20, i64** %21, align 8
  %22 = load i64, i64* %10, align 8
  %23 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEplEl(%"class.__gnu_cxx::__normal_iterator.15"* %13, i64 %22) #3
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %12, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load i64*, i64** %9, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %12, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  call void @_ZNSt6vectorIlSaIlEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPlS1_EEmRKl(%"class.std::vector.5"* %16, i64* %28, i64 %25, i64* dereferenceable(8) %26)
  %29 = call i64* @_ZNSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %16) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %14, i32 0, i32 0
  store i64* %29, i64** %30, align 8
  %31 = load i64, i64* %10, align 8
  %32 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEplEl(%"class.__gnu_cxx::__normal_iterator.15"* %14, i64 %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i64* %32, i64** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  ret i64* %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.443
  %6 = load i32, i32* @y.444
  %7 = add i32 %5, 1065742901
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1065742901
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -435599581, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -435599581, label %19
    i32 -332933261, label %27
    i32 725023797, label %63
    i32 917900259, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -332933261, i32 917900259
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %29 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %31 = bitcast %"class.std::vector.5"* %30 to %"struct.std::_Vector_base.6"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.15"* %28, i64** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  store i64* %35, i64** %2
  %36 = load i32, i32* @x.443
  %37 = load i32, i32* @y.444
  %38 = sub i32 %36, 274752385
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 274752385
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 725023797, i32 917900259
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64*, i64** %2
  ret i64* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %67 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %67, align 8
  %68 = load %"class.std::vector.5"*, %"class.std::vector.5"** %67, align 8
  %69 = bitcast %"class.std::vector.5"* %68 to %"struct.std::_Vector_base.6"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %70, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.15"* %66, i64** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %66, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  store i32 -332933261, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2IPlEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %8 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %7) #3
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEE15_M_erase_at_endEPl(%"class.std::vector.5"*, i64*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %12 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %11) #3
  invoke void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %6, i64* %10, %"class.std::allocator.7"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i64*, i64** %4, align 8
  %15 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %16, i32 0, i32 1
  store i64* %14, i64** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.447
  %20 = load i32, i32* @y.448
  %21 = sub i32 %19, -397564285
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -397564285
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %63

; <label>:33:                                     ; preds = %18, %63
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  call void @__clang_call_terminate(i8* %35) #12
  %36 = load i32, i32* @x.447
  %37 = load i32, i32* @y.448
  %38 = add i32 %36, -174937431
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -174937431
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %63

; <label>:62:                                     ; preds = %33
  unreachable

; <label>:63:                                     ; preds = %33, %18
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #12
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKlSt6vectorIlSaIlEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.449
  %7 = load i32, i32* @y.450
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -2063757898, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %113
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2063757898, label %19
    i32 -1545502751, label %39
    i32 -907643480, label %69
    i32 -1002869726, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %113

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1545502751, i32 -1002869726
  store i32 %38, i32* %15
  br label %113

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %40, align 8
  %43 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %42) #3
  %44 = load i64*, i64** %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %41, align 8
  %46 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %45) #3
  %47 = load i64*, i64** %46, align 8
  %48 = ptrtoint i64* %44 to i64
  %49 = ptrtoint i64* %47 to i64
  %50 = sub i64 0, %49
  %51 = add i64 %48, %50
  %52 = sub i64 %48, %49
  %53 = sdiv exact i64 %51, 8
  store i64 %53, i64* %3
  %54 = load i32, i32* @x.449
  %55 = load i32, i32* @y.450
  %56 = sub i32 %54, -599327121
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -599327121
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -907643480, i32 -1002869726
  store i32 %68, i32* %15
  br label %113

; <label>:69:                                     ; preds = %16
  %70 = load volatile i64, i64* %3
  ret i64 %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %72, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %72, align 8
  %75 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %74) #3
  %76 = load i64*, i64** %75, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %73, align 8
  %78 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %77) #3
  %79 = load i64*, i64** %78, align 8
  %80 = ptrtoint i64* %76 to i64
  %81 = ptrtoint i64* %79 to i64
  %82 = add i64 %80, -7522512907581591700
  %83 = sub i64 %82, %81
  %84 = sub i64 %83, -7522512907581591700
  %85 = sub i64 %80, %81
  %86 = mul i64 %84, %81
  %87 = add i64 %80, 7421746100087020893
  %88 = sub i64 %87, %81
  %89 = sub i64 %88, 7421746100087020893
  %90 = sub i64 %80, %81
  %91 = mul i64 %89, %81
  %92 = add i64 %80, 5881854977586277475
  %93 = sub i64 %92, %81
  %94 = sub i64 %93, 5881854977586277475
  %95 = sub i64 %80, %81
  %96 = mul i64 %94, %81
  %97 = sub i64 0, -3341760544995084930
  %98 = sub i64 %97, %80
  %99 = add i64 %98, -3341760544995084930
  %100 = sub i64 0, %80
  %101 = sub i64 0, %99
  %102 = sub i64 0, %81
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, %81
  %106 = sub i64 %80, -7998612057807690858
  %107 = sub i64 %106, %81
  %108 = add i64 %107, -7998612057807690858
  %109 = sub i64 %80, %81
  %110 = shl i64 %108, 8
  %111 = shl i64 %108, 8
  %112 = sdiv exact i64 %108, 8
  store i32 -1545502751, i32* %15
  br label %113

; <label>:113:                                    ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIlSaIlEE6cbeginEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.16"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPlS1_EEmRKl(%"class.std::vector.5"*, i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.453
  %6 = load i32, i32* @y.454
  %7 = add i32 %5, -53586941
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -53586941
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %635

; <label>:19:                                     ; preds = %4, %635
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %21 = alloca %"class.std::vector.5"*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %27 = alloca i64*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %20, i32 0, i32 0
  store i64* %1, i64** %35, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %21, align 8
  store i64 %2, i64* %22, align 8
  store i64* %3, i64** %23, align 8
  %36 = load %"class.std::vector.5"*, %"class.std::vector.5"** %21, align 8
  %37 = load i64, i64* %22, align 8
  %38 = icmp ne i64 %37, 0
  %39 = load i32, i32* @x.453
  %40 = load i32, i32* @y.454
  %41 = add i32 %39, -1925048811
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1925048811
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %635

; <label>:53:                                     ; preds = %19
  br i1 %38, label %54, label %585

; <label>:54:                                     ; preds = %53
  %55 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %56, i32 0, i32 2
  %58 = load i64*, i64** %57, align 8
  %59 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %60, i32 0, i32 1
  %62 = load i64*, i64** %61, align 8
  %63 = ptrtoint i64* %58 to i64
  %64 = ptrtoint i64* %62 to i64
  %65 = sub i64 %63, -3452733035569652415
  %66 = sub i64 %65, %64
  %67 = add i64 %66, -3452733035569652415
  %68 = sub i64 %63, %64
  %69 = sdiv exact i64 %67, 8
  %70 = load i64, i64* %22, align 8
  %71 = icmp uge i64 %69, %70
  br i1 %71, label %72, label %165

; <label>:72:                                     ; preds = %54
  %73 = load i64*, i64** %23, align 8
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %24, align 8
  %75 = call i64* @_ZNSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %36) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %26, i32 0, i32 0
  store i64* %75, i64** %76, align 8
  %77 = call i64 @_ZN9__gnu_cxxmiIPlSt6vectorIlSaIlEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %26, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %20) #3
  store i64 %77, i64* %25, align 8
  %78 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %79, i32 0, i32 1
  %81 = load i64*, i64** %80, align 8
  store i64* %81, i64** %27, align 8
  %82 = load i64, i64* %25, align 8
  %83 = load i64, i64* %22, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %129

; <label>:85:                                     ; preds = %72
  %86 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %87, i32 0, i32 1
  %89 = load i64*, i64** %88, align 8
  %90 = load i64, i64* %22, align 8
  %91 = sub i64 0, -8532179379708975279
  %92 = sub i64 %91, %90
  %93 = add i64 %92, -8532179379708975279
  %94 = sub i64 0, %90
  %95 = getelementptr inbounds i64, i64* %89, i64 %93
  %96 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %97, i32 0, i32 1
  %99 = load i64*, i64** %98, align 8
  %100 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %101, i32 0, i32 1
  %103 = load i64*, i64** %102, align 8
  %104 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %105 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %104) #3
  %106 = call i64* @_ZSt22__uninitialized_move_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64* %95, i64* %99, i64* %103, %"class.std::allocator.7"* dereferenceable(1) %105)
  %107 = load i64, i64* %22, align 8
  %108 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %109, i32 0, i32 1
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds i64, i64* %111, i64 %107
  store i64* %112, i64** %110, align 8
  %113 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %20) #3
  %114 = load i64*, i64** %113, align 8
  %115 = load i64*, i64** %27, align 8
  %116 = load i64, i64* %22, align 8
  %117 = sub i64 0, %116
  %118 = add i64 0, %117
  %119 = sub i64 0, %116
  %120 = getelementptr inbounds i64, i64* %115, i64 %118
  %121 = load i64*, i64** %27, align 8
  %122 = call i64* @_ZSt13move_backwardIPlS0_ET0_T_S2_S1_(i64* %114, i64* %120, i64* %121)
  %123 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %20) #3
  %124 = load i64*, i64** %123, align 8
  %125 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %20) #3
  %126 = load i64*, i64** %125, align 8
  %127 = load i64, i64* %22, align 8
  %128 = getelementptr inbounds i64, i64* %126, i64 %127
  call void @_ZSt4fillIPllEvT_S1_RKT0_(i64* %124, i64* %128, i64* dereferenceable(8) %24)
  br label %164

; <label>:129:                                    ; preds = %72
  %130 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %131, i32 0, i32 1
  %133 = load i64*, i64** %132, align 8
  %134 = load i64, i64* %22, align 8
  %135 = load i64, i64* %25, align 8
  %136 = sub i64 0, %135
  %137 = add i64 %134, %136
  %138 = sub i64 %134, %135
  %139 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %140 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %139) #3
  %141 = call i64* @_ZSt24__uninitialized_fill_n_aIPlmllET_S1_T0_RKT1_RSaIT2_E(i64* %133, i64 %137, i64* dereferenceable(8) %24, %"class.std::allocator.7"* dereferenceable(1) %140)
  %142 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %143, i32 0, i32 1
  store i64* %141, i64** %144, align 8
  %145 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %20) #3
  %146 = load i64*, i64** %145, align 8
  %147 = load i64*, i64** %27, align 8
  %148 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %149, i32 0, i32 1
  %151 = load i64*, i64** %150, align 8
  %152 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %153 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %152) #3
  %154 = call i64* @_ZSt22__uninitialized_move_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64* %146, i64* %147, i64* %151, %"class.std::allocator.7"* dereferenceable(1) %153)
  %155 = load i64, i64* %25, align 8
  %156 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %157, i32 0, i32 1
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds i64, i64* %159, i64 %155
  store i64* %160, i64** %158, align 8
  %161 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %20) #3
  %162 = load i64*, i64** %161, align 8
  %163 = load i64*, i64** %27, align 8
  call void @_ZSt4fillIPllEvT_S1_RKT0_(i64* %162, i64* %163, i64* dereferenceable(8) %24)
  br label %164

; <label>:164:                                    ; preds = %129, %85
  br label %584

; <label>:165:                                    ; preds = %54
  %166 = load i64, i64* %22, align 8
  %167 = call i64 @_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc(%"class.std::vector.5"* %36, i64 %166, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %167, i64* %28, align 8
  %168 = call i64* @_ZNSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %36) #3
  %169 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %30, i32 0, i32 0
  store i64* %168, i64** %169, align 8
  %170 = call i64 @_ZN9__gnu_cxxmiIPlSt6vectorIlSaIlEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %20, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %30) #3
  store i64 %170, i64* %29, align 8
  %171 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %172 = load i64, i64* %28, align 8
  %173 = call i64* @_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %171, i64 %172)
  store i64* %173, i64** %31, align 8
  %174 = load i64*, i64** %31, align 8
  store i64* %174, i64** %32, align 8
  %175 = load i64*, i64** %31, align 8
  %176 = load i64, i64* %29, align 8
  %177 = getelementptr inbounds i64, i64* %175, i64 %176
  %178 = load i64, i64* %22, align 8
  %179 = load i64*, i64** %23, align 8
  %180 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %181 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %180) #3
  %182 = invoke i64* @_ZSt24__uninitialized_fill_n_aIPlmllET_S1_T0_RKT1_RSaIT2_E(i64* %177, i64 %178, i64* dereferenceable(8) %179, %"class.std::allocator.7"* dereferenceable(1) %181)
          to label %183 unwind label %262

; <label>:183:                                    ; preds = %165
  store i64* null, i64** %32, align 8
  %184 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %185 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %184, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %185, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %20) #3
  %189 = load i64*, i64** %188, align 8
  %190 = load i64*, i64** %31, align 8
  %191 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %192 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %191) #3
  %193 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64* %187, i64* %189, i64* %190, %"class.std::allocator.7"* dereferenceable(1) %192)
          to label %194 unwind label %262

; <label>:194:                                    ; preds = %183
  store i64* %193, i64** %32, align 8
  %195 = load i64, i64* %22, align 8
  %196 = load i64*, i64** %32, align 8
  %197 = getelementptr inbounds i64, i64* %196, i64 %195
  store i64* %197, i64** %32, align 8
  %198 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %20) #3
  %199 = load i64*, i64** %198, align 8
  %200 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %200, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %201, i32 0, i32 1
  %203 = load i64*, i64** %202, align 8
  %204 = load i64*, i64** %32, align 8
  %205 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %206 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %205) #3
  %207 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64* %199, i64* %203, i64* %204, %"class.std::allocator.7"* dereferenceable(1) %206)
          to label %208 unwind label %262

; <label>:208:                                    ; preds = %194
  %209 = load i32, i32* @x.453
  %210 = load i32, i32* @y.454
  %211 = sub i32 0, 1
  %212 = add i32 %209, %211
  %213 = sub i32 %209, 1
  %214 = mul i32 %209, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %210, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 false, true
  %221 = and i1 %218, false
  %222 = and i1 %216, %220
  %223 = and i1 %219, false
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 false, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  br i1 %232, label %234, label %655

; <label>:234:                                    ; preds = %208, %655
  store i64* %207, i64** %32, align 8
  %235 = load i32, i32* @x.453
  %236 = load i32, i32* @y.454
  %237 = add i32 %235, -2045178587
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, -2045178587
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 true, true
  %248 = and i1 %245, true
  %249 = and i1 %243, %247
  %250 = and i1 %246, true
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 true, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  br i1 %259, label %261, label %655

; <label>:261:                                    ; preds = %234
  br label %539

; <label>:262:                                    ; preds = %194, %183, %165
  %263 = landingpad { i8*, i32 }
          catch i8* null
  %264 = extractvalue { i8*, i32 } %263, 0
  store i8* %264, i8** %33, align 8
  %265 = extractvalue { i8*, i32 } %263, 1
  store i32 %265, i32* %34, align 4
  br label %266

; <label>:266:                                    ; preds = %262
  %267 = load i8*, i8** %33, align 8
  %268 = call i8* @__cxa_begin_catch(i8* %267) #3
  %269 = load i64*, i64** %32, align 8
  %270 = icmp ne i64* %269, null
  br i1 %270, label %422, label %271

; <label>:271:                                    ; preds = %266
  %272 = load i32, i32* @x.453
  %273 = load i32, i32* @y.454
  %274 = add i32 %272, -67690545
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, -67690545
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 true, true
  %285 = and i1 %282, true
  %286 = and i1 %280, %284
  %287 = and i1 %283, true
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 true, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %656

; <label>:298:                                    ; preds = %271, %656
  %299 = load i64*, i64** %31, align 8
  %300 = load i64, i64* %29, align 8
  %301 = getelementptr inbounds i64, i64* %299, i64 %300
  %302 = load i64*, i64** %31, align 8
  %303 = load i64, i64* %29, align 8
  %304 = getelementptr inbounds i64, i64* %302, i64 %303
  %305 = load i64, i64* %22, align 8
  %306 = getelementptr inbounds i64, i64* %304, i64 %305
  %307 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %308 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %307) #3
  %309 = load i32, i32* @x.453
  %310 = load i32, i32* @y.454
  %311 = sub i32 0, 1
  %312 = add i32 %309, %311
  %313 = sub i32 %309, 1
  %314 = mul i32 %309, %312
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %310, 10
  %318 = and i1 %316, %317
  %319 = xor i1 %316, %317
  %320 = or i1 %318, %319
  %321 = or i1 %316, %317
  br i1 %320, label %322, label %656

; <label>:322:                                    ; preds = %298
  invoke void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %301, i64* %306, %"class.std::allocator.7"* dereferenceable(1) %308)
          to label %323 unwind label %377

; <label>:323:                                    ; preds = %322
  %324 = load i32, i32* @x.453
  %325 = load i32, i32* @y.454
  %326 = sub i32 0, 1
  %327 = add i32 %324, %326
  %328 = sub i32 %324, 1
  %329 = mul i32 %324, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %325, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 true, true
  %336 = and i1 %333, true
  %337 = and i1 %331, %335
  %338 = and i1 %334, true
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 true, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  br i1 %347, label %349, label %667

; <label>:349:                                    ; preds = %323, %667
  %350 = load i32, i32* @x.453
  %351 = load i32, i32* @y.454
  %352 = add i32 %350, 1169622809
  %353 = sub i32 %352, 1
  %354 = sub i32 %353, 1169622809
  %355 = sub i32 %350, 1
  %356 = mul i32 %350, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %351, 10
  %360 = xor i1 %358, true
  %361 = xor i1 %359, true
  %362 = xor i1 false, true
  %363 = and i1 %360, false
  %364 = and i1 %358, %362
  %365 = and i1 %361, false
  %366 = and i1 %359, %362
  %367 = or i1 %363, %364
  %368 = or i1 %365, %366
  %369 = xor i1 %367, %368
  %370 = or i1 %360, %361
  %371 = xor i1 %370, true
  %372 = or i1 false, %362
  %373 = and i1 %371, %372
  %374 = or i1 %369, %373
  %375 = or i1 %358, %359
  br i1 %374, label %376, label %667

; <label>:376:                                    ; preds = %349
  br label %481

; <label>:377:                                    ; preds = %537, %536, %422, %322
  %378 = load i32, i32* @x.453
  %379 = load i32, i32* @y.454
  %380 = sub i32 0, 1
  %381 = add i32 %378, %380
  %382 = sub i32 %378, 1
  %383 = mul i32 %378, %381
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %379, 10
  %387 = and i1 %385, %386
  %388 = xor i1 %385, %386
  %389 = or i1 %387, %388
  %390 = or i1 %385, %386
  br i1 %389, label %391, label %668

; <label>:391:                                    ; preds = %377, %668
  %392 = landingpad { i8*, i32 }
          cleanup
  %393 = extractvalue { i8*, i32 } %392, 0
  store i8* %393, i8** %33, align 8
  %394 = extractvalue { i8*, i32 } %392, 1
  store i32 %394, i32* %34, align 4
  %395 = load i32, i32* @x.453
  %396 = load i32, i32* @y.454
  %397 = sub i32 %395, -824244559
  %398 = sub i32 %397, 1
  %399 = add i32 %398, -824244559
  %400 = sub i32 %395, 1
  %401 = mul i32 %395, %399
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %396, 10
  %405 = xor i1 %403, true
  %406 = xor i1 %404, true
  %407 = xor i1 true, true
  %408 = and i1 %405, true
  %409 = and i1 %403, %407
  %410 = and i1 %406, true
  %411 = and i1 %404, %407
  %412 = or i1 %408, %409
  %413 = or i1 %410, %411
  %414 = xor i1 %412, %413
  %415 = or i1 %405, %406
  %416 = xor i1 %415, true
  %417 = or i1 true, %407
  %418 = and i1 %416, %417
  %419 = or i1 %414, %418
  %420 = or i1 %403, %404
  br i1 %419, label %421, label %668

; <label>:421:                                    ; preds = %391
  invoke void @__cxa_end_catch()
          to label %538 unwind label %591

; <label>:422:                                    ; preds = %266
  %423 = load i64*, i64** %31, align 8
  %424 = load i64*, i64** %32, align 8
  %425 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %426 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %425) #3
  invoke void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %423, i64* %424, %"class.std::allocator.7"* dereferenceable(1) %426)
          to label %427 unwind label %377

; <label>:427:                                    ; preds = %422
  %428 = load i32, i32* @x.453
  %429 = load i32, i32* @y.454
  %430 = sub i32 %428, -1952393568
  %431 = sub i32 %430, 1
  %432 = add i32 %431, -1952393568
  %433 = sub i32 %428, 1
  %434 = mul i32 %428, %432
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %429, 10
  %438 = xor i1 %436, true
  %439 = xor i1 %437, true
  %440 = xor i1 false, true
  %441 = and i1 %438, false
  %442 = and i1 %436, %440
  %443 = and i1 %439, false
  %444 = and i1 %437, %440
  %445 = or i1 %441, %442
  %446 = or i1 %443, %444
  %447 = xor i1 %445, %446
  %448 = or i1 %438, %439
  %449 = xor i1 %448, true
  %450 = or i1 false, %440
  %451 = and i1 %449, %450
  %452 = or i1 %447, %451
  %453 = or i1 %436, %437
  br i1 %452, label %454, label %672

; <label>:454:                                    ; preds = %427, %672
  %455 = load i32, i32* @x.453
  %456 = load i32, i32* @y.454
  %457 = sub i32 0, 1
  %458 = add i32 %455, %457
  %459 = sub i32 %455, 1
  %460 = mul i32 %455, %458
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %456, 10
  %464 = xor i1 %462, true
  %465 = xor i1 %463, true
  %466 = xor i1 false, true
  %467 = and i1 %464, false
  %468 = and i1 %462, %466
  %469 = and i1 %465, false
  %470 = and i1 %463, %466
  %471 = or i1 %467, %468
  %472 = or i1 %469, %470
  %473 = xor i1 %471, %472
  %474 = or i1 %464, %465
  %475 = xor i1 %474, true
  %476 = or i1 false, %466
  %477 = and i1 %475, %476
  %478 = or i1 %473, %477
  %479 = or i1 %462, %463
  br i1 %478, label %480, label %672

; <label>:480:                                    ; preds = %454
  br label %481

; <label>:481:                                    ; preds = %480, %376
  %482 = load i32, i32* @x.453
  %483 = load i32, i32* @y.454
  %484 = sub i32 0, 1
  %485 = add i32 %482, %484
  %486 = sub i32 %482, 1
  %487 = mul i32 %482, %485
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %483, 10
  %491 = xor i1 %489, true
  %492 = xor i1 %490, true
  %493 = xor i1 false, true
  %494 = and i1 %491, false
  %495 = and i1 %489, %493
  %496 = and i1 %492, false
  %497 = and i1 %490, %493
  %498 = or i1 %494, %495
  %499 = or i1 %496, %497
  %500 = xor i1 %498, %499
  %501 = or i1 %491, %492
  %502 = xor i1 %501, true
  %503 = or i1 false, %493
  %504 = and i1 %502, %503
  %505 = or i1 %500, %504
  %506 = or i1 %489, %490
  br i1 %505, label %507, label %673

; <label>:507:                                    ; preds = %481, %673
  %508 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %509 = load i64*, i64** %31, align 8
  %510 = load i64, i64* %28, align 8
  %511 = load i32, i32* @x.453
  %512 = load i32, i32* @y.454
  %513 = sub i32 0, 1
  %514 = add i32 %511, %513
  %515 = sub i32 %511, 1
  %516 = mul i32 %511, %514
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %512, 10
  %520 = xor i1 %518, true
  %521 = xor i1 %519, true
  %522 = xor i1 false, true
  %523 = and i1 %520, false
  %524 = and i1 %518, %522
  %525 = and i1 %521, false
  %526 = and i1 %519, %522
  %527 = or i1 %523, %524
  %528 = or i1 %525, %526
  %529 = xor i1 %527, %528
  %530 = or i1 %520, %521
  %531 = xor i1 %530, true
  %532 = or i1 false, %522
  %533 = and i1 %531, %532
  %534 = or i1 %529, %533
  %535 = or i1 %518, %519
  br i1 %534, label %536, label %673

; <label>:536:                                    ; preds = %507
  invoke void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %508, i64* %509, i64 %510)
          to label %537 unwind label %377

; <label>:537:                                    ; preds = %536
  invoke void @__cxa_rethrow() #13
          to label %634 unwind label %377

; <label>:538:                                    ; preds = %421
  br label %586

; <label>:539:                                    ; preds = %261
  %540 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %541 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %540, i32 0, i32 0
  %542 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %541, i32 0, i32 0
  %543 = load i64*, i64** %542, align 8
  %544 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %545 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %544, i32 0, i32 0
  %546 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %545, i32 0, i32 1
  %547 = load i64*, i64** %546, align 8
  %548 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %549 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %548) #3
  call void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %543, i64* %547, %"class.std::allocator.7"* dereferenceable(1) %549)
  %550 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %551 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %552 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %551, i32 0, i32 0
  %553 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %552, i32 0, i32 0
  %554 = load i64*, i64** %553, align 8
  %555 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %556 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %555, i32 0, i32 0
  %557 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %556, i32 0, i32 2
  %558 = load i64*, i64** %557, align 8
  %559 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %560 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %559, i32 0, i32 0
  %561 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %560, i32 0, i32 0
  %562 = load i64*, i64** %561, align 8
  %563 = ptrtoint i64* %558 to i64
  %564 = ptrtoint i64* %562 to i64
  %565 = add i64 %563, 8928269769081891004
  %566 = sub i64 %565, %564
  %567 = sub i64 %566, 8928269769081891004
  %568 = sub i64 %563, %564
  %569 = sdiv exact i64 %567, 8
  call void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %550, i64* %554, i64 %569)
  %570 = load i64*, i64** %31, align 8
  %571 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %572 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %571, i32 0, i32 0
  %573 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %572, i32 0, i32 0
  store i64* %570, i64** %573, align 8
  %574 = load i64*, i64** %32, align 8
  %575 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %576 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %575, i32 0, i32 0
  %577 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %576, i32 0, i32 1
  store i64* %574, i64** %577, align 8
  %578 = load i64*, i64** %31, align 8
  %579 = load i64, i64* %28, align 8
  %580 = getelementptr inbounds i64, i64* %578, i64 %579
  %581 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %582 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %581, i32 0, i32 0
  %583 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %582, i32 0, i32 2
  store i64* %580, i64** %583, align 8
  br label %584

; <label>:584:                                    ; preds = %539, %164
  br label %585

; <label>:585:                                    ; preds = %584, %53
  ret void

; <label>:586:                                    ; preds = %538
  %587 = load i8*, i8** %33, align 8
  %588 = load i32, i32* %34, align 4
  %589 = insertvalue { i8*, i32 } undef, i8* %587, 0
  %590 = insertvalue { i8*, i32 } %589, i32 %588, 1
  resume { i8*, i32 } %590

; <label>:591:                                    ; preds = %421
  %592 = load i32, i32* @x.453
  %593 = load i32, i32* @y.454
  %594 = sub i32 0, 1
  %595 = add i32 %592, %594
  %596 = sub i32 %592, 1
  %597 = mul i32 %592, %595
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %593, 10
  %601 = and i1 %599, %600
  %602 = xor i1 %599, %600
  %603 = or i1 %601, %602
  %604 = or i1 %599, %600
  br i1 %603, label %605, label %677

; <label>:605:                                    ; preds = %591, %677
  %606 = landingpad { i8*, i32 }
          catch i8* null
  %607 = extractvalue { i8*, i32 } %606, 0
  call void @__clang_call_terminate(i8* %607) #12
  %608 = load i32, i32* @x.453
  %609 = load i32, i32* @y.454
  %610 = sub i32 0, 1
  %611 = add i32 %608, %610
  %612 = sub i32 %608, 1
  %613 = mul i32 %608, %611
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %609, 10
  %617 = xor i1 %615, true
  %618 = xor i1 %616, true
  %619 = xor i1 true, true
  %620 = and i1 %617, true
  %621 = and i1 %615, %619
  %622 = and i1 %618, true
  %623 = and i1 %616, %619
  %624 = or i1 %620, %621
  %625 = or i1 %622, %623
  %626 = xor i1 %624, %625
  %627 = or i1 %617, %618
  %628 = xor i1 %627, true
  %629 = or i1 true, %619
  %630 = and i1 %628, %629
  %631 = or i1 %626, %630
  %632 = or i1 %615, %616
  br i1 %631, label %633, label %677

; <label>:633:                                    ; preds = %605
  unreachable

; <label>:634:                                    ; preds = %537
  unreachable

; <label>:635:                                    ; preds = %19, %4
  %636 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %637 = alloca %"class.std::vector.5"*, align 8
  %638 = alloca i64, align 8
  %639 = alloca i64*, align 8
  %640 = alloca i64, align 8
  %641 = alloca i64, align 8
  %642 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %643 = alloca i64*, align 8
  %644 = alloca i64, align 8
  %645 = alloca i64, align 8
  %646 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %647 = alloca i64*, align 8
  %648 = alloca i64*, align 8
  %649 = alloca i8*
  %650 = alloca i32
  %651 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %636, i32 0, i32 0
  store i64* %1, i64** %651, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %637, align 8
  store i64 %2, i64* %638, align 8
  store i64* %3, i64** %639, align 8
  %652 = load %"class.std::vector.5"*, %"class.std::vector.5"** %637, align 8
  %653 = load i64, i64* %638, align 8
  %654 = icmp ne i64 %653, 0
  br label %19

; <label>:655:                                    ; preds = %234, %208
  store i64* %207, i64** %32, align 8
  br label %234

; <label>:656:                                    ; preds = %298, %271
  %657 = load i64*, i64** %31, align 8
  %658 = load i64, i64* %29, align 8
  %659 = getelementptr inbounds i64, i64* %657, i64 %658
  %660 = load i64*, i64** %31, align 8
  %661 = load i64, i64* %29, align 8
  %662 = getelementptr inbounds i64, i64* %660, i64 %661
  %663 = load i64, i64* %22, align 8
  %664 = getelementptr inbounds i64, i64* %662, i64 %663
  %665 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %666 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %665) #3
  br label %298

; <label>:667:                                    ; preds = %349, %323
  br label %349

; <label>:668:                                    ; preds = %391, %377
  %669 = landingpad { i8*, i32 }
          cleanup
  %670 = extractvalue { i8*, i32 } %669, 0
  store i8* %670, i8** %33, align 8
  %671 = extractvalue { i8*, i32 } %669, 1
  store i32 %671, i32* %34, align 4
  br label %391

; <label>:672:                                    ; preds = %454, %427
  br label %454

; <label>:673:                                    ; preds = %507, %481
  %674 = bitcast %"class.std::vector.5"* %36 to %"struct.std::_Vector_base.6"*
  %675 = load i64*, i64** %31, align 8
  %676 = load i64, i64* %28, align 8
  br label %507

; <label>:677:                                    ; preds = %605, %591
  %678 = landingpad { i8*, i32 }
          catch i8* null
  %679 = extractvalue { i8*, i32 } %678, 0
  call void @__clang_call_terminate(i8* %679) #12
  br label %605
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.455
  %6 = load i32, i32* @y.456
  %7 = add i32 %5, 90450846
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 90450846
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -227903253, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -227903253, label %19
    i32 548313228, label %39
    i32 -623941730, label %75
    i32 -741978439, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 548313228, i32 -741978439
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %41 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %41, align 8
  %42 = load %"class.std::vector.5"*, %"class.std::vector.5"** %41, align 8
  %43 = bitcast %"class.std::vector.5"* %42 to %"struct.std::_Vector_base.6"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %44, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.15"* %40, i64** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %40, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  store i64* %47, i64** %2
  %48 = load i32, i32* @x.455
  %49 = load i32, i32* @y.456
  %50 = add i32 %48, 1275931433
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1275931433
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -623941730, i32 -741978439
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  %76 = load volatile i64*, i64** %2
  ret i64* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %79 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %79, align 8
  %80 = load %"class.std::vector.5"*, %"class.std::vector.5"** %79, align 8
  %81 = bitcast %"class.std::vector.5"* %80 to %"struct.std::_Vector_base.6"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %82, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.15"* %78, i64** dereferenceable(8) %83) #3
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %78, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  store i32 548313228, i32* %15
  br label %86

; <label>:86:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEplEl(%"class.__gnu_cxx::__normal_iterator.15"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  store i64* %11, i64** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.15"* %3, i64** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.16"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPlSt6vectorIlSaIlEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %5) #3
  %7 = load i64*, i64** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %9 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %8) #3
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %7 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %11, -3557206359577014364
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -3557206359577014364
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_move_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator.17", align 8
  %10 = alloca %"class.std::move_iterator.17", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt18make_move_iteratorIPlESt13move_iteratorIT_ES2_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt18make_move_iteratorIPlESt13move_iteratorIT_ES2_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.7"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13move_backwardIPlS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt23__copy_move_backward_a2ILb1EPlS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %11)
  ret i64* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPllEvT_S1_RKT0_(i64*, i64*, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  call void @_ZSt8__fill_aIPllEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %8, i64* %10, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPlmllET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.473
  %9 = load i32, i32* @y.474
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -451908127, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %63
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -451908127, label %21
    i32 292495832, label %29
    i32 155224110, label %52
    i32 1983302142, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %63

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 292495832, i32 1983302142
  store i32 %28, i32* %17
  br label %63

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64*, align 8
  %33 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %30, align 8
  store i64 %1, i64* %31, align 8
  store i64* %2, i64** %32, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %33, align 8
  %34 = load i64*, i64** %30, align 8
  %35 = load i64, i64* %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZSt20uninitialized_fill_nIPlmlET_S1_T0_RKT1_(i64* %34, i64 %35, i64* dereferenceable(8) %36)
  store i64* %37, i64** %5
  %38 = load i32, i32* @x.473
  %39 = load i32, i32* @y.474
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 155224110, i32 1983302142
  store i32 %51, i32* %17
  br label %63

; <label>:52:                                     ; preds = %18
  %53 = load volatile i64*, i64** %5
  ret i64* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i64*, align 8
  %56 = alloca i64, align 8
  %57 = alloca i64*, align 8
  %58 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %55, align 8
  store i64 %1, i64* %56, align 8
  store i64* %2, i64** %57, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %58, align 8
  %59 = load i64*, i64** %55, align 8
  %60 = load i64, i64* %56, align 8
  %61 = load i64*, i64** %57, align 8
  %62 = call i64* @_ZSt20uninitialized_fill_nIPlmlET_S1_T0_RKT1_(i64* %59, i64 %60, i64* dereferenceable(8) %61)
  store i32 292495832, i32* %17
  br label %63

; <label>:63:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc(%"class.std::vector.5"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.5"*
  %8 = alloca %"class.std::vector.5"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  store %"class.std::vector.5"* %13, %"class.std::vector.5"** %7
  %14 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %15 = call i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"* %14) #3
  %16 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %17 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %16) #3
  %18 = sub i64 0, %17
  %19 = add i64 %15, %18
  %20 = sub i64 %15, %17
  store i64 %19, i64* %6
  %21 = load i64, i64* %9, align 8
  store i64 %21, i64* %5
  %22 = alloca i32
  store i32 1412071861, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %158
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 1412071861, label %27
    i32 -41615829, label %32
    i32 -1382300224, label %34
    i32 1684611090, label %49
    i32 -1308837993, label %91
    i32 1617845340, label %94
    i32 717258956, label %100
    i32 -553217649, label %103
    i32 886270469, label %105
    i32 -1088819799, label %107
  ]

; <label>:26:                                     ; preds = %24
  br label %158

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %6
  %29 = load volatile i64, i64* %5
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -41615829, i32 -1382300224
  store i32 %31, i32* %22
  br label %158

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #13
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* @x.475
  %36 = load i32, i32* @y.476
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1684611090, i32 -1088819799
  store i32 %48, i32* %22
  br label %158

; <label>:49:                                     ; preds = %24
  %50 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %51 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %50) #3
  %52 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %53 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %52) #3
  store i64 %53, i64* %12, align 8
  %54 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 0, %51
  %57 = sub i64 0, %55
  %58 = add i64 %56, %57
  %59 = sub i64 0, %58
  %60 = add i64 %51, %55
  store i64 %59, i64* %11, align 8
  %61 = load i64, i64* %11, align 8
  %62 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %63 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %62) #3
  %64 = icmp ult i64 %61, %63
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.475
  %66 = load i32, i32* @y.476
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 -1308837993, i32 -1088819799
  store i32 %90, i32* %22
  br label %158

; <label>:91:                                     ; preds = %24
  %92 = load volatile i1, i1* %4
  %93 = select i1 %92, i32 717258956, i32 1617845340
  store i32 %93, i32* %22
  br label %158

; <label>:94:                                     ; preds = %24
  %95 = load i64, i64* %11, align 8
  %96 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %97 = call i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"* %96) #3
  %98 = icmp ugt i64 %95, %97
  %99 = select i1 %98, i32 717258956, i32 -553217649
  store i32 %99, i32* %22
  br label %158

; <label>:100:                                    ; preds = %24
  %101 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %102 = call i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"* %101) #3
  store i32 886270469, i32* %22
  store i64 %102, i64* %23
  br label %158

; <label>:103:                                    ; preds = %24
  %104 = load i64, i64* %11, align 8
  store i32 886270469, i32* %22
  store i64 %104, i64* %23
  br label %158

; <label>:105:                                    ; preds = %24
  %106 = load i64, i64* %23
  ret i64 %106

; <label>:107:                                    ; preds = %24
  %108 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %109 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %108) #3
  %110 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %111 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %110) #3
  store i64 %111, i64* %12, align 8
  %112 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %113 = load i64, i64* %112, align 8
  %114 = add i64 0, 6007411003087031963
  %115 = sub i64 %114, %109
  %116 = sub i64 %115, 6007411003087031963
  %117 = sub i64 0, %109
  %118 = sub i64 %116, -5152025093115388866
  %119 = add i64 %118, %113
  %120 = add i64 %119, -5152025093115388866
  %121 = add i64 %116, %113
  %122 = sub i64 0, %113
  %123 = add i64 %109, %122
  %124 = sub i64 %109, %113
  %125 = mul i64 %123, %113
  %126 = add i64 0, 4432444791719119392
  %127 = sub i64 %126, %109
  %128 = sub i64 %127, 4432444791719119392
  %129 = sub i64 0, %109
  %130 = add i64 %128, 4933384870076532220
  %131 = add i64 %130, %113
  %132 = sub i64 %131, 4933384870076532220
  %133 = add i64 %128, %113
  %134 = sub i64 0, %109
  %135 = add i64 0, %134
  %136 = sub i64 0, %109
  %137 = sub i64 %135, 8610205015066463261
  %138 = add i64 %137, %113
  %139 = add i64 %138, 8610205015066463261
  %140 = add i64 %135, %113
  %141 = sub i64 0, %113
  %142 = add i64 %109, %141
  %143 = sub i64 %109, %113
  %144 = mul i64 %142, %113
  %145 = shl i64 %109, %113
  %146 = sub i64 0, %113
  %147 = add i64 %109, %146
  %148 = sub i64 %109, %113
  %149 = mul i64 %147, %113
  %150 = shl i64 %109, %113
  %151 = sub i64 0, %113
  %152 = sub i64 %109, %151
  %153 = add i64 %109, %113
  store i64 %152, i64* %11, align 8
  %154 = load i64, i64* %11, align 8
  %155 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %156 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %155) #3
  %157 = icmp ult i64 %154, %156
  store i32 1684611090, i32* %22
  br label %158

; <label>:158:                                    ; preds = %107, %103, %100, %94, %91, %49, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.6"*
  %5 = alloca %"struct.std::_Vector_base.6"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5, align 8
  store %"struct.std::_Vector_base.6"* %7, %"struct.std::_Vector_base.6"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -2111945116, i32* %9
  %10 = alloca i64*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -2111945116, label %14
    i32 965976650, label %18
    i32 914253112, label %24
    i32 -1195551714, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 965976650, i32 914253112
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %20 to %"class.std::allocator.7"*
  %22 = load i64, i64* %6, align 8
  %23 = call i64* @_ZNSt16allocator_traitsISaIlEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1) %21, i64 %22)
  store i32 -1195551714, i32* %9
  store i64* %23, i64** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -1195551714, i32* %9
  store i64* null, i64** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i64*, i64** %10
  ret i64* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator.17", align 8
  %10 = alloca %"class.std::move_iterator.17", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.7"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.17", align 8
  %6 = alloca %"class.std::move_iterator.17", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator.17", align 8
  %10 = alloca %"class.std::move_iterator.17", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.17"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.17"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.17"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.17"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18make_move_iteratorIPlESt13move_iteratorIT_ES2_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.483
  %6 = load i32, i32* @y.484
  %7 = add i32 %5, -1783935323
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1783935323
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1272330874, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1272330874, label %19
    i32 1009627915, label %27
    i32 -184384210, label %59
    i32 -915013175, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1009627915, i32 -915013175
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.17", align 8
  %29 = alloca i64*, align 8
  store i64* %0, i64** %29, align 8
  %30 = load i64*, i64** %29, align 8
  call void @_ZNSt13move_iteratorIPlEC2ES0_(%"class.std::move_iterator.17"* %28, i64* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %28, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.483
  %34 = load i32, i32* @y.484
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -184384210, i32 -915013175
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.17", align 8
  %63 = alloca i64*, align 8
  store i64* %0, i64** %63, align 8
  %64 = load i64*, i64** %63, align 8
  call void @_ZNSt13move_iteratorIPlEC2ES0_(%"class.std::move_iterator.17"* %62, i64* %64)
  %65 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %62, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  store i32 1009627915, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.17", align 8
  %5 = alloca %"class.std::move_iterator.17", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.17", align 8
  %9 = alloca %"class.std::move_iterator.17", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.17"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.17"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.17"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.17"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPlES3_EET0_T_S6_S5_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPlES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.487
  %8 = load i32, i32* @y.488
  %9 = sub i32 %7, 479519571
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 479519571
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1828994939, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %94
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1828994939, label %21
    i32 533763589, label %41
    i32 42259981, label %74
    i32 -90953769, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %94

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 533763589, i32 -90953769
  store i32 %40, i32* %17
  br label %94

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.17", align 8
  %43 = alloca %"class.std::move_iterator.17", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.std::move_iterator.17", align 8
  %46 = alloca %"class.std::move_iterator.17", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %42, i32 0, i32 0
  store i64* %0, i64** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %43, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  store i64* %2, i64** %44, align 8
  %49 = bitcast %"class.std::move_iterator.17"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.17"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.17"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.17"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load i64*, i64** %44, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %45, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %46, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = call i64* @_ZSt4copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64* %55, i64* %57, i64* %53)
  store i64* %58, i64** %4
  %59 = load i32, i32* @x.487
  %60 = load i32, i32* @y.488
  %61 = sub i32 %59, -1881904107
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1881904107
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 42259981, i32 -90953769
  store i32 %73, i32* %17
  br label %94

; <label>:74:                                     ; preds = %18
  %75 = load volatile i64*, i64** %4
  ret i64* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.17", align 8
  %78 = alloca %"class.std::move_iterator.17", align 8
  %79 = alloca i64*, align 8
  %80 = alloca %"class.std::move_iterator.17", align 8
  %81 = alloca %"class.std::move_iterator.17", align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %77, i32 0, i32 0
  store i64* %0, i64** %82, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %78, i32 0, i32 0
  store i64* %1, i64** %83, align 8
  store i64* %2, i64** %79, align 8
  %84 = bitcast %"class.std::move_iterator.17"* %80 to i8*
  %85 = bitcast %"class.std::move_iterator.17"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = bitcast %"class.std::move_iterator.17"* %81 to i8*
  %87 = bitcast %"class.std::move_iterator.17"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load i64*, i64** %79, align 8
  %89 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %80, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %81, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = call i64* @_ZSt4copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64* %90, i64* %92, i64* %88)
  store i32 533763589, i32* %17
  br label %94

; <label>:94:                                     ; preds = %76, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.17", align 8
  %5 = alloca %"class.std::move_iterator.17", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.17", align 8
  %8 = alloca %"class.std::move_iterator.17", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.17"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.17"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator.17"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.17"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPlS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPlS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.17", align 8
  %3 = alloca %"class.std::move_iterator.17", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.std::move_iterator.17"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.17"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPlELb1EE7_S_baseES2_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %11, 564625686689807875
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 564625686689807875
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 2035525754, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 2035525754, label %23
    i32 -1371287708, label %27
    i32 -1433589564, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -1371287708, i32 -1433589564
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i64*, i64** %7, align 8
  %29 = bitcast i64* %28 to i8*
  %30 = load i64*, i64** %5, align 8
  %31 = bitcast i64* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 -1433589564, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i64*, i64** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  ret i64* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPlELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.503
  %6 = load i32, i32* @y.504
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1169020341, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1169020341, label %18
    i32 576735094, label %26
    i32 1263630735, label %57
    i32 2124451785, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 576735094, i32 2124451785
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.17", align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %27, i32 0, i32 0
  store i64* %0, i64** %28, align 8
  %29 = call i64* @_ZNKSt13move_iteratorIPlE4baseEv(%"class.std::move_iterator.17"* %27)
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.503
  %31 = load i32, i32* @y.504
  %32 = add i32 %30, 1684740579
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1684740579
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1263630735, i32 2124451785
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::move_iterator.17", align 8
  %61 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %60, i32 0, i32 0
  store i64* %0, i64** %61, align 8
  %62 = call i64* @_ZNKSt13move_iteratorIPlE4baseEv(%"class.std::move_iterator.17"* %60)
  store i32 576735094, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPlE4baseEv(%"class.std::move_iterator.17"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.17"*, align 8
  store %"class.std::move_iterator.17"* %0, %"class.std::move_iterator.17"** %2, align 8
  %3 = load %"class.std::move_iterator.17"*, %"class.std::move_iterator.17"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPlEC2ES0_(%"class.std::move_iterator.17"*, i64*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.507
  %6 = load i32, i32* @y.508
  %7 = sub i32 %5, 196977591
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 196977591
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 399399329, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 399399329, label %19
    i32 708981113, label %27
    i32 1010268975, label %59
    i32 -211514167, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 708981113, i32 -211514167
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.17"*, align 8
  %29 = alloca i64*, align 8
  store %"class.std::move_iterator.17"* %0, %"class.std::move_iterator.17"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"class.std::move_iterator.17"*, %"class.std::move_iterator.17"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %30, i32 0, i32 0
  %32 = load i64*, i64** %29, align 8
  store i64* %32, i64** %31, align 8
  %33 = load i32, i32* @x.507
  %34 = load i32, i32* @y.508
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1010268975, i32 -211514167
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator.17"*, align 8
  %62 = alloca i64*, align 8
  store %"class.std::move_iterator.17"* %0, %"class.std::move_iterator.17"** %61, align 8
  store i64* %1, i64** %62, align 8
  %63 = load %"class.std::move_iterator.17"*, %"class.std::move_iterator.17"** %61, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %63, i32 0, i32 0
  %65 = load i64*, i64** %62, align 8
  store i64* %65, i64** %64, align 8
  store i32 708981113, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt23__copy_move_backward_a2ILb1EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt22__copy_move_backward_aILb1EPlS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_(i64*) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__copy_move_backward_aILb1EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIlEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIlEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 -862229075, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %47
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -862229075, label %22
    i32 -1889784942, label %26
    i32 1902989574, label %39
  ]

; <label>:21:                                     ; preds = %19
  br label %47

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -1889784942, i32 1902989574
  store i32 %25, i32* %18
  br label %47

; <label>:26:                                     ; preds = %19
  %27 = load i64*, i64** %7, align 8
  %28 = load i64, i64* %8, align 8
  %29 = add i64 0, 6503033463283581116
  %30 = sub i64 %29, %28
  %31 = sub i64 %30, 6503033463283581116
  %32 = sub i64 0, %28
  %33 = getelementptr inbounds i64, i64* %27, i64 %31
  %34 = bitcast i64* %33 to i8*
  %35 = load i64*, i64** %5, align 8
  %36 = bitcast i64* %35 to i8*
  %37 = load i64, i64* %8, align 8
  %38 = mul i64 8, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 8, i1 false)
  store i32 1902989574, i32* %18
  br label %47

; <label>:39:                                     ; preds = %19
  %40 = load i64*, i64** %7, align 8
  %41 = load i64, i64* %8, align 8
  %42 = sub i64 0, -7786486640127901821
  %43 = sub i64 %42, %41
  %44 = add i64 %43, -7786486640127901821
  %45 = sub i64 0, %41
  %46 = getelementptr inbounds i64, i64* %40, i64 %44
  ret i64* %46

; <label>:47:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPllEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = alloca i32
  store i32 -2005142422, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %26
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -2005142422, label %14
    i32 -687967037, label %19
    i32 -1416245915, label %22
    i32 -1206374493, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %26

; <label>:14:                                     ; preds = %11
  %15 = load i64*, i64** %4, align 8
  %16 = load i64*, i64** %5, align 8
  %17 = icmp ne i64* %15, %16
  %18 = select i1 %17, i32 -687967037, i32 -1206374493
  store i32 %18, i32* %10
  br label %26

; <label>:19:                                     ; preds = %11
  %20 = load i64, i64* %7, align 8
  %21 = load i64*, i64** %4, align 8
  store i64 %20, i64* %21, align 8
  store i32 -1416245915, i32* %10
  br label %26

; <label>:22:                                     ; preds = %11
  %23 = load i64*, i64** %4, align 8
  %24 = getelementptr inbounds i64, i64* %23, i32 1
  store i64* %24, i64** %4, align 8
  store i32 -2005142422, i32* %10
  br label %26

; <label>:25:                                     ; preds = %11
  ret void

; <label>:26:                                     ; preds = %22, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPlmlET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPlmlEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPlmlEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPlmlET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPlmlET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPlmlEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPlmlEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.525
  %11 = load i32, i32* @y.526
  %12 = sub i32 %10, 951765192
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 951765192
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1282872080, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %201
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1282872080, label %24
    i32 1525184446, label %32
    i32 250703184, label %59
    i32 -807448400, label %60
    i32 1835148411, label %76
    i32 -1729409707, label %107
    i32 -658613791, label %110
    i32 561704413, label %115
    i32 61461136, label %131
    i32 672517164, label %159
    i32 173496468, label %160
    i32 943686655, label %163
    i32 -106738732, label %172
    i32 433846178, label %176
  ]

; <label>:23:                                     ; preds = %21
  br label %201

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1525184446, i32 943686655
  store i32 %31, i32* %20
  br label %201

; <label>:32:                                     ; preds = %21
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %7
  %34 = alloca i64, align 8
  %35 = alloca i64*, align 8
  %36 = alloca i64, align 8
  store i64* %36, i64** %6
  %37 = alloca i64, align 8
  store i64* %37, i64** %5
  %38 = load volatile i64**, i64*** %7
  store i64* %0, i64** %38, align 8
  store i64 %1, i64* %34, align 8
  store i64* %2, i64** %35, align 8
  %39 = load i64*, i64** %35, align 8
  %40 = load i64, i64* %39, align 8
  %41 = load volatile i64*, i64** %6
  store i64 %40, i64* %41, align 8
  %42 = load i64, i64* %34, align 8
  %43 = load volatile i64*, i64** %5
  store i64 %42, i64* %43, align 8
  %44 = load i32, i32* @x.525
  %45 = load i32, i32* @y.526
  %46 = sub i32 %44, -15033659
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -15033659
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 250703184, i32 943686655
  store i32 %58, i32* %20
  br label %201

; <label>:59:                                     ; preds = %21
  store i32 -807448400, i32* %20
  br label %201

; <label>:60:                                     ; preds = %21
  %61 = load i32, i32* @x.525
  %62 = load i32, i32* @y.526
  %63 = add i32 %61, 419285420
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 419285420
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 1835148411, i32 -106738732
  store i32 %75, i32* %20
  br label %201

; <label>:76:                                     ; preds = %21
  %77 = load volatile i64*, i64** %5
  %78 = load i64, i64* %77, align 8
  %79 = icmp ugt i64 %78, 0
  store i1 %79, i1* %4
  %80 = load i32, i32* @x.525
  %81 = load i32, i32* @y.526
  %82 = add i32 %80, 1080290380
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 1080290380
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 -1729409707, i32 -106738732
  store i32 %106, i32* %20
  br label %201

; <label>:107:                                    ; preds = %21
  %108 = load volatile i1, i1* %4
  %109 = select i1 %108, i32 -658613791, i32 173496468
  store i32 %109, i32* %20
  br label %201

; <label>:110:                                    ; preds = %21
  %111 = load volatile i64*, i64** %6
  %112 = load i64, i64* %111, align 8
  %113 = load volatile i64**, i64*** %7
  %114 = load i64*, i64** %113, align 8
  store i64 %112, i64* %114, align 8
  store i32 561704413, i32* %20
  br label %201

; <label>:115:                                    ; preds = %21
  %116 = load i32, i32* @x.525
  %117 = load i32, i32* @y.526
  %118 = add i32 %116, 741669696
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 741669696
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 61461136, i32 433846178
  store i32 %130, i32* %20
  br label %201

; <label>:131:                                    ; preds = %21
  %132 = load volatile i64*, i64** %5
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 0, %133
  %135 = sub i64 0, -1
  %136 = add i64 %134, %135
  %137 = sub i64 0, %136
  %138 = add i64 %133, -1
  %139 = load volatile i64*, i64** %5
  store i64 %137, i64* %139, align 8
  %140 = load volatile i64**, i64*** %7
  %141 = load i64*, i64** %140, align 8
  %142 = getelementptr inbounds i64, i64* %141, i32 1
  %143 = load volatile i64**, i64*** %7
  store i64* %142, i64** %143, align 8
  %144 = load i32, i32* @x.525
  %145 = load i32, i32* @y.526
  %146 = sub i32 %144, 589779916
  %147 = sub i32 %146, 1
  %148 = add i32 %147, 589779916
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 672517164, i32 433846178
  store i32 %158, i32* %20
  br label %201

; <label>:159:                                    ; preds = %21
  store i32 -807448400, i32* %20
  br label %201

; <label>:160:                                    ; preds = %21
  %161 = load volatile i64**, i64*** %7
  %162 = load i64*, i64** %161, align 8
  ret i64* %162

; <label>:163:                                    ; preds = %21
  %164 = alloca i64*, align 8
  %165 = alloca i64, align 8
  %166 = alloca i64*, align 8
  %167 = alloca i64, align 8
  %168 = alloca i64, align 8
  store i64* %0, i64** %164, align 8
  store i64 %1, i64* %165, align 8
  store i64* %2, i64** %166, align 8
  %169 = load i64*, i64** %166, align 8
  %170 = load i64, i64* %169, align 8
  store i64 %170, i64* %167, align 8
  %171 = load i64, i64* %165, align 8
  store i64 %171, i64* %168, align 8
  store i32 1525184446, i32* %20
  br label %201

; <label>:172:                                    ; preds = %21
  %173 = load volatile i64*, i64** %5
  %174 = load i64, i64* %173, align 8
  %175 = icmp ugt i64 %174, 0
  store i32 1835148411, i32* %20
  br label %201

; <label>:176:                                    ; preds = %21
  %177 = load volatile i64*, i64** %5
  %178 = load i64, i64* %177, align 8
  %179 = shl i64 %178, -1
  %180 = sub i64 0, %178
  %181 = add i64 0, %180
  %182 = sub i64 0, %178
  %183 = sub i64 0, -1
  %184 = sub i64 %181, %183
  %185 = add i64 %181, -1
  %186 = shl i64 %178, -1
  %187 = add i64 %178, 6496839535188118327
  %188 = sub i64 %187, -1
  %189 = sub i64 %188, 6496839535188118327
  %190 = sub i64 %178, -1
  %191 = mul i64 %189, -1
  %192 = sub i64 %178, -764047028446728146
  %193 = add i64 %192, -1
  %194 = add i64 %193, -764047028446728146
  %195 = add i64 %178, -1
  %196 = load volatile i64*, i64** %5
  store i64 %194, i64* %196, align 8
  %197 = load volatile i64**, i64*** %7
  %198 = load i64*, i64** %197, align 8
  %199 = getelementptr inbounds i64, i64* %198, i32 1
  %200 = load volatile i64**, i64*** %7
  store i64* %199, i64** %200, align 8
  store i32 61461136, i32* %20
  br label %201

; <label>:201:                                    ; preds = %176, %172, %163, %159, %131, %115, %110, %107, %76, %60, %59, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIlEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIlEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.533
  %5 = load i32, i32* @y.534
  %6 = sub i32 %4, -2045014381
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -2045014381
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 215985591, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 215985591, label %18
    i32 567694726, label %38
    i32 47495334, label %67
    i32 738459714, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 567694726, i32 738459714
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %41 = load i32, i32* @x.533
  %42 = load i32, i32* @y.534
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 47495334, i32 738459714
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret i64 2305843009213693951

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %69, align 8
  store i32 567694726, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIlEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.537
  %9 = load i32, i32* @y.538
  %10 = sub i32 %8, 2115182120
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 2115182120
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -659231126, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %73
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -659231126, label %22
    i32 996936995, label %30
    i32 -1152064188, label %55
    i32 2108116114, label %58
    i32 -1395908793, label %59
    i32 -1241976526, label %65
  ]

; <label>:21:                                     ; preds = %19
  br label %73

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 996936995, i32 -1241976526
  store i32 %29, i32* %18
  br label %73

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.537
  %41 = load i32, i32* @y.538
  %42 = sub i32 %40, -2045553661
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -2045553661
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1152064188, i32 -1241976526
  store i32 %54, i32* %18
  br label %73

; <label>:55:                                     ; preds = %19
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 2108116114, i32 -1395908793
  store i32 %57, i32* %18
  br label %73

; <label>:58:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:59:                                     ; preds = %19
  %60 = load volatile i64*, i64** %5
  %61 = load i64, i64* %60, align 8
  %62 = mul i64 %61, 8
  %63 = call i8* @_Znwm(i64 %62)
  %64 = bitcast i8* %63 to i64*
  ret i64* %64

; <label>:65:                                     ; preds = %19
  %66 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %66, align 8
  store i64 %1, i64* %67, align 8
  store i8* %2, i8** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %66, align 8
  %70 = load i64, i64* %67, align 8
  %71 = call i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %69) #3
  %72 = icmp ugt i64 %70, %71
  store i32 996936995, i32* %18
  br label %73

; <label>:73:                                     ; preds = %65, %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.539
  %6 = load i32, i32* @y.540
  %7 = sub i32 %5, -970490963
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -970490963
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -181263702, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -181263702, label %19
    i32 -1984032641, label %27
    i32 -750281396, label %48
    i32 889828785, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1984032641, i32 889828785
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.17", align 8
  %29 = alloca i64*, align 8
  store i64* %0, i64** %29, align 8
  %30 = load i64*, i64** %29, align 8
  call void @_ZNSt13move_iteratorIPlEC2ES0_(%"class.std::move_iterator.17"* %28, i64* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %28, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.539
  %34 = load i32, i32* @y.540
  %35 = add i32 %33, 1940019784
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1940019784
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -750281396, i32 889828785
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile i64*, i64** %2
  ret i64* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::move_iterator.17", align 8
  %52 = alloca i64*, align 8
  store i64* %0, i64** %52, align 8
  %53 = load i64*, i64** %52, align 8
  call void @_ZNSt13move_iteratorIPlEC2ES0_(%"class.std::move_iterator.17"* %51, i64* %53)
  %54 = getelementptr inbounds %"class.std::move_iterator.17", %"class.std::move_iterator.17"* %51, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  store i32 -1984032641, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.15"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.541
  %6 = load i32, i32* @y.542
  %7 = add i32 %5, -800425503
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -800425503
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 735049128, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 735049128, label %19
    i32 -1276331130, label %27
    i32 -2117188989, label %60
    i32 1278824068, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1276331130, i32 1278824068
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %29 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %28, align 8
  store i64** %1, i64*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %30, i32 0, i32 0
  %32 = load i64**, i64*** %29, align 8
  %33 = load i64*, i64** %32, align 8
  store i64* %33, i64** %31, align 8
  %34 = load i32, i32* @x.541
  %35 = load i32, i32* @y.542
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -2117188989, i32 1278824068
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %63 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %62, align 8
  store i64** %1, i64*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %64, i32 0, i32 0
  %66 = load i64**, i64*** %63, align 8
  %67 = load i64*, i64** %66, align 8
  store i64* %67, i64** %65, align 8
  store i32 -1276331130, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.12* dereferenceable(1)) #4 align 2 {
  %2 = alloca %class.anon.12*, align 8
  store %class.anon.12* %0, %class.anon.12** %2, align 8
  ret i1 true
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.12* dereferenceable(1)) #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.545
  %6 = load i32, i32* @y.546
  %7 = sub i32 %5, 1550732518
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1550732518
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1521435612, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1521435612, label %19
    i32 2113137538, label %27
    i32 -1925289890, label %49
    i32 662394055, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2113137538, i32 662394055
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"union.std::_Any_data"*, align 8
  %29 = alloca %class.anon.12*, align 8
  %30 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %28, align 8
  store %class.anon.12* %1, %class.anon.12** %29, align 8
  %31 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %28, align 8
  %32 = load %class.anon.12*, %class.anon.12** %29, align 8
  %33 = call dereferenceable(1) %class.anon.12* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.12* dereferenceable(1) %32) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %31, %class.anon.12* dereferenceable(1) %33)
  %34 = load i32, i32* @x.545
  %35 = load i32, i32* @y.546
  %36 = sub i32 %34, -727911845
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -727911845
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1925289890, i32 662394055
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"union.std::_Any_data"*, align 8
  %52 = alloca %class.anon.12*, align 8
  %53 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %51, align 8
  store %class.anon.12* %1, %class.anon.12** %52, align 8
  %54 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %51, align 8
  %55 = load %class.anon.12*, %class.anon.12** %52, align 8
  %56 = call dereferenceable(1) %class.anon.12* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.12* dereferenceable(1) %55) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %54, %class.anon.12* dereferenceable(1) %56)
  store i32 2113137538, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.12* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.12* dereferenceable(1)) #4 {
  %2 = alloca %class.anon.12*, align 8
  store %class.anon.12* %0, %class.anon.12** %2, align 8
  %3 = load %class.anon.12*, %class.anon.12** %2, align 8
  ret %class.anon.12* %3
}

; Function Attrs: noinline uwtable
define internal i64 @"_ZNSt17_Function_handlerIFlllEZ4mainE3$_2E9_M_invokeERKSt9_Any_dataOlS6_"(%"union.std::_Any_data"* dereferenceable(16), i64* dereferenceable(8), i64* dereferenceable(8)) #0 align 2 {
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %8 = call %class.anon.12* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = call i64 @"_ZZ4mainENK3$_2clERKlS1_"(%class.anon.12* %8, i64* dereferenceable(8) %10, i64* dereferenceable(8) %12)
  ret i64 %13
}

; Function Attrs: noinline uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16), i32) #0 align 2 {
  %4 = alloca i32
  %5 = alloca %"union.std::_Any_data"*, align 8
  %6 = alloca %"union.std::_Any_data"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.std::integral_constant", align 1
  %9 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %5, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = load i32, i32* %7, align 4
  store i32 %10, i32* %4
  %11 = alloca i32
  store i32 1274100203, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %50
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1274100203, label %15
    i32 -1481511993, label %19
    i32 1920208403, label %23
    i32 -612575679, label %27
    i32 -2007678221, label %31
    i32 -319077964, label %35
    i32 -185616358, label %38
    i32 -1418482496, label %43
    i32 1178891314, label %46
    i32 -1039830260, label %48
    i32 -1550248736, label %49
  ]

; <label>:14:                                     ; preds = %12
  br label %50

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32, i32* %4
  %17 = icmp slt i32 %16, 2
  %18 = select i1 %17, i32 -612575679, i32 -1481511993
  store i32 %18, i32* %11
  br label %50

; <label>:19:                                     ; preds = %12
  %20 = load volatile i32, i32* %4
  %21 = icmp slt i32 %20, 3
  %22 = select i1 %21, i32 -1418482496, i32 1920208403
  store i32 %22, i32* %11
  br label %50

; <label>:23:                                     ; preds = %12
  %24 = load volatile i32, i32* %4
  %25 = icmp eq i32 %24, 3
  %26 = select i1 %25, i32 1178891314, i32 -1039830260
  store i32 %26, i32* %11
  br label %50

; <label>:27:                                     ; preds = %12
  %28 = load volatile i32, i32* %4
  %29 = icmp slt i32 %28, 1
  %30 = select i1 %29, i32 -2007678221, i32 -185616358
  store i32 %30, i32* %11
  br label %50

; <label>:31:                                     ; preds = %12
  %32 = load volatile i32, i32* %4
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i32 -319077964, i32 -1039830260
  store i32 %34, i32* %11
  br label %50

; <label>:35:                                     ; preds = %12
  %36 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %37 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %36)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_2" to %"class.std::type_info"*), %"class.std::type_info"** %37, align 8
  store i32 -1550248736, i32* %11
  br label %50

; <label>:38:                                     ; preds = %12
  %39 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  %40 = call %class.anon.12* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %39)
  %41 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %42 = call dereferenceable(8) %class.anon.12** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_2EERT_v"(%"union.std::_Any_data"* %41)
  store %class.anon.12* %40, %class.anon.12** %42, align 8
  store i32 -1550248736, i32* %11
  br label %50

; <label>:43:                                     ; preds = %12
  %44 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %45 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %44, %"union.std::_Any_data"* dereferenceable(16) %45)
  store i32 -1550248736, i32* %11
  br label %50

; <label>:46:                                     ; preds = %12
  %47 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %47)
  store i32 -1550248736, i32* %11
  br label %50

; <label>:48:                                     ; preds = %12
  store i32 -1550248736, i32* %11
  br label %50

; <label>:49:                                     ; preds = %12
  ret i1 false

; <label>:50:                                     ; preds = %48, %46, %43, %38, %35, %31, %27, %23, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.12* dereferenceable(1)) #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.553
  %6 = load i32, i32* @y.554
  %7 = add i32 %5, 121647412
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 121647412
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2091956824, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2091956824, label %19
    i32 -246002833, label %27
    i32 -511611849, label %63
    i32 1661694677, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -246002833, i32 1661694677
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::integral_constant", align 1
  %29 = alloca %"union.std::_Any_data"*, align 8
  %30 = alloca %class.anon.12*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %29, align 8
  store %class.anon.12* %1, %class.anon.12** %30, align 8
  %31 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %29, align 8
  %32 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %31)
  %33 = bitcast i8* %32 to %class.anon.12*
  %34 = load %class.anon.12*, %class.anon.12** %30, align 8
  %35 = call dereferenceable(1) %class.anon.12* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.12* dereferenceable(1) %34) #3
  %36 = load i32, i32* @x.553
  %37 = load i32, i32* @y.554
  %38 = add i32 %36, 283465084
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 283465084
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -511611849, i32 1661694677
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::integral_constant", align 1
  %66 = alloca %"union.std::_Any_data"*, align 8
  %67 = alloca %class.anon.12*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %66, align 8
  store %class.anon.12* %1, %class.anon.12** %67, align 8
  %68 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %66, align 8
  %69 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %68)
  %70 = bitcast i8* %69 to %class.anon.12*
  %71 = load %class.anon.12*, %class.anon.12** %67, align 8
  %72 = call dereferenceable(1) %class.anon.12* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.12* dereferenceable(1) %71) #3
  store i32 -246002833, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal %class.anon.12* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  %3 = alloca %class.anon.12*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %5 = call dereferenceable(1) %class.anon.12* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_2EERKT_v"(%"union.std::_Any_data"* %4)
  %6 = call %class.anon.12* @"_ZSt11__addressofIKZ4mainE3$_2EPT_RS2_"(%class.anon.12* dereferenceable(1) %5) #3
  store %class.anon.12* %6, %class.anon.12** %3, align 8
  %7 = load %class.anon.12*, %class.anon.12** %3, align 8
  ret %class.anon.12* %7
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @"_ZZ4mainENK3$_2clERKlS1_"(%class.anon.12*, i64* dereferenceable(8), i64* dereferenceable(8)) #4 align 2 {
  %4 = alloca %class.anon.12*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %class.anon.12* %0, %class.anon.12** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %class.anon.12*, %class.anon.12** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call dereferenceable(8) i64* @_ZSt3minIlERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %9)
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: noinline nounwind uwtable
define internal %class.anon.12* @"_ZSt11__addressofIKZ4mainE3$_2EPT_RS2_"(%class.anon.12* dereferenceable(1)) #4 {
  %2 = alloca %class.anon.12*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.559
  %6 = load i32, i32* @y.560
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 872573790, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 872573790, label %18
    i32 -1876619128, label %38
    i32 1018800092, label %70
    i32 -394096480, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1876619128, i32 -394096480
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %class.anon.12*, align 8
  store %class.anon.12* %0, %class.anon.12** %39, align 8
  %40 = load %class.anon.12*, %class.anon.12** %39, align 8
  %41 = bitcast %class.anon.12* %40 to i8*
  %42 = bitcast i8* %41 to %class.anon.12*
  store %class.anon.12* %42, %class.anon.12** %2
  %43 = load i32, i32* @x.559
  %44 = load i32, i32* @y.560
  %45 = add i32 %43, 630469933
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 630469933
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1018800092, i32 -394096480
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %class.anon.12*, %class.anon.12** %2
  ret %class.anon.12* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %class.anon.12*, align 8
  store %class.anon.12* %0, %class.anon.12** %73, align 8
  %74 = load %class.anon.12*, %class.anon.12** %73, align 8
  %75 = bitcast %class.anon.12* %74 to i8*
  %76 = bitcast i8* %75 to %class.anon.12*
  store i32 -1876619128, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.12* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_2EERKT_v"(%"union.std::_Any_data"*) #4 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.12*
  ret %class.anon.12* %5
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %class.anon.12** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_2EERT_v"(%"union.std::_Any_data"*) #4 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.12**
  ret %class.anon.12** %5
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16)) #4 align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %5, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %7 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %6)
  %8 = bitcast i8* %7 to %class.anon.12*
  %9 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %10 = call dereferenceable(1) %class.anon.12* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_2EERKT_v"(%"union.std::_Any_data"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"struct.std::integral_constant", align 1
  %3 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %5 = call dereferenceable(1) %class.anon.12* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_2EERT_v"(%"union.std::_Any_data"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.12* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_2EERT_v"(%"union.std::_Any_data"*) #4 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.12*
  ret %class.anon.12* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt8functionIFlllEEclEll(%"class.std::function"*, i64, i64) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"class.std::_Function_base"*
  %6 = alloca %"class.std::function"*
  %7 = alloca %"class.std::function"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store %"class.std::function"* %0, %"class.std::function"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i64 %2, i64* %9, align 8
  %10 = load %"class.std::function"*, %"class.std::function"** %7, align 8
  store %"class.std::function"* %10, %"class.std::function"** %6
  %11 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %12 = bitcast %"class.std::function"* %11 to %"class.std::_Function_base"*
  store %"class.std::_Function_base"* %12, %"class.std::_Function_base"** %5
  %13 = alloca i32
  store i32 -1653699606, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %86
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1653699606, label %17
    i32 427431864, label %21
    i32 -1258386013, label %22
    i32 1885842650, label %37
    i32 650720788, label %74
    i32 -609057883, label %76
  ]

; <label>:16:                                     ; preds = %14
  br label %86

; <label>:17:                                     ; preds = %14
  %18 = load volatile %"class.std::_Function_base"*, %"class.std::_Function_base"** %5
  %19 = call zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"* %18)
  %20 = select i1 %19, i32 427431864, i32 -1258386013
  store i32 %20, i32* %13
  br label %86

; <label>:21:                                     ; preds = %14
  call void @_ZSt25__throw_bad_function_callv() #13
  unreachable

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.573
  %24 = load i32, i32* @y.574
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 1885842650, i32 -609057883
  store i32 %36, i32* %13
  br label %86

; <label>:37:                                     ; preds = %14
  %38 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %39 = getelementptr inbounds %"class.std::function", %"class.std::function"* %38, i32 0, i32 1
  %40 = load i64 (%"union.std::_Any_data"*, i64*, i64*)*, i64 (%"union.std::_Any_data"*, i64*, i64*)** %39, align 8
  %41 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %42 = bitcast %"class.std::function"* %41 to %"class.std::_Function_base"*
  %43 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %42, i32 0, i32 0
  %44 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %8) #3
  %45 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  %46 = call i64 %40(%"union.std::_Any_data"* dereferenceable(16) %43, i64* dereferenceable(8) %44, i64* dereferenceable(8) %45)
  store i64 %46, i64* %4
  %47 = load i32, i32* @x.573
  %48 = load i32, i32* @y.574
  %49 = add i32 %47, 1395138185
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1395138185
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 650720788, i32 -609057883
  store i32 %73, i32* %13
  br label %86

; <label>:74:                                     ; preds = %14
  %75 = load volatile i64, i64* %4
  ret i64 %75

; <label>:76:                                     ; preds = %14
  %77 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %78 = getelementptr inbounds %"class.std::function", %"class.std::function"* %77, i32 0, i32 1
  %79 = load i64 (%"union.std::_Any_data"*, i64*, i64*)*, i64 (%"union.std::_Any_data"*, i64*, i64*)** %78, align 8
  %80 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %81 = bitcast %"class.std::function"* %80 to %"class.std::_Function_base"*
  %82 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %81, i32 0, i32 0
  %83 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %8) #3
  %84 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  %85 = call i64 %79(%"union.std::_Any_data"* dereferenceable(16) %82, i64* dereferenceable(8) %83, i64* dereferenceable(8) %84)
  store i32 1885842650, i32* %13
  br label %86

; <label>:86:                                     ; preds = %76, %37, %22, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt25__throw_bad_function_callv() #9

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN7SegTreeIlE6_queryEiiiii(%class.SegTree*, i32, i32, i32, i32, i32) #0 comdat align 2 {
  %7 = alloca i32
  %8 = alloca i32
  %9 = alloca %class.SegTree*
  %10 = alloca i64, align 8
  %11 = alloca %class.SegTree*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  store %class.SegTree* %0, %class.SegTree** %11, align 8
  store i32 %1, i32* %12, align 4
  store i32 %2, i32* %13, align 4
  store i32 %3, i32* %14, align 4
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  %19 = load %class.SegTree*, %class.SegTree** %11, align 8
  store %class.SegTree* %19, %class.SegTree** %9
  %20 = load i32, i32* %16, align 4
  store i32 %20, i32* %8
  %21 = load i32, i32* %12, align 4
  store i32 %21, i32* %7
  %22 = alloca i32
  store i32 -476608241, i32* %22
  br label %23

; <label>:23:                                     ; preds = %6, %163
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -476608241, label %26
    i32 35558975, label %31
    i32 -1168653440, label %36
    i32 -1634094259, label %64
    i32 -1769866369, label %95
    i32 -631426142, label %96
    i32 1928661085, label %101
    i32 -648543796, label %106
    i32 242807990, label %113
    i32 -1209160101, label %157
    i32 -1808256539, label %159
  ]

; <label>:25:                                     ; preds = %23
  br label %163

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32, i32* %8
  %28 = load volatile i32, i32* %7
  %29 = icmp sle i32 %27, %28
  %30 = select i1 %29, i32 -1168653440, i32 35558975
  store i32 %30, i32* %22
  br label %163

; <label>:31:                                     ; preds = %23
  %32 = load i32, i32* %13, align 4
  %33 = load i32, i32* %15, align 4
  %34 = icmp sle i32 %32, %33
  %35 = select i1 %34, i32 -1168653440, i32 -631426142
  store i32 %35, i32* %22
  br label %163

; <label>:36:                                     ; preds = %23
  %37 = load i32, i32* @x.575
  %38 = load i32, i32* @y.576
  %39 = add i32 %37, 1204932870
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1204932870
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1634094259, i32 -1808256539
  store i32 %63, i32* %22
  br label %163

; <label>:64:                                     ; preds = %23
  %65 = load volatile %class.SegTree*, %class.SegTree** %9
  %66 = getelementptr inbounds %class.SegTree, %class.SegTree* %65, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %10, align 8
  %68 = load i32, i32* @x.575
  %69 = load i32, i32* @y.576
  %70 = sub i32 %68, -445724557
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -445724557
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 -1769866369, i32 -1808256539
  store i32 %94, i32* %22
  br label %163

; <label>:95:                                     ; preds = %23
  store i32 -1209160101, i32* %22
  br label %163

; <label>:96:                                     ; preds = %23
  %97 = load i32, i32* %12, align 4
  %98 = load i32, i32* %15, align 4
  %99 = icmp sle i32 %97, %98
  %100 = select i1 %99, i32 1928661085, i32 242807990
  store i32 %100, i32* %22
  br label %163

; <label>:101:                                    ; preds = %23
  %102 = load i32, i32* %16, align 4
  %103 = load i32, i32* %13, align 4
  %104 = icmp sle i32 %102, %103
  %105 = select i1 %104, i32 -648543796, i32 242807990
  store i32 %105, i32* %22
  br label %163

; <label>:106:                                    ; preds = %23
  %107 = load volatile %class.SegTree*, %class.SegTree** %9
  %108 = getelementptr inbounds %class.SegTree, %class.SegTree* %107, i32 0, i32 2
  %109 = load i32, i32* %14, align 4
  %110 = sext i32 %109 to i64
  %111 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %108, i64 %110) #3
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %10, align 8
  store i32 -1209160101, i32* %22
  br label %163

; <label>:113:                                    ; preds = %23
  %114 = load i32, i32* %12, align 4
  %115 = load i32, i32* %13, align 4
  %116 = load i32, i32* %14, align 4
  %117 = mul nsw i32 %116, 2
  %118 = sub i32 0, %117
  %119 = sub i32 0, 1
  %120 = add i32 %118, %119
  %121 = sub i32 0, %120
  %122 = add nsw i32 %117, 1
  %123 = load i32, i32* %15, align 4
  %124 = load i32, i32* %15, align 4
  %125 = load i32, i32* %16, align 4
  %126 = sub i32 0, %124
  %127 = sub i32 0, %125
  %128 = add i32 %126, %127
  %129 = sub i32 0, %128
  %130 = add nsw i32 %124, %125
  %131 = sdiv i32 %129, 2
  %132 = load volatile %class.SegTree*, %class.SegTree** %9
  %133 = call i64 @_ZN7SegTreeIlE6_queryEiiiii(%class.SegTree* %132, i32 %114, i32 %115, i32 %121, i32 %123, i32 %131)
  store i64 %133, i64* %17, align 8
  %134 = load i32, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  %136 = load i32, i32* %14, align 4
  %137 = mul nsw i32 %136, 2
  %138 = add i32 %137, 55003052
  %139 = add i32 %138, 2
  %140 = sub i32 %139, 55003052
  %141 = add nsw i32 %137, 2
  %142 = load i32, i32* %15, align 4
  %143 = load i32, i32* %16, align 4
  %144 = sub i32 %142, 319337546
  %145 = add i32 %144, %143
  %146 = add i32 %145, 319337546
  %147 = add nsw i32 %142, %143
  %148 = sdiv i32 %146, 2
  %149 = load i32, i32* %16, align 4
  %150 = load volatile %class.SegTree*, %class.SegTree** %9
  %151 = call i64 @_ZN7SegTreeIlE6_queryEiiiii(%class.SegTree* %150, i32 %134, i32 %135, i32 %140, i32 %148, i32 %149)
  store i64 %151, i64* %18, align 8
  %152 = load volatile %class.SegTree*, %class.SegTree** %9
  %153 = getelementptr inbounds %class.SegTree, %class.SegTree* %152, i32 0, i32 3
  %154 = load i64, i64* %17, align 8
  %155 = load i64, i64* %18, align 8
  %156 = call i64 @_ZNKSt8functionIFlllEEclEll(%"class.std::function"* %153, i64 %154, i64 %155)
  store i64 %156, i64* %10, align 8
  store i32 -1209160101, i32* %22
  br label %163

; <label>:157:                                    ; preds = %23
  %158 = load i64, i64* %10, align 8
  ret i64 %158

; <label>:159:                                    ; preds = %23
  %160 = load volatile %class.SegTree*, %class.SegTree** %9
  %161 = getelementptr inbounds %class.SegTree, %class.SegTree* %160, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  store i64 %162, i64* %10, align 8
  store i32 -1634094259, i32* %22
  br label %163

; <label>:163:                                    ; preds = %159, %113, %106, %101, %96, %95, %64, %36, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s697472407.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn nounwind }
attributes #13 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
