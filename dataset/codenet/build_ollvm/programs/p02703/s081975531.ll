; ModuleID = 'Project_CodeNet_C++1400/p02703/s081975531.cpp'
source_filename = "Project_CodeNet_C++1400/p02703/s081975531.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::priority_queue" = type <{ %"class.std::vector", %"struct.std::less", [7 x i8] }>
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl" }
%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl" = type { %struct.q_t*, %struct.q_t*, %struct.q_t* }
%struct.q_t = type { i64, i64, i32, i64, i64 }
%"struct.std::less" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.33" = type { %struct.q_t* }
%"class.std::allocator" = type { i8 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl" = type { %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"* }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl" }
%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl" = type { %struct.edge_t*, %struct.edge_t*, %struct.edge_t* }
%struct.edge_t = type { i32, i64, i64 }
%"class.std::vector.10" = type { %"struct.std::_Vector_base.11" }
%"struct.std::_Vector_base.11" = type { %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl" = type { %"class.std::set"*, %"class.std::set"*, %"class.std::set"* }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" = type { %"struct.std::less.18", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less.18" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::allocator.12" = type { i8 }
%"class.std::vector.20" = type { %"struct.std::_Vector_base.21" }
%"struct.std::_Vector_base.21" = type { %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" = type { %"class.std::vector.25"*, %"class.std::vector.25"*, %"class.std::vector.25"* }
%"class.std::vector.25" = type { %"struct.std::_Vector_base.26" }
%"struct.std::_Vector_base.26" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::allocator.22" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector.5"* }
%"class.__gnu_cxx::__normal_iterator.30" = type { %struct.edge_t* }
%"class.__gnu_cxx::__normal_iterator.31" = type { %"class.std::vector.25"* }
%"struct.std::pair" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.__gnu_cxx::new_allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.23" = type { i8 }
%"struct.std::pair.35" = type <{ %"struct.std::_Rb_tree_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator.7" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.32" = type { %struct.q_t* }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::less" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::less" }
%"class.std::move_iterator" = type { %struct.q_t* }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"class.std::allocator.27" = type { i8 }
%"class.__gnu_cxx::new_allocator.28" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.34" = type { i64* }
%"struct.std::pair.37" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Identity" = type { i8 }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node" = type { %"class.std::_Rb_tree"* }
%"class.std::move_iterator.38" = type { %struct.edge_t* }

$_ZNSt6vectorI3q_tSaIS0_EEC2Ev = comdat any

$_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_ = comdat any

$_ZNSt6vectorI3q_tSaIS0_EED2Ev = comdat any

$_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev = comdat any

$_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushERKS0_ = comdat any

$_ZNKSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE5emptyEv = comdat any

$_ZNKSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE3topEv = comdat any

$_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE3popEv = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv = comdat any

$_ZN3q_tC2Ei = comdat any

$_ZNSaISt3setIxSt4lessIxESaIxEEEC2Ev = comdat any

$_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSaISt3setIxSt4lessIxESaIxEEED2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE5beginEv = comdat any

$_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEdeEv = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EE5beginEv = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EE3endEv = comdat any

$_ZN9__gnu_cxxneIP6edge_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEppEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEppEv = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEdeEv = comdat any

$_ZNSt6vectorIxSaIxEE6assignEmRKx = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEppEv = comdat any

$_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EEaSERKS6_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EEixEm = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE6insertERKx = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt6vectorI3q_tSaIS0_EEixEm = comdat any

$_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEixEm = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EEixEm = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev = comdat any

$_ZNSaI3q_tEC2Ev = comdat any

$_ZNSt6vectorI3q_tSaIS0_EEC2EmRKS0_RKS1_ = comdat any

$_ZNSaI3q_tED2Ev = comdat any

$_ZNSaISt6vectorI6edge_tSaIS0_EEEC2Ev = comdat any

$_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSaISt6vectorI6edge_tSaIS0_EEED2Ev = comdat any

$_ZNSaI6edge_tEC2Ev = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EEC2EmRKS1_ = comdat any

$_ZNSaI6edge_tED2Ev = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EE9push_backERKS0_ = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EED2Ev = comdat any

$_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EED2Ev = comdat any

$_ZNSt6vectorI3q_tSaIS0_EEaSERKS2_ = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE8capacityEv = comdat any

$_ZNSt6vectorI3q_tSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_ = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE5beginEv = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE3endEv = comdat any

$_ZSt8_DestroyIP3q_tS0_EvT_S2_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE13_M_deallocateEPS0_m = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_ = comdat any

$_ZNSt6vectorI3q_tSaIS0_EE5beginEv = comdat any

$_ZNSt6vectorI3q_tSaIS0_EE3endEv = comdat any

$_ZSt4copyIP3q_tS1_ET0_T_S3_S2_ = comdat any

$_ZSt22__uninitialized_copy_aIP3q_tS1_S0_ET0_T_S3_S2_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E = comdat any

$__clang_call_terminate = comdat any

$_ZNSt16allocator_traitsISaI3q_tEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI3q_tE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI3q_tE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_ = comdat any

$_ZN9__gnu_cxxneIPK3q_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZSt10_ConstructI3q_tJRKS0_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofI3q_tEPT_RS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEppEv = comdat any

$_ZSt8_DestroyIP3q_tEvT_S2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP3q_tEEvT_S4_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaI3q_tEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI3q_tE10deallocateEPS1_m = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEEEvT_S8_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS4_SaIS4_EEEEEEvT_SA_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_ = comdat any

$_ZSt13__copy_move_aILb0EPK3q_tPS0_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK3q_tPS3_EET0_T_S8_S7_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES8_ = comdat any

$_ZSt14__copy_move_a2ILb0EP3q_tS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIP3q_tENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EP3q_tS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIP3q_tENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP3q_tS4_EET0_T_S6_S5_ = comdat any

$_ZNSt10_Iter_baseIP3q_tLb0EE7_S_baseES1_ = comdat any

$_ZSt18uninitialized_copyIP3q_tS1_ET0_T_S3_S2_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP3q_tS3_EET0_T_S5_S4_ = comdat any

$_ZSt10_ConstructI3q_tJRS0_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIR3q_tEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI3q_tEC2Ev = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EED2Ev = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI3q_tED2Ev = comdat any

$_ZSt4moveIRSt6vectorI3q_tSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt6vectorI3q_tSaIS0_EEC2EOS2_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_ = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EEC2EOS2_ = comdat any

$_ZSt4moveIRSaI3q_tEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2EOS1_ = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_impl12_M_swap_dataERS3_ = comdat any

$_ZNSaI3q_tEC2ERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI3q_tEC2ERKS2_ = comdat any

$_ZSt4swapIP3q_tEvRT_S3_ = comdat any

$_ZSt4moveIRP3q_tEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI3q_tEEENS0_15_Iter_comp_iterIT_EES6_ = comdat any

$_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI3q_tEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI3q_tEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE = comdat any

$_ZNKSt4lessI3q_tEclERKS0_S3_ = comdat any

$_ZNK3q_tltERKS_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEC2ES4_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI3q_tEEC2ES4_ = comdat any

$_ZNSt6vectorI3q_tSaIS0_EE9push_backERKS0_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_ = comdat any

$_ZNSt16allocator_traitsISaI3q_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZNSt6vectorI3q_tSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI3q_tE9constructIS1_JRKS1_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP3q_tS1_SaIS0_EET0_T_S4_S3_RT1_ = comdat any

$_ZNSt16allocator_traitsISaI3q_tEE7destroyIS0_EEvRS1_PT_ = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaI3q_tEE8max_sizeERKS1_ = comdat any

$_ZNKSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIP3q_tES2_S1_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP3q_tSt13move_iteratorIS1_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIP3q_tES2_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP3q_tES4_EET0_T_S7_S6_ = comdat any

$_ZStneIP3q_tEbRKSt13move_iteratorIT_ES6_ = comdat any

$_ZSt10_ConstructI3q_tJS0_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIP3q_tEdeEv = comdat any

$_ZNSt13move_iteratorIP3q_tEppEv = comdat any

$_ZSteqIP3q_tEbRKSt13move_iteratorIT_ES6_ = comdat any

$_ZNKSt13move_iteratorIP3q_tE4baseEv = comdat any

$_ZSt7forwardI3q_tEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt13move_iteratorIP3q_tEC2ES1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI3q_tE7destroyIS1_EEvPT_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI3q_tEEENS0_14_Iter_comp_valIT_EES6_ = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPK3q_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNKSt6vectorI3q_tSaIS0_EE5frontEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_ = comdat any

$_ZNSt6vectorI3q_tSaIS0_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_SD_T0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt3setIxSt4lessIxESaIxEEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt3setIxSt4lessIxESaIxEEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt3setIxSt4lessIxESaIxEEmS4_ET_S6_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt3setIxSt4lessIxESaIxEEmET_S6_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3setIxSt4lessIxESaIxEEmEET_S8_T0_ = comdat any

$_ZSt10_ConstructISt3setIxSt4lessIxESaIxEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt3setIxSt4lessIxESaIxEEEPT_RS5_ = comdat any

$_ZSt8_DestroyIPSt3setIxSt4lessIxESaIxEEEvT_S6_ = comdat any

$_ZNSt3setIxSt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setIxSt4lessIxESaIxEEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt3setIxSt4lessIxESaIxEEEvPT_ = comdat any

$_ZNSt3setIxSt4lessIxESaIxEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt16allocator_traitsISaISt3setIxSt4lessIxESaIxEEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE10deallocateEPS5_m = comdat any

$_ZSt8_DestroyIPSt3setIxSt4lessIxESaIxEES4_EvT_S6_RSaIT0_E = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIxSaIxEEmET_S4_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIxSaIxEEmEET_S6_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIxSaIxEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_ = comdat any

$_ZNSt6vectorIxSaIxEEC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_ = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEC2ERKS5_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEC2ERKS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZNSt6vectorIxSaIxEE14_M_fill_assignEmRKx = comdat any

$_ZNKSt6vectorIxSaIxEE8capacityEv = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNSt6vectorIxSaIxEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZSt4swapIPxEvRT_S2_ = comdat any

$_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx = comdat any

$_ZNKSt9_IdentityIxEclERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEmmEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE = comdat any

$_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EEC2EmRKS1_ = comdat any

$_ZNSt6vectorI3q_tSaIS0_EE18_M_fill_initializeEmRKS0_ = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseI3q_tSaIS0_EE17_M_create_storageEm = comdat any

$_ZSt24__uninitialized_fill_n_aIP3q_tmS0_S0_ET_S2_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIP3q_tmS0_ET_S2_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP3q_tmS2_EET_S4_T0_RKT1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EEC2EmRKS4_ = comdat any

$_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorI6edge_tSaIS0_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI6edge_tSaIS1_EEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorI6edge_tSaIS1_EEmS3_ET_S5_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorI6edge_tSaIS1_EEmET_S5_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI6edge_tSaIS3_EEmEET_S7_T0_ = comdat any

$_ZSt10_ConstructISt6vectorI6edge_tSaIS1_EEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorI6edge_tSaIS1_EEEPT_RS4_ = comdat any

$_ZSt8_DestroyIPSt6vectorI6edge_tSaIS1_EEEvT_S5_ = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6edge_tEC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI6edge_tSaIS3_EEEEvT_S7_ = comdat any

$_ZSt8_DestroyISt6vectorI6edge_tSaIS1_EEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE13_M_deallocateEPS3_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI6edge_tSaIS1_EEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE10deallocateEPS4_m = comdat any

$_ZSt8_DestroyIPSt6vectorI6edge_tSaIS1_EES3_EvT_S5_RSaIT0_E = comdat any

$_ZN9__gnu_cxx13new_allocatorI6edge_tED2Ev = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EEC2EmRKS1_ = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EED2Ev = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implD2Ev = comdat any

$_ZNSaI6edge_tEC2ERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI6edge_tEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaI6edge_tEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6edge_tE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI6edge_tE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIP6edge_tmS0_ET_S2_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIP6edge_tmET_S2_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6edge_tmEET_S4_T0_ = comdat any

$_ZSt6fill_nIP6edge_tmS0_ET_S2_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIP6edge_tmS0_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES5_T0_RKS4_ = comdat any

$_ZSt12__niter_baseIP6edge_tENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt10_Iter_baseIP6edge_tLb0EE7_S_baseES1_ = comdat any

$_ZNSt12_Vector_baseI6edge_tSaIS0_EE13_M_deallocateEPS0_m = comdat any

$_ZNSt16allocator_traitsISaI6edge_tEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6edge_tE10deallocateEPS1_m = comdat any

$_ZSt8_DestroyIP6edge_tS0_EvT_S2_RSaIT0_E = comdat any

$_ZSt8_DestroyIP6edge_tEvT_S2_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP6edge_tEEvT_S4_ = comdat any

$_ZNSt16allocator_traitsISaI6edge_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZNSt6vectorI6edge_tSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI6edge_tE9constructIS1_JRKS1_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRK6edge_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt6vectorI6edge_tSaIS0_EE12_M_check_lenEmPKc = comdat any

$_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP6edge_tS1_SaIS0_EET0_T_S4_S3_RT1_ = comdat any

$_ZNSt16allocator_traitsISaI6edge_tEE7destroyIS0_EEvRS1_PT_ = comdat any

$_ZNKSt6vectorI6edge_tSaIS0_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI6edge_tEE8max_sizeERKS1_ = comdat any

$_ZNKSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIP6edge_tES2_S1_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP6edge_tSt13move_iteratorIS1_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIP6edge_tES2_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP6edge_tES4_EET0_T_S7_S6_ = comdat any

$_ZSt4copyISt13move_iteratorIP6edge_tES2_ET0_T_S5_S4_ = comdat any

$_ZSt14__copy_move_a2ILb1EP6edge_tS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIP6edge_tEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt13__copy_move_aILb1EP6edge_tS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI6edge_tEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIP6edge_tELb1EE7_S_baseES3_ = comdat any

$_ZNKSt13move_iteratorIP6edge_tE4baseEv = comdat any

$_ZNSt13move_iteratorIP6edge_tEC2ES1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI6edge_tE7destroyIS1_EEvPT_ = comdat any

@que = global %"class.std::priority_queue" zeroinitializer, align 8
@__dso_handle = external global i8
@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s081975531.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0

; Function Attrs: noinline nounwind uwtable
define void @_Z5min_uRxx(i64* dereferenceable(8), i64) #0 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load i64*, i64** %5, align 8
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %4
  %9 = load i64, i64* %6, align 8
  store i64 %9, i64* %3
  %10 = alloca i32
  store i32 -837233974, i32* %10
  br label %11

; <label>:11:                                     ; preds = %2, %68
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -837233974, label %14
    i32 -1800360412, label %19
    i32 -170988690, label %22
    i32 -1548201298, label %50
    i32 -2007385428, label %66
    i32 881725461, label %67
  ]

; <label>:13:                                     ; preds = %11
  br label %68

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %4
  %16 = load volatile i64, i64* %3
  %17 = icmp sgt i64 %15, %16
  %18 = select i1 %17, i32 -1800360412, i32 -170988690
  store i32 %18, i32* %10
  br label %68

; <label>:19:                                     ; preds = %11
  %20 = load i64, i64* %6, align 8
  %21 = load i64*, i64** %5, align 8
  store i64 %20, i64* %21, align 8
  store i32 -170988690, i32* %10
  br label %68

; <label>:22:                                     ; preds = %11
  %23 = load i32, i32* @x
  %24 = load i32, i32* @y
  %25 = add i32 %23, -1240124666
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -1240124666
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -1548201298, i32 881725461
  store i32 %49, i32* %10
  br label %68

; <label>:50:                                     ; preds = %11
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 2009496473
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 2009496473
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -2007385428, i32 881725461
  store i32 %65, i32* %10
  br label %68

; <label>:66:                                     ; preds = %11
  ret void

; <label>:67:                                     ; preds = %11
  store i32 -1548201298, i32* %10
  br label %68

; <label>:68:                                     ; preds = %67, %50, %22, %19, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @_Z6min_quR3q_tS0_(%struct.q_t* dereferenceable(40), %struct.q_t* dereferenceable(40)) #0 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %5, align 8
  store %struct.q_t* %1, %struct.q_t** %6, align 8
  %7 = load %struct.q_t*, %struct.q_t** %5, align 8
  %8 = getelementptr inbounds %struct.q_t, %struct.q_t* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load %struct.q_t*, %struct.q_t** %6, align 8
  %11 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %3
  %13 = alloca i32
  store i32 777591789, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %28
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 777591789, label %17
    i32 2023340138, label %22
    i32 1680628116, label %27
  ]

; <label>:16:                                     ; preds = %14
  br label %28

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %4
  %19 = load volatile i64, i64* %3
  %20 = icmp sgt i64 %18, %19
  %21 = select i1 %20, i32 2023340138, i32 1680628116
  store i32 %21, i32* %13
  br label %28

; <label>:22:                                     ; preds = %14
  %23 = load %struct.q_t*, %struct.q_t** %6, align 8
  %24 = load %struct.q_t*, %struct.q_t** %5, align 8
  %25 = bitcast %struct.q_t* %24 to i8*
  %26 = bitcast %struct.q_t* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 40, i32 8, i1 false)
  store i32 1680628116, i32* %13
  br label %28

; <label>:27:                                     ; preds = %14
  ret i1 true

; <label>:28:                                     ; preds = %22, %17, %16
  br label %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #2 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"struct.std::less", align 1
  %2 = alloca %"class.std::vector", align 8
  %3 = alloca i8*
  %4 = alloca i32
  call void @_ZNSt6vectorI3q_tSaIS0_EEC2Ev(%"class.std::vector"* %2) #3
  invoke void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_(%"class.std::priority_queue"* @que, %"struct.std::less"* dereferenceable(1) %1, %"class.std::vector"* dereferenceable(24) %2)
          to label %5 unwind label %60

; <label>:5:                                      ; preds = %0
  %6 = load i32, i32* @x.7
  %7 = load i32, i32* @y.8
  %8 = add i32 %6, 1901353563
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1901353563
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %69

; <label>:32:                                     ; preds = %5, %69
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %2) #3
  %33 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::priority_queue"*)* @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::priority_queue"* @que to i8*), i8* @__dso_handle) #3
  %34 = load i32, i32* @x.7
  %35 = load i32, i32* @y.8
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %69

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %0
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %2) #3
  br label %64

; <label>:64:                                     ; preds = %60
  %65 = load i8*, i8** %3, align 8
  %66 = load i32, i32* %4, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

; <label>:69:                                     ; preds = %32, %5
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %2) #3
  %70 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::priority_queue"*)* @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::priority_queue"* @que to i8*), i8* @__dso_handle) #3
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EEC2Ev(%"class.std::vector"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseI3q_tSaIS0_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %36

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.9
  %7 = load i32, i32* @y.10
  %8 = sub i32 %6, 899040658
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 899040658
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %80

; <label>:20:                                     ; preds = %5, %80
  %21 = load i32, i32* @x.9
  %22 = load i32, i32* @y.10
  %23 = sub i32 %21, 1034111642
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 1034111642
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %80

; <label>:35:                                     ; preds = %20
  ret void

; <label>:36:                                     ; preds = %1
  %37 = load i32, i32* @x.9
  %38 = load i32, i32* @y.10
  %39 = add i32 %37, -2065285306
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -2065285306
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %81

; <label>:51:                                     ; preds = %36, %81
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #7
  %54 = load i32, i32* @x.9
  %55 = load i32, i32* @y.10
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %81

; <label>:79:                                     ; preds = %51
  unreachable

; <label>:80:                                     ; preds = %20, %5
  br label %20

; <label>:81:                                     ; preds = %51, %36
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  call void @__clang_call_terminate(i8* %83) #7
  br label %51
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_(%"class.std::priority_queue"*, %"struct.std::less"* dereferenceable(1), %"class.std::vector"* dereferenceable(24)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.11
  %5 = load i32, i32* @y.12
  %6 = add i32 %4, -254068634
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -254068634
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %135

; <label>:18:                                     ; preds = %3, %135
  %19 = alloca %"class.std::priority_queue"*, align 8
  %20 = alloca %"struct.std::less"*, align 8
  %21 = alloca %"class.std::vector"*, align 8
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %24 = alloca %"struct.std::less", align 1
  %25 = alloca i8*
  %26 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %19, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %20, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %21, align 8
  %27 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %19, align 8
  %28 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %27, i32 0, i32 0
  %29 = load %"class.std::vector"*, %"class.std::vector"** %21, align 8
  %30 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorI3q_tSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector"* dereferenceable(24) %29) #3
  call void @_ZNSt6vectorI3q_tSaIS0_EEC2EOS2_(%"class.std::vector"* %28, %"class.std::vector"* dereferenceable(24) %30) #3
  %31 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %27, i32 0, i32 1
  %32 = load %"struct.std::less"*, %"struct.std::less"** %20, align 8
  %33 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %27, i32 0, i32 0
  %34 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %33) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %22, i32 0, i32 0
  store %struct.q_t* %34, %struct.q_t** %35, align 8
  %36 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %27, i32 0, i32 0
  %37 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %36) #3
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %23, i32 0, i32 0
  store %struct.q_t* %37, %struct.q_t** %38, align 8
  %39 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %27, i32 0, i32 1
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %22, i32 0, i32 0
  %41 = load %struct.q_t*, %struct.q_t** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %23, i32 0, i32 0
  %43 = load %struct.q_t*, %struct.q_t** %42, align 8
  %44 = load i32, i32* @x.11
  %45 = load i32, i32* @y.12
  %46 = add i32 %44, -531801827
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -531801827
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %135

; <label>:70:                                     ; preds = %18
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.q_t* %41, %struct.q_t* %43)
          to label %71 unwind label %126

; <label>:71:                                     ; preds = %70
  %72 = load i32, i32* @x.11
  %73 = load i32, i32* @y.12
  %74 = add i32 %72, -1947196012
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1947196012
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %161

; <label>:98:                                     ; preds = %71, %161
  %99 = load i32, i32* @x.11
  %100 = load i32, i32* @y.12
  %101 = sub i32 %99, 1232236347
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 1232236347
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %161

; <label>:125:                                    ; preds = %98
  ret void

; <label>:126:                                    ; preds = %70
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %25, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %26, align 4
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %28) #3
  br label %130

; <label>:130:                                    ; preds = %126
  %131 = load i8*, i8** %25, align 8
  %132 = load i32, i32* %26, align 4
  %133 = insertvalue { i8*, i32 } undef, i8* %131, 0
  %134 = insertvalue { i8*, i32 } %133, i32 %132, 1
  resume { i8*, i32 } %134

; <label>:135:                                    ; preds = %18, %3
  %136 = alloca %"class.std::priority_queue"*, align 8
  %137 = alloca %"struct.std::less"*, align 8
  %138 = alloca %"class.std::vector"*, align 8
  %139 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %140 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %141 = alloca %"struct.std::less", align 1
  %142 = alloca i8*
  %143 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %136, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %137, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %138, align 8
  %144 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %136, align 8
  %145 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %144, i32 0, i32 0
  %146 = load %"class.std::vector"*, %"class.std::vector"** %138, align 8
  %147 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorI3q_tSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector"* dereferenceable(24) %146) #3
  call void @_ZNSt6vectorI3q_tSaIS0_EEC2EOS2_(%"class.std::vector"* %145, %"class.std::vector"* dereferenceable(24) %147) #3
  %148 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %144, i32 0, i32 1
  %149 = load %"struct.std::less"*, %"struct.std::less"** %137, align 8
  %150 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %144, i32 0, i32 0
  %151 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %150) #3
  %152 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %139, i32 0, i32 0
  store %struct.q_t* %151, %struct.q_t** %152, align 8
  %153 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %144, i32 0, i32 0
  %154 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %153) #3
  %155 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %140, i32 0, i32 0
  store %struct.q_t* %154, %struct.q_t** %155, align 8
  %156 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %144, i32 0, i32 1
  %157 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %139, i32 0, i32 0
  %158 = load %struct.q_t*, %struct.q_t** %157, align 8
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %140, i32 0, i32 0
  %160 = load %struct.q_t*, %struct.q_t** %159, align 8
  br label %18

; <label>:161:                                    ; preds = %98, %71
  br label %98
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.q_t*, %struct.q_t** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.q_t*, %struct.q_t** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIP3q_tS0_EvT_S2_RSaIT0_E(%struct.q_t* %9, %struct.q_t* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %4) #3
  ret void
}

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define void @_Z4push3q_t(%struct.q_t* byval align 8) #2 {
  call void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushERKS0_(%"class.std::priority_queue"* @que, %struct.q_t* dereferenceable(40) %0)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushERKS0_(%"class.std::priority_queue"*, %struct.q_t* dereferenceable(40)) #2 comdat align 2 {
  %3 = alloca %"class.std::priority_queue"*, align 8
  %4 = alloca %struct.q_t*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %7 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %3, align 8
  store %struct.q_t* %1, %struct.q_t** %4, align 8
  %8 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %3, align 8
  %9 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %10 = load %struct.q_t*, %struct.q_t** %4, align 8
  call void @_ZNSt6vectorI3q_tSaIS0_EE9push_backERKS0_(%"class.std::vector"* %9, %struct.q_t* dereferenceable(40) %10)
  %11 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %12 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %11) #3
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  store %struct.q_t* %12, %struct.q_t** %13, align 8
  %14 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %15 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %14) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %6, i32 0, i32 0
  store %struct.q_t* %15, %struct.q_t** %16, align 8
  %17 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 1
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  %19 = load %struct.q_t*, %struct.q_t** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %6, i32 0, i32 0
  %21 = load %struct.q_t*, %struct.q_t** %20, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.q_t* %19, %struct.q_t* %21)
  ret void
}

; Function Attrs: noinline uwtable
define i32 @_Z3popR3q_t(%struct.q_t* dereferenceable(40)) #2 {
  %2 = alloca i32
  %3 = alloca i32, align 4
  %4 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %4, align 8
  %5 = alloca i32
  store i32 -1910828366, i32* %5
  br label %6

; <label>:6:                                      ; preds = %1, %67
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1910828366, label %9
    i32 945474987, label %12
    i32 349313350, label %13
    i32 1966251599, label %18
    i32 -44175909, label %34
    i32 1037008347, label %63
    i32 351877433, label %65
  ]

; <label>:8:                                      ; preds = %6
  br label %67

; <label>:9:                                      ; preds = %6
  %10 = call zeroext i1 @_ZNKSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE5emptyEv(%"class.std::priority_queue"* @que)
  %11 = select i1 %10, i32 945474987, i32 349313350
  store i32 %11, i32* %5
  br label %67

; <label>:12:                                     ; preds = %6
  store i32 0, i32* %3, align 4
  store i32 1966251599, i32* %5
  br label %67

; <label>:13:                                     ; preds = %6
  %14 = call dereferenceable(40) %struct.q_t* @_ZNKSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE3topEv(%"class.std::priority_queue"* @que)
  %15 = load %struct.q_t*, %struct.q_t** %4, align 8
  %16 = bitcast %struct.q_t* %15 to i8*
  %17 = bitcast %struct.q_t* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 40, i32 8, i1 false)
  call void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE3popEv(%"class.std::priority_queue"* @que)
  store i32 1, i32* %3, align 4
  store i32 1966251599, i32* %5
  br label %67

; <label>:18:                                     ; preds = %6
  %19 = load i32, i32* @x.21
  %20 = load i32, i32* @y.22
  %21 = sub i32 %19, 1697040485
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 1697040485
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -44175909, i32 351877433
  store i32 %33, i32* %5
  br label %67

; <label>:34:                                     ; preds = %6
  %35 = load i32, i32* %3, align 4
  store i32 %35, i32* %2
  %36 = load i32, i32* @x.21
  %37 = load i32, i32* @y.22
  %38 = add i32 %36, -1386959045
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1386959045
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1037008347, i32 351877433
  store i32 %62, i32* %5
  br label %67

; <label>:63:                                     ; preds = %6
  %64 = load volatile i32, i32* %2
  ret i32 %64

; <label>:65:                                     ; preds = %6
  %66 = load i32, i32* %3, align 4
  store i32 -44175909, i32* %5
  br label %67

; <label>:67:                                     ; preds = %65, %34, %18, %13, %12, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE5emptyEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt6vectorI3q_tSaIS0_EE5emptyEv(%"class.std::vector"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZNKSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE3topEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(40) %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5frontEv(%"class.std::vector"* %4) #3
  ret %struct.q_t* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EE3popEv(%"class.std::priority_queue"*) #2 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %6 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %7 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %8 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %7) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  store %struct.q_t* %8, %struct.q_t** %9, align 8
  %10 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %11 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %10) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %11, %struct.q_t** %12, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  %15 = load %struct.q_t*, %struct.q_t** %14, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  %17 = load %struct.q_t*, %struct.q_t** %16, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.q_t* %15, %struct.q_t* %17)
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  call void @_ZNSt6vectorI3q_tSaIS0_EE8pop_backEv(%"class.std::vector"* %18) #3
  ret void
}

; Function Attrs: noinline uwtable
define i32 @_Z5solveRSt6vectorI3q_tSaIS0_EExRS_IS_I6edge_tSaIS4_EESaIS6_EERS6_(%"class.std::vector"* dereferenceable(24), i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.5"* dereferenceable(24)) #2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::vector.5"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.q_t, align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::vector.10", align 8
  %13 = alloca %"class.std::allocator.12", align 1
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca %"class.std::vector.20", align 8
  %17 = alloca %"class.std::allocator.22", align 1
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::vector.0"*, align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %22 = alloca %"class.std::vector.5"*, align 8
  %23 = alloca %"class.std::vector.5"*, align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %26 = alloca %struct.edge_t*, align 8
  %27 = alloca i64, align 8
  %28 = alloca %"class.std::vector.20"*, align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %31 = alloca %"class.std::vector.25"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::priority_queue", align 8
  %34 = alloca %"struct.std::less", align 1
  %35 = alloca %"class.std::vector", align 8
  %36 = alloca %"struct.std::pair", align 8
  %37 = alloca %struct.q_t, align 8
  %38 = alloca %"class.std::vector.25"*, align 8
  %39 = alloca i32, align 4
  %40 = alloca %"class.std::vector.5"*, align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %43 = alloca %struct.edge_t*, align 8
  %44 = alloca %struct.q_t, align 8
  %45 = alloca %struct.q_t, align 8
  %46 = alloca %struct.edge_t*, align 8
  %47 = alloca %struct.q_t, align 8
  %48 = alloca i64, align 8
  %49 = alloca %struct.q_t, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.5"* %3, %"class.std::vector.5"** %8, align 8
  %50 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %51 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %50) #3
  %52 = add i64 %51, 7491380158957461690
  %53 = sub i64 %52, 1
  %54 = sub i64 %53, 7491380158957461690
  %55 = sub i64 %51, 1
  %56 = trunc i64 %54 to i32
  store i32 %56, i32* %9, align 4
  %57 = load i32, i32* %9, align 4
  call void @_ZN3q_tC2Ei(%struct.q_t* %10, i32 %57)
  %58 = load i32, i32* %9, align 4
  store i32 %58, i32* %11, align 4
  %59 = load i32, i32* %9, align 4
  %60 = sub i32 0, 1
  %61 = sub i32 %59, %60
  %62 = add nsw i32 %59, 1
  %63 = sext i32 %61 to i64
  call void @_ZNSaISt3setIxSt4lessIxESaIxEEEC2Ev(%"class.std::allocator.12"* %13) #3
  invoke void @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EEC2EmRKS5_(%"class.std::vector.10"* %12, i64 %63, %"class.std::allocator.12"* dereferenceable(1) %13)
          to label %64 unwind label %237

; <label>:64:                                     ; preds = %4
  call void @_ZNSaISt3setIxSt4lessIxESaIxEEED2Ev(%"class.std::allocator.12"* %13) #3
  %65 = load i32, i32* %9, align 4
  %66 = add i32 %65, 1665029874
  %67 = add i32 %66, 1
  %68 = sub i32 %67, 1665029874
  %69 = add nsw i32 %65, 1
  %70 = sext i32 %68 to i64
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.22"* %17) #3
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS2_(%"class.std::vector.20"* %16, i64 %70, %"class.std::allocator.22"* dereferenceable(1) %17)
          to label %71 unwind label %241

; <label>:71:                                     ; preds = %64
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.22"* %17) #3
  store i64 0, i64* %18, align 8
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %72, %"class.std::vector.0"** %19, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %74 = call %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE5beginEv(%"class.std::vector.0"* %73) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %"class.std::vector.5"* %74, %"class.std::vector.5"** %75, align 8
  %76 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %77 = call %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE3endEv(%"class.std::vector.0"* %76) #3
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  store %"class.std::vector.5"* %77, %"class.std::vector.5"** %78, align 8
  br label %79

; <label>:79:                                     ; preds = %345, %71
  %80 = load i32, i32* @x.29
  %81 = load i32, i32* @y.30
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %1062

; <label>:105:                                    ; preds = %79, %1062
  %106 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %20, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %21) #3
  %107 = load i32, i32* @x.29
  %108 = load i32, i32* @y.30
  %109 = sub i32 %107, 1465979652
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 1465979652
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %1062

; <label>:121:                                    ; preds = %105
  br i1 %106, label %122, label %347

; <label>:122:                                    ; preds = %121
  %123 = load i32, i32* @x.29
  %124 = load i32, i32* @y.30
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %1064

; <label>:136:                                    ; preds = %122, %1064
  %137 = call dereferenceable(24) %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %20) #3
  store %"class.std::vector.5"* %137, %"class.std::vector.5"** %22, align 8
  %138 = load %"class.std::vector.5"*, %"class.std::vector.5"** %22, align 8
  store %"class.std::vector.5"* %138, %"class.std::vector.5"** %23, align 8
  %139 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  %140 = call %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE5beginEv(%"class.std::vector.5"* %139) #3
  %141 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  store %struct.edge_t* %140, %struct.edge_t** %141, align 8
  %142 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  %143 = call %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE3endEv(%"class.std::vector.5"* %142) #3
  %144 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %25, i32 0, i32 0
  store %struct.edge_t* %143, %struct.edge_t** %144, align 8
  %145 = load i32, i32* @x.29
  %146 = load i32, i32* @y.30
  %147 = sub i32 %145, 448183489
  %148 = sub i32 %147, 1
  %149 = add i32 %148, 448183489
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 true, true
  %158 = and i1 %155, true
  %159 = and i1 %153, %157
  %160 = and i1 %156, true
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 true, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %1064

; <label>:171:                                    ; preds = %136
  br label %172

; <label>:172:                                    ; preds = %235, %171
  %173 = call zeroext i1 @_ZN9__gnu_cxxneIP6edge_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %24, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %25) #3
  br i1 %173, label %174, label %344

; <label>:174:                                    ; preds = %172
  %175 = call dereferenceable(24) %struct.edge_t* @_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"* %24) #3
  store %struct.edge_t* %175, %struct.edge_t** %26, align 8
  %176 = load %struct.edge_t*, %struct.edge_t** %26, align 8
  %177 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %176, i32 0, i32 1
  %178 = invoke dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %18, i64* dereferenceable(8) %177)
          to label %179 unwind label %298

; <label>:179:                                    ; preds = %174
  %180 = load i32, i32* @x.29
  %181 = load i32, i32* @y.30
  %182 = add i32 %180, -2104575407
  %183 = sub i32 %182, 1
  %184 = sub i32 %183, -2104575407
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %1073

; <label>:206:                                    ; preds = %179, %1073
  %207 = load i64, i64* %178, align 8
  store i64 %207, i64* %18, align 8
  %208 = load i32, i32* @x.29
  %209 = load i32, i32* @y.30
  %210 = sub i32 %208, -1130341024
  %211 = sub i32 %210, 1
  %212 = add i32 %211, -1130341024
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 false, true
  %221 = and i1 %218, false
  %222 = and i1 %216, %220
  %223 = and i1 %219, false
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 false, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  br i1 %232, label %234, label %1073

; <label>:234:                                    ; preds = %206
  br label %235

; <label>:235:                                    ; preds = %234
  %236 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"* %24) #3
  br label %172

; <label>:237:                                    ; preds = %4
  %238 = landingpad { i8*, i32 }
          cleanup
  %239 = extractvalue { i8*, i32 } %238, 0
  store i8* %239, i8** %14, align 8
  %240 = extractvalue { i8*, i32 } %238, 1
  store i32 %240, i32* %15, align 4
  call void @_ZNSaISt3setIxSt4lessIxESaIxEEED2Ev(%"class.std::allocator.12"* %13) #3
  br label %1016

; <label>:241:                                    ; preds = %64
  %242 = load i32, i32* @x.29
  %243 = load i32, i32* @y.30
  %244 = add i32 %242, -1844693906
  %245 = sub i32 %244, 1
  %246 = sub i32 %245, -1844693906
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 true, true
  %255 = and i1 %252, true
  %256 = and i1 %250, %254
  %257 = and i1 %253, true
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 true, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  br i1 %266, label %268, label %1075

; <label>:268:                                    ; preds = %241, %1075
  %269 = landingpad { i8*, i32 }
          cleanup
  %270 = extractvalue { i8*, i32 } %269, 0
  store i8* %270, i8** %14, align 8
  %271 = extractvalue { i8*, i32 } %269, 1
  store i32 %271, i32* %15, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.22"* %17) #3
  %272 = load i32, i32* @x.29
  %273 = load i32, i32* @y.30
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 true, true
  %284 = and i1 %281, true
  %285 = and i1 %279, %283
  %286 = and i1 %282, true
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 true, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %1075

; <label>:297:                                    ; preds = %268
  br label %1015

; <label>:298:                                    ; preds = %1011, %939, %893, %710, %527, %489, %475, %472, %416, %174
  %299 = load i32, i32* @x.29
  %300 = load i32, i32* @y.30
  %301 = add i32 %299, -1514828313
  %302 = sub i32 %301, 1
  %303 = sub i32 %302, -1514828313
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = and i1 %307, %308
  %310 = xor i1 %307, %308
  %311 = or i1 %309, %310
  %312 = or i1 %307, %308
  br i1 %311, label %313, label %1079

; <label>:313:                                    ; preds = %298, %1079
  %314 = landingpad { i8*, i32 }
          cleanup
  %315 = extractvalue { i8*, i32 } %314, 0
  store i8* %315, i8** %14, align 8
  %316 = extractvalue { i8*, i32 } %314, 1
  store i32 %316, i32* %15, align 4
  %317 = load i32, i32* @x.29
  %318 = load i32, i32* @y.30
  %319 = sub i32 %317, -1523968917
  %320 = sub i32 %319, 1
  %321 = add i32 %320, -1523968917
  %322 = sub i32 %317, 1
  %323 = mul i32 %317, %321
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %318, 10
  %327 = xor i1 %325, true
  %328 = xor i1 %326, true
  %329 = xor i1 true, true
  %330 = and i1 %327, true
  %331 = and i1 %325, %329
  %332 = and i1 %328, true
  %333 = and i1 %326, %329
  %334 = or i1 %330, %331
  %335 = or i1 %332, %333
  %336 = xor i1 %334, %335
  %337 = or i1 %327, %328
  %338 = xor i1 %337, true
  %339 = or i1 true, %329
  %340 = and i1 %338, %339
  %341 = or i1 %336, %340
  %342 = or i1 %325, %326
  br i1 %341, label %343, label %1079

; <label>:343:                                    ; preds = %313
  br label %1014

; <label>:344:                                    ; preds = %172
  br label %345

; <label>:345:                                    ; preds = %344
  %346 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %20) #3
  br label %79

; <label>:347:                                    ; preds = %121
  %348 = load i64, i64* %18, align 8
  %349 = load i32, i32* %9, align 4
  %350 = sub i32 0, 1
  %351 = add i32 %349, %350
  %352 = sub nsw i32 %349, 1
  %353 = sext i32 %351 to i64
  %354 = mul nsw i64 %348, %353
  store i64 %354, i64* %27, align 8
  store %"class.std::vector.20"* %16, %"class.std::vector.20"** %28, align 8
  %355 = load %"class.std::vector.20"*, %"class.std::vector.20"** %28, align 8
  %356 = call %"class.std::vector.25"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE5beginEv(%"class.std::vector.20"* %355) #3
  %357 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %29, i32 0, i32 0
  store %"class.std::vector.25"* %356, %"class.std::vector.25"** %357, align 8
  %358 = load %"class.std::vector.20"*, %"class.std::vector.20"** %28, align 8
  %359 = call %"class.std::vector.25"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE3endEv(%"class.std::vector.20"* %358) #3
  %360 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %30, i32 0, i32 0
  store %"class.std::vector.25"* %359, %"class.std::vector.25"** %360, align 8
  br label %361

; <label>:361:                                    ; preds = %468, %347
  %362 = load i32, i32* @x.29
  %363 = load i32, i32* @y.30
  %364 = sub i32 0, 1
  %365 = add i32 %362, %364
  %366 = sub i32 %362, 1
  %367 = mul i32 %362, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %363, 10
  %371 = xor i1 %369, true
  %372 = xor i1 %370, true
  %373 = xor i1 true, true
  %374 = and i1 %371, true
  %375 = and i1 %369, %373
  %376 = and i1 %372, true
  %377 = and i1 %370, %373
  %378 = or i1 %374, %375
  %379 = or i1 %376, %377
  %380 = xor i1 %378, %379
  %381 = or i1 %371, %372
  %382 = xor i1 %381, true
  %383 = or i1 true, %373
  %384 = and i1 %382, %383
  %385 = or i1 %380, %384
  %386 = or i1 %369, %370
  br i1 %385, label %387, label %1083

; <label>:387:                                    ; preds = %361, %1083
  %388 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %29, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %30) #3
  %389 = load i32, i32* @x.29
  %390 = load i32, i32* @y.30
  %391 = sub i32 %389, 269744530
  %392 = sub i32 %391, 1
  %393 = add i32 %392, 269744530
  %394 = sub i32 %389, 1
  %395 = mul i32 %389, %393
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %390, 10
  %399 = xor i1 %397, true
  %400 = xor i1 %398, true
  %401 = xor i1 false, true
  %402 = and i1 %399, false
  %403 = and i1 %397, %401
  %404 = and i1 %400, false
  %405 = and i1 %398, %401
  %406 = or i1 %402, %403
  %407 = or i1 %404, %405
  %408 = xor i1 %406, %407
  %409 = or i1 %399, %400
  %410 = xor i1 %409, true
  %411 = or i1 false, %401
  %412 = and i1 %410, %411
  %413 = or i1 %408, %412
  %414 = or i1 %397, %398
  br i1 %413, label %415, label %1083

; <label>:415:                                    ; preds = %387
  br i1 %388, label %416, label %469

; <label>:416:                                    ; preds = %415
  %417 = call dereferenceable(24) %"class.std::vector.25"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.31"* %29) #3
  store %"class.std::vector.25"* %417, %"class.std::vector.25"** %31, align 8
  %418 = load %"class.std::vector.25"*, %"class.std::vector.25"** %31, align 8
  %419 = load i64, i64* %27, align 8
  %420 = add i64 %419, 62910770349489009
  %421 = add i64 %420, 1
  %422 = sub i64 %421, 62910770349489009
  %423 = add nsw i64 %419, 1
  store i64 4611686018427387904, i64* %32, align 8
  invoke void @_ZNSt6vectorIxSaIxEE6assignEmRKx(%"class.std::vector.25"* %418, i64 %422, i64* dereferenceable(8) %32)
          to label %424 unwind label %298

; <label>:424:                                    ; preds = %416
  br label %425

; <label>:425:                                    ; preds = %424
  %426 = load i32, i32* @x.29
  %427 = load i32, i32* @y.30
  %428 = add i32 %426, 1138525588
  %429 = sub i32 %428, 1
  %430 = sub i32 %429, 1138525588
  %431 = sub i32 %426, 1
  %432 = mul i32 %426, %430
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %427, 10
  %436 = and i1 %434, %435
  %437 = xor i1 %434, %435
  %438 = or i1 %436, %437
  %439 = or i1 %434, %435
  br i1 %438, label %440, label %1085

; <label>:440:                                    ; preds = %425, %1085
  %441 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"* %29) #3
  %442 = load i32, i32* @x.29
  %443 = load i32, i32* @y.30
  %444 = sub i32 %442, -120862149
  %445 = sub i32 %444, 1
  %446 = add i32 %445, -120862149
  %447 = sub i32 %442, 1
  %448 = mul i32 %442, %446
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %443, 10
  %452 = xor i1 %450, true
  %453 = xor i1 %451, true
  %454 = xor i1 false, true
  %455 = and i1 %452, false
  %456 = and i1 %450, %454
  %457 = and i1 %453, false
  %458 = and i1 %451, %454
  %459 = or i1 %455, %456
  %460 = or i1 %457, %458
  %461 = xor i1 %459, %460
  %462 = or i1 %452, %453
  %463 = xor i1 %462, true
  %464 = or i1 false, %454
  %465 = and i1 %463, %464
  %466 = or i1 %461, %465
  %467 = or i1 %450, %451
  br i1 %466, label %468, label %1085

; <label>:468:                                    ; preds = %440
  br label %361

; <label>:469:                                    ; preds = %415
  call void @_ZNSt6vectorI3q_tSaIS0_EEC2Ev(%"class.std::vector"* %35) #3
  invoke void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_(%"class.std::priority_queue"* %33, %"struct.std::less"* dereferenceable(1) %34, %"class.std::vector"* dereferenceable(24) %35)
          to label %470 unwind label %628

; <label>:470:                                    ; preds = %469
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %35) #3
  %471 = invoke dereferenceable(32) %"class.std::priority_queue"* @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EEaSERKS6_(%"class.std::priority_queue"* @que, %"class.std::priority_queue"* dereferenceable(32) %33)
          to label %472 unwind label %660

; <label>:472:                                    ; preds = %470
  call void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue"* %33) #3
  %473 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  store i64 0, i64* %473, align 8
  %474 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %27)
          to label %475 unwind label %298

; <label>:475:                                    ; preds = %472
  %476 = load i64, i64* %474, align 8
  %477 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 1
  store i64 %476, i64* %477, align 8
  %478 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 2
  store i32 1, i32* %478, align 8
  %479 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 4
  store i64 0, i64* %479, align 8
  %480 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 3
  %481 = load i64, i64* %480, align 8
  %482 = and i64 %481, 2
  %483 = xor i64 %481, 2
  %484 = or i64 %482, %483
  %485 = or i64 %481, 2
  store i64 %484, i64* %480, align 8
  %486 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EEixEm(%"class.std::vector.10"* %12, i64 1) #3
  %487 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 3
  %488 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"* %486, i64* dereferenceable(8) %487)
          to label %489 unwind label %298

; <label>:489:                                    ; preds = %475
  %490 = bitcast %"struct.std::pair"* %36 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %491 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %490, i32 0, i32 0
  %492 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %488, 0
  store %"struct.std::_Rb_tree_node_base"* %492, %"struct.std::_Rb_tree_node_base"** %491, align 8
  %493 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %490, i32 0, i32 1
  %494 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %488, 1
  store i8 %494, i8* %493, align 8
  %495 = bitcast %struct.q_t* %37 to i8*
  %496 = bitcast %struct.q_t* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %495, i8* %496, i64 40, i32 8, i1 false)
  invoke void @_Z4push3q_t(%struct.q_t* byval align 8 %37)
          to label %497 unwind label %298

; <label>:497:                                    ; preds = %489
  br label %498

; <label>:498:                                    ; preds = %1012, %627, %497
  %499 = load i32, i32* @x.29
  %500 = load i32, i32* @y.30
  %501 = sub i32 0, 1
  %502 = add i32 %499, %501
  %503 = sub i32 %499, 1
  %504 = mul i32 %499, %502
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %500, 10
  %508 = and i1 %506, %507
  %509 = xor i1 %506, %507
  %510 = or i1 %508, %509
  %511 = or i1 %506, %507
  br i1 %510, label %512, label %1087

; <label>:512:                                    ; preds = %498, %1087
  %513 = load i32, i32* @x.29
  %514 = load i32, i32* @y.30
  %515 = add i32 %513, 1333299842
  %516 = sub i32 %515, 1
  %517 = sub i32 %516, 1333299842
  %518 = sub i32 %513, 1
  %519 = mul i32 %513, %517
  %520 = urem i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = icmp slt i32 %514, 10
  %523 = and i1 %521, %522
  %524 = xor i1 %521, %522
  %525 = or i1 %523, %524
  %526 = or i1 %521, %522
  br i1 %525, label %527, label %1087

; <label>:527:                                    ; preds = %512
  %528 = invoke i32 @_Z3popR3q_t(%struct.q_t* dereferenceable(40) %10)
          to label %529 unwind label %298

; <label>:529:                                    ; preds = %527
  %530 = load i32, i32* @x.29
  %531 = load i32, i32* @y.30
  %532 = sub i32 %530, 776055234
  %533 = sub i32 %532, 1
  %534 = add i32 %533, 776055234
  %535 = sub i32 %530, 1
  %536 = mul i32 %530, %534
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %531, 10
  %540 = xor i1 %538, true
  %541 = xor i1 %539, true
  %542 = xor i1 false, true
  %543 = and i1 %540, false
  %544 = and i1 %538, %542
  %545 = and i1 %541, false
  %546 = and i1 %539, %542
  %547 = or i1 %543, %544
  %548 = or i1 %545, %546
  %549 = xor i1 %547, %548
  %550 = or i1 %540, %541
  %551 = xor i1 %550, true
  %552 = or i1 false, %542
  %553 = and i1 %551, %552
  %554 = or i1 %549, %553
  %555 = or i1 %538, %539
  br i1 %554, label %556, label %1088

; <label>:556:                                    ; preds = %529, %1088
  %557 = icmp ne i32 %528, 0
  %558 = load i32, i32* @x.29
  %559 = load i32, i32* @y.30
  %560 = sub i32 %558, 1599018157
  %561 = sub i32 %560, 1
  %562 = add i32 %561, 1599018157
  %563 = sub i32 %558, 1
  %564 = mul i32 %558, %562
  %565 = urem i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %559, 10
  %568 = and i1 %566, %567
  %569 = xor i1 %566, %567
  %570 = or i1 %568, %569
  %571 = or i1 %566, %567
  br i1 %570, label %572, label %1088

; <label>:572:                                    ; preds = %556
  br i1 %557, label %573, label %1013

; <label>:573:                                    ; preds = %572
  %574 = load i32, i32* @x.29
  %575 = load i32, i32* @y.30
  %576 = add i32 %574, 1761900872
  %577 = sub i32 %576, 1
  %578 = sub i32 %577, 1761900872
  %579 = sub i32 %574, 1
  %580 = mul i32 %574, %578
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %575, 10
  %584 = xor i1 %582, true
  %585 = xor i1 %583, true
  %586 = xor i1 true, true
  %587 = and i1 %584, true
  %588 = and i1 %582, %586
  %589 = and i1 %585, true
  %590 = and i1 %583, %586
  %591 = or i1 %587, %588
  %592 = or i1 %589, %590
  %593 = xor i1 %591, %592
  %594 = or i1 %584, %585
  %595 = xor i1 %594, true
  %596 = or i1 true, %586
  %597 = and i1 %595, %596
  %598 = or i1 %593, %597
  %599 = or i1 %582, %583
  br i1 %598, label %600, label %1090

; <label>:600:                                    ; preds = %573, %1090
  %601 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 2
  %602 = load i32, i32* %601, align 8
  %603 = sext i32 %602 to i64
  %604 = call dereferenceable(24) %"class.std::vector.25"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.20"* %16, i64 %603) #3
  store %"class.std::vector.25"* %604, %"class.std::vector.25"** %38, align 8
  %605 = load %"class.std::vector.25"*, %"class.std::vector.25"** %38, align 8
  %606 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 1
  %607 = load i64, i64* %606, align 8
  %608 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.25"* %605, i64 %607) #3
  %609 = load i64, i64* %608, align 8
  %610 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %611 = load i64, i64* %610, align 8
  %612 = icmp sle i64 %609, %611
  %613 = load i32, i32* @x.29
  %614 = load i32, i32* @y.30
  %615 = sub i32 0, 1
  %616 = add i32 %613, %615
  %617 = sub i32 %613, 1
  %618 = mul i32 %613, %616
  %619 = urem i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %614, 10
  %622 = and i1 %620, %621
  %623 = xor i1 %620, %621
  %624 = or i1 %622, %623
  %625 = or i1 %620, %621
  br i1 %624, label %626, label %1090

; <label>:626:                                    ; preds = %600
  br i1 %612, label %627, label %664

; <label>:627:                                    ; preds = %626
  br label %498

; <label>:628:                                    ; preds = %469
  %629 = load i32, i32* @x.29
  %630 = load i32, i32* @y.30
  %631 = sub i32 0, 1
  %632 = add i32 %629, %631
  %633 = sub i32 %629, 1
  %634 = mul i32 %629, %632
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %630, 10
  %638 = and i1 %636, %637
  %639 = xor i1 %636, %637
  %640 = or i1 %638, %639
  %641 = or i1 %636, %637
  br i1 %640, label %642, label %1103

; <label>:642:                                    ; preds = %628, %1103
  %643 = landingpad { i8*, i32 }
          cleanup
  %644 = extractvalue { i8*, i32 } %643, 0
  store i8* %644, i8** %14, align 8
  %645 = extractvalue { i8*, i32 } %643, 1
  store i32 %645, i32* %15, align 4
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %35) #3
  %646 = load i32, i32* @x.29
  %647 = load i32, i32* @y.30
  %648 = sub i32 0, 1
  %649 = add i32 %646, %648
  %650 = sub i32 %646, 1
  %651 = mul i32 %646, %649
  %652 = urem i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %647, 10
  %655 = and i1 %653, %654
  %656 = xor i1 %653, %654
  %657 = or i1 %655, %656
  %658 = or i1 %653, %654
  br i1 %657, label %659, label %1103

; <label>:659:                                    ; preds = %642
  br label %1014

; <label>:660:                                    ; preds = %470
  %661 = landingpad { i8*, i32 }
          cleanup
  %662 = extractvalue { i8*, i32 } %661, 0
  store i8* %662, i8** %14, align 8
  %663 = extractvalue { i8*, i32 } %661, 1
  store i32 %663, i32* %15, align 4
  call void @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue"* %33) #3
  br label %1014

; <label>:664:                                    ; preds = %626
  %665 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 1
  %666 = load i64, i64* %665, align 8
  %667 = trunc i64 %666 to i32
  store i32 %667, i32* %39, align 4
  br label %668

; <label>:668:                                    ; preds = %689, %664
  %669 = load i32, i32* %39, align 4
  %670 = icmp sge i32 %669, 0
  br i1 %670, label %671, label %680

; <label>:671:                                    ; preds = %668
  %672 = load %"class.std::vector.25"*, %"class.std::vector.25"** %38, align 8
  %673 = load i32, i32* %39, align 4
  %674 = sext i32 %673 to i64
  %675 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.25"* %672, i64 %674) #3
  %676 = load i64, i64* %675, align 8
  %677 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %678 = load i64, i64* %677, align 8
  %679 = icmp sgt i64 %676, %678
  br label %680

; <label>:680:                                    ; preds = %671, %668
  %681 = phi i1 [ false, %668 ], [ %679, %671 ]
  br i1 %681, label %682, label %694

; <label>:682:                                    ; preds = %680
  %683 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %684 = load i64, i64* %683, align 8
  %685 = load %"class.std::vector.25"*, %"class.std::vector.25"** %38, align 8
  %686 = load i32, i32* %39, align 4
  %687 = sext i32 %686 to i64
  %688 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.25"* %685, i64 %687) #3
  store i64 %684, i64* %688, align 8
  br label %689

; <label>:689:                                    ; preds = %682
  %690 = load i32, i32* %39, align 4
  %691 = sub i32 0, -1
  %692 = sub i32 %690, %691
  %693 = add nsw i32 %690, -1
  store i32 %692, i32* %39, align 4
  br label %668

; <label>:694:                                    ; preds = %680
  %695 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %696 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 2
  %697 = load i32, i32* %696, align 8
  %698 = sext i32 %697 to i64
  %699 = call dereferenceable(40) %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EEixEm(%"class.std::vector"* %695, i64 %698) #3
  %700 = getelementptr inbounds %struct.q_t, %struct.q_t* %699, i32 0, i32 0
  %701 = load i64, i64* %700, align 8
  %702 = icmp eq i64 %701, 4611686018427387904
  br i1 %702, label %703, label %710

; <label>:703:                                    ; preds = %694
  %704 = load i32, i32* %11, align 4
  %705 = sub i32 0, %704
  %706 = sub i32 0, -1
  %707 = add i32 %705, %706
  %708 = sub i32 0, %707
  %709 = add nsw i32 %704, -1
  store i32 %708, i32* %11, align 4
  br label %710

; <label>:710:                                    ; preds = %703, %694
  %711 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %712 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 2
  %713 = load i32, i32* %712, align 8
  %714 = sext i32 %713 to i64
  %715 = call dereferenceable(40) %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EEixEm(%"class.std::vector"* %711, i64 %714) #3
  %716 = invoke zeroext i1 @_Z6min_quR3q_tS0_(%struct.q_t* dereferenceable(40) %715, %struct.q_t* dereferenceable(40) %10)
          to label %717 unwind label %298

; <label>:717:                                    ; preds = %710
  %718 = load i32, i32* @x.29
  %719 = load i32, i32* @y.30
  %720 = sub i32 0, 1
  %721 = add i32 %718, %720
  %722 = sub i32 %718, 1
  %723 = mul i32 %718, %721
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %719, 10
  %727 = and i1 %725, %726
  %728 = xor i1 %725, %726
  %729 = or i1 %727, %728
  %730 = or i1 %725, %726
  br i1 %729, label %731, label %1107

; <label>:731:                                    ; preds = %717, %1107
  %732 = load i32, i32* %11, align 4
  %733 = icmp sle i32 %732, 0
  %734 = load i32, i32* @x.29
  %735 = load i32, i32* @y.30
  %736 = sub i32 %734, 1955404131
  %737 = sub i32 %736, 1
  %738 = add i32 %737, 1955404131
  %739 = sub i32 %734, 1
  %740 = mul i32 %734, %738
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %735, 10
  %744 = xor i1 %742, true
  %745 = xor i1 %743, true
  %746 = xor i1 false, true
  %747 = and i1 %744, false
  %748 = and i1 %742, %746
  %749 = and i1 %745, false
  %750 = and i1 %743, %746
  %751 = or i1 %747, %748
  %752 = or i1 %749, %750
  %753 = xor i1 %751, %752
  %754 = or i1 %744, %745
  %755 = xor i1 %754, true
  %756 = or i1 false, %746
  %757 = and i1 %755, %756
  %758 = or i1 %753, %757
  %759 = or i1 %742, %743
  br i1 %758, label %760, label %1107

; <label>:760:                                    ; preds = %731
  br i1 %733, label %761, label %762

; <label>:761:                                    ; preds = %760
  br label %1013

; <label>:762:                                    ; preds = %760
  %763 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %764 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 2
  %765 = load i32, i32* %764, align 8
  %766 = sext i32 %765 to i64
  %767 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEixEm(%"class.std::vector.0"* %763, i64 %766) #3
  store %"class.std::vector.5"* %767, %"class.std::vector.5"** %40, align 8
  %768 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %769 = call %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE5beginEv(%"class.std::vector.5"* %768) #3
  %770 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %41, i32 0, i32 0
  store %struct.edge_t* %769, %struct.edge_t** %770, align 8
  %771 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %772 = call %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE3endEv(%"class.std::vector.5"* %771) #3
  %773 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %42, i32 0, i32 0
  store %struct.edge_t* %772, %struct.edge_t** %773, align 8
  br label %774

; <label>:774:                                    ; preds = %938, %762
  %775 = call zeroext i1 @_ZN9__gnu_cxxneIP6edge_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %41, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %42) #3
  br i1 %775, label %776, label %939

; <label>:776:                                    ; preds = %774
  %777 = load i32, i32* @x.29
  %778 = load i32, i32* @y.30
  %779 = add i32 %777, 1143877369
  %780 = sub i32 %779, 1
  %781 = sub i32 %780, 1143877369
  %782 = sub i32 %777, 1
  %783 = mul i32 %777, %781
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %778, 10
  %787 = xor i1 %785, true
  %788 = xor i1 %786, true
  %789 = xor i1 false, true
  %790 = and i1 %787, false
  %791 = and i1 %785, %789
  %792 = and i1 %788, false
  %793 = and i1 %786, %789
  %794 = or i1 %790, %791
  %795 = or i1 %792, %793
  %796 = xor i1 %794, %795
  %797 = or i1 %787, %788
  %798 = xor i1 %797, true
  %799 = or i1 false, %789
  %800 = and i1 %798, %799
  %801 = or i1 %796, %800
  %802 = or i1 %785, %786
  br i1 %801, label %803, label %1110

; <label>:803:                                    ; preds = %776, %1110
  %804 = call dereferenceable(24) %struct.edge_t* @_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"* %41) #3
  store %struct.edge_t* %804, %struct.edge_t** %43, align 8
  %805 = bitcast %struct.q_t* %44 to i8*
  %806 = bitcast %struct.q_t* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %805, i8* %806, i64 40, i32 8, i1 false)
  %807 = load %struct.edge_t*, %struct.edge_t** %43, align 8
  %808 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %807, i32 0, i32 0
  %809 = load i32, i32* %808, align 8
  %810 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 2
  store i32 %809, i32* %810, align 8
  %811 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %812 = load i64, i64* %811, align 8
  %813 = load %struct.edge_t*, %struct.edge_t** %43, align 8
  %814 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %813, i32 0, i32 2
  %815 = load i64, i64* %814, align 8
  %816 = sub i64 0, %812
  %817 = sub i64 0, %815
  %818 = add i64 %816, %817
  %819 = sub i64 0, %818
  %820 = add nsw i64 %812, %815
  %821 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 0
  store i64 %819, i64* %821, align 8
  %822 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 1
  %823 = load i64, i64* %822, align 8
  %824 = load %struct.edge_t*, %struct.edge_t** %43, align 8
  %825 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %824, i32 0, i32 1
  %826 = load i64, i64* %825, align 8
  %827 = sub i64 %823, 1554090870212582557
  %828 = sub i64 %827, %826
  %829 = add i64 %828, 1554090870212582557
  %830 = sub nsw i64 %823, %826
  %831 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 1
  store i64 %829, i64* %831, align 8
  %832 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 1
  %833 = load i64, i64* %832, align 8
  %834 = icmp sge i64 %833, 0
  %835 = load i32, i32* @x.29
  %836 = load i32, i32* @y.30
  %837 = sub i32 0, 1
  %838 = add i32 %835, %837
  %839 = sub i32 %835, 1
  %840 = mul i32 %835, %838
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %836, 10
  %844 = and i1 %842, %843
  %845 = xor i1 %842, %843
  %846 = or i1 %844, %845
  %847 = or i1 %842, %843
  br i1 %846, label %848, label %1110

; <label>:848:                                    ; preds = %803
  br i1 %834, label %849, label %895

; <label>:849:                                    ; preds = %848
  %850 = load i32, i32* @x.29
  %851 = load i32, i32* @y.30
  %852 = add i32 %850, 1044994199
  %853 = sub i32 %852, 1
  %854 = sub i32 %853, 1044994199
  %855 = sub i32 %850, 1
  %856 = mul i32 %850, %854
  %857 = urem i32 %856, 2
  %858 = icmp eq i32 %857, 0
  %859 = icmp slt i32 %851, 10
  %860 = xor i1 %858, true
  %861 = xor i1 %859, true
  %862 = xor i1 true, true
  %863 = and i1 %860, true
  %864 = and i1 %858, %862
  %865 = and i1 %861, true
  %866 = and i1 %859, %862
  %867 = or i1 %863, %864
  %868 = or i1 %865, %866
  %869 = xor i1 %867, %868
  %870 = or i1 %860, %861
  %871 = xor i1 %870, true
  %872 = or i1 true, %862
  %873 = and i1 %871, %872
  %874 = or i1 %869, %873
  %875 = or i1 %858, %859
  br i1 %874, label %876, label %1160

; <label>:876:                                    ; preds = %849, %1160
  %877 = bitcast %struct.q_t* %45 to i8*
  %878 = bitcast %struct.q_t* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %877, i8* %878, i64 40, i32 8, i1 false)
  %879 = load i32, i32* @x.29
  %880 = load i32, i32* @y.30
  %881 = sub i32 %879, 1629267192
  %882 = sub i32 %881, 1
  %883 = add i32 %882, 1629267192
  %884 = sub i32 %879, 1
  %885 = mul i32 %879, %883
  %886 = urem i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = icmp slt i32 %880, 10
  %889 = and i1 %887, %888
  %890 = xor i1 %887, %888
  %891 = or i1 %889, %890
  %892 = or i1 %887, %888
  br i1 %891, label %893, label %1160

; <label>:893:                                    ; preds = %876
  invoke void @_Z4push3q_t(%struct.q_t* byval align 8 %45)
          to label %894 unwind label %298

; <label>:894:                                    ; preds = %893
  br label %895

; <label>:895:                                    ; preds = %894, %848
  br label %896

; <label>:896:                                    ; preds = %895
  %897 = load i32, i32* @x.29
  %898 = load i32, i32* @y.30
  %899 = sub i32 %897, -979282499
  %900 = sub i32 %899, 1
  %901 = add i32 %900, -979282499
  %902 = sub i32 %897, 1
  %903 = mul i32 %897, %901
  %904 = urem i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = icmp slt i32 %898, 10
  %907 = and i1 %905, %906
  %908 = xor i1 %905, %906
  %909 = or i1 %907, %908
  %910 = or i1 %905, %906
  br i1 %909, label %911, label %1163

; <label>:911:                                    ; preds = %896, %1163
  %912 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"* %41) #3
  %913 = load i32, i32* @x.29
  %914 = load i32, i32* @y.30
  %915 = sub i32 0, 1
  %916 = add i32 %913, %915
  %917 = sub i32 %913, 1
  %918 = mul i32 %913, %916
  %919 = urem i32 %918, 2
  %920 = icmp eq i32 %919, 0
  %921 = icmp slt i32 %914, 10
  %922 = xor i1 %920, true
  %923 = xor i1 %921, true
  %924 = xor i1 false, true
  %925 = and i1 %922, false
  %926 = and i1 %920, %924
  %927 = and i1 %923, false
  %928 = and i1 %921, %924
  %929 = or i1 %925, %926
  %930 = or i1 %927, %928
  %931 = xor i1 %929, %930
  %932 = or i1 %922, %923
  %933 = xor i1 %932, true
  %934 = or i1 false, %924
  %935 = and i1 %933, %934
  %936 = or i1 %931, %935
  %937 = or i1 %920, %921
  br i1 %936, label %938, label %1163

; <label>:938:                                    ; preds = %911
  br label %774

; <label>:939:                                    ; preds = %774
  %940 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %941 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 2
  %942 = load i32, i32* %941, align 8
  %943 = sext i32 %942 to i64
  %944 = call dereferenceable(24) %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EEixEm(%"class.std::vector.5"* %940, i64 %943) #3
  store %struct.edge_t* %944, %struct.edge_t** %46, align 8
  %945 = bitcast %struct.q_t* %47 to i8*
  %946 = bitcast %struct.q_t* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %945, i8* %946, i64 40, i32 8, i1 false)
  %947 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %948 = load i64, i64* %947, align 8
  %949 = load %struct.edge_t*, %struct.edge_t** %46, align 8
  %950 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %949, i32 0, i32 2
  %951 = load i64, i64* %950, align 8
  %952 = sub i64 0, %951
  %953 = sub i64 %948, %952
  %954 = add nsw i64 %948, %951
  %955 = getelementptr inbounds %struct.q_t, %struct.q_t* %47, i32 0, i32 0
  store i64 %953, i64* %955, align 8
  %956 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 1
  %957 = load i64, i64* %956, align 8
  %958 = load %struct.edge_t*, %struct.edge_t** %46, align 8
  %959 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %958, i32 0, i32 1
  %960 = load i64, i64* %959, align 8
  %961 = sub i64 0, %960
  %962 = sub i64 %957, %961
  %963 = add nsw i64 %957, %960
  store i64 %962, i64* %48, align 8
  %964 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %48, i64* dereferenceable(8) %27)
          to label %965 unwind label %298

; <label>:965:                                    ; preds = %939
  %966 = load i32, i32* @x.29
  %967 = load i32, i32* @y.30
  %968 = add i32 %966, 788270659
  %969 = sub i32 %968, 1
  %970 = sub i32 %969, 788270659
  %971 = sub i32 %966, 1
  %972 = mul i32 %966, %970
  %973 = urem i32 %972, 2
  %974 = icmp eq i32 %973, 0
  %975 = icmp slt i32 %967, 10
  %976 = and i1 %974, %975
  %977 = xor i1 %974, %975
  %978 = or i1 %976, %977
  %979 = or i1 %974, %975
  br i1 %978, label %980, label %1165

; <label>:980:                                    ; preds = %965, %1165
  %981 = load i64, i64* %964, align 8
  %982 = getelementptr inbounds %struct.q_t, %struct.q_t* %47, i32 0, i32 1
  store i64 %981, i64* %982, align 8
  %983 = bitcast %struct.q_t* %49 to i8*
  %984 = bitcast %struct.q_t* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %983, i8* %984, i64 40, i32 8, i1 false)
  %985 = load i32, i32* @x.29
  %986 = load i32, i32* @y.30
  %987 = sub i32 %985, -1468981353
  %988 = sub i32 %987, 1
  %989 = add i32 %988, -1468981353
  %990 = sub i32 %985, 1
  %991 = mul i32 %985, %989
  %992 = urem i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = icmp slt i32 %986, 10
  %995 = xor i1 %993, true
  %996 = xor i1 %994, true
  %997 = xor i1 false, true
  %998 = and i1 %995, false
  %999 = and i1 %993, %997
  %1000 = and i1 %996, false
  %1001 = and i1 %994, %997
  %1002 = or i1 %998, %999
  %1003 = or i1 %1000, %1001
  %1004 = xor i1 %1002, %1003
  %1005 = or i1 %995, %996
  %1006 = xor i1 %1005, true
  %1007 = or i1 false, %997
  %1008 = and i1 %1006, %1007
  %1009 = or i1 %1004, %1008
  %1010 = or i1 %993, %994
  br i1 %1009, label %1011, label %1165

; <label>:1011:                                   ; preds = %980
  invoke void @_Z4push3q_t(%struct.q_t* byval align 8 %49)
          to label %1012 unwind label %298

; <label>:1012:                                   ; preds = %1011
  br label %498

; <label>:1013:                                   ; preds = %761, %572
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.20"* %16) #3
  call void @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev(%"class.std::vector.10"* %12) #3
  ret i32 1

; <label>:1014:                                   ; preds = %660, %659, %343
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.20"* %16) #3
  br label %1015

; <label>:1015:                                   ; preds = %1014, %297
  call void @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev(%"class.std::vector.10"* %12) #3
  br label %1016

; <label>:1016:                                   ; preds = %1015, %237
  %1017 = load i32, i32* @x.29
  %1018 = load i32, i32* @y.30
  %1019 = sub i32 %1017, 1982660476
  %1020 = sub i32 %1019, 1
  %1021 = add i32 %1020, 1982660476
  %1022 = sub i32 %1017, 1
  %1023 = mul i32 %1017, %1021
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1018, 10
  %1027 = xor i1 %1025, true
  %1028 = xor i1 %1026, true
  %1029 = xor i1 true, true
  %1030 = and i1 %1027, true
  %1031 = and i1 %1025, %1029
  %1032 = and i1 %1028, true
  %1033 = and i1 %1026, %1029
  %1034 = or i1 %1030, %1031
  %1035 = or i1 %1032, %1033
  %1036 = xor i1 %1034, %1035
  %1037 = or i1 %1027, %1028
  %1038 = xor i1 %1037, true
  %1039 = or i1 true, %1029
  %1040 = and i1 %1038, %1039
  %1041 = or i1 %1036, %1040
  %1042 = or i1 %1025, %1026
  br i1 %1041, label %1043, label %1170

; <label>:1043:                                   ; preds = %1016, %1170
  %1044 = load i8*, i8** %14, align 8
  %1045 = load i32, i32* %15, align 4
  %1046 = insertvalue { i8*, i32 } undef, i8* %1044, 0
  %1047 = insertvalue { i8*, i32 } %1046, i32 %1045, 1
  %1048 = load i32, i32* @x.29
  %1049 = load i32, i32* @y.30
  %1050 = sub i32 0, 1
  %1051 = add i32 %1048, %1050
  %1052 = sub i32 %1048, 1
  %1053 = mul i32 %1048, %1051
  %1054 = urem i32 %1053, 2
  %1055 = icmp eq i32 %1054, 0
  %1056 = icmp slt i32 %1049, 10
  %1057 = and i1 %1055, %1056
  %1058 = xor i1 %1055, %1056
  %1059 = or i1 %1057, %1058
  %1060 = or i1 %1055, %1056
  br i1 %1059, label %1061, label %1170

; <label>:1061:                                   ; preds = %1043
  resume { i8*, i32 } %1047

; <label>:1062:                                   ; preds = %105, %79
  %1063 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %20, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %21) #3
  br label %105

; <label>:1064:                                   ; preds = %136, %122
  %1065 = call dereferenceable(24) %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %20) #3
  store %"class.std::vector.5"* %1065, %"class.std::vector.5"** %22, align 8
  %1066 = load %"class.std::vector.5"*, %"class.std::vector.5"** %22, align 8
  store %"class.std::vector.5"* %1066, %"class.std::vector.5"** %23, align 8
  %1067 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  %1068 = call %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE5beginEv(%"class.std::vector.5"* %1067) #3
  %1069 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %24, i32 0, i32 0
  store %struct.edge_t* %1068, %struct.edge_t** %1069, align 8
  %1070 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  %1071 = call %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE3endEv(%"class.std::vector.5"* %1070) #3
  %1072 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %25, i32 0, i32 0
  store %struct.edge_t* %1071, %struct.edge_t** %1072, align 8
  br label %136

; <label>:1073:                                   ; preds = %206, %179
  %1074 = load i64, i64* %178, align 8
  store i64 %1074, i64* %18, align 8
  br label %206

; <label>:1075:                                   ; preds = %268, %241
  %1076 = landingpad { i8*, i32 }
          cleanup
  %1077 = extractvalue { i8*, i32 } %1076, 0
  store i8* %1077, i8** %14, align 8
  %1078 = extractvalue { i8*, i32 } %1076, 1
  store i32 %1078, i32* %15, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.22"* %17) #3
  br label %268

; <label>:1079:                                   ; preds = %313, %298
  %1080 = landingpad { i8*, i32 }
          cleanup
  %1081 = extractvalue { i8*, i32 } %1080, 0
  store i8* %1081, i8** %14, align 8
  %1082 = extractvalue { i8*, i32 } %1080, 1
  store i32 %1082, i32* %15, align 4
  br label %313

; <label>:1083:                                   ; preds = %387, %361
  %1084 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %29, %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8) %30) #3
  br label %387

; <label>:1085:                                   ; preds = %440, %425
  %1086 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"* %29) #3
  br label %440

; <label>:1087:                                   ; preds = %512, %498
  br label %512

; <label>:1088:                                   ; preds = %556, %529
  %1089 = icmp ne i32 %528, 0
  br label %556

; <label>:1090:                                   ; preds = %600, %573
  %1091 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 2
  %1092 = load i32, i32* %1091, align 8
  %1093 = sext i32 %1092 to i64
  %1094 = call dereferenceable(24) %"class.std::vector.25"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.20"* %16, i64 %1093) #3
  store %"class.std::vector.25"* %1094, %"class.std::vector.25"** %38, align 8
  %1095 = load %"class.std::vector.25"*, %"class.std::vector.25"** %38, align 8
  %1096 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 1
  %1097 = load i64, i64* %1096, align 8
  %1098 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.25"* %1095, i64 %1097) #3
  %1099 = load i64, i64* %1098, align 8
  %1100 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %1101 = load i64, i64* %1100, align 8
  %1102 = icmp sle i64 %1099, %1101
  br label %600

; <label>:1103:                                   ; preds = %642, %628
  %1104 = landingpad { i8*, i32 }
          cleanup
  %1105 = extractvalue { i8*, i32 } %1104, 0
  store i8* %1105, i8** %14, align 8
  %1106 = extractvalue { i8*, i32 } %1104, 1
  store i32 %1106, i32* %15, align 4
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %35) #3
  br label %642

; <label>:1107:                                   ; preds = %731, %717
  %1108 = load i32, i32* %11, align 4
  %1109 = icmp sle i32 %1108, 0
  br label %731

; <label>:1110:                                   ; preds = %803, %776
  %1111 = call dereferenceable(24) %struct.edge_t* @_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"* %41) #3
  store %struct.edge_t* %1111, %struct.edge_t** %43, align 8
  %1112 = bitcast %struct.q_t* %44 to i8*
  %1113 = bitcast %struct.q_t* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1112, i8* %1113, i64 40, i32 8, i1 false)
  %1114 = load %struct.edge_t*, %struct.edge_t** %43, align 8
  %1115 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %1114, i32 0, i32 0
  %1116 = load i32, i32* %1115, align 8
  %1117 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 2
  store i32 %1116, i32* %1117, align 8
  %1118 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 0
  %1119 = load i64, i64* %1118, align 8
  %1120 = load %struct.edge_t*, %struct.edge_t** %43, align 8
  %1121 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %1120, i32 0, i32 2
  %1122 = load i64, i64* %1121, align 8
  %1123 = sub i64 0, %1119
  %1124 = sub i64 0, %1122
  %1125 = add i64 %1123, %1124
  %1126 = sub i64 0, %1125
  %1127 = add nsw i64 %1119, %1122
  %1128 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 0
  store i64 %1126, i64* %1128, align 8
  %1129 = getelementptr inbounds %struct.q_t, %struct.q_t* %10, i32 0, i32 1
  %1130 = load i64, i64* %1129, align 8
  %1131 = load %struct.edge_t*, %struct.edge_t** %43, align 8
  %1132 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %1131, i32 0, i32 1
  %1133 = load i64, i64* %1132, align 8
  %1134 = add i64 0, -315840824694227964
  %1135 = sub i64 %1134, %1130
  %1136 = sub i64 %1135, -315840824694227964
  %1137 = sub i64 0, %1130
  %1138 = sub i64 0, %1133
  %1139 = sub i64 %1136, %1138
  %1140 = add i64 %1136, %1133
  %1141 = sub i64 0, %1130
  %1142 = add i64 0, %1141
  %1143 = sub i64 0, %1130
  %1144 = sub i64 %1142, -5252883272817806181
  %1145 = add i64 %1144, %1133
  %1146 = add i64 %1145, -5252883272817806181
  %1147 = add i64 %1142, %1133
  %1148 = sub i64 0, %1133
  %1149 = add i64 %1130, %1148
  %1150 = sub i64 %1130, %1133
  %1151 = mul i64 %1149, %1133
  %1152 = add i64 %1130, 2258564745206336182
  %1153 = sub i64 %1152, %1133
  %1154 = sub i64 %1153, 2258564745206336182
  %1155 = sub nsw i64 %1130, %1133
  %1156 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 1
  store i64 %1154, i64* %1156, align 8
  %1157 = getelementptr inbounds %struct.q_t, %struct.q_t* %44, i32 0, i32 1
  %1158 = load i64, i64* %1157, align 8
  %1159 = icmp sge i64 %1158, 0
  br label %803

; <label>:1160:                                   ; preds = %876, %849
  %1161 = bitcast %struct.q_t* %45 to i8*
  %1162 = bitcast %struct.q_t* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1161, i8* %1162, i64 40, i32 8, i1 false)
  br label %876

; <label>:1163:                                   ; preds = %911, %896
  %1164 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"* %41) #3
  br label %911

; <label>:1165:                                   ; preds = %980, %965
  %1166 = load i64, i64* %964, align 8
  %1167 = getelementptr inbounds %struct.q_t, %struct.q_t* %47, i32 0, i32 1
  store i64 %1166, i64* %1167, align 8
  %1168 = bitcast %struct.q_t* %49 to i8*
  %1169 = bitcast %struct.q_t* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1168, i8* %1169, i64 40, i32 8, i1 false)
  br label %980

; <label>:1170:                                   ; preds = %1043, %1016
  %1171 = load i8*, i8** %14, align 8
  %1172 = load i32, i32* %15, align 4
  %1173 = insertvalue { i8*, i32 } undef, i8* %1171, 0
  %1174 = insertvalue { i8*, i32 } %1173, i32 %1172, 1
  br label %1043
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.q_t*, %struct.q_t** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.q_t*, %struct.q_t** %10, align 8
  %12 = ptrtoint %struct.q_t* %7 to i64
  %13 = ptrtoint %struct.q_t* %11 to i64
  %14 = sub i64 %12, 4572936197170695533
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 4572936197170695533
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 40
  ret i64 %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3q_tC2Ei(%struct.q_t*, i32) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.q_t*, align 8
  %4 = alloca i32, align 4
  store %struct.q_t* %0, %struct.q_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.q_t*, %struct.q_t** %3, align 8
  %6 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 0, i32 0
  store i64 4611686018427387904, i64* %6, align 8
  %7 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 0, i32 1
  store i64 -1, i64* %7, align 8
  %8 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 0, i32 2
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 0, i32 3
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 0, i32 4
  store i64 -1, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setIxSt4lessIxESaIxEEEC2Ev(%"class.std::allocator.12"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.35
  %5 = load i32, i32* @y.36
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2105424134, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2105424134, label %17
    i32 -1308092766, label %25
    i32 -1723129500, label %44
    i32 454423433, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1308092766, i32 454423433
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %26, align 8
  %27 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %26, align 8
  %28 = bitcast %"class.std::allocator.12"* %27 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %28) #3
  %29 = load i32, i32* @x.35
  %30 = load i32, i32* @y.36
  %31 = add i32 %29, -188658421
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -188658421
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1723129500, i32 454423433
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %46, align 8
  %47 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %46, align 8
  %48 = bitcast %"class.std::allocator.12"* %47 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %48) #3
  store i32 -1308092766, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EEC2EmRKS5_(%"class.std::vector.10"*, i64, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.10"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %4, align 8
  %10 = bitcast %"class.std::vector.10"* %9 to %"struct.std::_Vector_base.11"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %6, align 8
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.11"* %10, i64 %11, %"class.std::allocator.12"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EE21_M_default_initializeEm(%"class.std::vector.10"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.10"* %9 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev(%"struct.std::_Vector_base.11"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %7, align 8
  %22 = load i32, i32* %8, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setIxSt4lessIxESaIxEEED2Ev(%"class.std::allocator.12"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.22"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %2, align 8
  %3 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %2, align 8
  %4 = bitcast %"class.std::allocator.22"* %3 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.23"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS2_(%"class.std::vector.20"*, i64, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.20"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.22"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.22"* %2, %"class.std::allocator.22"** %6, align 8
  %9 = load %"class.std::vector.20"*, %"class.std::vector.20"** %4, align 8
  %10 = bitcast %"class.std::vector.20"* %9 to %"struct.std::_Vector_base.21"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.21"* %10, i64 %11, %"class.std::allocator.22"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE21_M_default_initializeEm(%"class.std::vector.20"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.43
  %17 = load i32, i32* @y.44
  %18 = add i32 %16, -1835001870
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, -1835001870
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %78

; <label>:42:                                     ; preds = %15, %78
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %7, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %8, align 4
  %46 = bitcast %"class.std::vector.20"* %9 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.21"* %46) #3
  %47 = load i32, i32* @x.43
  %48 = load i32, i32* @y.44
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %78

; <label>:72:                                     ; preds = %42
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = load i8*, i8** %7, align 8
  %75 = load i32, i32* %8, align 4
  %76 = insertvalue { i8*, i32 } undef, i8* %74, 0
  %77 = insertvalue { i8*, i32 } %76, i32 %75, 1
  resume { i8*, i32 } %77

; <label>:78:                                     ; preds = %42, %15
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %7, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %8, align 4
  %82 = bitcast %"class.std::vector.20"* %9 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.21"* %82) #3
  br label %42
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.22"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %2, align 8
  %3 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %2, align 8
  %4 = bitcast %"class.std::allocator.22"* %3 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.23"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE5beginEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.47
  %6 = load i32, i32* @y.48
  %7 = add i32 %5, -1951879642
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1951879642
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 698539525, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 698539525, label %19
    i32 -1149756409, label %27
    i32 629215289, label %63
    i32 -110064421, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1149756409, i32 -110064421
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %28, %"class.std::vector.5"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %35 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  store %"class.std::vector.5"* %35, %"class.std::vector.5"** %2
  %36 = load i32, i32* @x.47
  %37 = load i32, i32* @y.48
  %38 = sub i32 %36, -235388388
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -235388388
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 629215289, i32 -110064421
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %67, align 8
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %69 = bitcast %"class.std::vector.0"* %68 to %"struct.std::_Vector_base.1"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %70, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %66, %"class.std::vector.5"** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %73 = load %"class.std::vector.5"*, %"class.std::vector.5"** %72, align 8
  store i32 -1149756409, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE3endEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.49
  %6 = load i32, i32* @y.50
  %7 = sub i32 %5, -1289591299
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1289591299
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1456483559, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1456483559, label %19
    i32 -237367716, label %27
    i32 146809272, label %51
    i32 1250927092, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -237367716, i32 1250927092
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %28, %"class.std::vector.5"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %35 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  store %"class.std::vector.5"* %35, %"class.std::vector.5"** %2
  %36 = load i32, i32* @x.49
  %37 = load i32, i32* @y.50
  %38 = add i32 %36, 1235544570
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1235544570
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 146809272, i32 1250927092
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %55 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %55, align 8
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %55, align 8
  %57 = bitcast %"class.std::vector.0"* %56 to %"struct.std::_Vector_base.1"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %58, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %54, %"class.std::vector.5"** dereferenceable(8) %59) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %54, i32 0, i32 0
  %61 = load %"class.std::vector.5"*, %"class.std::vector.5"** %60, align 8
  store i32 -237367716, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %9, align 8
  %11 = icmp ne %"class.std::vector.5"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  ret %"class.std::vector.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE5beginEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.30"* %2, %struct.edge_t** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %9 = load %struct.edge_t*, %struct.edge_t** %8, align 8
  ret %struct.edge_t* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EE3endEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.30"* %2, %struct.edge_t** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %9 = load %struct.edge_t*, %struct.edge_t** %8, align 8
  ret %struct.edge_t* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIP6edge_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %1, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = call dereferenceable(8) %struct.edge_t** @_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5) #3
  %7 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %9 = call dereferenceable(8) %struct.edge_t** @_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %8) #3
  %10 = load %struct.edge_t*, %struct.edge_t** %9, align 8
  %11 = icmp ne %struct.edge_t* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.edge_t* @_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %5 = load %struct.edge_t*, %struct.edge_t** %4, align 8
  ret %struct.edge_t* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 755083928, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 755083928, label %16
    i32 -984680132, label %21
    i32 -1020314041, label %23
    i32 -1031300258, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -984680132, i32 -1020314041
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -1031300258, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -1031300258, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.65
  %6 = load i32, i32* @y.66
  %7 = add i32 %5, 550221396
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 550221396
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 88493884, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 88493884, label %19
    i32 -1175032304, label %27
    i32 1765269413, label %61
    i32 -922312154, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1175032304, i32 -922312154
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %29, %"class.__gnu_cxx::__normal_iterator.30"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %30, i32 0, i32 0
  %32 = load %struct.edge_t*, %struct.edge_t** %31, align 8
  %33 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %32, i32 1
  store %struct.edge_t* %33, %struct.edge_t** %31, align 8
  %34 = load i32, i32* @x.65
  %35 = load i32, i32* @y.66
  %36 = add i32 %34, 46852883
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 46852883
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1765269413, i32 -922312154
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2
  ret %"class.__gnu_cxx::__normal_iterator.30"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %64, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %65, i32 0, i32 0
  %67 = load %struct.edge_t*, %struct.edge_t** %66, align 8
  %68 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %67, i32 1
  store %struct.edge_t* %68, %struct.edge_t** %66, align 8
  store i32 -1175032304, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %5, i32 1
  store %"class.std::vector.5"* %6, %"class.std::vector.5"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.25"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE5beginEv(%"class.std::vector.20"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %3, align 8
  %4 = load %"class.std::vector.20"*, %"class.std::vector.20"** %3, align 8
  %5 = bitcast %"class.std::vector.20"* %4 to %"struct.std::_Vector_base.21"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"class.std::vector.25"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.25"*, %"class.std::vector.25"** %8, align 8
  ret %"class.std::vector.25"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.25"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EE3endEv(%"class.std::vector.20"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.20"*, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %3, align 8
  %4 = load %"class.std::vector.20"*, %"class.std::vector.20"** %3, align 8
  %5 = bitcast %"class.std::vector.20"* %4 to %"struct.std::_Vector_base.21"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"class.std::vector.25"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.25"*, %"class.std::vector.25"** %8, align 8
  ret %"class.std::vector.25"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.31"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %1, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.25"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %5) #3
  %7 = load %"class.std::vector.25"*, %"class.std::vector.25"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.25"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %8) #3
  %10 = load %"class.std::vector.25"*, %"class.std::vector.25"** %9, align 8
  %11 = icmp ne %"class.std::vector.25"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.25"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.31"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %4, align 8
  ret %"class.std::vector.25"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE6assignEmRKx(%"class.std::vector.25"*, i64, i64* dereferenceable(8)) #2 comdat align 2 {
  %4 = alloca %"class.std::vector.25"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.25"*, %"class.std::vector.25"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  call void @_ZNSt6vectorIxSaIxEE14_M_fill_assignEmRKx(%"class.std::vector.25"* %7, i64 %8, i64* dereferenceable(8) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.31"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.31"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.79
  %6 = load i32, i32* @y.80
  %7 = add i32 %5, 1603860381
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1603860381
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1544668355, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1544668355, label %19
    i32 -1823884727, label %27
    i32 265569716, label %61
    i32 1740397002, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1823884727, i32 1740397002
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %29, %"class.__gnu_cxx::__normal_iterator.31"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %30, i32 0, i32 0
  %32 = load %"class.std::vector.25"*, %"class.std::vector.25"** %31, align 8
  %33 = getelementptr inbounds %"class.std::vector.25", %"class.std::vector.25"* %32, i32 1
  store %"class.std::vector.25"* %33, %"class.std::vector.25"** %31, align 8
  %34 = load i32, i32* @x.79
  %35 = load i32, i32* @y.80
  %36 = sub i32 %34, 1713200254
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1713200254
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 265569716, i32 1740397002
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %2
  ret %"class.__gnu_cxx::__normal_iterator.31"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %64, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %65, i32 0, i32 0
  %67 = load %"class.std::vector.25"*, %"class.std::vector.25"** %66, align 8
  %68 = getelementptr inbounds %"class.std::vector.25", %"class.std::vector.25"* %67, i32 1
  store %"class.std::vector.25"* %68, %"class.std::vector.25"** %66, align 8
  store i32 -1823884727, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %"class.std::priority_queue"* @_ZNSt14priority_queueI3q_tSt6vectorIS0_SaIS0_EESt4lessIS0_EEaSERKS6_(%"class.std::priority_queue"*, %"class.std::priority_queue"* dereferenceable(32)) #2 comdat align 2 {
  %3 = alloca %"class.std::priority_queue"*, align 8
  %4 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %3, align 8
  store %"class.std::priority_queue"* %1, %"class.std::priority_queue"** %4, align 8
  %5 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %5, i32 0, i32 0
  %7 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %8 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %7, i32 0, i32 0
  %9 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorI3q_tSaIS0_EEaSERKS2_(%"class.std::vector"* %6, %"class.std::vector"* dereferenceable(24) %8)
  %10 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %5, i32 0, i32 1
  %11 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %12 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %11, i32 0, i32 1
  ret %"class.std::priority_queue"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 741699834, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %73
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 741699834, label %16
    i32 -595904045, label %21
    i32 1110111692, label %49
    i32 -668543346, label %66
    i32 21891655, label %67
    i32 1970478561, label %69
    i32 1429531000, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %73

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -595904045, i32 21891655
  store i32 %20, i32* %12
  br label %73

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.83
  %23 = load i32, i32* @y.84
  %24 = sub i32 %22, -1609805776
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1609805776
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 1110111692, i32 1429531000
  store i32 %48, i32* %12
  br label %73

; <label>:49:                                     ; preds = %13
  %50 = load i64*, i64** %7, align 8
  store i64* %50, i64** %5, align 8
  %51 = load i32, i32* @x.83
  %52 = load i32, i32* @y.84
  %53 = add i32 %51, 932613201
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 932613201
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -668543346, i32 1429531000
  store i32 %65, i32* %12
  br label %73

; <label>:66:                                     ; preds = %13
  store i32 1970478561, i32* %12
  br label %73

; <label>:67:                                     ; preds = %13
  %68 = load i64*, i64** %6, align 8
  store i64* %68, i64** %5, align 8
  store i32 1970478561, i32* %12
  br label %73

; <label>:69:                                     ; preds = %13
  %70 = load i64*, i64** %5, align 8
  ret i64* %70

; <label>:71:                                     ; preds = %13
  %72 = load i64*, i64** %7, align 8
  store i64* %72, i64** %5, align 8
  store i32 1110111692, i32* %12
  br label %73

; <label>:73:                                     ; preds = %71, %67, %66, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EEixEm(%"class.std::vector.10"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::set"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.85
  %7 = load i32, i32* @y.86
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1925250214, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1925250214, label %19
    i32 1361865842, label %39
    i32 -432841979, label %64
    i32 1693788692, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1361865842, i32 1693788692
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.10"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.10"*, %"class.std::vector.10"** %40, align 8
  %43 = bitcast %"class.std::vector.10"* %42 to %"struct.std::_Vector_base.11"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"class.std::set"*, %"class.std::set"** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds %"class.std::set", %"class.std::set"* %46, i64 %47
  store %"class.std::set"* %48, %"class.std::set"** %3
  %49 = load i32, i32* @x.85
  %50 = load i32, i32* @y.86
  %51 = sub i32 %49, -283561912
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -283561912
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -432841979, i32 1693788692
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile %"class.std::set"*, %"class.std::set"** %3
  ret %"class.std::set"* %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.std::vector.10"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::vector.10"*, %"class.std::vector.10"** %67, align 8
  %70 = bitcast %"class.std::vector.10"* %69 to %"struct.std::_Vector_base.11"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"class.std::set"*, %"class.std::set"** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds %"class.std::set", %"class.std::set"* %73, i64 %74
  store i32 1361865842, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"*, i64* dereferenceable(8)) #2 comdat align 2 {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::pair.35", align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i64* %1, i64** %5, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"* %8, i64* dereferenceable(8) %9)
  %11 = bitcast %"struct.std::pair.35"* %6 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %12 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %11, i32 0, i32 0
  %13 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %10, 0
  store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %14 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %11, i32 0, i32 1
  %15 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %10, 1
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds %"struct.std::pair.35", %"struct.std::pair.35"* %6, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::pair.35", %"struct.std::pair.35"* %6, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %16, i8* dereferenceable(1) %17)
  %18 = bitcast %"struct.std::pair"* %3 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %19 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %18, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.25"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.20"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.20"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.20"*, %"class.std::vector.20"** %3, align 8
  %6 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.25"*, %"class.std::vector.25"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.25", %"class.std::vector.25"* %9, i64 %10
  ret %"class.std::vector.25"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.25"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EEixEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.q_t*, %struct.q_t** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %struct.q_t, %struct.q_t* %9, i64 %10
  ret %struct.q_t* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEixEm(%"class.std::vector.0"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 %10
  ret %"class.std::vector.5"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EEixEm(%"class.std::vector.5"*, i64) #0 comdat align 2 {
  %3 = alloca %struct.edge_t*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.97
  %7 = load i32, i32* @y.98
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -910563385, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -910563385, label %19
    i32 -230303635, label %27
    i32 410680269, label %52
    i32 -1359204458, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -230303635, i32 -1359204458
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %31 = bitcast %"class.std::vector.5"* %30 to %"struct.std::_Vector_base.6"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %struct.edge_t*, %struct.edge_t** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %34, i64 %35
  store %struct.edge_t* %36, %struct.edge_t** %3
  %37 = load i32, i32* @x.97
  %38 = load i32, i32* @y.98
  %39 = sub i32 %37, -370051770
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -370051770
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 410680269, i32 -1359204458
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile %struct.edge_t*, %struct.edge_t** %3
  ret %struct.edge_t* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.std::vector.5"*, align 8
  %56 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %55, align 8
  store i64 %1, i64* %56, align 8
  %57 = load %"class.std::vector.5"*, %"class.std::vector.5"** %55, align 8
  %58 = bitcast %"class.std::vector.5"* %57 to %"struct.std::_Vector_base.6"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %59, i32 0, i32 0
  %61 = load %struct.edge_t*, %struct.edge_t** %60, align 8
  %62 = load i64, i64* %56, align 8
  %63 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %61, i64 %62
  store i32 -230303635, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.20"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.99
  %3 = load i32, i32* @y.100
  %4 = add i32 %2, -399617538
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -399617538
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %66

; <label>:16:                                     ; preds = %1, %66
  %17 = alloca %"class.std::vector.20"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %17, align 8
  %20 = load %"class.std::vector.20"*, %"class.std::vector.20"** %17, align 8
  %21 = bitcast %"class.std::vector.20"* %20 to %"struct.std::_Vector_base.21"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"class.std::vector.25"*, %"class.std::vector.25"** %23, align 8
  %25 = bitcast %"class.std::vector.20"* %20 to %"struct.std::_Vector_base.21"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"class.std::vector.25"*, %"class.std::vector.25"** %27, align 8
  %29 = bitcast %"class.std::vector.20"* %20 to %"struct.std::_Vector_base.21"*
  %30 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %29) #3
  %31 = load i32, i32* @x.99
  %32 = load i32, i32* @y.100
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %66

; <label>:56:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.25"* %24, %"class.std::vector.25"* %28, %"class.std::allocator.22"* dereferenceable(1) %30)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector.20"* %20 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.21"* %58) #3
  ret void

; <label>:59:                                     ; preds = %56
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %18, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %19, align 4
  %63 = bitcast %"class.std::vector.20"* %20 to %"struct.std::_Vector_base.21"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.21"* %63) #3
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %65) #7
  unreachable

; <label>:66:                                     ; preds = %16, %1
  %67 = alloca %"class.std::vector.20"*, align 8
  %68 = alloca i8*
  %69 = alloca i32
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %67, align 8
  %70 = load %"class.std::vector.20"*, %"class.std::vector.20"** %67, align 8
  %71 = bitcast %"class.std::vector.20"* %70 to %"struct.std::_Vector_base.21"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.25"*, %"class.std::vector.25"** %73, align 8
  %75 = bitcast %"class.std::vector.20"* %70 to %"struct.std::_Vector_base.21"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load %"class.std::vector.25"*, %"class.std::vector.25"** %77, align 8
  %79 = bitcast %"class.std::vector.20"* %70 to %"struct.std::_Vector_base.21"*
  %80 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %79) #3
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev(%"class.std::vector.10"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.101
  %3 = load i32, i32* @y.102
  %4 = sub i32 %2, 929687276
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 929687276
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %97

; <label>:16:                                     ; preds = %1, %97
  %17 = alloca %"class.std::vector.10"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %17, align 8
  %20 = load %"class.std::vector.10"*, %"class.std::vector.10"** %17, align 8
  %21 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"class.std::set"*, %"class.std::set"** %23, align 8
  %25 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"class.std::set"*, %"class.std::set"** %27, align 8
  %29 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  %30 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %29) #3
  %31 = load i32, i32* @x.101
  %32 = load i32, i32* @y.102
  %33 = add i32 %31, 1920683831
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1920683831
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %97

; <label>:45:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt3setIxSt4lessIxESaIxEES4_EvT_S6_RSaIT0_E(%"class.std::set"* %24, %"class.std::set"* %28, %"class.std::allocator.12"* dereferenceable(1) %30)
          to label %46 unwind label %48

; <label>:46:                                     ; preds = %45
  %47 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev(%"struct.std::_Vector_base.11"* %47) #3
  ret void

; <label>:48:                                     ; preds = %45
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %18, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %19, align 4
  %52 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev(%"struct.std::_Vector_base.11"* %52) #3
  br label %53

; <label>:53:                                     ; preds = %48
  %54 = load i32, i32* @x.101
  %55 = load i32, i32* @y.102
  %56 = add i32 %54, 598881188
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 598881188
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %112

; <label>:80:                                     ; preds = %53, %112
  %81 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %81) #7
  %82 = load i32, i32* @x.101
  %83 = load i32, i32* @y.102
  %84 = add i32 %82, -655273258
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -655273258
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %112

; <label>:96:                                     ; preds = %80
  unreachable

; <label>:97:                                     ; preds = %16, %1
  %98 = alloca %"class.std::vector.10"*, align 8
  %99 = alloca i8*
  %100 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %98, align 8
  %101 = load %"class.std::vector.10"*, %"class.std::vector.10"** %98, align 8
  %102 = bitcast %"class.std::vector.10"* %101 to %"struct.std::_Vector_base.11"*
  %103 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %103, i32 0, i32 0
  %105 = load %"class.std::set"*, %"class.std::set"** %104, align 8
  %106 = bitcast %"class.std::vector.10"* %101 to %"struct.std::_Vector_base.11"*
  %107 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %107, i32 0, i32 1
  %109 = load %"class.std::set"*, %"class.std::set"** %108, align 8
  %110 = bitcast %"class.std::vector.10"* %101 to %"struct.std::_Vector_base.11"*
  %111 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %110) #3
  br label %16

; <label>:112:                                    ; preds = %80, %53
  %113 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %113) #7
  br label %80
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %struct.q_t, align 8
  %7 = alloca %"class.std::allocator", align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.std::vector.0", align 8
  %11 = alloca %"class.std::allocator.2", align 1
  %12 = alloca %"class.std::vector.5", align 8
  %13 = alloca %"class.std::allocator.7", align 1
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.edge_t, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.edge_t*, align 8
  %24 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %25

; <label>:25:                                     ; preds = %494, %0
  %26 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32* %2, i32* %3, i32* %4)
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %581

; <label>:28:                                     ; preds = %25
  %29 = load i32, i32* %2, align 4
  %30 = add i32 %29, 29621339
  %31 = add i32 %30, 1
  %32 = sub i32 %31, 29621339
  %33 = add nsw i32 %29, 1
  %34 = sext i32 %32 to i64
  %35 = load i32, i32* %2, align 4
  call void @_ZN3q_tC2Ei(%struct.q_t* %6, i32 %35)
  call void @_ZNSaI3q_tEC2Ev(%"class.std::allocator"* %7) #3
  invoke void @_ZNSt6vectorI3q_tSaIS0_EEC2EmRKS0_RKS1_(%"class.std::vector"* %5, i64 %34, %struct.q_t* dereferenceable(40) %6, %"class.std::allocator"* dereferenceable(1) %7)
          to label %36 unwind label %207

; <label>:36:                                     ; preds = %28
  call void @_ZNSaI3q_tED2Ev(%"class.std::allocator"* %7) #3
  %37 = load i32, i32* %2, align 4
  %38 = sub i32 %37, 1989534107
  %39 = add i32 %38, 1
  %40 = add i32 %39, 1989534107
  %41 = add nsw i32 %37, 1
  %42 = sext i32 %40 to i64
  call void @_ZNSaISt6vectorI6edge_tSaIS0_EEEC2Ev(%"class.std::allocator.2"* %11) #3
  invoke void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEC2EmRKS3_(%"class.std::vector.0"* %10, i64 %42, %"class.std::allocator.2"* dereferenceable(1) %11)
          to label %43 unwind label %211

; <label>:43:                                     ; preds = %36
  call void @_ZNSaISt6vectorI6edge_tSaIS0_EEED2Ev(%"class.std::allocator.2"* %11) #3
  %44 = load i32, i32* %2, align 4
  %45 = sub i32 0, %44
  %46 = sub i32 0, 1
  %47 = add i32 %45, %46
  %48 = sub i32 0, %47
  %49 = add nsw i32 %44, 1
  %50 = sext i32 %48 to i64
  call void @_ZNSaI6edge_tEC2Ev(%"class.std::allocator.7"* %13) #3
  invoke void @_ZNSt6vectorI6edge_tSaIS0_EEC2EmRKS1_(%"class.std::vector.5"* %12, i64 %50, %"class.std::allocator.7"* dereferenceable(1) %13)
          to label %51 unwind label %215

; <label>:51:                                     ; preds = %43
  %52 = load i32, i32* @x.103
  %53 = load i32, i32* @y.104
  %54 = sub i32 %52, 623541307
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 623541307
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %629

; <label>:66:                                     ; preds = %51, %629
  call void @_ZNSaI6edge_tED2Ev(%"class.std::allocator.7"* %13) #3
  store i32 0, i32* %14, align 4
  %67 = load i32, i32* @x.103
  %68 = load i32, i32* @y.104
  %69 = add i32 %67, -1354570716
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1354570716
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %629

; <label>:81:                                     ; preds = %66
  br label %82

; <label>:82:                                     ; preds = %201, %81
  %83 = load i32, i32* @x.103
  %84 = load i32, i32* @y.104
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %630

; <label>:108:                                    ; preds = %82, %630
  %109 = load i32, i32* %14, align 4
  %110 = load i32, i32* %3, align 4
  %111 = icmp slt i32 %109, %110
  %112 = load i32, i32* @x.103
  %113 = load i32, i32* @y.104
  %114 = add i32 %112, -887537086
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -887537086
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %630

; <label>:138:                                    ; preds = %108
  br i1 %111, label %139, label %294

; <label>:139:                                    ; preds = %138
  %140 = invoke i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i32* %15, i32* %16, i32* %17, i32* %18)
          to label %141 unwind label %261

; <label>:141:                                    ; preds = %139
  %142 = load i32, i32* %17, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %19, i32 0, i32 1
  store i64 %143, i64* %144, align 8
  %145 = load i32, i32* %18, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %19, i32 0, i32 2
  store i64 %146, i64* %147, align 8
  %148 = load i32, i32* %16, align 4
  %149 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %19, i32 0, i32 0
  store i32 %148, i32* %149, align 8
  %150 = load i32, i32* %15, align 4
  %151 = sext i32 %150 to i64
  %152 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEixEm(%"class.std::vector.0"* %10, i64 %151) #3
  invoke void @_ZNSt6vectorI6edge_tSaIS0_EE9push_backERKS0_(%"class.std::vector.5"* %152, %struct.edge_t* dereferenceable(24) %19)
          to label %153 unwind label %261

; <label>:153:                                    ; preds = %141
  %154 = load i32, i32* %15, align 4
  %155 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %19, i32 0, i32 0
  store i32 %154, i32* %155, align 8
  %156 = load i32, i32* %16, align 4
  %157 = sext i32 %156 to i64
  %158 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEixEm(%"class.std::vector.0"* %10, i64 %157) #3
  invoke void @_ZNSt6vectorI6edge_tSaIS0_EE9push_backERKS0_(%"class.std::vector.5"* %158, %struct.edge_t* dereferenceable(24) %19)
          to label %159 unwind label %261

; <label>:159:                                    ; preds = %153
  %160 = load i32, i32* @x.103
  %161 = load i32, i32* @y.104
  %162 = sub i32 0, 1
  %163 = add i32 %160, %162
  %164 = sub i32 %160, 1
  %165 = mul i32 %160, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %161, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  br i1 %183, label %185, label %634

; <label>:185:                                    ; preds = %159, %634
  %186 = load i32, i32* @x.103
  %187 = load i32, i32* @y.104
  %188 = sub i32 %186, 995058425
  %189 = sub i32 %188, 1
  %190 = add i32 %189, 995058425
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %634

; <label>:200:                                    ; preds = %185
  br label %201

; <label>:201:                                    ; preds = %200
  %202 = load i32, i32* %14, align 4
  %203 = sub i32 %202, 867707080
  %204 = add i32 %203, 1
  %205 = add i32 %204, 867707080
  %206 = add nsw i32 %202, 1
  store i32 %205, i32* %14, align 4
  br label %82

; <label>:207:                                    ; preds = %28
  %208 = landingpad { i8*, i32 }
          cleanup
  %209 = extractvalue { i8*, i32 } %208, 0
  store i8* %209, i8** %8, align 8
  %210 = extractvalue { i8*, i32 } %208, 1
  store i32 %210, i32* %9, align 4
  call void @_ZNSaI3q_tED2Ev(%"class.std::allocator"* %7) #3
  br label %582

; <label>:211:                                    ; preds = %36
  %212 = landingpad { i8*, i32 }
          cleanup
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %8, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %9, align 4
  call void @_ZNSaISt6vectorI6edge_tSaIS0_EEED2Ev(%"class.std::allocator.2"* %11) #3
  br label %538

; <label>:215:                                    ; preds = %43
  %216 = load i32, i32* @x.103
  %217 = load i32, i32* @y.104
  %218 = sub i32 %216, 107556931
  %219 = sub i32 %218, 1
  %220 = add i32 %219, 107556931
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = and i1 %224, %225
  %227 = xor i1 %224, %225
  %228 = or i1 %226, %227
  %229 = or i1 %224, %225
  br i1 %228, label %230, label %635

; <label>:230:                                    ; preds = %215, %635
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %8, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %9, align 4
  call void @_ZNSaI6edge_tED2Ev(%"class.std::allocator.7"* %13) #3
  %234 = load i32, i32* @x.103
  %235 = load i32, i32* @y.104
  %236 = add i32 %234, -690713197
  %237 = sub i32 %236, 1
  %238 = sub i32 %237, -690713197
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = xor i1 %242, true
  %245 = xor i1 %243, true
  %246 = xor i1 true, true
  %247 = and i1 %244, true
  %248 = and i1 %242, %246
  %249 = and i1 %245, true
  %250 = and i1 %243, %246
  %251 = or i1 %247, %248
  %252 = or i1 %249, %250
  %253 = xor i1 %251, %252
  %254 = or i1 %244, %245
  %255 = xor i1 %254, true
  %256 = or i1 true, %246
  %257 = and i1 %255, %256
  %258 = or i1 %253, %257
  %259 = or i1 %242, %243
  br i1 %258, label %260, label %635

; <label>:260:                                    ; preds = %230
  br label %495

; <label>:261:                                    ; preds = %428, %323, %299, %153, %141, %139
  %262 = load i32, i32* @x.103
  %263 = load i32, i32* @y.104
  %264 = sub i32 %262, 1779551910
  %265 = sub i32 %264, 1
  %266 = add i32 %265, 1779551910
  %267 = sub i32 %262, 1
  %268 = mul i32 %262, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %263, 10
  %272 = and i1 %270, %271
  %273 = xor i1 %270, %271
  %274 = or i1 %272, %273
  %275 = or i1 %270, %271
  br i1 %274, label %276, label %639

; <label>:276:                                    ; preds = %261, %639
  %277 = landingpad { i8*, i32 }
          cleanup
  %278 = extractvalue { i8*, i32 } %277, 0
  store i8* %278, i8** %8, align 8
  %279 = extractvalue { i8*, i32 } %277, 1
  store i32 %279, i32* %9, align 4
  call void @_ZNSt6vectorI6edge_tSaIS0_EED2Ev(%"class.std::vector.5"* %12) #3
  %280 = load i32, i32* @x.103
  %281 = load i32, i32* @y.104
  %282 = sub i32 0, 1
  %283 = add i32 %280, %282
  %284 = sub i32 %280, 1
  %285 = mul i32 %280, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %281, 10
  %289 = and i1 %287, %288
  %290 = xor i1 %287, %288
  %291 = or i1 %289, %290
  %292 = or i1 %287, %288
  br i1 %291, label %293, label %639

; <label>:293:                                    ; preds = %276
  br label %495

; <label>:294:                                    ; preds = %138
  store i32 1, i32* %20, align 4
  br label %295

; <label>:295:                                    ; preds = %316, %294
  %296 = load i32, i32* %20, align 4
  %297 = load i32, i32* %2, align 4
  %298 = icmp sle i32 %296, %297
  br i1 %298, label %299, label %323

; <label>:299:                                    ; preds = %295
  %300 = load i32, i32* %20, align 4
  %301 = sext i32 %300 to i64
  %302 = call dereferenceable(24) %struct.edge_t* @_ZNSt6vectorI6edge_tSaIS0_EEixEm(%"class.std::vector.5"* %12, i64 %301) #3
  store %struct.edge_t* %302, %struct.edge_t** %23, align 8
  %303 = invoke i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32* %21, i32* %22)
          to label %304 unwind label %261

; <label>:304:                                    ; preds = %299
  %305 = load i32, i32* %20, align 4
  %306 = load %struct.edge_t*, %struct.edge_t** %23, align 8
  %307 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %306, i32 0, i32 0
  store i32 %305, i32* %307, align 8
  %308 = load i32, i32* %21, align 4
  %309 = sext i32 %308 to i64
  %310 = load %struct.edge_t*, %struct.edge_t** %23, align 8
  %311 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %310, i32 0, i32 1
  store i64 %309, i64* %311, align 8
  %312 = load i32, i32* %22, align 4
  %313 = sext i32 %312 to i64
  %314 = load %struct.edge_t*, %struct.edge_t** %23, align 8
  %315 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %314, i32 0, i32 2
  store i64 %313, i64* %315, align 8
  br label %316

; <label>:316:                                    ; preds = %304
  %317 = load i32, i32* %20, align 4
  %318 = sub i32 0, %317
  %319 = sub i32 0, 1
  %320 = add i32 %318, %319
  %321 = sub i32 0, %320
  %322 = add nsw i32 %317, 1
  store i32 %321, i32* %20, align 4
  br label %295

; <label>:323:                                    ; preds = %295
  %324 = load i32, i32* %4, align 4
  %325 = sext i32 %324 to i64
  %326 = invoke i32 @_Z5solveRSt6vectorI3q_tSaIS0_EExRS_IS_I6edge_tSaIS4_EESaIS6_EERS6_(%"class.std::vector"* dereferenceable(24) %5, i64 %325, %"class.std::vector.0"* dereferenceable(24) %10, %"class.std::vector.5"* dereferenceable(24) %12)
          to label %327 unwind label %261

; <label>:327:                                    ; preds = %323
  %328 = load i32, i32* @x.103
  %329 = load i32, i32* @y.104
  %330 = add i32 %328, 1360238723
  %331 = sub i32 %330, 1
  %332 = sub i32 %331, 1360238723
  %333 = sub i32 %328, 1
  %334 = mul i32 %328, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %329, 10
  %338 = xor i1 %336, true
  %339 = xor i1 %337, true
  %340 = xor i1 true, true
  %341 = and i1 %338, true
  %342 = and i1 %336, %340
  %343 = and i1 %339, true
  %344 = and i1 %337, %340
  %345 = or i1 %341, %342
  %346 = or i1 %343, %344
  %347 = xor i1 %345, %346
  %348 = or i1 %338, %339
  %349 = xor i1 %348, true
  %350 = or i1 true, %340
  %351 = and i1 %349, %350
  %352 = or i1 %347, %351
  %353 = or i1 %336, %337
  br i1 %352, label %354, label %643

; <label>:354:                                    ; preds = %327, %643
  store i32 2, i32* %24, align 4
  %355 = load i32, i32* @x.103
  %356 = load i32, i32* @y.104
  %357 = add i32 %355, 1165566156
  %358 = sub i32 %357, 1
  %359 = sub i32 %358, 1165566156
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = xor i1 %363, true
  %366 = xor i1 %364, true
  %367 = xor i1 false, true
  %368 = and i1 %365, false
  %369 = and i1 %363, %367
  %370 = and i1 %366, false
  %371 = and i1 %364, %367
  %372 = or i1 %368, %369
  %373 = or i1 %370, %371
  %374 = xor i1 %372, %373
  %375 = or i1 %365, %366
  %376 = xor i1 %375, true
  %377 = or i1 false, %367
  %378 = and i1 %376, %377
  %379 = or i1 %374, %378
  %380 = or i1 %363, %364
  br i1 %379, label %381, label %643

; <label>:381:                                    ; preds = %354
  br label %382

; <label>:382:                                    ; preds = %436, %381
  %383 = load i32, i32* @x.103
  %384 = load i32, i32* @y.104
  %385 = add i32 %383, 1068243584
  %386 = sub i32 %385, 1
  %387 = sub i32 %386, 1068243584
  %388 = sub i32 %383, 1
  %389 = mul i32 %383, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %384, 10
  %393 = xor i1 %391, true
  %394 = xor i1 %392, true
  %395 = xor i1 false, true
  %396 = and i1 %393, false
  %397 = and i1 %391, %395
  %398 = and i1 %394, false
  %399 = and i1 %392, %395
  %400 = or i1 %396, %397
  %401 = or i1 %398, %399
  %402 = xor i1 %400, %401
  %403 = or i1 %393, %394
  %404 = xor i1 %403, true
  %405 = or i1 false, %395
  %406 = and i1 %404, %405
  %407 = or i1 %402, %406
  %408 = or i1 %391, %392
  br i1 %407, label %409, label %644

; <label>:409:                                    ; preds = %382, %644
  %410 = load i32, i32* %24, align 4
  %411 = load i32, i32* %2, align 4
  %412 = icmp sle i32 %410, %411
  %413 = load i32, i32* @x.103
  %414 = load i32, i32* @y.104
  %415 = sub i32 %413, -1847995223
  %416 = sub i32 %415, 1
  %417 = add i32 %416, -1847995223
  %418 = sub i32 %413, 1
  %419 = mul i32 %413, %417
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %414, 10
  %423 = and i1 %421, %422
  %424 = xor i1 %421, %422
  %425 = or i1 %423, %424
  %426 = or i1 %421, %422
  br i1 %425, label %427, label %644

; <label>:427:                                    ; preds = %409
  br i1 %412, label %428, label %441

; <label>:428:                                    ; preds = %427
  %429 = load i32, i32* %24, align 4
  %430 = sext i32 %429 to i64
  %431 = call dereferenceable(40) %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EEixEm(%"class.std::vector"* %5, i64 %430) #3
  %432 = getelementptr inbounds %struct.q_t, %struct.q_t* %431, i32 0, i32 0
  %433 = load i64, i64* %432, align 8
  %434 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i64 %433)
          to label %435 unwind label %261

; <label>:435:                                    ; preds = %428
  br label %436

; <label>:436:                                    ; preds = %435
  %437 = load i32, i32* %24, align 4
  %438 = sub i32 0, 1
  %439 = sub i32 %437, %438
  %440 = add nsw i32 %437, 1
  store i32 %439, i32* %24, align 4
  br label %382

; <label>:441:                                    ; preds = %427
  %442 = load i32, i32* @x.103
  %443 = load i32, i32* @y.104
  %444 = sub i32 %442, 1013544350
  %445 = sub i32 %444, 1
  %446 = add i32 %445, 1013544350
  %447 = sub i32 %442, 1
  %448 = mul i32 %442, %446
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %443, 10
  %452 = xor i1 %450, true
  %453 = xor i1 %451, true
  %454 = xor i1 true, true
  %455 = and i1 %452, true
  %456 = and i1 %450, %454
  %457 = and i1 %453, true
  %458 = and i1 %451, %454
  %459 = or i1 %455, %456
  %460 = or i1 %457, %458
  %461 = xor i1 %459, %460
  %462 = or i1 %452, %453
  %463 = xor i1 %462, true
  %464 = or i1 true, %454
  %465 = and i1 %463, %464
  %466 = or i1 %461, %465
  %467 = or i1 %450, %451
  br i1 %466, label %468, label %648

; <label>:468:                                    ; preds = %441, %648
  call void @_ZNSt6vectorI6edge_tSaIS0_EED2Ev(%"class.std::vector.5"* %12) #3
  call void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EED2Ev(%"class.std::vector.0"* %10) #3
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %5) #3
  %469 = load i32, i32* @x.103
  %470 = load i32, i32* @y.104
  %471 = sub i32 0, 1
  %472 = add i32 %469, %471
  %473 = sub i32 %469, 1
  %474 = mul i32 %469, %472
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %470, 10
  %478 = xor i1 %476, true
  %479 = xor i1 %477, true
  %480 = xor i1 false, true
  %481 = and i1 %478, false
  %482 = and i1 %476, %480
  %483 = and i1 %479, false
  %484 = and i1 %477, %480
  %485 = or i1 %481, %482
  %486 = or i1 %483, %484
  %487 = xor i1 %485, %486
  %488 = or i1 %478, %479
  %489 = xor i1 %488, true
  %490 = or i1 false, %480
  %491 = and i1 %489, %490
  %492 = or i1 %487, %491
  %493 = or i1 %476, %477
  br i1 %492, label %494, label %648

; <label>:494:                                    ; preds = %468
  br label %25

; <label>:495:                                    ; preds = %293, %260
  %496 = load i32, i32* @x.103
  %497 = load i32, i32* @y.104
  %498 = sub i32 %496, 847168194
  %499 = sub i32 %498, 1
  %500 = add i32 %499, 847168194
  %501 = sub i32 %496, 1
  %502 = mul i32 %496, %500
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %497, 10
  %506 = xor i1 %504, true
  %507 = xor i1 %505, true
  %508 = xor i1 false, true
  %509 = and i1 %506, false
  %510 = and i1 %504, %508
  %511 = and i1 %507, false
  %512 = and i1 %505, %508
  %513 = or i1 %509, %510
  %514 = or i1 %511, %512
  %515 = xor i1 %513, %514
  %516 = or i1 %506, %507
  %517 = xor i1 %516, true
  %518 = or i1 false, %508
  %519 = and i1 %517, %518
  %520 = or i1 %515, %519
  %521 = or i1 %504, %505
  br i1 %520, label %522, label %649

; <label>:522:                                    ; preds = %495, %649
  call void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EED2Ev(%"class.std::vector.0"* %10) #3
  %523 = load i32, i32* @x.103
  %524 = load i32, i32* @y.104
  %525 = sub i32 %523, 593064540
  %526 = sub i32 %525, 1
  %527 = add i32 %526, 593064540
  %528 = sub i32 %523, 1
  %529 = mul i32 %523, %527
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %524, 10
  %533 = and i1 %531, %532
  %534 = xor i1 %531, %532
  %535 = or i1 %533, %534
  %536 = or i1 %531, %532
  br i1 %535, label %537, label %649

; <label>:537:                                    ; preds = %522
  br label %538

; <label>:538:                                    ; preds = %537, %211
  %539 = load i32, i32* @x.103
  %540 = load i32, i32* @y.104
  %541 = sub i32 %539, -277311947
  %542 = sub i32 %541, 1
  %543 = add i32 %542, -277311947
  %544 = sub i32 %539, 1
  %545 = mul i32 %539, %543
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %540, 10
  %549 = and i1 %547, %548
  %550 = xor i1 %547, %548
  %551 = or i1 %549, %550
  %552 = or i1 %547, %548
  br i1 %551, label %553, label %650

; <label>:553:                                    ; preds = %538, %650
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %5) #3
  %554 = load i32, i32* @x.103
  %555 = load i32, i32* @y.104
  %556 = sub i32 %554, 951492904
  %557 = sub i32 %556, 1
  %558 = add i32 %557, 951492904
  %559 = sub i32 %554, 1
  %560 = mul i32 %554, %558
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %555, 10
  %564 = xor i1 %562, true
  %565 = xor i1 %563, true
  %566 = xor i1 true, true
  %567 = and i1 %564, true
  %568 = and i1 %562, %566
  %569 = and i1 %565, true
  %570 = and i1 %563, %566
  %571 = or i1 %567, %568
  %572 = or i1 %569, %570
  %573 = xor i1 %571, %572
  %574 = or i1 %564, %565
  %575 = xor i1 %574, true
  %576 = or i1 true, %566
  %577 = and i1 %575, %576
  %578 = or i1 %573, %577
  %579 = or i1 %562, %563
  br i1 %578, label %580, label %650

; <label>:580:                                    ; preds = %553
  br label %582

; <label>:581:                                    ; preds = %25
  ret i32 0

; <label>:582:                                    ; preds = %580, %207
  %583 = load i32, i32* @x.103
  %584 = load i32, i32* @y.104
  %585 = add i32 %583, -1740123529
  %586 = sub i32 %585, 1
  %587 = sub i32 %586, -1740123529
  %588 = sub i32 %583, 1
  %589 = mul i32 %583, %587
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %584, 10
  %593 = xor i1 %591, true
  %594 = xor i1 %592, true
  %595 = xor i1 true, true
  %596 = and i1 %593, true
  %597 = and i1 %591, %595
  %598 = and i1 %594, true
  %599 = and i1 %592, %595
  %600 = or i1 %596, %597
  %601 = or i1 %598, %599
  %602 = xor i1 %600, %601
  %603 = or i1 %593, %594
  %604 = xor i1 %603, true
  %605 = or i1 true, %595
  %606 = and i1 %604, %605
  %607 = or i1 %602, %606
  %608 = or i1 %591, %592
  br i1 %607, label %609, label %651

; <label>:609:                                    ; preds = %582, %651
  %610 = load i8*, i8** %8, align 8
  %611 = load i32, i32* %9, align 4
  %612 = insertvalue { i8*, i32 } undef, i8* %610, 0
  %613 = insertvalue { i8*, i32 } %612, i32 %611, 1
  %614 = load i32, i32* @x.103
  %615 = load i32, i32* @y.104
  %616 = sub i32 %614, -493401550
  %617 = sub i32 %616, 1
  %618 = add i32 %617, -493401550
  %619 = sub i32 %614, 1
  %620 = mul i32 %614, %618
  %621 = urem i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %615, 10
  %624 = and i1 %622, %623
  %625 = xor i1 %622, %623
  %626 = or i1 %624, %625
  %627 = or i1 %622, %623
  br i1 %626, label %628, label %651

; <label>:628:                                    ; preds = %609
  resume { i8*, i32 } %613

; <label>:629:                                    ; preds = %66, %51
  call void @_ZNSaI6edge_tED2Ev(%"class.std::allocator.7"* %13) #3
  store i32 0, i32* %14, align 4
  br label %66

; <label>:630:                                    ; preds = %108, %82
  %631 = load i32, i32* %14, align 4
  %632 = load i32, i32* %3, align 4
  %633 = icmp slt i32 %631, %632
  br label %108

; <label>:634:                                    ; preds = %185, %159
  br label %185

; <label>:635:                                    ; preds = %230, %215
  %636 = landingpad { i8*, i32 }
          cleanup
  %637 = extractvalue { i8*, i32 } %636, 0
  store i8* %637, i8** %8, align 8
  %638 = extractvalue { i8*, i32 } %636, 1
  store i32 %638, i32* %9, align 4
  call void @_ZNSaI6edge_tED2Ev(%"class.std::allocator.7"* %13) #3
  br label %230

; <label>:639:                                    ; preds = %276, %261
  %640 = landingpad { i8*, i32 }
          cleanup
  %641 = extractvalue { i8*, i32 } %640, 0
  store i8* %641, i8** %8, align 8
  %642 = extractvalue { i8*, i32 } %640, 1
  store i32 %642, i32* %9, align 4
  call void @_ZNSt6vectorI6edge_tSaIS0_EED2Ev(%"class.std::vector.5"* %12) #3
  br label %276

; <label>:643:                                    ; preds = %354, %327
  store i32 2, i32* %24, align 4
  br label %354

; <label>:644:                                    ; preds = %409, %382
  %645 = load i32, i32* %24, align 4
  %646 = load i32, i32* %2, align 4
  %647 = icmp sle i32 %645, %646
  br label %409

; <label>:648:                                    ; preds = %468, %441
  call void @_ZNSt6vectorI6edge_tSaIS0_EED2Ev(%"class.std::vector.5"* %12) #3
  call void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EED2Ev(%"class.std::vector.0"* %10) #3
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %5) #3
  br label %468

; <label>:649:                                    ; preds = %522, %495
  call void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EED2Ev(%"class.std::vector.0"* %10) #3
  br label %522

; <label>:650:                                    ; preds = %553, %538
  call void @_ZNSt6vectorI3q_tSaIS0_EED2Ev(%"class.std::vector"* %5) #3
  br label %553

; <label>:651:                                    ; preds = %609, %582
  %652 = load i8*, i8** %8, align 8
  %653 = load i32, i32* %9, align 4
  %654 = insertvalue { i8*, i32 } undef, i8* %652, 0
  %655 = insertvalue { i8*, i32 } %654, i32 %653, 1
  br label %609
}

declare i32 @scanf(i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3q_tEC2Ev(%"class.std::allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EEC2EmRKS0_RKS1_(%"class.std::vector"*, i64, %struct.q_t* dereferenceable(40), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %struct.q_t* %2, %struct.q_t** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %struct.q_t*, %struct.q_t** %7, align 8
  invoke void @_ZNSt6vectorI3q_tSaIS0_EE18_M_fill_initializeEmRKS0_(%"class.std::vector"* %11, i64 %15, %struct.q_t* dereferenceable(40) %16)
          to label %17 unwind label %59

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.107
  %19 = load i32, i32* @y.108
  %20 = sub i32 %18, 1990415696
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 1990415696
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %69

; <label>:32:                                     ; preds = %17, %69
  %33 = load i32, i32* @x.107
  %34 = load i32, i32* @y.108
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %69

; <label>:58:                                     ; preds = %32
  ret void

; <label>:59:                                     ; preds = %4
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %9, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %10, align 4
  %63 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EED2Ev(%"struct.std::_Vector_base"* %63) #3
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i8*, i8** %9, align 8
  %66 = load i32, i32* %10, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

; <label>:69:                                     ; preds = %32, %17
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3q_tED2Ev(%"class.std::allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI6edge_tSaIS0_EEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.111
  %5 = load i32, i32* @y.112
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -93282261, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -93282261, label %17
    i32 782071661, label %37
    i32 -1546325545, label %68
    i32 723040306, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 782071661, i32 723040306
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %38, align 8
  %39 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %38, align 8
  %40 = bitcast %"class.std::allocator.2"* %39 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %40) #3
  %41 = load i32, i32* @x.111
  %42 = load i32, i32* @y.112
  %43 = sub i32 %41, -1873862204
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1873862204
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1546325545, i32 723040306
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %70, align 8
  %71 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %70, align 8
  %72 = bitcast %"class.std::allocator.2"* %71 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %72) #3
  store i32 782071661, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EEC2EmRKS3_(%"class.std::vector.0"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %10 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base.1"* %10, i64 %11, %"class.std::allocator.2"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE21_M_default_initializeEm(%"class.std::vector.0"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.1"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i32, i32* @x.113
  %22 = load i32, i32* @y.114
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %77

; <label>:46:                                     ; preds = %20, %77
  %47 = load i8*, i8** %7, align 8
  %48 = load i32, i32* %8, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  %51 = load i32, i32* @x.113
  %52 = load i32, i32* @y.114
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %77

; <label>:76:                                     ; preds = %46
  resume { i8*, i32 } %50

; <label>:77:                                     ; preds = %46, %20
  %78 = load i8*, i8** %7, align 8
  %79 = load i32, i32* %8, align 4
  %80 = insertvalue { i8*, i32 } undef, i8* %78, 0
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1
  br label %46
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI6edge_tSaIS0_EEED2Ev(%"class.std::allocator.2"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.115
  %5 = load i32, i32* @y.116
  %6 = sub i32 %4, -1584806630
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1584806630
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1225310752, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1225310752, label %18
    i32 543202948, label %26
    i32 1066726360, label %57
    i32 -877618964, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 543202948, i32 -877618964
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %27, align 8
  %28 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %27, align 8
  %29 = bitcast %"class.std::allocator.2"* %28 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %29) #3
  %30 = load i32, i32* @x.115
  %31 = load i32, i32* @y.116
  %32 = add i32 %30, 669420879
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 669420879
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1066726360, i32 -877618964
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %59, align 8
  %60 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %59, align 8
  %61 = bitcast %"class.std::allocator.2"* %60 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %61) #3
  store i32 543202948, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6edge_tEC2Ev(%"class.std::allocator.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorI6edge_tEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6edge_tSaIS0_EEC2EmRKS1_(%"class.std::vector.5"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %10 = bitcast %"class.std::vector.5"* %9 to %"struct.std::_Vector_base.6"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base.6"* %10, i64 %11, %"class.std::allocator.7"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorI6edge_tSaIS0_EE21_M_default_initializeEm(%"class.std::vector.5"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.5"* %9 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EED2Ev(%"struct.std::_Vector_base.6"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %7, align 8
  %22 = load i32, i32* %8, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6edge_tED2Ev(%"class.std::allocator.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorI6edge_tED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6edge_tSaIS0_EE9push_backERKS0_(%"class.std::vector.5"*, %struct.edge_t* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %struct.edge_t*
  %4 = alloca %struct.edge_t*
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca %struct.edge_t*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %6, align 8
  store %struct.edge_t* %1, %struct.edge_t** %7, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %5
  %9 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %10 = bitcast %"class.std::vector.5"* %9 to %"struct.std::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.edge_t*, %struct.edge_t** %12, align 8
  store %struct.edge_t* %13, %struct.edge_t** %4
  %14 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %15 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %struct.edge_t*, %struct.edge_t** %17, align 8
  store %struct.edge_t* %18, %struct.edge_t** %3
  %19 = alloca i32
  store i32 543743105, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %49
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 543743105, label %23
    i32 -2053474436, label %28
    i32 -1375973643, label %45
    i32 -1613907348, label %48
  ]

; <label>:22:                                     ; preds = %20
  br label %49

; <label>:23:                                     ; preds = %20
  %24 = load volatile %struct.edge_t*, %struct.edge_t** %4
  %25 = load volatile %struct.edge_t*, %struct.edge_t** %3
  %26 = icmp ne %struct.edge_t* %24, %25
  %27 = select i1 %26, i32 -2053474436, i32 -1375973643
  store i32 %27, i32* %19
  br label %49

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %30 = bitcast %"class.std::vector.5"* %29 to %"struct.std::_Vector_base.6"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %31 to %"class.std::allocator.7"*
  %33 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %34 = bitcast %"class.std::vector.5"* %33 to %"struct.std::_Vector_base.6"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %struct.edge_t*, %struct.edge_t** %36, align 8
  %38 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  call void @_ZNSt16allocator_traitsISaI6edge_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %32, %struct.edge_t* %37, %struct.edge_t* dereferenceable(24) %38)
  %39 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %40 = bitcast %"class.std::vector.5"* %39 to %"struct.std::_Vector_base.6"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load %struct.edge_t*, %struct.edge_t** %42, align 8
  %44 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %43, i32 1
  store %struct.edge_t* %44, %struct.edge_t** %42, align 8
  store i32 -1613907348, i32* %19
  br label %49

; <label>:45:                                     ; preds = %20
  %46 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  %47 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  call void @_ZNSt6vectorI6edge_tSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_(%"class.std::vector.5"* %47, %struct.edge_t* dereferenceable(24) %46)
  store i32 -1613907348, i32* %19
  br label %49

; <label>:48:                                     ; preds = %20
  ret void

; <label>:49:                                     ; preds = %45, %28, %23, %22
  br label %20
}

declare i32 @printf(i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI6edge_tSaIS0_EED2Ev(%"class.std::vector.5"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.edge_t*, %struct.edge_t** %8, align 8
  %10 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.edge_t*, %struct.edge_t** %12, align 8
  %14 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %14) #3
  invoke void @_ZSt8_DestroyIP6edge_tS0_EvT_S2_RSaIT0_E(%struct.edge_t* %9, %struct.edge_t* %13, %"class.std::allocator.7"* dereferenceable(1) %15)
          to label %16 unwind label %47

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.125
  %18 = load i32, i32* @y.126
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %54

; <label>:30:                                     ; preds = %16, %54
  %31 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EED2Ev(%"struct.std::_Vector_base.6"* %31) #3
  %32 = load i32, i32* @x.125
  %33 = load i32, i32* @y.126
  %34 = sub i32 %32, 798052827
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 798052827
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %54

; <label>:46:                                     ; preds = %30
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %3, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %4, align 4
  %51 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EED2Ev(%"struct.std::_Vector_base.6"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %53) #7
  unreachable

; <label>:54:                                     ; preds = %30, %16
  %55 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EED2Ev(%"struct.std::_Vector_base.6"* %55) #3
  br label %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EED2Ev(%"class.std::vector.0"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorI6edge_tSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::vector.5"* %9, %"class.std::vector.5"* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.1"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.1"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #7
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorI3q_tSaIS0_EEaSERKS2_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.q_t*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %7, align 8
  %17 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %17, %"class.std::vector"** %5
  %18 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %18, %"class.std::vector"** %4
  %19 = alloca i32
  store i32 1989132206, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %304
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1989132206, label %23
    i32 -985106681, label %28
    i32 -1774956311, label %36
    i32 -690224173, label %103
    i32 -1814251576, label %119
    i32 848015649, label %139
    i32 997493696, label %142
    i32 1354128564, label %170
    i32 -1502505970, label %213
    i32 -783454237, label %214
    i32 -601142011, label %256
    i32 818985589, label %257
    i32 -562269491, label %269
    i32 -2037855251, label %271
    i32 40231786, label %276
  ]

; <label>:22:                                     ; preds = %20
  br label %304

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %25 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %26 = icmp ne %"class.std::vector"* %25, %24
  %27 = select i1 %26, i32 -985106681, i32 -562269491
  store i32 %27, i32* %19
  br label %304

; <label>:28:                                     ; preds = %20
  %29 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %30 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %29) #3
  store i64 %30, i64* %8, align 8
  %31 = load i64, i64* %8, align 8
  %32 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %33 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE8capacityEv(%"class.std::vector"* %32) #3
  %34 = icmp ugt i64 %31, %33
  %35 = select i1 %34, i32 -1774956311, i32 -690224173
  store i32 %35, i32* %19
  br label %304

; <label>:36:                                     ; preds = %20
  %37 = load i64, i64* %8, align 8
  %38 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %39 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %38) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  store %struct.q_t* %39, %struct.q_t** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %42 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %41) #3
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %11, i32 0, i32 0
  store %struct.q_t* %42, %struct.q_t** %43, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  %45 = load %struct.q_t*, %struct.q_t** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %11, i32 0, i32 0
  %47 = load %struct.q_t*, %struct.q_t** %46, align 8
  %48 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %49 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_(%"class.std::vector"* %48, i64 %37, %struct.q_t* %45, %struct.q_t* %47)
  store %struct.q_t* %49, %struct.q_t** %9, align 8
  %50 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %51 = bitcast %"class.std::vector"* %50 to %"struct.std::_Vector_base"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load %struct.q_t*, %struct.q_t** %53, align 8
  %55 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %56 = bitcast %"class.std::vector"* %55 to %"struct.std::_Vector_base"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %struct.q_t*, %struct.q_t** %58, align 8
  %60 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %61 = bitcast %"class.std::vector"* %60 to %"struct.std::_Vector_base"*
  %62 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %61) #3
  call void @_ZSt8_DestroyIP3q_tS0_EvT_S2_RSaIT0_E(%struct.q_t* %54, %struct.q_t* %59, %"class.std::allocator"* dereferenceable(1) %62)
  %63 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %64 = bitcast %"class.std::vector"* %63 to %"struct.std::_Vector_base"*
  %65 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %66 = bitcast %"class.std::vector"* %65 to %"struct.std::_Vector_base"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %67, i32 0, i32 0
  %69 = load %struct.q_t*, %struct.q_t** %68, align 8
  %70 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %71 = bitcast %"class.std::vector"* %70 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %72, i32 0, i32 2
  %74 = load %struct.q_t*, %struct.q_t** %73, align 8
  %75 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %76 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %77, i32 0, i32 0
  %79 = load %struct.q_t*, %struct.q_t** %78, align 8
  %80 = ptrtoint %struct.q_t* %74 to i64
  %81 = ptrtoint %struct.q_t* %79 to i64
  %82 = add i64 %80, 6288419576213713982
  %83 = sub i64 %82, %81
  %84 = sub i64 %83, 6288419576213713982
  %85 = sub i64 %80, %81
  %86 = sdiv exact i64 %84, 40
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %64, %struct.q_t* %69, i64 %86)
  %87 = load %struct.q_t*, %struct.q_t** %9, align 8
  %88 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %89 = bitcast %"class.std::vector"* %88 to %"struct.std::_Vector_base"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %90, i32 0, i32 0
  store %struct.q_t* %87, %struct.q_t** %91, align 8
  %92 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %93 = bitcast %"class.std::vector"* %92 to %"struct.std::_Vector_base"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load %struct.q_t*, %struct.q_t** %95, align 8
  %97 = load i64, i64* %8, align 8
  %98 = getelementptr inbounds %struct.q_t, %struct.q_t* %96, i64 %97
  %99 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %100 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %101, i32 0, i32 2
  store %struct.q_t* %98, %struct.q_t** %102, align 8
  store i32 818985589, i32* %19
  br label %304

; <label>:103:                                    ; preds = %20
  %104 = load i32, i32* @x.129
  %105 = load i32, i32* @y.130
  %106 = sub i32 %104, -1560104930
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1560104930
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 -1814251576, i32 -2037855251
  store i32 %118, i32* %19
  br label %304

; <label>:119:                                    ; preds = %20
  %120 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %121 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %120) #3
  %122 = load i64, i64* %8, align 8
  %123 = icmp uge i64 %121, %122
  store i1 %123, i1* %3
  %124 = load i32, i32* @x.129
  %125 = load i32, i32* @y.130
  %126 = add i32 %124, 1408060058
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, 1408060058
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 848015649, i32 -2037855251
  store i32 %138, i32* %19
  br label %304

; <label>:139:                                    ; preds = %20
  %140 = load volatile i1, i1* %3
  %141 = select i1 %140, i32 997493696, i32 -783454237
  store i32 %141, i32* %19
  br label %304

; <label>:142:                                    ; preds = %20
  %143 = load i32, i32* @x.129
  %144 = load i32, i32* @y.130
  %145 = sub i32 %143, -174940710
  %146 = sub i32 %145, 1
  %147 = add i32 %146, -174940710
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  %169 = select i1 %167, i32 1354128564, i32 40231786
  store i32 %169, i32* %19
  br label %304

; <label>:170:                                    ; preds = %20
  %171 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %172 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %171) #3
  %173 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  store %struct.q_t* %172, %struct.q_t** %173, align 8
  %174 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %175 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %174) #3
  %176 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %14, i32 0, i32 0
  store %struct.q_t* %175, %struct.q_t** %176, align 8
  %177 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %178 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %177) #3
  %179 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %15, i32 0, i32 0
  store %struct.q_t* %178, %struct.q_t** %179, align 8
  %180 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  %181 = load %struct.q_t*, %struct.q_t** %180, align 8
  %182 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %14, i32 0, i32 0
  %183 = load %struct.q_t*, %struct.q_t** %182, align 8
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %15, i32 0, i32 0
  %185 = load %struct.q_t*, %struct.q_t** %184, align 8
  %186 = call %struct.q_t* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_(%struct.q_t* %181, %struct.q_t* %183, %struct.q_t* %185)
  %187 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  store %struct.q_t* %186, %struct.q_t** %187, align 8
  %188 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %189 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %188) #3
  %190 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %16, i32 0, i32 0
  store %struct.q_t* %189, %struct.q_t** %190, align 8
  %191 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %192 = bitcast %"class.std::vector"* %191 to %"struct.std::_Vector_base"*
  %193 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %192) #3
  %194 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %195 = load %struct.q_t*, %struct.q_t** %194, align 8
  %196 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %16, i32 0, i32 0
  %197 = load %struct.q_t*, %struct.q_t** %196, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E(%struct.q_t* %195, %struct.q_t* %197, %"class.std::allocator"* dereferenceable(1) %193)
  %198 = load i32, i32* @x.129
  %199 = load i32, i32* @y.130
  %200 = sub i32 %198, 767770523
  %201 = sub i32 %200, 1
  %202 = add i32 %201, 767770523
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  %212 = select i1 %210, i32 -1502505970, i32 40231786
  store i32 %212, i32* %19
  br label %304

; <label>:213:                                    ; preds = %20
  store i32 -601142011, i32* %19
  br label %304

; <label>:214:                                    ; preds = %20
  %215 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %216 = bitcast %"class.std::vector"* %215 to %"struct.std::_Vector_base"*
  %217 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %216, i32 0, i32 0
  %218 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %217, i32 0, i32 0
  %219 = load %struct.q_t*, %struct.q_t** %218, align 8
  %220 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %221 = bitcast %"class.std::vector"* %220 to %"struct.std::_Vector_base"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %222, i32 0, i32 0
  %224 = load %struct.q_t*, %struct.q_t** %223, align 8
  %225 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %226 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %225) #3
  %227 = getelementptr inbounds %struct.q_t, %struct.q_t* %224, i64 %226
  %228 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %229 = bitcast %"class.std::vector"* %228 to %"struct.std::_Vector_base"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %230, i32 0, i32 0
  %232 = load %struct.q_t*, %struct.q_t** %231, align 8
  %233 = call %struct.q_t* @_ZSt4copyIP3q_tS1_ET0_T_S3_S2_(%struct.q_t* %219, %struct.q_t* %227, %struct.q_t* %232)
  %234 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %235 = bitcast %"class.std::vector"* %234 to %"struct.std::_Vector_base"*
  %236 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %235, i32 0, i32 0
  %237 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %236, i32 0, i32 0
  %238 = load %struct.q_t*, %struct.q_t** %237, align 8
  %239 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %240 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %239) #3
  %241 = getelementptr inbounds %struct.q_t, %struct.q_t* %238, i64 %240
  %242 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %243 = bitcast %"class.std::vector"* %242 to %"struct.std::_Vector_base"*
  %244 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %244, i32 0, i32 1
  %246 = load %struct.q_t*, %struct.q_t** %245, align 8
  %247 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %248 = bitcast %"class.std::vector"* %247 to %"struct.std::_Vector_base"*
  %249 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %248, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %249, i32 0, i32 1
  %251 = load %struct.q_t*, %struct.q_t** %250, align 8
  %252 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %253 = bitcast %"class.std::vector"* %252 to %"struct.std::_Vector_base"*
  %254 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %253) #3
  %255 = call %struct.q_t* @_ZSt22__uninitialized_copy_aIP3q_tS1_S0_ET0_T_S3_S2_RSaIT1_E(%struct.q_t* %241, %struct.q_t* %246, %struct.q_t* %251, %"class.std::allocator"* dereferenceable(1) %254)
  store i32 -601142011, i32* %19
  br label %304

; <label>:256:                                    ; preds = %20
  store i32 818985589, i32* %19
  br label %304

; <label>:257:                                    ; preds = %20
  %258 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %259 = bitcast %"class.std::vector"* %258 to %"struct.std::_Vector_base"*
  %260 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %259, i32 0, i32 0
  %261 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %260, i32 0, i32 0
  %262 = load %struct.q_t*, %struct.q_t** %261, align 8
  %263 = load i64, i64* %8, align 8
  %264 = getelementptr inbounds %struct.q_t, %struct.q_t* %262, i64 %263
  %265 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %266 = bitcast %"class.std::vector"* %265 to %"struct.std::_Vector_base"*
  %267 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %266, i32 0, i32 0
  %268 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %267, i32 0, i32 1
  store %struct.q_t* %264, %struct.q_t** %268, align 8
  store i32 -562269491, i32* %19
  br label %304

; <label>:269:                                    ; preds = %20
  %270 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  ret %"class.std::vector"* %270

; <label>:271:                                    ; preds = %20
  %272 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %273 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %272) #3
  %274 = load i64, i64* %8, align 8
  %275 = icmp uge i64 %273, %274
  store i32 -1814251576, i32* %19
  br label %304

; <label>:276:                                    ; preds = %20
  %277 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %278 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %277) #3
  %279 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  store %struct.q_t* %278, %struct.q_t** %279, align 8
  %280 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %281 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %280) #3
  %282 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %14, i32 0, i32 0
  store %struct.q_t* %281, %struct.q_t** %282, align 8
  %283 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %284 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %283) #3
  %285 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %15, i32 0, i32 0
  store %struct.q_t* %284, %struct.q_t** %285, align 8
  %286 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  %287 = load %struct.q_t*, %struct.q_t** %286, align 8
  %288 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %14, i32 0, i32 0
  %289 = load %struct.q_t*, %struct.q_t** %288, align 8
  %290 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %15, i32 0, i32 0
  %291 = load %struct.q_t*, %struct.q_t** %290, align 8
  %292 = call %struct.q_t* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_(%struct.q_t* %287, %struct.q_t* %289, %struct.q_t* %291)
  %293 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  store %struct.q_t* %292, %struct.q_t** %293, align 8
  %294 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %295 = call %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %294) #3
  %296 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %16, i32 0, i32 0
  store %struct.q_t* %295, %struct.q_t** %296, align 8
  %297 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %298 = bitcast %"class.std::vector"* %297 to %"struct.std::_Vector_base"*
  %299 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %298) #3
  %300 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %301 = load %struct.q_t*, %struct.q_t** %300, align 8
  %302 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %16, i32 0, i32 0
  %303 = load %struct.q_t*, %struct.q_t** %302, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E(%struct.q_t* %301, %struct.q_t* %303, %"class.std::allocator"* dereferenceable(1) %299)
  store i32 1354128564, i32* %19
  br label %304

; <label>:304:                                    ; preds = %276, %271, %257, %256, %214, %213, %170, %142, %139, %119, %103, %36, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI3q_tSaIS0_EE8capacityEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %struct.q_t*, %struct.q_t** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.q_t*, %struct.q_t** %10, align 8
  %12 = ptrtoint %struct.q_t* %7 to i64
  %13 = ptrtoint %struct.q_t* %11 to i64
  %14 = add i64 %12, 7808500874468252151
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 7808500874468252151
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 40
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_mT_SA_(%"class.std::vector"*, i64, %struct.q_t*, %struct.q_t*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.133
  %6 = load i32, i32* @y.134
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %265

; <label>:18:                                     ; preds = %4, %265
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %21 = alloca %"class.std::vector"*, align 8
  %22 = alloca i64, align 8
  %23 = alloca %struct.q_t*, align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %26 = alloca i8*
  %27 = alloca i32
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %19, i32 0, i32 0
  store %struct.q_t* %2, %struct.q_t** %28, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %20, i32 0, i32 0
  store %struct.q_t* %3, %struct.q_t** %29, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %21, align 8
  store i64 %1, i64* %22, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %21, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = load i64, i64* %22, align 8
  %33 = call %struct.q_t* @_ZNSt12_Vector_baseI3q_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"* %31, i64 %32)
  store %struct.q_t* %33, %struct.q_t** %23, align 8
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %24 to i8*
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 8, i1 false)
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %25 to i8*
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = load %struct.q_t*, %struct.q_t** %23, align 8
  %39 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %40 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %39) #3
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %24, i32 0, i32 0
  %42 = load %struct.q_t*, %struct.q_t** %41, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %25, i32 0, i32 0
  %44 = load %struct.q_t*, %struct.q_t** %43, align 8
  %45 = load i32, i32* @x.133
  %46 = load i32, i32* @y.134
  %47 = add i32 %45, 171445936
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 171445936
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %265

; <label>:71:                                     ; preds = %18
  %72 = invoke %struct.q_t* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(%struct.q_t* %42, %struct.q_t* %44, %struct.q_t* %38, %"class.std::allocator"* dereferenceable(1) %40)
          to label %73 unwind label %75

; <label>:73:                                     ; preds = %71
  %74 = load %struct.q_t*, %struct.q_t** %23, align 8
  ret %struct.q_t* %74

; <label>:75:                                     ; preds = %71
  %76 = load i32, i32* @x.133
  %77 = load i32, i32* @y.134
  %78 = sub i32 %76, 1384484970
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 1384484970
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %292

; <label>:102:                                    ; preds = %75, %292
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %26, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %27, align 4
  %106 = load i32, i32* @x.133
  %107 = load i32, i32* @y.134
  %108 = sub i32 %106, -1089580710
  %109 = sub i32 %108, 1
  %110 = add i32 %109, -1089580710
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %292

; <label>:132:                                    ; preds = %102
  br label %133

; <label>:133:                                    ; preds = %132
  %134 = load i8*, i8** %26, align 8
  %135 = call i8* @__cxa_begin_catch(i8* %134) #3
  %136 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %137 = load %struct.q_t*, %struct.q_t** %23, align 8
  %138 = load i64, i64* %22, align 8
  invoke void @_ZNSt12_Vector_baseI3q_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %136, %struct.q_t* %137, i64 %138)
          to label %139 unwind label %140

; <label>:139:                                    ; preds = %133
  invoke void @__cxa_rethrow() #13
          to label %264 unwind label %140

; <label>:140:                                    ; preds = %139, %133
  %141 = load i32, i32* @x.133
  %142 = load i32, i32* @y.134
  %143 = add i32 %141, 839197703
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, 839197703
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %296

; <label>:155:                                    ; preds = %140, %296
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %26, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %27, align 4
  %159 = load i32, i32* @x.133
  %160 = load i32, i32* @y.134
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  br i1 %170, label %172, label %296

; <label>:172:                                    ; preds = %155
  invoke void @__cxa_end_catch()
          to label %173 unwind label %208

; <label>:173:                                    ; preds = %172
  br label %175
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:175:                                    ; preds = %173
  %176 = load i32, i32* @x.133
  %177 = load i32, i32* @y.134
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %300

; <label>:189:                                    ; preds = %175, %300
  %190 = load i8*, i8** %26, align 8
  %191 = load i32, i32* %27, align 4
  %192 = insertvalue { i8*, i32 } undef, i8* %190, 0
  %193 = insertvalue { i8*, i32 } %192, i32 %191, 1
  %194 = load i32, i32* @x.133
  %195 = load i32, i32* @y.134
  %196 = sub i32 0, 1
  %197 = add i32 %194, %196
  %198 = sub i32 %194, 1
  %199 = mul i32 %194, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %195, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %300

; <label>:207:                                    ; preds = %189
  resume { i8*, i32 } %193

; <label>:208:                                    ; preds = %172
  %209 = load i32, i32* @x.133
  %210 = load i32, i32* @y.134
  %211 = add i32 %209, 635313349
  %212 = sub i32 %211, 1
  %213 = sub i32 %212, 635313349
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 true, true
  %222 = and i1 %219, true
  %223 = and i1 %217, %221
  %224 = and i1 %220, true
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 true, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  br i1 %233, label %235, label %305

; <label>:235:                                    ; preds = %208, %305
  %236 = landingpad { i8*, i32 }
          catch i8* null
  %237 = extractvalue { i8*, i32 } %236, 0
  call void @__clang_call_terminate(i8* %237) #7
  %238 = load i32, i32* @x.133
  %239 = load i32, i32* @y.134
  %240 = sub i32 0, 1
  %241 = add i32 %238, %240
  %242 = sub i32 %238, 1
  %243 = mul i32 %238, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %239, 10
  %247 = xor i1 %245, true
  %248 = xor i1 %246, true
  %249 = xor i1 false, true
  %250 = and i1 %247, false
  %251 = and i1 %245, %249
  %252 = and i1 %248, false
  %253 = and i1 %246, %249
  %254 = or i1 %250, %251
  %255 = or i1 %252, %253
  %256 = xor i1 %254, %255
  %257 = or i1 %247, %248
  %258 = xor i1 %257, true
  %259 = or i1 false, %249
  %260 = and i1 %258, %259
  %261 = or i1 %256, %260
  %262 = or i1 %245, %246
  br i1 %261, label %263, label %305

; <label>:263:                                    ; preds = %235
  unreachable

; <label>:264:                                    ; preds = %139
  unreachable

; <label>:265:                                    ; preds = %18, %4
  %266 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %267 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %268 = alloca %"class.std::vector"*, align 8
  %269 = alloca i64, align 8
  %270 = alloca %struct.q_t*, align 8
  %271 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %272 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %273 = alloca i8*
  %274 = alloca i32
  %275 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %266, i32 0, i32 0
  store %struct.q_t* %2, %struct.q_t** %275, align 8
  %276 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %267, i32 0, i32 0
  store %struct.q_t* %3, %struct.q_t** %276, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %268, align 8
  store i64 %1, i64* %269, align 8
  %277 = load %"class.std::vector"*, %"class.std::vector"** %268, align 8
  %278 = bitcast %"class.std::vector"* %277 to %"struct.std::_Vector_base"*
  %279 = load i64, i64* %269, align 8
  %280 = call %struct.q_t* @_ZNSt12_Vector_baseI3q_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"* %278, i64 %279)
  store %struct.q_t* %280, %struct.q_t** %270, align 8
  %281 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %271 to i8*
  %282 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %281, i8* %282, i64 8, i32 8, i1 false)
  %283 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %272 to i8*
  %284 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %283, i8* %284, i64 8, i32 8, i1 false)
  %285 = load %struct.q_t*, %struct.q_t** %270, align 8
  %286 = bitcast %"class.std::vector"* %277 to %"struct.std::_Vector_base"*
  %287 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %286) #3
  %288 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %271, i32 0, i32 0
  %289 = load %struct.q_t*, %struct.q_t** %288, align 8
  %290 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %272, i32 0, i32 0
  %291 = load %struct.q_t*, %struct.q_t** %290, align 8
  br label %18

; <label>:292:                                    ; preds = %102, %75
  %293 = landingpad { i8*, i32 }
          catch i8* null
  %294 = extractvalue { i8*, i32 } %293, 0
  store i8* %294, i8** %26, align 8
  %295 = extractvalue { i8*, i32 } %293, 1
  store i32 %295, i32* %27, align 4
  br label %102

; <label>:296:                                    ; preds = %155, %140
  %297 = landingpad { i8*, i32 }
          cleanup
  %298 = extractvalue { i8*, i32 } %297, 0
  store i8* %298, i8** %26, align 8
  %299 = extractvalue { i8*, i32 } %297, 1
  store i32 %299, i32* %27, align 4
  br label %155

; <label>:300:                                    ; preds = %189, %175
  %301 = load i8*, i8** %26, align 8
  %302 = load i32, i32* %27, align 4
  %303 = insertvalue { i8*, i32 } undef, i8* %301, 0
  %304 = insertvalue { i8*, i32 } %303, i32 %302, 1
  br label %189

; <label>:305:                                    ; preds = %235, %208
  %306 = landingpad { i8*, i32 }
          catch i8* null
  %307 = extractvalue { i8*, i32 } %306, 0
  call void @__clang_call_terminate(i8* %307) #7
  br label %235
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.q_t*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.q_t*, %struct.q_t** %8, align 8
  store %struct.q_t* %9, %struct.q_t** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %2, %struct.q_t** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %11 = load %struct.q_t*, %struct.q_t** %10, align 8
  ret %struct.q_t* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %struct.q_t*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.137
  %6 = load i32, i32* @y.138
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1554788814, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1554788814, label %18
    i32 835673832, label %26
    i32 2012661143, label %52
    i32 1915457386, label %54
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 835673832, i32 1915457386
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca %struct.q_t*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %32, i32 0, i32 1
  %34 = load %struct.q_t*, %struct.q_t** %33, align 8
  store %struct.q_t* %34, %struct.q_t** %29, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %27, %struct.q_t** dereferenceable(8) %29) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %27, i32 0, i32 0
  %36 = load %struct.q_t*, %struct.q_t** %35, align 8
  store %struct.q_t* %36, %struct.q_t** %2
  %37 = load i32, i32* @x.137
  %38 = load i32, i32* @y.138
  %39 = add i32 %37, 40024522
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 40024522
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 2012661143, i32 1915457386
  store i32 %51, i32* %14
  br label %65

; <label>:52:                                     ; preds = %15
  %53 = load volatile %struct.q_t*, %struct.q_t** %2
  ret %struct.q_t* %53

; <label>:54:                                     ; preds = %15
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %56 = alloca %"class.std::vector"*, align 8
  %57 = alloca %struct.q_t*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %56, align 8
  %58 = load %"class.std::vector"*, %"class.std::vector"** %56, align 8
  %59 = bitcast %"class.std::vector"* %58 to %"struct.std::_Vector_base"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %60, i32 0, i32 1
  %62 = load %struct.q_t*, %struct.q_t** %61, align 8
  store %struct.q_t* %62, %struct.q_t** %57, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %55, %struct.q_t** dereferenceable(8) %57) #3
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %55, i32 0, i32 0
  %64 = load %struct.q_t*, %struct.q_t** %63, align 8
  store i32 835673832, i32* %14
  br label %65

; <label>:65:                                     ; preds = %54, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP3q_tS0_EvT_S2_RSaIT0_E(%struct.q_t*, %struct.q_t*, %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.139
  %7 = load i32, i32* @y.140
  %8 = sub i32 %6, 530317146
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 530317146
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1916114861, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %56
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1916114861, label %20
    i32 -177554784, label %28
    i32 -1641881685, label %49
    i32 613280734, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %56

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -177554784, i32 613280734
  store i32 %27, i32* %16
  br label %56

; <label>:28:                                     ; preds = %17
  %29 = alloca %struct.q_t*, align 8
  %30 = alloca %struct.q_t*, align 8
  %31 = alloca %"class.std::allocator"*, align 8
  store %struct.q_t* %0, %struct.q_t** %29, align 8
  store %struct.q_t* %1, %struct.q_t** %30, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %31, align 8
  %32 = load %struct.q_t*, %struct.q_t** %29, align 8
  %33 = load %struct.q_t*, %struct.q_t** %30, align 8
  call void @_ZSt8_DestroyIP3q_tEvT_S2_(%struct.q_t* %32, %struct.q_t* %33)
  %34 = load i32, i32* @x.139
  %35 = load i32, i32* @y.140
  %36 = add i32 %34, -1016032236
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1016032236
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1641881685, i32 613280734
  store i32 %48, i32* %16
  br label %56

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca %struct.q_t*, align 8
  %52 = alloca %struct.q_t*, align 8
  %53 = alloca %"class.std::allocator"*, align 8
  store %struct.q_t* %0, %struct.q_t** %51, align 8
  store %struct.q_t* %1, %struct.q_t** %52, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %53, align 8
  %54 = load %struct.q_t*, %struct.q_t** %51, align 8
  %55 = load %struct.q_t*, %struct.q_t** %52, align 8
  call void @_ZSt8_DestroyIP3q_tEvT_S2_(%struct.q_t* %54, %struct.q_t* %55)
  store i32 -177554784, i32* %16
  br label %56

; <label>:56:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.141
  %6 = load i32, i32* @y.142
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1012389071, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1012389071, label %18
    i32 1333187230, label %26
    i32 1950129952, label %58
    i32 627655149, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1333187230, i32 627655149
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %27, align 8
  %28 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %29 to %"class.std::allocator"*
  store %"class.std::allocator"* %30, %"class.std::allocator"** %2
  %31 = load i32, i32* @x.141
  %32 = load i32, i32* @y.142
  %33 = sub i32 %31, 838158947
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 838158947
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1950129952, i32 627655149
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %61, align 8
  %62 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %63 to %"class.std::allocator"*
  store i32 1333187230, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"*, %struct.q_t*, i64) #2 comdat align 2 {
  %4 = alloca %struct.q_t*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %struct.q_t* %1, %struct.q_t** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %struct.q_t*, %struct.q_t** %7, align 8
  store %struct.q_t* %10, %struct.q_t** %4
  %11 = alloca i32
  store i32 722872599, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 722872599, label %15
    i32 -198617581, label %19
    i32 -305861399, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %struct.q_t*, %struct.q_t** %4
  %17 = icmp ne %struct.q_t* %16, null
  %18 = select i1 %17, i32 -198617581, i32 -305861399
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %struct.q_t*, %struct.q_t** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaI3q_tEE10deallocateERS1_PS0_m(%"class.std::allocator"* dereferenceable(1) %22, %struct.q_t* %23, i64 %24)
  store i32 -305861399, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E(%struct.q_t*, %struct.q_t*, %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %10, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  %16 = load %struct.q_t*, %struct.q_t** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %8, i32 0, i32 0
  %18 = load %struct.q_t*, %struct.q_t** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEEEvT_S8_(%struct.q_t* %16, %struct.q_t* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  store %struct.q_t* %2, %struct.q_t** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  %19 = load %struct.q_t*, %struct.q_t** %18, align 8
  %20 = call %struct.q_t* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%struct.q_t* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  store %struct.q_t* %20, %struct.q_t** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %11, i32 0, i32 0
  %25 = load %struct.q_t*, %struct.q_t** %24, align 8
  %26 = call %struct.q_t* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%struct.q_t* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  store %struct.q_t* %26, %struct.q_t** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  %31 = load %struct.q_t*, %struct.q_t** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  %33 = load %struct.q_t*, %struct.q_t** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %35 = load %struct.q_t*, %struct.q_t** %34, align 8
  %36 = call %struct.q_t* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_(%struct.q_t* %31, %struct.q_t* %33, %struct.q_t* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %36, %struct.q_t** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  %39 = load %struct.q_t*, %struct.q_t** %38, align 8
  ret %struct.q_t* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.33"* %2, %struct.q_t** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  %9 = load %struct.q_t*, %struct.q_t** %8, align 8
  ret %struct.q_t* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.33"* %2, %struct.q_t** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  %9 = load %struct.q_t*, %struct.q_t** %8, align 8
  ret %struct.q_t* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt4copyIP3q_tS1_ET0_T_S3_S2_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %struct.q_t*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.153
  %8 = load i32, i32* @y.154
  %9 = sub i32 %7, -915218700
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -915218700
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1788997592, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %77
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1788997592, label %21
    i32 -1355627197, label %29
    i32 -1984486829, label %65
    i32 1488305750, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %77

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1355627197, i32 1488305750
  store i32 %28, i32* %17
  br label %77

; <label>:29:                                     ; preds = %18
  %30 = alloca %struct.q_t*, align 8
  %31 = alloca %struct.q_t*, align 8
  %32 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %30, align 8
  store %struct.q_t* %1, %struct.q_t** %31, align 8
  store %struct.q_t* %2, %struct.q_t** %32, align 8
  %33 = load %struct.q_t*, %struct.q_t** %30, align 8
  %34 = call %struct.q_t* @_ZSt12__miter_baseIP3q_tENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.q_t* %33)
  %35 = load %struct.q_t*, %struct.q_t** %31, align 8
  %36 = call %struct.q_t* @_ZSt12__miter_baseIP3q_tENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.q_t* %35)
  %37 = load %struct.q_t*, %struct.q_t** %32, align 8
  %38 = call %struct.q_t* @_ZSt14__copy_move_a2ILb0EP3q_tS1_ET1_T0_S3_S2_(%struct.q_t* %34, %struct.q_t* %36, %struct.q_t* %37)
  store %struct.q_t* %38, %struct.q_t** %4
  %39 = load i32, i32* @x.153
  %40 = load i32, i32* @y.154
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1984486829, i32 1488305750
  store i32 %64, i32* %17
  br label %77

; <label>:65:                                     ; preds = %18
  %66 = load volatile %struct.q_t*, %struct.q_t** %4
  ret %struct.q_t* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %struct.q_t*, align 8
  %69 = alloca %struct.q_t*, align 8
  %70 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %68, align 8
  store %struct.q_t* %1, %struct.q_t** %69, align 8
  store %struct.q_t* %2, %struct.q_t** %70, align 8
  %71 = load %struct.q_t*, %struct.q_t** %68, align 8
  %72 = call %struct.q_t* @_ZSt12__miter_baseIP3q_tENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.q_t* %71)
  %73 = load %struct.q_t*, %struct.q_t** %69, align 8
  %74 = call %struct.q_t* @_ZSt12__miter_baseIP3q_tENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.q_t* %73)
  %75 = load %struct.q_t*, %struct.q_t** %70, align 8
  %76 = call %struct.q_t* @_ZSt14__copy_move_a2ILb0EP3q_tS1_ET1_T0_S3_S2_(%struct.q_t* %72, %struct.q_t* %74, %struct.q_t* %75)
  store i32 -1355627197, i32* %17
  br label %77

; <label>:77:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt22__uninitialized_copy_aIP3q_tS1_S0_ET0_T_S3_S2_RSaIT1_E(%struct.q_t*, %struct.q_t*, %struct.q_t*, %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %struct.q_t* %0, %struct.q_t** %5, align 8
  store %struct.q_t* %1, %struct.q_t** %6, align 8
  store %struct.q_t* %2, %struct.q_t** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %struct.q_t*, %struct.q_t** %5, align 8
  %10 = load %struct.q_t*, %struct.q_t** %6, align 8
  %11 = load %struct.q_t*, %struct.q_t** %7, align 8
  %12 = call %struct.q_t* @_ZSt18uninitialized_copyIP3q_tS1_ET0_T_S3_S2_(%struct.q_t* %9, %struct.q_t* %10, %struct.q_t* %11)
  ret %struct.q_t* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZNSt12_Vector_baseI3q_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #2 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 992143748, i32* %9
  %10 = alloca %struct.q_t*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 992143748, label %14
    i32 106200810, label %18
    i32 1191726970, label %24
    i32 -154036651, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 106200810, i32 1191726970
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call %struct.q_t* @_ZNSt16allocator_traitsISaI3q_tEE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 -154036651, i32* %9
  store %struct.q_t* %23, %struct.q_t** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -154036651, i32* %9
  store %struct.q_t* null, %struct.q_t** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %struct.q_t*, %struct.q_t** %10
  ret %struct.q_t* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(%struct.q_t*, %struct.q_t*, %struct.q_t*, %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %12, align 8
  store %struct.q_t* %2, %struct.q_t** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.q_t*, %struct.q_t** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  %19 = load %struct.q_t*, %struct.q_t** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  %21 = load %struct.q_t*, %struct.q_t** %20, align 8
  %22 = call %struct.q_t* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(%struct.q_t* %19, %struct.q_t* %21, %struct.q_t* %17)
  ret %struct.q_t* %22
}

declare i8* @__cxa_begin_catch(i8*)

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #7
  unreachable
}

declare void @_ZSt9terminatev()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZNSt16allocator_traitsISaI3q_tEE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.q_t* @_ZN9__gnu_cxx13new_allocatorI3q_tE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %struct.q_t* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZN9__gnu_cxx13new_allocatorI3q_tE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca %struct.q_t*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorI3q_tE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 457474425, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %131
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 457474425, label %17
    i32 -2061574470, label %22
    i32 2072885253, label %38
    i32 -1033292006, label %54
    i32 -614458593, label %55
    i32 -801818349, label %71
    i32 -1078335134, label %90
    i32 1907944075, label %92
    i32 -498243380, label %93
  ]

; <label>:16:                                     ; preds = %14
  br label %131

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -2061574470, i32 -614458593
  store i32 %21, i32* %13
  br label %131

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.165
  %24 = load i32, i32* @y.166
  %25 = add i32 %23, 771008533
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 771008533
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 2072885253, i32 1907944075
  store i32 %37, i32* %13
  br label %131

; <label>:38:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  %39 = load i32, i32* @x.165
  %40 = load i32, i32* @y.166
  %41 = sub i32 %39, 1394921137
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1394921137
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1033292006, i32 1907944075
  store i32 %53, i32* %13
  br label %131

; <label>:54:                                     ; preds = %14
  unreachable

; <label>:55:                                     ; preds = %14
  %56 = load i32, i32* @x.165
  %57 = load i32, i32* @y.166
  %58 = sub i32 %56, 1839116409
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1839116409
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -801818349, i32 -498243380
  store i32 %70, i32* %13
  br label %131

; <label>:71:                                     ; preds = %14
  %72 = load i64, i64* %8, align 8
  %73 = mul i64 %72, 40
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to %struct.q_t*
  store %struct.q_t* %75, %struct.q_t** %4
  %76 = load i32, i32* @x.165
  %77 = load i32, i32* @y.166
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 -1078335134, i32 -498243380
  store i32 %89, i32* %13
  br label %131

; <label>:90:                                     ; preds = %14
  %91 = load volatile %struct.q_t*, %struct.q_t** %4
  ret %struct.q_t* %91

; <label>:92:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 2072885253, i32* %13
  br label %131

; <label>:93:                                     ; preds = %14
  %94 = load i64, i64* %8, align 8
  %95 = shl i64 %94, 40
  %96 = shl i64 %94, 40
  %97 = shl i64 %94, 40
  %98 = shl i64 %94, 40
  %99 = shl i64 %94, 40
  %100 = add i64 %94, -8303701331707182375
  %101 = sub i64 %100, 40
  %102 = sub i64 %101, -8303701331707182375
  %103 = sub i64 %94, 40
  %104 = mul i64 %102, 40
  %105 = sub i64 0, %94
  %106 = add i64 0, %105
  %107 = sub i64 0, %94
  %108 = sub i64 %106, 6384543329917992358
  %109 = add i64 %108, 40
  %110 = add i64 %109, 6384543329917992358
  %111 = add i64 %106, 40
  %112 = add i64 0, 3342943576838093638
  %113 = sub i64 %112, %94
  %114 = sub i64 %113, 3342943576838093638
  %115 = sub i64 0, %94
  %116 = sub i64 %114, -4021790947434359873
  %117 = add i64 %116, 40
  %118 = add i64 %117, -4021790947434359873
  %119 = add i64 %114, 40
  %120 = add i64 0, 6193657520339397198
  %121 = sub i64 %120, %94
  %122 = sub i64 %121, 6193657520339397198
  %123 = sub i64 0, %94
  %124 = add i64 %122, -7618728780833144968
  %125 = add i64 %124, 40
  %126 = sub i64 %125, -7618728780833144968
  %127 = add i64 %122, 40
  %128 = mul i64 %94, 40
  %129 = call i8* @_Znwm(i64 %128)
  %130 = bitcast i8* %129 to %struct.q_t*
  store i32 -801818349, i32* %13
  br label %131

; <label>:131:                                    ; preds = %93, %92, %71, %55, %38, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI3q_tE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 461168601842738790
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %struct.q_t*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.169
  %8 = load i32, i32* @y.170
  %9 = add i32 %7, 1066094349
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1066094349
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 353074087, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 353074087, label %21
    i32 582034314, label %41
    i32 356309415, label %75
    i32 -408846988, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 582034314, i32 -408846988
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %44 = alloca %struct.q_t*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %42, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %43, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %49, align 8
  store %struct.q_t* %2, %struct.q_t** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %struct.q_t*, %struct.q_t** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %46, i32 0, i32 0
  %56 = load %struct.q_t*, %struct.q_t** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %47, i32 0, i32 0
  %58 = load %struct.q_t*, %struct.q_t** %57, align 8
  %59 = call %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(%struct.q_t* %56, %struct.q_t* %58, %struct.q_t* %54)
  store %struct.q_t* %59, %struct.q_t** %4
  %60 = load i32, i32* @x.169
  %61 = load i32, i32* @y.170
  %62 = sub i32 %60, 1674712944
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1674712944
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 356309415, i32 -408846988
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile %struct.q_t*, %struct.q_t** %4
  ret %struct.q_t* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %80 = alloca %struct.q_t*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %78, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %79, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %85, align 8
  store %struct.q_t* %2, %struct.q_t** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %83 to i8*
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load %struct.q_t*, %struct.q_t** %80, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %82, i32 0, i32 0
  %92 = load %struct.q_t*, %struct.q_t** %91, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %83, i32 0, i32 0
  %94 = load %struct.q_t*, %struct.q_t** %93, align 8
  %95 = call %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(%struct.q_t* %92, %struct.q_t* %94, %struct.q_t* %90)
  store i32 582034314, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.171
  %5 = load i32, i32* @y.172
  %6 = add i32 %4, -819916925
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -819916925
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %289

; <label>:30:                                     ; preds = %3, %289
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %33 = alloca %struct.q_t*, align 8
  %34 = alloca %struct.q_t*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %31, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %32, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %38, align 8
  store %struct.q_t* %2, %struct.q_t** %33, align 8
  %39 = load %struct.q_t*, %struct.q_t** %33, align 8
  store %struct.q_t* %39, %struct.q_t** %34, align 8
  %40 = load i32, i32* @x.171
  %41 = load i32, i32* @y.172
  %42 = add i32 %40, 325572209
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 325572209
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %289

; <label>:66:                                     ; preds = %30
  br label %67

; <label>:67:                                     ; preds = %104, %66
  %68 = call zeroext i1 @_ZN9__gnu_cxxneIPK3q_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %31, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %32) #3
  br i1 %68, label %69, label %189

; <label>:69:                                     ; preds = %67
  %70 = load i32, i32* @x.171
  %71 = load i32, i32* @y.172
  %72 = add i32 %70, -776981540
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -776981540
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %299

; <label>:84:                                     ; preds = %69, %299
  %85 = load %struct.q_t*, %struct.q_t** %34, align 8
  %86 = call %struct.q_t* @_ZSt11__addressofI3q_tEPT_RS1_(%struct.q_t* dereferenceable(40) %85) #3
  %87 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %31) #3
  %88 = load i32, i32* @x.171
  %89 = load i32, i32* @y.172
  %90 = add i32 %88, -1479935750
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -1479935750
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %299

; <label>:102:                                    ; preds = %84
  invoke void @_ZSt10_ConstructI3q_tJRKS0_EEvPT_DpOT0_(%struct.q_t* %86, %struct.q_t* dereferenceable(40) %87)
          to label %103 unwind label %108

; <label>:103:                                    ; preds = %102
  br label %104

; <label>:104:                                    ; preds = %103
  %105 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.32"* @_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.32"* %31) #3
  %106 = load %struct.q_t*, %struct.q_t** %34, align 8
  %107 = getelementptr inbounds %struct.q_t, %struct.q_t* %106, i32 1
  store %struct.q_t* %107, %struct.q_t** %34, align 8
  br label %67

; <label>:108:                                    ; preds = %102
  %109 = load i32, i32* @x.171
  %110 = load i32, i32* @y.172
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %303

; <label>:122:                                    ; preds = %108, %303
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %35, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %36, align 4
  %126 = load i32, i32* @x.171
  %127 = load i32, i32* @y.172
  %128 = sub i32 %126, 690084885
  %129 = sub i32 %128, 1
  %130 = add i32 %129, 690084885
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %303

; <label>:152:                                    ; preds = %122
  br label %153

; <label>:153:                                    ; preds = %152
  %154 = load i32, i32* @x.171
  %155 = load i32, i32* @y.172
  %156 = sub i32 %154, -1464844202
  %157 = sub i32 %156, 1
  %158 = add i32 %157, -1464844202
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  br i1 %166, label %168, label %307

; <label>:168:                                    ; preds = %153, %307
  %169 = load i8*, i8** %35, align 8
  %170 = call i8* @__cxa_begin_catch(i8* %169) #3
  %171 = load %struct.q_t*, %struct.q_t** %33, align 8
  %172 = load %struct.q_t*, %struct.q_t** %34, align 8
  %173 = load i32, i32* @x.171
  %174 = load i32, i32* @y.172
  %175 = sub i32 %173, -1853213077
  %176 = sub i32 %175, 1
  %177 = add i32 %176, -1853213077
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %307

; <label>:187:                                    ; preds = %168
  invoke void @_ZSt8_DestroyIP3q_tEvT_S2_(%struct.q_t* %171, %struct.q_t* %172)
          to label %188 unwind label %191

; <label>:188:                                    ; preds = %187
  invoke void @__cxa_rethrow() #13
          to label %288 unwind label %191

; <label>:189:                                    ; preds = %67
  %190 = load %struct.q_t*, %struct.q_t** %34, align 8
  ret %struct.q_t* %190

; <label>:191:                                    ; preds = %188, %187
  %192 = load i32, i32* @x.171
  %193 = load i32, i32* @y.172
  %194 = sub i32 %192, 855516733
  %195 = sub i32 %194, 1
  %196 = add i32 %195, 855516733
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = xor i1 %200, true
  %203 = xor i1 %201, true
  %204 = xor i1 true, true
  %205 = and i1 %202, true
  %206 = and i1 %200, %204
  %207 = and i1 %203, true
  %208 = and i1 %201, %204
  %209 = or i1 %205, %206
  %210 = or i1 %207, %208
  %211 = xor i1 %209, %210
  %212 = or i1 %202, %203
  %213 = xor i1 %212, true
  %214 = or i1 true, %204
  %215 = and i1 %213, %214
  %216 = or i1 %211, %215
  %217 = or i1 %200, %201
  br i1 %216, label %218, label %312

; <label>:218:                                    ; preds = %191, %312
  %219 = landingpad { i8*, i32 }
          cleanup
  %220 = extractvalue { i8*, i32 } %219, 0
  store i8* %220, i8** %35, align 8
  %221 = extractvalue { i8*, i32 } %219, 1
  store i32 %221, i32* %36, align 4
  %222 = load i32, i32* @x.171
  %223 = load i32, i32* @y.172
  %224 = sub i32 %222, -1525419462
  %225 = sub i32 %224, 1
  %226 = add i32 %225, -1525419462
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %312

; <label>:236:                                    ; preds = %218
  invoke void @__cxa_end_catch()
          to label %237 unwind label %285

; <label>:237:                                    ; preds = %236
  %238 = load i32, i32* @x.171
  %239 = load i32, i32* @y.172
  %240 = add i32 %238, 973367043
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 973367043
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 false, true
  %251 = and i1 %248, false
  %252 = and i1 %246, %250
  %253 = and i1 %249, false
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 false, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  br i1 %262, label %264, label %316

; <label>:264:                                    ; preds = %237, %316
  %265 = load i32, i32* @x.171
  %266 = load i32, i32* @y.172
  %267 = sub i32 0, 1
  %268 = add i32 %265, %267
  %269 = sub i32 %265, 1
  %270 = mul i32 %265, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %266, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %316

; <label>:278:                                    ; preds = %264
  br label %280
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:280:                                    ; preds = %278
  %281 = load i8*, i8** %35, align 8
  %282 = load i32, i32* %36, align 4
  %283 = insertvalue { i8*, i32 } undef, i8* %281, 0
  %284 = insertvalue { i8*, i32 } %283, i32 %282, 1
  resume { i8*, i32 } %284

; <label>:285:                                    ; preds = %236
  %286 = landingpad { i8*, i32 }
          catch i8* null
  %287 = extractvalue { i8*, i32 } %286, 0
  call void @__clang_call_terminate(i8* %287) #7
  unreachable

; <label>:288:                                    ; preds = %188
  unreachable

; <label>:289:                                    ; preds = %30, %3
  %290 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %291 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %292 = alloca %struct.q_t*, align 8
  %293 = alloca %struct.q_t*, align 8
  %294 = alloca i8*
  %295 = alloca i32
  %296 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %290, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %296, align 8
  %297 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %291, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %297, align 8
  store %struct.q_t* %2, %struct.q_t** %292, align 8
  %298 = load %struct.q_t*, %struct.q_t** %292, align 8
  store %struct.q_t* %298, %struct.q_t** %293, align 8
  br label %30

; <label>:299:                                    ; preds = %84, %69
  %300 = load %struct.q_t*, %struct.q_t** %34, align 8
  %301 = call %struct.q_t* @_ZSt11__addressofI3q_tEPT_RS1_(%struct.q_t* dereferenceable(40) %300) #3
  %302 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %31) #3
  br label %84

; <label>:303:                                    ; preds = %122, %108
  %304 = landingpad { i8*, i32 }
          catch i8* null
  %305 = extractvalue { i8*, i32 } %304, 0
  store i8* %305, i8** %35, align 8
  %306 = extractvalue { i8*, i32 } %304, 1
  store i32 %306, i32* %36, align 4
  br label %122

; <label>:307:                                    ; preds = %168, %153
  %308 = load i8*, i8** %35, align 8
  %309 = call i8* @__cxa_begin_catch(i8* %308) #3
  %310 = load %struct.q_t*, %struct.q_t** %33, align 8
  %311 = load %struct.q_t*, %struct.q_t** %34, align 8
  br label %168

; <label>:312:                                    ; preds = %218, %191
  %313 = landingpad { i8*, i32 }
          cleanup
  %314 = extractvalue { i8*, i32 } %313, 0
  store i8* %314, i8** %35, align 8
  %315 = extractvalue { i8*, i32 } %313, 1
  store i32 %315, i32* %36, align 4
  br label %218

; <label>:316:                                    ; preds = %264, %237
  br label %264
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPK3q_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.173
  %7 = load i32, i32* @y.174
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -910388878, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -910388878, label %19
    i32 393994938, label %27
    i32 208775515, label %63
    i32 1173944975, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 393994938, i32 1173944975
  store i32 %26, i32* %15
  br label %75

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %28, align 8
  %31 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %30) #3
  %32 = load %struct.q_t*, %struct.q_t** %31, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %29, align 8
  %34 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %33) #3
  %35 = load %struct.q_t*, %struct.q_t** %34, align 8
  %36 = icmp ne %struct.q_t* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.173
  %38 = load i32, i32* @y.174
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 208775515, i32 1173944975
  store i32 %62, i32* %15
  br label %75

; <label>:63:                                     ; preds = %16
  %64 = load volatile i1, i1* %3
  ret i1 %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %66, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %67, align 8
  %68 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %66, align 8
  %69 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %68) #3
  %70 = load %struct.q_t*, %struct.q_t** %69, align 8
  %71 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %67, align 8
  %72 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %71) #3
  %73 = load %struct.q_t*, %struct.q_t** %72, align 8
  %74 = icmp ne %struct.q_t* %70, %73
  store i32 393994938, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructI3q_tJRKS0_EEvPT_DpOT0_(%struct.q_t*, %struct.q_t* dereferenceable(40)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.175
  %6 = load i32, i32* @y.176
  %7 = add i32 %5, -1526354049
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1526354049
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -90466438, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %87
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -90466438, label %19
    i32 -414287235, label %39
    i32 -1410294598, label %76
    i32 -2099695925, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %87

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -414287235, i32 -2099695925
  store i32 %38, i32* %15
  br label %87

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.q_t*, align 8
  %41 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %40, align 8
  store %struct.q_t* %1, %struct.q_t** %41, align 8
  %42 = load %struct.q_t*, %struct.q_t** %40, align 8
  %43 = bitcast %struct.q_t* %42 to i8*
  %44 = bitcast i8* %43 to %struct.q_t*
  %45 = load %struct.q_t*, %struct.q_t** %41, align 8
  %46 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40) %45) #3
  %47 = bitcast %struct.q_t* %44 to i8*
  %48 = bitcast %struct.q_t* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 40, i32 8, i1 false)
  %49 = load i32, i32* @x.175
  %50 = load i32, i32* @y.176
  %51 = add i32 %49, 196747326
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 196747326
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1410294598, i32 -2099695925
  store i32 %75, i32* %15
  br label %87

; <label>:76:                                     ; preds = %16
  ret void

; <label>:77:                                     ; preds = %16
  %78 = alloca %struct.q_t*, align 8
  %79 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %78, align 8
  store %struct.q_t* %1, %struct.q_t** %79, align 8
  %80 = load %struct.q_t*, %struct.q_t** %78, align 8
  %81 = bitcast %struct.q_t* %80 to i8*
  %82 = bitcast i8* %81 to %struct.q_t*
  %83 = load %struct.q_t*, %struct.q_t** %79, align 8
  %84 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40) %83) #3
  %85 = bitcast %struct.q_t* %82 to i8*
  %86 = bitcast %struct.q_t* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 40, i32 8, i1 false)
  store i32 -414287235, i32* %15
  br label %87

; <label>:87:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZSt11__addressofI3q_tEPT_RS1_(%struct.q_t* dereferenceable(40)) #0 comdat {
  %2 = alloca %struct.q_t*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.177
  %6 = load i32, i32* @y.178
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -705496398, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -705496398, label %18
    i32 -1854086354, label %38
    i32 -334650715, label %69
    i32 -500743742, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1854086354, i32 -500743742
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %39, align 8
  %40 = load %struct.q_t*, %struct.q_t** %39, align 8
  %41 = bitcast %struct.q_t* %40 to i8*
  %42 = bitcast i8* %41 to %struct.q_t*
  store %struct.q_t* %42, %struct.q_t** %2
  %43 = load i32, i32* @x.177
  %44 = load i32, i32* @y.178
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -334650715, i32 -500743742
  store i32 %68, i32* %14
  br label %76

; <label>:69:                                     ; preds = %15
  %70 = load volatile %struct.q_t*, %struct.q_t** %2
  ret %struct.q_t* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %72, align 8
  %73 = load %struct.q_t*, %struct.q_t** %72, align 8
  %74 = bitcast %struct.q_t* %73 to i8*
  %75 = bitcast i8* %74 to %struct.q_t*
  store i32 -1854086354, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  ret %struct.q_t* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.32"* @_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator.32"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  %6 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 1
  store %struct.q_t* %6, %struct.q_t** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.32"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP3q_tEvT_S2_(%struct.q_t*, %struct.q_t*) #2 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.183
  %6 = load i32, i32* @y.184
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -113468770, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -113468770, label %18
    i32 -1581721129, label %38
    i32 -1316558047, label %58
    i32 -142937048, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1581721129, i32 -142937048
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.q_t*, align 8
  %40 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %39, align 8
  store %struct.q_t* %1, %struct.q_t** %40, align 8
  %41 = load %struct.q_t*, %struct.q_t** %39, align 8
  %42 = load %struct.q_t*, %struct.q_t** %40, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP3q_tEEvT_S4_(%struct.q_t* %41, %struct.q_t* %42)
  %43 = load i32, i32* @x.183
  %44 = load i32, i32* @y.184
  %45 = sub i32 %43, 1597799526
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1597799526
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1316558047, i32 -142937048
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %struct.q_t*, align 8
  %61 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %60, align 8
  store %struct.q_t* %1, %struct.q_t** %61, align 8
  %62 = load %struct.q_t*, %struct.q_t** %60, align 8
  %63 = load %struct.q_t*, %struct.q_t** %61, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP3q_tEEvT_S4_(%struct.q_t* %62, %struct.q_t* %63)
  store i32 -1581721129, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"*) #0 comdat align 2 {
  %2 = alloca %struct.q_t**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.185
  %6 = load i32, i32* @y.186
  %7 = sub i32 %5, 1708561323
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1708561323
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -360625663, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -360625663, label %19
    i32 -1758256946, label %27
    i32 -100839834, label %58
    i32 -1121089391, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1758256946, i32 -1121089391
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %29, i32 0, i32 0
  store %struct.q_t** %30, %struct.q_t*** %2
  %31 = load i32, i32* @x.185
  %32 = load i32, i32* @y.186
  %33 = sub i32 %31, 1992934176
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1992934176
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -100839834, i32 -1121089391
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %struct.q_t**, %struct.q_t*** %2
  ret %struct.q_t** %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %62, i32 0, i32 0
  store i32 -1758256946, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40)) #0 comdat {
  %2 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %2, align 8
  %3 = load %struct.q_t*, %struct.q_t** %2, align 8
  ret %struct.q_t* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP3q_tEEvT_S4_(%struct.q_t*, %struct.q_t*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.189
  %6 = load i32, i32* @y.190
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2037646630, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2037646630, label %18
    i32 1754283036, label %38
    i32 1368605027, label %67
    i32 -1052374415, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1754283036, i32 -1052374415
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.q_t*, align 8
  %40 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %39, align 8
  store %struct.q_t* %1, %struct.q_t** %40, align 8
  %41 = load i32, i32* @x.189
  %42 = load i32, i32* @y.190
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1368605027, i32 -1052374415
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %struct.q_t*, align 8
  %70 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %69, align 8
  store %struct.q_t* %1, %struct.q_t** %70, align 8
  store i32 1754283036, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"*, %struct.q_t** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.191
  %6 = load i32, i32* @y.192
  %7 = add i32 %5, 66595221
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 66595221
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 846357932, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 846357932, label %19
    i32 -1877525108, label %27
    i32 766692448, label %49
    i32 1292559195, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1877525108, i32 1292559195
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %29 = alloca %struct.q_t**, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %28, align 8
  store %struct.q_t** %1, %struct.q_t*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %30, i32 0, i32 0
  %32 = load %struct.q_t**, %struct.q_t*** %29, align 8
  %33 = load %struct.q_t*, %struct.q_t** %32, align 8
  store %struct.q_t* %33, %struct.q_t** %31, align 8
  %34 = load i32, i32* @x.191
  %35 = load i32, i32* @y.192
  %36 = sub i32 %34, -1414990143
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1414990143
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 766692448, i32 1292559195
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %52 = alloca %struct.q_t**, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %51, align 8
  store %struct.q_t** %1, %struct.q_t*** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %51, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %53, i32 0, i32 0
  %55 = load %struct.q_t**, %struct.q_t*** %52, align 8
  %56 = load %struct.q_t*, %struct.q_t** %55, align 8
  store %struct.q_t* %56, %struct.q_t** %54, align 8
  store i32 -1877525108, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3q_tEE10deallocateERS1_PS0_m(%"class.std::allocator"* dereferenceable(1), %struct.q_t*, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.q_t* %1, %struct.q_t** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.q_t*, %struct.q_t** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"* %8, %struct.q_t* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3q_tE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"*, %struct.q_t*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.195
  %7 = load i32, i32* @y.196
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1317050667, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1317050667, label %19
    i32 267631244, label %39
    i32 174277197, label %72
    i32 -1106732622, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 267631244, i32 -1106732622
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %41 = alloca %struct.q_t*, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %40, align 8
  store %struct.q_t* %1, %struct.q_t** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %40, align 8
  %44 = load %struct.q_t*, %struct.q_t** %41, align 8
  %45 = bitcast %struct.q_t* %44 to i8*
  call void @_ZdlPv(i8* %45) #3
  %46 = load i32, i32* @x.195
  %47 = load i32, i32* @y.196
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 174277197, i32 -1106732622
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %75 = alloca %struct.q_t*, align 8
  %76 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %74, align 8
  store %struct.q_t* %1, %struct.q_t** %75, align 8
  store i64 %2, i64* %76, align 8
  %77 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %74, align 8
  %78 = load %struct.q_t*, %struct.q_t** %75, align 8
  %79 = bitcast %struct.q_t* %78 to i8*
  call void @_ZdlPv(i8* %79) #3
  store i32 267631244, i32* %15
  br label %80

; <label>:80:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #10

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEEEvT_S8_(%struct.q_t*, %struct.q_t*) #2 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  %14 = load %struct.q_t*, %struct.q_t** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %6, i32 0, i32 0
  %16 = load %struct.q_t*, %struct.q_t** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS4_SaIS4_EEEEEEvT_SA_(%struct.q_t* %14, %struct.q_t* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS4_SaIS4_EEEEEEvT_SA_(%struct.q_t*, %struct.q_t*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %8 = alloca %struct.q_t*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  store %struct.q_t* %2, %struct.q_t** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %9, i32 0, i32 0
  %18 = load %struct.q_t*, %struct.q_t** %17, align 8
  %19 = call %struct.q_t* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%struct.q_t* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  %23 = load %struct.q_t*, %struct.q_t** %22, align 8
  %24 = call %struct.q_t* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%struct.q_t* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  %28 = load %struct.q_t*, %struct.q_t** %27, align 8
  %29 = call %struct.q_t* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(%struct.q_t* %28)
  %30 = call %struct.q_t* @_ZSt13__copy_move_aILb0EPK3q_tPS0_ET1_T0_S5_S4_(%struct.q_t* %19, %struct.q_t* %24, %struct.q_t* %29)
  store %struct.q_t* %30, %struct.q_t** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.33"* %4, %struct.q_t** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  %32 = load %struct.q_t*, %struct.q_t** %31, align 8
  ret %struct.q_t* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%struct.q_t*) #2 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  %9 = load %struct.q_t*, %struct.q_t** %8, align 8
  %10 = call %struct.q_t* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES8_(%struct.q_t* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  store %struct.q_t* %10, %struct.q_t** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %13 = load %struct.q_t*, %struct.q_t** %12, align 8
  ret %struct.q_t* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt13__copy_move_aILb0EPK3q_tPS0_ET1_T0_S5_S4_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %struct.q_t*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.205
  %8 = load i32, i32* @y.206
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1752491802, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %86
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1752491802, label %20
    i32 2052058696, label %40
    i32 -1284007829, label %75
    i32 -1629111722, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %86

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2052058696, i32 -1629111722
  store i32 %39, i32* %16
  br label %86

; <label>:40:                                     ; preds = %17
  %41 = alloca %struct.q_t*, align 8
  %42 = alloca %struct.q_t*, align 8
  %43 = alloca %struct.q_t*, align 8
  %44 = alloca i8, align 1
  store %struct.q_t* %0, %struct.q_t** %41, align 8
  store %struct.q_t* %1, %struct.q_t** %42, align 8
  store %struct.q_t* %2, %struct.q_t** %43, align 8
  store i8 0, i8* %44, align 1
  %45 = load %struct.q_t*, %struct.q_t** %41, align 8
  %46 = load %struct.q_t*, %struct.q_t** %42, align 8
  %47 = load %struct.q_t*, %struct.q_t** %43, align 8
  %48 = call %struct.q_t* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK3q_tPS3_EET0_T_S8_S7_(%struct.q_t* %45, %struct.q_t* %46, %struct.q_t* %47)
  store %struct.q_t* %48, %struct.q_t** %4
  %49 = load i32, i32* @x.205
  %50 = load i32, i32* @y.206
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1284007829, i32 -1629111722
  store i32 %74, i32* %16
  br label %86

; <label>:75:                                     ; preds = %17
  %76 = load volatile %struct.q_t*, %struct.q_t** %4
  ret %struct.q_t* %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %struct.q_t*, align 8
  %79 = alloca %struct.q_t*, align 8
  %80 = alloca %struct.q_t*, align 8
  %81 = alloca i8, align 1
  store %struct.q_t* %0, %struct.q_t** %78, align 8
  store %struct.q_t* %1, %struct.q_t** %79, align 8
  store %struct.q_t* %2, %struct.q_t** %80, align 8
  store i8 0, i8* %81, align 1
  %82 = load %struct.q_t*, %struct.q_t** %78, align 8
  %83 = load %struct.q_t*, %struct.q_t** %79, align 8
  %84 = load %struct.q_t*, %struct.q_t** %80, align 8
  %85 = call %struct.q_t* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK3q_tPS3_EET0_T_S8_S7_(%struct.q_t* %82, %struct.q_t* %83, %struct.q_t* %84)
  store i32 2052058696, i32* %16
  br label %86

; <label>:86:                                     ; preds = %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%struct.q_t*) #2 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %8 = load %struct.q_t*, %struct.q_t** %7, align 8
  %9 = call %struct.q_t* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES8_(%struct.q_t* %8)
  ret %struct.q_t* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(%struct.q_t*) #2 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  %8 = load %struct.q_t*, %struct.q_t** %7, align 8
  %9 = call %struct.q_t* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(%struct.q_t* %8)
  ret %struct.q_t* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.33"*, %struct.q_t** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.211
  %6 = load i32, i32* @y.212
  %7 = sub i32 %5, -942373206
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -942373206
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1203903367, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1203903367, label %19
    i32 245727018, label %27
    i32 -1792212307, label %61
    i32 863533705, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 245727018, i32 863533705
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %29 = alloca %struct.q_t**, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  store %struct.q_t** %1, %struct.q_t*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %30, i32 0, i32 0
  %32 = load %struct.q_t**, %struct.q_t*** %29, align 8
  %33 = load %struct.q_t*, %struct.q_t** %32, align 8
  store %struct.q_t* %33, %struct.q_t** %31, align 8
  %34 = load i32, i32* @x.211
  %35 = load i32, i32* @y.212
  %36 = sub i32 %34, -706316746
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -706316746
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1792212307, i32 863533705
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %64 = alloca %struct.q_t**, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %63, align 8
  store %struct.q_t** %1, %struct.q_t*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %65, i32 0, i32 0
  %67 = load %struct.q_t**, %struct.q_t*** %64, align 8
  %68 = load %struct.q_t*, %struct.q_t** %67, align 8
  store %struct.q_t* %68, %struct.q_t** %66, align 8
  store i32 245727018, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK3q_tPS3_EET0_T_S8_S7_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %struct.q_t**
  %6 = alloca %struct.q_t**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.213
  %10 = load i32, i32* @y.214
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 61467019, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %250
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 61467019, label %22
    i32 1953207659, label %42
    i32 2047436550, label %87
    i32 2124734408, label %88
    i32 -1469893349, label %93
    i32 100226729, label %108
    i32 -1761821049, label %135
    i32 -1616467308, label %157
    i32 -639161469, label %158
    i32 1663710951, label %161
    i32 -1798048744, label %214
  ]

; <label>:21:                                     ; preds = %19
  br label %250

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1953207659, i32 1663710951
  store i32 %41, i32* %18
  br label %250

; <label>:42:                                     ; preds = %19
  %43 = alloca %struct.q_t*, align 8
  store %struct.q_t** %43, %struct.q_t*** %6
  %44 = alloca %struct.q_t*, align 8
  %45 = alloca %struct.q_t*, align 8
  store %struct.q_t** %45, %struct.q_t*** %5
  %46 = alloca i64, align 8
  store i64* %46, i64** %4
  %47 = load volatile %struct.q_t**, %struct.q_t*** %6
  store %struct.q_t* %0, %struct.q_t** %47, align 8
  store %struct.q_t* %1, %struct.q_t** %44, align 8
  %48 = load volatile %struct.q_t**, %struct.q_t*** %5
  store %struct.q_t* %2, %struct.q_t** %48, align 8
  %49 = load %struct.q_t*, %struct.q_t** %44, align 8
  %50 = load volatile %struct.q_t**, %struct.q_t*** %6
  %51 = load %struct.q_t*, %struct.q_t** %50, align 8
  %52 = ptrtoint %struct.q_t* %49 to i64
  %53 = ptrtoint %struct.q_t* %51 to i64
  %54 = add i64 %52, 1597290769264497399
  %55 = sub i64 %54, %53
  %56 = sub i64 %55, 1597290769264497399
  %57 = sub i64 %52, %53
  %58 = sdiv exact i64 %56, 40
  %59 = load volatile i64*, i64** %4
  store i64 %58, i64* %59, align 8
  %60 = load i32, i32* @x.213
  %61 = load i32, i32* @y.214
  %62 = sub i32 %60, -1288243298
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1288243298
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 2047436550, i32 1663710951
  store i32 %86, i32* %18
  br label %250

; <label>:87:                                     ; preds = %19
  store i32 2124734408, i32* %18
  br label %250

; <label>:88:                                     ; preds = %19
  %89 = load volatile i64*, i64** %4
  %90 = load i64, i64* %89, align 8
  %91 = icmp sgt i64 %90, 0
  %92 = select i1 %91, i32 -1469893349, i32 -639161469
  store i32 %92, i32* %18
  br label %250

; <label>:93:                                     ; preds = %19
  %94 = load volatile %struct.q_t**, %struct.q_t*** %6
  %95 = load %struct.q_t*, %struct.q_t** %94, align 8
  %96 = load volatile %struct.q_t**, %struct.q_t*** %5
  %97 = load %struct.q_t*, %struct.q_t** %96, align 8
  %98 = bitcast %struct.q_t* %97 to i8*
  %99 = bitcast %struct.q_t* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 40, i32 8, i1 false)
  %100 = load volatile %struct.q_t**, %struct.q_t*** %6
  %101 = load %struct.q_t*, %struct.q_t** %100, align 8
  %102 = getelementptr inbounds %struct.q_t, %struct.q_t* %101, i32 1
  %103 = load volatile %struct.q_t**, %struct.q_t*** %6
  store %struct.q_t* %102, %struct.q_t** %103, align 8
  %104 = load volatile %struct.q_t**, %struct.q_t*** %5
  %105 = load %struct.q_t*, %struct.q_t** %104, align 8
  %106 = getelementptr inbounds %struct.q_t, %struct.q_t* %105, i32 1
  %107 = load volatile %struct.q_t**, %struct.q_t*** %5
  store %struct.q_t* %106, %struct.q_t** %107, align 8
  store i32 100226729, i32* %18
  br label %250

; <label>:108:                                    ; preds = %19
  %109 = load i32, i32* @x.213
  %110 = load i32, i32* @y.214
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1761821049, i32 -1798048744
  store i32 %134, i32* %18
  br label %250

; <label>:135:                                    ; preds = %19
  %136 = load volatile i64*, i64** %4
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 6066657499947856552
  %139 = add i64 %138, -1
  %140 = sub i64 %139, 6066657499947856552
  %141 = add nsw i64 %137, -1
  %142 = load volatile i64*, i64** %4
  store i64 %140, i64* %142, align 8
  %143 = load i32, i32* @x.213
  %144 = load i32, i32* @y.214
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  %156 = select i1 %154, i32 -1616467308, i32 -1798048744
  store i32 %156, i32* %18
  br label %250

; <label>:157:                                    ; preds = %19
  store i32 2124734408, i32* %18
  br label %250

; <label>:158:                                    ; preds = %19
  %159 = load volatile %struct.q_t**, %struct.q_t*** %5
  %160 = load %struct.q_t*, %struct.q_t** %159, align 8
  ret %struct.q_t* %160

; <label>:161:                                    ; preds = %19
  %162 = alloca %struct.q_t*, align 8
  %163 = alloca %struct.q_t*, align 8
  %164 = alloca %struct.q_t*, align 8
  %165 = alloca i64, align 8
  store %struct.q_t* %0, %struct.q_t** %162, align 8
  store %struct.q_t* %1, %struct.q_t** %163, align 8
  store %struct.q_t* %2, %struct.q_t** %164, align 8
  %166 = load %struct.q_t*, %struct.q_t** %163, align 8
  %167 = load %struct.q_t*, %struct.q_t** %162, align 8
  %168 = ptrtoint %struct.q_t* %166 to i64
  %169 = ptrtoint %struct.q_t* %167 to i64
  %170 = add i64 %168, -1570139300246015305
  %171 = sub i64 %170, %169
  %172 = sub i64 %171, -1570139300246015305
  %173 = sub i64 %168, %169
  %174 = add i64 %172, -2438940482030244922
  %175 = sub i64 %174, 40
  %176 = sub i64 %175, -2438940482030244922
  %177 = sub i64 %172, 40
  %178 = mul i64 %176, 40
  %179 = shl i64 %172, 40
  %180 = add i64 %172, 3168337552035642026
  %181 = sub i64 %180, 40
  %182 = sub i64 %181, 3168337552035642026
  %183 = sub i64 %172, 40
  %184 = mul i64 %182, 40
  %185 = sub i64 0, 40
  %186 = add i64 %172, %185
  %187 = sub i64 %172, 40
  %188 = mul i64 %186, 40
  %189 = add i64 %172, 141162689075732983
  %190 = sub i64 %189, 40
  %191 = sub i64 %190, 141162689075732983
  %192 = sub i64 %172, 40
  %193 = mul i64 %191, 40
  %194 = add i64 0, 7217446927471788421
  %195 = sub i64 %194, %172
  %196 = sub i64 %195, 7217446927471788421
  %197 = sub i64 0, %172
  %198 = sub i64 0, 40
  %199 = sub i64 %196, %198
  %200 = add i64 %196, 40
  %201 = sub i64 %172, 6286691489033830552
  %202 = sub i64 %201, 40
  %203 = add i64 %202, 6286691489033830552
  %204 = sub i64 %172, 40
  %205 = mul i64 %203, 40
  %206 = sub i64 0, %172
  %207 = add i64 0, %206
  %208 = sub i64 0, %172
  %209 = add i64 %207, 5934856931460951443
  %210 = add i64 %209, 40
  %211 = sub i64 %210, 5934856931460951443
  %212 = add i64 %207, 40
  %213 = sdiv exact i64 %172, 40
  store i64 %213, i64* %165, align 8
  store i32 1953207659, i32* %18
  br label %250

; <label>:214:                                    ; preds = %19
  %215 = load volatile i64*, i64** %4
  %216 = load i64, i64* %215, align 8
  %217 = sub i64 %216, 5618294743745407207
  %218 = sub i64 %217, -1
  %219 = add i64 %218, 5618294743745407207
  %220 = sub i64 %216, -1
  %221 = mul i64 %219, -1
  %222 = add i64 0, 7936491883225550881
  %223 = sub i64 %222, %216
  %224 = sub i64 %223, 7936491883225550881
  %225 = sub i64 0, %216
  %226 = sub i64 0, %224
  %227 = sub i64 0, -1
  %228 = add i64 %226, %227
  %229 = sub i64 0, %228
  %230 = add i64 %224, -1
  %231 = sub i64 0, -1
  %232 = add i64 %216, %231
  %233 = sub i64 %216, -1
  %234 = mul i64 %232, -1
  %235 = sub i64 0, %216
  %236 = add i64 0, %235
  %237 = sub i64 0, %216
  %238 = sub i64 0, -1
  %239 = sub i64 %236, %238
  %240 = add i64 %236, -1
  %241 = sub i64 0, -1
  %242 = add i64 %216, %241
  %243 = sub i64 %216, -1
  %244 = mul i64 %242, -1
  %245 = add i64 %216, -9080972324375021894
  %246 = add i64 %245, -1
  %247 = sub i64 %246, -9080972324375021894
  %248 = add nsw i64 %216, -1
  %249 = load volatile i64*, i64** %4
  store i64 %247, i64* %249, align 8
  store i32 -1761821049, i32* %18
  br label %250

; <label>:250:                                    ; preds = %214, %161, %157, %135, %108, %93, %88, %87, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES8_(%struct.q_t*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %3, align 8
  %4 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %2) #3
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  ret %struct.q_t* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(%struct.q_t*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %3, align 8
  %4 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %2) #3
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  ret %struct.q_t* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  ret %struct.q_t** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES8_(%struct.q_t*) #0 comdat align 2 {
  %2 = alloca %struct.q_t*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.221
  %6 = load i32, i32* @y.222
  %7 = add i32 %5, -1494503010
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1494503010
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1366371266, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1366371266, label %19
    i32 35958041, label %27
    i32 -37988754, label %49
    i32 2012735977, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 35958041, i32 2012735977
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %29, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %28 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %28, i32 0, i32 0
  %34 = load %struct.q_t*, %struct.q_t** %33, align 8
  store %struct.q_t* %34, %struct.q_t** %2
  %35 = load i32, i32* @x.221
  %36 = load i32, i32* @y.222
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -37988754, i32 2012735977
  store i32 %48, i32* %15
  br label %59

; <label>:49:                                     ; preds = %16
  %50 = load volatile %struct.q_t*, %struct.q_t** %2
  ret %struct.q_t* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %53, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %54, align 8
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %52 to i8*
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 8, i1 false)
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %52, i32 0, i32 0
  %58 = load %struct.q_t*, %struct.q_t** %57, align 8
  store i32 35958041, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt14__copy_move_a2ILb0EP3q_tS1_ET1_T0_S3_S2_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %struct.q_t*, align 8
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %4, align 8
  store %struct.q_t* %1, %struct.q_t** %5, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  %7 = load %struct.q_t*, %struct.q_t** %4, align 8
  %8 = call %struct.q_t* @_ZSt12__niter_baseIP3q_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.q_t* %7)
  %9 = load %struct.q_t*, %struct.q_t** %5, align 8
  %10 = call %struct.q_t* @_ZSt12__niter_baseIP3q_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.q_t* %9)
  %11 = load %struct.q_t*, %struct.q_t** %6, align 8
  %12 = call %struct.q_t* @_ZSt12__niter_baseIP3q_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.q_t* %11)
  %13 = call %struct.q_t* @_ZSt13__copy_move_aILb0EP3q_tS1_ET1_T0_S3_S2_(%struct.q_t* %8, %struct.q_t* %10, %struct.q_t* %12)
  ret %struct.q_t* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZSt12__miter_baseIP3q_tENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.q_t*) #0 comdat {
  %2 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %2, align 8
  %3 = load %struct.q_t*, %struct.q_t** %2, align 8
  %4 = call %struct.q_t* @_ZNSt10_Iter_baseIP3q_tLb0EE7_S_baseES1_(%struct.q_t* %3)
  ret %struct.q_t* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt13__copy_move_aILb0EP3q_tS1_ET1_T0_S3_S2_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %struct.q_t*, align 8
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca i8, align 1
  store %struct.q_t* %0, %struct.q_t** %4, align 8
  store %struct.q_t* %1, %struct.q_t** %5, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %struct.q_t*, %struct.q_t** %4, align 8
  %9 = load %struct.q_t*, %struct.q_t** %5, align 8
  %10 = load %struct.q_t*, %struct.q_t** %6, align 8
  %11 = call %struct.q_t* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP3q_tS4_EET0_T_S6_S5_(%struct.q_t* %8, %struct.q_t* %9, %struct.q_t* %10)
  ret %struct.q_t* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt12__niter_baseIP3q_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.q_t*) #2 comdat {
  %2 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %2, align 8
  %3 = load %struct.q_t*, %struct.q_t** %2, align 8
  %4 = call %struct.q_t* @_ZNSt10_Iter_baseIP3q_tLb0EE7_S_baseES1_(%struct.q_t* %3)
  ret %struct.q_t* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP3q_tS4_EET0_T_S6_S5_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #0 comdat align 2 {
  %4 = alloca %struct.q_t*
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca i64, align 8
  store %struct.q_t* %0, %struct.q_t** %5, align 8
  store %struct.q_t* %1, %struct.q_t** %6, align 8
  store %struct.q_t* %2, %struct.q_t** %7, align 8
  %9 = load %struct.q_t*, %struct.q_t** %6, align 8
  %10 = load %struct.q_t*, %struct.q_t** %5, align 8
  %11 = ptrtoint %struct.q_t* %9 to i64
  %12 = ptrtoint %struct.q_t* %10 to i64
  %13 = add i64 %11, 4686413606128861975
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 4686413606128861975
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 40
  store i64 %17, i64* %8, align 8
  %18 = alloca i32
  store i32 -42997328, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %164
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -42997328, label %22
    i32 -671481788, label %26
    i32 -735686961, label %35
    i32 661215856, label %50
    i32 1670969973, label %82
    i32 -1952463019, label %83
    i32 1863649736, label %99
    i32 983192930, label %116
    i32 -1354417186, label %118
    i32 1324147604, label %162
  ]

; <label>:21:                                     ; preds = %19
  br label %164

; <label>:22:                                     ; preds = %19
  %23 = load i64, i64* %8, align 8
  %24 = icmp sgt i64 %23, 0
  %25 = select i1 %24, i32 -671481788, i32 -1952463019
  store i32 %25, i32* %18
  br label %164

; <label>:26:                                     ; preds = %19
  %27 = load %struct.q_t*, %struct.q_t** %5, align 8
  %28 = load %struct.q_t*, %struct.q_t** %7, align 8
  %29 = bitcast %struct.q_t* %28 to i8*
  %30 = bitcast %struct.q_t* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 40, i32 8, i1 false)
  %31 = load %struct.q_t*, %struct.q_t** %5, align 8
  %32 = getelementptr inbounds %struct.q_t, %struct.q_t* %31, i32 1
  store %struct.q_t* %32, %struct.q_t** %5, align 8
  %33 = load %struct.q_t*, %struct.q_t** %7, align 8
  %34 = getelementptr inbounds %struct.q_t, %struct.q_t* %33, i32 1
  store %struct.q_t* %34, %struct.q_t** %7, align 8
  store i32 -735686961, i32* %18
  br label %164

; <label>:35:                                     ; preds = %19
  %36 = load i32, i32* @x.231
  %37 = load i32, i32* @y.232
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 661215856, i32 -1354417186
  store i32 %49, i32* %18
  br label %164

; <label>:50:                                     ; preds = %19
  %51 = load i64, i64* %8, align 8
  %52 = add i64 %51, 6432356082334589647
  %53 = add i64 %52, -1
  %54 = sub i64 %53, 6432356082334589647
  %55 = add nsw i64 %51, -1
  store i64 %54, i64* %8, align 8
  %56 = load i32, i32* @x.231
  %57 = load i32, i32* @y.232
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1670969973, i32 -1354417186
  store i32 %81, i32* %18
  br label %164

; <label>:82:                                     ; preds = %19
  store i32 -42997328, i32* %18
  br label %164

; <label>:83:                                     ; preds = %19
  %84 = load i32, i32* @x.231
  %85 = load i32, i32* @y.232
  %86 = add i32 %84, -1570380440
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -1570380440
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 1863649736, i32 1324147604
  store i32 %98, i32* %18
  br label %164

; <label>:99:                                     ; preds = %19
  %100 = load %struct.q_t*, %struct.q_t** %7, align 8
  store %struct.q_t* %100, %struct.q_t** %4
  %101 = load i32, i32* @x.231
  %102 = load i32, i32* @y.232
  %103 = sub i32 %101, -1418486983
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -1418486983
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  %115 = select i1 %113, i32 983192930, i32 1324147604
  store i32 %115, i32* %18
  br label %164

; <label>:116:                                    ; preds = %19
  %117 = load volatile %struct.q_t*, %struct.q_t** %4
  ret %struct.q_t* %117

; <label>:118:                                    ; preds = %19
  %119 = load i64, i64* %8, align 8
  %120 = sub i64 0, -1
  %121 = add i64 %119, %120
  %122 = sub i64 %119, -1
  %123 = mul i64 %121, -1
  %124 = sub i64 0, -1131388251697818711
  %125 = sub i64 %124, %119
  %126 = add i64 %125, -1131388251697818711
  %127 = sub i64 0, %119
  %128 = add i64 %126, 744028739182605737
  %129 = add i64 %128, -1
  %130 = sub i64 %129, 744028739182605737
  %131 = add i64 %126, -1
  %132 = sub i64 %119, -667611878272099189
  %133 = sub i64 %132, -1
  %134 = add i64 %133, -667611878272099189
  %135 = sub i64 %119, -1
  %136 = mul i64 %134, -1
  %137 = add i64 0, -6985846646932688782
  %138 = sub i64 %137, %119
  %139 = sub i64 %138, -6985846646932688782
  %140 = sub i64 0, %119
  %141 = sub i64 0, %139
  %142 = sub i64 0, -1
  %143 = add i64 %141, %142
  %144 = sub i64 0, %143
  %145 = add i64 %139, -1
  %146 = sub i64 0, 544131333401713943
  %147 = sub i64 %146, %119
  %148 = add i64 %147, 544131333401713943
  %149 = sub i64 0, %119
  %150 = sub i64 0, -1
  %151 = sub i64 %148, %150
  %152 = add i64 %148, -1
  %153 = sub i64 %119, 3165362645076376424
  %154 = sub i64 %153, -1
  %155 = add i64 %154, 3165362645076376424
  %156 = sub i64 %119, -1
  %157 = mul i64 %155, -1
  %158 = add i64 %119, 6196075874805115978
  %159 = add i64 %158, -1
  %160 = sub i64 %159, 6196075874805115978
  %161 = add nsw i64 %119, -1
  store i64 %160, i64* %8, align 8
  store i32 661215856, i32* %18
  br label %164

; <label>:162:                                    ; preds = %19
  %163 = load %struct.q_t*, %struct.q_t** %7, align 8
  store i32 1863649736, i32* %18
  br label %164

; <label>:164:                                    ; preds = %162, %118, %99, %83, %82, %50, %35, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNSt10_Iter_baseIP3q_tLb0EE7_S_baseES1_(%struct.q_t*) #0 comdat align 2 {
  %2 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %2, align 8
  %3 = load %struct.q_t*, %struct.q_t** %2, align 8
  ret %struct.q_t* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt18uninitialized_copyIP3q_tS1_ET0_T_S3_S2_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %struct.q_t*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.235
  %8 = load i32, i32* @y.236
  %9 = add i32 %7, -127890934
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -127890934
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1708558935, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1708558935, label %21
    i32 -682778511, label %29
    i32 -1629869622, label %53
    i32 266839631, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -682778511, i32 266839631
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %struct.q_t*, align 8
  %31 = alloca %struct.q_t*, align 8
  %32 = alloca %struct.q_t*, align 8
  %33 = alloca i8, align 1
  store %struct.q_t* %0, %struct.q_t** %30, align 8
  store %struct.q_t* %1, %struct.q_t** %31, align 8
  store %struct.q_t* %2, %struct.q_t** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %struct.q_t*, %struct.q_t** %30, align 8
  %35 = load %struct.q_t*, %struct.q_t** %31, align 8
  %36 = load %struct.q_t*, %struct.q_t** %32, align 8
  %37 = call %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP3q_tS3_EET0_T_S5_S4_(%struct.q_t* %34, %struct.q_t* %35, %struct.q_t* %36)
  store %struct.q_t* %37, %struct.q_t** %4
  %38 = load i32, i32* @x.235
  %39 = load i32, i32* @y.236
  %40 = add i32 %38, 712708935
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 712708935
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1629869622, i32 266839631
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile %struct.q_t*, %struct.q_t** %4
  ret %struct.q_t* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %struct.q_t*, align 8
  %57 = alloca %struct.q_t*, align 8
  %58 = alloca %struct.q_t*, align 8
  %59 = alloca i8, align 1
  store %struct.q_t* %0, %struct.q_t** %56, align 8
  store %struct.q_t* %1, %struct.q_t** %57, align 8
  store %struct.q_t* %2, %struct.q_t** %58, align 8
  store i8 1, i8* %59, align 1
  %60 = load %struct.q_t*, %struct.q_t** %56, align 8
  %61 = load %struct.q_t*, %struct.q_t** %57, align 8
  %62 = load %struct.q_t*, %struct.q_t** %58, align 8
  %63 = call %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP3q_tS3_EET0_T_S5_S4_(%struct.q_t* %60, %struct.q_t* %61, %struct.q_t* %62)
  store i32 -682778511, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP3q_tS3_EET0_T_S5_S4_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.237
  %5 = load i32, i32* @y.238
  %6 = add i32 %4, -90517201
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -90517201
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %336

; <label>:18:                                     ; preds = %3, %336
  %19 = alloca %struct.q_t*, align 8
  %20 = alloca %struct.q_t*, align 8
  %21 = alloca %struct.q_t*, align 8
  %22 = alloca %struct.q_t*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %struct.q_t* %0, %struct.q_t** %19, align 8
  store %struct.q_t* %1, %struct.q_t** %20, align 8
  store %struct.q_t* %2, %struct.q_t** %21, align 8
  %25 = load %struct.q_t*, %struct.q_t** %21, align 8
  store %struct.q_t* %25, %struct.q_t** %22, align 8
  %26 = load i32, i32* @x.237
  %27 = load i32, i32* @y.238
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %336

; <label>:51:                                     ; preds = %18
  br label %52

; <label>:52:                                     ; preds = %115, %51
  %53 = load i32, i32* @x.237
  %54 = load i32, i32* @y.238
  %55 = add i32 %53, 681056960
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 681056960
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %344

; <label>:79:                                     ; preds = %52, %344
  %80 = load %struct.q_t*, %struct.q_t** %19, align 8
  %81 = load %struct.q_t*, %struct.q_t** %20, align 8
  %82 = icmp ne %struct.q_t* %80, %81
  %83 = load i32, i32* @x.237
  %84 = load i32, i32* @y.238
  %85 = sub i32 %83, 786271730
  %86 = sub i32 %85, 1
  %87 = add i32 %86, 786271730
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %344

; <label>:109:                                    ; preds = %79
  br i1 %82, label %110, label %130

; <label>:110:                                    ; preds = %109
  %111 = load %struct.q_t*, %struct.q_t** %22, align 8
  %112 = call %struct.q_t* @_ZSt11__addressofI3q_tEPT_RS1_(%struct.q_t* dereferenceable(40) %111) #3
  %113 = load %struct.q_t*, %struct.q_t** %19, align 8
  invoke void @_ZSt10_ConstructI3q_tJRS0_EEvPT_DpOT0_(%struct.q_t* %112, %struct.q_t* dereferenceable(40) %113)
          to label %114 unwind label %120

; <label>:114:                                    ; preds = %110
  br label %115

; <label>:115:                                    ; preds = %114
  %116 = load %struct.q_t*, %struct.q_t** %19, align 8
  %117 = getelementptr inbounds %struct.q_t, %struct.q_t* %116, i32 1
  store %struct.q_t* %117, %struct.q_t** %19, align 8
  %118 = load %struct.q_t*, %struct.q_t** %22, align 8
  %119 = getelementptr inbounds %struct.q_t, %struct.q_t* %118, i32 1
  store %struct.q_t* %119, %struct.q_t** %22, align 8
  br label %52

; <label>:120:                                    ; preds = %110
  %121 = landingpad { i8*, i32 }
          catch i8* null
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %23, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %24, align 4
  br label %124

; <label>:124:                                    ; preds = %120
  %125 = load i8*, i8** %23, align 8
  %126 = call i8* @__cxa_begin_catch(i8* %125) #3
  %127 = load %struct.q_t*, %struct.q_t** %21, align 8
  %128 = load %struct.q_t*, %struct.q_t** %22, align 8
  invoke void @_ZSt8_DestroyIP3q_tEvT_S2_(%struct.q_t* %127, %struct.q_t* %128)
          to label %129 unwind label %172

; <label>:129:                                    ; preds = %124
  invoke void @__cxa_rethrow() #13
          to label %281 unwind label %172

; <label>:130:                                    ; preds = %109
  %131 = load i32, i32* @x.237
  %132 = load i32, i32* @y.238
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 true, true
  %143 = and i1 %140, true
  %144 = and i1 %138, %142
  %145 = and i1 %141, true
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 true, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  br i1 %154, label %156, label %348

; <label>:156:                                    ; preds = %130, %348
  %157 = load %struct.q_t*, %struct.q_t** %22, align 8
  %158 = load i32, i32* @x.237
  %159 = load i32, i32* @y.238
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %348

; <label>:171:                                    ; preds = %156
  ret %struct.q_t* %157

; <label>:172:                                    ; preds = %129, %124
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %23, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %176 unwind label %236

; <label>:176:                                    ; preds = %172
  br label %231
                                                  ; No predecessors!
  %178 = load i32, i32* @x.237
  %179 = load i32, i32* @y.238
  %180 = sub i32 0, 1
  %181 = add i32 %178, %180
  %182 = sub i32 %178, 1
  %183 = mul i32 %178, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %179, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 true, true
  %190 = and i1 %187, true
  %191 = and i1 %185, %189
  %192 = and i1 %188, true
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 true, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  br i1 %201, label %203, label %350

; <label>:203:                                    ; preds = %177, %350
  call void @llvm.trap()
  %204 = load i32, i32* @x.237
  %205 = load i32, i32* @y.238
  %206 = add i32 %204, 1713512384
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, 1713512384
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 false, true
  %217 = and i1 %214, false
  %218 = and i1 %212, %216
  %219 = and i1 %215, false
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 false, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %350

; <label>:230:                                    ; preds = %203
  unreachable

; <label>:231:                                    ; preds = %176
  %232 = load i8*, i8** %23, align 8
  %233 = load i32, i32* %24, align 4
  %234 = insertvalue { i8*, i32 } undef, i8* %232, 0
  %235 = insertvalue { i8*, i32 } %234, i32 %233, 1
  resume { i8*, i32 } %235

; <label>:236:                                    ; preds = %172
  %237 = load i32, i32* @x.237
  %238 = load i32, i32* @y.238
  %239 = sub i32 %237, 826268736
  %240 = sub i32 %239, 1
  %241 = add i32 %240, 826268736
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  br i1 %249, label %251, label %351

; <label>:251:                                    ; preds = %236, %351
  %252 = landingpad { i8*, i32 }
          catch i8* null
  %253 = extractvalue { i8*, i32 } %252, 0
  call void @__clang_call_terminate(i8* %253) #7
  %254 = load i32, i32* @x.237
  %255 = load i32, i32* @y.238
  %256 = sub i32 %254, -148869749
  %257 = sub i32 %256, 1
  %258 = add i32 %257, -148869749
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = xor i1 %262, true
  %265 = xor i1 %263, true
  %266 = xor i1 false, true
  %267 = and i1 %264, false
  %268 = and i1 %262, %266
  %269 = and i1 %265, false
  %270 = and i1 %263, %266
  %271 = or i1 %267, %268
  %272 = or i1 %269, %270
  %273 = xor i1 %271, %272
  %274 = or i1 %264, %265
  %275 = xor i1 %274, true
  %276 = or i1 false, %266
  %277 = and i1 %275, %276
  %278 = or i1 %273, %277
  %279 = or i1 %262, %263
  br i1 %278, label %280, label %351

; <label>:280:                                    ; preds = %251
  unreachable

; <label>:281:                                    ; preds = %129
  %282 = load i32, i32* @x.237
  %283 = load i32, i32* @y.238
  %284 = add i32 %282, 463567846
  %285 = sub i32 %284, 1
  %286 = sub i32 %285, 463567846
  %287 = sub i32 %282, 1
  %288 = mul i32 %282, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %283, 10
  %292 = xor i1 %290, true
  %293 = xor i1 %291, true
  %294 = xor i1 false, true
  %295 = and i1 %292, false
  %296 = and i1 %290, %294
  %297 = and i1 %293, false
  %298 = and i1 %291, %294
  %299 = or i1 %295, %296
  %300 = or i1 %297, %298
  %301 = xor i1 %299, %300
  %302 = or i1 %292, %293
  %303 = xor i1 %302, true
  %304 = or i1 false, %294
  %305 = and i1 %303, %304
  %306 = or i1 %301, %305
  %307 = or i1 %290, %291
  br i1 %306, label %308, label %354

; <label>:308:                                    ; preds = %281, %354
  %309 = load i32, i32* @x.237
  %310 = load i32, i32* @y.238
  %311 = sub i32 %309, -1625978409
  %312 = sub i32 %311, 1
  %313 = add i32 %312, -1625978409
  %314 = sub i32 %309, 1
  %315 = mul i32 %309, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %310, 10
  %319 = xor i1 %317, true
  %320 = xor i1 %318, true
  %321 = xor i1 true, true
  %322 = and i1 %319, true
  %323 = and i1 %317, %321
  %324 = and i1 %320, true
  %325 = and i1 %318, %321
  %326 = or i1 %322, %323
  %327 = or i1 %324, %325
  %328 = xor i1 %326, %327
  %329 = or i1 %319, %320
  %330 = xor i1 %329, true
  %331 = or i1 true, %321
  %332 = and i1 %330, %331
  %333 = or i1 %328, %332
  %334 = or i1 %317, %318
  br i1 %333, label %335, label %354

; <label>:335:                                    ; preds = %308
  unreachable

; <label>:336:                                    ; preds = %18, %3
  %337 = alloca %struct.q_t*, align 8
  %338 = alloca %struct.q_t*, align 8
  %339 = alloca %struct.q_t*, align 8
  %340 = alloca %struct.q_t*, align 8
  %341 = alloca i8*
  %342 = alloca i32
  store %struct.q_t* %0, %struct.q_t** %337, align 8
  store %struct.q_t* %1, %struct.q_t** %338, align 8
  store %struct.q_t* %2, %struct.q_t** %339, align 8
  %343 = load %struct.q_t*, %struct.q_t** %339, align 8
  store %struct.q_t* %343, %struct.q_t** %340, align 8
  br label %18

; <label>:344:                                    ; preds = %79, %52
  %345 = load %struct.q_t*, %struct.q_t** %19, align 8
  %346 = load %struct.q_t*, %struct.q_t** %20, align 8
  %347 = icmp ne %struct.q_t* %345, %346
  br label %79

; <label>:348:                                    ; preds = %156, %130
  %349 = load %struct.q_t*, %struct.q_t** %22, align 8
  br label %156

; <label>:350:                                    ; preds = %203, %177
  call void @llvm.trap()
  br label %203

; <label>:351:                                    ; preds = %251, %236
  %352 = landingpad { i8*, i32 }
          catch i8* null
  %353 = extractvalue { i8*, i32 } %352, 0
  call void @__clang_call_terminate(i8* %353) #7
  br label %251

; <label>:354:                                    ; preds = %308, %281
  br label %308
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructI3q_tJRS0_EEvPT_DpOT0_(%struct.q_t*, %struct.q_t* dereferenceable(40)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.239
  %6 = load i32, i32* @y.240
  %7 = add i32 %5, 1069524959
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1069524959
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 132991867, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %87
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 132991867, label %19
    i32 -37285782, label %39
    i32 -1207617992, label %76
    i32 2110066112, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %87

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -37285782, i32 2110066112
  store i32 %38, i32* %15
  br label %87

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.q_t*, align 8
  %41 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %40, align 8
  store %struct.q_t* %1, %struct.q_t** %41, align 8
  %42 = load %struct.q_t*, %struct.q_t** %40, align 8
  %43 = bitcast %struct.q_t* %42 to i8*
  %44 = bitcast i8* %43 to %struct.q_t*
  %45 = load %struct.q_t*, %struct.q_t** %41, align 8
  %46 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIR3q_tEOT_RNSt16remove_referenceIS2_E4typeE(%struct.q_t* dereferenceable(40) %45) #3
  %47 = bitcast %struct.q_t* %44 to i8*
  %48 = bitcast %struct.q_t* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 40, i32 8, i1 false)
  %49 = load i32, i32* @x.239
  %50 = load i32, i32* @y.240
  %51 = add i32 %49, -1186373382
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1186373382
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1207617992, i32 2110066112
  store i32 %75, i32* %15
  br label %87

; <label>:76:                                     ; preds = %16
  ret void

; <label>:77:                                     ; preds = %16
  %78 = alloca %struct.q_t*, align 8
  %79 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %78, align 8
  store %struct.q_t* %1, %struct.q_t** %79, align 8
  %80 = load %struct.q_t*, %struct.q_t** %78, align 8
  %81 = bitcast %struct.q_t* %80 to i8*
  %82 = bitcast i8* %81 to %struct.q_t*
  %83 = load %struct.q_t*, %struct.q_t** %79, align 8
  %84 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIR3q_tEOT_RNSt16remove_referenceIS2_E4typeE(%struct.q_t* dereferenceable(40) %83) #3
  %85 = bitcast %struct.q_t* %82 to i8*
  %86 = bitcast %struct.q_t* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 40, i32 8, i1 false)
  store i32 -37285782, i32* %15
  br label %87

; <label>:87:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZSt7forwardIR3q_tEOT_RNSt16remove_referenceIS2_E4typeE(%struct.q_t* dereferenceable(40)) #0 comdat {
  %2 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %2, align 8
  %3 = load %struct.q_t*, %struct.q_t** %2, align 8
  ret %struct.q_t* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaI3q_tEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %3, i32 0, i32 0
  store %struct.q_t* null, %struct.q_t** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %3, i32 0, i32 1
  store %struct.q_t* null, %struct.q_t** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %3, i32 0, i32 2
  store %struct.q_t* null, %struct.q_t** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3q_tEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.247
  %5 = load i32, i32* @y.248
  %6 = add i32 %4, 1094512195
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1094512195
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1823956124, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1823956124, label %18
    i32 208520842, label %26
    i32 974865416, label %56
    i32 -2090937215, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 208520842, i32 -2090937215
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.247
  %30 = load i32, i32* @y.248
  %31 = sub i32 %29, -1125523147
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1125523147
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 974865416, i32 -2090937215
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %58, align 8
  store i32 208520842, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %struct.q_t*, %struct.q_t** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %struct.q_t*, %struct.q_t** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %struct.q_t*, %struct.q_t** %13, align 8
  %15 = ptrtoint %struct.q_t* %11 to i64
  %16 = ptrtoint %struct.q_t* %14 to i64
  %17 = add i64 %15, -6231443784300126482
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -6231443784300126482
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 40
  invoke void @_ZNSt12_Vector_baseI3q_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %5, %struct.q_t* %8, i64 %21)
          to label %22 unwind label %77

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.249
  %24 = load i32, i32* @y.250
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %84

; <label>:48:                                     ; preds = %22, %84
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %49) #3
  %50 = load i32, i32* @x.249
  %51 = load i32, i32* @y.250
  %52 = add i32 %50, -2014202348
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -2014202348
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %84

; <label>:76:                                     ; preds = %48
  ret void

; <label>:77:                                     ; preds = %1
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %3, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %4, align 4
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %81) #3
  br label %82

; <label>:82:                                     ; preds = %77
  %83 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %83) #7
  unreachable

; <label>:84:                                     ; preds = %48, %22
  %85 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %85) #3
  br label %48
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaI3q_tED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3q_tED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorI3q_tSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EEC2EOS2_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorI3q_tSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EEC2EOS2_(%"struct.std::_Vector_base"* %6, %"struct.std::_Vector_base"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.q_t*, %struct.q_t*) #2 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"struct.std::less", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI3q_tEEENS0_15_Iter_comp_iterIT_EES6_()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %6, i32 0, i32 0
  %18 = load %struct.q_t*, %struct.q_t** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  %20 = load %struct.q_t*, %struct.q_t** %19, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_T0_(%struct.q_t* %18, %struct.q_t* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EEC2EOS2_(%"struct.std::_Vector_base"*, %"struct.std::_Vector_base"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store %"struct.std::_Vector_base"* %1, %"struct.std::_Vector_base"** %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaI3q_tEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2EOS1_(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %6, %"class.std::allocator"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_impl12_M_swap_dataERS3_(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %10, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaI3q_tEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  ret %"class.std::allocator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2EOS1_(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaI3q_tEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator"* dereferenceable(1) %7) #3
  call void @_ZNSaI3q_tEC2ERKS0_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 0
  store %struct.q_t* null, %struct.q_t** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 1
  store %struct.q_t* null, %struct.q_t** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 2
  store %struct.q_t* null, %struct.q_t** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_impl12_M_swap_dataERS3_(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %1, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIP3q_tEvRT_S3_(%struct.q_t** dereferenceable(8) %6, %struct.q_t** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIP3q_tEvRT_S3_(%struct.q_t** dereferenceable(8) %9, %struct.q_t** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIP3q_tEvRT_S3_(%struct.q_t** dereferenceable(8) %12, %struct.q_t** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3q_tEC2ERKS0_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.269
  %6 = load i32, i32* @y.270
  %7 = add i32 %5, 1226588271
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1226588271
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2123052973, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2123052973, label %19
    i32 2027629489, label %27
    i32 1626707625, label %61
    i32 -1583835401, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2027629489, i32 -1583835401
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tEC2ERKS2_(%"class.__gnu_cxx::new_allocator"* %31, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.269
  %35 = load i32, i32* @y.270
  %36 = sub i32 %34, 1549094345
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1549094345
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1626707625, i32 -1583835401
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator"*, align 8
  %64 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %63, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %64, align 8
  %65 = load %"class.std::allocator"*, %"class.std::allocator"** %63, align 8
  %66 = bitcast %"class.std::allocator"* %65 to %"class.__gnu_cxx::new_allocator"*
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tEC2ERKS2_(%"class.__gnu_cxx::new_allocator"* %66, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %68) #3
  store i32 2027629489, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3q_tEC2ERKS2_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.271
  %6 = load i32, i32* @y.272
  %7 = sub i32 %5, 1345707186
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1345707186
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1400975181, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1400975181, label %19
    i32 831436064, label %39
    i32 842774614, label %58
    i32 -302602939, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 831436064, i32 -302602939
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %40, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %40, align 8
  %43 = load i32, i32* @x.271
  %44 = load i32, i32* @y.272
  %45 = add i32 %43, -1203012281
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1203012281
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 842774614, i32 -302602939
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %60, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %60, align 8
  store i32 831436064, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIP3q_tEvRT_S3_(%struct.q_t** dereferenceable(8), %struct.q_t** dereferenceable(8)) #0 comdat {
  %3 = alloca %struct.q_t**, align 8
  %4 = alloca %struct.q_t**, align 8
  %5 = alloca %struct.q_t*, align 8
  store %struct.q_t** %0, %struct.q_t*** %3, align 8
  store %struct.q_t** %1, %struct.q_t*** %4, align 8
  %6 = load %struct.q_t**, %struct.q_t*** %3, align 8
  %7 = call dereferenceable(8) %struct.q_t** @_ZSt4moveIRP3q_tEONSt16remove_referenceIT_E4typeEOS4_(%struct.q_t** dereferenceable(8) %6) #3
  %8 = load %struct.q_t*, %struct.q_t** %7, align 8
  store %struct.q_t* %8, %struct.q_t** %5, align 8
  %9 = load %struct.q_t**, %struct.q_t*** %4, align 8
  %10 = call dereferenceable(8) %struct.q_t** @_ZSt4moveIRP3q_tEONSt16remove_referenceIT_E4typeEOS4_(%struct.q_t** dereferenceable(8) %9) #3
  %11 = load %struct.q_t*, %struct.q_t** %10, align 8
  %12 = load %struct.q_t**, %struct.q_t*** %3, align 8
  store %struct.q_t* %11, %struct.q_t** %12, align 8
  %13 = call dereferenceable(8) %struct.q_t** @_ZSt4moveIRP3q_tEONSt16remove_referenceIT_E4typeEOS4_(%struct.q_t** dereferenceable(8) %5) #3
  %14 = load %struct.q_t*, %struct.q_t** %13, align 8
  %15 = load %struct.q_t**, %struct.q_t*** %4, align 8
  store %struct.q_t* %14, %struct.q_t** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.q_t** @_ZSt4moveIRP3q_tEONSt16remove_referenceIT_E4typeEOS4_(%struct.q_t** dereferenceable(8)) #0 comdat {
  %2 = alloca %struct.q_t**, align 8
  store %struct.q_t** %0, %struct.q_t*** %2, align 8
  %3 = load %struct.q_t**, %struct.q_t*** %2, align 8
  ret %struct.q_t** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_T0_(%struct.q_t*, %struct.q_t*) #2 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.q_t, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %12 = alloca %struct.q_t, align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %4) #3
  store i64 %16, i64* %3
  %17 = alloca i32
  store i32 1974016297, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %118
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1974016297, label %21
    i32 -2025814095, label %25
    i32 -1118870579, label %52
    i32 -1587482216, label %79
    i32 -1687466480, label %80
    i32 1343618605, label %88
    i32 1395059747, label %110
    i32 -1387695122, label %111
    i32 -1340988244, label %116
    i32 58671790, label %117
  ]

; <label>:20:                                     ; preds = %18
  br label %118

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %3
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 -2025814095, i32 -1687466480
  store i32 %24, i32* %17
  br label %118

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* @x.277
  %27 = load i32, i32* @y.278
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 -1118870579, i32 58671790
  store i32 %51, i32* %17
  br label %118

; <label>:52:                                     ; preds = %18
  %53 = load i32, i32* @x.277
  %54 = load i32, i32* @y.278
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1587482216, i32 58671790
  store i32 %78, i32* %17
  br label %118

; <label>:79:                                     ; preds = %18
  store i32 -1340988244, i32* %17
  br label %118

; <label>:80:                                     ; preds = %18
  %81 = call i64 @_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %4) #3
  store i64 %81, i64* %7, align 8
  %82 = load i64, i64* %7, align 8
  %83 = sub i64 %82, 1356527689020162269
  %84 = sub i64 %83, 2
  %85 = add i64 %84, 1356527689020162269
  %86 = sub nsw i64 %82, 2
  %87 = sdiv i64 %85, 2
  store i64 %87, i64* %8, align 8
  store i32 1343618605, i32* %17
  br label %118

; <label>:88:                                     ; preds = %18
  %89 = load i64, i64* %8, align 8
  %90 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %4, i64 %89) #3
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %10, i32 0, i32 0
  store %struct.q_t* %90, %struct.q_t** %91, align 8
  %92 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %10) #3
  %93 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %92) #3
  %94 = bitcast %struct.q_t* %9 to i8*
  %95 = bitcast %struct.q_t* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 40, i32 8, i1 false)
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %11 to i8*
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 8, i1 false)
  %98 = load i64, i64* %8, align 8
  %99 = load i64, i64* %7, align 8
  %100 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %9) #3
  %101 = bitcast %struct.q_t* %12 to i8*
  %102 = bitcast %struct.q_t* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 40, i32 8, i1 false)
  %103 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %13 to i8*
  %104 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 1, i32 1, i1 false)
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  %106 = load %struct.q_t*, %struct.q_t** %105, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.q_t* %106, i64 %98, i64 %99, %struct.q_t* byval align 8 %12)
  %107 = load i64, i64* %8, align 8
  %108 = icmp eq i64 %107, 0
  %109 = select i1 %108, i32 1395059747, i32 -1387695122
  store i32 %109, i32* %17
  br label %118

; <label>:110:                                    ; preds = %18
  store i32 -1340988244, i32* %17
  br label %118

; <label>:111:                                    ; preds = %18
  %112 = load i64, i64* %8, align 8
  %113 = sub i64 0, -1
  %114 = sub i64 %112, %113
  %115 = add nsw i64 %112, -1
  store i64 %114, i64* %8, align 8
  store i32 1343618605, i32* %17
  br label %118

; <label>:116:                                    ; preds = %18
  ret void

; <label>:117:                                    ; preds = %18
  store i32 -1118870579, i32* %17
  br label %118

; <label>:118:                                    ; preds = %117, %111, %110, %88, %80, %79, %52, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI3q_tEEENS0_15_Iter_comp_iterIT_EES6_() #2 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.279
  %4 = load i32, i32* @y.280
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 1919030100, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1919030100, label %16
    i32 -167393941, label %24
    i32 -1144202100, label %55
    i32 663600083, label %56
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 -167393941, i32 663600083
  store i32 %23, i32* %12
  br label %60

; <label>:24:                                     ; preds = %13
  %25 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %26 = alloca %"struct.std::less", align 1
  %27 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI3q_tEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %25)
  %28 = load i32, i32* @x.279
  %29 = load i32, i32* @y.280
  %30 = sub i32 %28, 2058695304
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 2058695304
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1144202100, i32 663600083
  store i32 %54, i32* %12
  br label %60

; <label>:55:                                     ; preds = %13
  ret void

; <label>:56:                                     ; preds = %13
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %58 = alloca %"struct.std::less", align 1
  %59 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI3q_tEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %57)
  store i32 -167393941, i32* %12
  br label %60

; <label>:60:                                     ; preds = %56, %24, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %1, %"class.__gnu_cxx::__normal_iterator.33"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %3, align 8
  %6 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %5) #3
  %7 = load %struct.q_t*, %struct.q_t** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %4, align 8
  %9 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %8) #3
  %10 = load %struct.q_t*, %struct.q_t** %9, align 8
  %11 = ptrtoint %struct.q_t* %7 to i64
  %12 = ptrtoint %struct.q_t* %10 to i64
  %13 = sub i64 %11, 2100224936501252667
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 2100224936501252667
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 40
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40)) #0 comdat {
  %2 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %2, align 8
  %3 = load %struct.q_t*, %struct.q_t** %2, align 8
  ret %struct.q_t* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.q_t*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  %9 = load %struct.q_t*, %struct.q_t** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %struct.q_t, %struct.q_t* %9, i64 %10
  store %struct.q_t* %11, %struct.q_t** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.33"* %3, %struct.q_t** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  %13 = load %struct.q_t*, %struct.q_t** %12, align 8
  ret %struct.q_t* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  ret %struct.q_t* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.q_t*, i64, i64, %struct.q_t* byval align 8) #2 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %18 = alloca %struct.q_t, align 8
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %20 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %21 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %22, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  %23 = load i64, i64* %7, align 8
  store i64 %23, i64* %9, align 8
  %24 = load i64, i64* %7, align 8
  store i64 %24, i64* %10, align 8
  %25 = alloca i32
  store i32 823364285, i32* %25
  br label %26

; <label>:26:                                     ; preds = %4, %194
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 823364285, label %29
    i32 19005537, label %39
    i32 1822268215, label %63
    i32 1098099843, label %69
    i32 -1610401027, label %85
    i32 -1028682152, label %125
    i32 1222542271, label %126
    i32 1722861161, label %134
    i32 -1484202337, label %144
    i32 -1576226158, label %169
    i32 -1261685953, label %181
  ]

; <label>:28:                                     ; preds = %26
  br label %194

; <label>:29:                                     ; preds = %26
  %30 = load i64, i64* %10, align 8
  %31 = load i64, i64* %8, align 8
  %32 = sub i64 %31, 4485797565378012601
  %33 = sub i64 %32, 1
  %34 = add i64 %33, 4485797565378012601
  %35 = sub nsw i64 %31, 1
  %36 = sdiv i64 %34, 2
  %37 = icmp slt i64 %30, %36
  %38 = select i1 %37, i32 19005537, i32 1222542271
  store i32 %38, i32* %25
  br label %194

; <label>:39:                                     ; preds = %26
  %40 = load i64, i64* %10, align 8
  %41 = sub i64 0, %40
  %42 = sub i64 0, 1
  %43 = add i64 %41, %42
  %44 = sub i64 0, %43
  %45 = add nsw i64 %40, 1
  %46 = mul nsw i64 2, %44
  store i64 %46, i64* %10, align 8
  %47 = load i64, i64* %10, align 8
  %48 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  store %struct.q_t* %48, %struct.q_t** %49, align 8
  %50 = load i64, i64* %10, align 8
  %51 = add i64 %50, 3735567416860589173
  %52 = sub i64 %51, 1
  %53 = sub i64 %52, 3735567416860589173
  %54 = sub nsw i64 %50, 1
  %55 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %53) #3
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  store %struct.q_t* %55, %struct.q_t** %56, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  %58 = load %struct.q_t*, %struct.q_t** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %60 = load %struct.q_t*, %struct.q_t** %59, align 8
  %61 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI3q_tEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6, %struct.q_t* %58, %struct.q_t* %60)
  %62 = select i1 %61, i32 1822268215, i32 1098099843
  store i32 %62, i32* %25
  br label %194

; <label>:63:                                     ; preds = %26
  %64 = load i64, i64* %10, align 8
  %65 = add i64 %64, -7276613726626965028
  %66 = add i64 %65, -1
  %67 = sub i64 %66, -7276613726626965028
  %68 = add nsw i64 %64, -1
  store i64 %67, i64* %10, align 8
  store i32 1098099843, i32* %25
  br label %194

; <label>:69:                                     ; preds = %26
  %70 = load i32, i32* @x.289
  %71 = load i32, i32* @y.290
  %72 = add i32 %70, -104686872
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -104686872
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -1610401027, i32 -1261685953
  store i32 %84, i32* %25
  br label %194

; <label>:85:                                     ; preds = %26
  %86 = load i64, i64* %10, align 8
  %87 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %86) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %13, i32 0, i32 0
  store %struct.q_t* %87, %struct.q_t** %88, align 8
  %89 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %13) #3
  %90 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %89) #3
  %91 = load i64, i64* %7, align 8
  %92 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %91) #3
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %14, i32 0, i32 0
  store %struct.q_t* %92, %struct.q_t** %93, align 8
  %94 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %14) #3
  %95 = bitcast %struct.q_t* %94 to i8*
  %96 = bitcast %struct.q_t* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 40, i32 8, i1 false)
  %97 = load i64, i64* %10, align 8
  store i64 %97, i64* %7, align 8
  %98 = load i32, i32* @x.289
  %99 = load i32, i32* @y.290
  %100 = sub i32 %98, 1109247745
  %101 = sub i32 %100, 1
  %102 = add i32 %101, 1109247745
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -1028682152, i32 -1261685953
  store i32 %124, i32* %25
  br label %194

; <label>:125:                                    ; preds = %26
  store i32 823364285, i32* %25
  br label %194

; <label>:126:                                    ; preds = %26
  %127 = load i64, i64* %8, align 8
  %128 = xor i64 1, -1
  %129 = xor i64 %127, %128
  %130 = and i64 %129, %127
  %131 = and i64 %127, 1
  %132 = icmp eq i64 %130, 0
  %133 = select i1 %132, i32 1722861161, i32 -1576226158
  store i32 %133, i32* %25
  br label %194

; <label>:134:                                    ; preds = %26
  %135 = load i64, i64* %10, align 8
  %136 = load i64, i64* %8, align 8
  %137 = add i64 %136, -2885370339299833719
  %138 = sub i64 %137, 2
  %139 = sub i64 %138, -2885370339299833719
  %140 = sub nsw i64 %136, 2
  %141 = sdiv i64 %139, 2
  %142 = icmp eq i64 %135, %141
  %143 = select i1 %142, i32 -1484202337, i32 -1576226158
  store i32 %143, i32* %25
  br label %194

; <label>:144:                                    ; preds = %26
  %145 = load i64, i64* %10, align 8
  %146 = sub i64 %145, 1701791190188752787
  %147 = add i64 %146, 1
  %148 = add i64 %147, 1701791190188752787
  %149 = add nsw i64 %145, 1
  %150 = mul nsw i64 2, %148
  store i64 %150, i64* %10, align 8
  %151 = load i64, i64* %10, align 8
  %152 = sub i64 0, 1
  %153 = add i64 %151, %152
  %154 = sub nsw i64 %151, 1
  %155 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %153) #3
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %15, i32 0, i32 0
  store %struct.q_t* %155, %struct.q_t** %156, align 8
  %157 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %15) #3
  %158 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %157) #3
  %159 = load i64, i64* %7, align 8
  %160 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %159) #3
  %161 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %16, i32 0, i32 0
  store %struct.q_t* %160, %struct.q_t** %161, align 8
  %162 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %16) #3
  %163 = bitcast %struct.q_t* %162 to i8*
  %164 = bitcast %struct.q_t* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %164, i64 40, i32 8, i1 false)
  %165 = load i64, i64* %10, align 8
  %166 = sub i64 0, 1
  %167 = add i64 %165, %166
  %168 = sub nsw i64 %165, 1
  store i64 %167, i64* %7, align 8
  store i32 -1576226158, i32* %25
  br label %194

; <label>:169:                                    ; preds = %26
  %170 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %17 to i8*
  %171 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %170, i8* %171, i64 8, i32 8, i1 false)
  %172 = load i64, i64* %7, align 8
  %173 = load i64, i64* %9, align 8
  %174 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %3) #3
  %175 = bitcast %struct.q_t* %18 to i8*
  %176 = bitcast %struct.q_t* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 40, i32 8, i1 false)
  %177 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %20 to i8*
  %178 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %177, i8* %178, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI3q_tEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE()
  %179 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %17, i32 0, i32 0
  %180 = load %struct.q_t*, %struct.q_t** %179, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.q_t* %180, i64 %172, i64 %173, %struct.q_t* byval align 8 %18)
  ret void

; <label>:181:                                    ; preds = %26
  %182 = load i64, i64* %10, align 8
  %183 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %182) #3
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %13, i32 0, i32 0
  store %struct.q_t* %183, %struct.q_t** %184, align 8
  %185 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %13) #3
  %186 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %185) #3
  %187 = load i64, i64* %7, align 8
  %188 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %5, i64 %187) #3
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %14, i32 0, i32 0
  store %struct.q_t* %188, %struct.q_t** %189, align 8
  %190 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %14) #3
  %191 = bitcast %struct.q_t* %190 to i8*
  %192 = bitcast %struct.q_t* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %191, i8* %192, i64 40, i32 8, i1 false)
  %193 = load i64, i64* %10, align 8
  store i64 %193, i64* %7, align 8
  store i32 -1610401027, i32* %25
  br label %194

; <label>:194:                                    ; preds = %181, %144, %134, %126, %125, %85, %69, %63, %39, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI3q_tEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %struct.q_t*, %struct.q_t*) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  store %struct.q_t* %2, %struct.q_t** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, i32 0, i32 0
  %11 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %4) #3
  %12 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %5) #3
  %13 = call zeroext i1 @_ZNKSt4lessI3q_tEclERKS0_S3_(%"struct.std::less"* %10, %struct.q_t* dereferenceable(40) %11, %struct.q_t* dereferenceable(40) %12)
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.q_t*, i64, i64, %struct.q_t* byval align 8) #2 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %16, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  %17 = load i64, i64* %9, align 8
  %18 = sub i64 0, 1
  %19 = add i64 %17, %18
  %20 = sub nsw i64 %17, 1
  %21 = sdiv i64 %19, 2
  store i64 %21, i64* %11, align 8
  %22 = alloca i32
  store i32 -174442067, i32* %22
  %23 = alloca i1
  br label %24

; <label>:24:                                     ; preds = %4, %284
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -174442067, label %27
    i32 1909467412, label %55
    i32 -385342491, label %74
    i32 188729816, label %77
    i32 970985178, label %93
    i32 1928804769, label %114
    i32 341301963, label %116
    i32 -485457785, label %119
    i32 -186148693, label %147
    i32 -741045341, label %192
    i32 -5143395, label %193
    i32 1465112736, label %201
    i32 -616591797, label %205
    i32 1064320301, label %212
  ]

; <label>:26:                                     ; preds = %24
  br label %284

; <label>:27:                                     ; preds = %24
  %28 = load i32, i32* @x.293
  %29 = load i32, i32* @y.294
  %30 = sub i32 %28, -1025639479
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1025639479
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1909467412, i32 1465112736
  store i32 %54, i32* %22
  br label %284

; <label>:55:                                     ; preds = %24
  %56 = load i64, i64* %9, align 8
  %57 = load i64, i64* %10, align 8
  %58 = icmp sgt i64 %56, %57
  store i1 %58, i1* %6
  %59 = load i32, i32* @x.293
  %60 = load i32, i32* @y.294
  %61 = sub i32 %59, -1104643081
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1104643081
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -385342491, i32 1465112736
  store i32 %73, i32* %22
  br label %284

; <label>:74:                                     ; preds = %24
  %75 = load volatile i1, i1* %6
  %76 = select i1 %75, i32 188729816, i32 341301963
  store i32 %76, i32* %22
  store i1 false, i1* %23
  br label %284

; <label>:77:                                     ; preds = %24
  %78 = load i32, i32* @x.293
  %79 = load i32, i32* @y.294
  %80 = add i32 %78, -268890488
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -268890488
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 970985178, i32 -616591797
  store i32 %92, i32* %22
  br label %284

; <label>:93:                                     ; preds = %24
  %94 = load i64, i64* %11, align 8
  %95 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %7, i64 %94) #3
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  store %struct.q_t* %95, %struct.q_t** %96, align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %98 = load %struct.q_t*, %struct.q_t** %97, align 8
  %99 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, %struct.q_t* %98, %struct.q_t* dereferenceable(40) %3)
  store i1 %99, i1* %5
  %100 = load i32, i32* @x.293
  %101 = load i32, i32* @y.294
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 1928804769, i32 -616591797
  store i32 %113, i32* %22
  br label %284

; <label>:114:                                    ; preds = %24
  store i32 341301963, i32* %22
  %115 = load volatile i1, i1* %5
  store i1 %115, i1* %23
  br label %284

; <label>:116:                                    ; preds = %24
  %117 = load i1, i1* %23
  %118 = select i1 %117, i32 -485457785, i32 -5143395
  store i32 %118, i32* %22
  br label %284

; <label>:119:                                    ; preds = %24
  %120 = load i32, i32* @x.293
  %121 = load i32, i32* @y.294
  %122 = add i32 %120, 406326080
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, 406326080
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 -186148693, i32 1064320301
  store i32 %146, i32* %22
  br label %284

; <label>:147:                                    ; preds = %24
  %148 = load i64, i64* %11, align 8
  %149 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %7, i64 %148) #3
  %150 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %13, i32 0, i32 0
  store %struct.q_t* %149, %struct.q_t** %150, align 8
  %151 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %13) #3
  %152 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %151) #3
  %153 = load i64, i64* %9, align 8
  %154 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %7, i64 %153) #3
  %155 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %14, i32 0, i32 0
  store %struct.q_t* %154, %struct.q_t** %155, align 8
  %156 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %14) #3
  %157 = bitcast %struct.q_t* %156 to i8*
  %158 = bitcast %struct.q_t* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %157, i8* %158, i64 40, i32 8, i1 false)
  %159 = load i64, i64* %11, align 8
  store i64 %159, i64* %9, align 8
  %160 = load i64, i64* %9, align 8
  %161 = sub i64 0, 1
  %162 = add i64 %160, %161
  %163 = sub nsw i64 %160, 1
  %164 = sdiv i64 %162, 2
  store i64 %164, i64* %11, align 8
  %165 = load i32, i32* @x.293
  %166 = load i32, i32* @y.294
  %167 = add i32 %165, 304219384
  %168 = sub i32 %167, 1
  %169 = sub i32 %168, 304219384
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 true, true
  %178 = and i1 %175, true
  %179 = and i1 %173, %177
  %180 = and i1 %176, true
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 true, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 -741045341, i32 1064320301
  store i32 %191, i32* %22
  br label %284

; <label>:192:                                    ; preds = %24
  store i32 -174442067, i32* %22
  br label %284

; <label>:193:                                    ; preds = %24
  %194 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %3) #3
  %195 = load i64, i64* %9, align 8
  %196 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %7, i64 %195) #3
  %197 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %15, i32 0, i32 0
  store %struct.q_t* %196, %struct.q_t** %197, align 8
  %198 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %15) #3
  %199 = bitcast %struct.q_t* %198 to i8*
  %200 = bitcast %struct.q_t* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %199, i8* %200, i64 40, i32 8, i1 false)
  ret void

; <label>:201:                                    ; preds = %24
  %202 = load i64, i64* %9, align 8
  %203 = load i64, i64* %10, align 8
  %204 = icmp sgt i64 %202, %203
  store i32 1909467412, i32* %22
  br label %284

; <label>:205:                                    ; preds = %24
  %206 = load i64, i64* %11, align 8
  %207 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %7, i64 %206) #3
  %208 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  store %struct.q_t* %207, %struct.q_t** %208, align 8
  %209 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %210 = load %struct.q_t*, %struct.q_t** %209, align 8
  %211 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, %struct.q_t* %210, %struct.q_t* dereferenceable(40) %3)
  store i32 970985178, i32* %22
  br label %284

; <label>:212:                                    ; preds = %24
  %213 = load i64, i64* %11, align 8
  %214 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %7, i64 %213) #3
  %215 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %13, i32 0, i32 0
  store %struct.q_t* %214, %struct.q_t** %215, align 8
  %216 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %13) #3
  %217 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %216) #3
  %218 = load i64, i64* %9, align 8
  %219 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.33"* %7, i64 %218) #3
  %220 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %14, i32 0, i32 0
  store %struct.q_t* %219, %struct.q_t** %220, align 8
  %221 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %14) #3
  %222 = bitcast %struct.q_t* %221 to i8*
  %223 = bitcast %struct.q_t* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 40, i32 8, i1 false)
  %224 = load i64, i64* %11, align 8
  store i64 %224, i64* %9, align 8
  %225 = load i64, i64* %9, align 8
  %226 = sub i64 0, 1
  %227 = add i64 %225, %226
  %228 = sub i64 %225, 1
  %229 = mul i64 %227, 1
  %230 = shl i64 %225, 1
  %231 = sub i64 0, %225
  %232 = add i64 0, %231
  %233 = sub i64 0, %225
  %234 = add i64 %232, 7031208325743654627
  %235 = add i64 %234, 1
  %236 = sub i64 %235, 7031208325743654627
  %237 = add i64 %232, 1
  %238 = sub i64 0, 1
  %239 = add i64 %225, %238
  %240 = sub i64 %225, 1
  %241 = mul i64 %239, 1
  %242 = sub i64 0, -7006086112808379146
  %243 = sub i64 %242, %225
  %244 = add i64 %243, -7006086112808379146
  %245 = sub i64 0, %225
  %246 = sub i64 0, 1
  %247 = sub i64 %244, %246
  %248 = add i64 %244, 1
  %249 = shl i64 %225, 1
  %250 = add i64 0, -4228719442695787171
  %251 = sub i64 %250, %225
  %252 = sub i64 %251, -4228719442695787171
  %253 = sub i64 0, %225
  %254 = sub i64 %252, -1850721204778529042
  %255 = add i64 %254, 1
  %256 = add i64 %255, -1850721204778529042
  %257 = add i64 %252, 1
  %258 = sub i64 0, 1
  %259 = add i64 %225, %258
  %260 = sub nsw i64 %225, 1
  %261 = add i64 %259, -124028078437610284
  %262 = sub i64 %261, 2
  %263 = sub i64 %262, -124028078437610284
  %264 = sub i64 %259, 2
  %265 = mul i64 %263, 2
  %266 = add i64 %259, -8514427650163078899
  %267 = sub i64 %266, 2
  %268 = sub i64 %267, -8514427650163078899
  %269 = sub i64 %259, 2
  %270 = mul i64 %268, 2
  %271 = add i64 0, 1109943934903266062
  %272 = sub i64 %271, %259
  %273 = sub i64 %272, 1109943934903266062
  %274 = sub i64 0, %259
  %275 = add i64 %273, -598987814363744520
  %276 = add i64 %275, 2
  %277 = sub i64 %276, -598987814363744520
  %278 = add i64 %273, 2
  %279 = sub i64 0, 2
  %280 = add i64 %259, %279
  %281 = sub i64 %259, 2
  %282 = mul i64 %280, 2
  %283 = sdiv i64 %259, 2
  store i64 %283, i64* %11, align 8
  store i32 -186148693, i32* %22
  br label %284

; <label>:284:                                    ; preds = %212, %205, %201, %192, %147, %119, %116, %114, %93, %77, %74, %55, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI3q_tEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE() #2 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %"struct.std::less", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessI3q_tEclERKS0_S3_(%"struct.std::less"*, %struct.q_t* dereferenceable(40), %struct.q_t* dereferenceable(40)) #2 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca %struct.q_t*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store %struct.q_t* %1, %struct.q_t** %5, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load %struct.q_t*, %struct.q_t** %5, align 8
  %9 = load %struct.q_t*, %struct.q_t** %6, align 8
  %10 = call zeroext i1 @_ZNK3q_tltERKS_(%struct.q_t* %8, %struct.q_t* dereferenceable(40) %9)
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK3q_tltERKS_(%struct.q_t*, %struct.q_t* dereferenceable(40)) #0 comdat align 2 {
  %3 = alloca %struct.q_t*, align 8
  %4 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %3, align 8
  store %struct.q_t* %1, %struct.q_t** %4, align 8
  %5 = load %struct.q_t*, %struct.q_t** %3, align 8
  %6 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = load %struct.q_t*, %struct.q_t** %4, align 8
  %9 = getelementptr inbounds %struct.q_t, %struct.q_t* %8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %struct.q_t*, %struct.q_t* dereferenceable(40)) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.301
  %8 = load i32, i32* @y.302
  %9 = sub i32 %7, 1701900760
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1701900760
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 600324654, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %66
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 600324654, label %21
    i32 792685461, label %29
    i32 405592396, label %54
    i32 -1104377399, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %66

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 792685461, i32 -1104377399
  store i32 %28, i32* %17
  br label %66

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %31 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %32 = alloca %struct.q_t*, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %30, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %33, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %31, align 8
  store %struct.q_t* %2, %struct.q_t** %32, align 8
  %34 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %31, align 8
  %35 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %34, i32 0, i32 0
  %36 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %30) #3
  %37 = load %struct.q_t*, %struct.q_t** %32, align 8
  %38 = call zeroext i1 @_ZNKSt4lessI3q_tEclERKS0_S3_(%"struct.std::less"* %35, %struct.q_t* dereferenceable(40) %36, %struct.q_t* dereferenceable(40) %37)
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.301
  %40 = load i32, i32* @y.302
  %41 = sub i32 %39, -1138902729
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1138902729
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 405592396, i32 -1104377399
  store i32 %53, i32* %17
  br label %66

; <label>:54:                                     ; preds = %18
  %55 = load volatile i1, i1* %4
  ret i1 %55

; <label>:56:                                     ; preds = %18
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %58 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %59 = alloca %struct.q_t*, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %57, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %60, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %58, align 8
  store %struct.q_t* %2, %struct.q_t** %59, align 8
  %61 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %58, align 8
  %62 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %61, i32 0, i32 0
  %63 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %57) #3
  %64 = load %struct.q_t*, %struct.q_t** %59, align 8
  %65 = call zeroext i1 @_ZNKSt4lessI3q_tEclERKS0_S3_(%"struct.std::less"* %62, %struct.q_t* dereferenceable(40) %63, %struct.q_t* dereferenceable(40) %64)
  store i32 792685461, i32* %17
  br label %66

; <label>:66:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI3q_tEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EE9push_backERKS0_(%"class.std::vector"*, %struct.q_t* dereferenceable(40)) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*
  %5 = alloca %struct.q_t**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.307
  %9 = load i32, i32* @y.308
  %10 = add i32 %8, -1561781167
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1561781167
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 66730021, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %100
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 66730021, label %22
    i32 66812793, label %30
    i32 -1573173096, label %61
    i32 1037176885, label %64
    i32 150296083, label %82
    i32 -1584373855, label %86
    i32 -347442353, label %87
  ]

; <label>:21:                                     ; preds = %19
  br label %100

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 66812793, i32 -347442353
  store i32 %29, i32* %18
  br label %100

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %struct.q_t*, align 8
  store %struct.q_t** %32, %struct.q_t*** %5
  store %"class.std::vector"* %0, %"class.std::vector"** %31, align 8
  %33 = load volatile %struct.q_t**, %struct.q_t*** %5
  store %struct.q_t* %1, %struct.q_t** %33, align 8
  %34 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  store %"class.std::vector"* %34, %"class.std::vector"** %4
  %35 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %36 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %struct.q_t*, %struct.q_t** %38, align 8
  %40 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load %struct.q_t*, %struct.q_t** %43, align 8
  %45 = icmp ne %struct.q_t* %39, %44
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.307
  %47 = load i32, i32* @y.308
  %48 = sub i32 %46, -727563662
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -727563662
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1573173096, i32 -347442353
  store i32 %60, i32* %18
  br label %100

; <label>:61:                                     ; preds = %19
  %62 = load volatile i1, i1* %3
  %63 = select i1 %62, i32 1037176885, i32 150296083
  store i32 %63, i32* %18
  br label %100

; <label>:64:                                     ; preds = %19
  %65 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %66 = bitcast %"class.std::vector"* %65 to %"struct.std::_Vector_base"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %66, i32 0, i32 0
  %68 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %67 to %"class.std::allocator"*
  %69 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %70 = bitcast %"class.std::vector"* %69 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %71, i32 0, i32 1
  %73 = load %struct.q_t*, %struct.q_t** %72, align 8
  %74 = load volatile %struct.q_t**, %struct.q_t*** %5
  %75 = load %struct.q_t*, %struct.q_t** %74, align 8
  call void @_ZNSt16allocator_traitsISaI3q_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %68, %struct.q_t* %73, %struct.q_t* dereferenceable(40) %75)
  %76 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %77 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %78, i32 0, i32 1
  %80 = load %struct.q_t*, %struct.q_t** %79, align 8
  %81 = getelementptr inbounds %struct.q_t, %struct.q_t* %80, i32 1
  store %struct.q_t* %81, %struct.q_t** %79, align 8
  store i32 -1584373855, i32* %18
  br label %100

; <label>:82:                                     ; preds = %19
  %83 = load volatile %struct.q_t**, %struct.q_t*** %5
  %84 = load %struct.q_t*, %struct.q_t** %83, align 8
  %85 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  call void @_ZNSt6vectorI3q_tSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_(%"class.std::vector"* %85, %struct.q_t* dereferenceable(40) %84)
  store i32 -1584373855, i32* %18
  br label %100

; <label>:86:                                     ; preds = %19
  ret void

; <label>:87:                                     ; preds = %19
  %88 = alloca %"class.std::vector"*, align 8
  %89 = alloca %struct.q_t*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %88, align 8
  store %struct.q_t* %1, %struct.q_t** %89, align 8
  %90 = load %"class.std::vector"*, %"class.std::vector"** %88, align 8
  %91 = bitcast %"class.std::vector"* %90 to %"struct.std::_Vector_base"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %92, i32 0, i32 1
  %94 = load %struct.q_t*, %struct.q_t** %93, align 8
  %95 = bitcast %"class.std::vector"* %90 to %"struct.std::_Vector_base"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %95, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %96, i32 0, i32 2
  %98 = load %struct.q_t*, %struct.q_t** %97, align 8
  %99 = icmp ne %struct.q_t* %94, %98
  store i32 66812793, i32* %18
  br label %100

; <label>:100:                                    ; preds = %87, %82, %64, %61, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.q_t*, %struct.q_t*) #2 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"struct.std::less", align 1
  %6 = alloca %struct.q_t, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %9 = alloca %struct.q_t, align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %11 = alloca %"struct.std::less", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %14, align 8
  %15 = call %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.33"* %4, i64 1) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  store %struct.q_t* %15, %struct.q_t** %16, align 8
  %17 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %7) #3
  %18 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %17) #3
  %19 = bitcast %struct.q_t* %6 to i8*
  %20 = bitcast %struct.q_t* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 40, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = call i64 @_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %3) #3
  %24 = add i64 %23, -8518333686348284098
  %25 = sub i64 %24, 1
  %26 = sub i64 %25, -8518333686348284098
  %27 = sub nsw i64 %23, 1
  %28 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %6) #3
  %29 = bitcast %struct.q_t* %9 to i8*
  %30 = bitcast %struct.q_t* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 40, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI3q_tEEENS0_14_Iter_comp_valIT_EES6_()
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %8, i32 0, i32 0
  %32 = load %struct.q_t*, %struct.q_t** %31, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.q_t* %32, i64 %26, i64 0, %struct.q_t* byval align 8 %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3q_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %struct.q_t*, %struct.q_t* dereferenceable(40)) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.311
  %7 = load i32, i32* @y.312
  %8 = add i32 %6, -1506229232
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1506229232
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1198591109, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %86
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1198591109, label %20
    i32 -1319499422, label %40
    i32 -396649967, label %76
    i32 606097628, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %86

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1319499422, i32 606097628
  store i32 %39, i32* %16
  br label %86

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca %struct.q_t*, align 8
  %43 = alloca %struct.q_t*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store %struct.q_t* %1, %struct.q_t** %42, align 8
  store %struct.q_t* %2, %struct.q_t** %43, align 8
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %45 = bitcast %"class.std::allocator"* %44 to %"class.__gnu_cxx::new_allocator"*
  %46 = load %struct.q_t*, %struct.q_t** %42, align 8
  %47 = load %struct.q_t*, %struct.q_t** %43, align 8
  %48 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %45, %struct.q_t* %46, %struct.q_t* dereferenceable(40) %48)
  %49 = load i32, i32* @x.311
  %50 = load i32, i32* @y.312
  %51 = sub i32 %49, 449679368
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 449679368
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -396649967, i32 606097628
  store i32 %75, i32* %16
  br label %86

; <label>:76:                                     ; preds = %17
  ret void

; <label>:77:                                     ; preds = %17
  %78 = alloca %"class.std::allocator"*, align 8
  %79 = alloca %struct.q_t*, align 8
  %80 = alloca %struct.q_t*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %78, align 8
  store %struct.q_t* %1, %struct.q_t** %79, align 8
  store %struct.q_t* %2, %struct.q_t** %80, align 8
  %81 = load %"class.std::allocator"*, %"class.std::allocator"** %78, align 8
  %82 = bitcast %"class.std::allocator"* %81 to %"class.__gnu_cxx::new_allocator"*
  %83 = load %struct.q_t*, %struct.q_t** %79, align 8
  %84 = load %struct.q_t*, %struct.q_t** %80, align 8
  %85 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40) %84) #3
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %82, %struct.q_t* %83, %struct.q_t* dereferenceable(40) %85)
  store i32 -1319499422, i32* %16
  br label %86

; <label>:86:                                     ; preds = %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_(%"class.std::vector"*, %struct.q_t* dereferenceable(40)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.q_t*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.q_t* %1, %struct.q_t** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %5, align 8
  %14 = call %struct.q_t* @_ZNSt12_Vector_baseI3q_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"* %12, i64 %13)
  store %struct.q_t* %14, %struct.q_t** %6, align 8
  %15 = load %struct.q_t*, %struct.q_t** %6, align 8
  store %struct.q_t* %15, %struct.q_t** %7, align 8
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %17 to %"class.std::allocator"*
  %19 = load %struct.q_t*, %struct.q_t** %6, align 8
  %20 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %10) #3
  %21 = getelementptr inbounds %struct.q_t, %struct.q_t* %19, i64 %20
  %22 = load %struct.q_t*, %struct.q_t** %4, align 8
  %23 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40) %22) #3
  invoke void @_ZNSt16allocator_traitsISaI3q_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %18, %struct.q_t* %21, %struct.q_t* dereferenceable(40) %23)
          to label %24 unwind label %69

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.313
  %26 = load i32, i32* @y.314
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %321

; <label>:38:                                     ; preds = %24, %321
  store %struct.q_t* null, %struct.q_t** %7, align 8
  %39 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %struct.q_t*, %struct.q_t** %41, align 8
  %43 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load %struct.q_t*, %struct.q_t** %45, align 8
  %47 = load %struct.q_t*, %struct.q_t** %6, align 8
  %48 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %49 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %48) #3
  %50 = load i32, i32* @x.313
  %51 = load i32, i32* @y.314
  %52 = sub i32 %50, -1596591951
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1596591951
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %321

; <label>:64:                                     ; preds = %38
  %65 = invoke %struct.q_t* @_ZSt34__uninitialized_move_if_noexcept_aIP3q_tS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.q_t* %42, %struct.q_t* %46, %struct.q_t* %47, %"class.std::allocator"* dereferenceable(1) %49)
          to label %66 unwind label %69

; <label>:66:                                     ; preds = %64
  store %struct.q_t* %65, %struct.q_t** %7, align 8
  %67 = load %struct.q_t*, %struct.q_t** %7, align 8
  %68 = getelementptr inbounds %struct.q_t, %struct.q_t* %67, i32 1
  store %struct.q_t* %68, %struct.q_t** %7, align 8
  br label %238

; <label>:69:                                     ; preds = %64, %2
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %8, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %9, align 4
  br label %73

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.313
  %75 = load i32, i32* @y.314
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %333

; <label>:99:                                     ; preds = %73, %333
  %100 = load i8*, i8** %8, align 8
  %101 = call i8* @__cxa_begin_catch(i8* %100) #3
  %102 = load %struct.q_t*, %struct.q_t** %7, align 8
  %103 = icmp ne %struct.q_t* %102, null
  %104 = load i32, i32* @x.313
  %105 = load i32, i32* @y.314
  %106 = sub i32 %104, -76819383
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -76819383
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %333

; <label>:118:                                    ; preds = %99
  br i1 %103, label %131, label %119

; <label>:119:                                    ; preds = %118
  %120 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %120, i32 0, i32 0
  %122 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %121 to %"class.std::allocator"*
  %123 = load %struct.q_t*, %struct.q_t** %6, align 8
  %124 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %10) #3
  %125 = getelementptr inbounds %struct.q_t, %struct.q_t* %123, i64 %124
  invoke void @_ZNSt16allocator_traitsISaI3q_tEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator"* dereferenceable(1) %122, %struct.q_t* %125)
          to label %126 unwind label %127

; <label>:126:                                    ; preds = %119
  br label %232

; <label>:127:                                    ; preds = %236, %232, %177, %119
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %8, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %237 unwind label %317

; <label>:131:                                    ; preds = %118
  %132 = load i32, i32* @x.313
  %133 = load i32, i32* @y.314
  %134 = add i32 %132, -708286441
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -708286441
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %338

; <label>:146:                                    ; preds = %131, %338
  %147 = load %struct.q_t*, %struct.q_t** %6, align 8
  %148 = load %struct.q_t*, %struct.q_t** %7, align 8
  %149 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %150 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %149) #3
  %151 = load i32, i32* @x.313
  %152 = load i32, i32* @y.314
  %153 = add i32 %151, -248970053
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, -248970053
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 true, true
  %164 = and i1 %161, true
  %165 = and i1 %159, %163
  %166 = and i1 %162, true
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 true, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %338

; <label>:177:                                    ; preds = %146
  invoke void @_ZSt8_DestroyIP3q_tS0_EvT_S2_RSaIT0_E(%struct.q_t* %147, %struct.q_t* %148, %"class.std::allocator"* dereferenceable(1) %150)
          to label %178 unwind label %127

; <label>:178:                                    ; preds = %177
  %179 = load i32, i32* @x.313
  %180 = load i32, i32* @y.314
  %181 = add i32 %179, -552044147
  %182 = sub i32 %181, 1
  %183 = sub i32 %182, -552044147
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = xor i1 %187, true
  %190 = xor i1 %188, true
  %191 = xor i1 true, true
  %192 = and i1 %189, true
  %193 = and i1 %187, %191
  %194 = and i1 %190, true
  %195 = and i1 %188, %191
  %196 = or i1 %192, %193
  %197 = or i1 %194, %195
  %198 = xor i1 %196, %197
  %199 = or i1 %189, %190
  %200 = xor i1 %199, true
  %201 = or i1 true, %191
  %202 = and i1 %200, %201
  %203 = or i1 %198, %202
  %204 = or i1 %187, %188
  br i1 %203, label %205, label %343

; <label>:205:                                    ; preds = %178, %343
  %206 = load i32, i32* @x.313
  %207 = load i32, i32* @y.314
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 true, true
  %218 = and i1 %215, true
  %219 = and i1 %213, %217
  %220 = and i1 %216, true
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 true, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %343

; <label>:231:                                    ; preds = %205
  br label %232

; <label>:232:                                    ; preds = %231, %126
  %233 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %234 = load %struct.q_t*, %struct.q_t** %6, align 8
  %235 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseI3q_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %233, %struct.q_t* %234, i64 %235)
          to label %236 unwind label %127

; <label>:236:                                    ; preds = %232
  invoke void @__cxa_rethrow() #13
          to label %320 unwind label %127

; <label>:237:                                    ; preds = %127
  br label %282

; <label>:238:                                    ; preds = %66
  %239 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %239, i32 0, i32 0
  %241 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %240, i32 0, i32 0
  %242 = load %struct.q_t*, %struct.q_t** %241, align 8
  %243 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %244 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %244, i32 0, i32 1
  %246 = load %struct.q_t*, %struct.q_t** %245, align 8
  %247 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %248 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %247) #3
  call void @_ZSt8_DestroyIP3q_tS0_EvT_S2_RSaIT0_E(%struct.q_t* %242, %struct.q_t* %246, %"class.std::allocator"* dereferenceable(1) %248)
  %249 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %250 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %251, i32 0, i32 0
  %253 = load %struct.q_t*, %struct.q_t** %252, align 8
  %254 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %255 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %255, i32 0, i32 2
  %257 = load %struct.q_t*, %struct.q_t** %256, align 8
  %258 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %259, i32 0, i32 0
  %261 = load %struct.q_t*, %struct.q_t** %260, align 8
  %262 = ptrtoint %struct.q_t* %257 to i64
  %263 = ptrtoint %struct.q_t* %261 to i64
  %264 = sub i64 0, %263
  %265 = add i64 %262, %264
  %266 = sub i64 %262, %263
  %267 = sdiv exact i64 %265, 40
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %249, %struct.q_t* %253, i64 %267)
  %268 = load %struct.q_t*, %struct.q_t** %6, align 8
  %269 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %270, i32 0, i32 0
  store %struct.q_t* %268, %struct.q_t** %271, align 8
  %272 = load %struct.q_t*, %struct.q_t** %7, align 8
  %273 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %274 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %273, i32 0, i32 0
  %275 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %274, i32 0, i32 1
  store %struct.q_t* %272, %struct.q_t** %275, align 8
  %276 = load %struct.q_t*, %struct.q_t** %6, align 8
  %277 = load i64, i64* %5, align 8
  %278 = getelementptr inbounds %struct.q_t, %struct.q_t* %276, i64 %277
  %279 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %280 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %279, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %280, i32 0, i32 2
  store %struct.q_t* %278, %struct.q_t** %281, align 8
  ret void

; <label>:282:                                    ; preds = %237
  %283 = load i32, i32* @x.313
  %284 = load i32, i32* @y.314
  %285 = add i32 %283, 905603854
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, 905603854
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  br i1 %295, label %297, label %344

; <label>:297:                                    ; preds = %282, %344
  %298 = load i8*, i8** %8, align 8
  %299 = load i32, i32* %9, align 4
  %300 = insertvalue { i8*, i32 } undef, i8* %298, 0
  %301 = insertvalue { i8*, i32 } %300, i32 %299, 1
  %302 = load i32, i32* @x.313
  %303 = load i32, i32* @y.314
  %304 = sub i32 %302, 946944751
  %305 = sub i32 %304, 1
  %306 = add i32 %305, 946944751
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = and i1 %310, %311
  %313 = xor i1 %310, %311
  %314 = or i1 %312, %313
  %315 = or i1 %310, %311
  br i1 %314, label %316, label %344

; <label>:316:                                    ; preds = %297
  resume { i8*, i32 } %301

; <label>:317:                                    ; preds = %127
  %318 = landingpad { i8*, i32 }
          catch i8* null
  %319 = extractvalue { i8*, i32 } %318, 0
  call void @__clang_call_terminate(i8* %319) #7
  unreachable

; <label>:320:                                    ; preds = %236
  unreachable

; <label>:321:                                    ; preds = %38, %24
  store %struct.q_t* null, %struct.q_t** %7, align 8
  %322 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %323 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %323, i32 0, i32 0
  %325 = load %struct.q_t*, %struct.q_t** %324, align 8
  %326 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %327 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %326, i32 0, i32 0
  %328 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %327, i32 0, i32 1
  %329 = load %struct.q_t*, %struct.q_t** %328, align 8
  %330 = load %struct.q_t*, %struct.q_t** %6, align 8
  %331 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %332 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %331) #3
  br label %38

; <label>:333:                                    ; preds = %99, %73
  %334 = load i8*, i8** %8, align 8
  %335 = call i8* @__cxa_begin_catch(i8* %334) #3
  %336 = load %struct.q_t*, %struct.q_t** %7, align 8
  %337 = icmp ne %struct.q_t* %336, null
  br label %99

; <label>:338:                                    ; preds = %146, %131
  %339 = load %struct.q_t*, %struct.q_t** %6, align 8
  %340 = load %struct.q_t*, %struct.q_t** %7, align 8
  %341 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %342 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %341) #3
  br label %146

; <label>:343:                                    ; preds = %205, %178
  br label %205

; <label>:344:                                    ; preds = %297, %282
  %345 = load i8*, i8** %8, align 8
  %346 = load i32, i32* %9, align 4
  %347 = insertvalue { i8*, i32 } undef, i8* %345, 0
  %348 = insertvalue { i8*, i32 } %347, i32 %346, 1
  br label %297
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3q_tE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %struct.q_t*, %struct.q_t* dereferenceable(40)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.315
  %7 = load i32, i32* @y.316
  %8 = add i32 %6, -1718710495
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1718710495
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1595847705, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1595847705, label %20
    i32 283738287, label %28
    i32 456938784, label %66
    i32 2109936719, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 283738287, i32 2109936719
  store i32 %27, i32* %16
  br label %79

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %30 = alloca %struct.q_t*, align 8
  %31 = alloca %struct.q_t*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %29, align 8
  store %struct.q_t* %1, %struct.q_t** %30, align 8
  store %struct.q_t* %2, %struct.q_t** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %29, align 8
  %33 = load %struct.q_t*, %struct.q_t** %30, align 8
  %34 = bitcast %struct.q_t* %33 to i8*
  %35 = bitcast i8* %34 to %struct.q_t*
  %36 = load %struct.q_t*, %struct.q_t** %31, align 8
  %37 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40) %36) #3
  %38 = bitcast %struct.q_t* %35 to i8*
  %39 = bitcast %struct.q_t* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 40, i32 8, i1 false)
  %40 = load i32, i32* @x.315
  %41 = load i32, i32* @y.316
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 456938784, i32 2109936719
  store i32 %65, i32* %16
  br label %79

; <label>:66:                                     ; preds = %17
  ret void

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %69 = alloca %struct.q_t*, align 8
  %70 = alloca %struct.q_t*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %68, align 8
  store %struct.q_t* %1, %struct.q_t** %69, align 8
  store %struct.q_t* %2, %struct.q_t** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %68, align 8
  %72 = load %struct.q_t*, %struct.q_t** %69, align 8
  %73 = bitcast %struct.q_t* %72 to i8*
  %74 = bitcast i8* %73 to %struct.q_t*
  %75 = load %struct.q_t*, %struct.q_t** %70, align 8
  %76 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardIRK3q_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.q_t* dereferenceable(40) %75) #3
  %77 = bitcast %struct.q_t* %74 to i8*
  %78 = bitcast %struct.q_t* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 40, i32 8, i1 false)
  store i32 283738287, i32* %16
  br label %79

; <label>:79:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI3q_tSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca %"class.std::vector"*
  %11 = alloca %"class.std::vector"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  store i64 %1, i64* %12, align 8
  store i8* %2, i8** %13, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  store %"class.std::vector"* %16, %"class.std::vector"** %10
  %17 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %18 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE8max_sizeEv(%"class.std::vector"* %17) #3
  %19 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %20 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %19) #3
  %21 = add i64 %18, 6725618440409628306
  %22 = sub i64 %21, %20
  %23 = sub i64 %22, 6725618440409628306
  %24 = sub i64 %18, %20
  store i64 %23, i64* %9
  %25 = load i64, i64* %12, align 8
  store i64 %25, i64* %8
  %26 = alloca i32
  store i32 -1001935471, i32* %26
  %27 = alloca i64
  br label %28

; <label>:28:                                     ; preds = %3, %317
  %29 = load i32, i32* %26
  switch i32 %29, label %30 [
    i32 -1001935471, label %31
    i32 1992034962, label %36
    i32 1995077314, label %38
    i32 -1219111820, label %66
    i32 503854144, label %107
    i32 542628120, label %110
    i32 -1911985006, label %138
    i32 -351661056, label %169
    i32 -24104039, label %172
    i32 220767360, label %187
    i32 -1049852828, label %204
    i32 -435917399, label %206
    i32 -1800254735, label %234
    i32 1429759306, label %251
    i32 1459992153, label %253
    i32 241337788, label %255
    i32 853447968, label %307
    i32 -1964595809, label %312
    i32 -1046114190, label %315
  ]

; <label>:30:                                     ; preds = %28
  br label %317

; <label>:31:                                     ; preds = %28
  %32 = load volatile i64, i64* %9
  %33 = load volatile i64, i64* %8
  %34 = icmp ult i64 %32, %33
  %35 = select i1 %34, i32 1992034962, i32 1995077314
  store i32 %35, i32* %26
  br label %317

; <label>:36:                                     ; preds = %28
  %37 = load i8*, i8** %13, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %37) #13
  unreachable

; <label>:38:                                     ; preds = %28
  %39 = load i32, i32* @x.317
  %40 = load i32, i32* @y.318
  %41 = add i32 %39, 783023287
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 783023287
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1219111820, i32 241337788
  store i32 %65, i32* %26
  br label %317

; <label>:66:                                     ; preds = %28
  %67 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %68 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %67) #3
  %69 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %70 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %69) #3
  store i64 %70, i64* %15, align 8
  %71 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %12)
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %68, 9095045863840623455
  %74 = add i64 %73, %72
  %75 = add i64 %74, 9095045863840623455
  %76 = add i64 %68, %72
  store i64 %75, i64* %14, align 8
  %77 = load i64, i64* %14, align 8
  %78 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %79 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %78) #3
  %80 = icmp ult i64 %77, %79
  store i1 %80, i1* %7
  %81 = load i32, i32* @x.317
  %82 = load i32, i32* @y.318
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 503854144, i32 241337788
  store i32 %106, i32* %26
  br label %317

; <label>:107:                                    ; preds = %28
  %108 = load volatile i1, i1* %7
  %109 = select i1 %108, i32 -24104039, i32 542628120
  store i32 %109, i32* %26
  br label %317

; <label>:110:                                    ; preds = %28
  %111 = load i32, i32* @x.317
  %112 = load i32, i32* @y.318
  %113 = add i32 %111, 196669696
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, 196669696
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  %137 = select i1 %135, i32 -1911985006, i32 853447968
  store i32 %137, i32* %26
  br label %317

; <label>:138:                                    ; preds = %28
  %139 = load i64, i64* %14, align 8
  %140 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %141 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE8max_sizeEv(%"class.std::vector"* %140) #3
  %142 = icmp ugt i64 %139, %141
  store i1 %142, i1* %6
  %143 = load i32, i32* @x.317
  %144 = load i32, i32* @y.318
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 false, true
  %155 = and i1 %152, false
  %156 = and i1 %150, %154
  %157 = and i1 %153, false
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 false, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  %168 = select i1 %166, i32 -351661056, i32 853447968
  store i32 %168, i32* %26
  br label %317

; <label>:169:                                    ; preds = %28
  %170 = load volatile i1, i1* %6
  %171 = select i1 %170, i32 -24104039, i32 -435917399
  store i32 %171, i32* %26
  br label %317

; <label>:172:                                    ; preds = %28
  %173 = load i32, i32* @x.317
  %174 = load i32, i32* @y.318
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  %186 = select i1 %184, i32 220767360, i32 -1964595809
  store i32 %186, i32* %26
  br label %317

; <label>:187:                                    ; preds = %28
  %188 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %189 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE8max_sizeEv(%"class.std::vector"* %188) #3
  store i64 %189, i64* %5
  %190 = load i32, i32* @x.317
  %191 = load i32, i32* @y.318
  %192 = sub i32 0, 1
  %193 = add i32 %190, %192
  %194 = sub i32 %190, 1
  %195 = mul i32 %190, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %191, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  %203 = select i1 %201, i32 -1049852828, i32 -1964595809
  store i32 %203, i32* %26
  br label %317

; <label>:204:                                    ; preds = %28
  store i32 1459992153, i32* %26
  %205 = load volatile i64, i64* %5
  store i64 %205, i64* %27
  br label %317

; <label>:206:                                    ; preds = %28
  %207 = load i32, i32* @x.317
  %208 = load i32, i32* @y.318
  %209 = sub i32 %207, -1863015620
  %210 = sub i32 %209, 1
  %211 = add i32 %210, -1863015620
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 false, true
  %220 = and i1 %217, false
  %221 = and i1 %215, %219
  %222 = and i1 %218, false
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 false, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  %233 = select i1 %231, i32 -1800254735, i32 -1046114190
  store i32 %233, i32* %26
  br label %317

; <label>:234:                                    ; preds = %28
  %235 = load i64, i64* %14, align 8
  store i64 %235, i64* %4
  %236 = load i32, i32* @x.317
  %237 = load i32, i32* @y.318
  %238 = sub i32 %236, -1171101678
  %239 = sub i32 %238, 1
  %240 = add i32 %239, -1171101678
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = and i1 %244, %245
  %247 = xor i1 %244, %245
  %248 = or i1 %246, %247
  %249 = or i1 %244, %245
  %250 = select i1 %248, i32 1429759306, i32 -1046114190
  store i32 %250, i32* %26
  br label %317

; <label>:251:                                    ; preds = %28
  store i32 1459992153, i32* %26
  %252 = load volatile i64, i64* %4
  store i64 %252, i64* %27
  br label %317

; <label>:253:                                    ; preds = %28
  %254 = load i64, i64* %27
  ret i64 %254

; <label>:255:                                    ; preds = %28
  %256 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %257 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %256) #3
  %258 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %259 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %258) #3
  store i64 %259, i64* %15, align 8
  %260 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %12)
  %261 = load i64, i64* %260, align 8
  %262 = sub i64 0, -5155703645334712506
  %263 = sub i64 %262, %257
  %264 = add i64 %263, -5155703645334712506
  %265 = sub i64 0, %257
  %266 = sub i64 0, %261
  %267 = sub i64 %264, %266
  %268 = add i64 %264, %261
  %269 = add i64 %257, 769399144103087305
  %270 = sub i64 %269, %261
  %271 = sub i64 %270, 769399144103087305
  %272 = sub i64 %257, %261
  %273 = mul i64 %271, %261
  %274 = add i64 %257, -3765280610189508348
  %275 = sub i64 %274, %261
  %276 = sub i64 %275, -3765280610189508348
  %277 = sub i64 %257, %261
  %278 = mul i64 %276, %261
  %279 = sub i64 0, 6158305303642433179
  %280 = sub i64 %279, %257
  %281 = add i64 %280, 6158305303642433179
  %282 = sub i64 0, %257
  %283 = add i64 %281, 3235749224529644956
  %284 = add i64 %283, %261
  %285 = sub i64 %284, 3235749224529644956
  %286 = add i64 %281, %261
  %287 = sub i64 0, %261
  %288 = add i64 %257, %287
  %289 = sub i64 %257, %261
  %290 = mul i64 %288, %261
  %291 = sub i64 0, -6115723545181652657
  %292 = sub i64 %291, %257
  %293 = add i64 %292, -6115723545181652657
  %294 = sub i64 0, %257
  %295 = sub i64 0, %261
  %296 = sub i64 %293, %295
  %297 = add i64 %293, %261
  %298 = sub i64 0, %257
  %299 = sub i64 0, %261
  %300 = add i64 %298, %299
  %301 = sub i64 0, %300
  %302 = add i64 %257, %261
  store i64 %301, i64* %14, align 8
  %303 = load i64, i64* %14, align 8
  %304 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %305 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE4sizeEv(%"class.std::vector"* %304) #3
  %306 = icmp ult i64 %303, %305
  store i32 -1219111820, i32* %26
  br label %317

; <label>:307:                                    ; preds = %28
  %308 = load i64, i64* %14, align 8
  %309 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %310 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE8max_sizeEv(%"class.std::vector"* %309) #3
  %311 = icmp ugt i64 %308, %310
  store i32 -1911985006, i32* %26
  br label %317

; <label>:312:                                    ; preds = %28
  %313 = load volatile %"class.std::vector"*, %"class.std::vector"** %10
  %314 = call i64 @_ZNKSt6vectorI3q_tSaIS0_EE8max_sizeEv(%"class.std::vector"* %313) #3
  store i32 220767360, i32* %26
  br label %317

; <label>:315:                                    ; preds = %28
  %316 = load i64, i64* %14, align 8
  store i32 -1800254735, i32* %26
  br label %317

; <label>:317:                                    ; preds = %315, %312, %307, %255, %251, %234, %206, %204, %187, %172, %169, %138, %110, %107, %66, %38, %31, %30
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt34__uninitialized_move_if_noexcept_aIP3q_tS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.q_t*, %struct.q_t*, %struct.q_t*, %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %struct.q_t* %0, %struct.q_t** %5, align 8
  store %struct.q_t* %1, %struct.q_t** %6, align 8
  store %struct.q_t* %2, %struct.q_t** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %struct.q_t*, %struct.q_t** %5, align 8
  %12 = call %struct.q_t* @_ZSt32__make_move_if_noexcept_iteratorIP3q_tSt13move_iteratorIS1_EET0_T_(%struct.q_t* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %struct.q_t* %12, %struct.q_t** %13, align 8
  %14 = load %struct.q_t*, %struct.q_t** %6, align 8
  %15 = call %struct.q_t* @_ZSt32__make_move_if_noexcept_iteratorIP3q_tSt13move_iteratorIS1_EET0_T_(%struct.q_t* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %struct.q_t* %15, %struct.q_t** %16, align 8
  %17 = load %struct.q_t*, %struct.q_t** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.q_t*, %struct.q_t** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %struct.q_t*, %struct.q_t** %21, align 8
  %23 = call %struct.q_t* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP3q_tES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.q_t* %20, %struct.q_t* %22, %struct.q_t* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret %struct.q_t* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3q_tEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator"* dereferenceable(1), %struct.q_t*) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.321
  %6 = load i32, i32* @y.322
  %7 = add i32 %5, -560611663
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -560611663
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1950000029, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1950000029, label %19
    i32 2029252731, label %39
    i32 -782719424, label %71
    i32 -236053935, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2029252731, i32 -236053935
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  %41 = alloca %struct.q_t*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  store %struct.q_t* %1, %struct.q_t** %41, align 8
  %42 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %43 = bitcast %"class.std::allocator"* %42 to %"class.__gnu_cxx::new_allocator"*
  %44 = load %struct.q_t*, %struct.q_t** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator"* %43, %struct.q_t* %44)
  %45 = load i32, i32* @x.321
  %46 = load i32, i32* @y.322
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -782719424, i32 -236053935
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator"*, align 8
  %74 = alloca %struct.q_t*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %73, align 8
  store %struct.q_t* %1, %struct.q_t** %74, align 8
  %75 = load %"class.std::allocator"*, %"class.std::allocator"** %73, align 8
  %76 = bitcast %"class.std::allocator"* %75 to %"class.__gnu_cxx::new_allocator"*
  %77 = load %struct.q_t*, %struct.q_t** %74, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3q_tE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator"* %76, %struct.q_t* %77)
  store i32 2029252731, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI3q_tSaIS0_EE8max_sizeEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaI3q_tEE8max_sizeERKS1_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -1576056418, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1576056418, label %16
    i32 112348506, label %21
    i32 -1700966870, label %37
    i32 233343378, label %65
    i32 -17542708, label %66
    i32 -891219784, label %68
    i32 489058685, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 112348506, i32 -17542708
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.325
  %23 = load i32, i32* @y.326
  %24 = add i32 %22, -5508081
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -5508081
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -1700966870, i32 489058685
  store i32 %36, i32* %12
  br label %72

; <label>:37:                                     ; preds = %13
  %38 = load i64*, i64** %7, align 8
  store i64* %38, i64** %5, align 8
  %39 = load i32, i32* @x.325
  %40 = load i32, i32* @y.326
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 233343378, i32 489058685
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  store i32 -891219784, i32* %12
  br label %72

; <label>:66:                                     ; preds = %13
  %67 = load i64*, i64** %6, align 8
  store i64* %67, i64** %5, align 8
  store i32 -891219784, i32* %12
  br label %72

; <label>:68:                                     ; preds = %13
  %69 = load i64*, i64** %5, align 8
  ret i64* %69

; <label>:70:                                     ; preds = %13
  %71 = load i64*, i64** %7, align 8
  store i64* %71, i64** %5, align 8
  store i32 -1700966870, i32* %12
  br label %72

; <label>:72:                                     ; preds = %70, %66, %65, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaI3q_tEE8max_sizeERKS1_(%"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI3q_tE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.329
  %6 = load i32, i32* @y.330
  %7 = sub i32 %5, 1688380670
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1688380670
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1922773825, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1922773825, label %19
    i32 -21042072, label %27
    i32 1519946443, label %46
    i32 -1195582528, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -21042072, i32 -1195582528
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %29 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %30 to %"class.std::allocator"*
  store %"class.std::allocator"* %31, %"class.std::allocator"** %2
  %32 = load i32, i32* @x.329
  %33 = load i32, i32* @y.330
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1519946443, i32 -1195582528
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %49, align 8
  %50 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %51 to %"class.std::allocator"*
  store i32 -21042072, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP3q_tES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.q_t*, %struct.q_t*, %struct.q_t*, %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %12, align 8
  store %struct.q_t* %2, %struct.q_t** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.q_t*, %struct.q_t** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %struct.q_t*, %struct.q_t** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %struct.q_t*, %struct.q_t** %20, align 8
  %22 = call %struct.q_t* @_ZSt18uninitialized_copyISt13move_iteratorIP3q_tES2_ET0_T_S5_S4_(%struct.q_t* %19, %struct.q_t* %21, %struct.q_t* %17)
  ret %struct.q_t* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt32__make_move_if_noexcept_iteratorIP3q_tSt13move_iteratorIS1_EET0_T_(%struct.q_t*) #2 comdat {
  %2 = alloca %struct.q_t*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.333
  %6 = load i32, i32* @y.334
  %7 = add i32 %5, 836039193
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 836039193
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1962736009, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1962736009, label %19
    i32 -2117872624, label %39
    i32 -1126317499, label %60
    i32 -168641536, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2117872624, i32 -168641536
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator", align 8
  %41 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %41, align 8
  %42 = load %struct.q_t*, %struct.q_t** %41, align 8
  call void @_ZNSt13move_iteratorIP3q_tEC2ES1_(%"class.std::move_iterator"* %40, %struct.q_t* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %44 = load %struct.q_t*, %struct.q_t** %43, align 8
  store %struct.q_t* %44, %struct.q_t** %2
  %45 = load i32, i32* @x.333
  %46 = load i32, i32* @y.334
  %47 = add i32 %45, -184225465
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -184225465
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1126317499, i32 -168641536
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %struct.q_t*, %struct.q_t** %2
  ret %struct.q_t* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator", align 8
  %64 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %64, align 8
  %65 = load %struct.q_t*, %struct.q_t** %64, align 8
  call void @_ZNSt13move_iteratorIP3q_tEC2ES1_(%"class.std::move_iterator"* %63, %struct.q_t* %65)
  %66 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %63, i32 0, i32 0
  %67 = load %struct.q_t*, %struct.q_t** %66, align 8
  store i32 -2117872624, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt18uninitialized_copyISt13move_iteratorIP3q_tES2_ET0_T_S5_S4_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %11, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %struct.q_t*, %struct.q_t** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %struct.q_t*, %struct.q_t** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.q_t*, %struct.q_t** %19, align 8
  %21 = call %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP3q_tES4_EET0_T_S7_S6_(%struct.q_t* %18, %struct.q_t* %20, %struct.q_t* %16)
  ret %struct.q_t* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP3q_tES4_EET0_T_S7_S6_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %11, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  %12 = load %struct.q_t*, %struct.q_t** %6, align 8
  store %struct.q_t* %12, %struct.q_t** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %217, %3
  %14 = load i32, i32* @x.337
  %15 = load i32, i32* @y.338
  %16 = sub i32 %14, -1230721848
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -1230721848
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %317

; <label>:40:                                     ; preds = %13, %317
  %41 = load i32, i32* @x.337
  %42 = load i32, i32* @y.338
  %43 = add i32 %41, 373718304
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 373718304
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %317

; <label>:55:                                     ; preds = %40
  %56 = invoke zeroext i1 @_ZStneIP3q_tEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %57 unwind label %218

; <label>:57:                                     ; preds = %55
  br i1 %56, label %58, label %228

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.337
  %60 = load i32, i32* @y.338
  %61 = sub i32 %59, -1684367668
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1684367668
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %318

; <label>:85:                                     ; preds = %58, %318
  %86 = load %struct.q_t*, %struct.q_t** %7, align 8
  %87 = call %struct.q_t* @_ZSt11__addressofI3q_tEPT_RS1_(%struct.q_t* dereferenceable(40) %86) #3
  %88 = load i32, i32* @x.337
  %89 = load i32, i32* @y.338
  %90 = sub i32 %88, -1627994918
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -1627994918
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %318

; <label>:102:                                    ; preds = %85
  %103 = invoke dereferenceable(40) %struct.q_t* @_ZNKSt13move_iteratorIP3q_tEdeEv(%"class.std::move_iterator"* %4)
          to label %104 unwind label %218

; <label>:104:                                    ; preds = %102
  %105 = load i32, i32* @x.337
  %106 = load i32, i32* @y.338
  %107 = add i32 %105, 1915623354
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, 1915623354
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %321

; <label>:131:                                    ; preds = %104, %321
  %132 = load i32, i32* @x.337
  %133 = load i32, i32* @y.338
  %134 = add i32 %132, 1496394103
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, 1496394103
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %321

; <label>:158:                                    ; preds = %131
  invoke void @_ZSt10_ConstructI3q_tJS0_EEvPT_DpOT0_(%struct.q_t* %87, %struct.q_t* dereferenceable(40) %103)
          to label %159 unwind label %218

; <label>:159:                                    ; preds = %158
  br label %160

; <label>:160:                                    ; preds = %159
  %161 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIP3q_tEppEv(%"class.std::move_iterator"* %4)
          to label %162 unwind label %218

; <label>:162:                                    ; preds = %160
  %163 = load i32, i32* @x.337
  %164 = load i32, i32* @y.338
  %165 = add i32 %163, -1451615946
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, -1451615946
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %322

; <label>:189:                                    ; preds = %162, %322
  %190 = load %struct.q_t*, %struct.q_t** %7, align 8
  %191 = getelementptr inbounds %struct.q_t, %struct.q_t* %190, i32 1
  store %struct.q_t* %191, %struct.q_t** %7, align 8
  %192 = load i32, i32* @x.337
  %193 = load i32, i32* @y.338
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 true, true
  %204 = and i1 %201, true
  %205 = and i1 %199, %203
  %206 = and i1 %202, true
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 true, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  br i1 %215, label %217, label %322

; <label>:217:                                    ; preds = %189
  br label %13

; <label>:218:                                    ; preds = %160, %158, %102, %55
  %219 = landingpad { i8*, i32 }
          catch i8* null
  %220 = extractvalue { i8*, i32 } %219, 0
  store i8* %220, i8** %8, align 8
  %221 = extractvalue { i8*, i32 } %219, 1
  store i32 %221, i32* %9, align 4
  br label %222

; <label>:222:                                    ; preds = %218
  %223 = load i8*, i8** %8, align 8
  %224 = call i8* @__cxa_begin_catch(i8* %223) #3
  %225 = load %struct.q_t*, %struct.q_t** %6, align 8
  %226 = load %struct.q_t*, %struct.q_t** %7, align 8
  invoke void @_ZSt8_DestroyIP3q_tEvT_S2_(%struct.q_t* %225, %struct.q_t* %226)
          to label %227 unwind label %230

; <label>:227:                                    ; preds = %222
  invoke void @__cxa_rethrow() #13
          to label %316 unwind label %230

; <label>:228:                                    ; preds = %57
  %229 = load %struct.q_t*, %struct.q_t** %7, align 8
  ret %struct.q_t* %229

; <label>:230:                                    ; preds = %227, %222
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %8, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %234 unwind label %283

; <label>:234:                                    ; preds = %230
  br label %236
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:236:                                    ; preds = %234
  %237 = load i32, i32* @x.337
  %238 = load i32, i32* @y.338
  %239 = sub i32 %237, 988246761
  %240 = sub i32 %239, 1
  %241 = add i32 %240, 988246761
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  br i1 %249, label %251, label %325

; <label>:251:                                    ; preds = %236, %325
  %252 = load i8*, i8** %8, align 8
  %253 = load i32, i32* %9, align 4
  %254 = insertvalue { i8*, i32 } undef, i8* %252, 0
  %255 = insertvalue { i8*, i32 } %254, i32 %253, 1
  %256 = load i32, i32* @x.337
  %257 = load i32, i32* @y.338
  %258 = sub i32 %256, -2062756703
  %259 = sub i32 %258, 1
  %260 = add i32 %259, -2062756703
  %261 = sub i32 %256, 1
  %262 = mul i32 %256, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %257, 10
  %266 = xor i1 %264, true
  %267 = xor i1 %265, true
  %268 = xor i1 false, true
  %269 = and i1 %266, false
  %270 = and i1 %264, %268
  %271 = and i1 %267, false
  %272 = and i1 %265, %268
  %273 = or i1 %269, %270
  %274 = or i1 %271, %272
  %275 = xor i1 %273, %274
  %276 = or i1 %266, %267
  %277 = xor i1 %276, true
  %278 = or i1 false, %268
  %279 = and i1 %277, %278
  %280 = or i1 %275, %279
  %281 = or i1 %264, %265
  br i1 %280, label %282, label %325

; <label>:282:                                    ; preds = %251
  resume { i8*, i32 } %255

; <label>:283:                                    ; preds = %230
  %284 = load i32, i32* @x.337
  %285 = load i32, i32* @y.338
  %286 = add i32 %284, 359671041
  %287 = sub i32 %286, 1
  %288 = sub i32 %287, 359671041
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = and i1 %292, %293
  %295 = xor i1 %292, %293
  %296 = or i1 %294, %295
  %297 = or i1 %292, %293
  br i1 %296, label %298, label %330

; <label>:298:                                    ; preds = %283, %330
  %299 = landingpad { i8*, i32 }
          catch i8* null
  %300 = extractvalue { i8*, i32 } %299, 0
  call void @__clang_call_terminate(i8* %300) #7
  %301 = load i32, i32* @x.337
  %302 = load i32, i32* @y.338
  %303 = sub i32 %301, 1811262745
  %304 = sub i32 %303, 1
  %305 = add i32 %304, 1811262745
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = and i1 %309, %310
  %312 = xor i1 %309, %310
  %313 = or i1 %311, %312
  %314 = or i1 %309, %310
  br i1 %313, label %315, label %330

; <label>:315:                                    ; preds = %298
  unreachable

; <label>:316:                                    ; preds = %227
  unreachable

; <label>:317:                                    ; preds = %40, %13
  br label %40

; <label>:318:                                    ; preds = %85, %58
  %319 = load %struct.q_t*, %struct.q_t** %7, align 8
  %320 = call %struct.q_t* @_ZSt11__addressofI3q_tEPT_RS1_(%struct.q_t* dereferenceable(40) %319) #3
  br label %85

; <label>:321:                                    ; preds = %131, %104
  br label %131

; <label>:322:                                    ; preds = %189, %162
  %323 = load %struct.q_t*, %struct.q_t** %7, align 8
  %324 = getelementptr inbounds %struct.q_t, %struct.q_t* %323, i32 1
  store %struct.q_t* %324, %struct.q_t** %7, align 8
  br label %189

; <label>:325:                                    ; preds = %251, %236
  %326 = load i8*, i8** %8, align 8
  %327 = load i32, i32* %9, align 4
  %328 = insertvalue { i8*, i32 } undef, i8* %326, 0
  %329 = insertvalue { i8*, i32 } %328, i32 %327, 1
  br label %251

; <label>:330:                                    ; preds = %298, %283
  %331 = landingpad { i8*, i32 }
          catch i8* null
  %332 = extractvalue { i8*, i32 } %331, 0
  call void @__clang_call_terminate(i8* %332) #7
  br label %298
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIP3q_tEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #2 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIP3q_tEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructI3q_tJS0_EEvPT_DpOT0_(%struct.q_t*, %struct.q_t* dereferenceable(40)) #0 comdat {
  %3 = alloca %struct.q_t*, align 8
  %4 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %3, align 8
  store %struct.q_t* %1, %struct.q_t** %4, align 8
  %5 = load %struct.q_t*, %struct.q_t** %3, align 8
  %6 = bitcast %struct.q_t* %5 to i8*
  %7 = bitcast i8* %6 to %struct.q_t*
  %8 = load %struct.q_t*, %struct.q_t** %4, align 8
  %9 = call dereferenceable(40) %struct.q_t* @_ZSt7forwardI3q_tEOT_RNSt16remove_referenceIS1_E4typeE(%struct.q_t* dereferenceable(40) %8) #3
  %10 = bitcast %struct.q_t* %7 to i8*
  %11 = bitcast %struct.q_t* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 40, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZNKSt13move_iteratorIP3q_tEdeEv(%"class.std::move_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  ret %struct.q_t* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIP3q_tEppEv(%"class.std::move_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.345
  %6 = load i32, i32* @y.346
  %7 = add i32 %5, 1769651455
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1769651455
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1996629786, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1996629786, label %19
    i32 190400244, label %27
    i32 -68190982, label %48
    i32 -1577885383, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 190400244, i32 -1577885383
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  store %"class.std::move_iterator"* %29, %"class.std::move_iterator"** %2
  %30 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %31 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  %32 = load %struct.q_t*, %struct.q_t** %31, align 8
  %33 = getelementptr inbounds %struct.q_t, %struct.q_t* %32, i32 1
  store %struct.q_t* %33, %struct.q_t** %31, align 8
  %34 = load i32, i32* @x.345
  %35 = load i32, i32* @y.346
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -68190982, i32 -1577885383
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %51, align 8
  %52 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %51, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %52, i32 0, i32 0
  %54 = load %struct.q_t*, %struct.q_t** %53, align 8
  %55 = getelementptr inbounds %struct.q_t, %struct.q_t* %54, i32 1
  store %struct.q_t* %55, %struct.q_t** %53, align 8
  store i32 190400244, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIP3q_tEbRKSt13move_iteratorIT_ES6_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #2 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.347
  %7 = load i32, i32* @y.348
  %8 = sub i32 %6, 1151724608
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1151724608
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -799491114, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %85
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -799491114, label %20
    i32 -1452729778, label %40
    i32 -861844925, label %75
    i32 188381556, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %85

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1452729778, i32 188381556
  store i32 %39, i32* %16
  br label %85

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator"*, align 8
  %42 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %41, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %42, align 8
  %43 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %41, align 8
  %44 = call %struct.q_t* @_ZNKSt13move_iteratorIP3q_tE4baseEv(%"class.std::move_iterator"* %43)
  %45 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %42, align 8
  %46 = call %struct.q_t* @_ZNKSt13move_iteratorIP3q_tE4baseEv(%"class.std::move_iterator"* %45)
  %47 = icmp eq %struct.q_t* %44, %46
  store i1 %47, i1* %3
  %48 = load i32, i32* @x.347
  %49 = load i32, i32* @y.348
  %50 = add i32 %48, -1431657443
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1431657443
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -861844925, i32 188381556
  store i32 %74, i32* %16
  br label %85

; <label>:75:                                     ; preds = %17
  %76 = load volatile i1, i1* %3
  ret i1 %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %"class.std::move_iterator"*, align 8
  %79 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %78, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %79, align 8
  %80 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %78, align 8
  %81 = call %struct.q_t* @_ZNKSt13move_iteratorIP3q_tE4baseEv(%"class.std::move_iterator"* %80)
  %82 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %79, align 8
  %83 = call %struct.q_t* @_ZNKSt13move_iteratorIP3q_tE4baseEv(%"class.std::move_iterator"* %82)
  %84 = icmp eq %struct.q_t* %81, %83
  store i32 -1452729778, i32* %16
  br label %85

; <label>:85:                                     ; preds = %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNKSt13move_iteratorIP3q_tE4baseEv(%"class.std::move_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  ret %struct.q_t* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZSt7forwardI3q_tEOT_RNSt16remove_referenceIS1_E4typeE(%struct.q_t* dereferenceable(40)) #0 comdat {
  %2 = alloca %struct.q_t*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.351
  %6 = load i32, i32* @y.352
  %7 = add i32 %5, 1161690959
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1161690959
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1114565345, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1114565345, label %19
    i32 1069049518, label %39
    i32 -1254340390, label %69
    i32 1220050804, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1069049518, i32 1220050804
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %40, align 8
  %41 = load %struct.q_t*, %struct.q_t** %40, align 8
  store %struct.q_t* %41, %struct.q_t** %2
  %42 = load i32, i32* @x.351
  %43 = load i32, i32* @y.352
  %44 = add i32 %42, 790464720
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 790464720
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1254340390, i32 1220050804
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %struct.q_t*, %struct.q_t** %2
  ret %struct.q_t* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %struct.q_t*, align 8
  store %struct.q_t* %0, %struct.q_t** %72, align 8
  %73 = load %struct.q_t*, %struct.q_t** %72, align 8
  store i32 1069049518, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIP3q_tEC2ES1_(%"class.std::move_iterator"*, %struct.q_t*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %struct.q_t*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %struct.q_t* %1, %struct.q_t** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %struct.q_t*, %struct.q_t** %4, align 8
  store %struct.q_t* %7, %struct.q_t** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3q_tE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator"*, %struct.q_t*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %struct.q_t*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %struct.q_t* %1, %struct.q_t** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %struct.q_t*, %struct.q_t** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.33"*, i64) #0 comdat align 2 {
  %3 = alloca %struct.q_t*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.357
  %7 = load i32, i32* @y.358
  %8 = add i32 %6, 1457101671
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1457101671
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1619967443, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %130
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1619967443, label %20
    i32 1746658142, label %40
    i32 -1689693248, label %82
    i32 -1497941064, label %84
  ]

; <label>:19:                                     ; preds = %17
  br label %130

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1746658142, i32 -1497941064
  store i32 %39, i32* %16
  br label %130

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %struct.q_t*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %42, align 8
  store i64 %1, i64* %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %42, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %45, i32 0, i32 0
  %47 = load %struct.q_t*, %struct.q_t** %46, align 8
  %48 = load i64, i64* %43, align 8
  %49 = sub i64 0, 5981086818887680145
  %50 = sub i64 %49, %48
  %51 = add i64 %50, 5981086818887680145
  %52 = sub i64 0, %48
  %53 = getelementptr inbounds %struct.q_t, %struct.q_t* %47, i64 %51
  store %struct.q_t* %53, %struct.q_t** %44, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.33"* %41, %struct.q_t** dereferenceable(8) %44) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %41, i32 0, i32 0
  %55 = load %struct.q_t*, %struct.q_t** %54, align 8
  store %struct.q_t* %55, %struct.q_t** %3
  %56 = load i32, i32* @x.357
  %57 = load i32, i32* @y.358
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -1689693248, i32 -1497941064
  store i32 %81, i32* %16
  br label %130

; <label>:82:                                     ; preds = %17
  %83 = load volatile %struct.q_t*, %struct.q_t** %3
  ret %struct.q_t* %83

; <label>:84:                                     ; preds = %17
  %85 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %86 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %87 = alloca i64, align 8
  %88 = alloca %struct.q_t*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %86, align 8
  store i64 %1, i64* %87, align 8
  %89 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %86, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %89, i32 0, i32 0
  %91 = load %struct.q_t*, %struct.q_t** %90, align 8
  %92 = load i64, i64* %87, align 8
  %93 = sub i64 0, 8643893089249797826
  %94 = sub i64 %93, %92
  %95 = add i64 %94, 8643893089249797826
  %96 = sub i64 0, %92
  %97 = mul i64 %95, %92
  %98 = shl i64 0, %92
  %99 = sub i64 0, 0
  %100 = add i64 0, %99
  %101 = sub i64 0, 0
  %102 = add i64 %100, -3788610066535633994
  %103 = add i64 %102, %92
  %104 = sub i64 %103, -3788610066535633994
  %105 = add i64 %100, %92
  %106 = shl i64 0, %92
  %107 = sub i64 0, 2346801265548537442
  %108 = sub i64 %107, 0
  %109 = add i64 %108, 2346801265548537442
  %110 = sub i64 0, 0
  %111 = sub i64 0, %92
  %112 = sub i64 %109, %111
  %113 = add i64 %109, %92
  %114 = add i64 0, -4776069597247612478
  %115 = sub i64 %114, 0
  %116 = sub i64 %115, -4776069597247612478
  %117 = sub i64 0, 0
  %118 = sub i64 0, %116
  %119 = sub i64 0, %92
  %120 = add i64 %118, %119
  %121 = sub i64 0, %120
  %122 = add i64 %116, %92
  %123 = add i64 0, -5406619256276079033
  %124 = sub i64 %123, %92
  %125 = sub i64 %124, -5406619256276079033
  %126 = sub i64 0, %92
  %127 = getelementptr inbounds %struct.q_t, %struct.q_t* %91, i64 %125
  store %struct.q_t* %127, %struct.q_t** %88, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.33"* %85, %struct.q_t** dereferenceable(8) %88) #3
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %85, i32 0, i32 0
  %129 = load %struct.q_t*, %struct.q_t** %128, align 8
  store i32 1746658142, i32* %16
  br label %130

; <label>:130:                                    ; preds = %84, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI3q_tEEENS0_14_Iter_comp_valIT_EES6_() #2 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI3q_tEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorI3q_tSaIS0_EE5emptyEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  store %struct.q_t* %6, %struct.q_t** %7, align 8
  %8 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE3endEv(%"class.std::vector"* %5) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %struct.q_t* %8, %struct.q_t** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPK3q_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %4) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPK3q_tSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.363
  %7 = load i32, i32* @y.364
  %8 = sub i32 %6, 1851487658
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1851487658
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1454833017, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1454833017, label %20
    i32 -976945448, label %40
    i32 -333446115, label %64
    i32 1021399212, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -976945448, i32 1021399212
  store i32 %39, i32* %16
  br label %76

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %41, align 8
  %44 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %43) #3
  %45 = load %struct.q_t*, %struct.q_t** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %42, align 8
  %47 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %46) #3
  %48 = load %struct.q_t*, %struct.q_t** %47, align 8
  %49 = icmp eq %struct.q_t* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.363
  %51 = load i32, i32* @y.364
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -333446115, i32 1021399212
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %67, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %68, align 8
  %69 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %67, align 8
  %70 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %69) #3
  %71 = load %struct.q_t*, %struct.q_t** %70, align 8
  %72 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %68, align 8
  %73 = call dereferenceable(8) %struct.q_t** @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %72) #3
  %74 = load %struct.q_t*, %struct.q_t** %73, align 8
  %75 = icmp eq %struct.q_t* %71, %74
  store i32 -976945448, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5frontEv(%"class.std::vector"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %5 = call %struct.q_t* @_ZNKSt6vectorI3q_tSaIS0_EE5beginEv(%"class.std::vector"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  store %struct.q_t* %5, %struct.q_t** %6, align 8
  %7 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIPK3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %3) #3
  ret %struct.q_t* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.q_t*, %struct.q_t*) #2 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.33"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.33"*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.367
  %12 = load i32, i32* @y.368
  %13 = sub i32 %11, -1469141497
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -1469141497
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 480244299, i32* %21
  br label %22

; <label>:22:                                     ; preds = %2, %175
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 480244299, label %25
    i32 1634032181, label %33
    i32 1374366173, label %66
    i32 -155208244, label %69
    i32 658418941, label %97
    i32 456163430, label %135
    i32 -1472810883, label %136
    i32 230237210, label %137
    i32 -1142839972, label %151
  ]

; <label>:24:                                     ; preds = %22
  br label %175

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 1634032181, i32 230237210
  store i32 %32, i32* %21
  br label %175

; <label>:33:                                     ; preds = %22
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %34, %"class.__gnu_cxx::__normal_iterator.33"** %8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %35, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %36 = alloca %"struct.std::less", align 1
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %37, %"class.__gnu_cxx::__normal_iterator.33"** %6
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %38, %"class.__gnu_cxx::__normal_iterator.33"** %5
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %39, %"class.__gnu_cxx::__normal_iterator.33"** %4
  %40 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %41 = alloca %"struct.std::less", align 1
  %42 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %43 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %43, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %44, align 8
  %45 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %45, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %46, align 8
  %47 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %8
  %48 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %49 = call i64 @_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %48, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %47) #3
  %50 = icmp sgt i64 %49, 1
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.367
  %52 = load i32, i32* @y.368
  %53 = add i32 %51, 1426745317
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1426745317
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1374366173, i32 230237210
  store i32 %65, i32* %21
  br label %175

; <label>:66:                                     ; preds = %22
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 -155208244, i32 -1472810883
  store i32 %68, i32* %21
  br label %175

; <label>:69:                                     ; preds = %22
  %70 = load i32, i32* @x.367
  %71 = load i32, i32* @y.368
  %72 = sub i32 %70, 705240589
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 705240589
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 658418941, i32 -1142839972
  store i32 %96, i32* %21
  br label %175

; <label>:97:                                     ; preds = %22
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %99 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.33"* @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.33"* %98) #3
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %6
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %100 to i8*
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %8
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %103, i64 8, i32 8, i1 false)
  %104 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %5
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %104 to i8*
  %106 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %107, i64 8, i32 8, i1 false)
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %4
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %108 to i8*
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %111 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %111, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI3q_tEEENS0_15_Iter_comp_iterIT_EES6_()
  %112 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %6
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %112, i32 0, i32 0
  %114 = load %struct.q_t*, %struct.q_t** %113, align 8
  %115 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %5
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %115, i32 0, i32 0
  %117 = load %struct.q_t*, %struct.q_t** %116, align 8
  %118 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %4
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %118, i32 0, i32 0
  %120 = load %struct.q_t*, %struct.q_t** %119, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_SD_T0_(%struct.q_t* %114, %struct.q_t* %117, %struct.q_t* %120)
  %121 = load i32, i32* @x.367
  %122 = load i32, i32* @y.368
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 456163430, i32 -1142839972
  store i32 %134, i32* %21
  br label %175

; <label>:135:                                    ; preds = %22
  store i32 -1472810883, i32* %21
  br label %175

; <label>:136:                                    ; preds = %22
  ret void

; <label>:137:                                    ; preds = %22
  %138 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %139 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %140 = alloca %"struct.std::less", align 1
  %141 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %142 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %143 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %144 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %145 = alloca %"struct.std::less", align 1
  %146 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %147 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %138, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %147, align 8
  %148 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %139, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %148, align 8
  %149 = call i64 @_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %139, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %138) #3
  %150 = icmp sgt i64 %149, 1
  store i32 1634032181, i32* %21
  br label %175

; <label>:151:                                    ; preds = %22
  %152 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %153 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.33"* @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.33"* %152) #3
  %154 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %6
  %155 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %154 to i8*
  %156 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %8
  %157 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %157, i64 8, i32 8, i1 false)
  %158 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %5
  %159 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %158 to i8*
  %160 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %161 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %161, i64 8, i32 8, i1 false)
  %162 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %4
  %163 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %162 to i8*
  %164 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %7
  %165 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %165, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI3q_tEEENS0_15_Iter_comp_iterIT_EES6_()
  %166 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %6
  %167 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %166, i32 0, i32 0
  %168 = load %struct.q_t*, %struct.q_t** %167, align 8
  %169 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %5
  %170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %169, i32 0, i32 0
  %171 = load %struct.q_t*, %struct.q_t** %170, align 8
  %172 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %4
  %173 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %172, i32 0, i32 0
  %174 = load %struct.q_t*, %struct.q_t** %173, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_SD_T0_(%struct.q_t* %168, %struct.q_t* %171, %struct.q_t* %174)
  store i32 658418941, i32* %21
  br label %175

; <label>:175:                                    ; preds = %151, %137, %135, %97, %69, %66, %33, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EE8pop_backEv(%"class.std::vector"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.q_t*, %struct.q_t** %6, align 8
  %8 = getelementptr inbounds %struct.q_t, %struct.q_t* %7, i32 -1
  store %struct.q_t* %8, %struct.q_t** %6, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %10 to %"class.std::allocator"*
  %12 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %struct.q_t*, %struct.q_t** %14, align 8
  invoke void @_ZNSt16allocator_traitsISaI3q_tEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator"* dereferenceable(1) %11, %struct.q_t* %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %1
  ret void

; <label>:17:                                     ; preds = %1
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.33"* @_ZN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.33"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  %5 = load %struct.q_t*, %struct.q_t** %4, align 8
  %6 = getelementptr inbounds %struct.q_t, %struct.q_t* %5, i32 -1
  store %struct.q_t* %6, %struct.q_t** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.33"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_SD_T0_(%struct.q_t*, %struct.q_t*, %struct.q_t*) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %struct.q_t, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %10 = alloca %struct.q_t, align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store %struct.q_t* %0, %struct.q_t** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  store %struct.q_t* %1, %struct.q_t** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %6, i32 0, i32 0
  store %struct.q_t* %2, %struct.q_t** %14, align 8
  %15 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %6) #3
  %16 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %15) #3
  %17 = bitcast %struct.q_t* %8 to i8*
  %18 = bitcast %struct.q_t* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 40, i32 8, i1 false)
  %19 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %4) #3
  %20 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %19) #3
  %21 = call dereferenceable(40) %struct.q_t* @_ZNK9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %6) #3
  %22 = bitcast %struct.q_t* %21 to i8*
  %23 = bitcast %struct.q_t* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 40, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %9 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = call i64 @_ZN9__gnu_cxxmiIP3q_tSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %4) #3
  %27 = call dereferenceable(40) %struct.q_t* @_ZSt4moveIR3q_tEONSt16remove_referenceIT_E4typeEOS3_(%struct.q_t* dereferenceable(40) %8) #3
  %28 = bitcast %struct.q_t* %10 to i8*
  %29 = bitcast %struct.q_t* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 40, i32 8, i1 false)
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %31 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 1, i32 1, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %9, i32 0, i32 0
  %33 = load %struct.q_t*, %struct.q_t** %32, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP3q_tSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.q_t* %33, i64 0, i64 %26, %struct.q_t* byval align 8 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.11"*, i64, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %9 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %6, align 8
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %10, %"class.std::allocator.12"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base.11"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.379
  %16 = load i32, i32* @y.380
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %63

; <label>:40:                                     ; preds = %14, %63
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %7, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  %44 = load i32, i32* @x.379
  %45 = load i32, i32* @y.380
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %63

; <label>:57:                                     ; preds = %40
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i8*, i8** %7, align 8
  %60 = load i32, i32* %8, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %40, %14
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %7, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3setIxSt4lessIxESaIxEESaIS4_EE21_M_default_initializeEm(%"class.std::vector.10"*, i64) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::set"*, %"class.std::set"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %12 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %11) #3
  %13 = call %"class.std::set"* @_ZSt27__uninitialized_default_n_aIPSt3setIxSt4lessIxESaIxEEmS4_ET_S6_T0_RSaIT1_E(%"class.std::set"* %9, i64 %10, %"class.std::allocator.12"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::set"* %13, %"class.std::set"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EED2Ev(%"struct.std::_Vector_base.11"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %5 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::set"*, %"class.std::set"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::set"*, %"class.std::set"** %13, align 8
  %15 = ptrtoint %"class.std::set"* %11 to i64
  %16 = ptrtoint %"class.std::set"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 48
  invoke void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.11"* %5, %"class.std::set"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* @x.383
  %30 = load i32, i32* @y.384
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %71

; <label>:54:                                     ; preds = %28, %71
  %55 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %55) #7
  %56 = load i32, i32* @x.383
  %57 = load i32, i32* @y.384
  %58 = sub i32 %56, 2050456652
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 2050456652
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %71

; <label>:70:                                     ; preds = %54
  unreachable

; <label>:71:                                     ; preds = %54, %28
  %72 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %72) #7
  br label %54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.385
  %6 = load i32, i32* @y.386
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 921378049, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 921378049, label %18
    i32 -1287856286, label %26
    i32 1777003243, label %50
    i32 -639107756, label %51
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1287856286, i32 -639107756
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.12"*, align 8
  store %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %28, align 8
  %29 = load %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %29 to %"class.std::allocator.12"*
  %31 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %28, align 8
  call void @_ZNSaISt3setIxSt4lessIxESaIxEEEC2ERKS4_(%"class.std::allocator.12"* %30, %"class.std::allocator.12"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 0
  store %"class.std::set"* null, %"class.std::set"** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 1
  store %"class.std::set"* null, %"class.std::set"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 2
  store %"class.std::set"* null, %"class.std::set"** %34, align 8
  %35 = load i32, i32* @x.385
  %36 = load i32, i32* @y.386
  %37 = add i32 %35, -373590079
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -373590079
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1777003243, i32 -639107756
  store i32 %49, i32* %14
  br label %60

; <label>:50:                                     ; preds = %15
  ret void

; <label>:51:                                     ; preds = %15
  %52 = alloca %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %53 = alloca %"class.std::allocator.12"*, align 8
  store %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %52, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %53, align 8
  %54 = load %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %52, align 8
  %55 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %54 to %"class.std::allocator.12"*
  %56 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %53, align 8
  call void @_ZNSaISt3setIxSt4lessIxESaIxEEEC2ERKS4_(%"class.std::allocator.12"* %55, %"class.std::allocator.12"* dereferenceable(1) %56) #3
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %54, i32 0, i32 0
  store %"class.std::set"* null, %"class.std::set"** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %54, i32 0, i32 1
  store %"class.std::set"* null, %"class.std::set"** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %54, i32 0, i32 2
  store %"class.std::set"* null, %"class.std::set"** %59, align 8
  store i32 -1287856286, i32* %14
  br label %60

; <label>:60:                                     ; preds = %51, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base.11"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.11"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::set"* @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.11"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::set"* %7, %"class.std::set"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::set"*, %"class.std::set"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::set"* %12, %"class.std::set"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::set"*, %"class.std::set"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::set", %"class.std::set"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::set"* %19, %"class.std::set"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.389
  %5 = load i32, i32* @y.390
  %6 = sub i32 %4, 1540342339
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1540342339
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -412396155, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -412396155, label %18
    i32 1941946651, label %38
    i32 -1029274306, label %69
    i32 123248654, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1941946651, i32 123248654
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %40 to %"class.std::allocator.12"*
  call void @_ZNSaISt3setIxSt4lessIxESaIxEEED2Ev(%"class.std::allocator.12"* %41) #3
  %42 = load i32, i32* @x.389
  %43 = load i32, i32* @y.390
  %44 = sub i32 %42, -2070651121
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -2070651121
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1029274306, i32 123248654
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %71, align 8
  %72 = load %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"** %71, align 8
  %73 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %72 to %"class.std::allocator.12"*
  call void @_ZNSaISt3setIxSt4lessIxESaIxEEED2Ev(%"class.std::allocator.12"* %73) #3
  store i32 1941946651, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setIxSt4lessIxESaIxEEEC2ERKS4_(%"class.std::allocator.12"*, %"class.std::allocator.12"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.391
  %6 = load i32, i32* @y.392
  %7 = add i32 %5, 2118177822
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2118177822
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 814243566, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 814243566, label %19
    i32 -189618619, label %27
    i32 435208624, label %60
    i32 -508293369, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -189618619, i32 -508293369
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.12"*, align 8
  %29 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %28, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %29, align 8
  %30 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %28, align 8
  %31 = bitcast %"class.std::allocator.12"* %30 to %"class.__gnu_cxx::new_allocator.13"*
  %32 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %29, align 8
  %33 = bitcast %"class.std::allocator.12"* %32 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.13"* %31, %"class.__gnu_cxx::new_allocator.13"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.391
  %35 = load i32, i32* @y.392
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 435208624, i32 -508293369
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.12"*, align 8
  %63 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %62, align 8
  store %"class.std::allocator.12"* %1, %"class.std::allocator.12"** %63, align 8
  %64 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %62, align 8
  %65 = bitcast %"class.std::allocator.12"* %64 to %"class.__gnu_cxx::new_allocator.13"*
  %66 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %63, align 8
  %67 = bitcast %"class.std::allocator.12"* %66 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.13"* %65, %"class.__gnu_cxx::new_allocator.13"* dereferenceable(1) %67) #3
  store i32 -189618619, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.393
  %6 = load i32, i32* @y.394
  %7 = add i32 %5, 1883896546
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1883896546
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2042666311, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2042666311, label %19
    i32 -1169439291, label %39
    i32 1949923278, label %58
    i32 -1028801808, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1169439291, i32 -1028801808
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %1, %"class.__gnu_cxx::new_allocator.13"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %40, align 8
  %43 = load i32, i32* @x.393
  %44 = load i32, i32* @y.394
  %45 = add i32 %43, -1645911588
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1645911588
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1949923278, i32 -1028801808
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %60, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %1, %"class.__gnu_cxx::new_allocator.13"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %60, align 8
  store i32 -1169439291, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.11"*, i64) #2 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.11"*
  %5 = alloca %"struct.std::_Vector_base.11"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5, align 8
  store %"struct.std::_Vector_base.11"* %7, %"struct.std::_Vector_base.11"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1276931869, i32* %9
  %10 = alloca %"class.std::set"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1276931869, label %14
    i32 1472121286, label %18
    i32 136479000, label %24
    i32 1270760676, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1472121286, i32 136479000
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %20 to %"class.std::allocator.12"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::set"* @_ZNSt16allocator_traitsISaISt3setIxSt4lessIxESaIxEEEE8allocateERS5_m(%"class.std::allocator.12"* dereferenceable(1) %21, i64 %22)
  store i32 1270760676, i32* %9
  store %"class.std::set"* %23, %"class.std::set"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1270760676, i32* %9
  store %"class.std::set"* null, %"class.std::set"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::set"*, %"class.std::set"** %10
  ret %"class.std::set"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZNSt16allocator_traitsISaISt3setIxSt4lessIxESaIxEEEE8allocateERS5_m(%"class.std::allocator.12"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  %6 = bitcast %"class.std::allocator.12"* %5 to %"class.__gnu_cxx::new_allocator.13"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::set"* @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"* %6, i64 %7, i8* null)
  ret %"class.std::set"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 338997053, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 338997053, label %16
    i32 889727812, label %21
    i32 -1985596295, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 889727812, i32 -1985596295
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 48
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::set"*
  ret %"class.std::set"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZSt27__uninitialized_default_n_aIPSt3setIxSt4lessIxESaIxEEmS4_ET_S6_T0_RSaIT1_E(%"class.std::set"*, i64, %"class.std::allocator.12"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::set"* @_ZSt25__uninitialized_default_nIPSt3setIxSt4lessIxESaIxEEmET_S6_T0_(%"class.std::set"* %7, i64 %8)
  ret %"class.std::set"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %3 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %4 to %"class.std::allocator.12"*
  ret %"class.std::allocator.12"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZSt25__uninitialized_default_nIPSt3setIxSt4lessIxESaIxEEmET_S6_T0_(%"class.std::set"*, i64) #2 comdat {
  %3 = alloca %"class.std::set"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.407
  %7 = load i32, i32* @y.408
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1698521247, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1698521247, label %19
    i32 -1357397805, label %39
    i32 -837554338, label %61
    i32 -162805990, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1357397805, i32 -162805990
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::set"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store %"class.std::set"* %0, %"class.std::set"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load %"class.std::set"*, %"class.std::set"** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::set"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3setIxSt4lessIxESaIxEEmEET_S8_T0_(%"class.std::set"* %43, i64 %44)
  store %"class.std::set"* %45, %"class.std::set"** %3
  %46 = load i32, i32* @x.407
  %47 = load i32, i32* @y.408
  %48 = add i32 %46, 2126962260
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 2126962260
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -837554338, i32 -162805990
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::set"*, %"class.std::set"** %3
  ret %"class.std::set"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::set"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i8, align 1
  store %"class.std::set"* %0, %"class.std::set"** %64, align 8
  store i64 %1, i64* %65, align 8
  store i8 1, i8* %66, align 1
  %67 = load %"class.std::set"*, %"class.std::set"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::set"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3setIxSt4lessIxESaIxEEmEET_S8_T0_(%"class.std::set"* %67, i64 %68)
  store i32 -1357397805, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3setIxSt4lessIxESaIxEEmEET_S8_T0_(%"class.std::set"*, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  store %"class.std::set"* %8, %"class.std::set"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %149, %2
  %10 = load i32, i32* @x.409
  %11 = load i32, i32* @y.410
  %12 = add i32 %10, -2008906837
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -2008906837
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  br i1 %34, label %36, label %359

; <label>:36:                                     ; preds = %9, %359
  %37 = load i64, i64* %4, align 8
  %38 = icmp ugt i64 %37, 0
  %39 = load i32, i32* @x.409
  %40 = load i32, i32* @y.410
  %41 = add i32 %39, 196738804
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 196738804
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %359

; <label>:65:                                     ; preds = %36
  br i1 %38, label %66, label %202

; <label>:66:                                     ; preds = %65
  %67 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %68 = call %"class.std::set"* @_ZSt11__addressofISt3setIxSt4lessIxESaIxEEEPT_RS5_(%"class.std::set"* dereferenceable(48) %67) #3
  invoke void @_ZSt10_ConstructISt3setIxSt4lessIxESaIxEEJEEvPT_DpOT0_(%"class.std::set"* %68)
          to label %69 unwind label %150

; <label>:69:                                     ; preds = %66
  %70 = load i32, i32* @x.409
  %71 = load i32, i32* @y.410
  %72 = add i32 %70, -106487433
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -106487433
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %362

; <label>:96:                                     ; preds = %69, %362
  %97 = load i32, i32* @x.409
  %98 = load i32, i32* @y.410
  %99 = add i32 %97, -1471893683
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -1471893683
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %362

; <label>:111:                                    ; preds = %96
  br label %112

; <label>:112:                                    ; preds = %111
  %113 = load i32, i32* @x.409
  %114 = load i32, i32* @y.410
  %115 = add i32 %113, 1080046358
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 1080046358
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %363

; <label>:127:                                    ; preds = %112, %363
  %128 = load i64, i64* %4, align 8
  %129 = sub i64 %128, 8549854372373146836
  %130 = add i64 %129, -1
  %131 = add i64 %130, 8549854372373146836
  %132 = add i64 %128, -1
  store i64 %131, i64* %4, align 8
  %133 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %134 = getelementptr inbounds %"class.std::set", %"class.std::set"* %133, i32 1
  store %"class.std::set"* %134, %"class.std::set"** %5, align 8
  %135 = load i32, i32* @x.409
  %136 = load i32, i32* @y.410
  %137 = sub i32 %135, 461780607
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 461780607
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %363

; <label>:149:                                    ; preds = %127
  br label %9

; <label>:150:                                    ; preds = %66
  %151 = load i32, i32* @x.409
  %152 = load i32, i32* @y.410
  %153 = add i32 %151, -1034690358
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, -1034690358
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %394

; <label>:177:                                    ; preds = %150, %394
  %178 = landingpad { i8*, i32 }
          catch i8* null
  %179 = extractvalue { i8*, i32 } %178, 0
  store i8* %179, i8** %6, align 8
  %180 = extractvalue { i8*, i32 } %178, 1
  store i32 %180, i32* %7, align 4
  %181 = load i32, i32* @x.409
  %182 = load i32, i32* @y.410
  %183 = add i32 %181, -2027198648
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -2027198648
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  br i1 %193, label %195, label %394

; <label>:195:                                    ; preds = %177
  br label %196

; <label>:196:                                    ; preds = %195
  %197 = load i8*, i8** %6, align 8
  %198 = call i8* @__cxa_begin_catch(i8* %197) #3
  %199 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %200 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  invoke void @_ZSt8_DestroyIPSt3setIxSt4lessIxESaIxEEEvT_S6_(%"class.std::set"* %199, %"class.std::set"* %200)
          to label %201 unwind label %204

; <label>:201:                                    ; preds = %196
  invoke void @__cxa_rethrow() #13
          to label %330 unwind label %204

; <label>:202:                                    ; preds = %65
  %203 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  ret %"class.std::set"* %203

; <label>:204:                                    ; preds = %201, %196
  %205 = load i32, i32* @x.409
  %206 = load i32, i32* @y.410
  %207 = add i32 %205, 1271542518
  %208 = sub i32 %207, 1
  %209 = sub i32 %208, 1271542518
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %398

; <label>:219:                                    ; preds = %204, %398
  %220 = landingpad { i8*, i32 }
          cleanup
  %221 = extractvalue { i8*, i32 } %220, 0
  store i8* %221, i8** %6, align 8
  %222 = extractvalue { i8*, i32 } %220, 1
  store i32 %222, i32* %7, align 4
  %223 = load i32, i32* @x.409
  %224 = load i32, i32* @y.410
  %225 = sub i32 0, 1
  %226 = add i32 %223, %225
  %227 = sub i32 %223, 1
  %228 = mul i32 %223, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %224, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %398

; <label>:236:                                    ; preds = %219
  invoke void @__cxa_end_catch()
          to label %237 unwind label %286

; <label>:237:                                    ; preds = %236
  br label %281
                                                  ; No predecessors!
  %239 = load i32, i32* @x.409
  %240 = load i32, i32* @y.410
  %241 = add i32 %239, -942896329
  %242 = sub i32 %241, 1
  %243 = sub i32 %242, -942896329
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 true, true
  %252 = and i1 %249, true
  %253 = and i1 %247, %251
  %254 = and i1 %250, true
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 true, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  br i1 %263, label %265, label %402

; <label>:265:                                    ; preds = %238, %402
  call void @llvm.trap()
  %266 = load i32, i32* @x.409
  %267 = load i32, i32* @y.410
  %268 = sub i32 %266, -1871263447
  %269 = sub i32 %268, 1
  %270 = add i32 %269, -1871263447
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = and i1 %274, %275
  %277 = xor i1 %274, %275
  %278 = or i1 %276, %277
  %279 = or i1 %274, %275
  br i1 %278, label %280, label %402

; <label>:280:                                    ; preds = %265
  unreachable

; <label>:281:                                    ; preds = %237
  %282 = load i8*, i8** %6, align 8
  %283 = load i32, i32* %7, align 4
  %284 = insertvalue { i8*, i32 } undef, i8* %282, 0
  %285 = insertvalue { i8*, i32 } %284, i32 %283, 1
  resume { i8*, i32 } %285

; <label>:286:                                    ; preds = %236
  %287 = load i32, i32* @x.409
  %288 = load i32, i32* @y.410
  %289 = sub i32 0, 1
  %290 = add i32 %287, %289
  %291 = sub i32 %287, 1
  %292 = mul i32 %287, %290
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %288, 10
  %296 = xor i1 %294, true
  %297 = xor i1 %295, true
  %298 = xor i1 false, true
  %299 = and i1 %296, false
  %300 = and i1 %294, %298
  %301 = and i1 %297, false
  %302 = and i1 %295, %298
  %303 = or i1 %299, %300
  %304 = or i1 %301, %302
  %305 = xor i1 %303, %304
  %306 = or i1 %296, %297
  %307 = xor i1 %306, true
  %308 = or i1 false, %298
  %309 = and i1 %307, %308
  %310 = or i1 %305, %309
  %311 = or i1 %294, %295
  br i1 %310, label %312, label %403

; <label>:312:                                    ; preds = %286, %403
  %313 = landingpad { i8*, i32 }
          catch i8* null
  %314 = extractvalue { i8*, i32 } %313, 0
  call void @__clang_call_terminate(i8* %314) #7
  %315 = load i32, i32* @x.409
  %316 = load i32, i32* @y.410
  %317 = sub i32 %315, -2020690706
  %318 = sub i32 %317, 1
  %319 = add i32 %318, -2020690706
  %320 = sub i32 %315, 1
  %321 = mul i32 %315, %319
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %316, 10
  %325 = and i1 %323, %324
  %326 = xor i1 %323, %324
  %327 = or i1 %325, %326
  %328 = or i1 %323, %324
  br i1 %327, label %329, label %403

; <label>:329:                                    ; preds = %312
  unreachable

; <label>:330:                                    ; preds = %201
  %331 = load i32, i32* @x.409
  %332 = load i32, i32* @y.410
  %333 = sub i32 0, 1
  %334 = add i32 %331, %333
  %335 = sub i32 %331, 1
  %336 = mul i32 %331, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %332, 10
  %340 = and i1 %338, %339
  %341 = xor i1 %338, %339
  %342 = or i1 %340, %341
  %343 = or i1 %338, %339
  br i1 %342, label %344, label %406

; <label>:344:                                    ; preds = %330, %406
  %345 = load i32, i32* @x.409
  %346 = load i32, i32* @y.410
  %347 = sub i32 0, 1
  %348 = add i32 %345, %347
  %349 = sub i32 %345, 1
  %350 = mul i32 %345, %348
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %346, 10
  %354 = and i1 %352, %353
  %355 = xor i1 %352, %353
  %356 = or i1 %354, %355
  %357 = or i1 %352, %353
  br i1 %356, label %358, label %406

; <label>:358:                                    ; preds = %344
  unreachable

; <label>:359:                                    ; preds = %36, %9
  %360 = load i64, i64* %4, align 8
  %361 = icmp ugt i64 %360, 0
  br label %36

; <label>:362:                                    ; preds = %96, %69
  br label %96

; <label>:363:                                    ; preds = %127, %112
  %364 = load i64, i64* %4, align 8
  %365 = add i64 0, -4287033440614691777
  %366 = sub i64 %365, %364
  %367 = sub i64 %366, -4287033440614691777
  %368 = sub i64 0, %364
  %369 = sub i64 0, -1
  %370 = sub i64 %367, %369
  %371 = add i64 %367, -1
  %372 = shl i64 %364, -1
  %373 = shl i64 %364, -1
  %374 = shl i64 %364, -1
  %375 = sub i64 %364, 8855755812510534340
  %376 = sub i64 %375, -1
  %377 = add i64 %376, 8855755812510534340
  %378 = sub i64 %364, -1
  %379 = mul i64 %377, -1
  %380 = add i64 %364, -6262486606211597477
  %381 = sub i64 %380, -1
  %382 = sub i64 %381, -6262486606211597477
  %383 = sub i64 %364, -1
  %384 = mul i64 %382, -1
  %385 = sub i64 0, -1
  %386 = add i64 %364, %385
  %387 = sub i64 %364, -1
  %388 = mul i64 %386, -1
  %389 = sub i64 0, -1
  %390 = sub i64 %364, %389
  %391 = add i64 %364, -1
  store i64 %390, i64* %4, align 8
  %392 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %393 = getelementptr inbounds %"class.std::set", %"class.std::set"* %392, i32 1
  store %"class.std::set"* %393, %"class.std::set"** %5, align 8
  br label %127

; <label>:394:                                    ; preds = %177, %150
  %395 = landingpad { i8*, i32 }
          catch i8* null
  %396 = extractvalue { i8*, i32 } %395, 0
  store i8* %396, i8** %6, align 8
  %397 = extractvalue { i8*, i32 } %395, 1
  store i32 %397, i32* %7, align 4
  br label %177

; <label>:398:                                    ; preds = %219, %204
  %399 = landingpad { i8*, i32 }
          cleanup
  %400 = extractvalue { i8*, i32 } %399, 0
  store i8* %400, i8** %6, align 8
  %401 = extractvalue { i8*, i32 } %399, 1
  store i32 %401, i32* %7, align 4
  br label %219

; <label>:402:                                    ; preds = %265, %238
  call void @llvm.trap()
  br label %265

; <label>:403:                                    ; preds = %312, %286
  %404 = landingpad { i8*, i32 }
          catch i8* null
  %405 = extractvalue { i8*, i32 } %404, 0
  call void @__clang_call_terminate(i8* %405) #7
  br label %312

; <label>:406:                                    ; preds = %344, %330
  br label %344
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt3setIxSt4lessIxESaIxEEJEEvPT_DpOT0_(%"class.std::set"*) #0 comdat {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = bitcast %"class.std::set"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::set"*
  call void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::set"* @_ZSt11__addressofISt3setIxSt4lessIxESaIxEEEPT_RS5_(%"class.std::set"* dereferenceable(48)) #0 comdat {
  %2 = alloca %"class.std::set"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.413
  %6 = load i32, i32* @y.414
  %7 = sub i32 %5, 100466955
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 100466955
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1838688309, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1838688309, label %19
    i32 -227049478, label %39
    i32 1970790908, label %59
    i32 -959434736, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -227049478, i32 -959434736
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %40, align 8
  %41 = load %"class.std::set"*, %"class.std::set"** %40, align 8
  %42 = bitcast %"class.std::set"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::set"*
  store %"class.std::set"* %43, %"class.std::set"** %2
  %44 = load i32, i32* @x.413
  %45 = load i32, i32* @y.414
  %46 = sub i32 %44, 1889673906
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1889673906
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1970790908, i32 -959434736
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::set"*, %"class.std::set"** %2
  ret %"class.std::set"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %62, align 8
  %63 = load %"class.std::set"*, %"class.std::set"** %62, align 8
  %64 = bitcast %"class.std::set"* %63 to i8*
  %65 = bitcast i8* %64 to %"class.std::set"*
  store i32 -227049478, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3setIxSt4lessIxESaIxEEEvT_S6_(%"class.std::set"*, %"class.std::set"*) #2 comdat {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setIxSt4lessIxESaIxEEEEvT_S8_(%"class.std::set"* %5, %"class.std::set"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #7
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.421
  %3 = load i32, i32* @y.422
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %63

; <label>:27:                                     ; preds = %1, %63
  %28 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %28, align 8
  %31 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %28, align 8
  %32 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.15"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 1
  %35 = bitcast %"struct.std::_Rb_tree_node_base"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 32, i32 8, i1 false)
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 2
  store i64 0, i64* %36, align 8
  %37 = load i32, i32* @x.421
  %38 = load i32, i32* @y.422
  %39 = add i32 %37, -1309991386
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1309991386
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %63

; <label>:51:                                     ; preds = %27
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %51
  ret void

; <label>:53:                                     ; preds = %51
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %29, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %30, align 4
  %57 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.15"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %29, align 8
  %60 = load i32, i32* %30, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %27, %1
  %64 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %65 = alloca i8*
  %66 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %64, align 8
  %67 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %64, align 8
  %68 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %67 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.15"* %68) #3
  %69 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %67, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %67, i32 0, i32 1
  %71 = bitcast %"struct.std::_Rb_tree_node_base"* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* %71, i8 0, i64 32, i32 8, i1 false)
  %72 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %67, i32 0, i32 2
  store i64 0, i64* %72, align 8
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.423
  %5 = load i32, i32* @y.424
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1096977711, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1096977711, label %17
    i32 -658618998, label %25
    i32 -1055783134, label %56
    i32 -1729679704, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -658618998, i32 -1729679704
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %26, align 8
  %27 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %26, align 8
  %28 = bitcast %"class.std::allocator.15"* %27 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %28) #3
  %29 = load i32, i32* @x.423
  %30 = load i32, i32* @y.424
  %31 = add i32 %29, 2027900249
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 2027900249
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1055783134, i32 -1729679704
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %58, align 8
  %59 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %58, align 8
  %60 = bitcast %"class.std::allocator.15"* %59 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %60) #3
  store i32 -658618998, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.15"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.431
  %5 = load i32, i32* @y.432
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 838138214, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %70
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 838138214, label %17
    i32 696999660, label %37
    i32 111309461, label %66
    i32 -676641842, label %67
  ]

; <label>:16:                                     ; preds = %14
  br label %70

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 696999660, i32 -676641842
  store i32 %36, i32* %13
  br label %70

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %38, align 8
  %40 = load i32, i32* @x.431
  %41 = load i32, i32* @y.432
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 111309461, i32 -676641842
  store i32 %65, i32* %13
  br label %70

; <label>:66:                                     ; preds = %14
  ret void

; <label>:67:                                     ; preds = %14
  %68 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %68, align 8
  store i32 696999660, i32* %13
  br label %70

; <label>:70:                                     ; preds = %67, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setIxSt4lessIxESaIxEEEEvT_S8_(%"class.std::set"*, %"class.std::set"*) #2 comdat align 2 {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = alloca i32
  store i32 -780298663, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -780298663, label %9
    i32 309219908, label %14
    i32 1074650853, label %17
    i32 -125551760, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %11 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %12 = icmp ne %"class.std::set"* %10, %11
  %13 = select i1 %12, i32 309219908, i32 -125551760
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %16 = call %"class.std::set"* @_ZSt11__addressofISt3setIxSt4lessIxESaIxEEEPT_RS5_(%"class.std::set"* dereferenceable(48) %15) #3
  call void @_ZSt8_DestroyISt3setIxSt4lessIxESaIxEEEvPT_(%"class.std::set"* %16)
  store i32 1074650853, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %19 = getelementptr inbounds %"class.std::set", %"class.std::set"* %18, i32 1
  store %"class.std::set"* %19, %"class.std::set"** %3, align 8
  store i32 -780298663, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt3setIxSt4lessIxESaIxEEEvPT_(%"class.std::set"*) #0 comdat {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %13) #3
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* @x.439
  %16 = load i32, i32* @y.440
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %68

; <label>:40:                                     ; preds = %14, %68
  %41 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %41) #7
  %42 = load i32, i32* @x.439
  %43 = load i32, i32* @y.440
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %68

; <label>:67:                                     ; preds = %40
  unreachable

; <label>:68:                                     ; preds = %40, %14
  %69 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %69) #7
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree"*
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %6, align 8
  %8 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  store %"class.std::_Rb_tree"* %8, %"class.std::_Rb_tree"** %4
  %9 = alloca i32
  store i32 -1373928834, i32* %9
  br label %10

; <label>:10:                                     ; preds = %2, %130
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 -1373928834, label %13
    i32 -1754615972, label %28
    i32 1074223255, label %46
    i32 654921663, label %49
    i32 738542695, label %77
    i32 817626924, label %114
    i32 -503212940, label %115
    i32 1054143644, label %116
    i32 -1557254671, label %119
  ]

; <label>:12:                                     ; preds = %10
  br label %130

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* @x.441
  %15 = load i32, i32* @y.442
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1754615972, i32 1054143644
  store i32 %27, i32* %9
  br label %130

; <label>:28:                                     ; preds = %10
  %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %30 = icmp ne %"struct.std::_Rb_tree_node"* %29, null
  store i1 %30, i1* %3
  %31 = load i32, i32* @x.441
  %32 = load i32, i32* @y.442
  %33 = sub i32 %31, 2138944650
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 2138944650
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1074223255, i32 1054143644
  store i32 %45, i32* %9
  br label %130

; <label>:46:                                     ; preds = %10
  %47 = load volatile i1, i1* %3
  %48 = select i1 %47, i32 654921663, i32 -503212940
  store i32 %48, i32* %9
  br label %130

; <label>:49:                                     ; preds = %10
  %50 = load i32, i32* @x.441
  %51 = load i32, i32* @y.442
  %52 = add i32 %50, 973277156
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 973277156
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 738542695, i32 -1557254671
  store i32 %76, i32* %9
  br label %130

; <label>:77:                                     ; preds = %10
  %78 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %79 = bitcast %"struct.std::_Rb_tree_node"* %78 to %"struct.std::_Rb_tree_node_base"*
  %80 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %79) #3
  %81 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %81, %"struct.std::_Rb_tree_node"* %80)
  %82 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %83 = bitcast %"struct.std::_Rb_tree_node"* %82 to %"struct.std::_Rb_tree_node_base"*
  %84 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %83) #3
  store %"struct.std::_Rb_tree_node"* %84, %"struct.std::_Rb_tree_node"** %7, align 8
  %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %86 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %86, %"struct.std::_Rb_tree_node"* %85) #3
  %87 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %87, %"struct.std::_Rb_tree_node"** %6, align 8
  %88 = load i32, i32* @x.441
  %89 = load i32, i32* @y.442
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 817626924, i32 -1557254671
  store i32 %113, i32* %9
  br label %130

; <label>:114:                                    ; preds = %10
  store i32 -1373928834, i32* %9
  br label %130

; <label>:115:                                    ; preds = %10
  ret void

; <label>:116:                                    ; preds = %10
  %117 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %118 = icmp ne %"struct.std::_Rb_tree_node"* %117, null
  store i32 -1754615972, i32* %9
  br label %130

; <label>:119:                                    ; preds = %10
  %120 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %121 = bitcast %"struct.std::_Rb_tree_node"* %120 to %"struct.std::_Rb_tree_node_base"*
  %122 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %121) #3
  %123 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %123, %"struct.std::_Rb_tree_node"* %122)
  %124 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %125 = bitcast %"struct.std::_Rb_tree_node"* %124 to %"struct.std::_Rb_tree_node_base"*
  %126 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %125) #3
  store %"struct.std::_Rb_tree_node"* %126, %"struct.std::_Rb_tree_node"** %7, align 8
  %127 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %128 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %128, %"struct.std::_Rb_tree_node"* %127) #3
  %129 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %129, %"struct.std::_Rb_tree_node"** %6, align 8
  store i32 738542695, i32* %9
  br label %130

; <label>:130:                                    ; preds = %119, %116, %114, %77, %49, %46, %28, %13, %12
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.445
  %5 = load i32, i32* @y.446
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -924207287, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -924207287, label %17
    i32 -2094019555, label %25
    i32 338218829, label %55
    i32 -1613527206, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -2094019555, i32 -1613527206
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %26, align 8
  %27 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %27 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.15"* %28) #3
  %29 = load i32, i32* @x.445
  %30 = load i32, i32* @y.446
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 338218829, i32 -1613527206
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %57, align 8
  %58 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %57, align 8
  %59 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %58 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.15"* %59) #3
  store i32 -2094019555, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.453
  %4 = load i32, i32* @y.454
  %5 = add i32 %3, 1695636825
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1695636825
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %87

; <label>:17:                                     ; preds = %2, %87
  %18 = alloca %"class.std::_Rb_tree"*, align 8
  %19 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %18, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %19, align 8
  %20 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %18, align 8
  %21 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %20) #3
  %22 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %19, align 8
  %23 = load i32, i32* @x.453
  %24 = load i32, i32* @y.454
  %25 = sub i32 %23, 1188362340
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 1188362340
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %87

; <label>:37:                                     ; preds = %17
  %38 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %22)
          to label %39 unwind label %84

; <label>:39:                                     ; preds = %37
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1) %21, i64* %38)
          to label %40 unwind label %84

; <label>:40:                                     ; preds = %39
  %41 = load i32, i32* @x.453
  %42 = load i32, i32* @y.454
  %43 = sub i32 %41, -281603483
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -281603483
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %93

; <label>:67:                                     ; preds = %40, %93
  %68 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %19, align 8
  %69 = load i32, i32* @x.453
  %70 = load i32, i32* @y.454
  %71 = add i32 %69, 840263325
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 840263325
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %93

; <label>:83:                                     ; preds = %67
  ret void

; <label>:84:                                     ; preds = %39, %37
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  call void @__clang_call_terminate(i8* %86) #7
  unreachable

; <label>:87:                                     ; preds = %17, %2
  %88 = alloca %"class.std::_Rb_tree"*, align 8
  %89 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %88, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %89, align 8
  %90 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %88, align 8
  %91 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %90) #3
  %92 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %89, align 8
  br label %17

; <label>:93:                                     ; preds = %67, %40
  %94 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %19, align 8
  br label %67
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.455
  %4 = load i32, i32* @y.456
  %5 = add i32 %3, 983569261
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 983569261
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %82

; <label>:29:                                     ; preds = %2, %82
  %30 = alloca %"class.std::_Rb_tree"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %30, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %31, align 8
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %30, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %32) #3
  %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %31, align 8
  %35 = load i32, i32* @x.455
  %36 = load i32, i32* @y.456
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %82

; <label>:48:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %33, %"struct.std::_Rb_tree_node"* %34, i64 1)
          to label %49 unwind label %79

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* @x.455
  %51 = load i32, i32* @y.456
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %88

; <label>:63:                                     ; preds = %49, %88
  %64 = load i32, i32* @x.455
  %65 = load i32, i32* @y.456
  %66 = sub i32 %64, -1066312261
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -1066312261
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  br i1 %76, label %78, label %88

; <label>:78:                                     ; preds = %63
  ret void

; <label>:79:                                     ; preds = %48
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  call void @__clang_call_terminate(i8* %81) #7
  unreachable

; <label>:82:                                     ; preds = %29, %2
  %83 = alloca %"class.std::_Rb_tree"*, align 8
  %84 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %83, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %84, align 8
  %85 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %83, align 8
  %86 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %85) #3
  %87 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %84, align 8
  br label %29

; <label>:88:                                     ; preds = %63, %49
  br label %63
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1), i64*) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.16"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.459
  %6 = load i32, i32* @y.460
  %7 = add i32 %5, 107199130
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 107199130
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1541997000, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1541997000, label %19
    i32 517652627, label %27
    i32 1016673953, label %59
    i32 -2073904942, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 517652627, i32 -2073904942
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %30 to %"class.std::allocator.15"*
  store %"class.std::allocator.15"* %31, %"class.std::allocator.15"** %2
  %32 = load i32, i32* @x.459
  %33 = load i32, i32* @y.460
  %34 = sub i32 %32, -831198851
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -831198851
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1016673953, i32 -2073904942
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.15"*, %"class.std::allocator.15"** %2
  ret %"class.std::allocator.15"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %62, align 8
  %63 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %64 to %"class.std::allocator.15"*
  store i32 517652627, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.16"*, i64*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.465
  %6 = load i32, i32* @y.466
  %7 = add i32 %5, 998982312
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 998982312
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1813845436, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1813845436, label %19
    i32 -545604234, label %27
    i32 1318841484, label %47
    i32 2017781701, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -545604234, i32 2017781701
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %29 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %30 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %29) #3
  %31 = bitcast i8* %30 to i64*
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.465
  %33 = load i32, i32* @y.466
  %34 = sub i32 %32, -218552422
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -218552422
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1318841484, i32 2017781701
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64*, i64** %2
  ret i64* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %50, align 8
  %51 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %50, align 8
  %52 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %51) #3
  %53 = bitcast i8* %52 to i64*
  store i32 -545604234, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #0 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [8 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.471
  %7 = load i32, i32* @y.472
  %8 = add i32 %6, 512956159
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 512956159
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 258620176, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 258620176, label %20
    i32 -220156459, label %28
    i32 -365878395, label %62
    i32 605622349, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -220156459, i32 605622349
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  %33 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %30, align 8
  %34 = bitcast %"struct.std::_Rb_tree_node"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.471
  %36 = load i32, i32* @y.472
  %37 = add i32 %35, 1997673835
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1997673835
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -365878395, i32 605622349
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %65 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %64, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %64, align 8
  %68 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %65, align 8
  %69 = bitcast %"struct.std::_Rb_tree_node"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -220156459, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIxSt4lessIxESaIxEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.11"*, %"class.std::set"*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.11"*
  %6 = alloca i64*
  %7 = alloca %"class.std::set"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.473
  %11 = load i32, i32* @y.474
  %12 = add i32 %10, 1396307529
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1396307529
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 793736022, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %140
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 793736022, label %24
    i32 -1519297715, label %44
    i32 1567108209, label %69
    i32 1683884330, label %72
    i32 -1036040602, label %100
    i32 -1255621071, label %123
    i32 -1574867775, label %124
    i32 -1753725296, label %125
    i32 277005911, label %132
  ]

; <label>:23:                                     ; preds = %21
  br label %140

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1519297715, i32 -1753725296
  store i32 %43, i32* %20
  br label %140

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.11"*, align 8
  %46 = alloca %"class.std::set"*, align 8
  store %"class.std::set"** %46, %"class.std::set"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %45, align 8
  %48 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  store %"class.std::set"* %1, %"class.std::set"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %45, align 8
  store %"struct.std::_Vector_base.11"* %50, %"struct.std::_Vector_base.11"** %5
  %51 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  %52 = load %"class.std::set"*, %"class.std::set"** %51, align 8
  %53 = icmp ne %"class.std::set"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.473
  %55 = load i32, i32* @y.474
  %56 = sub i32 %54, 804772769
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 804772769
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 1567108209, i32 -1753725296
  store i32 %68, i32* %20
  br label %140

; <label>:69:                                     ; preds = %21
  %70 = load volatile i1, i1* %4
  %71 = select i1 %70, i32 1683884330, i32 -1574867775
  store i32 %71, i32* %20
  br label %140

; <label>:72:                                     ; preds = %21
  %73 = load i32, i32* @x.473
  %74 = load i32, i32* @y.474
  %75 = sub i32 %73, -2136695784
  %76 = sub i32 %75, 1
  %77 = add i32 %76, -2136695784
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -1036040602, i32 277005911
  store i32 %99, i32* %20
  br label %140

; <label>:100:                                    ; preds = %21
  %101 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %102 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %101, i32 0, i32 0
  %103 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %102 to %"class.std::allocator.12"*
  %104 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  %105 = load %"class.std::set"*, %"class.std::set"** %104, align 8
  %106 = load volatile i64*, i64** %6
  %107 = load i64, i64* %106, align 8
  call void @_ZNSt16allocator_traitsISaISt3setIxSt4lessIxESaIxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.12"* dereferenceable(1) %103, %"class.std::set"* %105, i64 %107)
  %108 = load i32, i32* @x.473
  %109 = load i32, i32* @y.474
  %110 = sub i32 %108, 501910261
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 501910261
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 -1255621071, i32 277005911
  store i32 %122, i32* %20
  br label %140

; <label>:123:                                    ; preds = %21
  store i32 -1574867775, i32* %20
  br label %140

; <label>:124:                                    ; preds = %21
  ret void

; <label>:125:                                    ; preds = %21
  %126 = alloca %"struct.std::_Vector_base.11"*, align 8
  %127 = alloca %"class.std::set"*, align 8
  %128 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %126, align 8
  store %"class.std::set"* %1, %"class.std::set"** %127, align 8
  store i64 %2, i64* %128, align 8
  %129 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %126, align 8
  %130 = load %"class.std::set"*, %"class.std::set"** %127, align 8
  %131 = icmp ne %"class.std::set"* %130, null
  store i32 -1519297715, i32* %20
  br label %140

; <label>:132:                                    ; preds = %21
  %133 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %134 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %133, i32 0, i32 0
  %135 = bitcast %"struct.std::_Vector_base<std::set<long long, std::less<long long>, std::allocator<long long> >, std::allocator<std::set<long long, std::less<long long>, std::allocator<long long> > > >::_Vector_impl"* %134 to %"class.std::allocator.12"*
  %136 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  %137 = load %"class.std::set"*, %"class.std::set"** %136, align 8
  %138 = load volatile i64*, i64** %6
  %139 = load i64, i64* %138, align 8
  call void @_ZNSt16allocator_traitsISaISt3setIxSt4lessIxESaIxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.12"* dereferenceable(1) %135, %"class.std::set"* %137, i64 %139)
  store i32 -1036040602, i32* %20
  br label %140

; <label>:140:                                    ; preds = %132, %125, %123, %100, %72, %69, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt3setIxSt4lessIxESaIxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.12"* dereferenceable(1), %"class.std::set"*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.475
  %7 = load i32, i32* @y.476
  %8 = add i32 %6, -1326296038
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1326296038
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1794741538, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1794741538, label %20
    i32 -442169059, label %28
    i32 -1352161832, label %63
    i32 -1163311818, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -442169059, i32 -1163311818
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.12"*, align 8
  %30 = alloca %"class.std::set"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %29, align 8
  store %"class.std::set"* %1, %"class.std::set"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %29, align 8
  %33 = bitcast %"class.std::allocator.12"* %32 to %"class.__gnu_cxx::new_allocator.13"*
  %34 = load %"class.std::set"*, %"class.std::set"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.13"* %33, %"class.std::set"* %34, i64 %35)
  %36 = load i32, i32* @x.475
  %37 = load i32, i32* @y.476
  %38 = add i32 %36, 859077630
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 859077630
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1352161832, i32 -1163311818
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.12"*, align 8
  %66 = alloca %"class.std::set"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %65, align 8
  store %"class.std::set"* %1, %"class.std::set"** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %65, align 8
  %69 = bitcast %"class.std::allocator.12"* %68 to %"class.__gnu_cxx::new_allocator.13"*
  %70 = load %"class.std::set"*, %"class.std::set"** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.13"* %69, %"class.std::set"* %70, i64 %71)
  store i32 -442169059, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIxSt4lessIxESaIxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.13"*, %"class.std::set"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  store %"class.std::set"* %1, %"class.std::set"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  %8 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %9 = bitcast %"class.std::set"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3setIxSt4lessIxESaIxEES4_EvT_S6_RSaIT0_E(%"class.std::set"*, %"class.std::set"*, %"class.std::allocator.12"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store %"class.std::set"* %1, %"class.std::set"** %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  call void @_ZSt8_DestroyIPSt3setIxSt4lessIxESaIxEEEvT_S6_(%"class.std::set"* %7, %"class.std::set"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.23"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.481
  %5 = load i32, i32* @y.482
  %6 = add i32 %4, -1362618674
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1362618674
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 731966562, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 731966562, label %18
    i32 70115792, label %26
    i32 -1933331864, label %44
    i32 2020591409, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 70115792, i32 2020591409
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %27, align 8
  %29 = load i32, i32* @x.481
  %30 = load i32, i32* @y.482
  %31 = sub i32 %29, 1469934893
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1469934893
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1933331864, i32 2020591409
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %46, align 8
  store i32 70115792, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.23"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.21"*, i64, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.21"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.22"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.22"* %2, %"class.std::allocator.22"** %6, align 8
  %9 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, %"class.std::allocator.22"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.21"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.485
  %16 = load i32, i32* @y.486
  %17 = add i32 %15, 215164716
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, 215164716
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %52

; <label>:29:                                     ; preds = %14, %52
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %7, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  %33 = load i32, i32* @x.485
  %34 = load i32, i32* @y.486
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %52

; <label>:46:                                     ; preds = %29
  br label %47

; <label>:47:                                     ; preds = %46
  %48 = load i8*, i8** %7, align 8
  %49 = load i32, i32* %8, align 4
  %50 = insertvalue { i8*, i32 } undef, i8* %48, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

; <label>:52:                                     ; preds = %29, %14
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %7, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE21_M_default_initializeEm(%"class.std::vector.20"*, i64) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.20"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.20"* %0, %"class.std::vector.20"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.20"*, %"class.std::vector.20"** %3, align 8
  %6 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.25"*, %"class.std::vector.25"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %12 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"* %11) #3
  %13 = call %"class.std::vector.25"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.25"* %9, i64 %10, %"class.std::allocator.22"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.20"* %5 to %"struct.std::_Vector_base.21"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::vector.25"* %13, %"class.std::vector.25"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.21"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.489
  %3 = load i32, i32* @y.490
  %4 = sub i32 %2, 105572001
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 105572001
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %126

; <label>:16:                                     ; preds = %1, %126
  %17 = alloca %"struct.std::_Vector_base.21"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %17, align 8
  %20 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.25"*, %"class.std::vector.25"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::vector.25"*, %"class.std::vector.25"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.25"*, %"class.std::vector.25"** %28, align 8
  %30 = ptrtoint %"class.std::vector.25"* %26 to i64
  %31 = ptrtoint %"class.std::vector.25"* %29 to i64
  %32 = sub i64 %30, 7097179944781701809
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 7097179944781701809
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.489
  %38 = load i32, i32* @y.490
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %126

; <label>:62:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.21"* %20, %"class.std::vector.25"* %23, i64 %36)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %64) #3
  ret void

; <label>:65:                                     ; preds = %62
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %18, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %19, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i32, i32* @x.489
  %72 = load i32, i32* @y.490
  %73 = sub i32 %71, -1636027149
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -1636027149
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %169

; <label>:97:                                     ; preds = %70, %169
  %98 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %98) #7
  %99 = load i32, i32* @x.489
  %100 = load i32, i32* @y.490
  %101 = sub i32 %99, -1520356521
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1520356521
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %169

; <label>:125:                                    ; preds = %97
  unreachable

; <label>:126:                                    ; preds = %16, %1
  %127 = alloca %"struct.std::_Vector_base.21"*, align 8
  %128 = alloca i8*
  %129 = alloca i32
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %127, align 8
  %130 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %127, align 8
  %131 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %131, i32 0, i32 0
  %133 = load %"class.std::vector.25"*, %"class.std::vector.25"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %130, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %134, i32 0, i32 2
  %136 = load %"class.std::vector.25"*, %"class.std::vector.25"** %135, align 8
  %137 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %130, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %137, i32 0, i32 0
  %139 = load %"class.std::vector.25"*, %"class.std::vector.25"** %138, align 8
  %140 = ptrtoint %"class.std::vector.25"* %136 to i64
  %141 = ptrtoint %"class.std::vector.25"* %139 to i64
  %142 = sub i64 %140, 1619761631144005446
  %143 = sub i64 %142, %141
  %144 = add i64 %143, 1619761631144005446
  %145 = sub i64 %140, %141
  %146 = mul i64 %144, %141
  %147 = shl i64 %140, %141
  %148 = sub i64 %140, 4309119034170903163
  %149 = sub i64 %148, %141
  %150 = add i64 %149, 4309119034170903163
  %151 = sub i64 %140, %141
  %152 = add i64 %150, 8444102560727442521
  %153 = sub i64 %152, 24
  %154 = sub i64 %153, 8444102560727442521
  %155 = sub i64 %150, 24
  %156 = mul i64 %154, 24
  %157 = shl i64 %150, 24
  %158 = shl i64 %150, 24
  %159 = sub i64 0, 24
  %160 = add i64 %150, %159
  %161 = sub i64 %150, 24
  %162 = mul i64 %160, 24
  %163 = shl i64 %150, 24
  %164 = sub i64 0, 24
  %165 = add i64 %150, %164
  %166 = sub i64 %150, 24
  %167 = mul i64 %165, 24
  %168 = sdiv exact i64 %150, 24
  br label %16

; <label>:169:                                    ; preds = %97, %70
  %170 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %170) #7
  br label %97
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.22"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5 to %"class.std::allocator.22"*
  %7 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %4, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.22"* %6, %"class.std::allocator.22"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.25"* null, %"class.std::vector.25"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.25"* null, %"class.std::vector.25"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.25"* null, %"class.std::vector.25"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.21"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.21"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.25"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.21"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.25"* %7, %"class.std::vector.25"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.25"*, %"class.std::vector.25"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.25"* %12, %"class.std::vector.25"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.25"*, %"class.std::vector.25"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.25", %"class.std::vector.25"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.25"* %19, %"class.std::vector.25"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.495
  %5 = load i32, i32* @y.496
  %6 = add i32 %4, 410850798
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 410850798
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1549813426, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1549813426, label %18
    i32 421495547, label %38
    i32 1031655461, label %69
    i32 -964564715, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 421495547, i32 -964564715
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %40 to %"class.std::allocator.22"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.22"* %41) #3
  %42 = load i32, i32* @x.495
  %43 = load i32, i32* @y.496
  %44 = sub i32 %42, -1457809333
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1457809333
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1031655461, i32 -964564715
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %71, align 8
  %72 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %71, align 8
  %73 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %72 to %"class.std::allocator.22"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.22"* %73) #3
  store i32 421495547, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.22"*, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.22"*, align 8
  %4 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %3, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %4, align 8
  %5 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %3, align 8
  %6 = bitcast %"class.std::allocator.22"* %5 to %"class.__gnu_cxx::new_allocator.23"*
  %7 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %4, align 8
  %8 = bitcast %"class.std::allocator.22"* %7 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.23"* %6, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.499
  %6 = load i32, i32* @y.500
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1898200829, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1898200829, label %18
    i32 -584380095, label %26
    i32 -1405938329, label %44
    i32 1582781754, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -584380095, i32 1582781754
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %28 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %27, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %1, %"class.__gnu_cxx::new_allocator.23"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %27, align 8
  %30 = load i32, i32* @x.499
  %31 = load i32, i32* @y.500
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1405938329, i32 1582781754
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %47 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %46, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %1, %"class.__gnu_cxx::new_allocator.23"** %47, align 8
  %48 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %46, align 8
  store i32 -584380095, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.25"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.21"*, i64) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.25"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.21"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.501
  %10 = load i32, i32* @y.502
  %11 = sub i32 %9, 56563290
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 56563290
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 410459432, i32* %19
  %20 = alloca %"class.std::vector.25"*
  br label %21

; <label>:21:                                     ; preds = %2, %130
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 410459432, label %24
    i32 107003852, label %32
    i32 1610641289, label %66
    i32 1625316608, label %69
    i32 -1983004594, label %76
    i32 1896853423, label %77
    i32 294095263, label %93
    i32 -62292397, label %121
    i32 -938816303, label %123
    i32 2111659663, label %129
  ]

; <label>:23:                                     ; preds = %21
  br label %130

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 107003852, i32 -938816303
  store i32 %31, i32* %19
  br label %130

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.21"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %33, align 8
  store %"struct.std::_Vector_base.21"* %36, %"struct.std::_Vector_base.21"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.501
  %41 = load i32, i32* @y.502
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1610641289, i32 -938816303
  store i32 %65, i32* %19
  br label %130

; <label>:66:                                     ; preds = %21
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 1625316608, i32 -1983004594
  store i32 %68, i32* %19
  br label %130

; <label>:69:                                     ; preds = %21
  %70 = load volatile %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %5
  %71 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %71 to %"class.std::allocator.22"*
  %73 = load volatile i64*, i64** %6
  %74 = load i64, i64* %73, align 8
  %75 = call %"class.std::vector.25"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.22"* dereferenceable(1) %72, i64 %74)
  store i32 1896853423, i32* %19
  store %"class.std::vector.25"* %75, %"class.std::vector.25"** %20
  br label %130

; <label>:76:                                     ; preds = %21
  store i32 1896853423, i32* %19
  store %"class.std::vector.25"* null, %"class.std::vector.25"** %20
  br label %130

; <label>:77:                                     ; preds = %21
  %78 = load %"class.std::vector.25"*, %"class.std::vector.25"** %20
  store %"class.std::vector.25"* %78, %"class.std::vector.25"** %3
  %79 = load i32, i32* @x.501
  %80 = load i32, i32* @y.502
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 294095263, i32 2111659663
  store i32 %92, i32* %19
  br label %130

; <label>:93:                                     ; preds = %21
  %94 = load i32, i32* @x.501
  %95 = load i32, i32* @y.502
  %96 = add i32 %94, -881007789
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -881007789
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 -62292397, i32 2111659663
  store i32 %120, i32* %19
  br label %130

; <label>:121:                                    ; preds = %21
  %122 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %3
  ret %"class.std::vector.25"* %122

; <label>:123:                                    ; preds = %21
  %124 = alloca %"struct.std::_Vector_base.21"*, align 8
  %125 = alloca i64, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %124, align 8
  store i64 %1, i64* %125, align 8
  %126 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %124, align 8
  %127 = load i64, i64* %125, align 8
  %128 = icmp ne i64 %127, 0
  store i32 107003852, i32* %19
  br label %130

; <label>:129:                                    ; preds = %21
  store i32 294095263, i32* %19
  br label %130

; <label>:130:                                    ; preds = %129, %123, %93, %77, %76, %69, %66, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.25"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.22"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.22"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %3, align 8
  %6 = bitcast %"class.std::allocator.22"* %5 to %"class.__gnu_cxx::new_allocator.23"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.25"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.23"* %6, i64 %7, i8* null)
  ret %"class.std::vector.25"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.25"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.23"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.23"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 809825489, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 809825489, label %16
    i32 1714478612, label %21
    i32 948883945, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1714478612, i32 948883945
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.25"*
  ret %"class.std::vector.25"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.23"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.507
  %5 = load i32, i32* @y.508
  %6 = add i32 %4, -131377634
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -131377634
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1620140027, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1620140027, label %18
    i32 773220464, label %38
    i32 662192831, label %56
    i32 -36568801, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 773220464, i32 -36568801
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %39, align 8
  %41 = load i32, i32* @x.507
  %42 = load i32, i32* @y.508
  %43 = add i32 %41, 1086919586
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1086919586
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 662192831, i32 -36568801
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %58, align 8
  store i32 773220464, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.25"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.25"*, i64, %"class.std::allocator.22"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::vector.25"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.509
  %8 = load i32, i32* @y.510
  %9 = add i32 %7, 1860475372
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1860475372
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1012371707, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1012371707, label %21
    i32 -1776477110, label %41
    i32 972168276, label %75
    i32 8510263, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1776477110, i32 8510263
  store i32 %40, i32* %17
  br label %84

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.25"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::allocator.22"* %2, %"class.std::allocator.22"** %44, align 8
  %45 = load %"class.std::vector.25"*, %"class.std::vector.25"** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = call %"class.std::vector.25"* @_ZSt25__uninitialized_default_nIPSt6vectorIxSaIxEEmET_S4_T0_(%"class.std::vector.25"* %45, i64 %46)
  store %"class.std::vector.25"* %47, %"class.std::vector.25"** %4
  %48 = load i32, i32* @x.509
  %49 = load i32, i32* @y.510
  %50 = add i32 %48, -1188926689
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1188926689
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 972168276, i32 8510263
  store i32 %74, i32* %17
  br label %84

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  ret %"class.std::vector.25"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::vector.25"*, align 8
  %79 = alloca i64, align 8
  %80 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %78, align 8
  store i64 %1, i64* %79, align 8
  store %"class.std::allocator.22"* %2, %"class.std::allocator.22"** %80, align 8
  %81 = load %"class.std::vector.25"*, %"class.std::vector.25"** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = call %"class.std::vector.25"* @_ZSt25__uninitialized_default_nIPSt6vectorIxSaIxEEmET_S4_T0_(%"class.std::vector.25"* %81, i64 %82)
  store i32 -1776477110, i32* %17
  br label %84

; <label>:84:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.22"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.21"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.21"*, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %2, align 8
  %3 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4 to %"class.std::allocator.22"*
  ret %"class.std::allocator.22"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.25"* @_ZSt25__uninitialized_default_nIPSt6vectorIxSaIxEEmET_S4_T0_(%"class.std::vector.25"*, i64) #2 comdat {
  %3 = alloca %"class.std::vector.25"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.513
  %7 = load i32, i32* @y.514
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1863828710, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1863828710, label %19
    i32 -1216314396, label %39
    i32 545905190, label %73
    i32 246600274, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1216314396, i32 246600274
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.25"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load %"class.std::vector.25"*, %"class.std::vector.25"** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.25"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIxSaIxEEmEET_S6_T0_(%"class.std::vector.25"* %43, i64 %44)
  store %"class.std::vector.25"* %45, %"class.std::vector.25"** %3
  %46 = load i32, i32* @x.513
  %47 = load i32, i32* @y.514
  %48 = add i32 %46, -1421573927
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1421573927
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 545905190, i32 246600274
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %3
  ret %"class.std::vector.25"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::vector.25"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8 1, i8* %78, align 1
  %79 = load %"class.std::vector.25"*, %"class.std::vector.25"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call %"class.std::vector.25"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIxSaIxEEmEET_S6_T0_(%"class.std::vector.25"* %79, i64 %80)
  store i32 -1216314396, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.25"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIxSaIxEEmEET_S6_T0_(%"class.std::vector.25"*, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector.25"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  store %"class.std::vector.25"* %8, %"class.std::vector.25"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %57, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %117

; <label>:12:                                     ; preds = %9
  %13 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  %14 = call %"class.std::vector.25"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.25"* dereferenceable(24) %13) #3
  invoke void @_ZSt10_ConstructISt6vectorIxSaIxEEJEEvPT_DpOT0_(%"class.std::vector.25"* %14)
          to label %15 unwind label %66

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.515
  %17 = load i32, i32* @y.516
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %17, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %324

; <label>:29:                                     ; preds = %15, %324
  %30 = load i32, i32* @x.515
  %31 = load i32, i32* @y.516
  %32 = add i32 %30, -1339360675
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1339360675
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %324

; <label>:56:                                     ; preds = %29
  br label %57

; <label>:57:                                     ; preds = %56
  %58 = load i64, i64* %4, align 8
  %59 = sub i64 0, %58
  %60 = sub i64 0, -1
  %61 = add i64 %59, %60
  %62 = sub i64 0, %61
  %63 = add i64 %58, -1
  store i64 %62, i64* %4, align 8
  %64 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  %65 = getelementptr inbounds %"class.std::vector.25", %"class.std::vector.25"* %64, i32 1
  store %"class.std::vector.25"* %65, %"class.std::vector.25"** %5, align 8
  br label %9

; <label>:66:                                     ; preds = %12
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %6, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %7, align 4
  br label %70

; <label>:70:                                     ; preds = %66
  %71 = load i32, i32* @x.515
  %72 = load i32, i32* @y.516
  %73 = sub i32 %71, -2050008980
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -2050008980
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %325

; <label>:85:                                     ; preds = %70, %325
  %86 = load i8*, i8** %6, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %89 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  %90 = load i32, i32* @x.515
  %91 = load i32, i32* @y.516
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %325

; <label>:115:                                    ; preds = %85
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.25"* %88, %"class.std::vector.25"* %89)
          to label %116 unwind label %172

; <label>:116:                                    ; preds = %115
  invoke void @__cxa_rethrow() #13
          to label %269 unwind label %172

; <label>:117:                                    ; preds = %9
  %118 = load i32, i32* @x.515
  %119 = load i32, i32* @y.516
  %120 = add i32 %118, 263485806
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 263485806
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %330

; <label>:144:                                    ; preds = %117, %330
  %145 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  %146 = load i32, i32* @x.515
  %147 = load i32, i32* @y.516
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %330

; <label>:171:                                    ; preds = %144
  ret %"class.std::vector.25"* %145

; <label>:172:                                    ; preds = %116, %115
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %6, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %176 unwind label %236

; <label>:176:                                    ; preds = %172
  br label %231
                                                  ; No predecessors!
  %178 = load i32, i32* @x.515
  %179 = load i32, i32* @y.516
  %180 = sub i32 0, 1
  %181 = add i32 %178, %180
  %182 = sub i32 %178, 1
  %183 = mul i32 %178, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %179, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 true, true
  %190 = and i1 %187, true
  %191 = and i1 %185, %189
  %192 = and i1 %188, true
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 true, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  br i1 %201, label %203, label %332

; <label>:203:                                    ; preds = %177, %332
  call void @llvm.trap()
  %204 = load i32, i32* @x.515
  %205 = load i32, i32* @y.516
  %206 = add i32 %204, -1445260032
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, -1445260032
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 false, true
  %217 = and i1 %214, false
  %218 = and i1 %212, %216
  %219 = and i1 %215, false
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 false, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %332

; <label>:230:                                    ; preds = %203
  unreachable

; <label>:231:                                    ; preds = %176
  %232 = load i8*, i8** %6, align 8
  %233 = load i32, i32* %7, align 4
  %234 = insertvalue { i8*, i32 } undef, i8* %232, 0
  %235 = insertvalue { i8*, i32 } %234, i32 %233, 1
  resume { i8*, i32 } %235

; <label>:236:                                    ; preds = %172
  %237 = load i32, i32* @x.515
  %238 = load i32, i32* @y.516
  %239 = add i32 %237, -259535202
  %240 = sub i32 %239, 1
  %241 = sub i32 %240, -259535202
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  br i1 %249, label %251, label %333

; <label>:251:                                    ; preds = %236, %333
  %252 = landingpad { i8*, i32 }
          catch i8* null
  %253 = extractvalue { i8*, i32 } %252, 0
  call void @__clang_call_terminate(i8* %253) #7
  %254 = load i32, i32* @x.515
  %255 = load i32, i32* @y.516
  %256 = sub i32 %254, 2126682199
  %257 = sub i32 %256, 1
  %258 = add i32 %257, 2126682199
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  br i1 %266, label %268, label %333

; <label>:268:                                    ; preds = %251
  unreachable

; <label>:269:                                    ; preds = %116
  %270 = load i32, i32* @x.515
  %271 = load i32, i32* @y.516
  %272 = add i32 %270, -608340445
  %273 = sub i32 %272, 1
  %274 = sub i32 %273, -608340445
  %275 = sub i32 %270, 1
  %276 = mul i32 %270, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %271, 10
  %280 = xor i1 %278, true
  %281 = xor i1 %279, true
  %282 = xor i1 false, true
  %283 = and i1 %280, false
  %284 = and i1 %278, %282
  %285 = and i1 %281, false
  %286 = and i1 %279, %282
  %287 = or i1 %283, %284
  %288 = or i1 %285, %286
  %289 = xor i1 %287, %288
  %290 = or i1 %280, %281
  %291 = xor i1 %290, true
  %292 = or i1 false, %282
  %293 = and i1 %291, %292
  %294 = or i1 %289, %293
  %295 = or i1 %278, %279
  br i1 %294, label %296, label %336

; <label>:296:                                    ; preds = %269, %336
  %297 = load i32, i32* @x.515
  %298 = load i32, i32* @y.516
  %299 = sub i32 %297, -911702494
  %300 = sub i32 %299, 1
  %301 = add i32 %300, -911702494
  %302 = sub i32 %297, 1
  %303 = mul i32 %297, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %298, 10
  %307 = xor i1 %305, true
  %308 = xor i1 %306, true
  %309 = xor i1 true, true
  %310 = and i1 %307, true
  %311 = and i1 %305, %309
  %312 = and i1 %308, true
  %313 = and i1 %306, %309
  %314 = or i1 %310, %311
  %315 = or i1 %312, %313
  %316 = xor i1 %314, %315
  %317 = or i1 %307, %308
  %318 = xor i1 %317, true
  %319 = or i1 true, %309
  %320 = and i1 %318, %319
  %321 = or i1 %316, %320
  %322 = or i1 %305, %306
  br i1 %321, label %323, label %336

; <label>:323:                                    ; preds = %296
  unreachable

; <label>:324:                                    ; preds = %29, %15
  br label %29

; <label>:325:                                    ; preds = %85, %70
  %326 = load i8*, i8** %6, align 8
  %327 = call i8* @__cxa_begin_catch(i8* %326) #3
  %328 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %329 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  br label %85

; <label>:330:                                    ; preds = %144, %117
  %331 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  br label %144

; <label>:332:                                    ; preds = %203, %177
  call void @llvm.trap()
  br label %203

; <label>:333:                                    ; preds = %251, %236
  %334 = landingpad { i8*, i32 }
          catch i8* null
  %335 = extractvalue { i8*, i32 } %334, 0
  call void @__clang_call_terminate(i8* %335) #7
  br label %251

; <label>:336:                                    ; preds = %296, %269
  br label %296
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIxSaIxEEJEEvPT_DpOT0_(%"class.std::vector.25"*) #0 comdat {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.25"*
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.25"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.25"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.25"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.25"*
  ret %"class.std::vector.25"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.25"*, %"class.std::vector.25"*) #2 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.521
  %6 = load i32, i32* @y.522
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 480829616, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 480829616, label %18
    i32 -1715971530, label %26
    i32 630473007, label %45
    i32 1676680913, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1715971530, i32 1676680913
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.25"*, align 8
  %28 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %27, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %28, align 8
  %29 = load %"class.std::vector.25"*, %"class.std::vector.25"** %27, align 8
  %30 = load %"class.std::vector.25"*, %"class.std::vector.25"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.25"* %29, %"class.std::vector.25"* %30)
  %31 = load i32, i32* @x.521
  %32 = load i32, i32* @y.522
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 630473007, i32 1676680913
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::vector.25"*, align 8
  %48 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %47, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %48, align 8
  %49 = load %"class.std::vector.25"*, %"class.std::vector.25"** %47, align 8
  %50 = load %"class.std::vector.25"*, %"class.std::vector.25"** %48, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.25"* %49, %"class.std::vector.25"* %50)
  store i32 -1715971530, i32* %14
  br label %51

; <label>:51:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.25"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.523
  %3 = load i32, i32* @y.524
  %4 = add i32 %2, -1134549311
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1134549311
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %80

; <label>:28:                                     ; preds = %1, %80
  %29 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %29, align 8
  %30 = load %"class.std::vector.25"*, %"class.std::vector.25"** %29, align 8
  %31 = bitcast %"class.std::vector.25"* %30 to %"struct.std::_Vector_base.26"*
  %32 = load i32, i32* @x.523
  %33 = load i32, i32* @y.524
  %34 = sub i32 %32, 1044987651
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1044987651
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %80

; <label>:46:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.26"* %31)
          to label %47 unwind label %77

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* @x.523
  %49 = load i32, i32* @y.524
  %50 = add i32 %48, 640581563
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 640581563
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %84

; <label>:62:                                     ; preds = %47, %84
  %63 = load i32, i32* @x.523
  %64 = load i32, i32* @y.524
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %84

; <label>:76:                                     ; preds = %62
  ret void

; <label>:77:                                     ; preds = %46
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  call void @__clang_call_terminate(i8* %79) #7
  unreachable

; <label>:80:                                     ; preds = %28, %1
  %81 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %81, align 8
  %82 = load %"class.std::vector.25"*, %"class.std::vector.25"** %81, align 8
  %83 = bitcast %"class.std::vector.25"* %82 to %"struct.std::_Vector_base.26"*
  br label %28

; <label>:84:                                     ; preds = %62, %47
  br label %62
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %3 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.27"*
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.27"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 1
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 2
  store i64* null, i64** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.27"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.25"*, %"class.std::vector.25"*) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.25"**
  %4 = alloca %"class.std::vector.25"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.533
  %8 = load i32, i32* @y.534
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 357372193, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %117
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 357372193, label %20
    i32 -420419939, label %40
    i32 1790140775, label %60
    i32 -1891483519, label %61
    i32 -930472240, label %68
    i32 -809204415, label %84
    i32 362122769, label %103
    i32 -202935034, label %104
    i32 -117653291, label %109
    i32 -1104630532, label %110
    i32 946198010, label %113
  ]

; <label>:19:                                     ; preds = %17
  br label %117

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -420419939, i32 -1104630532
  store i32 %39, i32* %16
  br label %117

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"** %41, %"class.std::vector.25"*** %4
  %42 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"** %42, %"class.std::vector.25"*** %3
  %43 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %4
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %43, align 8
  %44 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %3
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %44, align 8
  %45 = load i32, i32* @x.533
  %46 = load i32, i32* @y.534
  %47 = add i32 %45, 411571032
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 411571032
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1790140775, i32 -1104630532
  store i32 %59, i32* %16
  br label %117

; <label>:60:                                     ; preds = %17
  store i32 -1891483519, i32* %16
  br label %117

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %4
  %63 = load %"class.std::vector.25"*, %"class.std::vector.25"** %62, align 8
  %64 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %3
  %65 = load %"class.std::vector.25"*, %"class.std::vector.25"** %64, align 8
  %66 = icmp ne %"class.std::vector.25"* %63, %65
  %67 = select i1 %66, i32 -930472240, i32 -117653291
  store i32 %67, i32* %16
  br label %117

; <label>:68:                                     ; preds = %17
  %69 = load i32, i32* @x.533
  %70 = load i32, i32* @y.534
  %71 = sub i32 %69, 395369085
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 395369085
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -809204415, i32 946198010
  store i32 %83, i32* %16
  br label %117

; <label>:84:                                     ; preds = %17
  %85 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %4
  %86 = load %"class.std::vector.25"*, %"class.std::vector.25"** %85, align 8
  %87 = call %"class.std::vector.25"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.25"* dereferenceable(24) %86) #3
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.25"* %87)
  %88 = load i32, i32* @x.533
  %89 = load i32, i32* @y.534
  %90 = sub i32 %88, -1984217160
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -1984217160
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 362122769, i32 946198010
  store i32 %102, i32* %16
  br label %117

; <label>:103:                                    ; preds = %17
  store i32 -202935034, i32* %16
  br label %117

; <label>:104:                                    ; preds = %17
  %105 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %4
  %106 = load %"class.std::vector.25"*, %"class.std::vector.25"** %105, align 8
  %107 = getelementptr inbounds %"class.std::vector.25", %"class.std::vector.25"* %106, i32 1
  %108 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %4
  store %"class.std::vector.25"* %107, %"class.std::vector.25"** %108, align 8
  store i32 -1891483519, i32* %16
  br label %117

; <label>:109:                                    ; preds = %17
  ret void

; <label>:110:                                    ; preds = %17
  %111 = alloca %"class.std::vector.25"*, align 8
  %112 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %111, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %112, align 8
  store i32 -420419939, i32* %16
  br label %117

; <label>:113:                                    ; preds = %17
  %114 = load volatile %"class.std::vector.25"**, %"class.std::vector.25"*** %4
  %115 = load %"class.std::vector.25"*, %"class.std::vector.25"** %114, align 8
  %116 = call %"class.std::vector.25"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.25"* dereferenceable(24) %115) #3
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.25"* %116)
  store i32 -809204415, i32* %16
  br label %117

; <label>:117:                                    ; preds = %113, %110, %104, %103, %84, %68, %61, %60, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.25"*) #0 comdat {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.25"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.25"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %15 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.27"* dereferenceable(1) %15)
          to label %16 unwind label %59

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.537
  %18 = load i32, i32* @y.538
  %19 = add i32 %17, -364560892
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -364560892
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %66

; <label>:31:                                     ; preds = %16, %66
  %32 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.26"* %32) #3
  %33 = load i32, i32* @x.537
  %34 = load i32, i32* @y.538
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %66

; <label>:58:                                     ; preds = %31
  ret void

; <label>:59:                                     ; preds = %1
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %3, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %4, align 4
  %63 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.26"* %63) #3
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %65) #7
  unreachable

; <label>:66:                                     ; preds = %31, %16
  %67 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.26"* %67) #3
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.27"* dereferenceable(1)) #2 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.27"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.27"* %2, %"class.std::allocator.27"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %3 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.27"*
  ret %"class.std::allocator.27"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.543
  %3 = load i32, i32* @y.544
  %4 = add i32 %2, -1438298918
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1438298918
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %83

; <label>:28:                                     ; preds = %1, %83
  %29 = alloca %"struct.std::_Vector_base.26"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %29, align 8
  %32 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = ptrtoint i64* %38 to i64
  %43 = ptrtoint i64* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 8
  %48 = load i32, i32* @x.543
  %49 = load i32, i32* @y.544
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %83

; <label>:73:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.26"* %32, i64* %35, i64 %47)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %73
  %75 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %75) #3
  ret void

; <label>:76:                                     ; preds = %73
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %30, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %31, align 4
  %80 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %80) #3
  br label %81

; <label>:81:                                     ; preds = %76
  %82 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %82) #7
  unreachable

; <label>:83:                                     ; preds = %28, %1
  %84 = alloca %"struct.std::_Vector_base.26"*, align 8
  %85 = alloca i8*
  %86 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %84, align 8
  %87 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %87, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %91, i32 0, i32 2
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %87, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = ptrtoint i64* %93 to i64
  %98 = ptrtoint i64* %96 to i64
  %99 = shl i64 %97, %98
  %100 = sub i64 %97, 8472260702029210822
  %101 = sub i64 %100, %98
  %102 = add i64 %101, 8472260702029210822
  %103 = sub i64 %97, %98
  %104 = mul i64 %102, %98
  %105 = sub i64 0, -3759581658708080937
  %106 = sub i64 %105, %97
  %107 = add i64 %106, -3759581658708080937
  %108 = sub i64 0, %97
  %109 = sub i64 0, %98
  %110 = sub i64 %107, %109
  %111 = add i64 %107, %98
  %112 = sub i64 0, -2432934965814074951
  %113 = sub i64 %112, %97
  %114 = add i64 %113, -2432934965814074951
  %115 = sub i64 0, %97
  %116 = sub i64 0, %114
  %117 = sub i64 0, %98
  %118 = add i64 %116, %117
  %119 = sub i64 0, %118
  %120 = add i64 %114, %98
  %121 = sub i64 0, -8202672308194247759
  %122 = sub i64 %121, %97
  %123 = add i64 %122, -8202672308194247759
  %124 = sub i64 0, %97
  %125 = sub i64 0, %123
  %126 = sub i64 0, %98
  %127 = add i64 %125, %126
  %128 = sub i64 0, %127
  %129 = add i64 %123, %98
  %130 = add i64 0, -7023116367161618816
  %131 = sub i64 %130, %97
  %132 = sub i64 %131, -7023116367161618816
  %133 = sub i64 0, %97
  %134 = add i64 %132, -1163175989722544481
  %135 = add i64 %134, %98
  %136 = sub i64 %135, -1163175989722544481
  %137 = add i64 %132, %98
  %138 = sub i64 0, %98
  %139 = add i64 %97, %138
  %140 = sub i64 %97, %98
  %141 = shl i64 %139, 8
  %142 = add i64 0, 8632417554996210527
  %143 = sub i64 %142, %139
  %144 = sub i64 %143, 8632417554996210527
  %145 = sub i64 0, %139
  %146 = sub i64 0, 8
  %147 = sub i64 %144, %146
  %148 = add i64 %144, 8
  %149 = shl i64 %139, 8
  %150 = add i64 0, 1447953656956440607
  %151 = sub i64 %150, %139
  %152 = sub i64 %151, 1447953656956440607
  %153 = sub i64 0, %139
  %154 = sub i64 0, 8
  %155 = sub i64 %152, %154
  %156 = add i64 %152, 8
  %157 = add i64 0, -2267948591076021455
  %158 = sub i64 %157, %139
  %159 = sub i64 %158, -2267948591076021455
  %160 = sub i64 0, %139
  %161 = sub i64 0, 8
  %162 = sub i64 %159, %161
  %163 = add i64 %159, 8
  %164 = shl i64 %139, 8
  %165 = add i64 %139, 3581950679480615065
  %166 = sub i64 %165, 8
  %167 = sub i64 %166, 3581950679480615065
  %168 = sub i64 %139, 8
  %169 = mul i64 %167, 8
  %170 = sdiv exact i64 %139, 8
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #2 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.545
  %6 = load i32, i32* @y.546
  %7 = add i32 %5, 1339334179
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1339334179
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1523095407, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1523095407, label %19
    i32 -680488908, label %39
    i32 -1912194515, label %71
    i32 -506898463, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -680488908, i32 -506898463
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  %41 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load i64*, i64** %40, align 8
  %43 = load i64*, i64** %41, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %42, i64* %43)
  %44 = load i32, i32* @x.545
  %45 = load i32, i32* @y.546
  %46 = add i32 %44, 823422259
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 823422259
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1912194515, i32 -506898463
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca i64*, align 8
  %74 = alloca i64*, align 8
  store i64* %0, i64** %73, align 8
  store i64* %1, i64** %74, align 8
  %75 = load i64*, i64** %73, align 8
  %76 = load i64*, i64** %74, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %75, i64* %76)
  store i32 -680488908, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.547
  %6 = load i32, i32* @y.548
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1959161718, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1959161718, label %18
    i32 -1392060451, label %38
    i32 -1904179767, label %68
    i32 -920041693, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1392060451, i32 -920041693
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca i64*, align 8
  %40 = alloca i64*, align 8
  store i64* %0, i64** %39, align 8
  store i64* %1, i64** %40, align 8
  %41 = load i32, i32* @x.547
  %42 = load i32, i32* @y.548
  %43 = sub i32 %41, -1892523051
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1892523051
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1904179767, i32 -920041693
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca i64*, align 8
  %71 = alloca i64*, align 8
  store i64* %0, i64** %70, align 8
  store i64* %1, i64** %71, align 8
  store i32 -1392060451, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.26"*, i64*, i64) #2 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.26"*
  %6 = alloca %"struct.std::_Vector_base.26"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %6, align 8
  store %"struct.std::_Vector_base.26"* %9, %"struct.std::_Vector_base.26"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 107550428, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 107550428, label %15
    i32 -1050386303, label %19
    i32 -472869821, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 -1050386303, i32 -472869821
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %21 to %"class.std::allocator.27"*
  %23 = load i64*, i64** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.27"* dereferenceable(1) %22, i64* %23, i64 %24)
  store i32 -472869821, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.27"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.27"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.27"* dereferenceable(1), i64*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.553
  %7 = load i32, i32* @y.554
  %8 = sub i32 %6, -1327186673
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1327186673
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 416223419, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 416223419, label %20
    i32 63326221, label %28
    i32 -158895175, label %50
    i32 801284090, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 63326221, i32 801284090
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.27"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %29, align 8
  %33 = bitcast %"class.std::allocator.27"* %32 to %"class.__gnu_cxx::new_allocator.28"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.28"* %33, i64* %34, i64 %35)
  %36 = load i32, i32* @x.553
  %37 = load i32, i32* @y.554
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -158895175, i32 801284090
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::allocator.27"*, align 8
  %53 = alloca i64*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %52, align 8
  store i64* %1, i64** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %52, align 8
  %56 = bitcast %"class.std::allocator.27"* %55 to %"class.__gnu_cxx::new_allocator.28"*
  %57 = load i64*, i64** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.28"* %56, i64* %57, i64 %58)
  store i32 63326221, i32* %16
  br label %59

; <label>:59:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.28"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.555
  %7 = load i32, i32* @y.556
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1514128588, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1514128588, label %19
    i32 1972443886, label %27
    i32 980722143, label %61
    i32 25982647, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1972443886, i32 25982647
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %29 = alloca i64*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %28, align 8
  store i64* %1, i64** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %28, align 8
  %32 = load i64*, i64** %29, align 8
  %33 = bitcast i64* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.555
  %35 = load i32, i32* @y.556
  %36 = sub i32 %34, -519913893
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -519913893
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 980722143, i32 25982647
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %64 = alloca i64*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %63, align 8
  store i64* %1, i64** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %63, align 8
  %67 = load i64*, i64** %64, align 8
  %68 = bitcast i64* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 1972443886, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.27"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.559
  %5 = load i32, i32* @y.560
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -445089649, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -445089649, label %17
    i32 970633069, label %37
    i32 1517778082, label %67
    i32 330583353, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 970633069, i32 330583353
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %38, align 8
  %40 = load i32, i32* @x.559
  %41 = load i32, i32* @y.560
  %42 = sub i32 %40, 2020140768
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 2020140768
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1517778082, i32 330583353
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %69, align 8
  store i32 970633069, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.21"*, %"class.std::vector.25"*, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::vector.25"*
  %5 = alloca %"struct.std::_Vector_base.21"*
  %6 = alloca %"struct.std::_Vector_base.21"*, align 8
  %7 = alloca %"class.std::vector.25"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.21"* %0, %"struct.std::_Vector_base.21"** %6, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %6, align 8
  store %"struct.std::_Vector_base.21"* %9, %"struct.std::_Vector_base.21"** %5
  %10 = load %"class.std::vector.25"*, %"class.std::vector.25"** %7, align 8
  store %"class.std::vector.25"* %10, %"class.std::vector.25"** %4
  %11 = alloca i32
  store i32 380972784, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %63
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 380972784, label %15
    i32 1055332430, label %19
    i32 -897546271, label %35
    i32 1038817536, label %55
    i32 -1409198793, label %56
    i32 892477457, label %57
  ]

; <label>:14:                                     ; preds = %12
  br label %63

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  %17 = icmp ne %"class.std::vector.25"* %16, null
  %18 = select i1 %17, i32 1055332430, i32 -1409198793
  store i32 %18, i32* %11
  br label %63

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.561
  %21 = load i32, i32* @y.562
  %22 = sub i32 %20, 1739857067
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1739857067
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -897546271, i32 892477457
  store i32 %34, i32* %11
  br label %63

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %37 to %"class.std::allocator.22"*
  %39 = load %"class.std::vector.25"*, %"class.std::vector.25"** %7, align 8
  %40 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.22"* dereferenceable(1) %38, %"class.std::vector.25"* %39, i64 %40)
  %41 = load i32, i32* @x.561
  %42 = load i32, i32* @y.562
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1038817536, i32 892477457
  store i32 %54, i32* %11
  br label %63

; <label>:55:                                     ; preds = %12
  store i32 -1409198793, i32* %11
  br label %63

; <label>:56:                                     ; preds = %12
  ret void

; <label>:57:                                     ; preds = %12
  %58 = load volatile %"struct.std::_Vector_base.21"*, %"struct.std::_Vector_base.21"** %5
  %59 = getelementptr inbounds %"struct.std::_Vector_base.21", %"struct.std::_Vector_base.21"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %59 to %"class.std::allocator.22"*
  %61 = load %"class.std::vector.25"*, %"class.std::vector.25"** %7, align 8
  %62 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.22"* dereferenceable(1) %60, %"class.std::vector.25"* %61, i64 %62)
  store i32 -897546271, i32* %11
  br label %63

; <label>:63:                                     ; preds = %57, %55, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.22"* dereferenceable(1), %"class.std::vector.25"*, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.22"*, align 8
  %5 = alloca %"class.std::vector.25"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %4, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %4, align 8
  %8 = bitcast %"class.std::allocator.22"* %7 to %"class.__gnu_cxx::new_allocator.23"*
  %9 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.23"* %8, %"class.std::vector.25"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.23"*, %"class.std::vector.25"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %5 = alloca %"class.std::vector.25"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  %8 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  %9 = bitcast %"class.std::vector.25"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.25"*, %"class.std::vector.25"*, %"class.std::allocator.22"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::vector.25"*, align 8
  %5 = alloca %"class.std::vector.25"*, align 8
  %6 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %4, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %5, align 8
  store %"class.std::allocator.22"* %2, %"class.std::allocator.22"** %6, align 8
  %7 = load %"class.std::vector.25"*, %"class.std::vector.25"** %4, align 8
  %8 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.25"* %7, %"class.std::vector.25"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector.5"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.569
  %6 = load i32, i32* @y.570
  %7 = sub i32 %5, -1273249572
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1273249572
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -96435298, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -96435298, label %19
    i32 1237199529, label %39
    i32 716826331, label %61
    i32 494999513, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1237199529, i32 494999513
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca %"class.std::vector.5"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %"class.std::vector.5"** %1, %"class.std::vector.5"*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.5"**, %"class.std::vector.5"*** %41, align 8
  %45 = load %"class.std::vector.5"*, %"class.std::vector.5"** %44, align 8
  store %"class.std::vector.5"* %45, %"class.std::vector.5"** %43, align 8
  %46 = load i32, i32* @x.569
  %47 = load i32, i32* @y.570
  %48 = sub i32 %46, -133839765
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -133839765
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 716826331, i32 494999513
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %64 = alloca %"class.std::vector.5"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  store %"class.std::vector.5"** %1, %"class.std::vector.5"*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %67 = load %"class.std::vector.5"**, %"class.std::vector.5"*** %64, align 8
  %68 = load %"class.std::vector.5"*, %"class.std::vector.5"** %67, align 8
  store %"class.std::vector.5"* %68, %"class.std::vector.5"** %66, align 8
  store i32 1237199529, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorI6edge_tSaIS2_EES1_IS4_SaIS4_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::vector.5"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.30"*, %struct.edge_t** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca %struct.edge_t**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store %struct.edge_t** %1, %struct.edge_t*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  %7 = load %struct.edge_t**, %struct.edge_t*** %4, align 8
  %8 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  store %struct.edge_t* %8, %struct.edge_t** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.edge_t** @_ZNK9__gnu_cxx17__normal_iteratorIP6edge_tSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"*) #0 comdat align 2 {
  %2 = alloca %struct.edge_t**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.575
  %6 = load i32, i32* @y.576
  %7 = add i32 %5, 1068811783
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1068811783
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1419181947, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1419181947, label %19
    i32 1710574761, label %39
    i32 -1710177103, label %57
    i32 -1944877220, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1710574761, i32 -1944877220
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %41, i32 0, i32 0
  store %struct.edge_t** %42, %struct.edge_t*** %2
  %43 = load i32, i32* @x.575
  %44 = load i32, i32* @y.576
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1710177103, i32 -1944877220
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %struct.edge_t**, %struct.edge_t*** %2
  ret %struct.edge_t** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %61, i32 0, i32 0
  store i32 1710574761, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"*, %"class.std::vector.25"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.577
  %6 = load i32, i32* @y.578
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1268072223, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1268072223, label %18
    i32 1829629412, label %26
    i32 2106325038, label %60
    i32 1677112929, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1829629412, i32 1677112929
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %28 = alloca %"class.std::vector.25"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %27, align 8
  store %"class.std::vector.25"** %1, %"class.std::vector.25"*** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %27, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.25"**, %"class.std::vector.25"*** %28, align 8
  %32 = load %"class.std::vector.25"*, %"class.std::vector.25"** %31, align 8
  store %"class.std::vector.25"* %32, %"class.std::vector.25"** %30, align 8
  %33 = load i32, i32* @x.577
  %34 = load i32, i32* @y.578
  %35 = add i32 %33, -1207703899
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1207703899
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 2106325038, i32 1677112929
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %63 = alloca %"class.std::vector.25"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %62, align 8
  store %"class.std::vector.25"** %1, %"class.std::vector.25"*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %64, i32 0, i32 0
  %66 = load %"class.std::vector.25"**, %"class.std::vector.25"*** %63, align 8
  %67 = load %"class.std::vector.25"*, %"class.std::vector.25"** %66, align 8
  store %"class.std::vector.25"* %67, %"class.std::vector.25"** %65, align 8
  store i32 1829629412, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.25"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIxSaIxEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  ret %"class.std::vector.25"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE14_M_fill_assignEmRKx(%"class.std::vector.25"*, i64, i64* dereferenceable(8)) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.25"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.34"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.34"*
  %8 = alloca %"class.std::vector.25"*
  %9 = alloca i64**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.581
  %14 = load i32, i32* @y.582
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 606503208, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %211
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 606503208, label %26
    i32 2021870664, label %46
    i32 -122740567, label %88
    i32 -365079895, label %91
    i32 2036911142, label %107
    i32 1461218515, label %114
    i32 -509869611, label %154
    i32 1810480542, label %166
    i32 -2071056409, label %181
    i32 -800850457, label %197
    i32 -1400552234, label %198
    i32 -1907837327, label %199
    i32 102389513, label %210
  ]

; <label>:25:                                     ; preds = %23
  br label %211

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %12
  %28 = load volatile i1, i1* %11
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 2021870664, i32 -1907837327
  store i32 %45, i32* %22
  br label %211

; <label>:46:                                     ; preds = %23
  %47 = alloca %"class.std::vector.25"*, align 8
  %48 = alloca i64, align 8
  store i64* %48, i64** %10
  %49 = alloca i64*, align 8
  store i64** %49, i64*** %9
  %50 = alloca %"class.std::vector.25", align 8
  store %"class.std::vector.25"* %50, %"class.std::vector.25"** %8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %51, %"class.__gnu_cxx::__normal_iterator.34"** %7
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %52, %"class.__gnu_cxx::__normal_iterator.34"** %6
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %47, align 8
  %53 = load volatile i64*, i64** %10
  store i64 %1, i64* %53, align 8
  %54 = load volatile i64**, i64*** %9
  store i64* %2, i64** %54, align 8
  %55 = load %"class.std::vector.25"*, %"class.std::vector.25"** %47, align 8
  store %"class.std::vector.25"* %55, %"class.std::vector.25"** %5
  %56 = load volatile i64*, i64** %10
  %57 = load i64, i64* %56, align 8
  %58 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %59 = call i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.25"* %58) #3
  %60 = icmp ugt i64 %57, %59
  store i1 %60, i1* %4
  %61 = load i32, i32* @x.581
  %62 = load i32, i32* @y.582
  %63 = sub i32 %61, -442219064
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -442219064
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -122740567, i32 -1907837327
  store i32 %87, i32* %22
  br label %211

; <label>:88:                                     ; preds = %23
  %89 = load volatile i1, i1* %4
  %90 = select i1 %89, i32 -365079895, i32 2036911142
  store i32 %90, i32* %22
  br label %211

; <label>:91:                                     ; preds = %23
  %92 = load volatile i64*, i64** %10
  %93 = load i64, i64* %92, align 8
  %94 = load volatile i64**, i64*** %9
  %95 = load i64*, i64** %94, align 8
  %96 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %97 = bitcast %"class.std::vector.25"* %96 to %"struct.std::_Vector_base.26"*
  %98 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %97) #3
  %99 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  call void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.25"* %99, i64 %93, i64* dereferenceable(8) %95, %"class.std::allocator.27"* dereferenceable(1) %98)
  %100 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  %101 = bitcast %"class.std::vector.25"* %100 to %"struct.std::_Vector_base.26"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %101, i32 0, i32 0
  %103 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %104 = bitcast %"class.std::vector.25"* %103 to %"struct.std::_Vector_base.26"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %104, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %102, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24) %105) #3
  %106 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.25"* %106) #3
  store i32 -1400552234, i32* %22
  br label %211

; <label>:107:                                    ; preds = %23
  %108 = load volatile i64*, i64** %10
  %109 = load i64, i64* %108, align 8
  %110 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %111 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.25"* %110) #3
  %112 = icmp ugt i64 %109, %111
  %113 = select i1 %112, i32 1461218515, i32 -509869611
  store i32 %113, i32* %22
  br label %211

; <label>:114:                                    ; preds = %23
  %115 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %116 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.25"* %115) #3
  %117 = load volatile %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %7
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %117, i32 0, i32 0
  store i64* %116, i64** %118, align 8
  %119 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %120 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.25"* %119) #3
  %121 = load volatile %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %6
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %121, i32 0, i32 0
  store i64* %120, i64** %122, align 8
  %123 = load volatile i64**, i64*** %9
  %124 = load i64*, i64** %123, align 8
  %125 = load volatile %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %7
  %126 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %125, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = load volatile %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %6
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %128, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExEvT_S7_RKT0_(i64* %127, i64* %130, i64* dereferenceable(8) %124)
  %131 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %132 = bitcast %"class.std::vector.25"* %131 to %"struct.std::_Vector_base.26"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %132, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %133, i32 0, i32 1
  %135 = load i64*, i64** %134, align 8
  %136 = load volatile i64*, i64** %10
  %137 = load i64, i64* %136, align 8
  %138 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %139 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.25"* %138) #3
  %140 = sub i64 %137, -793346463904015975
  %141 = sub i64 %140, %139
  %142 = add i64 %141, -793346463904015975
  %143 = sub i64 %137, %139
  %144 = load volatile i64**, i64*** %9
  %145 = load i64*, i64** %144, align 8
  %146 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %147 = bitcast %"class.std::vector.25"* %146 to %"struct.std::_Vector_base.26"*
  %148 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %147) #3
  %149 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %135, i64 %142, i64* dereferenceable(8) %145, %"class.std::allocator.27"* dereferenceable(1) %148)
  %150 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %151 = bitcast %"class.std::vector.25"* %150 to %"struct.std::_Vector_base.26"*
  %152 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %152, i32 0, i32 1
  store i64* %149, i64** %153, align 8
  store i32 1810480542, i32* %22
  br label %211

; <label>:154:                                    ; preds = %23
  %155 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %156 = bitcast %"class.std::vector.25"* %155 to %"struct.std::_Vector_base.26"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %157, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = load volatile i64*, i64** %10
  %161 = load i64, i64* %160, align 8
  %162 = load volatile i64**, i64*** %9
  %163 = load i64*, i64** %162, align 8
  %164 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %159, i64 %161, i64* dereferenceable(8) %163)
  %165 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  call void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.25"* %165, i64* %164) #3
  store i32 1810480542, i32* %22
  br label %211

; <label>:166:                                    ; preds = %23
  %167 = load i32, i32* @x.581
  %168 = load i32, i32* @y.582
  %169 = sub i32 0, 1
  %170 = add i32 %167, %169
  %171 = sub i32 %167, 1
  %172 = mul i32 %167, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %168, 10
  %176 = and i1 %174, %175
  %177 = xor i1 %174, %175
  %178 = or i1 %176, %177
  %179 = or i1 %174, %175
  %180 = select i1 %178, i32 -2071056409, i32 102389513
  store i32 %180, i32* %22
  br label %211

; <label>:181:                                    ; preds = %23
  %182 = load i32, i32* @x.581
  %183 = load i32, i32* @y.582
  %184 = add i32 %182, -541534093
  %185 = sub i32 %184, 1
  %186 = sub i32 %185, -541534093
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  %196 = select i1 %194, i32 -800850457, i32 102389513
  store i32 %196, i32* %22
  br label %211

; <label>:197:                                    ; preds = %23
  store i32 -1400552234, i32* %22
  br label %211

; <label>:198:                                    ; preds = %23
  ret void

; <label>:199:                                    ; preds = %23
  %200 = alloca %"class.std::vector.25"*, align 8
  %201 = alloca i64, align 8
  %202 = alloca i64*, align 8
  %203 = alloca %"class.std::vector.25", align 8
  %204 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %205 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %200, align 8
  store i64 %1, i64* %201, align 8
  store i64* %2, i64** %202, align 8
  %206 = load %"class.std::vector.25"*, %"class.std::vector.25"** %200, align 8
  %207 = load i64, i64* %201, align 8
  %208 = call i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.25"* %206) #3
  %209 = icmp ugt i64 %207, %208
  store i32 2021870664, i32* %22
  br label %211

; <label>:210:                                    ; preds = %23
  store i32 -2071056409, i32* %22
  br label %211

; <label>:211:                                    ; preds = %210, %199, %197, %181, %166, %154, %114, %107, %91, %88, %46, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.25"*) #0 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.583
  %6 = load i32, i32* @y.584
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -427063892, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %120
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -427063892, label %18
    i32 1290084356, label %38
    i32 516069948, label %71
    i32 248287749, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %120

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1290084356, i32 248287749
  store i32 %37, i32* %14
  br label %120

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %39, align 8
  %40 = load %"class.std::vector.25"*, %"class.std::vector.25"** %39, align 8
  %41 = bitcast %"class.std::vector.25"* %40 to %"struct.std::_Vector_base.26"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load i64*, i64** %43, align 8
  %45 = bitcast %"class.std::vector.25"* %40 to %"struct.std::_Vector_base.26"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = ptrtoint i64* %44 to i64
  %50 = ptrtoint i64* %48 to i64
  %51 = add i64 %49, 560143193396870760
  %52 = sub i64 %51, %50
  %53 = sub i64 %52, 560143193396870760
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 8
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.583
  %57 = load i32, i32* @y.584
  %58 = add i32 %56, 1981703270
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1981703270
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 516069948, i32 248287749
  store i32 %70, i32* %14
  br label %120

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %74, align 8
  %75 = load %"class.std::vector.25"*, %"class.std::vector.25"** %74, align 8
  %76 = bitcast %"class.std::vector.25"* %75 to %"struct.std::_Vector_base.26"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %77, i32 0, i32 2
  %79 = load i64*, i64** %78, align 8
  %80 = bitcast %"class.std::vector.25"* %75 to %"struct.std::_Vector_base.26"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = ptrtoint i64* %79 to i64
  %85 = ptrtoint i64* %83 to i64
  %86 = sub i64 0, %84
  %87 = add i64 0, %86
  %88 = sub i64 0, %84
  %89 = add i64 %87, 3952001019416392328
  %90 = add i64 %89, %85
  %91 = sub i64 %90, 3952001019416392328
  %92 = add i64 %87, %85
  %93 = shl i64 %84, %85
  %94 = shl i64 %84, %85
  %95 = sub i64 0, %85
  %96 = add i64 %84, %95
  %97 = sub i64 %84, %85
  %98 = sub i64 %96, -8752426152969941713
  %99 = sub i64 %98, 8
  %100 = add i64 %99, -8752426152969941713
  %101 = sub i64 %96, 8
  %102 = mul i64 %100, 8
  %103 = add i64 %96, -4722695669531626784
  %104 = sub i64 %103, 8
  %105 = sub i64 %104, -4722695669531626784
  %106 = sub i64 %96, 8
  %107 = mul i64 %105, 8
  %108 = shl i64 %96, 8
  %109 = shl i64 %96, 8
  %110 = shl i64 %96, 8
  %111 = add i64 0, -1227179289896442840
  %112 = sub i64 %111, %96
  %113 = sub i64 %112, -1227179289896442840
  %114 = sub i64 0, %96
  %115 = sub i64 %113, 4157660225374933861
  %116 = add i64 %115, 8
  %117 = add i64 %116, 4157660225374933861
  %118 = add i64 %113, 8
  %119 = sdiv exact i64 %96, 8
  store i32 1290084356, i32* %14
  br label %120

; <label>:120:                                    ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.25"*, i64, i64* dereferenceable(8), %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.25"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.27"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %8, align 8
  %11 = load %"class.std::vector.25"*, %"class.std::vector.25"** %5, align 8
  %12 = bitcast %"class.std::vector.25"* %11 to %"struct.std::_Vector_base.26"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %8, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.26"* %12, i64 %13, %"class.std::allocator.27"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.25"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.585
  %20 = load i32, i32* @y.586
  %21 = add i32 %19, 1536464544
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1536464544
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %69

; <label>:45:                                     ; preds = %18, %69
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %9, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %10, align 4
  %49 = bitcast %"class.std::vector.25"* %11 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.26"* %49) #3
  %50 = load i32, i32* @x.585
  %51 = load i32, i32* @y.586
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %69

; <label>:63:                                     ; preds = %45
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i8*, i8** %9, align 8
  %66 = load i32, i32* %10, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

; <label>:69:                                     ; preds = %45, %18
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %9, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %10, align 4
  %73 = bitcast %"class.std::vector.25"* %11 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.26"* %73) #3
  br label %45
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %6, i64** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %9, i64** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %12, i64** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.25"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExEvT_S7_RKT0_(i64*, i64*, i64* dereferenceable(8)) #2 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %15, i64* %20, i64* dereferenceable(8) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.25"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.593
  %6 = load i32, i32* @y.594
  %7 = add i32 %5, -589251479
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -589251479
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1902493699, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1902493699, label %19
    i32 1036843763, label %27
    i32 810944822, label %63
    i32 -1409793141, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1036843763, i32 -1409793141
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %29 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %29, align 8
  %30 = load %"class.std::vector.25"*, %"class.std::vector.25"** %29, align 8
  %31 = bitcast %"class.std::vector.25"* %30 to %"struct.std::_Vector_base.26"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"* %28, i64** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %28, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  store i64* %35, i64** %2
  %36 = load i32, i32* @x.593
  %37 = load i32, i32* @y.594
  %38 = sub i32 %36, -210914762
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -210914762
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 810944822, i32 -1409793141
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64*, i64** %2
  ret i64* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %67 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %67, align 8
  %68 = load %"class.std::vector.25"*, %"class.std::vector.25"** %67, align 8
  %69 = bitcast %"class.std::vector.25"* %68 to %"struct.std::_Vector_base.26"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %70, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"* %66, i64** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %66, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  store i32 1036843763, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.25"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %4 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %5 = bitcast %"class.std::vector.25"* %4 to %"struct.std::_Vector_base.26"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"* %2, i64** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.27"* dereferenceable(1)) #2 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.597
  %9 = load i32, i32* @y.598
  %10 = add i32 %8, 425589812
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 425589812
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -600746624, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %88
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -600746624, label %22
    i32 -1599963428, label %42
    i32 -1922515978, label %77
    i32 443137945, label %79
  ]

; <label>:21:                                     ; preds = %19
  br label %88

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1599963428, i32 443137945
  store i32 %41, i32* %18
  br label %88

; <label>:42:                                     ; preds = %19
  %43 = alloca i64*, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64*, align 8
  %46 = alloca %"class.std::allocator.27"*, align 8
  store i64* %0, i64** %43, align 8
  store i64 %1, i64* %44, align 8
  store i64* %2, i64** %45, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %46, align 8
  %47 = load i64*, i64** %43, align 8
  %48 = load i64, i64* %44, align 8
  %49 = load i64*, i64** %45, align 8
  %50 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %47, i64 %48, i64* dereferenceable(8) %49)
  store i64* %50, i64** %5
  %51 = load i32, i32* @x.597
  %52 = load i32, i32* @y.598
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1922515978, i32 443137945
  store i32 %76, i32* %18
  br label %88

; <label>:77:                                     ; preds = %19
  %78 = load volatile i64*, i64** %5
  ret i64* %78

; <label>:79:                                     ; preds = %19
  %80 = alloca i64*, align 8
  %81 = alloca i64, align 8
  %82 = alloca i64*, align 8
  %83 = alloca %"class.std::allocator.27"*, align 8
  store i64* %0, i64** %80, align 8
  store i64 %1, i64* %81, align 8
  store i64* %2, i64** %82, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %83, align 8
  %84 = load i64*, i64** %80, align 8
  %85 = load i64, i64* %81, align 8
  %86 = load i64*, i64** %82, align 8
  %87 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %84, i64 %85, i64* dereferenceable(8) %86)
  store i32 -1599963428, i32* %18
  br label %88

; <label>:88:                                     ; preds = %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.25"*, i64*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %12 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %11) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %6, i64* %10, %"class.std::allocator.27"* dereferenceable(1) %12)
          to label %13 unwind label %70

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.599
  %15 = load i32, i32* @y.600
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %73

; <label>:39:                                     ; preds = %13, %73
  %40 = load i64*, i64** %4, align 8
  %41 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 1
  store i64* %40, i64** %43, align 8
  %44 = load i32, i32* @x.599
  %45 = load i32, i32* @y.600
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %73

; <label>:69:                                     ; preds = %39
  ret void

; <label>:70:                                     ; preds = %2
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  call void @__clang_call_terminate(i8* %72) #7
  unreachable

; <label>:73:                                     ; preds = %39, %13
  %74 = load i64*, i64** %4, align 8
  %75 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %76, i32 0, i32 1
  store i64* %74, i64** %77, align 8
  br label %39
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #2 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.26"*, i64, %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.603
  %5 = load i32, i32* @y.604
  %6 = sub i32 %4, 404975360
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 404975360
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %148

; <label>:30:                                     ; preds = %3, %148
  %31 = alloca %"struct.std::_Vector_base.26"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.27"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.27"* %2, %"class.std::allocator.27"** %33, align 8
  %36 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %31, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %36, i32 0, i32 0
  %38 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %33, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37, %"class.std::allocator.27"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %32, align 8
  %40 = load i32, i32* @x.603
  %41 = load i32, i32* @y.604
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %148

; <label>:53:                                     ; preds = %30
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.26"* %36, i64 %39)
          to label %54 unwind label %85

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.603
  %56 = load i32, i32* @y.604
  %57 = add i32 %55, -426449281
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -426449281
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %158

; <label>:69:                                     ; preds = %54, %158
  %70 = load i32, i32* @x.603
  %71 = load i32, i32* @y.604
  %72 = sub i32 %70, -275990919
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -275990919
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %158

; <label>:84:                                     ; preds = %69
  ret void

; <label>:85:                                     ; preds = %53
  %86 = load i32, i32* @x.603
  %87 = load i32, i32* @y.604
  %88 = add i32 %86, 334281923
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, 334281923
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %159

; <label>:112:                                    ; preds = %85, %159
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %34, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %35, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37) #3
  %116 = load i32, i32* @x.603
  %117 = load i32, i32* @y.604
  %118 = add i32 %116, -682518968
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, -682518968
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %159

; <label>:142:                                    ; preds = %112
  br label %143

; <label>:143:                                    ; preds = %142
  %144 = load i8*, i8** %34, align 8
  %145 = load i32, i32* %35, align 4
  %146 = insertvalue { i8*, i32 } undef, i8* %144, 0
  %147 = insertvalue { i8*, i32 } %146, i32 %145, 1
  resume { i8*, i32 } %147

; <label>:148:                                    ; preds = %30, %3
  %149 = alloca %"struct.std::_Vector_base.26"*, align 8
  %150 = alloca i64, align 8
  %151 = alloca %"class.std::allocator.27"*, align 8
  %152 = alloca i8*
  %153 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %149, align 8
  store i64 %1, i64* %150, align 8
  store %"class.std::allocator.27"* %2, %"class.std::allocator.27"** %151, align 8
  %154 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %149, align 8
  %155 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %154, i32 0, i32 0
  %156 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %151, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %155, %"class.std::allocator.27"* dereferenceable(1) %156) #3
  %157 = load i64, i64* %150, align 8
  br label %30

; <label>:158:                                    ; preds = %69, %54
  br label %69

; <label>:159:                                    ; preds = %112, %85
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %34, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %35, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37) #3
  br label %112
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.25"*, i64, i64* dereferenceable(8)) #2 comdat align 2 {
  %4 = alloca %"class.std::vector.25"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.25"*, %"class.std::vector.25"** %4, align 8
  %8 = bitcast %"class.std::vector.25"* %7 to %"struct.std::_Vector_base.26"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector.25"* %7 to %"struct.std::_Vector_base.26"*
  %15 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %14) #3
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.27"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.25"* %7 to %"struct.std::_Vector_base.26"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.27"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.27"* %1, %"class.std::allocator.27"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.27"*
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.27"* %6, %"class.std::allocator.27"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.26"*, i64) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.609
  %6 = load i32, i32* @y.610
  %7 = add i32 %5, -229719232
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -229719232
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1175610384, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1175610384, label %19
    i32 313946014, label %27
    i32 -1199989986, label %73
    i32 -1255038599, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 313946014, i32 -1255038599
  store i32 %26, i32* %15
  br label %94

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.26"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.26"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  store i64* %32, i64** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %38, i32 0, i32 1
  store i64* %37, i64** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds i64, i64* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 2
  store i64* %44, i64** %46, align 8
  %47 = load i32, i32* @x.609
  %48 = load i32, i32* @y.610
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1199989986, i32 -1255038599
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.26"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.26"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %80, i32 0, i32 0
  store i64* %79, i64** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %85, i32 0, i32 1
  store i64* %84, i64** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds i64, i64* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %92, i32 0, i32 2
  store i64* %91, i64** %93, align 8
  store i32 313946014, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.27"*, %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store %"class.std::allocator.27"* %1, %"class.std::allocator.27"** %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = bitcast %"class.std::allocator.27"* %7 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.28"* %6, %"class.__gnu_cxx::new_allocator.28"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.613
  %6 = load i32, i32* @y.614
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 714793191, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 714793191, label %18
    i32 -1001349138, label %26
    i32 623807216, label %56
    i32 1532946177, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1001349138, i32 1532946177
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %28 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %27, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %1, %"class.__gnu_cxx::new_allocator.28"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %27, align 8
  %30 = load i32, i32* @x.613
  %31 = load i32, i32* @y.614
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 623807216, i32 1532946177
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %59 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %58, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %1, %"class.__gnu_cxx::new_allocator.28"** %59, align 8
  %60 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %58, align 8
  store i32 -1001349138, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.26"*, i64) #2 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca %"struct.std::_Vector_base.26"*
  %7 = alloca %"struct.std::_Vector_base.26"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %7, align 8
  store %"struct.std::_Vector_base.26"* %9, %"struct.std::_Vector_base.26"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 486304351, i32* %11
  %12 = alloca i64*
  br label %13

; <label>:13:                                     ; preds = %2, %126
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 486304351, label %16
    i32 -310518582, label %20
    i32 419663736, label %36
    i32 603897807, label %57
    i32 1657192104, label %59
    i32 -204129180, label %60
    i32 -1697661558, label %89
    i32 -1138861039, label %117
    i32 16064116, label %119
    i32 -65472632, label %125
  ]

; <label>:15:                                     ; preds = %13
  br label %126

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = icmp ne i64 %17, 0
  %19 = select i1 %18, i32 -310518582, i32 1657192104
  store i32 %19, i32* %11
  br label %126

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.615
  %22 = load i32, i32* @y.616
  %23 = sub i32 %21, -1634784214
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -1634784214
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 419663736, i32 16064116
  store i32 %35, i32* %11
  br label %126

; <label>:36:                                     ; preds = %13
  %37 = load volatile %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %6
  %38 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %38 to %"class.std::allocator.27"*
  %40 = load i64, i64* %8, align 8
  %41 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.27"* dereferenceable(1) %39, i64 %40)
  store i64* %41, i64** %4
  %42 = load i32, i32* @x.615
  %43 = load i32, i32* @y.616
  %44 = add i32 %42, -958289119
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -958289119
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 603897807, i32 16064116
  store i32 %56, i32* %11
  br label %126

; <label>:57:                                     ; preds = %13
  store i32 -204129180, i32* %11
  %58 = load volatile i64*, i64** %4
  store i64* %58, i64** %12
  br label %126

; <label>:59:                                     ; preds = %13
  store i32 -204129180, i32* %11
  store i64* null, i64** %12
  br label %126

; <label>:60:                                     ; preds = %13
  %61 = load i64*, i64** %12
  store i64* %61, i64** %3
  %62 = load i32, i32* @x.615
  %63 = load i32, i32* @y.616
  %64 = add i32 %62, -1927329545
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -1927329545
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -1697661558, i32 -65472632
  store i32 %88, i32* %11
  br label %126

; <label>:89:                                     ; preds = %13
  %90 = load i32, i32* @x.615
  %91 = load i32, i32* @y.616
  %92 = add i32 %90, -229532131
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -229532131
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -1138861039, i32 -65472632
  store i32 %116, i32* %11
  br label %126

; <label>:117:                                    ; preds = %13
  %118 = load volatile i64*, i64** %3
  ret i64* %118

; <label>:119:                                    ; preds = %13
  %120 = load volatile %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %6
  %121 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %120, i32 0, i32 0
  %122 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %121 to %"class.std::allocator.27"*
  %123 = load i64, i64* %8, align 8
  %124 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.27"* dereferenceable(1) %122, i64 %123)
  store i32 419663736, i32* %11
  br label %126

; <label>:125:                                    ; preds = %13
  store i32 -1697661558, i32* %11
  br label %126

; <label>:126:                                    ; preds = %125, %119, %89, %60, %59, %57, %36, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.27"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1604686904, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1604686904, label %16
    i32 -20014200, label %21
    i32 1009278671, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -20014200, i32 1009278671
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8), i64** dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.623
  %6 = load i32, i32* @y.624
  %7 = sub i32 %5, -1403180556
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1403180556
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 966551863, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 966551863, label %19
    i32 -548408344, label %39
    i32 2131842291, label %67
    i32 -1308152379, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -548408344, i32 -1308152379
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca i64**, align 8
  %41 = alloca i64**, align 8
  %42 = alloca i64*, align 8
  store i64** %0, i64*** %40, align 8
  store i64** %1, i64*** %41, align 8
  %43 = load i64**, i64*** %40, align 8
  %44 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %43) #3
  %45 = load i64*, i64** %44, align 8
  store i64* %45, i64** %42, align 8
  %46 = load i64**, i64*** %41, align 8
  %47 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %46) #3
  %48 = load i64*, i64** %47, align 8
  %49 = load i64**, i64*** %40, align 8
  store i64* %48, i64** %49, align 8
  %50 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %42) #3
  %51 = load i64*, i64** %50, align 8
  %52 = load i64**, i64*** %41, align 8
  store i64* %51, i64** %52, align 8
  %53 = load i32, i32* @x.623
  %54 = load i32, i32* @y.624
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 2131842291, i32 -1308152379
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca i64**, align 8
  %70 = alloca i64**, align 8
  %71 = alloca i64*, align 8
  store i64** %0, i64*** %69, align 8
  store i64** %1, i64*** %70, align 8
  %72 = load i64**, i64*** %69, align 8
  %73 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %72) #3
  %74 = load i64*, i64** %73, align 8
  store i64* %74, i64** %71, align 8
  %75 = load i64**, i64*** %70, align 8
  %76 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %75) #3
  %77 = load i64*, i64** %76, align 8
  %78 = load i64**, i64*** %69, align 8
  store i64* %77, i64** %78, align 8
  %79 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %71) #3
  %80 = load i64*, i64** %79, align 8
  %81 = load i64**, i64*** %70, align 8
  store i64* %80, i64** %81, align 8
  store i32 -548408344, i32* %15
  br label %82

; <label>:82:                                     ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8)) #0 comdat {
  %2 = alloca i64**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.625
  %6 = load i32, i32* @y.626
  %7 = sub i32 %5, -1708662630
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1708662630
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 719655122, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 719655122, label %19
    i32 1370085250, label %39
    i32 224938310, label %69
    i32 -1005691992, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1370085250, i32 -1005691992
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca i64**, align 8
  store i64** %0, i64*** %40, align 8
  %41 = load i64**, i64*** %40, align 8
  store i64** %41, i64*** %2
  %42 = load i32, i32* @x.625
  %43 = load i32, i32* @y.626
  %44 = add i32 %42, 902338541
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 902338541
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 224938310, i32 -1005691992
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile i64**, i64*** %2
  ret i64** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i64**, align 8
  store i64** %0, i64*** %72, align 8
  %73 = load i64**, i64*** %72, align 8
  store i32 1370085250, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = alloca i32
  store i32 748123054, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %94
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 748123054, label %14
    i32 -1295977782, label %19
    i32 424986895, label %34
    i32 -96691019, label %52
    i32 -1719112965, label %53
    i32 2014620727, label %69
    i32 1041466009, label %86
    i32 -613689186, label %87
    i32 -558024161, label %88
    i32 1010706165, label %91
  ]

; <label>:13:                                     ; preds = %11
  br label %94

; <label>:14:                                     ; preds = %11
  %15 = load i64*, i64** %4, align 8
  %16 = load i64*, i64** %5, align 8
  %17 = icmp ne i64* %15, %16
  %18 = select i1 %17, i32 -1295977782, i32 -613689186
  store i32 %18, i32* %10
  br label %94

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* @x.627
  %21 = load i32, i32* @y.628
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 424986895, i32 -558024161
  store i32 %33, i32* %10
  br label %94

; <label>:34:                                     ; preds = %11
  %35 = load i64, i64* %7, align 8
  %36 = load i64*, i64** %4, align 8
  store i64 %35, i64* %36, align 8
  %37 = load i32, i32* @x.627
  %38 = load i32, i32* @y.628
  %39 = sub i32 %37, 897647700
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 897647700
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -96691019, i32 -558024161
  store i32 %51, i32* %10
  br label %94

; <label>:52:                                     ; preds = %11
  store i32 -1719112965, i32* %10
  br label %94

; <label>:53:                                     ; preds = %11
  %54 = load i32, i32* @x.627
  %55 = load i32, i32* @y.628
  %56 = add i32 %54, -1970518692
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1970518692
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 2014620727, i32 1010706165
  store i32 %68, i32* %10
  br label %94

; <label>:69:                                     ; preds = %11
  %70 = load i64*, i64** %4, align 8
  %71 = getelementptr inbounds i64, i64* %70, i32 1
  store i64* %71, i64** %4, align 8
  %72 = load i32, i32* @x.627
  %73 = load i32, i32* @y.628
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 1041466009, i32 1010706165
  store i32 %85, i32* %10
  br label %94

; <label>:86:                                     ; preds = %11
  store i32 748123054, i32* %10
  br label %94

; <label>:87:                                     ; preds = %11
  ret void

; <label>:88:                                     ; preds = %11
  %89 = load i64, i64* %7, align 8
  %90 = load i64*, i64** %4, align 8
  store i64 %89, i64* %90, align 8
  store i32 424986895, i32* %10
  br label %94

; <label>:91:                                     ; preds = %11
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i32 1
  store i64* %93, i64** %4, align 8
  store i32 2014620727, i32* %10
  br label %94

; <label>:94:                                     ; preds = %91, %88, %86, %69, %53, %52, %34, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64*) #2 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.629
  %6 = load i32, i32* @y.630
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1391707780, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1391707780, label %18
    i32 -946058385, label %38
    i32 338543878, label %61
    i32 -241461425, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -946058385, i32 -241461425
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %39, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %40 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %40, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64* %45)
  store i64* %46, i64** %2
  %47 = load i32, i32* @x.629
  %48 = load i32, i32* @y.630
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 338543878, i32 -241461425
  store i32 %60, i32* %14
  br label %72

; <label>:61:                                     ; preds = %15
  %62 = load volatile i64*, i64** %2
  ret i64* %62

; <label>:63:                                     ; preds = %15
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %64, i32 0, i32 0
  store i64* %0, i64** %66, align 8
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %65 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %65, i32 0, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64* %70)
  store i32 -946058385, i32* %14
  br label %72

; <label>:72:                                     ; preds = %63, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.631
  %6 = load i32, i32* @y.632
  %7 = sub i32 %5, -165196482
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -165196482
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -491999206, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -491999206, label %19
    i32 -1022850837, label %39
    i32 -179001427, label %58
    i32 29969344, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1022850837, i32 29969344
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %40, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %40) #3
  %43 = load i64*, i64** %42, align 8
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.631
  %45 = load i32, i32* @y.632
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -179001427, i32 29969344
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %61, i32 0, i32 0
  store i64* %0, i64** %62, align 8
  %63 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %61) #3
  %64 = load i64*, i64** %63, align 8
  store i32 -1022850837, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"*) #0 comdat align 2 {
  %2 = alloca i64**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.633
  %6 = load i32, i32* @y.634
  %7 = add i32 %5, 435829044
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 435829044
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1116766185, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1116766185, label %19
    i32 -1541402698, label %39
    i32 1275216831, label %70
    i32 -1767107132, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1541402698, i32 -1767107132
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %41, i32 0, i32 0
  store i64** %42, i64*** %2
  %43 = load i32, i32* @x.633
  %44 = load i32, i32* @y.634
  %45 = sub i32 %43, -698471673
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -698471673
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1275216831, i32 -1767107132
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64**, i64*** %2
  ret i64** %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %74, i32 0, i32 0
  store i32 -1541402698, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"*, i64** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.635
  %6 = load i32, i32* @y.636
  %7 = sub i32 %5, 717424757
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 717424757
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1763576409, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1763576409, label %19
    i32 453088414, label %39
    i32 -1592857050, label %61
    i32 2021006113, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 453088414, i32 2021006113
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %41 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %40, align 8
  store i64** %1, i64*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %42, i32 0, i32 0
  %44 = load i64**, i64*** %41, align 8
  %45 = load i64*, i64** %44, align 8
  store i64* %45, i64** %43, align 8
  %46 = load i32, i32* @x.635
  %47 = load i32, i32* @y.636
  %48 = sub i32 %46, -26332041
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -26332041
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1592857050, i32 2021006113
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %64 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %63, align 8
  store i64** %1, i64*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %65, i32 0, i32 0
  %67 = load i64**, i64*** %64, align 8
  %68 = load i64*, i64** %67, align 8
  store i64* %68, i64** %66, align 8
  store i32 453088414, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #2 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #2 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 1343249670, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %112
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1343249670, label %16
    i32 1418400474, label %20
    i32 1782644074, label %23
    i32 1349755992, label %51
    i32 -1267201375, label %74
    i32 64915766, label %75
    i32 -654085562, label %77
  ]

; <label>:15:                                     ; preds = %13
  br label %112

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 1418400474, i32 64915766
  store i32 %19, i32* %12
  br label %112

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %7, align 8
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 1782644074, i32* %12
  br label %112

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.641
  %25 = load i32, i32* @y.642
  %26 = sub i32 %24, 206382014
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 206382014
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 1349755992, i32 -654085562
  store i32 %50, i32* %12
  br label %112

; <label>:51:                                     ; preds = %13
  %52 = load i64, i64* %8, align 8
  %53 = sub i64 0, %52
  %54 = sub i64 0, -1
  %55 = add i64 %53, %54
  %56 = sub i64 0, %55
  %57 = add i64 %52, -1
  store i64 %56, i64* %8, align 8
  %58 = load i64*, i64** %4, align 8
  %59 = getelementptr inbounds i64, i64* %58, i32 1
  store i64* %59, i64** %4, align 8
  %60 = load i32, i32* @x.641
  %61 = load i32, i32* @y.642
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1267201375, i32 -654085562
  store i32 %73, i32* %12
  br label %112

; <label>:74:                                     ; preds = %13
  store i32 1343249670, i32* %12
  br label %112

; <label>:75:                                     ; preds = %13
  %76 = load i64*, i64** %4, align 8
  ret i64* %76

; <label>:77:                                     ; preds = %13
  %78 = load i64, i64* %8, align 8
  %79 = sub i64 0, 1033732155278016934
  %80 = sub i64 %79, %78
  %81 = add i64 %80, 1033732155278016934
  %82 = sub i64 0, %78
  %83 = sub i64 0, %81
  %84 = sub i64 0, -1
  %85 = add i64 %83, %84
  %86 = sub i64 0, %85
  %87 = add i64 %81, -1
  %88 = shl i64 %78, -1
  %89 = sub i64 0, -1
  %90 = add i64 %78, %89
  %91 = sub i64 %78, -1
  %92 = mul i64 %90, -1
  %93 = sub i64 %78, 7495861673804697319
  %94 = sub i64 %93, -1
  %95 = add i64 %94, 7495861673804697319
  %96 = sub i64 %78, -1
  %97 = mul i64 %95, -1
  %98 = add i64 0, -978583783255542123
  %99 = sub i64 %98, %78
  %100 = sub i64 %99, -978583783255542123
  %101 = sub i64 0, %78
  %102 = add i64 %100, -3857210939464102538
  %103 = add i64 %102, -1
  %104 = sub i64 %103, -3857210939464102538
  %105 = add i64 %100, -1
  %106 = shl i64 %78, -1
  %107 = sub i64 0, -1
  %108 = sub i64 %78, %107
  %109 = add i64 %78, -1
  store i64 %108, i64* %8, align 8
  %110 = load i64*, i64** %4, align 8
  %111 = getelementptr inbounds i64, i64* %110, i32 1
  store i64* %111, i64** %4, align 8
  store i32 1349755992, i32* %12
  br label %112

; <label>:112:                                    ; preds = %77, %74, %51, %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #2 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #0 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca %"class.std::_Rb_tree"*
  %5 = alloca %"struct.std::pair.35", align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"struct.std::pair.37", align 8
  %9 = alloca %"struct.std::_Identity", align 1
  %10 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store i64* %1, i64** %7, align 8
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  store %"class.std::_Rb_tree"* %15, %"class.std::_Rb_tree"** %4
  %16 = load i64*, i64** %7, align 8
  %17 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %9, i64* dereferenceable(8) %16)
  %18 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %19 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree"* %18, i64* dereferenceable(8) %17)
  %20 = bitcast %"struct.std::pair.37"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %21 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %20, i32 0, i32 0
  %22 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 0
  store %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %20, i32 0, i32 1
  %24 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 1
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %8, i32 0, i32 1
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %25, align 8
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %3
  %27 = alloca i32
  store i32 -1454645037, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %54
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 -1454645037, label %31
    i32 -584502054, label %35
    i32 765164036, label %46
    i32 -388602298, label %51
  ]

; <label>:30:                                     ; preds = %28
  br label %54

; <label>:31:                                     ; preds = %28
  %32 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  %33 = icmp ne %"struct.std::_Rb_tree_node_base"* %32, null
  %34 = select i1 %33, i32 -584502054, i32 765164036
  store i32 %34, i32* %27
  br label %54

; <label>:35:                                     ; preds = %28
  %36 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %10, %"class.std::_Rb_tree"* dereferenceable(48) %36)
  %37 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %8, i32 0, i32 0
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %8, i32 0, i32 1
  %40 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %41 = load i64*, i64** %7, align 8
  %42 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %41) #3
  %43 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"* %43, %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"* %40, i64* dereferenceable(8) %42, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %10)
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %45, align 8
  store i8 1, i8* %12, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.35"* %5, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %11, i8* dereferenceable(1) %12)
  store i32 -388602298, i32* %27
  br label %54

; <label>:46:                                     ; preds = %28
  %47 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %8, i32 0, i32 0
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node_base"* %48 to %"struct.std::_Rb_tree_node"*
  %50 = bitcast %"struct.std::_Rb_tree_node"* %49 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %50) #3
  store i8 0, i8* %14, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.35"* %5, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13, i8* dereferenceable(1) %14)
  store i32 -388602298, i32* %27
  br label %54

; <label>:51:                                     ; preds = %28
  %52 = bitcast %"struct.std::pair.35"* %5 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %53 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %52, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %53

; <label>:54:                                     ; preds = %46, %35, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %12 = load i8*, i8** %6, align 8
  %13 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %12) #3
  %14 = load i8, i8* %13, align 1
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"struct.std::_Rb_tree_node"*
  %8 = alloca i1
  %9 = alloca %"class.std::_Rb_tree"*
  %10 = alloca %"struct.std::pair.37", align 8
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %17 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %18 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  store i64* %1, i64** %12, align 8
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  store %"class.std::_Rb_tree"* %19, %"class.std::_Rb_tree"** %9
  %20 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %21 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %20) #3
  store %"struct.std::_Rb_tree_node"* %21, %"struct.std::_Rb_tree_node"** %13, align 8
  %22 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %23 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %22) #3
  store %"struct.std::_Rb_tree_node"* %23, %"struct.std::_Rb_tree_node"** %14, align 8
  store i8 1, i8* %15, align 1
  %24 = alloca i32
  store i32 -462306732, i32* %24
  %25 = alloca %"struct.std::_Rb_tree_node"*
  br label %26

; <label>:26:                                     ; preds = %2, %502
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -462306732, label %29
    i32 -588402723, label %45
    i32 -1658292612, label %63
    i32 1748706694, label %66
    i32 -1189930853, label %79
    i32 -241300350, label %83
    i32 1066685772, label %98
    i32 -71628352, label %128
    i32 -1269071744, label %130
    i32 -1878360583, label %159
    i32 -1323292149, label %188
    i32 -1425135600, label %189
    i32 -133593028, label %216
    i32 -706019558, label %236
    i32 -951487941, label %239
    i32 1681428365, label %266
    i32 120958767, label %297
    i32 882295445, label %300
    i32 255338111, label %301
    i32 -1192971946, label %316
    i32 -1307692024, label %345
    i32 -810559411, label %346
    i32 1434686752, label %347
    i32 1669825599, label %357
    i32 500018251, label %358
    i32 308843257, label %386
    i32 1873437692, label %415
    i32 1971680205, label %416
    i32 -672928344, label %444
    i32 800160220, label %474
    i32 999007603, label %476
    i32 -488642044, label %479
    i32 -1438285308, label %483
    i32 189941508, label %485
    i32 1230209962, label %490
    i32 1969851830, label %495
    i32 -886012172, label %497
    i32 -277587021, label %499
  ]

; <label>:28:                                     ; preds = %26
  br label %502

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* @x.651
  %31 = load i32, i32* @y.652
  %32 = sub i32 %30, -517673973
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -517673973
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -588402723, i32 999007603
  store i32 %44, i32* %24
  br label %502

; <label>:45:                                     ; preds = %26
  %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %47 = icmp ne %"struct.std::_Rb_tree_node"* %46, null
  store i1 %47, i1* %8
  %48 = load i32, i32* @x.651
  %49 = load i32, i32* @y.652
  %50 = add i32 %48, -138579947
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -138579947
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1658292612, i32 999007603
  store i32 %62, i32* %24
  br label %502

; <label>:63:                                     ; preds = %26
  %64 = load volatile i1, i1* %8
  %65 = select i1 %64, i32 1748706694, i32 -1425135600
  store i32 %65, i32* %24
  br label %502

; <label>:66:                                     ; preds = %26
  %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  store %"struct.std::_Rb_tree_node"* %67, %"struct.std::_Rb_tree_node"** %14, align 8
  %68 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %69 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %69, i32 0, i32 0
  %71 = load i64*, i64** %12, align 8
  %72 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %73 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %72)
  %74 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.18"* %70, i64* dereferenceable(8) %71, i64* dereferenceable(8) %73)
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %15, align 1
  %76 = load i8, i8* %15, align 1
  %77 = trunc i8 %76 to i1
  %78 = select i1 %77, i32 -1189930853, i32 -241300350
  store i32 %78, i32* %24
  br label %502

; <label>:79:                                     ; preds = %26
  %80 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %81 = bitcast %"struct.std::_Rb_tree_node"* %80 to %"struct.std::_Rb_tree_node_base"*
  %82 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %81) #3
  store i32 -1269071744, i32* %24
  store %"struct.std::_Rb_tree_node"* %82, %"struct.std::_Rb_tree_node"** %25
  br label %502

; <label>:83:                                     ; preds = %26
  %84 = load i32, i32* @x.651
  %85 = load i32, i32* @y.652
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 1066685772, i32 -488642044
  store i32 %97, i32* %24
  br label %502

; <label>:98:                                     ; preds = %26
  %99 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %100 = bitcast %"struct.std::_Rb_tree_node"* %99 to %"struct.std::_Rb_tree_node_base"*
  %101 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %100) #3
  store %"struct.std::_Rb_tree_node"* %101, %"struct.std::_Rb_tree_node"** %7
  %102 = load i32, i32* @x.651
  %103 = load i32, i32* @y.652
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 -71628352, i32 -488642044
  store i32 %127, i32* %24
  br label %502

; <label>:128:                                    ; preds = %26
  store i32 -1269071744, i32* %24
  %129 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7
  store %"struct.std::_Rb_tree_node"* %129, %"struct.std::_Rb_tree_node"** %25
  br label %502

; <label>:130:                                    ; preds = %26
  %131 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %25
  store %"struct.std::_Rb_tree_node"* %131, %"struct.std::_Rb_tree_node"** %3
  %132 = load i32, i32* @x.651
  %133 = load i32, i32* @y.652
  %134 = add i32 %132, -1429353251
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -1429353251
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 false, true
  %145 = and i1 %142, false
  %146 = and i1 %140, %144
  %147 = and i1 %143, false
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 false, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  %158 = select i1 %156, i32 -1878360583, i32 -1438285308
  store i32 %158, i32* %24
  br label %502

; <label>:159:                                    ; preds = %26
  %160 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %160, %"struct.std::_Rb_tree_node"** %13, align 8
  %161 = load i32, i32* @x.651
  %162 = load i32, i32* @y.652
  %163 = add i32 %161, -1160336125
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -1160336125
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 -1323292149, i32 -1438285308
  store i32 %187, i32* %24
  br label %502

; <label>:188:                                    ; preds = %26
  store i32 -462306732, i32* %24
  br label %502

; <label>:189:                                    ; preds = %26
  %190 = load i32, i32* @x.651
  %191 = load i32, i32* @y.652
  %192 = sub i32 0, 1
  %193 = add i32 %190, %192
  %194 = sub i32 %190, 1
  %195 = mul i32 %190, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %191, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 true, true
  %202 = and i1 %199, true
  %203 = and i1 %197, %201
  %204 = and i1 %200, true
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 true, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  %215 = select i1 %213, i32 -133593028, i32 189941508
  store i32 %215, i32* %24
  br label %502

; <label>:216:                                    ; preds = %26
  %217 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %218 = bitcast %"struct.std::_Rb_tree_node"* %217 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_node_base"* %218) #3
  %219 = load i8, i8* %15, align 1
  %220 = trunc i8 %219 to i1
  store i1 %220, i1* %6
  %221 = load i32, i32* @x.651
  %222 = load i32, i32* @y.652
  %223 = sub i32 %221, -842126145
  %224 = sub i32 %223, 1
  %225 = add i32 %224, -842126145
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  %235 = select i1 %233, i32 -706019558, i32 189941508
  store i32 %235, i32* %24
  br label %502

; <label>:236:                                    ; preds = %26
  %237 = load volatile i1, i1* %6
  %238 = select i1 %237, i32 -951487941, i32 1434686752
  store i32 %238, i32* %24
  br label %502

; <label>:239:                                    ; preds = %26
  %240 = load i32, i32* @x.651
  %241 = load i32, i32* @y.652
  %242 = sub i32 0, 1
  %243 = add i32 %240, %242
  %244 = sub i32 %240, 1
  %245 = mul i32 %240, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %241, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 true, true
  %252 = and i1 %249, true
  %253 = and i1 %247, %251
  %254 = and i1 %250, true
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 true, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  %265 = select i1 %263, i32 1681428365, i32 1230209962
  store i32 %265, i32* %24
  br label %502

; <label>:266:                                    ; preds = %26
  %267 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %268 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"* %267) #3
  %269 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %268, %"struct.std::_Rb_tree_node_base"** %269, align 8
  %270 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %17) #3
  store i1 %270, i1* %5
  %271 = load i32, i32* @x.651
  %272 = load i32, i32* @y.652
  %273 = sub i32 0, 1
  %274 = add i32 %271, %273
  %275 = sub i32 %271, 1
  %276 = mul i32 %271, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %272, 10
  %280 = xor i1 %278, true
  %281 = xor i1 %279, true
  %282 = xor i1 false, true
  %283 = and i1 %280, false
  %284 = and i1 %278, %282
  %285 = and i1 %281, false
  %286 = and i1 %279, %282
  %287 = or i1 %283, %284
  %288 = or i1 %285, %286
  %289 = xor i1 %287, %288
  %290 = or i1 %280, %281
  %291 = xor i1 %290, true
  %292 = or i1 false, %282
  %293 = and i1 %291, %292
  %294 = or i1 %289, %293
  %295 = or i1 %278, %279
  %296 = select i1 %294, i32 120958767, i32 1230209962
  store i32 %296, i32* %24
  br label %502

; <label>:297:                                    ; preds = %26
  %298 = load volatile i1, i1* %5
  %299 = select i1 %298, i32 882295445, i32 255338111
  store i32 %299, i32* %24
  br label %502

; <label>:300:                                    ; preds = %26
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.37"* %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %13, %"struct.std::_Rb_tree_node"** dereferenceable(8) %14)
  store i32 1971680205, i32* %24
  br label %502

; <label>:301:                                    ; preds = %26
  %302 = load i32, i32* @x.651
  %303 = load i32, i32* @y.652
  %304 = sub i32 0, 1
  %305 = add i32 %302, %304
  %306 = sub i32 %302, 1
  %307 = mul i32 %302, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %303, 10
  %311 = and i1 %309, %310
  %312 = xor i1 %309, %310
  %313 = or i1 %311, %312
  %314 = or i1 %309, %310
  %315 = select i1 %313, i32 -1192971946, i32 1969851830
  store i32 %315, i32* %24
  br label %502

; <label>:316:                                    ; preds = %26
  %317 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"* %16) #3
  %318 = load i32, i32* @x.651
  %319 = load i32, i32* @y.652
  %320 = add i32 %318, -427855092
  %321 = sub i32 %320, 1
  %322 = sub i32 %321, -427855092
  %323 = sub i32 %318, 1
  %324 = mul i32 %318, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %319, 10
  %328 = xor i1 %326, true
  %329 = xor i1 %327, true
  %330 = xor i1 true, true
  %331 = and i1 %328, true
  %332 = and i1 %326, %330
  %333 = and i1 %329, true
  %334 = and i1 %327, %330
  %335 = or i1 %331, %332
  %336 = or i1 %333, %334
  %337 = xor i1 %335, %336
  %338 = or i1 %328, %329
  %339 = xor i1 %338, true
  %340 = or i1 true, %330
  %341 = and i1 %339, %340
  %342 = or i1 %337, %341
  %343 = or i1 %326, %327
  %344 = select i1 %342, i32 -1307692024, i32 1969851830
  store i32 %344, i32* %24
  br label %502

; <label>:345:                                    ; preds = %26
  store i32 -810559411, i32* %24
  br label %502

; <label>:346:                                    ; preds = %26
  store i32 1434686752, i32* %24
  br label %502

; <label>:347:                                    ; preds = %26
  %348 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %349 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %348, i32 0, i32 0
  %350 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %349, i32 0, i32 0
  %351 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %352 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %351, align 8
  %353 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %352)
  %354 = load i64*, i64** %12, align 8
  %355 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.18"* %350, i64* dereferenceable(8) %353, i64* dereferenceable(8) %354)
  %356 = select i1 %355, i32 1669825599, i32 500018251
  store i32 %356, i32* %24
  br label %502

; <label>:357:                                    ; preds = %26
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.37"* %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %13, %"struct.std::_Rb_tree_node"** dereferenceable(8) %14)
  store i32 1971680205, i32* %24
  br label %502

; <label>:358:                                    ; preds = %26
  %359 = load i32, i32* @x.651
  %360 = load i32, i32* @y.652
  %361 = add i32 %359, 2077976139
  %362 = sub i32 %361, 1
  %363 = sub i32 %362, 2077976139
  %364 = sub i32 %359, 1
  %365 = mul i32 %359, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %360, 10
  %369 = xor i1 %367, true
  %370 = xor i1 %368, true
  %371 = xor i1 false, true
  %372 = and i1 %369, false
  %373 = and i1 %367, %371
  %374 = and i1 %370, false
  %375 = and i1 %368, %371
  %376 = or i1 %372, %373
  %377 = or i1 %374, %375
  %378 = xor i1 %376, %377
  %379 = or i1 %369, %370
  %380 = xor i1 %379, true
  %381 = or i1 false, %371
  %382 = and i1 %380, %381
  %383 = or i1 %378, %382
  %384 = or i1 %367, %368
  %385 = select i1 %383, i32 308843257, i32 -886012172
  store i32 %385, i32* %24
  br label %502

; <label>:386:                                    ; preds = %26
  %387 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.37"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %387, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18)
  %388 = load i32, i32* @x.651
  %389 = load i32, i32* @y.652
  %390 = add i32 %388, 1817078964
  %391 = sub i32 %390, 1
  %392 = sub i32 %391, 1817078964
  %393 = sub i32 %388, 1
  %394 = mul i32 %388, %392
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %389, 10
  %398 = xor i1 %396, true
  %399 = xor i1 %397, true
  %400 = xor i1 false, true
  %401 = and i1 %398, false
  %402 = and i1 %396, %400
  %403 = and i1 %399, false
  %404 = and i1 %397, %400
  %405 = or i1 %401, %402
  %406 = or i1 %403, %404
  %407 = xor i1 %405, %406
  %408 = or i1 %398, %399
  %409 = xor i1 %408, true
  %410 = or i1 false, %400
  %411 = and i1 %409, %410
  %412 = or i1 %407, %411
  %413 = or i1 %396, %397
  %414 = select i1 %412, i32 1873437692, i32 -886012172
  store i32 %414, i32* %24
  br label %502

; <label>:415:                                    ; preds = %26
  store i32 1971680205, i32* %24
  br label %502

; <label>:416:                                    ; preds = %26
  %417 = load i32, i32* @x.651
  %418 = load i32, i32* @y.652
  %419 = add i32 %417, -1254858809
  %420 = sub i32 %419, 1
  %421 = sub i32 %420, -1254858809
  %422 = sub i32 %417, 1
  %423 = mul i32 %417, %421
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %418, 10
  %427 = xor i1 %425, true
  %428 = xor i1 %426, true
  %429 = xor i1 false, true
  %430 = and i1 %427, false
  %431 = and i1 %425, %429
  %432 = and i1 %428, false
  %433 = and i1 %426, %429
  %434 = or i1 %430, %431
  %435 = or i1 %432, %433
  %436 = xor i1 %434, %435
  %437 = or i1 %427, %428
  %438 = xor i1 %437, true
  %439 = or i1 false, %429
  %440 = and i1 %438, %439
  %441 = or i1 %436, %440
  %442 = or i1 %425, %426
  %443 = select i1 %441, i32 -672928344, i32 -277587021
  store i32 %443, i32* %24
  br label %502

; <label>:444:                                    ; preds = %26
  %445 = bitcast %"struct.std::pair.37"* %10 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %446 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %445, align 8
  store { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %446, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  %447 = load i32, i32* @x.651
  %448 = load i32, i32* @y.652
  %449 = sub i32 %447, 1893421300
  %450 = sub i32 %449, 1
  %451 = add i32 %450, 1893421300
  %452 = sub i32 %447, 1
  %453 = mul i32 %447, %451
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %448, 10
  %457 = xor i1 %455, true
  %458 = xor i1 %456, true
  %459 = xor i1 false, true
  %460 = and i1 %457, false
  %461 = and i1 %455, %459
  %462 = and i1 %458, false
  %463 = and i1 %456, %459
  %464 = or i1 %460, %461
  %465 = or i1 %462, %463
  %466 = xor i1 %464, %465
  %467 = or i1 %457, %458
  %468 = xor i1 %467, true
  %469 = or i1 false, %459
  %470 = and i1 %468, %469
  %471 = or i1 %466, %470
  %472 = or i1 %455, %456
  %473 = select i1 %471, i32 800160220, i32 -277587021
  store i32 %473, i32* %24
  br label %502

; <label>:474:                                    ; preds = %26
  %475 = load volatile { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %475

; <label>:476:                                    ; preds = %26
  %477 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %478 = icmp ne %"struct.std::_Rb_tree_node"* %477, null
  store i32 -588402723, i32* %24
  br label %502

; <label>:479:                                    ; preds = %26
  %480 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %481 = bitcast %"struct.std::_Rb_tree_node"* %480 to %"struct.std::_Rb_tree_node_base"*
  %482 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %481) #3
  store i32 1066685772, i32* %24
  br label %502

; <label>:483:                                    ; preds = %26
  %484 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %484, %"struct.std::_Rb_tree_node"** %13, align 8
  store i32 -1878360583, i32* %24
  br label %502

; <label>:485:                                    ; preds = %26
  %486 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %487 = bitcast %"struct.std::_Rb_tree_node"* %486 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_node_base"* %487) #3
  %488 = load i8, i8* %15, align 1
  %489 = trunc i8 %488 to i1
  store i32 -133593028, i32* %24
  br label %502

; <label>:490:                                    ; preds = %26
  %491 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %492 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"* %491) #3
  %493 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %492, %"struct.std::_Rb_tree_node_base"** %493, align 8
  %494 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %17) #3
  store i32 1681428365, i32* %24
  br label %502

; <label>:495:                                    ; preds = %26
  %496 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"* %16) #3
  store i32 -1192971946, i32* %24
  br label %502

; <label>:497:                                    ; preds = %26
  %498 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.37"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %498, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18)
  store i32 308843257, i32* %24
  br label %502

; <label>:499:                                    ; preds = %26
  %500 = bitcast %"struct.std::pair.37"* %10 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %501 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %500, align 8
  store i32 -672928344, i32* %24
  br label %502

; <label>:502:                                    ; preds = %499, %497, %495, %490, %485, %483, %479, %476, %444, %416, %415, %386, %358, %357, %347, %346, %345, %316, %301, %300, %297, %266, %239, %236, %216, %189, %188, %159, %130, %128, %98, %83, %79, %66, %63, %45, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Identity"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8), %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8)) #2 comdat align 2 {
  %6 = alloca i1
  %7 = alloca %"struct.std::_Rb_tree_node_base"*
  %8 = alloca %"class.std::_Rb_tree"*
  %9 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %10 = alloca %"class.std::_Rb_tree"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"struct.std::_Identity", align 1
  %17 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store i64* %3, i64** %13, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %14, align 8
  %18 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %10, align 8
  store %"class.std::_Rb_tree"* %18, %"class.std::_Rb_tree"** %8
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %19, %"struct.std::_Rb_tree_node_base"** %7
  %20 = alloca i32
  store i32 -1178503607, i32* %20
  %21 = alloca i1
  br label %22

; <label>:22:                                     ; preds = %5, %123
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 -1178503607, label %25
    i32 -555891291, label %29
    i32 -278092104, label %57
    i32 -57383019, label %78
    i32 -89362005, label %81
    i32 207587387, label %90
    i32 -1556906416, label %117
  ]

; <label>:24:                                     ; preds = %22
  br label %123

; <label>:25:                                     ; preds = %22
  %26 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7
  %27 = icmp ne %"struct.std::_Rb_tree_node_base"* %26, null
  %28 = select i1 %27, i32 207587387, i32 -555891291
  store i32 %28, i32* %20
  store i1 true, i1* %21
  br label %123

; <label>:29:                                     ; preds = %22
  %30 = load i32, i32* @x.657
  %31 = load i32, i32* @y.658
  %32 = add i32 %30, -249969436
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -249969436
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -278092104, i32 -1556906416
  store i32 %56, i32* %20
  br label %123

; <label>:57:                                     ; preds = %22
  %58 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %59 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %60 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %59) #3
  %61 = bitcast %"struct.std::_Rb_tree_node"* %60 to %"struct.std::_Rb_tree_node_base"*
  %62 = icmp eq %"struct.std::_Rb_tree_node_base"* %58, %61
  store i1 %62, i1* %6
  %63 = load i32, i32* @x.657
  %64 = load i32, i32* @y.658
  %65 = add i32 %63, -690698268
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, -690698268
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 -57383019, i32 -1556906416
  store i32 %77, i32* %20
  br label %123

; <label>:78:                                     ; preds = %22
  %79 = load volatile i1, i1* %6
  %80 = select i1 %79, i32 207587387, i32 -89362005
  store i32 %80, i32* %20
  store i1 true, i1* %21
  br label %123

; <label>:81:                                     ; preds = %22
  %82 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %83 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %83, i32 0, i32 0
  %85 = load i64*, i64** %13, align 8
  %86 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %16, i64* dereferenceable(8) %85)
  %87 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %88 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %87)
  %89 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.18"* %84, i64* dereferenceable(8) %86, i64* dereferenceable(8) %88)
  store i32 207587387, i32* %20
  store i1 %89, i1* %21
  br label %123

; <label>:90:                                     ; preds = %22
  %91 = load i1, i1* %21
  %92 = zext i1 %91 to i8
  store i8 %92, i8* %15, align 1
  %93 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %14, align 8
  %94 = load i64*, i64** %13, align 8
  %95 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %94) #3
  %96 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %93, i64* dereferenceable(8) %95)
  store %"struct.std::_Rb_tree_node"* %96, %"struct.std::_Rb_tree_node"** %17, align 8
  %97 = load i8, i8* %15, align 1
  %98 = trunc i8 %97 to i1
  %99 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %17, align 8
  %100 = bitcast %"struct.std::_Rb_tree_node"* %99 to %"struct.std::_Rb_tree_node_base"*
  %101 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %102 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %103 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %103, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %98, %"struct.std::_Rb_tree_node_base"* %100, %"struct.std::_Rb_tree_node_base"* %101, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %104) #3
  %105 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %106 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %106, i32 0, i32 2
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %108, 8648599291241968251
  %110 = add i64 %109, 1
  %111 = add i64 %110, 8648599291241968251
  %112 = add i64 %108, 1
  store i64 %111, i64* %107, align 8
  %113 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %17, align 8
  %114 = bitcast %"struct.std::_Rb_tree_node"* %113 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %9, %"struct.std::_Rb_tree_node_base"* %114) #3
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  %116 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %115, align 8
  ret %"struct.std::_Rb_tree_node_base"* %116

; <label>:117:                                    ; preds = %22
  %118 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %119 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %120 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %119) #3
  %121 = bitcast %"struct.std::_Rb_tree_node"* %120 to %"struct.std::_Rb_tree_node_base"*
  %122 = icmp eq %"struct.std::_Rb_tree_node_base"* %118, %121
  store i32 -278092104, i32* %20
  br label %123

; <label>:123:                                    ; preds = %117, %81, %78, %57, %29, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.659
  %6 = load i32, i32* @y.660
  %7 = add i32 %5, 1684327485
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1684327485
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -581782053, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -581782053, label %19
    i32 999275779, label %27
    i32 -775885071, label %56
    i32 1960025593, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 999275779, i32 1960025593
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.659
  %31 = load i32, i32* @y.660
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -775885071, i32 1960025593
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile i64*, i64** %2
  ret i64* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca i64*, align 8
  store i64* %0, i64** %59, align 8
  %60 = load i64*, i64** %59, align 8
  store i32 999275779, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.35"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.661
  %7 = load i32, i32* @y.662
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 88847903, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %99
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 88847903, label %19
    i32 -1327949405, label %39
    i32 1253318899, label %82
    i32 254828060, label %83
  ]

; <label>:18:                                     ; preds = %16
  br label %99

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1327949405, i32 254828060
  store i32 %38, i32* %15
  br label %99

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.35"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %42 = alloca i8*, align 8
  store %"struct.std::pair.35"* %0, %"struct.std::pair.35"** %40, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %41, align 8
  store i8* %2, i8** %42, align 8
  %43 = load %"struct.std::pair.35"*, %"struct.std::pair.35"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::pair.35", %"struct.std::pair.35"* %43, i32 0, i32 0
  %45 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %41, align 8
  %46 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %45) #3
  %47 = bitcast %"struct.std::_Rb_tree_iterator"* %44 to i8*
  %48 = bitcast %"struct.std::_Rb_tree_iterator"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"struct.std::pair.35", %"struct.std::pair.35"* %43, i32 0, i32 1
  %50 = load i8*, i8** %42, align 8
  %51 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %50) #3
  %52 = load i8, i8* %51, align 1
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i8
  store i8 %54, i8* %49, align 8
  %55 = load i32, i32* @x.661
  %56 = load i32, i32* @y.662
  %57 = add i32 %55, 1911279638
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1911279638
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1253318899, i32 254828060
  store i32 %81, i32* %15
  br label %99

; <label>:82:                                     ; preds = %16
  ret void

; <label>:83:                                     ; preds = %16
  %84 = alloca %"struct.std::pair.35"*, align 8
  %85 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %86 = alloca i8*, align 8
  store %"struct.std::pair.35"* %0, %"struct.std::pair.35"** %84, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %85, align 8
  store i8* %2, i8** %86, align 8
  %87 = load %"struct.std::pair.35"*, %"struct.std::pair.35"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::pair.35", %"struct.std::pair.35"* %87, i32 0, i32 0
  %89 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %85, align 8
  %90 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %89) #3
  %91 = bitcast %"struct.std::_Rb_tree_iterator"* %88 to i8*
  %92 = bitcast %"struct.std::_Rb_tree_iterator"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 8, i1 false)
  %93 = getelementptr inbounds %"struct.std::pair.35", %"struct.std::pair.35"* %87, i32 0, i32 1
  %94 = load i8*, i8** %86, align 8
  %95 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %94) #3
  %96 = load i8, i8* %95, align 1
  %97 = trunc i8 %96 to i1
  %98 = zext i1 %97 to i8
  store i8 %98, i8* %93, align 8
  store i32 -1327949405, i32* %15
  br label %99

; <label>:99:                                     ; preds = %83, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.665
  %6 = load i32, i32* @y.666
  %7 = add i32 %5, 997904729
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 997904729
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1762088177, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1762088177, label %19
    i32 709505764, label %39
    i32 -184353392, label %72
    i32 -485817367, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 709505764, i32 -485817367
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %44, %"struct.std::_Rb_tree_node"** %2
  %45 = load i32, i32* @x.665
  %46 = load i32, i32* @y.666
  %47 = add i32 %45, -1579397756
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1579397756
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -184353392, i32 -485817367
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %75, align 8
  %76 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %75, align 8
  %77 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %77, i32 0, i32 1
  %79 = bitcast %"struct.std::_Rb_tree_node_base"* %78 to %"struct.std::_Rb_tree_node"*
  store i32 709505764, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.18"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"struct.std::less.18"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::less.18"* %0, %"struct.std::less.18"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::less.18"*, %"struct.std::less.18"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  ret i1 %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #2 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.669
  %6 = load i32, i32* @y.670
  %7 = add i32 %5, -1761285435
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1761285435
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1299097195, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1299097195, label %19
    i32 -157787505, label %27
    i32 -194201818, label %59
    i32 1572063424, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -157787505, i32 1572063424
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %29 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8
  %31 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %30)
  %32 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %29, i64* dereferenceable(8) %31)
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.669
  %34 = load i32, i32* @y.670
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -194201818, i32 1572063424
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %63 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %62, align 8
  %64 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %62, align 8
  %65 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %64)
  %66 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %63, i64* dereferenceable(8) %65)
  store i32 -157787505, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.673
  %6 = load i32, i32* @y.674
  %7 = add i32 %5, 1261651662
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1261651662
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1045817252, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1045817252, label %19
    i32 -69435916, label %27
    i32 1093034904, label %51
    i32 -553018456, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -69435916, i32 -553018456
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %29 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %29, align 8
  %30 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %29, align 8
  %31 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %32, i32 0, i32 2
  %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %33, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %28, %"struct.std::_Rb_tree_node_base"* %34) #3
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %28, i32 0, i32 0
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %2
  %37 = load i32, i32* @x.673
  %38 = load i32, i32* @y.674
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1093034904, i32 -553018456
  store i32 %50, i32* %15
  br label %63

; <label>:51:                                     ; preds = %16
  %52 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %55 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %55, align 8
  %56 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %55, align 8
  %57 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %57, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %58, i32 0, i32 2
  %60 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %59, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %54, %"struct.std::_Rb_tree_node_base"* %60) #3
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %54, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  store i32 -69435916, i32* %15
  br label %63

; <label>:63:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.37"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.675
  %7 = load i32, i32* @y.676
  %8 = sub i32 %6, 1645679909
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1645679909
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1251208939, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %86
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1251208939, label %20
    i32 -585378469, label %40
    i32 672991351, label %70
    i32 -2054326287, label %71
  ]

; <label>:19:                                     ; preds = %17
  br label %86

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -585378469, i32 -2054326287
  store i32 %39, i32* %16
  br label %86

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.37"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %43 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.37"* %0, %"struct.std::pair.37"** %41, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %42, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %43, align 8
  %44 = load %"struct.std::pair.37"*, %"struct.std::pair.37"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %46) #3
  %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node"* %48 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %50 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %44, i32 0, i32 1
  %51 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %43, align 8
  %52 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %51) #3
  %53 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %52, align 8
  %54 = bitcast %"struct.std::_Rb_tree_node"* %53 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %54, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %55 = load i32, i32* @x.675
  %56 = load i32, i32* @y.676
  %57 = sub i32 %55, -1903909570
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -1903909570
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 672991351, i32 -2054326287
  store i32 %69, i32* %16
  br label %86

; <label>:70:                                     ; preds = %17
  ret void

; <label>:71:                                     ; preds = %17
  %72 = alloca %"struct.std::pair.37"*, align 8
  %73 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %74 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.37"* %0, %"struct.std::pair.37"** %72, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %73, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %74, align 8
  %75 = load %"struct.std::pair.37"*, %"struct.std::pair.37"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %75, i32 0, i32 0
  %77 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %73, align 8
  %78 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %77) #3
  %79 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %78, align 8
  %80 = bitcast %"struct.std::_Rb_tree_node"* %79 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %80, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %81 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %75, i32 0, i32 1
  %82 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %74, align 8
  %83 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %82) #3
  %84 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %83, align 8
  %85 = bitcast %"struct.std::_Rb_tree_node"* %84 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %85, %"struct.std::_Rb_tree_node_base"** %81, align 8
  store i32 -585378469, i32* %16
  br label %86

; <label>:86:                                     ; preds = %71, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #14
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #2 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.679
  %6 = load i32, i32* @y.680
  %7 = sub i32 %5, -823387959
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -823387959
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 429543276, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 429543276, label %19
    i32 -166776829, label %27
    i32 -669685563, label %60
    i32 -1018913424, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -166776829, i32 -1018913424
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %29 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %31 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %30)
  %32 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %29, i64* dereferenceable(8) %31)
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.679
  %34 = load i32, i32* @y.680
  %35 = add i32 %33, -363783066
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -363783066
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -669685563, i32 -1018913424
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64*, i64** %2
  ret i64* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %64 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %66 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %65)
  %67 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %64, i64* dereferenceable(8) %66)
  store i32 -166776829, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.37"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::pair.37"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.37"* %0, %"struct.std::pair.37"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.37"*, %"struct.std::pair.37"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #2 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.683
  %6 = load i32, i32* @y.684
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1888850805, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1888850805, label %18
    i32 -1956915614, label %38
    i32 -1207844975, label %68
    i32 959208692, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1956915614, i32 959208692
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %39, align 8
  %40 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %41 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %40)
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.683
  %43 = load i32, i32* @y.684
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1207844975, i32 959208692
  store i32 %67, i32* %14
  br label %74

; <label>:68:                                     ; preds = %15
  %69 = load volatile i64*, i64** %2
  ret i64* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %71, align 8
  %72 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %71, align 8
  %73 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %72)
  store i32 -1956915614, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.685
  %6 = load i32, i32* @y.686
  %7 = add i32 %5, 338805868
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 338805868
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1985545166, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1985545166, label %19
    i32 -629022435, label %27
    i32 865158800, label %47
    i32 1115737826, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -629022435, i32 1115737826
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %29, i32 0, i32 1
  %31 = call i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %30) #3
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.685
  %33 = load i32, i32* @y.686
  %34 = add i32 %32, 1534568546
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1534568546
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 865158800, i32 1115737826
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64*, i64** %2
  ret i64* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %50, align 8
  %51 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %51, i32 0, i32 1
  %53 = call i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %52) #3
  store i32 -629022435, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #0 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #0 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [8 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #0 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #0 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, i64* dereferenceable(8)) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %8) #3
  %10 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"* %7, i64* dereferenceable(8) %9)
  ret %"struct.std::_Rb_tree_node"* %10
}

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #12

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #2 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %7 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree"* %6)
  store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %9) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %8, i64* dereferenceable(8) %10)
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  ret %"struct.std::_Rb_tree_node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #2 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %11 = bitcast %"struct.std::_Rb_tree_node"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::_Rb_tree_node"*
  %13 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %9) #3
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %15 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %14)
          to label %16 unwind label %20

; <label>:16:                                     ; preds = %3
  %17 = load i64*, i64** %6, align 8
  %18 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %17) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %13, i64* %15, i64* dereferenceable(8) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %16
  br label %34

; <label>:20:                                     ; preds = %16, %3
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %7, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %8, align 4
  br label %24

; <label>:24:                                     ; preds = %20
  %25 = load i8*, i8** %7, align 8
  %26 = call i8* @__cxa_begin_catch(i8* %25) #3
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %9, %"struct.std::_Rb_tree_node"* %28) #3
  invoke void @__cxa_rethrow() #13
          to label %83 unwind label %29

; <label>:29:                                     ; preds = %24
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %7, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %8, align 4
  invoke void @__cxa_end_catch()
          to label %33 unwind label %80

; <label>:33:                                     ; preds = %29
  br label %35

; <label>:34:                                     ; preds = %19
  ret void

; <label>:35:                                     ; preds = %33
  %36 = load i32, i32* @x.703
  %37 = load i32, i32* @y.704
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %84

; <label>:61:                                     ; preds = %35, %84
  %62 = load i8*, i8** %7, align 8
  %63 = load i32, i32* %8, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  %66 = load i32, i32* @x.703
  %67 = load i32, i32* @y.704
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %84

; <label>:79:                                     ; preds = %61
  resume { i8*, i32 } %65

; <label>:80:                                     ; preds = %29
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #7
  unreachable

; <label>:83:                                     ; preds = %24
  unreachable

; <label>:84:                                     ; preds = %61, %35
  %85 = load i8*, i8** %7, align 8
  %86 = load i32, i32* %8, align 4
  %87 = insertvalue { i8*, i32 } undef, i8* %85, 0
  %88 = insertvalue { i8*, i32 } %87, i32 %86, 1
  br label %61
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.705
  %7 = load i32, i32* @y.706
  %8 = add i32 %6, 409249233
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 409249233
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1866510376, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1866510376, label %20
    i32 285364167, label %40
    i32 1848500697, label %62
    i32 -1434916546, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 285364167, i32 -1434916546
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.15"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %41, align 8
  %44 = bitcast %"class.std::allocator.15"* %43 to %"class.__gnu_cxx::new_allocator.16"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %44, i64 %45, i8* null)
  store %"struct.std::_Rb_tree_node"* %46, %"struct.std::_Rb_tree_node"** %3
  %47 = load i32, i32* @x.705
  %48 = load i32, i32* @y.706
  %49 = add i32 %47, -376967851
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -376967851
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1848500697, i32 -1434916546
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  ret %"struct.std::_Rb_tree_node"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.15"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %65, align 8
  %68 = bitcast %"class.std::allocator.15"* %67 to %"class.__gnu_cxx::new_allocator.16"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %68, i64 %69, i8* null)
  store i32 285364167, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.707
  %9 = load i32, i32* @y.708
  %10 = sub i32 %8, -620187505
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -620187505
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1572487721, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1572487721, label %22
    i32 -1299958954, label %42
    i32 872499918, label %79
    i32 308912088, label %82
    i32 313762600, label %83
    i32 1637586280, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1299958954, i32 1637586280
  store i32 %41, i32* %18
  br label %97

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.707
  %53 = load i32, i32* @y.708
  %54 = add i32 %52, -1803696490
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1803696490
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 872499918, i32 1637586280
  store i32 %78, i32* %18
  br label %97

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 308912088, i32 313762600
  store i32 %81, i32* %18
  br label %97

; <label>:82:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:83:                                     ; preds = %19
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = mul i64 %85, 40
  %87 = call i8* @_Znwm(i64 %86)
  %88 = bitcast i8* %87 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %88

; <label>:89:                                     ; preds = %19
  %90 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %91 = alloca i64, align 8
  %92 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %90, align 8
  store i64 %1, i64* %91, align 8
  store i8* %2, i8** %92, align 8
  %93 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %90, align 8
  %94 = load i64, i64* %91, align 8
  %95 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %93) #3
  %96 = icmp ugt i64 %94, %95
  store i32 -1299958954, i32* %18
  br label %97

; <label>:97:                                     ; preds = %89, %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 461168601842738790
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1), i64*, i64* dereferenceable(8)) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"*, i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #0 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.717
  %6 = load i32, i32* @y.718
  %7 = add i32 %5, 684652516
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 684652516
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2058639712, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2058639712, label %19
    i32 -1203838227, label %39
    i32 998384544, label %68
    i32 119480854, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1203838227, i32 119480854
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca i8*, align 8
  store i8* %0, i8** %40, align 8
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %2
  %42 = load i32, i32* @x.717
  %43 = load i32, i32* @y.718
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 998384544, i32 119480854
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile i8*, i8** %2
  ret i8* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca i8*, align 8
  store i8* %0, i8** %71, align 8
  %72 = load i8*, i8** %71, align 8
  store i32 -1203838227, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #0 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1)) #0 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseI3q_tSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI3q_tSaIS0_EE18_M_fill_initializeEmRKS0_(%"class.std::vector"*, i64, %struct.q_t* dereferenceable(40)) #2 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.q_t*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.q_t*, %struct.q_t** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %struct.q_t*, %struct.q_t** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3q_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call %struct.q_t* @_ZSt24__uninitialized_fill_n_aIP3q_tmS0_S0_ET_S2_T0_RKT1_RSaIT2_E(%struct.q_t* %11, i64 %12, %struct.q_t* dereferenceable(40) %13, %"class.std::allocator"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %18, i32 0, i32 1
  store %struct.q_t* %16, %struct.q_t** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.729
  %6 = load i32, i32* @y.730
  %7 = sub i32 %5, -403147415
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -403147415
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1117586747, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1117586747, label %19
    i32 1090701004, label %39
    i32 -2118271169, label %62
    i32 -1278294623, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1090701004, i32 -1278294623
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %40, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %41, align 8
  %42 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %42 to %"class.std::allocator"*
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  call void @_ZNSaI3q_tEC2ERKS0_(%"class.std::allocator"* %43, %"class.std::allocator"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %42, i32 0, i32 0
  store %struct.q_t* null, %struct.q_t** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %42, i32 0, i32 1
  store %struct.q_t* null, %struct.q_t** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %42, i32 0, i32 2
  store %struct.q_t* null, %struct.q_t** %47, align 8
  %48 = load i32, i32* @x.729
  %49 = load i32, i32* @y.730
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -2118271169, i32 -1278294623
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %64, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %65, align 8
  %66 = load %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"*, %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %66 to %"class.std::allocator"*
  %68 = load %"class.std::allocator"*, %"class.std::allocator"** %65, align 8
  call void @_ZNSaI3q_tEC2ERKS0_(%"class.std::allocator"* %67, %"class.std::allocator"* dereferenceable(1) %68) #3
  %69 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %66, i32 0, i32 0
  store %struct.q_t* null, %struct.q_t** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %66, i32 0, i32 1
  store %struct.q_t* null, %struct.q_t** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %66, i32 0, i32 2
  store %struct.q_t* null, %struct.q_t** %71, align 8
  store i32 1090701004, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3q_tSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %struct.q_t* @_ZNSt12_Vector_baseI3q_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %8, i32 0, i32 0
  store %struct.q_t* %7, %struct.q_t** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %struct.q_t*, %struct.q_t** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %13, i32 0, i32 1
  store %struct.q_t* %12, %struct.q_t** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %struct.q_t*, %struct.q_t** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %struct.q_t, %struct.q_t* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl", %"struct.std::_Vector_base<q_t, std::allocator<q_t> >::_Vector_impl"* %20, i32 0, i32 2
  store %struct.q_t* %19, %struct.q_t** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt24__uninitialized_fill_n_aIP3q_tmS0_S0_ET_S2_T0_RKT1_RSaIT2_E(%struct.q_t*, i64, %struct.q_t* dereferenceable(40), %"class.std::allocator"* dereferenceable(1)) #2 comdat {
  %5 = alloca %struct.q_t*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %struct.q_t* %0, %struct.q_t** %5, align 8
  store i64 %1, i64* %6, align 8
  store %struct.q_t* %2, %struct.q_t** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %struct.q_t*, %struct.q_t** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %struct.q_t*, %struct.q_t** %7, align 8
  %12 = call %struct.q_t* @_ZSt20uninitialized_fill_nIP3q_tmS0_ET_S2_T0_RKT1_(%struct.q_t* %9, i64 %10, %struct.q_t* dereferenceable(40) %11)
  ret %struct.q_t* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZSt20uninitialized_fill_nIP3q_tmS0_ET_S2_T0_RKT1_(%struct.q_t*, i64, %struct.q_t* dereferenceable(40)) #2 comdat {
  %4 = alloca %struct.q_t*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca i8, align 1
  store %struct.q_t* %0, %struct.q_t** %4, align 8
  store i64 %1, i64* %5, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.q_t*, %struct.q_t** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %struct.q_t*, %struct.q_t** %6, align 8
  %11 = call %struct.q_t* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP3q_tmS2_EET_S4_T0_RKT1_(%struct.q_t* %8, i64 %9, %struct.q_t* dereferenceable(40) %10)
  ret %struct.q_t* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.q_t* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP3q_tmS2_EET_S4_T0_RKT1_(%struct.q_t*, i64, %struct.q_t* dereferenceable(40)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.q_t*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.q_t*, align 8
  %7 = alloca %struct.q_t*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %struct.q_t* %0, %struct.q_t** %4, align 8
  store i64 %1, i64* %5, align 8
  store %struct.q_t* %2, %struct.q_t** %6, align 8
  %10 = load %struct.q_t*, %struct.q_t** %4, align 8
  store %struct.q_t* %10, %struct.q_t** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %60, %3
  %12 = load i32, i32* @x.737
  %13 = load i32, i32* @y.738
  %14 = add i32 %12, -990195940
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, -990195940
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %234

; <label>:38:                                     ; preds = %11, %234
  %39 = load i64, i64* %5, align 8
  %40 = icmp ugt i64 %39, 0
  %41 = load i32, i32* @x.737
  %42 = load i32, i32* @y.738
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %234

; <label>:54:                                     ; preds = %38
  br i1 %40, label %55, label %147

; <label>:55:                                     ; preds = %54
  %56 = load %struct.q_t*, %struct.q_t** %7, align 8
  %57 = call %struct.q_t* @_ZSt11__addressofI3q_tEPT_RS1_(%struct.q_t* dereferenceable(40) %56) #3
  %58 = load %struct.q_t*, %struct.q_t** %6, align 8
  invoke void @_ZSt10_ConstructI3q_tJRKS0_EEvPT_DpOT0_(%struct.q_t* %57, %struct.q_t* dereferenceable(40) %58)
          to label %59 unwind label %67

; <label>:59:                                     ; preds = %55
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i64, i64* %5, align 8
  %62 = sub i64 0, -1
  %63 = sub i64 %61, %62
  %64 = add i64 %61, -1
  store i64 %63, i64* %5, align 8
  %65 = load %struct.q_t*, %struct.q_t** %7, align 8
  %66 = getelementptr inbounds %struct.q_t, %struct.q_t* %65, i32 1
  store %struct.q_t* %66, %struct.q_t** %7, align 8
  br label %11

; <label>:67:                                     ; preds = %55
  %68 = load i32, i32* @x.737
  %69 = load i32, i32* @y.738
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %237

; <label>:81:                                     ; preds = %67, %237
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  %85 = load i32, i32* @x.737
  %86 = load i32, i32* @y.738
  %87 = add i32 %85, -1724670077
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, -1724670077
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %237

; <label>:111:                                    ; preds = %81
  br label %112

; <label>:112:                                    ; preds = %111
  %113 = load i32, i32* @x.737
  %114 = load i32, i32* @y.738
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  br i1 %124, label %126, label %241

; <label>:126:                                    ; preds = %112, %241
  %127 = load i8*, i8** %8, align 8
  %128 = call i8* @__cxa_begin_catch(i8* %127) #3
  %129 = load %struct.q_t*, %struct.q_t** %4, align 8
  %130 = load %struct.q_t*, %struct.q_t** %7, align 8
  %131 = load i32, i32* @x.737
  %132 = load i32, i32* @y.738
  %133 = sub i32 %131, 1919667996
  %134 = sub i32 %133, 1
  %135 = add i32 %134, 1919667996
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %241

; <label>:145:                                    ; preds = %126
  invoke void @_ZSt8_DestroyIP3q_tEvT_S2_(%struct.q_t* %129, %struct.q_t* %130)
          to label %146 unwind label %149

; <label>:146:                                    ; preds = %145
  invoke void @__cxa_rethrow() #13
          to label %205 unwind label %149

; <label>:147:                                    ; preds = %54
  %148 = load %struct.q_t*, %struct.q_t** %7, align 8
  ret %struct.q_t* %148

; <label>:149:                                    ; preds = %146, %145
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %8, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %153 unwind label %202

; <label>:153:                                    ; preds = %149
  %154 = load i32, i32* @x.737
  %155 = load i32, i32* @y.738
  %156 = sub i32 %154, -685480029
  %157 = sub i32 %156, 1
  %158 = add i32 %157, -685480029
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  br i1 %178, label %180, label %246

; <label>:180:                                    ; preds = %153, %246
  %181 = load i32, i32* @x.737
  %182 = load i32, i32* @y.738
  %183 = add i32 %181, -1719451199
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -1719451199
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  br i1 %193, label %195, label %246

; <label>:195:                                    ; preds = %180
  br label %197
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:197:                                    ; preds = %195
  %198 = load i8*, i8** %8, align 8
  %199 = load i32, i32* %9, align 4
  %200 = insertvalue { i8*, i32 } undef, i8* %198, 0
  %201 = insertvalue { i8*, i32 } %200, i32 %199, 1
  resume { i8*, i32 } %201

; <label>:202:                                    ; preds = %149
  %203 = landingpad { i8*, i32 }
          catch i8* null
  %204 = extractvalue { i8*, i32 } %203, 0
  call void @__clang_call_terminate(i8* %204) #7
  unreachable

; <label>:205:                                    ; preds = %146
  %206 = load i32, i32* @x.737
  %207 = load i32, i32* @y.738
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %247

; <label>:219:                                    ; preds = %205, %247
  %220 = load i32, i32* @x.737
  %221 = load i32, i32* @y.738
  %222 = sub i32 0, 1
  %223 = add i32 %220, %222
  %224 = sub i32 %220, 1
  %225 = mul i32 %220, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %221, 10
  %229 = and i1 %227, %228
  %230 = xor i1 %227, %228
  %231 = or i1 %229, %230
  %232 = or i1 %227, %228
  br i1 %231, label %233, label %247

; <label>:233:                                    ; preds = %219
  unreachable

; <label>:234:                                    ; preds = %38, %11
  %235 = load i64, i64* %5, align 8
  %236 = icmp ugt i64 %235, 0
  br label %38

; <label>:237:                                    ; preds = %81, %67
  %238 = landingpad { i8*, i32 }
          catch i8* null
  %239 = extractvalue { i8*, i32 } %238, 0
  store i8* %239, i8** %8, align 8
  %240 = extractvalue { i8*, i32 } %238, 1
  store i32 %240, i32* %9, align 4
  br label %81

; <label>:241:                                    ; preds = %126, %112
  %242 = load i8*, i8** %8, align 8
  %243 = call i8* @__cxa_begin_catch(i8* %242) #3
  %244 = load %struct.q_t*, %struct.q_t** %4, align 8
  %245 = load %struct.q_t*, %struct.q_t** %7, align 8
  br label %126

; <label>:246:                                    ; preds = %180, %153
  br label %180

; <label>:247:                                    ; preds = %219, %205
  br label %219
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.739
  %5 = load i32, i32* @y.740
  %6 = add i32 %4, 809337842
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 809337842
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1080197073, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1080197073, label %18
    i32 -1509463637, label %38
    i32 -916539753, label %68
    i32 -1924265928, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1509463637, i32 -1924265928
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %41 = load i32, i32* @x.739
  %42 = load i32, i32* @y.740
  %43 = add i32 %41, 1099034669
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1099034669
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -916539753, i32 -1924265928
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %70, align 8
  store i32 -1509463637, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.741
  %5 = load i32, i32* @y.742
  %6 = sub i32 %4, 412632979
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 412632979
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1159534347, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1159534347, label %18
    i32 239539328, label %38
    i32 -871380955, label %67
    i32 539306643, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 239539328, i32 539306643
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %41 = load i32, i32* @x.741
  %42 = load i32, i32* @y.742
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -871380955, i32 539306643
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %69, align 8
  store i32 239539328, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %67

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.743
  %15 = load i32, i32* @y.744
  %16 = add i32 %14, -408671021
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -408671021
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %76

; <label>:40:                                     ; preds = %13, %76
  %41 = load i32, i32* @x.743
  %42 = load i32, i32* @y.744
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %76

; <label>:66:                                     ; preds = %40
  ret void

; <label>:67:                                     ; preds = %3
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %7, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %10) #3
  br label %71

; <label>:71:                                     ; preds = %67
  %72 = load i8*, i8** %7, align 8
  %73 = load i32, i32* %8, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  resume { i8*, i32 } %75

; <label>:76:                                     ; preds = %40, %13
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I6edge_tSaIS0_EESaIS2_EE21_M_default_initializeEm(%"class.std::vector.0"*, i64) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.745
  %6 = load i32, i32* @y.746
  %7 = add i32 %5, 785066721
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 785066721
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1955372124, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1955372124, label %19
    i32 -217068485, label %27
    i32 -760860488, label %68
    i32 -1578347438, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -217068485, i32 -1578347438
  store i32 %26, i32* %15
  br label %84

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %37 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %36) #3
  %38 = call %"class.std::vector.5"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI6edge_tSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.5"* %34, i64 %35, %"class.std::allocator.2"* dereferenceable(1) %37)
  %39 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %40, i32 0, i32 1
  store %"class.std::vector.5"* %38, %"class.std::vector.5"** %41, align 8
  %42 = load i32, i32* @x.745
  %43 = load i32, i32* @y.746
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -760860488, i32 -1578347438
  store i32 %67, i32* %15
  br label %84

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"class.std::vector.0"*, align 8
  %71 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %70, align 8
  store i64 %1, i64* %71, align 8
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %70, align 8
  %73 = bitcast %"class.std::vector.0"* %72 to %"struct.std::_Vector_base.1"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %74, i32 0, i32 0
  %76 = load %"class.std::vector.5"*, %"class.std::vector.5"** %75, align 8
  %77 = load i64, i64* %71, align 8
  %78 = bitcast %"class.std::vector.0"* %72 to %"struct.std::_Vector_base.1"*
  %79 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %78) #3
  %80 = call %"class.std::vector.5"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI6edge_tSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.5"* %76, i64 %77, %"class.std::allocator.2"* dereferenceable(1) %79)
  %81 = bitcast %"class.std::vector.0"* %72 to %"struct.std::_Vector_base.1"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %82, i32 0, i32 1
  store %"class.std::vector.5"* %80, %"class.std::vector.5"** %83, align 8
  store i32 -217068485, i32* %15
  br label %84

; <label>:84:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %13, align 8
  %15 = ptrtoint %"class.std::vector.5"* %11 to i64
  %16 = ptrtoint %"class.std::vector.5"* %14 to i64
  %17 = add i64 %15, 3789001484584707162
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 3789001484584707162
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.1"* %5, %"class.std::vector.5"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.747
  %31 = load i32, i32* @y.748
  %32 = add i32 %30, -568908269
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -568908269
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %73

; <label>:56:                                     ; preds = %29, %73
  %57 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %57) #7
  %58 = load i32, i32* @x.747
  %59 = load i32, i32* @y.748
  %60 = sub i32 %58, 995035875
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 995035875
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %73

; <label>:72:                                     ; preds = %56
  unreachable

; <label>:73:                                     ; preds = %56, %29
  %74 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %74) #7
  br label %56
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaISt6vectorI6edge_tSaIS0_EEEC2ERKS3_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #2 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.751
  %6 = load i32, i32* @y.752
  %7 = add i32 %5, -659547143
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -659547143
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1252433051, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1252433051, label %19
    i32 1956444543, label %27
    i32 -920662050, label %61
    i32 1105423990, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1956444543, i32 1105423990
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %33, i32 0, i32 0
  store %"class.std::vector.5"* %32, %"class.std::vector.5"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::vector.5"*, %"class.std::vector.5"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %38, i32 0, i32 1
  store %"class.std::vector.5"* %37, %"class.std::vector.5"** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"class.std::vector.5"*, %"class.std::vector.5"** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %45, i32 0, i32 2
  store %"class.std::vector.5"* %44, %"class.std::vector.5"** %46, align 8
  %47 = load i32, i32* @x.751
  %48 = load i32, i32* @y.752
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -920662050, i32 1105423990
  store i32 %60, i32* %15
  br label %82

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Vector_base.1"*, align 8
  %64 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %63, align 8
  %66 = load i64, i64* %64, align 8
  %67 = call %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %65, i64 %66)
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %68, i32 0, i32 0
  store %"class.std::vector.5"* %67, %"class.std::vector.5"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"class.std::vector.5"*, %"class.std::vector.5"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %73, i32 0, i32 1
  store %"class.std::vector.5"* %72, %"class.std::vector.5"** %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load %"class.std::vector.5"*, %"class.std::vector.5"** %76, align 8
  %78 = load i64, i64* %64, align 8
  %79 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %77, i64 %78
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %80, i32 0, i32 2
  store %"class.std::vector.5"* %79, %"class.std::vector.5"** %81, align 8
  store i32 1956444543, i32* %15
  br label %82

; <label>:82:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt6vectorI6edge_tSaIS0_EEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI6edge_tSaIS0_EEEC2ERKS3_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.755
  %6 = load i32, i32* @y.756
  %7 = add i32 %5, -1236135377
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1236135377
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1504337938, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1504337938, label %19
    i32 990118790, label %27
    i32 1156119888, label %60
    i32 1265325030, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 990118790, i32 1265325030
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  %29 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %28, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %29, align 8
  %30 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  %31 = bitcast %"class.std::allocator.2"* %30 to %"class.__gnu_cxx::new_allocator.3"*
  %32 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  %33 = bitcast %"class.std::allocator.2"* %32 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2ERKS5_(%"class.__gnu_cxx::new_allocator.3"* %31, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.755
  %35 = load i32, i32* @y.756
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1156119888, i32 1265325030
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.2"*, align 8
  %63 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %62, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %63, align 8
  %64 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %62, align 8
  %65 = bitcast %"class.std::allocator.2"* %64 to %"class.__gnu_cxx::new_allocator.3"*
  %66 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %63, align 8
  %67 = bitcast %"class.std::allocator.2"* %66 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2ERKS5_(%"class.__gnu_cxx::new_allocator.3"* %65, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %67) #3
  store i32 990118790, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEEC2ERKS5_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.759
  %10 = load i32, i32* @y.760
  %11 = sub i32 %9, -988491164
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -988491164
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 226967692, i32* %19
  %20 = alloca %"class.std::vector.5"*
  br label %21

; <label>:21:                                     ; preds = %2, %114
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 226967692, label %24
    i32 612004839, label %32
    i32 -1413734735, label %55
    i32 -1231354254, label %58
    i32 423578328, label %74
    i32 1253612148, label %96
    i32 -1423231825, label %98
    i32 21097453, label %99
    i32 -2075830859, label %101
    i32 804489787, label %107
  ]

; <label>:23:                                     ; preds = %21
  br label %114

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 612004839, i32 -2075830859
  store i32 %31, i32* %19
  br label %114

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.1"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %33, align 8
  store %"struct.std::_Vector_base.1"* %36, %"struct.std::_Vector_base.1"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.759
  %41 = load i32, i32* @y.760
  %42 = add i32 %40, 1061781086
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1061781086
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1413734735, i32 -2075830859
  store i32 %54, i32* %19
  br label %114

; <label>:55:                                     ; preds = %21
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 -1231354254, i32 -1423231825
  store i32 %57, i32* %19
  br label %114

; <label>:58:                                     ; preds = %21
  %59 = load i32, i32* @x.759
  %60 = load i32, i32* @y.760
  %61 = add i32 %59, 1582416894
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 1582416894
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 423578328, i32 804489787
  store i32 %73, i32* %19
  br label %114

; <label>:74:                                     ; preds = %21
  %75 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %76 to %"class.std::allocator.2"*
  %78 = load volatile i64*, i64** %6
  %79 = load i64, i64* %78, align 8
  %80 = call %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorI6edge_tSaIS1_EEEE8allocateERS4_m(%"class.std::allocator.2"* dereferenceable(1) %77, i64 %79)
  store %"class.std::vector.5"* %80, %"class.std::vector.5"** %3
  %81 = load i32, i32* @x.759
  %82 = load i32, i32* @y.760
  %83 = sub i32 %81, -892647132
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -892647132
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 1253612148, i32 804489787
  store i32 %95, i32* %19
  br label %114

; <label>:96:                                     ; preds = %21
  store i32 21097453, i32* %19
  %97 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %3
  store %"class.std::vector.5"* %97, %"class.std::vector.5"** %20
  br label %114

; <label>:98:                                     ; preds = %21
  store i32 21097453, i32* %19
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %20
  br label %114

; <label>:99:                                     ; preds = %21
  %100 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20
  ret %"class.std::vector.5"* %100

; <label>:101:                                    ; preds = %21
  %102 = alloca %"struct.std::_Vector_base.1"*, align 8
  %103 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %102, align 8
  store i64 %1, i64* %103, align 8
  %104 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %102, align 8
  %105 = load i64, i64* %103, align 8
  %106 = icmp ne i64 %105, 0
  store i32 612004839, i32* %19
  br label %114

; <label>:107:                                    ; preds = %21
  %108 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %109 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %108, i32 0, i32 0
  %110 = bitcast %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %109 to %"class.std::allocator.2"*
  %111 = load volatile i64*, i64** %6
  %112 = load i64, i64* %111, align 8
  %113 = call %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorI6edge_tSaIS1_EEEE8allocateERS4_m(%"class.std::allocator.2"* dereferenceable(1) %110, i64 %112)
  store i32 423578328, i32* %19
  br label %114

; <label>:114:                                    ; preds = %107, %101, %98, %96, %74, %58, %55, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorI6edge_tSaIS1_EEEE8allocateERS4_m(%"class.std::allocator.2"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.761
  %7 = load i32, i32* @y.762
  %8 = add i32 %6, -453321913
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -453321913
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 45001837, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 45001837, label %20
    i32 566887715, label %40
    i32 -1003769898, label %74
    i32 1445392980, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 566887715, i32 1445392980
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.2"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  %44 = bitcast %"class.std::allocator.2"* %43 to %"class.__gnu_cxx::new_allocator.3"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.5"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %44, i64 %45, i8* null)
  store %"class.std::vector.5"* %46, %"class.std::vector.5"** %3
  %47 = load i32, i32* @x.761
  %48 = load i32, i32* @y.762
  %49 = add i32 %47, 153592221
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 153592221
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1003769898, i32 1445392980
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %3
  ret %"class.std::vector.5"* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.2"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %77, align 8
  %80 = bitcast %"class.std::allocator.2"* %79 to %"class.__gnu_cxx::new_allocator.3"*
  %81 = load i64, i64* %78, align 8
  %82 = call %"class.std::vector.5"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %80, i64 %81, i8* null)
  store i32 566887715, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -103403912, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -103403912, label %16
    i32 776465778, label %21
    i32 -63914546, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 776465778, i32 -63914546
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.5"*
  ret %"class.std::vector.5"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI6edge_tSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.5"*, i64, %"class.std::allocator.2"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.5"* @_ZSt25__uninitialized_default_nIPSt6vectorI6edge_tSaIS1_EEmET_S5_T0_(%"class.std::vector.5"* %7, i64 %8)
  ret %"class.std::vector.5"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt25__uninitialized_default_nIPSt6vectorI6edge_tSaIS1_EEmET_S5_T0_(%"class.std::vector.5"*, i64) #2 comdat {
  %3 = alloca %"class.std::vector.5"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.771
  %7 = load i32, i32* @y.772
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 319606143, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 319606143, label %19
    i32 1335811789, label %39
    i32 -942901002, label %61
    i32 1388995385, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1335811789, i32 1388995385
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.5"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.5"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI6edge_tSaIS3_EEmEET_S7_T0_(%"class.std::vector.5"* %43, i64 %44)
  store %"class.std::vector.5"* %45, %"class.std::vector.5"** %3
  %46 = load i32, i32* @x.771
  %47 = load i32, i32* @y.772
  %48 = sub i32 %46, 244350853
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 244350853
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -942901002, i32 1388995385
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %3
  ret %"class.std::vector.5"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::vector.5"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i8, align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %64, align 8
  store i64 %1, i64* %65, align 8
  store i8 1, i8* %66, align 1
  %67 = load %"class.std::vector.5"*, %"class.std::vector.5"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.5"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI6edge_tSaIS3_EEmEET_S7_T0_(%"class.std::vector.5"* %67, i64 %68)
  store i32 1335811789, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI6edge_tSaIS3_EEmEET_S7_T0_(%"class.std::vector.5"*, i64) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %45, %2
  %10 = load i32, i32* @x.773
  %11 = load i32, i32* @y.774
  %12 = sub i32 %10, 477369430
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 477369430
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %299

; <label>:24:                                     ; preds = %9, %299
  %25 = load i64, i64* %4, align 8
  %26 = icmp ugt i64 %25, 0
  %27 = load i32, i32* @x.773
  %28 = load i32, i32* @y.774
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %299

; <label>:40:                                     ; preds = %24
  br i1 %26, label %41, label %92

; <label>:41:                                     ; preds = %40
  %42 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %43 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorI6edge_tSaIS1_EEEPT_RS4_(%"class.std::vector.5"* dereferenceable(24) %42) #3
  invoke void @_ZSt10_ConstructISt6vectorI6edge_tSaIS1_EEJEEvPT_DpOT0_(%"class.std::vector.5"* %43)
          to label %44 unwind label %52

; <label>:44:                                     ; preds = %41
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i64, i64* %4, align 8
  %47 = sub i64 0, -1
  %48 = sub i64 %46, %47
  %49 = add i64 %46, -1
  store i64 %48, i64* %4, align 8
  %50 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %51 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %50, i32 1
  store %"class.std::vector.5"* %51, %"class.std::vector.5"** %5, align 8
  br label %9

; <label>:52:                                     ; preds = %41
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %6, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %7, align 4
  br label %56

; <label>:56:                                     ; preds = %52
  %57 = load i8*, i8** %6, align 8
  %58 = call i8* @__cxa_begin_catch(i8* %57) #3
  %59 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %60 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorI6edge_tSaIS1_EEEvT_S5_(%"class.std::vector.5"* %59, %"class.std::vector.5"* %60)
          to label %61 unwind label %94

; <label>:61:                                     ; preds = %56
  %62 = load i32, i32* @x.773
  %63 = load i32, i32* @y.774
  %64 = sub i32 %62, 1931974677
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 1931974677
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %302

; <label>:76:                                     ; preds = %61, %302
  %77 = load i32, i32* @x.773
  %78 = load i32, i32* @y.774
  %79 = sub i32 %77, 378104410
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 378104410
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %302

; <label>:91:                                     ; preds = %76
  invoke void @__cxa_rethrow() #13
          to label %256 unwind label %94

; <label>:92:                                     ; preds = %40
  %93 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  ret %"class.std::vector.5"* %93

; <label>:94:                                     ; preds = %91, %56
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %6, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %98 unwind label %213

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* @x.773
  %100 = load i32, i32* @y.774
  %101 = add i32 %99, -685010724
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -685010724
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %303

; <label>:125:                                    ; preds = %98, %303
  %126 = load i32, i32* @x.773
  %127 = load i32, i32* @y.774
  %128 = add i32 %126, -2136734287
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -2136734287
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %303

; <label>:152:                                    ; preds = %125
  br label %208
                                                  ; No predecessors!
  %154 = load i32, i32* @x.773
  %155 = load i32, i32* @y.774
  %156 = add i32 %154, -455542721
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, -455542721
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  br i1 %178, label %180, label %304

; <label>:180:                                    ; preds = %153, %304
  call void @llvm.trap()
  %181 = load i32, i32* @x.773
  %182 = load i32, i32* @y.774
  %183 = add i32 %181, -706754663
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -706754663
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  br i1 %205, label %207, label %304

; <label>:207:                                    ; preds = %180
  unreachable

; <label>:208:                                    ; preds = %152
  %209 = load i8*, i8** %6, align 8
  %210 = load i32, i32* %7, align 4
  %211 = insertvalue { i8*, i32 } undef, i8* %209, 0
  %212 = insertvalue { i8*, i32 } %211, i32 %210, 1
  resume { i8*, i32 } %212

; <label>:213:                                    ; preds = %94
  %214 = load i32, i32* @x.773
  %215 = load i32, i32* @y.774
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  br i1 %225, label %227, label %305

; <label>:227:                                    ; preds = %213, %305
  %228 = landingpad { i8*, i32 }
          catch i8* null
  %229 = extractvalue { i8*, i32 } %228, 0
  call void @__clang_call_terminate(i8* %229) #7
  %230 = load i32, i32* @x.773
  %231 = load i32, i32* @y.774
  %232 = sub i32 0, 1
  %233 = add i32 %230, %232
  %234 = sub i32 %230, 1
  %235 = mul i32 %230, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %231, 10
  %239 = xor i1 %237, true
  %240 = xor i1 %238, true
  %241 = xor i1 true, true
  %242 = and i1 %239, true
  %243 = and i1 %237, %241
  %244 = and i1 %240, true
  %245 = and i1 %238, %241
  %246 = or i1 %242, %243
  %247 = or i1 %244, %245
  %248 = xor i1 %246, %247
  %249 = or i1 %239, %240
  %250 = xor i1 %249, true
  %251 = or i1 true, %241
  %252 = and i1 %250, %251
  %253 = or i1 %248, %252
  %254 = or i1 %237, %238
  br i1 %253, label %255, label %305

; <label>:255:                                    ; preds = %227
  unreachable

; <label>:256:                                    ; preds = %91
  %257 = load i32, i32* @x.773
  %258 = load i32, i32* @y.774
  %259 = add i32 %257, 355902794
  %260 = sub i32 %259, 1
  %261 = sub i32 %260, 355902794
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = and i1 %265, %266
  %268 = xor i1 %265, %266
  %269 = or i1 %267, %268
  %270 = or i1 %265, %266
  br i1 %269, label %271, label %308

; <label>:271:                                    ; preds = %256, %308
  %272 = load i32, i32* @x.773
  %273 = load i32, i32* @y.774
  %274 = add i32 %272, 990356623
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, 990356623
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 true, true
  %285 = and i1 %282, true
  %286 = and i1 %280, %284
  %287 = and i1 %283, true
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 true, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %308

; <label>:298:                                    ; preds = %271
  unreachable

; <label>:299:                                    ; preds = %24, %9
  %300 = load i64, i64* %4, align 8
  %301 = icmp ugt i64 %300, 0
  br label %24

; <label>:302:                                    ; preds = %76, %61
  br label %76

; <label>:303:                                    ; preds = %125, %98
  br label %125

; <label>:304:                                    ; preds = %180, %153
  call void @llvm.trap()
  br label %180

; <label>:305:                                    ; preds = %227, %213
  %306 = landingpad { i8*, i32 }
          catch i8* null
  %307 = extractvalue { i8*, i32 } %306, 0
  call void @__clang_call_terminate(i8* %307) #7
  br label %227

; <label>:308:                                    ; preds = %271, %256
  br label %271
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorI6edge_tSaIS1_EEJEEvPT_DpOT0_(%"class.std::vector.5"*) #0 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.5"*
  call void @_ZNSt6vectorI6edge_tSaIS0_EEC2Ev(%"class.std::vector.5"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt11__addressofISt6vectorI6edge_tSaIS1_EEEPT_RS4_(%"class.std::vector.5"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.777
  %6 = load i32, i32* @y.778
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -236144661, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -236144661, label %18
    i32 -1340480906, label %26
    i32 822678945, label %58
    i32 887492168, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1340480906, i32 887492168
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %27, align 8
  %28 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %29 = bitcast %"class.std::vector.5"* %28 to i8*
  %30 = bitcast i8* %29 to %"class.std::vector.5"*
  store %"class.std::vector.5"* %30, %"class.std::vector.5"** %2
  %31 = load i32, i32* @x.777
  %32 = load i32, i32* @y.778
  %33 = add i32 %31, -1556120572
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1556120572
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 822678945, i32 887492168
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %61, align 8
  %62 = load %"class.std::vector.5"*, %"class.std::vector.5"** %61, align 8
  %63 = bitcast %"class.std::vector.5"* %62 to i8*
  %64 = bitcast i8* %63 to %"class.std::vector.5"*
  store i32 -1340480906, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI6edge_tSaIS1_EEEvT_S5_(%"class.std::vector.5"*, %"class.std::vector.5"*) #2 comdat {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI6edge_tSaIS3_EEEEvT_S7_(%"class.std::vector.5"* %5, %"class.std::vector.5"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI6edge_tSaIS0_EEC2Ev(%"class.std::vector.5"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  invoke void @_ZNSt12_Vector_baseI6edge_tSaIS0_EEC2Ev(%"struct.std::_Vector_base.6"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #7
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EEC2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaI6edge_tEC2Ev(%"class.std::allocator.7"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %3, i32 0, i32 0
  store %struct.edge_t* null, %struct.edge_t** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %3, i32 0, i32 1
  store %struct.edge_t* null, %struct.edge_t** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %3, i32 0, i32 2
  store %struct.edge_t* null, %struct.edge_t** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6edge_tEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI6edge_tSaIS3_EEEEvT_S7_(%"class.std::vector.5"*, %"class.std::vector.5"*) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.5"**
  %4 = alloca %"class.std::vector.5"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.789
  %8 = load i32, i32* @y.790
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1707061523, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %153
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1707061523, label %20
    i32 -1917144723, label %40
    i32 -352956777, label %71
    i32 -1304878544, label %72
    i32 422251600, label %79
    i32 1301567476, label %83
    i32 1509757492, label %111
    i32 -1128657949, label %143
    i32 626632084, label %144
    i32 295900956, label %145
    i32 -1275124548, label %148
  ]

; <label>:19:                                     ; preds = %17
  br label %153

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1917144723, i32 295900956
  store i32 %39, i32* %16
  br label %153

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"** %41, %"class.std::vector.5"*** %4
  %42 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"** %42, %"class.std::vector.5"*** %3
  %43 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %43, align 8
  %44 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %3
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %44, align 8
  %45 = load i32, i32* @x.789
  %46 = load i32, i32* @y.790
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -352956777, i32 295900956
  store i32 %70, i32* %16
  br label %153

; <label>:71:                                     ; preds = %17
  store i32 -1304878544, i32* %16
  br label %153

; <label>:72:                                     ; preds = %17
  %73 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  %74 = load %"class.std::vector.5"*, %"class.std::vector.5"** %73, align 8
  %75 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %3
  %76 = load %"class.std::vector.5"*, %"class.std::vector.5"** %75, align 8
  %77 = icmp ne %"class.std::vector.5"* %74, %76
  %78 = select i1 %77, i32 422251600, i32 626632084
  store i32 %78, i32* %16
  br label %153

; <label>:79:                                     ; preds = %17
  %80 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  %81 = load %"class.std::vector.5"*, %"class.std::vector.5"** %80, align 8
  %82 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorI6edge_tSaIS1_EEEPT_RS4_(%"class.std::vector.5"* dereferenceable(24) %81) #3
  call void @_ZSt8_DestroyISt6vectorI6edge_tSaIS1_EEEvPT_(%"class.std::vector.5"* %82)
  store i32 1301567476, i32* %16
  br label %153

; <label>:83:                                     ; preds = %17
  %84 = load i32, i32* @x.789
  %85 = load i32, i32* @y.790
  %86 = add i32 %84, -2131572910
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -2131572910
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 1509757492, i32 -1275124548
  store i32 %110, i32* %16
  br label %153

; <label>:111:                                    ; preds = %17
  %112 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  %113 = load %"class.std::vector.5"*, %"class.std::vector.5"** %112, align 8
  %114 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %113, i32 1
  %115 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  store %"class.std::vector.5"* %114, %"class.std::vector.5"** %115, align 8
  %116 = load i32, i32* @x.789
  %117 = load i32, i32* @y.790
  %118 = add i32 %116, 69252934
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 69252934
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 -1128657949, i32 -1275124548
  store i32 %142, i32* %16
  br label %153

; <label>:143:                                    ; preds = %17
  store i32 -1304878544, i32* %16
  br label %153

; <label>:144:                                    ; preds = %17
  ret void

; <label>:145:                                    ; preds = %17
  %146 = alloca %"class.std::vector.5"*, align 8
  %147 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %146, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %147, align 8
  store i32 -1917144723, i32* %16
  br label %153

; <label>:148:                                    ; preds = %17
  %149 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  %150 = load %"class.std::vector.5"*, %"class.std::vector.5"** %149, align 8
  %151 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %150, i32 1
  %152 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  store %"class.std::vector.5"* %151, %"class.std::vector.5"** %152, align 8
  store i32 1509757492, i32* %16
  br label %153

; <label>:153:                                    ; preds = %148, %145, %143, %111, %83, %79, %72, %71, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorI6edge_tSaIS1_EEEvPT_(%"class.std::vector.5"*) #0 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.791
  %5 = load i32, i32* @y.792
  %6 = sub i32 %4, 1389423718
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1389423718
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -277823119, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -277823119, label %18
    i32 -1600384282, label %26
    i32 92706819, label %55
    i32 1527716206, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1600384282, i32 1527716206
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %27, align 8
  %28 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  call void @_ZNSt6vectorI6edge_tSaIS0_EED2Ev(%"class.std::vector.5"* %28) #3
  %29 = load i32, i32* @x.791
  %30 = load i32, i32* @y.792
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 92706819, i32 1527716206
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %57, align 8
  %58 = load %"class.std::vector.5"*, %"class.std::vector.5"** %57, align 8
  call void @_ZNSt6vectorI6edge_tSaIS0_EED2Ev(%"class.std::vector.5"* %58) #3
  store i32 -1600384282, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI6edge_tSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.1"*, %"class.std::vector.5"*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.5"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.793
  %11 = load i32, i32* @y.794
  %12 = sub i32 %10, 634940984
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 634940984
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1735522179, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %144
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1735522179, label %24
    i32 -1306151616, label %44
    i32 893093955, label %80
    i32 -1492110672, label %83
    i32 1072488096, label %91
    i32 -1106610133, label %107
    i32 1990992816, label %135
    i32 -107603568, label %136
    i32 -10217568, label %143
  ]

; <label>:23:                                     ; preds = %21
  br label %144

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1306151616, i32 -107603568
  store i32 %43, i32* %20
  br label %144

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.1"*, align 8
  %46 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"** %46, %"class.std::vector.5"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %45, align 8
  %48 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %7
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %45, align 8
  store %"struct.std::_Vector_base.1"* %50, %"struct.std::_Vector_base.1"** %5
  %51 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %7
  %52 = load %"class.std::vector.5"*, %"class.std::vector.5"** %51, align 8
  %53 = icmp ne %"class.std::vector.5"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.793
  %55 = load i32, i32* @y.794
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 893093955, i32 -107603568
  store i32 %79, i32* %20
  br label %144

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 -1492110672, i32 1072488096
  store i32 %82, i32* %20
  br label %144

; <label>:83:                                     ; preds = %21
  %84 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %85 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %84, i32 0, i32 0
  %86 = bitcast %"struct.std::_Vector_base<std::vector<edge_t, std::allocator<edge_t> >, std::allocator<std::vector<edge_t, std::allocator<edge_t> > > >::_Vector_impl"* %85 to %"class.std::allocator.2"*
  %87 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %7
  %88 = load %"class.std::vector.5"*, %"class.std::vector.5"** %87, align 8
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorI6edge_tSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator.2"* dereferenceable(1) %86, %"class.std::vector.5"* %88, i64 %90)
  store i32 1072488096, i32* %20
  br label %144

; <label>:91:                                     ; preds = %21
  %92 = load i32, i32* @x.793
  %93 = load i32, i32* @y.794
  %94 = add i32 %92, 144488951
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 144488951
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -1106610133, i32 -10217568
  store i32 %106, i32* %20
  br label %144

; <label>:107:                                    ; preds = %21
  %108 = load i32, i32* @x.793
  %109 = load i32, i32* @y.794
  %110 = sub i32 %108, -2050303097
  %111 = sub i32 %110, 1
  %112 = add i32 %111, -2050303097
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 1990992816, i32 -10217568
  store i32 %134, i32* %20
  br label %144

; <label>:135:                                    ; preds = %21
  ret void

; <label>:136:                                    ; preds = %21
  %137 = alloca %"struct.std::_Vector_base.1"*, align 8
  %138 = alloca %"class.std::vector.5"*, align 8
  %139 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %137, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %138, align 8
  store i64 %2, i64* %139, align 8
  %140 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %137, align 8
  %141 = load %"class.std::vector.5"*, %"class.std::vector.5"** %138, align 8
  %142 = icmp ne %"class.std::vector.5"* %141, null
  store i32 -1306151616, i32* %20
  br label %144

; <label>:143:                                    ; preds = %21
  store i32 -1106610133, i32* %20
  br label %144

; <label>:144:                                    ; preds = %143, %136, %107, %91, %83, %80, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorI6edge_tSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::vector.5"*, i64) #2 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.795
  %7 = load i32, i32* @y.796
  %8 = add i32 %6, 683569716
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 683569716
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1610138395, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1610138395, label %20
    i32 687325179, label %28
    i32 -1633231244, label %50
    i32 -1455337502, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 687325179, i32 -1455337502
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.2"*, align 8
  %30 = alloca %"class.std::vector.5"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %29, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  %33 = bitcast %"class.std::allocator.2"* %32 to %"class.__gnu_cxx::new_allocator.3"*
  %34 = load %"class.std::vector.5"*, %"class.std::vector.5"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.3"* %33, %"class.std::vector.5"* %34, i64 %35)
  %36 = load i32, i32* @x.795
  %37 = load i32, i32* @y.796
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1633231244, i32 -1455337502
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::allocator.2"*, align 8
  %53 = alloca %"class.std::vector.5"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %52, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %52, align 8
  %56 = bitcast %"class.std::allocator.2"* %55 to %"class.__gnu_cxx::new_allocator.3"*
  %57 = load %"class.std::vector.5"*, %"class.std::vector.5"** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.3"* %56, %"class.std::vector.5"* %57, i64 %58)
  store i32 687325179, i32* %16
  br label %59

; <label>:59:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI6edge_tSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::vector.5"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.797
  %7 = load i32, i32* @y.798
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -2074240982, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2074240982, label %19
    i32 2146910773, label %27
    i32 -1883235200, label %48
    i32 -1323231190, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2146910773, i32 -1323231190
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %28, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %28, align 8
  %32 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %33 = bitcast %"class.std::vector.5"* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.797
  %35 = load i32, i32* @y.798
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1883235200, i32 -1323231190
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %51 = alloca %"class.std::vector.5"*, align 8
  %52 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %50, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %51, align 8
  store i64 %2, i64* %52, align 8
  %53 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %50, align 8
  %54 = load %"class.std::vector.5"*, %"class.std::vector.5"** %51, align 8
  %55 = bitcast %"class.std::vector.5"* %54 to i8*
  call void @_ZdlPv(i8* %55) #3
  store i32 2146910773, i32* %15
  br label %56

; <label>:56:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI6edge_tSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.2"* dereferenceable(1)) #2 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorI6edge_tSaIS1_EEEvT_S5_(%"class.std::vector.5"* %7, %"class.std::vector.5"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6edge_tED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.801
  %5 = load i32, i32* @y.802
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 293661810, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %46
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 293661810, label %17
    i32 -441556753, label %25
    i32 381739764, label %42
    i32 1930042056, label %43
  ]

; <label>:16:                                     ; preds = %14
  br label %46

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -441556753, i32 1930042056
  store i32 %24, i32* %13
  br label %46

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %26, align 8
  %28 = load i32, i32* @x.801
  %29 = load i32, i32* @y.802
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 381739764, i32 1930042056
  store i32 %41, i32* %13
  br label %46

; <label>:42:                                     ; preds = %14
  ret void

; <label>:43:                                     ; preds = %14
  %44 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %44, align 8
  %45 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %44, align 8
  store i32 -441556753, i32* %13
  br label %46

; <label>:46:                                     ; preds = %43, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %10, %"class.std::allocator.7"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base.6"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6edge_tSaIS0_EE21_M_default_initializeEm(%"class.std::vector.5"*, i64) #2 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.edge_t*, %struct.edge_t** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %12 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %11) #3
  %13 = call %struct.edge_t* @_ZSt27__uninitialized_default_n_aIP6edge_tmS0_ET_S2_T0_RSaIT1_E(%struct.edge_t* %9, i64 %10, %"class.std::allocator.7"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %15, i32 0, i32 1
  store %struct.edge_t* %13, %struct.edge_t** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.807
  %3 = load i32, i32* @y.808
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %166

; <label>:15:                                     ; preds = %1, %166
  %16 = alloca %"struct.std::_Vector_base.6"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %16, align 8
  %19 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %16, align 8
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %20, i32 0, i32 0
  %22 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %23, i32 0, i32 2
  %25 = load %struct.edge_t*, %struct.edge_t** %24, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %struct.edge_t*, %struct.edge_t** %27, align 8
  %29 = ptrtoint %struct.edge_t* %25 to i64
  %30 = ptrtoint %struct.edge_t* %28 to i64
  %31 = sub i64 0, %30
  %32 = add i64 %29, %31
  %33 = sub i64 %29, %30
  %34 = sdiv exact i64 %32, 24
  %35 = load i32, i32* @x.807
  %36 = load i32, i32* @y.808
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %166

; <label>:60:                                     ; preds = %15
  invoke void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.6"* %19, %struct.edge_t* %22, i64 %34)
          to label %61 unwind label %105

; <label>:61:                                     ; preds = %60
  %62 = load i32, i32* @x.807
  %63 = load i32, i32* @y.808
  %64 = add i32 %62, -1193044115
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -1193044115
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %236

; <label>:88:                                     ; preds = %61, %236
  %89 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %89) #3
  %90 = load i32, i32* @x.807
  %91 = load i32, i32* @y.808
  %92 = add i32 %90, -900671451
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -900671451
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %236

; <label>:104:                                    ; preds = %88
  ret void

; <label>:105:                                    ; preds = %60
  %106 = load i32, i32* @x.807
  %107 = load i32, i32* @y.808
  %108 = sub i32 %106, 156719353
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 156719353
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %238

; <label>:132:                                    ; preds = %105, %238
  %133 = landingpad { i8*, i32 }
          catch i8* null
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %17, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %18, align 4
  %136 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %136) #3
  %137 = load i32, i32* @x.807
  %138 = load i32, i32* @y.808
  %139 = add i32 %137, 781916674
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, 781916674
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %238

; <label>:163:                                    ; preds = %132
  br label %164

; <label>:164:                                    ; preds = %163
  %165 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %165) #7
  unreachable

; <label>:166:                                    ; preds = %15, %1
  %167 = alloca %"struct.std::_Vector_base.6"*, align 8
  %168 = alloca i8*
  %169 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %167, align 8
  %170 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %167, align 8
  %171 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %171, i32 0, i32 0
  %173 = load %struct.edge_t*, %struct.edge_t** %172, align 8
  %174 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %170, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %174, i32 0, i32 2
  %176 = load %struct.edge_t*, %struct.edge_t** %175, align 8
  %177 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %170, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %177, i32 0, i32 0
  %179 = load %struct.edge_t*, %struct.edge_t** %178, align 8
  %180 = ptrtoint %struct.edge_t* %176 to i64
  %181 = ptrtoint %struct.edge_t* %179 to i64
  %182 = sub i64 %180, 7973551035100345458
  %183 = sub i64 %182, %181
  %184 = add i64 %183, 7973551035100345458
  %185 = sub i64 %180, %181
  %186 = mul i64 %184, %181
  %187 = sub i64 0, %180
  %188 = add i64 0, %187
  %189 = sub i64 0, %180
  %190 = sub i64 0, %188
  %191 = sub i64 0, %181
  %192 = add i64 %190, %191
  %193 = sub i64 0, %192
  %194 = add i64 %188, %181
  %195 = shl i64 %180, %181
  %196 = sub i64 0, 7041080230732994459
  %197 = sub i64 %196, %180
  %198 = add i64 %197, 7041080230732994459
  %199 = sub i64 0, %180
  %200 = add i64 %198, 2734167864428429658
  %201 = add i64 %200, %181
  %202 = sub i64 %201, 2734167864428429658
  %203 = add i64 %198, %181
  %204 = sub i64 %180, 1986856585227195458
  %205 = sub i64 %204, %181
  %206 = add i64 %205, 1986856585227195458
  %207 = sub i64 %180, %181
  %208 = mul i64 %206, %181
  %209 = sub i64 0, %180
  %210 = add i64 0, %209
  %211 = sub i64 0, %180
  %212 = sub i64 0, %210
  %213 = sub i64 0, %181
  %214 = add i64 %212, %213
  %215 = sub i64 0, %214
  %216 = add i64 %210, %181
  %217 = sub i64 0, %181
  %218 = add i64 %180, %217
  %219 = sub i64 %180, %181
  %220 = mul i64 %218, %181
  %221 = add i64 %180, -5249505577153486668
  %222 = sub i64 %221, %181
  %223 = sub i64 %222, -5249505577153486668
  %224 = sub i64 %180, %181
  %225 = mul i64 %223, %181
  %226 = add i64 %180, -2963076731133401898
  %227 = sub i64 %226, %181
  %228 = sub i64 %227, -2963076731133401898
  %229 = sub i64 %180, %181
  %230 = add i64 %228, -2064917469108607225
  %231 = sub i64 %230, 24
  %232 = sub i64 %231, -2064917469108607225
  %233 = sub i64 %228, 24
  %234 = mul i64 %232, 24
  %235 = sdiv exact i64 %228, 24
  br label %15

; <label>:236:                                    ; preds = %88, %61
  %237 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %237) #3
  br label %88

; <label>:238:                                    ; preds = %132, %105
  %239 = landingpad { i8*, i32 }
          catch i8* null
  %240 = extractvalue { i8*, i32 } %239, 0
  store i8* %240, i8** %17, align 8
  %241 = extractvalue { i8*, i32 } %239, 1
  store i32 %241, i32* %18, align 4
  %242 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %242) #3
  br label %132
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.809
  %6 = load i32, i32* @y.810
  %7 = add i32 %5, -1835897561
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1835897561
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -306810039, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -306810039, label %19
    i32 -134793953, label %27
    i32 2128106047, label %63
    i32 -373308842, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -134793953, i32 -373308842
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %29, align 8
  %30 = load %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %30 to %"class.std::allocator.7"*
  %32 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %29, align 8
  call void @_ZNSaI6edge_tEC2ERKS0_(%"class.std::allocator.7"* %31, %"class.std::allocator.7"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %30, i32 0, i32 0
  store %struct.edge_t* null, %struct.edge_t** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %30, i32 0, i32 1
  store %struct.edge_t* null, %struct.edge_t** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %30, i32 0, i32 2
  store %struct.edge_t* null, %struct.edge_t** %35, align 8
  %36 = load i32, i32* @x.809
  %37 = load i32, i32* @y.810
  %38 = add i32 %36, -624102690
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -624102690
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 2128106047, i32 -373308842
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %65, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %66, align 8
  %67 = load %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %67 to %"class.std::allocator.7"*
  %69 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %66, align 8
  call void @_ZNSaI6edge_tEC2ERKS0_(%"class.std::allocator.7"* %68, %"class.std::allocator.7"* dereferenceable(1) %69) #3
  %70 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %67, i32 0, i32 0
  store %struct.edge_t* null, %struct.edge_t** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %67, i32 0, i32 1
  store %struct.edge_t* null, %struct.edge_t** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %67, i32 0, i32 2
  store %struct.edge_t* null, %struct.edge_t** %72, align 8
  store i32 -134793953, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base.6"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %struct.edge_t* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %8, i32 0, i32 0
  store %struct.edge_t* %7, %struct.edge_t** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %struct.edge_t*, %struct.edge_t** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %13, i32 0, i32 1
  store %struct.edge_t* %12, %struct.edge_t** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %struct.edge_t*, %struct.edge_t** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %20, i32 0, i32 2
  store %struct.edge_t* %19, %struct.edge_t** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %0, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"*, %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaI6edge_tED2Ev(%"class.std::allocator.7"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6edge_tEC2ERKS0_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.815
  %6 = load i32, i32* @y.816
  %7 = sub i32 %5, -1075890188
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1075890188
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1713107025, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1713107025, label %19
    i32 -570744211, label %39
    i32 -1057111179, label %72
    i32 1515162073, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -570744211, i32 1515162073
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.7"*, align 8
  %41 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %40, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %41, align 8
  %42 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %40, align 8
  %43 = bitcast %"class.std::allocator.7"* %42 to %"class.__gnu_cxx::new_allocator.8"*
  %44 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %41, align 8
  %45 = bitcast %"class.std::allocator.7"* %44 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorI6edge_tEC2ERKS2_(%"class.__gnu_cxx::new_allocator.8"* %43, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %45) #3
  %46 = load i32, i32* @x.815
  %47 = load i32, i32* @y.816
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1057111179, i32 1515162073
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::allocator.7"*, align 8
  %75 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %74, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %75, align 8
  %76 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %74, align 8
  %77 = bitcast %"class.std::allocator.7"* %76 to %"class.__gnu_cxx::new_allocator.8"*
  %78 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %75, align 8
  %79 = bitcast %"class.std::allocator.7"* %78 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorI6edge_tEC2ERKS2_(%"class.__gnu_cxx::new_allocator.8"* %77, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %79) #3
  store i32 -570744211, i32* %15
  br label %80

; <label>:80:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6edge_tEC2ERKS2_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #2 comdat align 2 {
  %3 = alloca %struct.edge_t*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.819
  %10 = load i32, i32* @y.820
  %11 = sub i32 %9, -1652482714
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1652482714
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -500834340, i32* %19
  %20 = alloca %struct.edge_t*
  br label %21

; <label>:21:                                     ; preds = %2, %180
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -500834340, label %24
    i32 588143109, label %32
    i32 -1438500189, label %54
    i32 1184670247, label %57
    i32 -2006282884, label %85
    i32 1651665782, label %118
    i32 1579633101, label %120
    i32 -586695582, label %135
    i32 169123010, label %163
    i32 -1554285087, label %164
    i32 423998673, label %166
    i32 40985308, label %172
    i32 2124899545, label %179
  ]

; <label>:23:                                     ; preds = %21
  br label %180

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 588143109, i32 423998673
  store i32 %31, i32* %19
  br label %180

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.6"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %33, align 8
  store %"struct.std::_Vector_base.6"* %36, %"struct.std::_Vector_base.6"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.819
  %41 = load i32, i32* @y.820
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1438500189, i32 423998673
  store i32 %53, i32* %19
  br label %180

; <label>:54:                                     ; preds = %21
  %55 = load volatile i1, i1* %4
  %56 = select i1 %55, i32 1184670247, i32 1579633101
  store i32 %56, i32* %19
  br label %180

; <label>:57:                                     ; preds = %21
  %58 = load i32, i32* @x.819
  %59 = load i32, i32* @y.820
  %60 = add i32 %58, -235967647
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -235967647
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -2006282884, i32 40985308
  store i32 %84, i32* %19
  br label %180

; <label>:85:                                     ; preds = %21
  %86 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %87 to %"class.std::allocator.7"*
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  %91 = call %struct.edge_t* @_ZNSt16allocator_traitsISaI6edge_tEE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1) %88, i64 %90)
  store %struct.edge_t* %91, %struct.edge_t** %3
  %92 = load i32, i32* @x.819
  %93 = load i32, i32* @y.820
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 1651665782, i32 40985308
  store i32 %117, i32* %19
  br label %180

; <label>:118:                                    ; preds = %21
  store i32 -1554285087, i32* %19
  %119 = load volatile %struct.edge_t*, %struct.edge_t** %3
  store %struct.edge_t* %119, %struct.edge_t** %20
  br label %180

; <label>:120:                                    ; preds = %21
  %121 = load i32, i32* @x.819
  %122 = load i32, i32* @y.820
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 -586695582, i32 2124899545
  store i32 %134, i32* %19
  br label %180

; <label>:135:                                    ; preds = %21
  %136 = load i32, i32* @x.819
  %137 = load i32, i32* @y.820
  %138 = add i32 %136, -1181650402
  %139 = sub i32 %138, 1
  %140 = sub i32 %139, -1181650402
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  %162 = select i1 %160, i32 169123010, i32 2124899545
  store i32 %162, i32* %19
  br label %180

; <label>:163:                                    ; preds = %21
  store i32 -1554285087, i32* %19
  store %struct.edge_t* null, %struct.edge_t** %20
  br label %180

; <label>:164:                                    ; preds = %21
  %165 = load %struct.edge_t*, %struct.edge_t** %20
  ret %struct.edge_t* %165

; <label>:166:                                    ; preds = %21
  %167 = alloca %"struct.std::_Vector_base.6"*, align 8
  %168 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %167, align 8
  store i64 %1, i64* %168, align 8
  %169 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %167, align 8
  %170 = load i64, i64* %168, align 8
  %171 = icmp ne i64 %170, 0
  store i32 588143109, i32* %19
  br label %180

; <label>:172:                                    ; preds = %21
  %173 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %174 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %173, i32 0, i32 0
  %175 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %174 to %"class.std::allocator.7"*
  %176 = load volatile i64*, i64** %6
  %177 = load i64, i64* %176, align 8
  %178 = call %struct.edge_t* @_ZNSt16allocator_traitsISaI6edge_tEE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1) %175, i64 %177)
  store i32 -2006282884, i32* %19
  br label %180

; <label>:179:                                    ; preds = %21
  store i32 -586695582, i32* %19
  br label %180

; <label>:180:                                    ; preds = %179, %172, %166, %163, %135, %120, %118, %85, %57, %54, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZNSt16allocator_traitsISaI6edge_tEE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1), i64) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.edge_t* @_ZN9__gnu_cxx13new_allocatorI6edge_tE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %6, i64 %7, i8* null)
  ret %struct.edge_t* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZN9__gnu_cxx13new_allocatorI6edge_tE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca %struct.edge_t*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6edge_tE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 2044683260, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %151
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2044683260, label %17
    i32 -881078631, label %22
    i32 1505233696, label %38
    i32 1257084502, label %66
    i32 972400048, label %67
    i32 1854589357, label %94
    i32 -800312691, label %114
    i32 1460253052, label %116
    i32 101858150, label %117
  ]

; <label>:16:                                     ; preds = %14
  br label %151

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -881078631, i32 972400048
  store i32 %21, i32* %13
  br label %151

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.823
  %24 = load i32, i32* @y.824
  %25 = sub i32 %23, -1730032175
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1730032175
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 1505233696, i32 1460253052
  store i32 %37, i32* %13
  br label %151

; <label>:38:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  %39 = load i32, i32* @x.823
  %40 = load i32, i32* @y.824
  %41 = sub i32 %39, 856006073
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 856006073
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1257084502, i32 1460253052
  store i32 %65, i32* %13
  br label %151

; <label>:66:                                     ; preds = %14
  unreachable

; <label>:67:                                     ; preds = %14
  %68 = load i32, i32* @x.823
  %69 = load i32, i32* @y.824
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 1854589357, i32 101858150
  store i32 %93, i32* %13
  br label %151

; <label>:94:                                     ; preds = %14
  %95 = load i64, i64* %8, align 8
  %96 = mul i64 %95, 24
  %97 = call i8* @_Znwm(i64 %96)
  %98 = bitcast i8* %97 to %struct.edge_t*
  store %struct.edge_t* %98, %struct.edge_t** %4
  %99 = load i32, i32* @x.823
  %100 = load i32, i32* @y.824
  %101 = sub i32 %99, 1620739729
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 1620739729
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 -800312691, i32 101858150
  store i32 %113, i32* %13
  br label %151

; <label>:114:                                    ; preds = %14
  %115 = load volatile %struct.edge_t*, %struct.edge_t** %4
  ret %struct.edge_t* %115

; <label>:116:                                    ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 1505233696, i32* %13
  br label %151

; <label>:117:                                    ; preds = %14
  %118 = load i64, i64* %8, align 8
  %119 = shl i64 %118, 24
  %120 = sub i64 %118, -4632978469452463244
  %121 = sub i64 %120, 24
  %122 = add i64 %121, -4632978469452463244
  %123 = sub i64 %118, 24
  %124 = mul i64 %122, 24
  %125 = shl i64 %118, 24
  %126 = sub i64 0, -2758727702801460049
  %127 = sub i64 %126, %118
  %128 = add i64 %127, -2758727702801460049
  %129 = sub i64 0, %118
  %130 = sub i64 %128, 7381735432513259598
  %131 = add i64 %130, 24
  %132 = add i64 %131, 7381735432513259598
  %133 = add i64 %128, 24
  %134 = sub i64 %118, -906551776938593725
  %135 = sub i64 %134, 24
  %136 = add i64 %135, -906551776938593725
  %137 = sub i64 %118, 24
  %138 = mul i64 %136, 24
  %139 = add i64 0, -29056861186211215
  %140 = sub i64 %139, %118
  %141 = sub i64 %140, -29056861186211215
  %142 = sub i64 0, %118
  %143 = sub i64 0, %141
  %144 = sub i64 0, 24
  %145 = add i64 %143, %144
  %146 = sub i64 0, %145
  %147 = add i64 %141, 24
  %148 = mul i64 %118, 24
  %149 = call i8* @_Znwm(i64 %148)
  %150 = bitcast i8* %149 to %struct.edge_t*
  store i32 1854589357, i32* %13
  br label %151

; <label>:151:                                    ; preds = %117, %116, %94, %67, %38, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI6edge_tE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt27__uninitialized_default_n_aIP6edge_tmS0_ET_S2_T0_RSaIT1_E(%struct.edge_t*, i64, %"class.std::allocator.7"* dereferenceable(1)) #2 comdat {
  %4 = alloca %struct.edge_t*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load %struct.edge_t*, %struct.edge_t** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %struct.edge_t* @_ZSt25__uninitialized_default_nIP6edge_tmET_S2_T0_(%struct.edge_t* %7, i64 %8)
  ret %struct.edge_t* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt25__uninitialized_default_nIP6edge_tmET_S2_T0_(%struct.edge_t*, i64) #2 comdat {
  %3 = alloca %struct.edge_t*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %struct.edge_t* %0, %struct.edge_t** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %struct.edge_t*, %struct.edge_t** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.edge_t* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6edge_tmEET_S4_T0_(%struct.edge_t* %6, i64 %7)
  ret %struct.edge_t* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6edge_tmEET_S4_T0_(%struct.edge_t*, i64) #2 comdat align 2 {
  %3 = alloca %struct.edge_t*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.edge_t, align 8
  store %struct.edge_t* %0, %struct.edge_t** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %struct.edge_t*, %struct.edge_t** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = bitcast %struct.edge_t* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 24, i32 8, i1 false)
  %9 = call %struct.edge_t* @_ZSt6fill_nIP6edge_tmS0_ET_S2_T0_RKT1_(%struct.edge_t* %6, i64 %7, %struct.edge_t* dereferenceable(24) %5)
  ret %struct.edge_t* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt6fill_nIP6edge_tmS0_ET_S2_T0_RKT1_(%struct.edge_t*, i64, %struct.edge_t* dereferenceable(24)) #2 comdat {
  %4 = alloca %struct.edge_t*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %4, align 8
  store i64 %1, i64* %5, align 8
  store %struct.edge_t* %2, %struct.edge_t** %6, align 8
  %7 = load %struct.edge_t*, %struct.edge_t** %4, align 8
  %8 = call %struct.edge_t* @_ZSt12__niter_baseIP6edge_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.edge_t* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %11 = call %struct.edge_t* @_ZSt10__fill_n_aIP6edge_tmS0_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES5_T0_RKS4_(%struct.edge_t* %8, i64 %9, %struct.edge_t* dereferenceable(24) %10)
  ret %struct.edge_t* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.edge_t* @_ZSt10__fill_n_aIP6edge_tmS0_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES5_T0_RKS4_(%struct.edge_t*, i64, %struct.edge_t* dereferenceable(24)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %struct.edge_t**
  %7 = alloca %struct.edge_t**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.837
  %11 = load i32, i32* @y.838
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -105511429, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %199
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -105511429, label %23
    i32 -2098268051, label %31
    i32 -771568708, label %54
    i32 -551773896, label %55
    i32 -1776447378, label %82
    i32 899919559, label %113
    i32 -1895397309, label %116
    i32 649345303, label %144
    i32 115438460, label %166
    i32 -38208065, label %167
    i32 -253644568, label %179
    i32 -1472867851, label %182
    i32 1184148355, label %188
    i32 -2095463962, label %192
  ]

; <label>:22:                                     ; preds = %20
  br label %199

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -2098268051, i32 -1472867851
  store i32 %30, i32* %19
  br label %199

; <label>:31:                                     ; preds = %20
  %32 = alloca %struct.edge_t*, align 8
  store %struct.edge_t** %32, %struct.edge_t*** %7
  %33 = alloca i64, align 8
  %34 = alloca %struct.edge_t*, align 8
  store %struct.edge_t** %34, %struct.edge_t*** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile %struct.edge_t**, %struct.edge_t*** %7
  store %struct.edge_t* %0, %struct.edge_t** %36, align 8
  store i64 %1, i64* %33, align 8
  %37 = load volatile %struct.edge_t**, %struct.edge_t*** %6
  store %struct.edge_t* %2, %struct.edge_t** %37, align 8
  %38 = load i64, i64* %33, align 8
  %39 = load volatile i64*, i64** %5
  store i64 %38, i64* %39, align 8
  %40 = load i32, i32* @x.837
  %41 = load i32, i32* @y.838
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -771568708, i32 -1472867851
  store i32 %53, i32* %19
  br label %199

; <label>:54:                                     ; preds = %20
  store i32 -551773896, i32* %19
  br label %199

; <label>:55:                                     ; preds = %20
  %56 = load i32, i32* @x.837
  %57 = load i32, i32* @y.838
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -1776447378, i32 1184148355
  store i32 %81, i32* %19
  br label %199

; <label>:82:                                     ; preds = %20
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %84, 0
  store i1 %85, i1* %4
  %86 = load i32, i32* @x.837
  %87 = load i32, i32* @y.838
  %88 = sub i32 %86, 1476792399
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 1476792399
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 899919559, i32 1184148355
  store i32 %112, i32* %19
  br label %199

; <label>:113:                                    ; preds = %20
  %114 = load volatile i1, i1* %4
  %115 = select i1 %114, i32 -1895397309, i32 -253644568
  store i32 %115, i32* %19
  br label %199

; <label>:116:                                    ; preds = %20
  %117 = load i32, i32* @x.837
  %118 = load i32, i32* @y.838
  %119 = add i32 %117, -2008318265
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, -2008318265
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  %143 = select i1 %141, i32 649345303, i32 -2095463962
  store i32 %143, i32* %19
  br label %199

; <label>:144:                                    ; preds = %20
  %145 = load volatile %struct.edge_t**, %struct.edge_t*** %6
  %146 = load %struct.edge_t*, %struct.edge_t** %145, align 8
  %147 = load volatile %struct.edge_t**, %struct.edge_t*** %7
  %148 = load %struct.edge_t*, %struct.edge_t** %147, align 8
  %149 = bitcast %struct.edge_t* %148 to i8*
  %150 = bitcast %struct.edge_t* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 24, i32 8, i1 false)
  %151 = load i32, i32* @x.837
  %152 = load i32, i32* @y.838
  %153 = sub i32 %151, -1370974144
  %154 = sub i32 %153, 1
  %155 = add i32 %154, -1370974144
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  %165 = select i1 %163, i32 115438460, i32 -2095463962
  store i32 %165, i32* %19
  br label %199

; <label>:166:                                    ; preds = %20
  store i32 -38208065, i32* %19
  br label %199

; <label>:167:                                    ; preds = %20
  %168 = load volatile i64*, i64** %5
  %169 = load i64, i64* %168, align 8
  %170 = add i64 %169, 1572567413011630525
  %171 = add i64 %170, -1
  %172 = sub i64 %171, 1572567413011630525
  %173 = add i64 %169, -1
  %174 = load volatile i64*, i64** %5
  store i64 %172, i64* %174, align 8
  %175 = load volatile %struct.edge_t**, %struct.edge_t*** %7
  %176 = load %struct.edge_t*, %struct.edge_t** %175, align 8
  %177 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %176, i32 1
  %178 = load volatile %struct.edge_t**, %struct.edge_t*** %7
  store %struct.edge_t* %177, %struct.edge_t** %178, align 8
  store i32 -551773896, i32* %19
  br label %199

; <label>:179:                                    ; preds = %20
  %180 = load volatile %struct.edge_t**, %struct.edge_t*** %7
  %181 = load %struct.edge_t*, %struct.edge_t** %180, align 8
  ret %struct.edge_t* %181

; <label>:182:                                    ; preds = %20
  %183 = alloca %struct.edge_t*, align 8
  %184 = alloca i64, align 8
  %185 = alloca %struct.edge_t*, align 8
  %186 = alloca i64, align 8
  store %struct.edge_t* %0, %struct.edge_t** %183, align 8
  store i64 %1, i64* %184, align 8
  store %struct.edge_t* %2, %struct.edge_t** %185, align 8
  %187 = load i64, i64* %184, align 8
  store i64 %187, i64* %186, align 8
  store i32 -2098268051, i32* %19
  br label %199

; <label>:188:                                    ; preds = %20
  %189 = load volatile i64*, i64** %5
  %190 = load i64, i64* %189, align 8
  %191 = icmp ugt i64 %190, 0
  store i32 -1776447378, i32* %19
  br label %199

; <label>:192:                                    ; preds = %20
  %193 = load volatile %struct.edge_t**, %struct.edge_t*** %6
  %194 = load %struct.edge_t*, %struct.edge_t** %193, align 8
  %195 = load volatile %struct.edge_t**, %struct.edge_t*** %7
  %196 = load %struct.edge_t*, %struct.edge_t** %195, align 8
  %197 = bitcast %struct.edge_t* %196 to i8*
  %198 = bitcast %struct.edge_t* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 24, i32 8, i1 false)
  store i32 649345303, i32* %19
  br label %199

; <label>:199:                                    ; preds = %192, %188, %182, %167, %166, %144, %116, %113, %82, %55, %54, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt12__niter_baseIP6edge_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.edge_t*) #2 comdat {
  %2 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %2, align 8
  %3 = load %struct.edge_t*, %struct.edge_t** %2, align 8
  %4 = call %struct.edge_t* @_ZNSt10_Iter_baseIP6edge_tLb0EE7_S_baseES1_(%struct.edge_t* %3)
  ret %struct.edge_t* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.edge_t* @_ZNSt10_Iter_baseIP6edge_tLb0EE7_S_baseES1_(%struct.edge_t*) #0 comdat align 2 {
  %2 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %2, align 8
  %3 = load %struct.edge_t*, %struct.edge_t** %2, align 8
  ret %struct.edge_t* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.6"*, %struct.edge_t*, i64) #2 comdat align 2 {
  %4 = alloca %struct.edge_t*
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca %"struct.std::_Vector_base.6"*, align 8
  %7 = alloca %struct.edge_t*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %6, align 8
  store %struct.edge_t* %1, %struct.edge_t** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %6, align 8
  store %"struct.std::_Vector_base.6"* %9, %"struct.std::_Vector_base.6"** %5
  %10 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  store %struct.edge_t* %10, %struct.edge_t** %4
  %11 = alloca i32
  store i32 696039370, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %108
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 696039370, label %15
    i32 205292719, label %19
    i32 -1333968155, label %34
    i32 404319292, label %55
    i32 689504312, label %56
    i32 146418471, label %84
    i32 1362897391, label %100
    i32 -590245127, label %101
    i32 -1063168894, label %107
  ]

; <label>:14:                                     ; preds = %12
  br label %108

; <label>:15:                                     ; preds = %12
  %16 = load volatile %struct.edge_t*, %struct.edge_t** %4
  %17 = icmp ne %struct.edge_t* %16, null
  %18 = select i1 %17, i32 205292719, i32 689504312
  store i32 %18, i32* %11
  br label %108

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.843
  %21 = load i32, i32* @y.844
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -1333968155, i32 -590245127
  store i32 %33, i32* %11
  br label %108

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %36 to %"class.std::allocator.7"*
  %38 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  %39 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaI6edge_tEE10deallocateERS1_PS0_m(%"class.std::allocator.7"* dereferenceable(1) %37, %struct.edge_t* %38, i64 %39)
  %40 = load i32, i32* @x.843
  %41 = load i32, i32* @y.844
  %42 = sub i32 %40, 762748077
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 762748077
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 404319292, i32 -590245127
  store i32 %54, i32* %11
  br label %108

; <label>:55:                                     ; preds = %12
  store i32 689504312, i32* %11
  br label %108

; <label>:56:                                     ; preds = %12
  %57 = load i32, i32* @x.843
  %58 = load i32, i32* @y.844
  %59 = sub i32 %57, 1530869236
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 1530869236
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 146418471, i32 -1063168894
  store i32 %83, i32* %11
  br label %108

; <label>:84:                                     ; preds = %12
  %85 = load i32, i32* @x.843
  %86 = load i32, i32* @y.844
  %87 = sub i32 %85, 1258985583
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 1258985583
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 1362897391, i32 -1063168894
  store i32 %99, i32* %11
  br label %108

; <label>:100:                                    ; preds = %12
  ret void

; <label>:101:                                    ; preds = %12
  %102 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %103 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %102, i32 0, i32 0
  %104 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %103 to %"class.std::allocator.7"*
  %105 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  %106 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaI6edge_tEE10deallocateERS1_PS0_m(%"class.std::allocator.7"* dereferenceable(1) %104, %struct.edge_t* %105, i64 %106)
  store i32 -1333968155, i32* %11
  br label %108

; <label>:107:                                    ; preds = %12
  store i32 146418471, i32* %11
  br label %108

; <label>:108:                                    ; preds = %107, %101, %84, %56, %55, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI6edge_tEE10deallocateERS1_PS0_m(%"class.std::allocator.7"* dereferenceable(1), %struct.edge_t*, i64) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %struct.edge_t*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store %struct.edge_t* %1, %struct.edge_t** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load %struct.edge_t*, %struct.edge_t** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6edge_tE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.8"* %8, %struct.edge_t* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6edge_tE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.8"*, %struct.edge_t*, i64) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca %struct.edge_t*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store %struct.edge_t* %1, %struct.edge_t** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load %struct.edge_t*, %struct.edge_t** %5, align 8
  %9 = bitcast %struct.edge_t* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6edge_tS0_EvT_S2_RSaIT0_E(%struct.edge_t*, %struct.edge_t*, %"class.std::allocator.7"* dereferenceable(1)) #2 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.849
  %7 = load i32, i32* @y.850
  %8 = add i32 %6, -1526792094
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1526792094
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 756439695, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 756439695, label %20
    i32 -46422218, label %40
    i32 -124395297, label %60
    i32 1893832492, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -46422218, i32 1893832492
  store i32 %39, i32* %16
  br label %67

; <label>:40:                                     ; preds = %17
  %41 = alloca %struct.edge_t*, align 8
  %42 = alloca %struct.edge_t*, align 8
  %43 = alloca %"class.std::allocator.7"*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %41, align 8
  store %struct.edge_t* %1, %struct.edge_t** %42, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %43, align 8
  %44 = load %struct.edge_t*, %struct.edge_t** %41, align 8
  %45 = load %struct.edge_t*, %struct.edge_t** %42, align 8
  call void @_ZSt8_DestroyIP6edge_tEvT_S2_(%struct.edge_t* %44, %struct.edge_t* %45)
  %46 = load i32, i32* @x.849
  %47 = load i32, i32* @y.850
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -124395297, i32 1893832492
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %struct.edge_t*, align 8
  %63 = alloca %struct.edge_t*, align 8
  %64 = alloca %"class.std::allocator.7"*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %62, align 8
  store %struct.edge_t* %1, %struct.edge_t** %63, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %64, align 8
  %65 = load %struct.edge_t*, %struct.edge_t** %62, align 8
  %66 = load %struct.edge_t*, %struct.edge_t** %63, align 8
  call void @_ZSt8_DestroyIP6edge_tEvT_S2_(%struct.edge_t* %65, %struct.edge_t* %66)
  store i32 -46422218, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6edge_tEvT_S2_(%struct.edge_t*, %struct.edge_t*) #2 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.851
  %6 = load i32, i32* @y.852
  %7 = add i32 %5, 421826695
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 421826695
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 242545308, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 242545308, label %19
    i32 844262481, label %27
    i32 2079573586, label %58
    i32 984906847, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 844262481, i32 984906847
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %struct.edge_t*, align 8
  %29 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %28, align 8
  store %struct.edge_t* %1, %struct.edge_t** %29, align 8
  %30 = load %struct.edge_t*, %struct.edge_t** %28, align 8
  %31 = load %struct.edge_t*, %struct.edge_t** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6edge_tEEvT_S4_(%struct.edge_t* %30, %struct.edge_t* %31)
  %32 = load i32, i32* @x.851
  %33 = load i32, i32* @y.852
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 2079573586, i32 984906847
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %struct.edge_t*, align 8
  %61 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %60, align 8
  store %struct.edge_t* %1, %struct.edge_t** %61, align 8
  %62 = load %struct.edge_t*, %struct.edge_t** %60, align 8
  %63 = load %struct.edge_t*, %struct.edge_t** %61, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6edge_tEEvT_S4_(%struct.edge_t* %62, %struct.edge_t* %63)
  store i32 844262481, i32* %15
  br label %64

; <label>:64:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6edge_tEEvT_S4_(%struct.edge_t*, %struct.edge_t*) #0 comdat align 2 {
  %3 = alloca %struct.edge_t*, align 8
  %4 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %3, align 8
  store %struct.edge_t* %1, %struct.edge_t** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI6edge_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1), %struct.edge_t*, %struct.edge_t* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %struct.edge_t*, align 8
  %6 = alloca %struct.edge_t*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store %struct.edge_t* %1, %struct.edge_t** %5, align 8
  store %struct.edge_t* %2, %struct.edge_t** %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load %struct.edge_t*, %struct.edge_t** %5, align 8
  %10 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %11 = call dereferenceable(24) %struct.edge_t* @_ZSt7forwardIRK6edge_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.edge_t* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorI6edge_tE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.8"* %8, %struct.edge_t* %9, %struct.edge_t* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6edge_tSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_(%"class.std::vector.5"*, %struct.edge_t* dereferenceable(24)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.857
  %4 = load i32, i32* @y.858
  %5 = sub i32 %3, 942736011
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 942736011
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %428

; <label>:17:                                     ; preds = %2, %428
  %18 = alloca %"class.std::vector.5"*, align 8
  %19 = alloca %struct.edge_t*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %struct.edge_t*, align 8
  %22 = alloca %struct.edge_t*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %18, align 8
  store %struct.edge_t* %1, %struct.edge_t** %19, align 8
  %25 = load %"class.std::vector.5"*, %"class.std::vector.5"** %18, align 8
  %26 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.5"* %25, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %26, i64* %20, align 8
  %27 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %28 = load i64, i64* %20, align 8
  %29 = call %struct.edge_t* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %27, i64 %28)
  store %struct.edge_t* %29, %struct.edge_t** %21, align 8
  %30 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  store %struct.edge_t* %30, %struct.edge_t** %22, align 8
  %31 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %32 to %"class.std::allocator.7"*
  %34 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %35 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"* %25) #3
  %36 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %34, i64 %35
  %37 = load %struct.edge_t*, %struct.edge_t** %19, align 8
  %38 = call dereferenceable(24) %struct.edge_t* @_ZSt7forwardIRK6edge_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.edge_t* dereferenceable(24) %37) #3
  %39 = load i32, i32* @x.857
  %40 = load i32, i32* @y.858
  %41 = sub i32 %39, -274263948
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -274263948
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %428

; <label>:65:                                     ; preds = %17
  invoke void @_ZNSt16allocator_traitsISaI6edge_tEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %33, %struct.edge_t* %36, %struct.edge_t* dereferenceable(24) %38)
          to label %66 unwind label %164

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.857
  %68 = load i32, i32* @y.858
  %69 = add i32 %67, 1197038370
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 1197038370
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %450

; <label>:81:                                     ; preds = %66, %450
  store %struct.edge_t* null, %struct.edge_t** %22, align 8
  %82 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %struct.edge_t*, %struct.edge_t** %84, align 8
  %86 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %87, i32 0, i32 1
  %89 = load %struct.edge_t*, %struct.edge_t** %88, align 8
  %90 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %91 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %92 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %91) #3
  %93 = load i32, i32* @x.857
  %94 = load i32, i32* @y.858
  %95 = add i32 %93, -1817751445
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, -1817751445
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  br i1 %105, label %107, label %450

; <label>:107:                                    ; preds = %81
  %108 = invoke %struct.edge_t* @_ZSt34__uninitialized_move_if_noexcept_aIP6edge_tS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.edge_t* %85, %struct.edge_t* %89, %struct.edge_t* %90, %"class.std::allocator.7"* dereferenceable(1) %92)
          to label %109 unwind label %164

; <label>:109:                                    ; preds = %107
  %110 = load i32, i32* @x.857
  %111 = load i32, i32* @y.858
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %462

; <label>:135:                                    ; preds = %109, %462
  store %struct.edge_t* %108, %struct.edge_t** %22, align 8
  %136 = load %struct.edge_t*, %struct.edge_t** %22, align 8
  %137 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %136, i32 1
  store %struct.edge_t* %137, %struct.edge_t** %22, align 8
  %138 = load i32, i32* @x.857
  %139 = load i32, i32* @y.858
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %462

; <label>:163:                                    ; preds = %135
  br label %332

; <label>:164:                                    ; preds = %107, %65
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %23, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %24, align 4
  br label %168

; <label>:168:                                    ; preds = %164
  %169 = load i8*, i8** %23, align 8
  %170 = call i8* @__cxa_begin_catch(i8* %169) #3
  %171 = load %struct.edge_t*, %struct.edge_t** %22, align 8
  %172 = icmp ne %struct.edge_t* %171, null
  br i1 %172, label %237, label %173

; <label>:173:                                    ; preds = %168
  %174 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %174, i32 0, i32 0
  %176 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %175 to %"class.std::allocator.7"*
  %177 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %178 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"* %25) #3
  %179 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %177, i64 %178
  invoke void @_ZNSt16allocator_traitsISaI6edge_tEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.7"* dereferenceable(1) %176, %struct.edge_t* %179)
          to label %180 unwind label %233

; <label>:180:                                    ; preds = %173
  %181 = load i32, i32* @x.857
  %182 = load i32, i32* @y.858
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %465

; <label>:206:                                    ; preds = %180, %465
  %207 = load i32, i32* @x.857
  %208 = load i32, i32* @y.858
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 false, true
  %219 = and i1 %216, false
  %220 = and i1 %214, %218
  %221 = and i1 %217, false
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 false, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  br i1 %230, label %232, label %465

; <label>:232:                                    ; preds = %206
  br label %326

; <label>:233:                                    ; preds = %330, %326, %283, %173
  %234 = landingpad { i8*, i32 }
          cleanup
  %235 = extractvalue { i8*, i32 } %234, 0
  store i8* %235, i8** %23, align 8
  %236 = extractvalue { i8*, i32 } %234, 1
  store i32 %236, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %331 unwind label %424

; <label>:237:                                    ; preds = %168
  %238 = load i32, i32* @x.857
  %239 = load i32, i32* @y.858
  %240 = add i32 %238, -972068456
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, -972068456
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  br i1 %250, label %252, label %466

; <label>:252:                                    ; preds = %237, %466
  %253 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %254 = load %struct.edge_t*, %struct.edge_t** %22, align 8
  %255 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %256 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %255) #3
  %257 = load i32, i32* @x.857
  %258 = load i32, i32* @y.858
  %259 = sub i32 %257, 1149456967
  %260 = sub i32 %259, 1
  %261 = add i32 %260, 1149456967
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = xor i1 %265, true
  %268 = xor i1 %266, true
  %269 = xor i1 true, true
  %270 = and i1 %267, true
  %271 = and i1 %265, %269
  %272 = and i1 %268, true
  %273 = and i1 %266, %269
  %274 = or i1 %270, %271
  %275 = or i1 %272, %273
  %276 = xor i1 %274, %275
  %277 = or i1 %267, %268
  %278 = xor i1 %277, true
  %279 = or i1 true, %269
  %280 = and i1 %278, %279
  %281 = or i1 %276, %280
  %282 = or i1 %265, %266
  br i1 %281, label %283, label %466

; <label>:283:                                    ; preds = %252
  invoke void @_ZSt8_DestroyIP6edge_tS0_EvT_S2_RSaIT0_E(%struct.edge_t* %253, %struct.edge_t* %254, %"class.std::allocator.7"* dereferenceable(1) %256)
          to label %284 unwind label %233

; <label>:284:                                    ; preds = %283
  %285 = load i32, i32* @x.857
  %286 = load i32, i32* @y.858
  %287 = sub i32 0, 1
  %288 = add i32 %285, %287
  %289 = sub i32 %285, 1
  %290 = mul i32 %285, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %286, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 true, true
  %297 = and i1 %294, true
  %298 = and i1 %292, %296
  %299 = and i1 %295, true
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 true, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  br i1 %308, label %310, label %471

; <label>:310:                                    ; preds = %284, %471
  %311 = load i32, i32* @x.857
  %312 = load i32, i32* @y.858
  %313 = add i32 %311, -325348785
  %314 = sub i32 %313, 1
  %315 = sub i32 %314, -325348785
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = and i1 %319, %320
  %322 = xor i1 %319, %320
  %323 = or i1 %321, %322
  %324 = or i1 %319, %320
  br i1 %323, label %325, label %471

; <label>:325:                                    ; preds = %310
  br label %326

; <label>:326:                                    ; preds = %325, %232
  %327 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %328 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %329 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.6"* %327, %struct.edge_t* %328, i64 %329)
          to label %330 unwind label %233

; <label>:330:                                    ; preds = %326
  invoke void @__cxa_rethrow() #13
          to label %427 unwind label %233

; <label>:331:                                    ; preds = %233
  br label %419

; <label>:332:                                    ; preds = %163
  %333 = load i32, i32* @x.857
  %334 = load i32, i32* @y.858
  %335 = sub i32 %333, -1798762553
  %336 = sub i32 %335, 1
  %337 = add i32 %336, -1798762553
  %338 = sub i32 %333, 1
  %339 = mul i32 %333, %337
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %334, 10
  %343 = and i1 %341, %342
  %344 = xor i1 %341, %342
  %345 = or i1 %343, %344
  %346 = or i1 %341, %342
  br i1 %345, label %347, label %472

; <label>:347:                                    ; preds = %332, %472
  %348 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %349 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %348, i32 0, i32 0
  %350 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %349, i32 0, i32 0
  %351 = load %struct.edge_t*, %struct.edge_t** %350, align 8
  %352 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %353 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %352, i32 0, i32 0
  %354 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %353, i32 0, i32 1
  %355 = load %struct.edge_t*, %struct.edge_t** %354, align 8
  %356 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %357 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %356) #3
  call void @_ZSt8_DestroyIP6edge_tS0_EvT_S2_RSaIT0_E(%struct.edge_t* %351, %struct.edge_t* %355, %"class.std::allocator.7"* dereferenceable(1) %357)
  %358 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %359 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %360 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %359, i32 0, i32 0
  %361 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %360, i32 0, i32 0
  %362 = load %struct.edge_t*, %struct.edge_t** %361, align 8
  %363 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %364 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %363, i32 0, i32 0
  %365 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %364, i32 0, i32 2
  %366 = load %struct.edge_t*, %struct.edge_t** %365, align 8
  %367 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %368 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %367, i32 0, i32 0
  %369 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %368, i32 0, i32 0
  %370 = load %struct.edge_t*, %struct.edge_t** %369, align 8
  %371 = ptrtoint %struct.edge_t* %366 to i64
  %372 = ptrtoint %struct.edge_t* %370 to i64
  %373 = add i64 %371, 3781796878455913101
  %374 = sub i64 %373, %372
  %375 = sub i64 %374, 3781796878455913101
  %376 = sub i64 %371, %372
  %377 = sdiv exact i64 %375, 24
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.6"* %358, %struct.edge_t* %362, i64 %377)
  %378 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %379 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %380 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %379, i32 0, i32 0
  %381 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %380, i32 0, i32 0
  store %struct.edge_t* %378, %struct.edge_t** %381, align 8
  %382 = load %struct.edge_t*, %struct.edge_t** %22, align 8
  %383 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %384 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %383, i32 0, i32 0
  %385 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %384, i32 0, i32 1
  store %struct.edge_t* %382, %struct.edge_t** %385, align 8
  %386 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %387 = load i64, i64* %20, align 8
  %388 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %386, i64 %387
  %389 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %390 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %389, i32 0, i32 0
  %391 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %390, i32 0, i32 2
  store %struct.edge_t* %388, %struct.edge_t** %391, align 8
  %392 = load i32, i32* @x.857
  %393 = load i32, i32* @y.858
  %394 = add i32 %392, -1623700977
  %395 = sub i32 %394, 1
  %396 = sub i32 %395, -1623700977
  %397 = sub i32 %392, 1
  %398 = mul i32 %392, %396
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %393, 10
  %402 = xor i1 %400, true
  %403 = xor i1 %401, true
  %404 = xor i1 true, true
  %405 = and i1 %402, true
  %406 = and i1 %400, %404
  %407 = and i1 %403, true
  %408 = and i1 %401, %404
  %409 = or i1 %405, %406
  %410 = or i1 %407, %408
  %411 = xor i1 %409, %410
  %412 = or i1 %402, %403
  %413 = xor i1 %412, true
  %414 = or i1 true, %404
  %415 = and i1 %413, %414
  %416 = or i1 %411, %415
  %417 = or i1 %400, %401
  br i1 %416, label %418, label %472

; <label>:418:                                    ; preds = %347
  ret void

; <label>:419:                                    ; preds = %331
  %420 = load i8*, i8** %23, align 8
  %421 = load i32, i32* %24, align 4
  %422 = insertvalue { i8*, i32 } undef, i8* %420, 0
  %423 = insertvalue { i8*, i32 } %422, i32 %421, 1
  resume { i8*, i32 } %423

; <label>:424:                                    ; preds = %233
  %425 = landingpad { i8*, i32 }
          catch i8* null
  %426 = extractvalue { i8*, i32 } %425, 0
  call void @__clang_call_terminate(i8* %426) #7
  unreachable

; <label>:427:                                    ; preds = %330
  unreachable

; <label>:428:                                    ; preds = %17, %2
  %429 = alloca %"class.std::vector.5"*, align 8
  %430 = alloca %struct.edge_t*, align 8
  %431 = alloca i64, align 8
  %432 = alloca %struct.edge_t*, align 8
  %433 = alloca %struct.edge_t*, align 8
  %434 = alloca i8*
  %435 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %429, align 8
  store %struct.edge_t* %1, %struct.edge_t** %430, align 8
  %436 = load %"class.std::vector.5"*, %"class.std::vector.5"** %429, align 8
  %437 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.5"* %436, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %437, i64* %431, align 8
  %438 = bitcast %"class.std::vector.5"* %436 to %"struct.std::_Vector_base.6"*
  %439 = load i64, i64* %431, align 8
  %440 = call %struct.edge_t* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %438, i64 %439)
  store %struct.edge_t* %440, %struct.edge_t** %432, align 8
  %441 = load %struct.edge_t*, %struct.edge_t** %432, align 8
  store %struct.edge_t* %441, %struct.edge_t** %433, align 8
  %442 = bitcast %"class.std::vector.5"* %436 to %"struct.std::_Vector_base.6"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %442, i32 0, i32 0
  %444 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %443 to %"class.std::allocator.7"*
  %445 = load %struct.edge_t*, %struct.edge_t** %432, align 8
  %446 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"* %436) #3
  %447 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %445, i64 %446
  %448 = load %struct.edge_t*, %struct.edge_t** %430, align 8
  %449 = call dereferenceable(24) %struct.edge_t* @_ZSt7forwardIRK6edge_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.edge_t* dereferenceable(24) %448) #3
  br label %17

; <label>:450:                                    ; preds = %81, %66
  store %struct.edge_t* null, %struct.edge_t** %22, align 8
  %451 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %452 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %451, i32 0, i32 0
  %453 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %452, i32 0, i32 0
  %454 = load %struct.edge_t*, %struct.edge_t** %453, align 8
  %455 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %456 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %455, i32 0, i32 0
  %457 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %456, i32 0, i32 1
  %458 = load %struct.edge_t*, %struct.edge_t** %457, align 8
  %459 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %460 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %461 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %460) #3
  br label %81

; <label>:462:                                    ; preds = %135, %109
  store %struct.edge_t* %108, %struct.edge_t** %22, align 8
  %463 = load %struct.edge_t*, %struct.edge_t** %22, align 8
  %464 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %463, i32 1
  store %struct.edge_t* %464, %struct.edge_t** %22, align 8
  br label %135

; <label>:465:                                    ; preds = %206, %180
  br label %206

; <label>:466:                                    ; preds = %252, %237
  %467 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %468 = load %struct.edge_t*, %struct.edge_t** %22, align 8
  %469 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %470 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %469) #3
  br label %252

; <label>:471:                                    ; preds = %310, %284
  br label %310

; <label>:472:                                    ; preds = %347, %332
  %473 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %474 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %473, i32 0, i32 0
  %475 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %474, i32 0, i32 0
  %476 = load %struct.edge_t*, %struct.edge_t** %475, align 8
  %477 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %478 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %477, i32 0, i32 0
  %479 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %478, i32 0, i32 1
  %480 = load %struct.edge_t*, %struct.edge_t** %479, align 8
  %481 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %482 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %481) #3
  call void @_ZSt8_DestroyIP6edge_tS0_EvT_S2_RSaIT0_E(%struct.edge_t* %476, %struct.edge_t* %480, %"class.std::allocator.7"* dereferenceable(1) %482)
  %483 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %484 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %485 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %484, i32 0, i32 0
  %486 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %485, i32 0, i32 0
  %487 = load %struct.edge_t*, %struct.edge_t** %486, align 8
  %488 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %489 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %488, i32 0, i32 0
  %490 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %489, i32 0, i32 2
  %491 = load %struct.edge_t*, %struct.edge_t** %490, align 8
  %492 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %493 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %492, i32 0, i32 0
  %494 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %493, i32 0, i32 0
  %495 = load %struct.edge_t*, %struct.edge_t** %494, align 8
  %496 = ptrtoint %struct.edge_t* %491 to i64
  %497 = ptrtoint %struct.edge_t* %495 to i64
  %498 = shl i64 %496, %497
  %499 = sub i64 0, %496
  %500 = add i64 0, %499
  %501 = sub i64 0, %496
  %502 = sub i64 %500, -2025689308480735672
  %503 = add i64 %502, %497
  %504 = add i64 %503, -2025689308480735672
  %505 = add i64 %500, %497
  %506 = shl i64 %496, %497
  %507 = sub i64 0, -6070745008166640701
  %508 = sub i64 %507, %496
  %509 = add i64 %508, -6070745008166640701
  %510 = sub i64 0, %496
  %511 = sub i64 %509, -1800058029804748519
  %512 = add i64 %511, %497
  %513 = add i64 %512, -1800058029804748519
  %514 = add i64 %509, %497
  %515 = add i64 %496, 1595360287541610876
  %516 = sub i64 %515, %497
  %517 = sub i64 %516, 1595360287541610876
  %518 = sub i64 %496, %497
  %519 = mul i64 %517, %497
  %520 = shl i64 %496, %497
  %521 = sub i64 0, %497
  %522 = add i64 %496, %521
  %523 = sub i64 %496, %497
  %524 = mul i64 %522, %497
  %525 = sub i64 %496, -5860687599510478350
  %526 = sub i64 %525, %497
  %527 = add i64 %526, -5860687599510478350
  %528 = sub i64 %496, %497
  %529 = sub i64 0, %527
  %530 = add i64 0, %529
  %531 = sub i64 0, %527
  %532 = sub i64 0, 24
  %533 = sub i64 %530, %532
  %534 = add i64 %530, 24
  %535 = sub i64 %527, -1767199303973975245
  %536 = sub i64 %535, 24
  %537 = add i64 %536, -1767199303973975245
  %538 = sub i64 %527, 24
  %539 = mul i64 %537, 24
  %540 = add i64 %527, 4734810570731288438
  %541 = sub i64 %540, 24
  %542 = sub i64 %541, 4734810570731288438
  %543 = sub i64 %527, 24
  %544 = mul i64 %542, 24
  %545 = sdiv exact i64 %527, 24
  call void @_ZNSt12_Vector_baseI6edge_tSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.6"* %483, %struct.edge_t* %487, i64 %545)
  %546 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %547 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %548 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %547, i32 0, i32 0
  %549 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %548, i32 0, i32 0
  store %struct.edge_t* %546, %struct.edge_t** %549, align 8
  %550 = load %struct.edge_t*, %struct.edge_t** %22, align 8
  %551 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %552 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %551, i32 0, i32 0
  %553 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %552, i32 0, i32 1
  store %struct.edge_t* %550, %struct.edge_t** %553, align 8
  %554 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %555 = load i64, i64* %20, align 8
  %556 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %554, i64 %555
  %557 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %558 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %557, i32 0, i32 0
  %559 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %558, i32 0, i32 2
  store %struct.edge_t* %556, %struct.edge_t** %559, align 8
  br label %347
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6edge_tE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.8"*, %struct.edge_t*, %struct.edge_t* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca %struct.edge_t*, align 8
  %6 = alloca %struct.edge_t*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store %struct.edge_t* %1, %struct.edge_t** %5, align 8
  store %struct.edge_t* %2, %struct.edge_t** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load %struct.edge_t*, %struct.edge_t** %5, align 8
  %9 = bitcast %struct.edge_t* %8 to i8*
  %10 = bitcast i8* %9 to %struct.edge_t*
  %11 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %12 = call dereferenceable(24) %struct.edge_t* @_ZSt7forwardIRK6edge_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.edge_t* dereferenceable(24) %11) #3
  %13 = bitcast %struct.edge_t* %10 to i8*
  %14 = bitcast %struct.edge_t* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.edge_t* @_ZSt7forwardIRK6edge_tEOT_RNSt16remove_referenceIS3_E4typeE(%struct.edge_t* dereferenceable(24)) #0 comdat {
  %2 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %2, align 8
  %3 = load %struct.edge_t*, %struct.edge_t** %2, align 8
  ret %struct.edge_t* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6edge_tSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.5"*, i64, i8*) #2 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.5"*
  %8 = alloca %"class.std::vector.5"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  store %"class.std::vector.5"* %13, %"class.std::vector.5"** %7
  %14 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %15 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE8max_sizeEv(%"class.std::vector.5"* %14) #3
  %16 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %17 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"* %16) #3
  %18 = add i64 %15, 457873806783859229
  %19 = sub i64 %18, %17
  %20 = sub i64 %19, 457873806783859229
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 473130671, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %98
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 473130671, label %28
    i32 -1062264247, label %33
    i32 514759741, label %35
    i32 569793640, label %51
    i32 1185474573, label %57
    i32 2059194380, label %60
    i32 229509197, label %62
    i32 -1471405975, label %79
    i32 -356064629, label %95
    i32 1336116463, label %97
  ]

; <label>:27:                                     ; preds = %25
  br label %98

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -1062264247, i32 514759741
  store i32 %32, i32* %23
  br label %98

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #13
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %37 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"* %36) #3
  %38 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %39 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"* %38) #3
  store i64 %39, i64* %12, align 8
  %40 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %37, 7741210405792938777
  %43 = add i64 %42, %41
  %44 = add i64 %43, 7741210405792938777
  %45 = add i64 %37, %41
  store i64 %44, i64* %11, align 8
  %46 = load i64, i64* %11, align 8
  %47 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %48 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 1185474573, i32 569793640
  store i32 %50, i32* %23
  br label %98

; <label>:51:                                     ; preds = %25
  %52 = load i64, i64* %11, align 8
  %53 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %54 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE8max_sizeEv(%"class.std::vector.5"* %53) #3
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i32 1185474573, i32 2059194380
  store i32 %56, i32* %23
  br label %98

; <label>:57:                                     ; preds = %25
  %58 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %59 = call i64 @_ZNKSt6vectorI6edge_tSaIS0_EE8max_sizeEv(%"class.std::vector.5"* %58) #3
  store i32 229509197, i32* %23
  store i64 %59, i64* %24
  br label %98

; <label>:60:                                     ; preds = %25
  %61 = load i64, i64* %11, align 8
  store i32 229509197, i32* %23
  store i64 %61, i64* %24
  br label %98

; <label>:62:                                     ; preds = %25
  %63 = load i64, i64* %24
  store i64 %63, i64* %4
  %64 = load i32, i32* @x.863
  %65 = load i32, i32* @y.864
  %66 = sub i32 %64, -2110600034
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -2110600034
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -1471405975, i32 1336116463
  store i32 %78, i32* %23
  br label %98

; <label>:79:                                     ; preds = %25
  %80 = load i32, i32* @x.863
  %81 = load i32, i32* @y.864
  %82 = add i32 %80, 2041735608
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 2041735608
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -356064629, i32 1336116463
  store i32 %94, i32* %23
  br label %98

; <label>:95:                                     ; preds = %25
  %96 = load volatile i64, i64* %4
  ret i64 %96

; <label>:97:                                     ; preds = %25
  store i32 -1471405975, i32* %23
  br label %98

; <label>:98:                                     ; preds = %97, %79, %62, %60, %57, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6edge_tSaIS0_EE4sizeEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %8 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl", %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.edge_t*, %struct.edge_t** %10, align 8
  %12 = ptrtoint %struct.edge_t* %7 to i64
  %13 = ptrtoint %struct.edge_t* %11 to i64
  %14 = sub i64 %12, 683396296326146601
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 683396296326146601
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt34__uninitialized_move_if_noexcept_aIP6edge_tS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*, %"class.std::allocator.7"* dereferenceable(1)) #2 comdat {
  %5 = alloca %struct.edge_t*, align 8
  %6 = alloca %struct.edge_t*, align 8
  %7 = alloca %struct.edge_t*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator.38", align 8
  %10 = alloca %"class.std::move_iterator.38", align 8
  store %struct.edge_t* %0, %struct.edge_t** %5, align 8
  store %struct.edge_t* %1, %struct.edge_t** %6, align 8
  store %struct.edge_t* %2, %struct.edge_t** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load %struct.edge_t*, %struct.edge_t** %5, align 8
  %12 = call %struct.edge_t* @_ZSt32__make_move_if_noexcept_iteratorIP6edge_tSt13move_iteratorIS1_EET0_T_(%struct.edge_t* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %9, i32 0, i32 0
  store %struct.edge_t* %12, %struct.edge_t** %13, align 8
  %14 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %15 = call %struct.edge_t* @_ZSt32__make_move_if_noexcept_iteratorIP6edge_tSt13move_iteratorIS1_EET0_T_(%struct.edge_t* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %10, i32 0, i32 0
  store %struct.edge_t* %15, %struct.edge_t** %16, align 8
  %17 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  %18 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %9, i32 0, i32 0
  %20 = load %struct.edge_t*, %struct.edge_t** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %10, i32 0, i32 0
  %22 = load %struct.edge_t*, %struct.edge_t** %21, align 8
  %23 = call %struct.edge_t* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP6edge_tES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.edge_t* %20, %struct.edge_t* %22, %struct.edge_t* %17, %"class.std::allocator.7"* dereferenceable(1) %18)
  ret %struct.edge_t* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI6edge_tEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.7"* dereferenceable(1), %struct.edge_t*) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %struct.edge_t*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %struct.edge_t* %1, %struct.edge_t** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %struct.edge_t*, %struct.edge_t** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6edge_tE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.8"* %6, %struct.edge_t* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6edge_tSaIS0_EE8max_sizeEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaI6edge_tEE8max_sizeERKS1_(%"class.std::allocator.7"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaI6edge_tEE8max_sizeERKS1_(%"class.std::allocator.7"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6edge_tE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseI6edge_tSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<edge_t, std::allocator<edge_t> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP6edge_tES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*, %"class.std::allocator.7"* dereferenceable(1)) #2 comdat {
  %5 = alloca %"class.std::move_iterator.38", align 8
  %6 = alloca %"class.std::move_iterator.38", align 8
  %7 = alloca %struct.edge_t*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator.38", align 8
  %10 = alloca %"class.std::move_iterator.38", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %5, i32 0, i32 0
  store %struct.edge_t* %0, %struct.edge_t** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %6, i32 0, i32 0
  store %struct.edge_t* %1, %struct.edge_t** %12, align 8
  store %struct.edge_t* %2, %struct.edge_t** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.38"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.38"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %9, i32 0, i32 0
  %19 = load %struct.edge_t*, %struct.edge_t** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %10, i32 0, i32 0
  %21 = load %struct.edge_t*, %struct.edge_t** %20, align 8
  %22 = call %struct.edge_t* @_ZSt18uninitialized_copyISt13move_iteratorIP6edge_tES2_ET0_T_S5_S4_(%struct.edge_t* %19, %struct.edge_t* %21, %struct.edge_t* %17)
  ret %struct.edge_t* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt32__make_move_if_noexcept_iteratorIP6edge_tSt13move_iteratorIS1_EET0_T_(%struct.edge_t*) #2 comdat {
  %2 = alloca %"class.std::move_iterator.38", align 8
  %3 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %3, align 8
  %4 = load %struct.edge_t*, %struct.edge_t** %3, align 8
  call void @_ZNSt13move_iteratorIP6edge_tEC2ES1_(%"class.std::move_iterator.38"* %2, %struct.edge_t* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %2, i32 0, i32 0
  %6 = load %struct.edge_t*, %struct.edge_t** %5, align 8
  ret %struct.edge_t* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt18uninitialized_copyISt13move_iteratorIP6edge_tES2_ET0_T_S5_S4_(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*) #2 comdat {
  %4 = alloca %"class.std::move_iterator.38", align 8
  %5 = alloca %"class.std::move_iterator.38", align 8
  %6 = alloca %struct.edge_t*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.38", align 8
  %9 = alloca %"class.std::move_iterator.38", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %4, i32 0, i32 0
  store %struct.edge_t* %0, %struct.edge_t** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %5, i32 0, i32 0
  store %struct.edge_t* %1, %struct.edge_t** %11, align 8
  store %struct.edge_t* %2, %struct.edge_t** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.38"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.38"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %8, i32 0, i32 0
  %18 = load %struct.edge_t*, %struct.edge_t** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %9, i32 0, i32 0
  %20 = load %struct.edge_t*, %struct.edge_t** %19, align 8
  %21 = call %struct.edge_t* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP6edge_tES4_EET0_T_S7_S6_(%struct.edge_t* %18, %struct.edge_t* %20, %struct.edge_t* %16)
  ret %struct.edge_t* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP6edge_tES4_EET0_T_S7_S6_(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*) #2 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.38", align 8
  %5 = alloca %"class.std::move_iterator.38", align 8
  %6 = alloca %struct.edge_t*, align 8
  %7 = alloca %"class.std::move_iterator.38", align 8
  %8 = alloca %"class.std::move_iterator.38", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %4, i32 0, i32 0
  store %struct.edge_t* %0, %struct.edge_t** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %5, i32 0, i32 0
  store %struct.edge_t* %1, %struct.edge_t** %10, align 8
  store %struct.edge_t* %2, %struct.edge_t** %6, align 8
  %11 = bitcast %"class.std::move_iterator.38"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.38"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %7, i32 0, i32 0
  %17 = load %struct.edge_t*, %struct.edge_t** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %8, i32 0, i32 0
  %19 = load %struct.edge_t*, %struct.edge_t** %18, align 8
  %20 = call %struct.edge_t* @_ZSt4copyISt13move_iteratorIP6edge_tES2_ET0_T_S5_S4_(%struct.edge_t* %17, %struct.edge_t* %19, %struct.edge_t* %15)
  ret %struct.edge_t* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt4copyISt13move_iteratorIP6edge_tES2_ET0_T_S5_S4_(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*) #2 comdat {
  %4 = alloca %"class.std::move_iterator.38", align 8
  %5 = alloca %"class.std::move_iterator.38", align 8
  %6 = alloca %struct.edge_t*, align 8
  %7 = alloca %"class.std::move_iterator.38", align 8
  %8 = alloca %"class.std::move_iterator.38", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %4, i32 0, i32 0
  store %struct.edge_t* %0, %struct.edge_t** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %5, i32 0, i32 0
  store %struct.edge_t* %1, %struct.edge_t** %10, align 8
  store %struct.edge_t* %2, %struct.edge_t** %6, align 8
  %11 = bitcast %"class.std::move_iterator.38"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %7, i32 0, i32 0
  %14 = load %struct.edge_t*, %struct.edge_t** %13, align 8
  %15 = call %struct.edge_t* @_ZSt12__miter_baseISt13move_iteratorIP6edge_tEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.edge_t* %14)
  %16 = bitcast %"class.std::move_iterator.38"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %8, i32 0, i32 0
  %19 = load %struct.edge_t*, %struct.edge_t** %18, align 8
  %20 = call %struct.edge_t* @_ZSt12__miter_baseISt13move_iteratorIP6edge_tEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.edge_t* %19)
  %21 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %22 = call %struct.edge_t* @_ZSt14__copy_move_a2ILb1EP6edge_tS1_ET1_T0_S3_S2_(%struct.edge_t* %15, %struct.edge_t* %20, %struct.edge_t* %21)
  ret %struct.edge_t* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt14__copy_move_a2ILb1EP6edge_tS1_ET1_T0_S3_S2_(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*) #2 comdat {
  %4 = alloca %struct.edge_t*, align 8
  %5 = alloca %struct.edge_t*, align 8
  %6 = alloca %struct.edge_t*, align 8
  store %struct.edge_t* %0, %struct.edge_t** %4, align 8
  store %struct.edge_t* %1, %struct.edge_t** %5, align 8
  store %struct.edge_t* %2, %struct.edge_t** %6, align 8
  %7 = load %struct.edge_t*, %struct.edge_t** %4, align 8
  %8 = call %struct.edge_t* @_ZSt12__niter_baseIP6edge_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.edge_t* %7)
  %9 = load %struct.edge_t*, %struct.edge_t** %5, align 8
  %10 = call %struct.edge_t* @_ZSt12__niter_baseIP6edge_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.edge_t* %9)
  %11 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %12 = call %struct.edge_t* @_ZSt12__niter_baseIP6edge_tENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.edge_t* %11)
  %13 = call %struct.edge_t* @_ZSt13__copy_move_aILb1EP6edge_tS1_ET1_T0_S3_S2_(%struct.edge_t* %8, %struct.edge_t* %10, %struct.edge_t* %12)
  ret %struct.edge_t* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt12__miter_baseISt13move_iteratorIP6edge_tEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.edge_t*) #2 comdat {
  %2 = alloca %"class.std::move_iterator.38", align 8
  %3 = alloca %"class.std::move_iterator.38", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %2, i32 0, i32 0
  store %struct.edge_t* %0, %struct.edge_t** %4, align 8
  %5 = bitcast %"class.std::move_iterator.38"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.38"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %3, i32 0, i32 0
  %8 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  %9 = call %struct.edge_t* @_ZNSt10_Iter_baseISt13move_iteratorIP6edge_tELb1EE7_S_baseES3_(%struct.edge_t* %8)
  ret %struct.edge_t* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZSt13__copy_move_aILb1EP6edge_tS1_ET1_T0_S3_S2_(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*) #2 comdat {
  %4 = alloca %struct.edge_t*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.891
  %8 = load i32, i32* @y.892
  %9 = add i32 %7, -1106741544
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1106741544
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1571804049, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1571804049, label %21
    i32 1337552069, label %41
    i32 -780046027, label %77
    i32 339271964, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1337552069, i32 339271964
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.edge_t*, align 8
  %43 = alloca %struct.edge_t*, align 8
  %44 = alloca %struct.edge_t*, align 8
  %45 = alloca i8, align 1
  store %struct.edge_t* %0, %struct.edge_t** %42, align 8
  store %struct.edge_t* %1, %struct.edge_t** %43, align 8
  store %struct.edge_t* %2, %struct.edge_t** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %struct.edge_t*, %struct.edge_t** %42, align 8
  %47 = load %struct.edge_t*, %struct.edge_t** %43, align 8
  %48 = load %struct.edge_t*, %struct.edge_t** %44, align 8
  %49 = call %struct.edge_t* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI6edge_tEEPT_PKS4_S7_S5_(%struct.edge_t* %46, %struct.edge_t* %47, %struct.edge_t* %48)
  store %struct.edge_t* %49, %struct.edge_t** %4
  %50 = load i32, i32* @x.891
  %51 = load i32, i32* @y.892
  %52 = sub i32 %50, 1042158
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1042158
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -780046027, i32 339271964
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile %struct.edge_t*, %struct.edge_t** %4
  ret %struct.edge_t* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca %struct.edge_t*, align 8
  %81 = alloca %struct.edge_t*, align 8
  %82 = alloca %struct.edge_t*, align 8
  %83 = alloca i8, align 1
  store %struct.edge_t* %0, %struct.edge_t** %80, align 8
  store %struct.edge_t* %1, %struct.edge_t** %81, align 8
  store %struct.edge_t* %2, %struct.edge_t** %82, align 8
  store i8 1, i8* %83, align 1
  %84 = load %struct.edge_t*, %struct.edge_t** %80, align 8
  %85 = load %struct.edge_t*, %struct.edge_t** %81, align 8
  %86 = load %struct.edge_t*, %struct.edge_t** %82, align 8
  %87 = call %struct.edge_t* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI6edge_tEEPT_PKS4_S7_S5_(%struct.edge_t* %84, %struct.edge_t* %85, %struct.edge_t* %86)
  store i32 1337552069, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.edge_t* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI6edge_tEEPT_PKS4_S7_S5_(%struct.edge_t*, %struct.edge_t*, %struct.edge_t*) #0 comdat align 2 {
  %4 = alloca %struct.edge_t*
  %5 = alloca i64
  %6 = alloca %struct.edge_t*, align 8
  %7 = alloca %struct.edge_t*, align 8
  %8 = alloca %struct.edge_t*, align 8
  %9 = alloca i64, align 8
  store %struct.edge_t* %0, %struct.edge_t** %6, align 8
  store %struct.edge_t* %1, %struct.edge_t** %7, align 8
  store %struct.edge_t* %2, %struct.edge_t** %8, align 8
  %10 = load %struct.edge_t*, %struct.edge_t** %7, align 8
  %11 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %12 = ptrtoint %struct.edge_t* %10 to i64
  %13 = ptrtoint %struct.edge_t* %11 to i64
  %14 = sub i64 %12, -7654997642529556505
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -7654997642529556505
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 1354472511, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %88
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1354472511, label %24
    i32 -1626129201, label %28
    i32 1618161860, label %35
    i32 -1305801905, label %63
    i32 1062195844, label %82
    i32 -1542155309, label %84
  ]

; <label>:23:                                     ; preds = %21
  br label %88

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 -1626129201, i32 1618161860
  store i32 %27, i32* %20
  br label %88

; <label>:28:                                     ; preds = %21
  %29 = load %struct.edge_t*, %struct.edge_t** %8, align 8
  %30 = bitcast %struct.edge_t* %29 to i8*
  %31 = load %struct.edge_t*, %struct.edge_t** %6, align 8
  %32 = bitcast %struct.edge_t* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 24, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 1618161860, i32* %20
  br label %88

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.893
  %37 = load i32, i32* @y.894
  %38 = add i32 %36, -418768488
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -418768488
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1305801905, i32 -1542155309
  store i32 %62, i32* %20
  br label %88

; <label>:63:                                     ; preds = %21
  %64 = load %struct.edge_t*, %struct.edge_t** %8, align 8
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %64, i64 %65
  store %struct.edge_t* %66, %struct.edge_t** %4
  %67 = load i32, i32* @x.893
  %68 = load i32, i32* @y.894
  %69 = sub i32 %67, -2145514633
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -2145514633
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1062195844, i32 -1542155309
  store i32 %81, i32* %20
  br label %88

; <label>:82:                                     ; preds = %21
  %83 = load volatile %struct.edge_t*, %struct.edge_t** %4
  ret %struct.edge_t* %83

; <label>:84:                                     ; preds = %21
  %85 = load %struct.edge_t*, %struct.edge_t** %8, align 8
  %86 = load i64, i64* %9, align 8
  %87 = getelementptr inbounds %struct.edge_t, %struct.edge_t* %85, i64 %86
  store i32 -1305801905, i32* %20
  br label %88

; <label>:88:                                     ; preds = %84, %63, %35, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: noinline uwtable
define linkonce_odr %struct.edge_t* @_ZNSt10_Iter_baseISt13move_iteratorIP6edge_tELb1EE7_S_baseES3_(%struct.edge_t*) #2 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.38", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %2, i32 0, i32 0
  store %struct.edge_t* %0, %struct.edge_t** %3, align 8
  %4 = call %struct.edge_t* @_ZNKSt13move_iteratorIP6edge_tE4baseEv(%"class.std::move_iterator.38"* %2)
  ret %struct.edge_t* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.edge_t* @_ZNKSt13move_iteratorIP6edge_tE4baseEv(%"class.std::move_iterator.38"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.38"*, align 8
  store %"class.std::move_iterator.38"* %0, %"class.std::move_iterator.38"** %2, align 8
  %3 = load %"class.std::move_iterator.38"*, %"class.std::move_iterator.38"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %3, i32 0, i32 0
  %5 = load %struct.edge_t*, %struct.edge_t** %4, align 8
  ret %struct.edge_t* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIP6edge_tEC2ES1_(%"class.std::move_iterator.38"*, %struct.edge_t*) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.899
  %6 = load i32, i32* @y.900
  %7 = add i32 %5, 1935591076
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1935591076
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1686438637, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1686438637, label %19
    i32 -2068740640, label %27
    i32 1254362811, label %60
    i32 495369364, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2068740640, i32 495369364
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.38"*, align 8
  %29 = alloca %struct.edge_t*, align 8
  store %"class.std::move_iterator.38"* %0, %"class.std::move_iterator.38"** %28, align 8
  store %struct.edge_t* %1, %struct.edge_t** %29, align 8
  %30 = load %"class.std::move_iterator.38"*, %"class.std::move_iterator.38"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %30, i32 0, i32 0
  %32 = load %struct.edge_t*, %struct.edge_t** %29, align 8
  store %struct.edge_t* %32, %struct.edge_t** %31, align 8
  %33 = load i32, i32* @x.899
  %34 = load i32, i32* @y.900
  %35 = sub i32 %33, 1493662447
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1493662447
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1254362811, i32 495369364
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.38"*, align 8
  %63 = alloca %struct.edge_t*, align 8
  store %"class.std::move_iterator.38"* %0, %"class.std::move_iterator.38"** %62, align 8
  store %struct.edge_t* %1, %struct.edge_t** %63, align 8
  %64 = load %"class.std::move_iterator.38"*, %"class.std::move_iterator.38"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.38", %"class.std::move_iterator.38"* %64, i32 0, i32 0
  %66 = load %struct.edge_t*, %struct.edge_t** %63, align 8
  store %struct.edge_t* %66, %struct.edge_t** %65, align 8
  store i32 -2068740640, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6edge_tE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.8"*, %struct.edge_t*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %struct.edge_t*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %struct.edge_t* %1, %struct.edge_t** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  %6 = load %struct.edge_t*, %struct.edge_t** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s081975531.cpp() #2 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn }
attributes #14 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
