; ModuleID = 'Project_CodeNet_C++1400/p02703/s342357335.cpp'
source_filename = "Project_CodeNet_C++1400/p02703/s342357335.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::pair.5" = type { %"class.std::vector.0", %"class.std::vector.0" }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%struct.Graph = type { i64, %"class.std::vector" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i64, i64 }
%"class.std::vector.6" = type { %"struct.std::_Vector_base.7" }
%"struct.std::_Vector_base.7" = type { %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl" = type { %"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::vector.11"* }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl" = type { %"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"* }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Tuple_impl.16", %"struct.std::_Head_base.19" }
%"struct.std::_Tuple_impl.16" = type { %"struct.std::_Tuple_impl.17", %"struct.std::_Head_base.18" }
%"struct.std::_Tuple_impl.17" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i64 }
%"struct.std::_Head_base.18" = type { i64 }
%"struct.std::_Head_base.19" = type { i64 }
%"class.std::priority_queue" = type <{ %"class.std::vector", %"struct.std::greater", [7 x i8] }>
%"struct.std::greater" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::tuple.20" = type { %"struct.std::_Tuple_impl.21" }
%"struct.std::_Tuple_impl.21" = type { %"struct.std::_Tuple_impl.22", %"struct.std::_Head_base.24" }
%"struct.std::_Tuple_impl.22" = type { %"struct.std::_Head_base.23" }
%"struct.std::_Head_base.23" = type { i64* }
%"struct.std::_Head_base.24" = type { i64* }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::tuple"* }
%"class.std::runtime_error" = type { %"class.std::exception", %"struct.std::__cow_string" }
%"class.std::exception" = type { i32 (...)** }
%"struct.std::__cow_string" = type { %union.anon }
%union.anon = type { i8* }
%"class.std::allocator.8" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.54" = type { %"struct.std::pair"* }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::vector.25" = type { %"struct.std::_Vector_base.26" }
%"struct.std::_Vector_base.26" = type { %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl" = type { %"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::tuple.30"* }
%"class.std::tuple.30" = type { %"struct.std::_Tuple_impl.31" }
%"struct.std::_Tuple_impl.31" = type { %"struct.std::_Tuple_impl.32", %"struct.std::_Head_base.19" }
%"struct.std::_Tuple_impl.32" = type { %"struct.std::_Tuple_impl.33", %"struct.std::_Head_base.18" }
%"struct.std::_Tuple_impl.33" = type { %"struct.std::_Tuple_impl.34", %"struct.std::_Head_base" }
%"struct.std::_Tuple_impl.34" = type { %"struct.std::_Head_base.35" }
%"struct.std::_Head_base.35" = type { i64 }
%"class.std::vector.36" = type { %"struct.std::_Vector_base.37" }
%"struct.std::_Vector_base.37" = type { %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl" = type { %"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::tuple.41"* }
%"class.std::tuple.41" = type { %"struct.std::_Tuple_impl.42" }
%"struct.std::_Tuple_impl.42" = type { %"struct.std::_Tuple_impl.43", %"struct.std::_Head_base.19" }
%"struct.std::_Tuple_impl.43" = type { %"struct.std::_Head_base.18" }
%"class.std::tuple.44" = type { %"struct.std::_Tuple_impl.45" }
%"struct.std::_Tuple_impl.45" = type { %"struct.std::_Tuple_impl.46", %"struct.std::_Head_base.24" }
%"struct.std::_Tuple_impl.46" = type { %"struct.std::_Tuple_impl.47", %"struct.std::_Head_base.23" }
%"struct.std::_Tuple_impl.47" = type { %"struct.std::_Tuple_impl.48", %"struct.std::_Head_base.50" }
%"struct.std::_Tuple_impl.48" = type { %"struct.std::_Head_base.49" }
%"struct.std::_Head_base.49" = type { i64* }
%"struct.std::_Head_base.50" = type { i64* }
%"class.std::move_iterator.56" = type { %"class.std::tuple.30"* }
%"class.std::allocator.27" = type { i8 }
%"class.std::move_iterator.52" = type { %"class.std::tuple.41"* }
%"class.std::allocator.38" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.51" = type { i64* }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %"struct.std::pair"* }
%"class.__gnu_cxx::new_allocator.39" = type { i8 }
%"class.__gnu_cxx::new_allocator.9" = type { i8 }
%"class.std::allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }
%"class.std::move_iterator.53" = type { %"class.std::tuple"* }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::greater" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::greater" }
%"class.__gnu_cxx::__normal_iterator.55" = type { %"struct.std::pair"* }
%"class.__gnu_cxx::new_allocator.28" = type { i8 }
%"class.std::move_iterator.57" = type { i64* }

$_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZNK5Graph18get_adjacency_listIxEESt6vectorIS1_ISt5tupleIJxxT_EESaIS4_EESaIS6_EERKS1_IS3_SaIS3_EE = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxS9_EEEvDpOT_ = comdat any

$_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv = comdat any

$_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv = comdat any

$_ZSt3tieIJxxEESt5tupleIJDpRT_EES3_ = comdat any

$_ZNSt5tupleIJRxS0_EEaSIxxEERS1_RKSt4pairIT_T0_E = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv = comdat any

$_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt3getILm1EJxxxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS4_ = comdat any

$_ZSt3getILm2EJxxxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS4_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNSt4pairISt6vectorIxSaIxEES2_EC2IRS2_S5_vEEOT_OT0_ = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EED2Ev = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE7reserveEm = comdat any

$_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE12emplace_backIJRxS5_S5_S5_EEEvDpOT_ = comdat any

$_ZNSt6vectorISt5tupleIJxxEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorISt5tupleIJxxEESaIS1_EE7reserveEm = comdat any

$_ZNSt6vectorISt5tupleIJxxEESaIS1_EE12emplace_backIJRxS5_EEEvDpOT_ = comdat any

$_ZN5GraphC2Ex = comdat any

$_ZNSt6vectorIxSaIxEEC2Ev = comdat any

$_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EEixEm = comdat any

$_ZSt3tieIJxxxxEESt5tupleIJDpRT_EES3_ = comdat any

$_ZNSt5tupleIJRxS0_S0_S0_EEaSIJxxxxEvEERS1_RKS_IJDpT_EE = comdat any

$_ZN5Graph8add_edgeERKSt4pairIxxE = comdat any

$_ZNSt4pairIxxEC2IxxvEEOT_OT0_ = comdat any

$_ZNSt6vectorIxSaIxEE12emplace_backIJRxEEEvDpOT_ = comdat any

$_ZNSt6vectorISt5tupleIJxxEESaIS1_EEixEm = comdat any

$_ZNSt5tupleIJRxS0_EEaSIxxEERS1_RKS_IJT_T0_EE = comdat any

$_ZNSt6vectorIxSaIxEEC2EOS1_ = comdat any

$_ZNSt4pairISt6vectorIxSaIxEES2_ED2Ev = comdat any

$_ZN5GraphD2Ev = comdat any

$_ZNSt6vectorISt5tupleIJxxEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EED2Ev = comdat any

$_ZSt12__get_helperILm1ExJxEERT0_RSt11_Tuple_implIXT_EJS0_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJxxEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm1ExLb0EE7_M_headERS0_ = comdat any

$_ZSt12__get_helperILm2ExJEERT0_RSt11_Tuple_implIXT_EJS0_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm2EJxEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm2ExLb0EE7_M_headERS0_ = comdat any

$_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNKSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$__clang_call_terminate = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZNSaISt4pairIxxEEC2Ev = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaISt4pairIxxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt4pairIxxEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev = comdat any

$_ZSt27__uninitialized_default_n_aIPSt4pairIxxEmS1_ET_S3_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt4pairIxxEmET_S3_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt4pairIxxEmEET_S5_T0_ = comdat any

$_ZSt10_ConstructISt4pairIxxEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt4pairIxxEEPT_RS2_ = comdat any

$_ZSt8_DestroyIPSt4pairIxxEEvT_S3_ = comdat any

$_ZNSt4pairIxxEC2Ev = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRKS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRKS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt4pairIxxEEppEv = comdat any

$_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv = comdat any

$_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt5tupleIJRxS0_EEC2ES0_S0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_EEC2ES0_S0_ = comdat any

$_ZNSt11_Tuple_implILm1EJRxEEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm1ERxLb0EEC2ES0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_tailERS1_ = comdat any

$_ZNSt11_Tuple_implILm1EJRxEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm1ERxLb0EE7_M_headERS1_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorISt5tupleIJxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE9constructIS2_JRxS5_EEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJxxEEC2IRxS2_vEEOT_OT0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxEEC2IRxJS2_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxEEC2IRxEEOT_ = comdat any

$_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_ = comdat any

$_ZNSt10_Head_baseILm1ExLb0EEC2IRxEEOT_ = comdat any

$_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxEES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZSt8_DestroyIPSt5tupleIJxxEES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxEESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxEEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxEEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt5tupleIJxxEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt5tupleIJxxEEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt5tupleIJxxEEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxxEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxxEEEppEv = comdat any

$_ZSt8_DestroyIPSt5tupleIJxxEEEvT_S3_ = comdat any

$_ZSteqIPSt5tupleIJxxEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxxEEE4baseEv = comdat any

$_ZSt7forwardISt5tupleIJxxEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5tupleIJxxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxEEC2EOS0_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm1EJxEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_ = comdat any

$_ZNSt11_Tuple_implILm1EJxEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm1ExLb0EEC2IxEEOT_ = comdat any

$_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxEEEEvT_S5_ = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxxEEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE10deallocateEPS2_m = comdat any

$_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2Ev = comdat any

$_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEC2EmRKS4_ = comdat any

$_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEED2Ev = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EEixEm = comdat any

$_ZNKSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE12emplace_backIJRxS5_RKxEEEvDpOT_ = comdat any

$_ZSt4moveIRSt6vectorIS0_ISt5tupleIJxxxEESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_ = comdat any

$_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEC2EOS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJxxxEESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEED2Ev = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorISt5tupleIJxxxEESaIS2_EEmS4_ET_S6_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorISt5tupleIJxxxEESaIS2_EEmET_S6_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorISt5tupleIJxxxEESaIS4_EEmEET_S8_T0_ = comdat any

$_ZSt10_ConstructISt6vectorISt5tupleIJxxxEESaIS2_EEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorISt5tupleIJxxxEESaIS2_EEEPT_RS5_ = comdat any

$_ZSt8_DestroyIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvT_S6_ = comdat any

$_ZNSt6vectorISt5tupleIJxxxEESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5tupleIJxxxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEEC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJxxxEESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorISt5tupleIJxxxEESaIS2_EEEvPT_ = comdat any

$_ZNSt6vectorISt5tupleIJxxxEESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJxxxEES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJxxxEEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxxEEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE10deallocateEPS2_m = comdat any

$_ZNSaISt5tupleIJxxxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJxxxEESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE9constructIS1_JRxS5_RKxEEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_RKxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE9constructIS2_JRxS5_RKxEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJxxxEEC2IJRxS2_RKxEvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxEEC2IRxJS2_RKxEvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxEEC2IRxJRKxEvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm2EJxEEC2ERKx = comdat any

$_ZNSt10_Head_baseILm2ExLb0EEC2ERKx = comdat any

$_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxxEES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxEESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxxEEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxEEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt5tupleIJxxxEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt5tupleIJxxxEEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt5tupleIJxxxEEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxxxEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxxxEEEppEv = comdat any

$_ZSteqIPSt5tupleIJxxxEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxxxEEE4baseEv = comdat any

$_ZSt7forwardISt5tupleIJxxxEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5tupleIJxxxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxEEC2EOS0_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm1EJxxEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxEE7_M_headERS0_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm2EJxEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJxEEC2EOS0_ = comdat any

$_ZNSt10_Head_baseILm2ExLb0EEC2IxEEOT_ = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxxxEEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EEC2EOS6_ = comdat any

$_ZSt4moveIRSaISt6vectorISt5tupleIJxxxEESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implC2EOS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_ = comdat any

$_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_ = comdat any

$_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZSt8_DestroyIPSt6vectorISt5tupleIJxxxEESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EEC2EOS3_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZSt4swapIPSt4pairIxxEEvRT_S4_ = comdat any

$_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_ = comdat any

$_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_ = comdat any

$_ZNSt4pairIxxEaSEOS0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE = comdat any

$_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_ = comdat any

$_ZStgtIxxEbRKSt4pairIT_T0_ES5_ = comdat any

$_ZStltIxxEbRKSt4pairIT_T0_ES5_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxS5_EEEvDpOT_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxS5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxS5_EEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EES7_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE5frontEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5tupleIJxxxxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJxxxxEES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJxxxxEEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxxxEEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE10deallocateEPS2_m = comdat any

$_ZNSaISt5tupleIJxxxxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEED2Ev = comdat any

$_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8max_sizeEv = comdat any

$_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8capacityEv = comdat any

$_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_ = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8max_sizeEv = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8allocateEmPKv = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxxxEEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxxEEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt5tupleIJxxxxEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt5tupleIJxxxxEEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt5tupleIJxxxxEEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxxxxEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxxxxEEEppEv = comdat any

$_ZSteqIPSt5tupleIJxxxxEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxxxxEEE4baseEv = comdat any

$_ZSt7forwardISt5tupleIJxxxxEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5tupleIJxxxxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxxEEC2EOS0_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm1EJxxxEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxxEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxxEE7_M_headERS0_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm2EJxxEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxxEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJxxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxxEE7_M_headERS0_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm3EJxEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm2EJxxEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm3EJxEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJxxEE7_M_headERS0_ = comdat any

$_ZNSt11_Tuple_implILm3EJxEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm3ExLb0EEC2IxEEOT_ = comdat any

$_ZNSt10_Head_baseILm3ExLb0EE7_M_headERS0_ = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxxxxEEEC2ES2_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE9constructIS1_JRxS5_S5_S5_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_S5_S5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE9constructIS2_JRxS5_S5_S5_EEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJxxxxEEC2IJRxS2_S2_S2_EvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxxEEC2IRxJS2_S2_S2_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxxEEC2IRxJS2_S2_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm2EJxxEEC2IRxJS2_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm3EJxEEC2IRxEEOT_ = comdat any

$_ZNSt10_Head_baseILm2ExLb0EEC2IRxEEOT_ = comdat any

$_ZNSt10_Head_baseILm3ExLb0EEC2IRxEEOT_ = comdat any

$_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxxxEES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5tupleIJxxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt5tupleIJxxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEED2Ev = comdat any

$_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorISt5tupleIJxxEESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev = comdat any

$_ZNSt5tupleIJRxS0_S0_S0_EEC2ES0_S0_S0_S0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EEC2ES0_S0_S0_S0_ = comdat any

$_ZNSt11_Tuple_implILm1EJRxS0_S0_EEC2ES0_S0_S0_ = comdat any

$_ZNSt11_Tuple_implILm2EJRxS0_EEC2ES0_S0_ = comdat any

$_ZNSt11_Tuple_implILm3EJRxEEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm2ERxLb0EEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm3ERxLb0EEC2ES0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EEaSIJxxxxEEERS1_RKS_ILm0EJDpT_EE = comdat any

$_ZNSt11_Tuple_implILm0EJxxxxEE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxxxEE7_M_tailERKS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_tailERS1_ = comdat any

$_ZNSt11_Tuple_implILm1EJRxS0_S0_EEaSIJxxxEEERS1_RKS_ILm1EJDpT_EE = comdat any

$_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxxEE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJRxS0_S0_EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm1EJxxxEE7_M_tailERKS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJRxS0_S0_EE7_M_tailERS1_ = comdat any

$_ZNSt11_Tuple_implILm2EJRxS0_EEaSIJxxEEERS1_RKS_ILm2EJDpT_EE = comdat any

$_ZNSt10_Head_baseILm1ExLb0EE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJxxEE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJRxS0_EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm2EJxxEE7_M_tailERKS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJRxS0_EE7_M_tailERS1_ = comdat any

$_ZNSt11_Tuple_implILm3EJRxEEaSIxEERS1_RKS_ILm3EJT_EE = comdat any

$_ZNSt10_Head_baseILm2ExLb0EE7_M_headERKS0_ = comdat any

$_ZNSt10_Head_baseILm2ERxLb0EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm3EJxEE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm3EJRxEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm3ExLb0EE7_M_headERKS0_ = comdat any

$_ZNSt10_Head_baseILm3ERxLb0EE7_M_headERS1_ = comdat any

$_ZNSt16allocator_traitsISaIxEE9constructIxJRxEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRxEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_ = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxS0_EEaSIJxxEEERS1_RKS_ILm0EJDpT_EE = comdat any

$_ZNSt11_Tuple_implILm0EJxxEE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxxEE7_M_tailERKS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJRxEEaSIxEERS1_RKS_ILm1EJT_EE = comdat any

$_ZNSt11_Tuple_implILm1EJxEE7_M_headERKS0_ = comdat any

$_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EOS1_ = comdat any

$_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapIPxEvRT_S2_ = comdat any

$_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [100 x i8] c"\E3\82\B0\E3\83\A9\E3\83\95\E3\81\AE\E8\BE\BA\E3\81\AE\E8\A6\81\E7\B4\A0\E6\95\B0\E3\81\A8\E8\BE\BA\E3\81\AE\E9\95\B7\E3\81\95\E3\81\AE\E8\A6\81\E7\B4\A0\E6\95\B0\E3\81\AF\E4\B8\80\E8\87\B4\E3\81\97\E3\81\A6\E3\81\84\E3\82\8B\E5\BF\85\E8\A6\81\E3\81\8C\E3\81\82\E3\82\8A\E3\81\BE\E3\81\99\E3\80\82\00", align 1
@_ZTISt13runtime_error = external constant i8*
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str.1 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"vector::reserve\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s342357335.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0
@x.927 = common global i32 0
@y.928 = common global i32 0
@x.929 = common global i32 0
@y.930 = common global i32 0
@x.931 = common global i32 0
@y.932 = common global i32 0
@x.933 = common global i32 0
@y.934 = common global i32 0
@x.935 = common global i32 0
@y.936 = common global i32 0
@x.937 = common global i32 0
@y.938 = common global i32 0
@x.939 = common global i32 0
@y.940 = common global i32 0
@x.941 = common global i32 0
@y.942 = common global i32 0
@x.943 = common global i32 0
@y.944 = common global i32 0
@x.945 = common global i32 0
@y.946 = common global i32 0
@x.947 = common global i32 0
@y.948 = common global i32 0
@x.949 = common global i32 0
@y.950 = common global i32 0
@x.951 = common global i32 0
@y.952 = common global i32 0
@x.953 = common global i32 0
@y.954 = common global i32 0
@x.955 = common global i32 0
@y.956 = common global i32 0
@x.957 = common global i32 0
@y.958 = common global i32 0
@x.959 = common global i32 0
@y.960 = common global i32 0
@x.961 = common global i32 0
@y.962 = common global i32 0
@x.963 = common global i32 0
@y.964 = common global i32 0
@x.965 = common global i32 0
@y.966 = common global i32 0
@x.967 = common global i32 0
@y.968 = common global i32 0
@x.969 = common global i32 0
@y.970 = common global i32 0
@x.971 = common global i32 0
@y.972 = common global i32 0
@x.973 = common global i32 0
@y.974 = common global i32 0
@x.975 = common global i32 0
@y.976 = common global i32 0
@x.977 = common global i32 0
@y.978 = common global i32 0
@x.979 = common global i32 0
@y.980 = common global i32 0
@x.981 = common global i32 0
@y.982 = common global i32 0
@x.983 = common global i32 0
@y.984 = common global i32 0
@x.985 = common global i32 0
@y.986 = common global i32 0
@x.987 = common global i32 0
@y.988 = common global i32 0
@x.989 = common global i32 0
@y.990 = common global i32 0
@x.991 = common global i32 0
@y.992 = common global i32 0
@x.993 = common global i32 0
@y.994 = common global i32 0
@x.995 = common global i32 0
@y.996 = common global i32 0
@x.997 = common global i32 0
@y.998 = common global i32 0
@x.999 = common global i32 0
@y.1000 = common global i32 0
@x.1001 = common global i32 0
@y.1002 = common global i32 0
@x.1003 = common global i32 0
@y.1004 = common global i32 0
@x.1005 = common global i32 0
@y.1006 = common global i32 0
@x.1007 = common global i32 0
@y.1008 = common global i32 0
@x.1009 = common global i32 0
@y.1010 = common global i32 0
@x.1011 = common global i32 0
@y.1012 = common global i32 0
@x.1013 = common global i32 0
@y.1014 = common global i32 0
@x.1015 = common global i32 0
@y.1016 = common global i32 0
@x.1017 = common global i32 0
@y.1018 = common global i32 0
@x.1019 = common global i32 0
@y.1020 = common global i32 0
@x.1021 = common global i32 0
@y.1022 = common global i32 0
@x.1023 = common global i32 0
@y.1024 = common global i32 0
@x.1025 = common global i32 0
@y.1026 = common global i32 0
@x.1027 = common global i32 0
@y.1028 = common global i32 0
@x.1029 = common global i32 0
@y.1030 = common global i32 0
@x.1031 = common global i32 0
@y.1032 = common global i32 0
@x.1033 = common global i32 0
@y.1034 = common global i32 0
@x.1035 = common global i32 0
@y.1036 = common global i32 0
@x.1037 = common global i32 0
@y.1038 = common global i32 0
@x.1039 = common global i32 0
@y.1040 = common global i32 0
@x.1041 = common global i32 0
@y.1042 = common global i32 0
@x.1043 = common global i32 0
@y.1044 = common global i32 0
@x.1045 = common global i32 0
@y.1046 = common global i32 0
@x.1047 = common global i32 0
@y.1048 = common global i32 0
@x.1049 = common global i32 0
@y.1050 = common global i32 0
@x.1051 = common global i32 0
@y.1052 = common global i32 0
@x.1053 = common global i32 0
@y.1054 = common global i32 0
@x.1055 = common global i32 0
@y.1056 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define void @_Z8dijkstraRK5GraphRKSt6vectorIxSaIxEEx(%"struct.std::pair.5"* noalias sret, %struct.Graph* dereferenceable(32), %"class.std::vector.0"* dereferenceable(24), i64) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.3
  %6 = load i32, i32* @y.4
  %7 = sub i32 %5, -2056192766
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2056192766
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %904

; <label>:31:                                     ; preds = %4, %904
  %32 = alloca %struct.Graph*, align 8
  %33 = alloca %"class.std::vector.0"*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = alloca %"class.std::vector.6", align 8
  %38 = alloca %"class.std::priority_queue", align 8
  %39 = alloca %"struct.std::greater", align 1
  %40 = alloca %"class.std::vector", align 8
  %41 = alloca %"class.std::vector.0", align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::allocator.2", align 1
  %44 = alloca %"class.std::vector.0", align 8
  %45 = alloca i64, align 8
  %46 = alloca %"class.std::allocator.2", align 1
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca %"class.std::tuple.20", align 8
  %50 = alloca %"class.std::vector.11"*, align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %53 = alloca %"class.std::tuple"*, align 8
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  store %struct.Graph* %1, %struct.Graph** %32, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %33, align 8
  store i64 %3, i64* %34, align 8
  %57 = load %struct.Graph*, %struct.Graph** %32, align 8
  %58 = getelementptr inbounds %struct.Graph, %struct.Graph* %57, i32 0, i32 1
  %59 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %58) #3
  %60 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %61 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %60) #3
  %62 = icmp ne i64 %59, %61
  %63 = load i32, i32* @x.3
  %64 = load i32, i32* @y.4
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %904

; <label>:76:                                     ; preds = %31
  br i1 %62, label %77, label %168

; <label>:77:                                     ; preds = %76
  %78 = load i32, i32* @x.3
  %79 = load i32, i32* @y.4
  %80 = add i32 %78, 713996297
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 713996297
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %936

; <label>:104:                                    ; preds = %77, %936
  %105 = call i8* @__cxa_allocate_exception(i64 16) #3
  %106 = bitcast i8* %105 to %"class.std::runtime_error"*
  %107 = load i32, i32* @x.3
  %108 = load i32, i32* @y.4
  %109 = sub i32 %107, -1586187917
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -1586187917
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %936

; <label>:121:                                    ; preds = %104
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* %106, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str, i32 0, i32 0))
          to label %122 unwind label %123

; <label>:122:                                    ; preds = %121
  call void @__cxa_throw(i8* %105, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #12
  unreachable

; <label>:123:                                    ; preds = %121
  %124 = load i32, i32* @x.3
  %125 = load i32, i32* @y.4
  %126 = sub i32 0, 1
  %127 = add i32 %124, %126
  %128 = sub i32 %124, 1
  %129 = mul i32 %124, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %125, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 false, true
  %136 = and i1 %133, false
  %137 = and i1 %131, %135
  %138 = and i1 %134, false
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 false, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  br i1 %147, label %149, label %939

; <label>:149:                                    ; preds = %123, %939
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %35, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %36, align 4
  call void @__cxa_free_exception(i8* %105) #3
  %153 = load i32, i32* @x.3
  %154 = load i32, i32* @y.4
  %155 = sub i32 %153, 844157763
  %156 = sub i32 %155, 1
  %157 = add i32 %156, 844157763
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %939

; <label>:167:                                    ; preds = %149
  br label %858

; <label>:168:                                    ; preds = %76
  %169 = load i32, i32* @x.3
  %170 = load i32, i32* @y.4
  %171 = sub i32 %169, -1468582658
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -1468582658
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %943

; <label>:183:                                    ; preds = %168, %943
  %184 = load %struct.Graph*, %struct.Graph** %32, align 8
  %185 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  call void @_ZNK5Graph18get_adjacency_listIxEESt6vectorIS1_ISt5tupleIJxxT_EESaIS4_EESaIS6_EERKS1_IS3_SaIS3_EE(%"class.std::vector.6"* sret %37, %struct.Graph* %184, %"class.std::vector.0"* dereferenceable(24) %185)
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector"* %40) #3
  %186 = load i32, i32* @x.3
  %187 = load i32, i32* @y.4
  %188 = sub i32 %186, 1011056336
  %189 = sub i32 %188, 1
  %190 = add i32 %189, 1011056336
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %943

; <label>:200:                                    ; preds = %183
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"* %38, %"struct.std::greater"* dereferenceable(1) %39, %"class.std::vector"* dereferenceable(24) %40)
          to label %201 unwind label %440

; <label>:201:                                    ; preds = %200
  %202 = load i32, i32* @x.3
  %203 = load i32, i32* @y.4
  %204 = sub i32 0, 1
  %205 = add i32 %202, %204
  %206 = sub i32 %202, 1
  %207 = mul i32 %202, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %203, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  br i1 %213, label %215, label %946

; <label>:215:                                    ; preds = %201, %946
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector"* %40) #3
  %216 = load %struct.Graph*, %struct.Graph** %32, align 8
  %217 = getelementptr inbounds %struct.Graph, %struct.Graph* %216, i32 0, i32 0
  %218 = load i64, i64* %217, align 8
  store i64 1152921504606846976, i64* %42, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %43) #3
  %219 = load i32, i32* @x.3
  %220 = load i32, i32* @y.4
  %221 = sub i32 0, 1
  %222 = add i32 %219, %221
  %223 = sub i32 %219, 1
  %224 = mul i32 %219, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %220, 10
  %228 = and i1 %226, %227
  %229 = xor i1 %226, %227
  %230 = or i1 %228, %229
  %231 = or i1 %226, %227
  br i1 %230, label %232, label %946

; <label>:232:                                    ; preds = %215
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.0"* %41, i64 %218, i64* dereferenceable(8) %42, %"class.std::allocator.2"* dereferenceable(1) %43)
          to label %233 unwind label %444

; <label>:233:                                    ; preds = %232
  %234 = load i32, i32* @x.3
  %235 = load i32, i32* @y.4
  %236 = sub i32 %234, -1610990002
  %237 = sub i32 %236, 1
  %238 = add i32 %237, -1610990002
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = xor i1 %242, true
  %245 = xor i1 %243, true
  %246 = xor i1 true, true
  %247 = and i1 %244, true
  %248 = and i1 %242, %246
  %249 = and i1 %245, true
  %250 = and i1 %243, %246
  %251 = or i1 %247, %248
  %252 = or i1 %249, %250
  %253 = xor i1 %251, %252
  %254 = or i1 %244, %245
  %255 = xor i1 %254, true
  %256 = or i1 true, %246
  %257 = and i1 %255, %256
  %258 = or i1 %253, %257
  %259 = or i1 %242, %243
  br i1 %258, label %260, label %950

; <label>:260:                                    ; preds = %233, %950
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %43) #3
  %261 = load %struct.Graph*, %struct.Graph** %32, align 8
  %262 = getelementptr inbounds %struct.Graph, %struct.Graph* %261, i32 0, i32 0
  %263 = load i64, i64* %262, align 8
  store i64 -1, i64* %45, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %46) #3
  %264 = load i32, i32* @x.3
  %265 = load i32, i32* @y.4
  %266 = sub i32 %264, 648597819
  %267 = sub i32 %266, 1
  %268 = add i32 %267, 648597819
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 false, true
  %277 = and i1 %274, false
  %278 = and i1 %272, %276
  %279 = and i1 %275, false
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 false, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  br i1 %288, label %290, label %950

; <label>:290:                                    ; preds = %260
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.0"* %44, i64 %263, i64* dereferenceable(8) %45, %"class.std::allocator.2"* dereferenceable(1) %46)
          to label %291 unwind label %448

; <label>:291:                                    ; preds = %290
  %292 = load i32, i32* @x.3
  %293 = load i32, i32* @y.4
  %294 = sub i32 %292, -300497000
  %295 = sub i32 %294, 1
  %296 = add i32 %295, -300497000
  %297 = sub i32 %292, 1
  %298 = mul i32 %292, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %293, 10
  %302 = xor i1 %300, true
  %303 = xor i1 %301, true
  %304 = xor i1 true, true
  %305 = and i1 %302, true
  %306 = and i1 %300, %304
  %307 = and i1 %303, true
  %308 = and i1 %301, %304
  %309 = or i1 %305, %306
  %310 = or i1 %307, %308
  %311 = xor i1 %309, %310
  %312 = or i1 %302, %303
  %313 = xor i1 %312, true
  %314 = or i1 true, %304
  %315 = and i1 %313, %314
  %316 = or i1 %311, %315
  %317 = or i1 %300, %301
  br i1 %316, label %318, label %954

; <label>:318:                                    ; preds = %291, %954
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %46) #3
  %319 = load i64, i64* %34, align 8
  %320 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %319) #3
  store i64 0, i64* %320, align 8
  %321 = load i64, i64* %34, align 8
  %322 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %321) #3
  %323 = load i32, i32* @x.3
  %324 = load i32, i32* @y.4
  %325 = sub i32 %323, -2142576949
  %326 = sub i32 %325, 1
  %327 = add i32 %326, -2142576949
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = and i1 %331, %332
  %334 = xor i1 %331, %332
  %335 = or i1 %333, %334
  %336 = or i1 %331, %332
  br i1 %335, label %337, label %954

; <label>:337:                                    ; preds = %318
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxS9_EEEvDpOT_(%"class.std::priority_queue"* %38, i64* dereferenceable(8) %322, i64* dereferenceable(8) %34)
          to label %338 unwind label %452

; <label>:338:                                    ; preds = %337
  %339 = load i64, i64* %34, align 8
  %340 = load i64, i64* %34, align 8
  %341 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %44, i64 %340) #3
  store i64 %339, i64* %341, align 8
  br label %342

; <label>:342:                                    ; preds = %634, %439, %338
  %343 = load i32, i32* @x.3
  %344 = load i32, i32* @y.4
  %345 = add i32 %343, 1541621707
  %346 = sub i32 %345, 1
  %347 = sub i32 %346, 1541621707
  %348 = sub i32 %343, 1
  %349 = mul i32 %343, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %344, 10
  %353 = and i1 %351, %352
  %354 = xor i1 %351, %352
  %355 = or i1 %353, %354
  %356 = or i1 %351, %352
  br i1 %355, label %357, label %959

; <label>:357:                                    ; preds = %342, %959
  %358 = load i32, i32* @x.3
  %359 = load i32, i32* @y.4
  %360 = sub i32 0, 1
  %361 = add i32 %358, %360
  %362 = sub i32 %358, 1
  %363 = mul i32 %358, %361
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %359, 10
  %367 = and i1 %365, %366
  %368 = xor i1 %365, %366
  %369 = or i1 %367, %368
  %370 = or i1 %365, %366
  br i1 %369, label %371, label %959

; <label>:371:                                    ; preds = %357
  %372 = invoke zeroext i1 @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv(%"class.std::priority_queue"* %38)
          to label %373 unwind label %452

; <label>:373:                                    ; preds = %371
  %374 = xor i1 %372, true
  %375 = and i1 true, %374
  %376 = xor i1 true, true
  %377 = and i1 %372, %376
  %378 = or i1 %375, %377
  %379 = xor i1 %372, true
  br i1 %378, label %380, label %635

; <label>:380:                                    ; preds = %373
  %381 = invoke dereferenceable(16) %"struct.std::pair"* @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv(%"class.std::priority_queue"* %38)
          to label %382 unwind label %452

; <label>:382:                                    ; preds = %380
  %383 = call { i64*, i64* } @_ZSt3tieIJxxEESt5tupleIJDpRT_EES3_(i64* dereferenceable(8) %47, i64* dereferenceable(8) %48) #3
  %384 = getelementptr inbounds %"class.std::tuple.20", %"class.std::tuple.20"* %49, i32 0, i32 0
  %385 = bitcast %"struct.std::_Tuple_impl.21"* %384 to { i64*, i64* }*
  %386 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %385, i32 0, i32 0
  %387 = extractvalue { i64*, i64* } %383, 0
  store i64* %387, i64** %386, align 8
  %388 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %385, i32 0, i32 1
  %389 = extractvalue { i64*, i64* } %383, 1
  store i64* %389, i64** %388, align 8
  %390 = invoke dereferenceable(16) %"class.std::tuple.20"* @_ZNSt5tupleIJRxS0_EEaSIxxEERS1_RKSt4pairIT_T0_E(%"class.std::tuple.20"* %49, %"struct.std::pair"* dereferenceable(16) %381)
          to label %391 unwind label %452

; <label>:391:                                    ; preds = %382
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv(%"class.std::priority_queue"* %38)
          to label %392 unwind label %452

; <label>:392:                                    ; preds = %391
  %393 = load i32, i32* @x.3
  %394 = load i32, i32* @y.4
  %395 = add i32 %393, 1072993884
  %396 = sub i32 %395, 1
  %397 = sub i32 %396, 1072993884
  %398 = sub i32 %393, 1
  %399 = mul i32 %393, %397
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %394, 10
  %403 = and i1 %401, %402
  %404 = xor i1 %401, %402
  %405 = or i1 %403, %404
  %406 = or i1 %401, %402
  br i1 %405, label %407, label %960

; <label>:407:                                    ; preds = %392, %960
  %408 = load i64, i64* %48, align 8
  %409 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %408) #3
  %410 = load i64, i64* %409, align 8
  %411 = load i64, i64* %47, align 8
  %412 = icmp slt i64 %410, %411
  %413 = load i32, i32* @x.3
  %414 = load i32, i32* @y.4
  %415 = sub i32 0, 1
  %416 = add i32 %413, %415
  %417 = sub i32 %413, 1
  %418 = mul i32 %413, %416
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %414, 10
  %422 = xor i1 %420, true
  %423 = xor i1 %421, true
  %424 = xor i1 false, true
  %425 = and i1 %422, false
  %426 = and i1 %420, %424
  %427 = and i1 %423, false
  %428 = and i1 %421, %424
  %429 = or i1 %425, %426
  %430 = or i1 %427, %428
  %431 = xor i1 %429, %430
  %432 = or i1 %422, %423
  %433 = xor i1 %432, true
  %434 = or i1 false, %424
  %435 = and i1 %433, %434
  %436 = or i1 %431, %435
  %437 = or i1 %420, %421
  br i1 %436, label %438, label %960

; <label>:438:                                    ; preds = %407
  br i1 %412, label %439, label %498

; <label>:439:                                    ; preds = %438
  br label %342

; <label>:440:                                    ; preds = %200
  %441 = landingpad { i8*, i32 }
          cleanup
  %442 = extractvalue { i8*, i32 } %441, 0
  store i8* %442, i8** %35, align 8
  %443 = extractvalue { i8*, i32 } %441, 1
  store i32 %443, i32* %36, align 4
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector"* %40) #3
  br label %857

; <label>:444:                                    ; preds = %232
  %445 = landingpad { i8*, i32 }
          cleanup
  %446 = extractvalue { i8*, i32 } %445, 0
  store i8* %446, i8** %35, align 8
  %447 = extractvalue { i8*, i32 } %445, 1
  store i32 %447, i32* %36, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %43) #3
  br label %856

; <label>:448:                                    ; preds = %290
  %449 = landingpad { i8*, i32 }
          cleanup
  %450 = extractvalue { i8*, i32 } %449, 0
  store i8* %450, i8** %35, align 8
  %451 = extractvalue { i8*, i32 } %449, 1
  store i32 %451, i32* %36, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %46) #3
  br label %813

; <label>:452:                                    ; preds = %811, %529, %391, %382, %380, %371, %337
  %453 = load i32, i32* @x.3
  %454 = load i32, i32* @y.4
  %455 = add i32 %453, -630827139
  %456 = sub i32 %455, 1
  %457 = sub i32 %456, -630827139
  %458 = sub i32 %453, 1
  %459 = mul i32 %453, %457
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %454, 10
  %463 = and i1 %461, %462
  %464 = xor i1 %461, %462
  %465 = or i1 %463, %464
  %466 = or i1 %461, %462
  br i1 %465, label %467, label %966

; <label>:467:                                    ; preds = %452, %966
  %468 = landingpad { i8*, i32 }
          cleanup
  %469 = extractvalue { i8*, i32 } %468, 0
  store i8* %469, i8** %35, align 8
  %470 = extractvalue { i8*, i32 } %468, 1
  store i32 %470, i32* %36, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %44) #3
  %471 = load i32, i32* @x.3
  %472 = load i32, i32* @y.4
  %473 = sub i32 %471, -817817478
  %474 = sub i32 %473, 1
  %475 = add i32 %474, -817817478
  %476 = sub i32 %471, 1
  %477 = mul i32 %471, %475
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %472, 10
  %481 = xor i1 %479, true
  %482 = xor i1 %480, true
  %483 = xor i1 false, true
  %484 = and i1 %481, false
  %485 = and i1 %479, %483
  %486 = and i1 %482, false
  %487 = and i1 %480, %483
  %488 = or i1 %484, %485
  %489 = or i1 %486, %487
  %490 = xor i1 %488, %489
  %491 = or i1 %481, %482
  %492 = xor i1 %491, true
  %493 = or i1 false, %483
  %494 = and i1 %492, %493
  %495 = or i1 %490, %494
  %496 = or i1 %479, %480
  br i1 %495, label %497, label %966

; <label>:497:                                    ; preds = %467
  br label %813

; <label>:498:                                    ; preds = %438
  %499 = load i64, i64* %48, align 8
  %500 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEixEm(%"class.std::vector.6"* %37, i64 %499) #3
  store %"class.std::vector.11"* %500, %"class.std::vector.11"** %50, align 8
  %501 = load %"class.std::vector.11"*, %"class.std::vector.11"** %50, align 8
  %502 = call %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE5beginEv(%"class.std::vector.11"* %501) #3
  %503 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %51, i32 0, i32 0
  store %"class.std::tuple"* %502, %"class.std::tuple"** %503, align 8
  %504 = load %"class.std::vector.11"*, %"class.std::vector.11"** %50, align 8
  %505 = call %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE3endEv(%"class.std::vector.11"* %504) #3
  %506 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  store %"class.std::tuple"* %505, %"class.std::tuple"** %506, align 8
  br label %507

; <label>:507:                                    ; preds = %633, %498
  %508 = call zeroext i1 @_ZN9__gnu_cxxneIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %51, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %52) #3
  br i1 %508, label %509, label %634

; <label>:509:                                    ; preds = %507
  %510 = call dereferenceable(24) %"class.std::tuple"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %51) #3
  store %"class.std::tuple"* %510, %"class.std::tuple"** %53, align 8
  %511 = load %"class.std::tuple"*, %"class.std::tuple"** %53, align 8
  %512 = call dereferenceable(8) i64* @_ZSt3getILm1EJxxxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS4_(%"class.std::tuple"* dereferenceable(24) %511) #3
  %513 = load i64, i64* %512, align 8
  store i64 %513, i64* %54, align 8
  %514 = load %"class.std::tuple"*, %"class.std::tuple"** %53, align 8
  %515 = call dereferenceable(8) i64* @_ZSt3getILm2EJxxxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS4_(%"class.std::tuple"* dereferenceable(24) %514) #3
  %516 = load i64, i64* %515, align 8
  store i64 %516, i64* %55, align 8
  %517 = load i64, i64* %54, align 8
  %518 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %517) #3
  %519 = load i64, i64* %518, align 8
  %520 = load i64, i64* %48, align 8
  %521 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %520) #3
  %522 = load i64, i64* %521, align 8
  %523 = load i64, i64* %55, align 8
  %524 = sub i64 %522, -5964875752257625406
  %525 = add i64 %524, %523
  %526 = add i64 %525, -5964875752257625406
  %527 = add nsw i64 %522, %523
  %528 = icmp sgt i64 %519, %526
  br i1 %528, label %529, label %589

; <label>:529:                                    ; preds = %509
  %530 = load i64, i64* %48, align 8
  %531 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %530) #3
  %532 = load i64, i64* %531, align 8
  %533 = load i64, i64* %55, align 8
  %534 = sub i64 0, %532
  %535 = sub i64 0, %533
  %536 = add i64 %534, %535
  %537 = sub i64 0, %536
  %538 = add nsw i64 %532, %533
  %539 = load i64, i64* %54, align 8
  %540 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %539) #3
  store i64 %537, i64* %540, align 8
  %541 = load i64, i64* %54, align 8
  %542 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %541) #3
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxS9_EEEvDpOT_(%"class.std::priority_queue"* %38, i64* dereferenceable(8) %542, i64* dereferenceable(8) %54)
          to label %543 unwind label %452

; <label>:543:                                    ; preds = %529
  %544 = load i32, i32* @x.3
  %545 = load i32, i32* @y.4
  %546 = add i32 %544, 235893673
  %547 = sub i32 %546, 1
  %548 = sub i32 %547, 235893673
  %549 = sub i32 %544, 1
  %550 = mul i32 %544, %548
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %545, 10
  %554 = xor i1 %552, true
  %555 = xor i1 %553, true
  %556 = xor i1 true, true
  %557 = and i1 %554, true
  %558 = and i1 %552, %556
  %559 = and i1 %555, true
  %560 = and i1 %553, %556
  %561 = or i1 %557, %558
  %562 = or i1 %559, %560
  %563 = xor i1 %561, %562
  %564 = or i1 %554, %555
  %565 = xor i1 %564, true
  %566 = or i1 true, %556
  %567 = and i1 %565, %566
  %568 = or i1 %563, %567
  %569 = or i1 %552, %553
  br i1 %568, label %570, label %970

; <label>:570:                                    ; preds = %543, %970
  %571 = load i64, i64* %48, align 8
  %572 = load i64, i64* %54, align 8
  %573 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %44, i64 %572) #3
  store i64 %571, i64* %573, align 8
  %574 = load i32, i32* @x.3
  %575 = load i32, i32* @y.4
  %576 = sub i32 %574, 854892508
  %577 = sub i32 %576, 1
  %578 = add i32 %577, 854892508
  %579 = sub i32 %574, 1
  %580 = mul i32 %574, %578
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %575, 10
  %584 = and i1 %582, %583
  %585 = xor i1 %582, %583
  %586 = or i1 %584, %585
  %587 = or i1 %582, %583
  br i1 %586, label %588, label %970

; <label>:588:                                    ; preds = %570
  br label %589

; <label>:589:                                    ; preds = %588, %509
  br label %590

; <label>:590:                                    ; preds = %589
  %591 = load i32, i32* @x.3
  %592 = load i32, i32* @y.4
  %593 = sub i32 %591, -1981858025
  %594 = sub i32 %593, 1
  %595 = add i32 %594, -1981858025
  %596 = sub i32 %591, 1
  %597 = mul i32 %591, %595
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %592, 10
  %601 = and i1 %599, %600
  %602 = xor i1 %599, %600
  %603 = or i1 %601, %602
  %604 = or i1 %599, %600
  br i1 %603, label %605, label %974

; <label>:605:                                    ; preds = %590, %974
  %606 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %51) #3
  %607 = load i32, i32* @x.3
  %608 = load i32, i32* @y.4
  %609 = add i32 %607, 151003793
  %610 = sub i32 %609, 1
  %611 = sub i32 %610, 151003793
  %612 = sub i32 %607, 1
  %613 = mul i32 %607, %611
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %608, 10
  %617 = xor i1 %615, true
  %618 = xor i1 %616, true
  %619 = xor i1 false, true
  %620 = and i1 %617, false
  %621 = and i1 %615, %619
  %622 = and i1 %618, false
  %623 = and i1 %616, %619
  %624 = or i1 %620, %621
  %625 = or i1 %622, %623
  %626 = xor i1 %624, %625
  %627 = or i1 %617, %618
  %628 = xor i1 %627, true
  %629 = or i1 false, %619
  %630 = and i1 %628, %629
  %631 = or i1 %626, %630
  %632 = or i1 %615, %616
  br i1 %631, label %633, label %974

; <label>:633:                                    ; preds = %605
  br label %507

; <label>:634:                                    ; preds = %507
  br label %342

; <label>:635:                                    ; preds = %373
  %636 = load i32, i32* @x.3
  %637 = load i32, i32* @y.4
  %638 = sub i32 0, 1
  %639 = add i32 %636, %638
  %640 = sub i32 %636, 1
  %641 = mul i32 %636, %639
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %637, 10
  %645 = and i1 %643, %644
  %646 = xor i1 %643, %644
  %647 = or i1 %645, %646
  %648 = or i1 %643, %644
  br i1 %647, label %649, label %976

; <label>:649:                                    ; preds = %635, %976
  store i64 0, i64* %56, align 8
  %650 = load i32, i32* @x.3
  %651 = load i32, i32* @y.4
  %652 = sub i32 %650, 1494544635
  %653 = sub i32 %652, 1
  %654 = add i32 %653, 1494544635
  %655 = sub i32 %650, 1
  %656 = mul i32 %650, %654
  %657 = urem i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = icmp slt i32 %651, 10
  %660 = and i1 %658, %659
  %661 = xor i1 %658, %659
  %662 = or i1 %660, %661
  %663 = or i1 %658, %659
  br i1 %662, label %664, label %976

; <label>:664:                                    ; preds = %649
  br label %665

; <label>:665:                                    ; preds = %768, %664
  %666 = load i32, i32* @x.3
  %667 = load i32, i32* @y.4
  %668 = add i32 %666, -1762135324
  %669 = sub i32 %668, 1
  %670 = sub i32 %669, -1762135324
  %671 = sub i32 %666, 1
  %672 = mul i32 %666, %670
  %673 = urem i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %667, 10
  %676 = xor i1 %674, true
  %677 = xor i1 %675, true
  %678 = xor i1 false, true
  %679 = and i1 %676, false
  %680 = and i1 %674, %678
  %681 = and i1 %677, false
  %682 = and i1 %675, %678
  %683 = or i1 %679, %680
  %684 = or i1 %681, %682
  %685 = xor i1 %683, %684
  %686 = or i1 %676, %677
  %687 = xor i1 %686, true
  %688 = or i1 false, %678
  %689 = and i1 %687, %688
  %690 = or i1 %685, %689
  %691 = or i1 %674, %675
  br i1 %690, label %692, label %977

; <label>:692:                                    ; preds = %665, %977
  %693 = load i64, i64* %56, align 8
  %694 = load %struct.Graph*, %struct.Graph** %32, align 8
  %695 = getelementptr inbounds %struct.Graph, %struct.Graph* %694, i32 0, i32 0
  %696 = load i64, i64* %695, align 8
  %697 = icmp slt i64 %693, %696
  %698 = load i32, i32* @x.3
  %699 = load i32, i32* @y.4
  %700 = sub i32 0, 1
  %701 = add i32 %698, %700
  %702 = sub i32 %698, 1
  %703 = mul i32 %698, %701
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %699, 10
  %707 = and i1 %705, %706
  %708 = xor i1 %705, %706
  %709 = or i1 %707, %708
  %710 = or i1 %705, %706
  br i1 %709, label %711, label %977

; <label>:711:                                    ; preds = %692
  br i1 %697, label %712, label %769

; <label>:712:                                    ; preds = %711
  %713 = load i64, i64* %56, align 8
  %714 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %44, i64 %713) #3
  %715 = load i64, i64* %714, align 8
  %716 = icmp eq i64 %715, -1
  br i1 %716, label %717, label %720

; <label>:717:                                    ; preds = %712
  %718 = load i64, i64* %56, align 8
  %719 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %718) #3
  store i64 -1, i64* %719, align 8
  br label %720

; <label>:720:                                    ; preds = %717, %712
  br label %721

; <label>:721:                                    ; preds = %720
  %722 = load i32, i32* @x.3
  %723 = load i32, i32* @y.4
  %724 = add i32 %722, 53613811
  %725 = sub i32 %724, 1
  %726 = sub i32 %725, 53613811
  %727 = sub i32 %722, 1
  %728 = mul i32 %722, %726
  %729 = urem i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %723, 10
  %732 = and i1 %730, %731
  %733 = xor i1 %730, %731
  %734 = or i1 %732, %733
  %735 = or i1 %730, %731
  br i1 %734, label %736, label %983

; <label>:736:                                    ; preds = %721, %983
  %737 = load i64, i64* %56, align 8
  %738 = sub i64 %737, -9066074466310436803
  %739 = add i64 %738, 1
  %740 = add i64 %739, -9066074466310436803
  %741 = add nsw i64 %737, 1
  store i64 %740, i64* %56, align 8
  %742 = load i32, i32* @x.3
  %743 = load i32, i32* @y.4
  %744 = add i32 %742, 1545849137
  %745 = sub i32 %744, 1
  %746 = sub i32 %745, 1545849137
  %747 = sub i32 %742, 1
  %748 = mul i32 %742, %746
  %749 = urem i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = icmp slt i32 %743, 10
  %752 = xor i1 %750, true
  %753 = xor i1 %751, true
  %754 = xor i1 true, true
  %755 = and i1 %752, true
  %756 = and i1 %750, %754
  %757 = and i1 %753, true
  %758 = and i1 %751, %754
  %759 = or i1 %755, %756
  %760 = or i1 %757, %758
  %761 = xor i1 %759, %760
  %762 = or i1 %752, %753
  %763 = xor i1 %762, true
  %764 = or i1 true, %754
  %765 = and i1 %763, %764
  %766 = or i1 %761, %765
  %767 = or i1 %750, %751
  br i1 %766, label %768, label %983

; <label>:768:                                    ; preds = %736
  br label %665

; <label>:769:                                    ; preds = %711
  %770 = load i32, i32* @x.3
  %771 = load i32, i32* @y.4
  %772 = sub i32 %770, 18892137
  %773 = sub i32 %772, 1
  %774 = add i32 %773, 18892137
  %775 = sub i32 %770, 1
  %776 = mul i32 %770, %774
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %771, 10
  %780 = and i1 %778, %779
  %781 = xor i1 %778, %779
  %782 = or i1 %780, %781
  %783 = or i1 %778, %779
  br i1 %782, label %784, label %1006

; <label>:784:                                    ; preds = %769, %1006
  %785 = load i32, i32* @x.3
  %786 = load i32, i32* @y.4
  %787 = add i32 %785, 242685105
  %788 = sub i32 %787, 1
  %789 = sub i32 %788, 242685105
  %790 = sub i32 %785, 1
  %791 = mul i32 %785, %789
  %792 = urem i32 %791, 2
  %793 = icmp eq i32 %792, 0
  %794 = icmp slt i32 %786, 10
  %795 = xor i1 %793, true
  %796 = xor i1 %794, true
  %797 = xor i1 false, true
  %798 = and i1 %795, false
  %799 = and i1 %793, %797
  %800 = and i1 %796, false
  %801 = and i1 %794, %797
  %802 = or i1 %798, %799
  %803 = or i1 %800, %801
  %804 = xor i1 %802, %803
  %805 = or i1 %795, %796
  %806 = xor i1 %805, true
  %807 = or i1 false, %797
  %808 = and i1 %806, %807
  %809 = or i1 %804, %808
  %810 = or i1 %793, %794
  br i1 %809, label %811, label %1006

; <label>:811:                                    ; preds = %784
  invoke void @_ZNSt4pairISt6vectorIxSaIxEES2_EC2IRS2_S5_vEEOT_OT0_(%"struct.std::pair.5"* %0, %"class.std::vector.0"* dereferenceable(24) %41, %"class.std::vector.0"* dereferenceable(24) %44)
          to label %812 unwind label %452

; <label>:812:                                    ; preds = %811
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %44) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %41) #3
  call void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %38) #3
  call void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EED2Ev(%"class.std::vector.6"* %37) #3
  ret void

; <label>:813:                                    ; preds = %497, %448
  %814 = load i32, i32* @x.3
  %815 = load i32, i32* @y.4
  %816 = add i32 %814, -1935179152
  %817 = sub i32 %816, 1
  %818 = sub i32 %817, -1935179152
  %819 = sub i32 %814, 1
  %820 = mul i32 %814, %818
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %815, 10
  %824 = xor i1 %822, true
  %825 = xor i1 %823, true
  %826 = xor i1 false, true
  %827 = and i1 %824, false
  %828 = and i1 %822, %826
  %829 = and i1 %825, false
  %830 = and i1 %823, %826
  %831 = or i1 %827, %828
  %832 = or i1 %829, %830
  %833 = xor i1 %831, %832
  %834 = or i1 %824, %825
  %835 = xor i1 %834, true
  %836 = or i1 false, %826
  %837 = and i1 %835, %836
  %838 = or i1 %833, %837
  %839 = or i1 %822, %823
  br i1 %838, label %840, label %1007

; <label>:840:                                    ; preds = %813, %1007
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %41) #3
  %841 = load i32, i32* @x.3
  %842 = load i32, i32* @y.4
  %843 = add i32 %841, 361710102
  %844 = sub i32 %843, 1
  %845 = sub i32 %844, 361710102
  %846 = sub i32 %841, 1
  %847 = mul i32 %841, %845
  %848 = urem i32 %847, 2
  %849 = icmp eq i32 %848, 0
  %850 = icmp slt i32 %842, 10
  %851 = and i1 %849, %850
  %852 = xor i1 %849, %850
  %853 = or i1 %851, %852
  %854 = or i1 %849, %850
  br i1 %853, label %855, label %1007

; <label>:855:                                    ; preds = %840
  br label %856

; <label>:856:                                    ; preds = %855, %444
  call void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %38) #3
  br label %857

; <label>:857:                                    ; preds = %856, %440
  call void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EED2Ev(%"class.std::vector.6"* %37) #3
  br label %858

; <label>:858:                                    ; preds = %857, %167
  %859 = load i32, i32* @x.3
  %860 = load i32, i32* @y.4
  %861 = sub i32 %859, 2114272766
  %862 = sub i32 %861, 1
  %863 = add i32 %862, 2114272766
  %864 = sub i32 %859, 1
  %865 = mul i32 %859, %863
  %866 = urem i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = icmp slt i32 %860, 10
  %869 = xor i1 %867, true
  %870 = xor i1 %868, true
  %871 = xor i1 true, true
  %872 = and i1 %869, true
  %873 = and i1 %867, %871
  %874 = and i1 %870, true
  %875 = and i1 %868, %871
  %876 = or i1 %872, %873
  %877 = or i1 %874, %875
  %878 = xor i1 %876, %877
  %879 = or i1 %869, %870
  %880 = xor i1 %879, true
  %881 = or i1 true, %871
  %882 = and i1 %880, %881
  %883 = or i1 %878, %882
  %884 = or i1 %867, %868
  br i1 %883, label %885, label %1008

; <label>:885:                                    ; preds = %858, %1008
  %886 = load i8*, i8** %35, align 8
  %887 = load i32, i32* %36, align 4
  %888 = insertvalue { i8*, i32 } undef, i8* %886, 0
  %889 = insertvalue { i8*, i32 } %888, i32 %887, 1
  %890 = load i32, i32* @x.3
  %891 = load i32, i32* @y.4
  %892 = sub i32 0, 1
  %893 = add i32 %890, %892
  %894 = sub i32 %890, 1
  %895 = mul i32 %890, %893
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %891, 10
  %899 = and i1 %897, %898
  %900 = xor i1 %897, %898
  %901 = or i1 %899, %900
  %902 = or i1 %897, %898
  br i1 %901, label %903, label %1008

; <label>:903:                                    ; preds = %885
  resume { i8*, i32 } %889

; <label>:904:                                    ; preds = %31, %4
  %905 = alloca %struct.Graph*, align 8
  %906 = alloca %"class.std::vector.0"*, align 8
  %907 = alloca i64, align 8
  %908 = alloca i8*
  %909 = alloca i32
  %910 = alloca %"class.std::vector.6", align 8
  %911 = alloca %"class.std::priority_queue", align 8
  %912 = alloca %"struct.std::greater", align 1
  %913 = alloca %"class.std::vector", align 8
  %914 = alloca %"class.std::vector.0", align 8
  %915 = alloca i64, align 8
  %916 = alloca %"class.std::allocator.2", align 1
  %917 = alloca %"class.std::vector.0", align 8
  %918 = alloca i64, align 8
  %919 = alloca %"class.std::allocator.2", align 1
  %920 = alloca i64, align 8
  %921 = alloca i64, align 8
  %922 = alloca %"class.std::tuple.20", align 8
  %923 = alloca %"class.std::vector.11"*, align 8
  %924 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %925 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %926 = alloca %"class.std::tuple"*, align 8
  %927 = alloca i64, align 8
  %928 = alloca i64, align 8
  %929 = alloca i64, align 8
  store %struct.Graph* %1, %struct.Graph** %905, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %906, align 8
  store i64 %3, i64* %907, align 8
  %930 = load %struct.Graph*, %struct.Graph** %905, align 8
  %931 = getelementptr inbounds %struct.Graph, %struct.Graph* %930, i32 0, i32 1
  %932 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %931) #3
  %933 = load %"class.std::vector.0"*, %"class.std::vector.0"** %906, align 8
  %934 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %933) #3
  %935 = icmp ne i64 %932, %934
  br label %31

; <label>:936:                                    ; preds = %104, %77
  %937 = call i8* @__cxa_allocate_exception(i64 16) #3
  %938 = bitcast i8* %937 to %"class.std::runtime_error"*
  br label %104

; <label>:939:                                    ; preds = %149, %123
  %940 = landingpad { i8*, i32 }
          cleanup
  %941 = extractvalue { i8*, i32 } %940, 0
  store i8* %941, i8** %35, align 8
  %942 = extractvalue { i8*, i32 } %940, 1
  store i32 %942, i32* %36, align 4
  call void @__cxa_free_exception(i8* %105) #3
  br label %149

; <label>:943:                                    ; preds = %183, %168
  %944 = load %struct.Graph*, %struct.Graph** %32, align 8
  %945 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  call void @_ZNK5Graph18get_adjacency_listIxEESt6vectorIS1_ISt5tupleIJxxT_EESaIS4_EESaIS6_EERKS1_IS3_SaIS3_EE(%"class.std::vector.6"* sret %37, %struct.Graph* %944, %"class.std::vector.0"* dereferenceable(24) %945)
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector"* %40) #3
  br label %183

; <label>:946:                                    ; preds = %215, %201
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector"* %40) #3
  %947 = load %struct.Graph*, %struct.Graph** %32, align 8
  %948 = getelementptr inbounds %struct.Graph, %struct.Graph* %947, i32 0, i32 0
  %949 = load i64, i64* %948, align 8
  store i64 1152921504606846976, i64* %42, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %43) #3
  br label %215

; <label>:950:                                    ; preds = %260, %233
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %43) #3
  %951 = load %struct.Graph*, %struct.Graph** %32, align 8
  %952 = getelementptr inbounds %struct.Graph, %struct.Graph* %951, i32 0, i32 0
  %953 = load i64, i64* %952, align 8
  store i64 -1, i64* %45, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %46) #3
  br label %260

; <label>:954:                                    ; preds = %318, %291
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %46) #3
  %955 = load i64, i64* %34, align 8
  %956 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %955) #3
  store i64 0, i64* %956, align 8
  %957 = load i64, i64* %34, align 8
  %958 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %957) #3
  br label %318

; <label>:959:                                    ; preds = %357, %342
  br label %357

; <label>:960:                                    ; preds = %407, %392
  %961 = load i64, i64* %48, align 8
  %962 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %41, i64 %961) #3
  %963 = load i64, i64* %962, align 8
  %964 = load i64, i64* %47, align 8
  %965 = icmp slt i64 %963, %964
  br label %407

; <label>:966:                                    ; preds = %467, %452
  %967 = landingpad { i8*, i32 }
          cleanup
  %968 = extractvalue { i8*, i32 } %967, 0
  store i8* %968, i8** %35, align 8
  %969 = extractvalue { i8*, i32 } %967, 1
  store i32 %969, i32* %36, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %44) #3
  br label %467

; <label>:970:                                    ; preds = %570, %543
  %971 = load i64, i64* %48, align 8
  %972 = load i64, i64* %54, align 8
  %973 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %44, i64 %972) #3
  store i64 %971, i64* %973, align 8
  br label %570

; <label>:974:                                    ; preds = %605, %590
  %975 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %51) #3
  br label %605

; <label>:976:                                    ; preds = %649, %635
  store i64 0, i64* %56, align 8
  br label %649

; <label>:977:                                    ; preds = %692, %665
  %978 = load i64, i64* %56, align 8
  %979 = load %struct.Graph*, %struct.Graph** %32, align 8
  %980 = getelementptr inbounds %struct.Graph, %struct.Graph* %979, i32 0, i32 0
  %981 = load i64, i64* %980, align 8
  %982 = icmp slt i64 %978, %981
  br label %692

; <label>:983:                                    ; preds = %736, %721
  %984 = load i64, i64* %56, align 8
  %985 = sub i64 %984, -498945367669768354
  %986 = sub i64 %985, 1
  %987 = add i64 %986, -498945367669768354
  %988 = sub i64 %984, 1
  %989 = mul i64 %987, 1
  %990 = shl i64 %984, 1
  %991 = sub i64 %984, 1097112117359664346
  %992 = sub i64 %991, 1
  %993 = add i64 %992, 1097112117359664346
  %994 = sub i64 %984, 1
  %995 = mul i64 %993, 1
  %996 = shl i64 %984, 1
  %997 = sub i64 %984, -6607934396268414986
  %998 = sub i64 %997, 1
  %999 = add i64 %998, -6607934396268414986
  %1000 = sub i64 %984, 1
  %1001 = mul i64 %999, 1
  %1002 = sub i64 %984, 1285358372510610471
  %1003 = add i64 %1002, 1
  %1004 = add i64 %1003, 1285358372510610471
  %1005 = add nsw i64 %984, 1
  store i64 %1004, i64* %56, align 8
  br label %736

; <label>:1006:                                   ; preds = %784, %769
  br label %784

; <label>:1007:                                   ; preds = %840, %813
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %41) #3
  br label %840

; <label>:1008:                                   ; preds = %885, %858
  %1009 = load i8*, i8** %35, align 8
  %1010 = load i32, i32* %36, align 4
  %1011 = insertvalue { i8*, i32 } undef, i8* %1009, 0
  %1012 = insertvalue { i8*, i32 } %1011, i32 %1010, 1
  br label %885
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8
  %12 = ptrtoint %"struct.std::pair"* %7 to i64
  %13 = ptrtoint %"struct.std::pair"* %11 to i64
  %14 = sub i64 %12, -9004670181662421249
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -9004670181662421249
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, 7616603439695322413
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 7616603439695322413
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  ret i64 %18
}

declare i8* @__cxa_allocate_exception(i64)

declare void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"*, i8*) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

declare void @__cxa_free_exception(i8*)

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorD1Ev(%"class.std::runtime_error"*) unnamed_addr #2

declare void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5Graph18get_adjacency_listIxEESt6vectorIS1_ISt5tupleIJxxT_EESaIS4_EESaIS6_EERKS1_IS3_SaIS3_EE(%"class.std::vector.6"* noalias sret, %struct.Graph*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.Graph*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.6", align 8
  %7 = alloca %"class.std::allocator.8", align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.std::tuple.20", align 8
  %14 = alloca i64*, align 8
  store %struct.Graph* %1, %struct.Graph** %4, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %5, align 8
  %15 = load %struct.Graph*, %struct.Graph** %4, align 8
  %16 = getelementptr inbounds %struct.Graph, %struct.Graph* %15, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2Ev(%"class.std::allocator.8"* %7) #3
  invoke void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEC2EmRKS4_(%"class.std::vector.6"* %6, i64 %17, %"class.std::allocator.8"* dereferenceable(1) %7)
          to label %18 unwind label %135

; <label>:18:                                     ; preds = %3
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEED2Ev(%"class.std::allocator.8"* %7) #3
  store i64 0, i64* %10, align 8
  br label %19

; <label>:19:                                     ; preds = %134, %18
  %20 = load i64, i64* %10, align 8
  %21 = getelementptr inbounds %struct.Graph, %struct.Graph* %15, i32 0, i32 1
  %22 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %21) #3
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %143

; <label>:24:                                     ; preds = %19
  %25 = getelementptr inbounds %struct.Graph, %struct.Graph* %15, i32 0, i32 1
  %26 = load i64, i64* %10, align 8
  %27 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector"* %25, i64 %26) #3
  %28 = call { i64*, i64* } @_ZSt3tieIJxxEESt5tupleIJDpRT_EES3_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12) #3
  %29 = getelementptr inbounds %"class.std::tuple.20", %"class.std::tuple.20"* %13, i32 0, i32 0
  %30 = bitcast %"struct.std::_Tuple_impl.21"* %29 to { i64*, i64* }*
  %31 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %30, i32 0, i32 0
  %32 = extractvalue { i64*, i64* } %28, 0
  store i64* %32, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %30, i32 0, i32 1
  %34 = extractvalue { i64*, i64* } %28, 1
  store i64* %34, i64** %33, align 8
  %35 = invoke dereferenceable(16) %"class.std::tuple.20"* @_ZNSt5tupleIJRxS0_EEaSIxxEERS1_RKSt4pairIT_T0_E(%"class.std::tuple.20"* %13, %"struct.std::pair"* dereferenceable(16) %27)
          to label %36 unwind label %139

; <label>:36:                                     ; preds = %24
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %38 = load i64, i64* %10, align 8
  %39 = call dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %37, i64 %38) #3
  store i64* %39, i64** %14, align 8
  %40 = load i64, i64* %11, align 8
  %41 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEixEm(%"class.std::vector.6"* %6, i64 %40) #3
  %42 = load i64*, i64** %14, align 8
  invoke void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE12emplace_backIJRxS5_RKxEEEvDpOT_(%"class.std::vector.11"* %41, i64* dereferenceable(8) %11, i64* dereferenceable(8) %12, i64* dereferenceable(8) %42)
          to label %43 unwind label %139

; <label>:43:                                     ; preds = %36
  %44 = load i32, i32* @x.9
  %45 = load i32, i32* @y.10
  %46 = add i32 %44, 651465843
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 651465843
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %150

; <label>:70:                                     ; preds = %43, %150
  %71 = load i32, i32* @x.9
  %72 = load i32, i32* @y.10
  %73 = add i32 %71, 795868025
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 795868025
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %150

; <label>:97:                                     ; preds = %70
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i32, i32* @x.9
  %100 = load i32, i32* @y.10
  %101 = add i32 %99, -595406040
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -595406040
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %151

; <label>:113:                                    ; preds = %98, %151
  %114 = load i64, i64* %10, align 8
  %115 = sub i64 0, %114
  %116 = sub i64 0, 1
  %117 = add i64 %115, %116
  %118 = sub i64 0, %117
  %119 = add nsw i64 %114, 1
  store i64 %118, i64* %10, align 8
  %120 = load i32, i32* @x.9
  %121 = load i32, i32* @y.10
  %122 = sub i32 %120, 341838371
  %123 = sub i32 %122, 1
  %124 = add i32 %123, 341838371
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %151

; <label>:134:                                    ; preds = %113
  br label %19

; <label>:135:                                    ; preds = %3
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %8, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %9, align 4
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEED2Ev(%"class.std::allocator.8"* %7) #3
  br label %145

; <label>:139:                                    ; preds = %36, %24
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %8, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %9, align 4
  call void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EED2Ev(%"class.std::vector.6"* %6) #3
  br label %145

; <label>:143:                                    ; preds = %19
  %144 = call dereferenceable(24) %"class.std::vector.6"* @_ZSt4moveIRSt6vectorIS0_ISt5tupleIJxxxEESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.6"* dereferenceable(24) %6) #3
  call void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEC2EOS5_(%"class.std::vector.6"* %0, %"class.std::vector.6"* dereferenceable(24) %144) #3
  call void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EED2Ev(%"class.std::vector.6"* %6) #3
  ret void

; <label>:145:                                    ; preds = %139, %135
  %146 = load i8*, i8** %8, align 8
  %147 = load i32, i32* %9, align 4
  %148 = insertvalue { i8*, i32 } undef, i8* %146, 0
  %149 = insertvalue { i8*, i32 } %148, i32 %147, 1
  resume { i8*, i32 } %149

; <label>:150:                                    ; preds = %70, %43
  br label %70

; <label>:151:                                    ; preds = %113, %98
  %152 = load i64, i64* %10, align 8
  %153 = sub i64 0, 1
  %154 = add i64 %152, %153
  %155 = sub i64 %152, 1
  %156 = mul i64 %154, 1
  %157 = sub i64 0, 7562383018557577424
  %158 = sub i64 %157, %152
  %159 = add i64 %158, 7562383018557577424
  %160 = sub i64 0, %152
  %161 = sub i64 0, %159
  %162 = sub i64 0, 1
  %163 = add i64 %161, %162
  %164 = sub i64 0, %163
  %165 = add i64 %159, 1
  %166 = sub i64 0, 1
  %167 = add i64 %152, %166
  %168 = sub i64 %152, 1
  %169 = mul i64 %167, 1
  %170 = sub i64 0, %152
  %171 = add i64 0, %170
  %172 = sub i64 0, %152
  %173 = sub i64 0, %171
  %174 = sub i64 0, 1
  %175 = add i64 %173, %174
  %176 = sub i64 0, %175
  %177 = add i64 %171, 1
  %178 = sub i64 0, 1
  %179 = sub i64 %152, %178
  %180 = add nsw i64 %152, 1
  store i64 %179, i64* %10, align 8
  br label %113
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"*, %"struct.std::greater"* dereferenceable(1), %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca %"struct.std::greater"*, align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %9 = alloca %"struct.std::greater", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store %"struct.std::greater"* %1, %"struct.std::greater"** %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %15 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector"* dereferenceable(24) %14) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2EOS3_(%"class.std::vector"* %13, %"class.std::vector"* dereferenceable(24) %15) #3
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %17 = load %"struct.std::greater"*, %"struct.std::greater"** %5, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %19 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  store %"struct.std::pair"* %19, %"struct.std::pair"** %20, align 8
  %21 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %22 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %8, i32 0, i32 0
  store %"struct.std::pair"* %22, %"struct.std::pair"** %23, align 8
  %24 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  %26 = load %"struct.std::pair"*, %"struct.std::pair"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %8, i32 0, i32 0
  %28 = load %"struct.std::pair"*, %"struct.std::pair"** %27, align 8
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair"* %26, %"struct.std::pair"* %28)
          to label %29 unwind label %30

; <label>:29:                                     ; preds = %3
  ret void

; <label>:30:                                     ; preds = %3
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %10, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %11, align 4
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector"* %13) #3
  br label %34

; <label>:34:                                     ; preds = %30
  %35 = load i8*, i8** %10, align 8
  %36 = load i32, i32* %11, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 456277010
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 456277010
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %126

; <label>:16:                                     ; preds = %1, %126
  %17 = alloca %"class.std::vector"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %17, align 8
  %20 = load %"class.std::vector"*, %"class.std::vector"** %17, align 8
  %21 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %25 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"struct.std::pair"*, %"struct.std::pair"** %27, align 8
  %29 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %30 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %29) #3
  %31 = load i32, i32* @x.15
  %32 = load i32, i32* @y.16
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %126

; <label>:56:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %24, %"struct.std::pair"* %28, %"class.std::allocator"* dereferenceable(1) %30)
          to label %57 unwind label %89

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* @x.15
  %59 = load i32, i32* @y.16
  %60 = add i32 %58, -1400398400
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -1400398400
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %141

; <label>:72:                                     ; preds = %57, %141
  %73 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base"* %73) #3
  %74 = load i32, i32* @x.15
  %75 = load i32, i32* @y.16
  %76 = sub i32 %74, 950007259
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 950007259
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %141

; <label>:88:                                     ; preds = %72
  ret void

; <label>:89:                                     ; preds = %56
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %18, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %19, align 4
  %93 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base"* %93) #3
  br label %94

; <label>:94:                                     ; preds = %89
  %95 = load i32, i32* @x.15
  %96 = load i32, i32* @y.16
  %97 = add i32 %95, -58038509
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, -58038509
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %143

; <label>:109:                                    ; preds = %94, %143
  %110 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %110) #11
  %111 = load i32, i32* @x.15
  %112 = load i32, i32* @y.16
  %113 = add i32 %111, 585380683
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, 585380683
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  br i1 %123, label %125, label %143

; <label>:125:                                    ; preds = %109
  unreachable

; <label>:126:                                    ; preds = %16, %1
  %127 = alloca %"class.std::vector"*, align 8
  %128 = alloca i8*
  %129 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %127, align 8
  %130 = load %"class.std::vector"*, %"class.std::vector"** %127, align 8
  %131 = bitcast %"class.std::vector"* %130 to %"struct.std::_Vector_base"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %132, i32 0, i32 0
  %134 = load %"struct.std::pair"*, %"struct.std::pair"** %133, align 8
  %135 = bitcast %"class.std::vector"* %130 to %"struct.std::_Vector_base"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %136, i32 0, i32 1
  %138 = load %"struct.std::pair"*, %"struct.std::pair"** %137, align 8
  %139 = bitcast %"class.std::vector"* %130 to %"struct.std::_Vector_base"*
  %140 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %139) #3
  br label %16

; <label>:141:                                    ; preds = %72, %57
  %142 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base"* %142) #3
  br label %72

; <label>:143:                                    ; preds = %109, %94
  %144 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %144) #11
  br label %109
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.0"*, i64, i64* dereferenceable(8), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %12, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.0"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.23
  %7 = load i32, i32* @y.24
  %8 = add i32 %6, 1281651829
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1281651829
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -681017344, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -681017344, label %20
    i32 964055394, label %28
    i32 -1445138140, label %65
    i32 -1935510763, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 964055394, i32 -1935510763
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  store i64* %37, i64** %3
  %38 = load i32, i32* @x.23
  %39 = load i32, i32* @y.24
  %40 = sub i32 %38, -716386886
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -716386886
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1445138140, i32 -1935510763
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i64*, i64** %3
  ret i64* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.0"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.0"*, %"class.std::vector.0"** %68, align 8
  %71 = bitcast %"class.std::vector.0"* %70 to %"struct.std::_Vector_base.1"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds i64, i64* %74, i64 %75
  store i32 964055394, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxS9_EEEvDpOT_(%"class.std::priority_queue"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %9 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %10 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %11 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 0
  %12 = load i64*, i64** %5, align 8
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64*, i64** %6, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %14) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxS5_EEEvDpOT_(%"class.std::vector"* %11, i64* dereferenceable(8) %13, i64* dereferenceable(8) %15)
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 0
  %17 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  store %"struct.std::pair"* %17, %"struct.std::pair"** %18, align 8
  %19 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 0
  %20 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector"* %19) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %8, i32 0, i32 0
  store %"struct.std::pair"* %20, %"struct.std::pair"** %21, align 8
  %22 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 1
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  %24 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %8, i32 0, i32 0
  %26 = load %"struct.std::pair"*, %"struct.std::pair"** %25, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair"* %24, %"struct.std::pair"* %26)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv(%"class.std::priority_queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt6vectorISt4pairIxxESaIS1_EE5emptyEv(%"class.std::vector"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv(%"class.std::priority_queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5frontEv(%"class.std::vector"* %4) #3
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i64* } @_ZSt3tieIJxxEESt5tupleIJDpRT_EES3_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::tuple.20", align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64*, i64** %5, align 8
  invoke void @_ZNSt5tupleIJRxS0_EEC2ES0_S0_(%"class.std::tuple.20"* %3, i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
          to label %8 unwind label %12

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"class.std::tuple.20", %"class.std::tuple.20"* %3, i32 0, i32 0
  %10 = bitcast %"struct.std::_Tuple_impl.21"* %9 to { i64*, i64* }*
  %11 = load { i64*, i64* }, { i64*, i64* }* %10, align 8
  ret { i64*, i64* } %11

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.31
  %14 = load i32, i32* @y.32
  %15 = sub i32 %13, -1018164793
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -1018164793
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %68

; <label>:39:                                     ; preds = %12, %68
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  call void @__clang_call_terminate(i8* %41) #11
  %42 = load i32, i32* @x.31
  %43 = load i32, i32* @y.32
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %68

; <label>:67:                                     ; preds = %39
  unreachable

; <label>:68:                                     ; preds = %39, %12
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  call void @__clang_call_terminate(i8* %70) #11
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.20"* @_ZNSt5tupleIJRxS0_EEaSIxxEERS1_RKSt4pairIT_T0_E(%"class.std::tuple.20"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.20"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::tuple.20"* %0, %"class.std::tuple.20"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::tuple.20"*, %"class.std::tuple.20"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::tuple.20"* %5 to %"struct.std::_Tuple_impl.21"*
  %10 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.21"* dereferenceable(16) %9) #3
  store i64 %8, i64* %10, align 8
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %11, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::tuple.20"* %5 to %"struct.std::_Tuple_impl.21"*
  %15 = call dereferenceable(8) %"struct.std::_Tuple_impl.22"* @_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.21"* dereferenceable(16) %14) #3
  %16 = bitcast %"class.std::tuple.20"* %5 to %"struct.std::_Tuple_impl.22"*
  %17 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJRxEE7_M_headERS1_(%"struct.std::_Tuple_impl.22"* dereferenceable(8) %16) #3
  store i64 %13, i64* %17, align 8
  ret %"class.std::tuple.20"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %5 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %6 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %7 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %8 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector"* %7) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %3, i32 0, i32 0
  store %"struct.std::pair"* %8, %"struct.std::pair"** %9, align 8
  %10 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %11 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector"* %10) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair"* %11, %"struct.std::pair"** %12, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %3, i32 0, i32 0
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %16, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair"* %15, %"struct.std::pair"* %17)
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE8pop_backEv(%"class.std::vector"* %18) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEixEm(%"class.std::vector.6"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.37
  %7 = load i32, i32* @y.38
  %8 = sub i32 %6, -1986665145
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1986665145
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1929172758, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %88
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1929172758, label %20
    i32 -1581323139, label %40
    i32 -51355925, label %76
    i32 192475707, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %88

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1581323139, i32 192475707
  store i32 %39, i32* %16
  br label %88

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.6"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.6"*, %"class.std::vector.6"** %41, align 8
  %44 = bitcast %"class.std::vector.6"* %43 to %"struct.std::_Vector_base.7"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector.11"*, %"class.std::vector.11"** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %47, i64 %48
  store %"class.std::vector.11"* %49, %"class.std::vector.11"** %3
  %50 = load i32, i32* @x.37
  %51 = load i32, i32* @y.38
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -51355925, i32 192475707
  store i32 %75, i32* %16
  br label %88

; <label>:76:                                     ; preds = %17
  %77 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %3
  ret %"class.std::vector.11"* %77

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.std::vector.6"*, align 8
  %80 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"class.std::vector.6"*, %"class.std::vector.6"** %79, align 8
  %82 = bitcast %"class.std::vector.6"* %81 to %"struct.std::_Vector_base.7"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::vector.11"*, %"class.std::vector.11"** %84, align 8
  %86 = load i64, i64* %80, align 8
  %87 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %85, i64 %86
  store i32 -1581323139, i32* %16
  br label %88

; <label>:88:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE5beginEv(%"class.std::vector.11"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Vector_base.12"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::tuple"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::tuple"*, %"class.std::tuple"** %8, align 8
  ret %"class.std::tuple"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE3endEv(%"class.std::vector.11"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Vector_base.12"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::tuple"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::tuple"*, %"class.std::tuple"** %8, align 8
  ret %"class.std::tuple"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %11 = icmp ne %"class.std::tuple"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::tuple"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  ret %"class.std::tuple"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm1EJxxxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS4_(%"class.std::tuple"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to %"struct.std::_Tuple_impl.16"*
  %5 = call dereferenceable(8) i64* @_ZSt12__get_helperILm1ExJxEERT0_RSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.16"* dereferenceable(16) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm2EJxxxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS4_(%"class.std::tuple"* dereferenceable(24)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.49
  %6 = load i32, i32* @y.50
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2063132207, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2063132207, label %18
    i32 -1997048213, label %38
    i32 -1449523801, label %58
    i32 -1491340782, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1997048213, i32 -1491340782
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %39, align 8
  %40 = load %"class.std::tuple"*, %"class.std::tuple"** %39, align 8
  %41 = bitcast %"class.std::tuple"* %40 to %"struct.std::_Tuple_impl.17"*
  %42 = call dereferenceable(8) i64* @_ZSt12__get_helperILm2ExJEERT0_RSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.17"* dereferenceable(8) %41) #3
  store i64* %42, i64** %2
  %43 = load i32, i32* @x.49
  %44 = load i32, i32* @y.50
  %45 = add i32 %43, 2023196357
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 2023196357
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1449523801, i32 -1491340782
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %61, align 8
  %62 = load %"class.std::tuple"*, %"class.std::tuple"** %61, align 8
  %63 = bitcast %"class.std::tuple"* %62 to %"struct.std::_Tuple_impl.17"*
  %64 = call dereferenceable(8) i64* @_ZSt12__get_helperILm2ExJEERT0_RSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.17"* dereferenceable(8) %63) #3
  store i32 -1997048213, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.51
  %6 = load i32, i32* @y.52
  %7 = add i32 %5, 2007233929
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2007233929
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1127461291, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1127461291, label %19
    i32 -31389488, label %27
    i32 -1611412599, label %48
    i32 118394511, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -31389488, i32 118394511
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load %"class.std::tuple"*, %"class.std::tuple"** %31, align 8
  %33 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %32, i32 1
  store %"class.std::tuple"* %33, %"class.std::tuple"** %31, align 8
  %34 = load i32, i32* @x.51
  %35 = load i32, i32* @y.52
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1611412599, i32 118394511
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %51, align 8
  %52 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  %54 = load %"class.std::tuple"*, %"class.std::tuple"** %53, align 8
  %55 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %54, i32 1
  store %"class.std::tuple"* %55, %"class.std::tuple"** %53, align 8
  store i32 -31389488, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairISt6vectorIxSaIxEES2_EC2IRS2_S5_vEEOT_OT0_(%"struct.std::pair.5"*, %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.53
  %5 = load i32, i32* @y.54
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %96

; <label>:17:                                     ; preds = %3, %96
  %18 = alloca %"struct.std::pair.5"*, align 8
  %19 = alloca %"class.std::vector.0"*, align 8
  %20 = alloca %"class.std::vector.0"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::pair.5"* %0, %"struct.std::pair.5"** %18, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %19, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %20, align 8
  %23 = load %"struct.std::pair.5"*, %"struct.std::pair.5"** %18, align 8
  %24 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %23, i32 0, i32 0
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %26 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector.0"* dereferenceable(24) %25) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"* %24, %"class.std::vector.0"* dereferenceable(24) %26)
  %27 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %23, i32 0, i32 1
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %29 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector.0"* dereferenceable(24) %28) #3
  %30 = load i32, i32* @x.53
  %31 = load i32, i32* @y.54
  %32 = sub i32 %30, -1337302176
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1337302176
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %96

; <label>:44:                                     ; preds = %17
  invoke void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"* %27, %"class.std::vector.0"* dereferenceable(24) %29)
          to label %45 unwind label %46

; <label>:45:                                     ; preds = %44
  ret void

; <label>:46:                                     ; preds = %44
  %47 = load i32, i32* @x.53
  %48 = load i32, i32* @y.54
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %109

; <label>:72:                                     ; preds = %46, %109
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %21, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %22, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %24) #3
  %76 = load i32, i32* @x.53
  %77 = load i32, i32* @y.54
  %78 = sub i32 %76, 1150634972
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 1150634972
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %109

; <label>:90:                                     ; preds = %72
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = load i8*, i8** %21, align 8
  %93 = load i32, i32* %22, align 4
  %94 = insertvalue { i8*, i32 } undef, i8* %92, 0
  %95 = insertvalue { i8*, i32 } %94, i32 %93, 1
  resume { i8*, i32 } %95

; <label>:96:                                     ; preds = %17, %3
  %97 = alloca %"struct.std::pair.5"*, align 8
  %98 = alloca %"class.std::vector.0"*, align 8
  %99 = alloca %"class.std::vector.0"*, align 8
  %100 = alloca i8*
  %101 = alloca i32
  store %"struct.std::pair.5"* %0, %"struct.std::pair.5"** %97, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %98, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %99, align 8
  %102 = load %"struct.std::pair.5"*, %"struct.std::pair.5"** %97, align 8
  %103 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %102, i32 0, i32 0
  %104 = load %"class.std::vector.0"*, %"class.std::vector.0"** %98, align 8
  %105 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector.0"* dereferenceable(24) %104) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"* %103, %"class.std::vector.0"* dereferenceable(24) %105)
  %106 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %102, i32 0, i32 1
  %107 = load %"class.std::vector.0"*, %"class.std::vector.0"** %99, align 8
  %108 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector.0"* dereferenceable(24) %107) #3
  br label %17

; <label>:109:                                    ; preds = %72, %46
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %21, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %22, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %24) #3
  br label %72
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.55
  %18 = load i32, i32* @y.56
  %19 = add i32 %17, -773430107
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -773430107
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %67

; <label>:31:                                     ; preds = %16, %67
  %32 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %32) #3
  %33 = load i32, i32* @x.55
  %34 = load i32, i32* @y.56
  %35 = add i32 %33, 477046113
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 477046113
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %67

; <label>:59:                                     ; preds = %31
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %66) #11
  unreachable

; <label>:67:                                     ; preds = %31, %16
  %68 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %68) #3
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EED2Ev(%"class.std::vector.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %8, align 8
  %10 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.11"*, %"class.std::vector.11"** %12, align 8
  %14 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %15 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorISt5tupleIJxxxEESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.11"* %9, %"class.std::vector.11"* %13, %"class.std::allocator.8"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.7"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.7"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline uwtable
define i32 @_Z5solvev() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::vector.25", align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.std::vector.36", align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.Graph, align 8
  %19 = alloca %"class.std::vector.0", align 8
  %20 = alloca %"class.std::tuple.44", align 8
  %21 = alloca %"struct.std::pair", align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca %"struct.std::pair", align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca %"class.std::tuple.20", align 8
  %28 = alloca %"struct.std::pair", align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector.0", align 8
  %34 = alloca %"struct.std::pair.5", align 8
  %35 = alloca i64, align 8
  %36 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %4)
  %37 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %36, i64* dereferenceable(8) %5)
  %38 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %37, i64* dereferenceable(8) %6)
  store i64 2500, i64* %7, align 8
  %39 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %6, align 8
  call void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EEC2Ev(%"class.std::vector.25"* %8) #3
  %41 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE7reserveEm(%"class.std::vector.25"* %8, i64 %41)
          to label %42 unwind label %209

; <label>:42:                                     ; preds = %0
  %43 = load i32, i32* @x.61
  %44 = load i32, i32* @y.62
  %45 = sub i32 %43, 206188044
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 206188044
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %1187

; <label>:69:                                     ; preds = %42, %1187
  store i64 0, i64* %1, align 8
  %70 = load i32, i32* @x.61
  %71 = load i32, i32* @y.62
  %72 = sub i32 %70, 1703540609
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 1703540609
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %1187

; <label>:96:                                     ; preds = %69
  br label %97

; <label>:97:                                     ; preds = %208, %96
  %98 = load i64, i64* %1, align 8
  %99 = load i64, i64* %5, align 8
  %100 = icmp slt i64 %98, %99
  br i1 %100, label %101, label %213

; <label>:101:                                    ; preds = %97
  %102 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %11)
          to label %103 unwind label %209

; <label>:103:                                    ; preds = %101
  %104 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %102, i64* dereferenceable(8) %12)
          to label %105 unwind label %209

; <label>:105:                                    ; preds = %103
  %106 = load i32, i32* @x.61
  %107 = load i32, i32* @y.62
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %1188

; <label>:119:                                    ; preds = %105, %1188
  %120 = load i32, i32* @x.61
  %121 = load i32, i32* @y.62
  %122 = sub i32 %120, 1722668871
  %123 = sub i32 %122, 1
  %124 = add i32 %123, 1722668871
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %1188

; <label>:146:                                    ; preds = %119
  %147 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %104, i64* dereferenceable(8) %13)
          to label %148 unwind label %209

; <label>:148:                                    ; preds = %146
  %149 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %147, i64* dereferenceable(8) %14)
          to label %150 unwind label %209

; <label>:150:                                    ; preds = %148
  %151 = load i64, i64* %11, align 8
  %152 = sub i64 %151, 5978530772479733469
  %153 = add i64 %152, -1
  %154 = add i64 %153, 5978530772479733469
  %155 = add nsw i64 %151, -1
  store i64 %154, i64* %11, align 8
  %156 = load i64, i64* %12, align 8
  %157 = sub i64 0, -1
  %158 = sub i64 %156, %157
  %159 = add nsw i64 %156, -1
  store i64 %158, i64* %12, align 8
  invoke void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE12emplace_backIJRxS5_S5_S5_EEEvDpOT_(%"class.std::vector.25"* %8, i64* dereferenceable(8) %11, i64* dereferenceable(8) %12, i64* dereferenceable(8) %13, i64* dereferenceable(8) %14)
          to label %160 unwind label %209

; <label>:160:                                    ; preds = %150
  br label %161

; <label>:161:                                    ; preds = %160
  %162 = load i32, i32* @x.61
  %163 = load i32, i32* @y.62
  %164 = sub i32 %162, 1483799042
  %165 = sub i32 %164, 1
  %166 = add i32 %165, 1483799042
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 false, true
  %175 = and i1 %172, false
  %176 = and i1 %170, %174
  %177 = and i1 %173, false
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 false, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %1189

; <label>:188:                                    ; preds = %161, %1189
  %189 = load i64, i64* %1, align 8
  %190 = add i64 %189, -4405613880109248453
  %191 = add i64 %190, 1
  %192 = sub i64 %191, -4405613880109248453
  %193 = add nsw i64 %189, 1
  store i64 %192, i64* %1, align 8
  %194 = load i32, i32* @x.61
  %195 = load i32, i32* @y.62
  %196 = sub i32 %194, -207307330
  %197 = sub i32 %196, 1
  %198 = add i32 %197, -207307330
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = and i1 %202, %203
  %205 = xor i1 %202, %203
  %206 = or i1 %204, %205
  %207 = or i1 %202, %203
  br i1 %206, label %208, label %1189

; <label>:208:                                    ; preds = %188
  br label %97

; <label>:209:                                    ; preds = %150, %148, %146, %103, %101, %0
  %210 = landingpad { i8*, i32 }
          cleanup
  %211 = extractvalue { i8*, i32 } %210, 0
  store i8* %211, i8** %9, align 8
  %212 = extractvalue { i8*, i32 } %210, 1
  store i32 %212, i32* %10, align 4
  br label %1139

; <label>:213:                                    ; preds = %97
  call void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EEC2Ev(%"class.std::vector.36"* %15) #3
  %214 = load i64, i64* %4, align 8
  invoke void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE7reserveEm(%"class.std::vector.36"* %15, i64 %214)
          to label %215 unwind label %314

; <label>:215:                                    ; preds = %213
  store i64 0, i64* %1, align 8
  br label %216

; <label>:216:                                    ; preds = %309, %215
  %217 = load i64, i64* %1, align 8
  %218 = load i64, i64* %4, align 8
  %219 = icmp slt i64 %217, %218
  br i1 %219, label %220, label %371

; <label>:220:                                    ; preds = %216
  %221 = load i32, i32* @x.61
  %222 = load i32, i32* @y.62
  %223 = sub i32 %221, 1790331832
  %224 = sub i32 %223, 1
  %225 = add i32 %224, 1790331832
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  br i1 %233, label %235, label %1222

; <label>:235:                                    ; preds = %220, %1222
  %236 = load i32, i32* @x.61
  %237 = load i32, i32* @y.62
  %238 = add i32 %236, -1178113043
  %239 = sub i32 %238, 1
  %240 = sub i32 %239, -1178113043
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 true, true
  %249 = and i1 %246, true
  %250 = and i1 %244, %248
  %251 = and i1 %247, true
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 true, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %1222

; <label>:262:                                    ; preds = %235
  %263 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %16)
          to label %264 unwind label %314

; <label>:264:                                    ; preds = %262
  %265 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %263, i64* dereferenceable(8) %17)
          to label %266 unwind label %314

; <label>:266:                                    ; preds = %264
  invoke void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE12emplace_backIJRxS5_EEEvDpOT_(%"class.std::vector.36"* %15, i64* dereferenceable(8) %16, i64* dereferenceable(8) %17)
          to label %267 unwind label %314

; <label>:267:                                    ; preds = %266
  %268 = load i32, i32* @x.61
  %269 = load i32, i32* @y.62
  %270 = sub i32 %268, 1576258878
  %271 = sub i32 %270, 1
  %272 = add i32 %271, 1576258878
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = xor i1 %276, true
  %279 = xor i1 %277, true
  %280 = xor i1 false, true
  %281 = and i1 %278, false
  %282 = and i1 %276, %280
  %283 = and i1 %279, false
  %284 = and i1 %277, %280
  %285 = or i1 %281, %282
  %286 = or i1 %283, %284
  %287 = xor i1 %285, %286
  %288 = or i1 %278, %279
  %289 = xor i1 %288, true
  %290 = or i1 false, %280
  %291 = and i1 %289, %290
  %292 = or i1 %287, %291
  %293 = or i1 %276, %277
  br i1 %292, label %294, label %1223

; <label>:294:                                    ; preds = %267, %1223
  %295 = load i32, i32* @x.61
  %296 = load i32, i32* @y.62
  %297 = sub i32 0, 1
  %298 = add i32 %295, %297
  %299 = sub i32 %295, 1
  %300 = mul i32 %295, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %296, 10
  %304 = and i1 %302, %303
  %305 = xor i1 %302, %303
  %306 = or i1 %304, %305
  %307 = or i1 %302, %303
  br i1 %306, label %308, label %1223

; <label>:308:                                    ; preds = %294
  br label %309

; <label>:309:                                    ; preds = %308
  %310 = load i64, i64* %1, align 8
  %311 = sub i64 0, 1
  %312 = sub i64 %310, %311
  %313 = add nsw i64 %310, 1
  store i64 %312, i64* %1, align 8
  br label %216

; <label>:314:                                    ; preds = %415, %266, %264, %262, %213
  %315 = load i32, i32* @x.61
  %316 = load i32, i32* @y.62
  %317 = add i32 %315, 1175302761
  %318 = sub i32 %317, 1
  %319 = sub i32 %318, 1175302761
  %320 = sub i32 %315, 1
  %321 = mul i32 %315, %319
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %316, 10
  %325 = xor i1 %323, true
  %326 = xor i1 %324, true
  %327 = xor i1 true, true
  %328 = and i1 %325, true
  %329 = and i1 %323, %327
  %330 = and i1 %326, true
  %331 = and i1 %324, %327
  %332 = or i1 %328, %329
  %333 = or i1 %330, %331
  %334 = xor i1 %332, %333
  %335 = or i1 %325, %326
  %336 = xor i1 %335, true
  %337 = or i1 true, %327
  %338 = and i1 %336, %337
  %339 = or i1 %334, %338
  %340 = or i1 %323, %324
  br i1 %339, label %341, label %1224

; <label>:341:                                    ; preds = %314, %1224
  %342 = landingpad { i8*, i32 }
          cleanup
  %343 = extractvalue { i8*, i32 } %342, 0
  store i8* %343, i8** %9, align 8
  %344 = extractvalue { i8*, i32 } %342, 1
  store i32 %344, i32* %10, align 4
  %345 = load i32, i32* @x.61
  %346 = load i32, i32* @y.62
  %347 = sub i32 0, 1
  %348 = add i32 %345, %347
  %349 = sub i32 %345, 1
  %350 = mul i32 %345, %348
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %346, 10
  %354 = xor i1 %352, true
  %355 = xor i1 %353, true
  %356 = xor i1 false, true
  %357 = and i1 %354, false
  %358 = and i1 %352, %356
  %359 = and i1 %355, false
  %360 = and i1 %353, %356
  %361 = or i1 %357, %358
  %362 = or i1 %359, %360
  %363 = xor i1 %361, %362
  %364 = or i1 %354, %355
  %365 = xor i1 %364, true
  %366 = or i1 false, %356
  %367 = and i1 %365, %366
  %368 = or i1 %363, %367
  %369 = or i1 %352, %353
  br i1 %368, label %370, label %1224

; <label>:370:                                    ; preds = %341
  br label %1138

; <label>:371:                                    ; preds = %216
  %372 = load i32, i32* @x.61
  %373 = load i32, i32* @y.62
  %374 = sub i32 %372, -1297328663
  %375 = sub i32 %374, 1
  %376 = add i32 %375, -1297328663
  %377 = sub i32 %372, 1
  %378 = mul i32 %372, %376
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %373, 10
  %382 = xor i1 %380, true
  %383 = xor i1 %381, true
  %384 = xor i1 true, true
  %385 = and i1 %382, true
  %386 = and i1 %380, %384
  %387 = and i1 %383, true
  %388 = and i1 %381, %384
  %389 = or i1 %385, %386
  %390 = or i1 %387, %388
  %391 = xor i1 %389, %390
  %392 = or i1 %382, %383
  %393 = xor i1 %392, true
  %394 = or i1 true, %384
  %395 = and i1 %393, %394
  %396 = or i1 %391, %395
  %397 = or i1 %380, %381
  br i1 %396, label %398, label %1228

; <label>:398:                                    ; preds = %371, %1228
  %399 = load i64, i64* %4, align 8
  %400 = mul nsw i64 %399, 2501
  %401 = load i32, i32* @x.61
  %402 = load i32, i32* @y.62
  %403 = sub i32 %401, 444673382
  %404 = sub i32 %403, 1
  %405 = add i32 %404, 444673382
  %406 = sub i32 %401, 1
  %407 = mul i32 %401, %405
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %402, 10
  %411 = and i1 %409, %410
  %412 = xor i1 %409, %410
  %413 = or i1 %411, %412
  %414 = or i1 %409, %410
  br i1 %413, label %415, label %1228

; <label>:415:                                    ; preds = %398
  invoke void @_ZN5GraphC2Ex(%struct.Graph* %18, i64 %400)
          to label %416 unwind label %314

; <label>:416:                                    ; preds = %415
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.0"* %19) #3
  store i64 0, i64* %1, align 8
  br label %417

; <label>:417:                                    ; preds = %625, %416
  %418 = load i64, i64* %1, align 8
  %419 = load i64, i64* %5, align 8
  %420 = icmp slt i64 %418, %419
  br i1 %420, label %421, label %631

; <label>:421:                                    ; preds = %417
  %422 = load i64, i64* %1, align 8
  %423 = call dereferenceable(32) %"class.std::tuple.30"* @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EEixEm(%"class.std::vector.25"* %8, i64 %422) #3
  call void @_ZSt3tieIJxxxxEESt5tupleIJDpRT_EES3_(%"class.std::tuple.44"* sret %20, i64* dereferenceable(8) %11, i64* dereferenceable(8) %12, i64* dereferenceable(8) %13, i64* dereferenceable(8) %14) #3
  %424 = invoke dereferenceable(32) %"class.std::tuple.44"* @_ZNSt5tupleIJRxS0_S0_S0_EEaSIJxxxxEvEERS1_RKS_IJDpT_EE(%"class.std::tuple.44"* %20, %"class.std::tuple.30"* dereferenceable(32) %423)
          to label %425 unwind label %434

; <label>:425:                                    ; preds = %421
  store i64 0, i64* %2, align 8
  br label %426

; <label>:426:                                    ; preds = %618, %425
  %427 = load i64, i64* %2, align 8
  %428 = icmp slt i64 %427, 2501
  br i1 %428, label %429, label %624

; <label>:429:                                    ; preds = %426
  %430 = load i64, i64* %2, align 8
  %431 = load i64, i64* %13, align 8
  %432 = icmp slt i64 %430, %431
  br i1 %432, label %433, label %438

; <label>:433:                                    ; preds = %429
  br label %618

; <label>:434:                                    ; preds = %850, %728, %727, %669, %651, %636, %562, %521, %520, %519, %457, %438, %421
  %435 = landingpad { i8*, i32 }
          cleanup
  %436 = extractvalue { i8*, i32 } %435, 0
  store i8* %436, i8** %9, align 8
  %437 = extractvalue { i8*, i32 } %435, 1
  store i32 %437, i32* %10, align 4
  br label %1137

; <label>:438:                                    ; preds = %429
  %439 = load i64, i64* %11, align 8
  %440 = mul nsw i64 %439, 2501
  %441 = load i64, i64* %2, align 8
  %442 = sub i64 %440, -568381167914897447
  %443 = add i64 %442, %441
  %444 = add i64 %443, -568381167914897447
  %445 = add nsw i64 %440, %441
  store i64 %444, i64* %22, align 8
  %446 = load i64, i64* %12, align 8
  %447 = mul nsw i64 %446, 2501
  %448 = load i64, i64* %2, align 8
  %449 = sub i64 0, %448
  %450 = sub i64 %447, %449
  %451 = add nsw i64 %447, %448
  %452 = load i64, i64* %13, align 8
  %453 = sub i64 %450, -300104289235715617
  %454 = sub i64 %453, %452
  %455 = add i64 %454, -300104289235715617
  %456 = sub nsw i64 %450, %452
  store i64 %455, i64* %23, align 8
  invoke void @_ZNSt4pairIxxEC2IxxvEEOT_OT0_(%"struct.std::pair"* %21, i64* dereferenceable(8) %22, i64* dereferenceable(8) %23)
          to label %457 unwind label %434

; <label>:457:                                    ; preds = %438
  invoke void @_ZN5Graph8add_edgeERKSt4pairIxxE(%struct.Graph* %18, %"struct.std::pair"* dereferenceable(16) %21)
          to label %458 unwind label %434

; <label>:458:                                    ; preds = %457
  %459 = load i32, i32* @x.61
  %460 = load i32, i32* @y.62
  %461 = add i32 %459, 916656463
  %462 = sub i32 %461, 1
  %463 = sub i32 %462, 916656463
  %464 = sub i32 %459, 1
  %465 = mul i32 %459, %463
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %460, 10
  %469 = and i1 %467, %468
  %470 = xor i1 %467, %468
  %471 = or i1 %469, %470
  %472 = or i1 %467, %468
  br i1 %471, label %473, label %1260

; <label>:473:                                    ; preds = %458, %1260
  %474 = load i64, i64* %12, align 8
  %475 = mul nsw i64 %474, 2501
  %476 = load i64, i64* %2, align 8
  %477 = sub i64 %475, 2754903493947096725
  %478 = add i64 %477, %476
  %479 = add i64 %478, 2754903493947096725
  %480 = add nsw i64 %475, %476
  store i64 %479, i64* %25, align 8
  %481 = load i64, i64* %11, align 8
  %482 = mul nsw i64 %481, 2501
  %483 = load i64, i64* %2, align 8
  %484 = add i64 %482, 3296066763677859625
  %485 = add i64 %484, %483
  %486 = sub i64 %485, 3296066763677859625
  %487 = add nsw i64 %482, %483
  %488 = load i64, i64* %13, align 8
  %489 = sub i64 %486, -4938616348685129367
  %490 = sub i64 %489, %488
  %491 = add i64 %490, -4938616348685129367
  %492 = sub nsw i64 %486, %488
  store i64 %491, i64* %26, align 8
  %493 = load i32, i32* @x.61
  %494 = load i32, i32* @y.62
  %495 = add i32 %493, 1334195261
  %496 = sub i32 %495, 1
  %497 = sub i32 %496, 1334195261
  %498 = sub i32 %493, 1
  %499 = mul i32 %493, %497
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %494, 10
  %503 = xor i1 %501, true
  %504 = xor i1 %502, true
  %505 = xor i1 true, true
  %506 = and i1 %503, true
  %507 = and i1 %501, %505
  %508 = and i1 %504, true
  %509 = and i1 %502, %505
  %510 = or i1 %506, %507
  %511 = or i1 %508, %509
  %512 = xor i1 %510, %511
  %513 = or i1 %503, %504
  %514 = xor i1 %513, true
  %515 = or i1 true, %505
  %516 = and i1 %514, %515
  %517 = or i1 %512, %516
  %518 = or i1 %501, %502
  br i1 %517, label %519, label %1260

; <label>:519:                                    ; preds = %473
  invoke void @_ZNSt4pairIxxEC2IxxvEEOT_OT0_(%"struct.std::pair"* %24, i64* dereferenceable(8) %25, i64* dereferenceable(8) %26)
          to label %520 unwind label %434

; <label>:520:                                    ; preds = %519
  invoke void @_ZN5Graph8add_edgeERKSt4pairIxxE(%struct.Graph* %18, %"struct.std::pair"* dereferenceable(16) %24)
          to label %521 unwind label %434

; <label>:521:                                    ; preds = %520
  invoke void @_ZNSt6vectorIxSaIxEE12emplace_backIJRxEEEvDpOT_(%"class.std::vector.0"* %19, i64* dereferenceable(8) %14)
          to label %522 unwind label %434

; <label>:522:                                    ; preds = %521
  %523 = load i32, i32* @x.61
  %524 = load i32, i32* @y.62
  %525 = sub i32 0, 1
  %526 = add i32 %523, %525
  %527 = sub i32 %523, 1
  %528 = mul i32 %523, %526
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %524, 10
  %532 = xor i1 %530, true
  %533 = xor i1 %531, true
  %534 = xor i1 false, true
  %535 = and i1 %532, false
  %536 = and i1 %530, %534
  %537 = and i1 %533, false
  %538 = and i1 %531, %534
  %539 = or i1 %535, %536
  %540 = or i1 %537, %538
  %541 = xor i1 %539, %540
  %542 = or i1 %532, %533
  %543 = xor i1 %542, true
  %544 = or i1 false, %534
  %545 = and i1 %543, %544
  %546 = or i1 %541, %545
  %547 = or i1 %530, %531
  br i1 %546, label %548, label %1313

; <label>:548:                                    ; preds = %522, %1313
  %549 = load i32, i32* @x.61
  %550 = load i32, i32* @y.62
  %551 = sub i32 0, 1
  %552 = add i32 %549, %551
  %553 = sub i32 %549, 1
  %554 = mul i32 %549, %552
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %550, 10
  %558 = and i1 %556, %557
  %559 = xor i1 %556, %557
  %560 = or i1 %558, %559
  %561 = or i1 %556, %557
  br i1 %560, label %562, label %1313

; <label>:562:                                    ; preds = %548
  invoke void @_ZNSt6vectorIxSaIxEE12emplace_backIJRxEEEvDpOT_(%"class.std::vector.0"* %19, i64* dereferenceable(8) %14)
          to label %563 unwind label %434

; <label>:563:                                    ; preds = %562
  %564 = load i32, i32* @x.61
  %565 = load i32, i32* @y.62
  %566 = add i32 %564, -675500089
  %567 = sub i32 %566, 1
  %568 = sub i32 %567, -675500089
  %569 = sub i32 %564, 1
  %570 = mul i32 %564, %568
  %571 = urem i32 %570, 2
  %572 = icmp eq i32 %571, 0
  %573 = icmp slt i32 %565, 10
  %574 = xor i1 %572, true
  %575 = xor i1 %573, true
  %576 = xor i1 true, true
  %577 = and i1 %574, true
  %578 = and i1 %572, %576
  %579 = and i1 %575, true
  %580 = and i1 %573, %576
  %581 = or i1 %577, %578
  %582 = or i1 %579, %580
  %583 = xor i1 %581, %582
  %584 = or i1 %574, %575
  %585 = xor i1 %584, true
  %586 = or i1 true, %576
  %587 = and i1 %585, %586
  %588 = or i1 %583, %587
  %589 = or i1 %572, %573
  br i1 %588, label %590, label %1314

; <label>:590:                                    ; preds = %563, %1314
  %591 = load i32, i32* @x.61
  %592 = load i32, i32* @y.62
  %593 = sub i32 %591, 1845189357
  %594 = sub i32 %593, 1
  %595 = add i32 %594, 1845189357
  %596 = sub i32 %591, 1
  %597 = mul i32 %591, %595
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %592, 10
  %601 = xor i1 %599, true
  %602 = xor i1 %600, true
  %603 = xor i1 true, true
  %604 = and i1 %601, true
  %605 = and i1 %599, %603
  %606 = and i1 %602, true
  %607 = and i1 %600, %603
  %608 = or i1 %604, %605
  %609 = or i1 %606, %607
  %610 = xor i1 %608, %609
  %611 = or i1 %601, %602
  %612 = xor i1 %611, true
  %613 = or i1 true, %603
  %614 = and i1 %612, %613
  %615 = or i1 %610, %614
  %616 = or i1 %599, %600
  br i1 %615, label %617, label %1314

; <label>:617:                                    ; preds = %590
  br label %618

; <label>:618:                                    ; preds = %617, %433
  %619 = load i64, i64* %2, align 8
  %620 = sub i64 %619, -6343031505795146958
  %621 = add i64 %620, 1
  %622 = add i64 %621, -6343031505795146958
  %623 = add nsw i64 %619, 1
  store i64 %622, i64* %2, align 8
  br label %426

; <label>:624:                                    ; preds = %426
  br label %625

; <label>:625:                                    ; preds = %624
  %626 = load i64, i64* %1, align 8
  %627 = add i64 %626, -5409089423253182048
  %628 = add i64 %627, 1
  %629 = sub i64 %628, -5409089423253182048
  %630 = add nsw i64 %626, 1
  store i64 %629, i64* %1, align 8
  br label %417

; <label>:631:                                    ; preds = %417
  store i64 0, i64* %1, align 8
  br label %632

; <label>:632:                                    ; preds = %844, %631
  %633 = load i64, i64* %1, align 8
  %634 = load i64, i64* %4, align 8
  %635 = icmp slt i64 %633, %634
  br i1 %635, label %636, label %850

; <label>:636:                                    ; preds = %632
  %637 = load i64, i64* %1, align 8
  %638 = call dereferenceable(16) %"class.std::tuple.41"* @_ZNSt6vectorISt5tupleIJxxEESaIS1_EEixEm(%"class.std::vector.36"* %15, i64 %637) #3
  %639 = call { i64*, i64* } @_ZSt3tieIJxxEESt5tupleIJDpRT_EES3_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %17) #3
  %640 = getelementptr inbounds %"class.std::tuple.20", %"class.std::tuple.20"* %27, i32 0, i32 0
  %641 = bitcast %"struct.std::_Tuple_impl.21"* %640 to { i64*, i64* }*
  %642 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %641, i32 0, i32 0
  %643 = extractvalue { i64*, i64* } %639, 0
  store i64* %643, i64** %642, align 8
  %644 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %641, i32 0, i32 1
  %645 = extractvalue { i64*, i64* } %639, 1
  store i64* %645, i64** %644, align 8
  %646 = invoke dereferenceable(16) %"class.std::tuple.20"* @_ZNSt5tupleIJRxS0_EEaSIxxEERS1_RKS_IJT_T0_EE(%"class.std::tuple.20"* %27, %"class.std::tuple.41"* dereferenceable(16) %638)
          to label %647 unwind label %434

; <label>:647:                                    ; preds = %636
  store i64 0, i64* %2, align 8
  br label %648

; <label>:648:                                    ; preds = %788, %647
  %649 = load i64, i64* %2, align 8
  %650 = icmp slt i64 %649, 2500
  br i1 %650, label %651, label %789

; <label>:651:                                    ; preds = %648
  %652 = load i64, i64* %1, align 8
  %653 = mul nsw i64 %652, 2501
  %654 = load i64, i64* %2, align 8
  %655 = sub i64 0, %653
  %656 = sub i64 0, %654
  %657 = add i64 %655, %656
  %658 = sub i64 0, %657
  %659 = add nsw i64 %653, %654
  store i64 %658, i64* %29, align 8
  %660 = load i64, i64* %1, align 8
  %661 = mul nsw i64 %660, 2501
  %662 = load i64, i64* %2, align 8
  %663 = load i64, i64* %16, align 8
  %664 = add i64 %662, -812822612540582107
  %665 = add i64 %664, %663
  %666 = sub i64 %665, -812822612540582107
  %667 = add nsw i64 %662, %663
  store i64 %666, i64* %31, align 8
  store i64 2500, i64* %32, align 8
  %668 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %31, i64* dereferenceable(8) %32)
          to label %669 unwind label %434

; <label>:669:                                    ; preds = %651
  %670 = load i64, i64* %668, align 8
  %671 = sub i64 0, %670
  %672 = sub i64 %661, %671
  %673 = add nsw i64 %661, %670
  store i64 %672, i64* %30, align 8
  invoke void @_ZNSt4pairIxxEC2IxxvEEOT_OT0_(%"struct.std::pair"* %28, i64* dereferenceable(8) %29, i64* dereferenceable(8) %30)
          to label %674 unwind label %434

; <label>:674:                                    ; preds = %669
  %675 = load i32, i32* @x.61
  %676 = load i32, i32* @y.62
  %677 = add i32 %675, -900758852
  %678 = sub i32 %677, 1
  %679 = sub i32 %678, -900758852
  %680 = sub i32 %675, 1
  %681 = mul i32 %675, %679
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %676, 10
  %685 = xor i1 %683, true
  %686 = xor i1 %684, true
  %687 = xor i1 true, true
  %688 = and i1 %685, true
  %689 = and i1 %683, %687
  %690 = and i1 %686, true
  %691 = and i1 %684, %687
  %692 = or i1 %688, %689
  %693 = or i1 %690, %691
  %694 = xor i1 %692, %693
  %695 = or i1 %685, %686
  %696 = xor i1 %695, true
  %697 = or i1 true, %687
  %698 = and i1 %696, %697
  %699 = or i1 %694, %698
  %700 = or i1 %683, %684
  br i1 %699, label %701, label %1315

; <label>:701:                                    ; preds = %674, %1315
  %702 = load i32, i32* @x.61
  %703 = load i32, i32* @y.62
  %704 = sub i32 0, 1
  %705 = add i32 %702, %704
  %706 = sub i32 %702, 1
  %707 = mul i32 %702, %705
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %703, 10
  %711 = xor i1 %709, true
  %712 = xor i1 %710, true
  %713 = xor i1 false, true
  %714 = and i1 %711, false
  %715 = and i1 %709, %713
  %716 = and i1 %712, false
  %717 = and i1 %710, %713
  %718 = or i1 %714, %715
  %719 = or i1 %716, %717
  %720 = xor i1 %718, %719
  %721 = or i1 %711, %712
  %722 = xor i1 %721, true
  %723 = or i1 false, %713
  %724 = and i1 %722, %723
  %725 = or i1 %720, %724
  %726 = or i1 %709, %710
  br i1 %725, label %727, label %1315

; <label>:727:                                    ; preds = %701
  invoke void @_ZN5Graph8add_edgeERKSt4pairIxxE(%struct.Graph* %18, %"struct.std::pair"* dereferenceable(16) %28)
          to label %728 unwind label %434

; <label>:728:                                    ; preds = %727
  invoke void @_ZNSt6vectorIxSaIxEE12emplace_backIJRxEEEvDpOT_(%"class.std::vector.0"* %19, i64* dereferenceable(8) %17)
          to label %729 unwind label %434

; <label>:729:                                    ; preds = %728
  br label %730

; <label>:730:                                    ; preds = %729
  %731 = load i32, i32* @x.61
  %732 = load i32, i32* @y.62
  %733 = sub i32 %731, -8093481
  %734 = sub i32 %733, 1
  %735 = add i32 %734, -8093481
  %736 = sub i32 %731, 1
  %737 = mul i32 %731, %735
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %732, 10
  %741 = xor i1 %739, true
  %742 = xor i1 %740, true
  %743 = xor i1 true, true
  %744 = and i1 %741, true
  %745 = and i1 %739, %743
  %746 = and i1 %742, true
  %747 = and i1 %740, %743
  %748 = or i1 %744, %745
  %749 = or i1 %746, %747
  %750 = xor i1 %748, %749
  %751 = or i1 %741, %742
  %752 = xor i1 %751, true
  %753 = or i1 true, %743
  %754 = and i1 %752, %753
  %755 = or i1 %750, %754
  %756 = or i1 %739, %740
  br i1 %755, label %757, label %1316

; <label>:757:                                    ; preds = %730, %1316
  %758 = load i64, i64* %2, align 8
  %759 = sub i64 %758, 6482265986148525838
  %760 = add i64 %759, 1
  %761 = add i64 %760, 6482265986148525838
  %762 = add nsw i64 %758, 1
  store i64 %761, i64* %2, align 8
  %763 = load i32, i32* @x.61
  %764 = load i32, i32* @y.62
  %765 = sub i32 0, 1
  %766 = add i32 %763, %765
  %767 = sub i32 %763, 1
  %768 = mul i32 %763, %766
  %769 = urem i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = icmp slt i32 %764, 10
  %772 = xor i1 %770, true
  %773 = xor i1 %771, true
  %774 = xor i1 false, true
  %775 = and i1 %772, false
  %776 = and i1 %770, %774
  %777 = and i1 %773, false
  %778 = and i1 %771, %774
  %779 = or i1 %775, %776
  %780 = or i1 %777, %778
  %781 = xor i1 %779, %780
  %782 = or i1 %772, %773
  %783 = xor i1 %782, true
  %784 = or i1 false, %774
  %785 = and i1 %783, %784
  %786 = or i1 %781, %785
  %787 = or i1 %770, %771
  br i1 %786, label %788, label %1316

; <label>:788:                                    ; preds = %757
  br label %648

; <label>:789:                                    ; preds = %648
  %790 = load i32, i32* @x.61
  %791 = load i32, i32* @y.62
  %792 = sub i32 %790, 2008523451
  %793 = sub i32 %792, 1
  %794 = add i32 %793, 2008523451
  %795 = sub i32 %790, 1
  %796 = mul i32 %790, %794
  %797 = urem i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = icmp slt i32 %791, 10
  %800 = xor i1 %798, true
  %801 = xor i1 %799, true
  %802 = xor i1 false, true
  %803 = and i1 %800, false
  %804 = and i1 %798, %802
  %805 = and i1 %801, false
  %806 = and i1 %799, %802
  %807 = or i1 %803, %804
  %808 = or i1 %805, %806
  %809 = xor i1 %807, %808
  %810 = or i1 %800, %801
  %811 = xor i1 %810, true
  %812 = or i1 false, %802
  %813 = and i1 %811, %812
  %814 = or i1 %809, %813
  %815 = or i1 %798, %799
  br i1 %814, label %816, label %1359

; <label>:816:                                    ; preds = %789, %1359
  %817 = load i32, i32* @x.61
  %818 = load i32, i32* @y.62
  %819 = sub i32 %817, -405878907
  %820 = sub i32 %819, 1
  %821 = add i32 %820, -405878907
  %822 = sub i32 %817, 1
  %823 = mul i32 %817, %821
  %824 = urem i32 %823, 2
  %825 = icmp eq i32 %824, 0
  %826 = icmp slt i32 %818, 10
  %827 = xor i1 %825, true
  %828 = xor i1 %826, true
  %829 = xor i1 false, true
  %830 = and i1 %827, false
  %831 = and i1 %825, %829
  %832 = and i1 %828, false
  %833 = and i1 %826, %829
  %834 = or i1 %830, %831
  %835 = or i1 %832, %833
  %836 = xor i1 %834, %835
  %837 = or i1 %827, %828
  %838 = xor i1 %837, true
  %839 = or i1 false, %829
  %840 = and i1 %838, %839
  %841 = or i1 %836, %840
  %842 = or i1 %825, %826
  br i1 %841, label %843, label %1359

; <label>:843:                                    ; preds = %816
  br label %844

; <label>:844:                                    ; preds = %843
  %845 = load i64, i64* %1, align 8
  %846 = sub i64 %845, 217558431397006985
  %847 = add i64 %846, 1
  %848 = add i64 %847, 217558431397006985
  %849 = add nsw i64 %845, 1
  store i64 %848, i64* %1, align 8
  br label %632

; <label>:850:                                    ; preds = %632
  %851 = load i64, i64* %6, align 8
  invoke void @_Z8dijkstraRK5GraphRKSt6vectorIxSaIxEEx(%"struct.std::pair.5"* sret %34, %struct.Graph* dereferenceable(32) %18, %"class.std::vector.0"* dereferenceable(24) %19, i64 %851)
          to label %852 unwind label %434

; <label>:852:                                    ; preds = %850
  %853 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %34, i32 0, i32 0
  call void @_ZNSt6vectorIxSaIxEEC2EOS1_(%"class.std::vector.0"* %33, %"class.std::vector.0"* dereferenceable(24) %853) #3
  call void @_ZNSt4pairISt6vectorIxSaIxEES2_ED2Ev(%"struct.std::pair.5"* %34) #3
  store i64 0, i64* %1, align 8
  br label %854

; <label>:854:                                    ; preds = %1135, %852
  %855 = load i64, i64* %1, align 8
  %856 = load i64, i64* %4, align 8
  %857 = icmp slt i64 %855, %856
  br i1 %857, label %858, label %1136

; <label>:858:                                    ; preds = %854
  %859 = load i64, i64* %1, align 8
  %860 = icmp eq i64 %859, 0
  br i1 %860, label %861, label %890

; <label>:861:                                    ; preds = %858
  %862 = load i32, i32* @x.61
  %863 = load i32, i32* @y.62
  %864 = sub i32 0, 1
  %865 = add i32 %862, %864
  %866 = sub i32 %862, 1
  %867 = mul i32 %862, %865
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %863, 10
  %871 = and i1 %869, %870
  %872 = xor i1 %869, %870
  %873 = or i1 %871, %872
  %874 = or i1 %869, %870
  br i1 %873, label %875, label %1360

; <label>:875:                                    ; preds = %861, %1360
  %876 = load i32, i32* @x.61
  %877 = load i32, i32* @y.62
  %878 = sub i32 0, 1
  %879 = add i32 %876, %878
  %880 = sub i32 %876, 1
  %881 = mul i32 %876, %879
  %882 = urem i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = icmp slt i32 %877, 10
  %885 = and i1 %883, %884
  %886 = xor i1 %883, %884
  %887 = or i1 %885, %886
  %888 = or i1 %883, %884
  br i1 %887, label %889, label %1360

; <label>:889:                                    ; preds = %875
  br label %1087

; <label>:890:                                    ; preds = %858
  %891 = load i32, i32* @x.61
  %892 = load i32, i32* @y.62
  %893 = add i32 %891, 749858526
  %894 = sub i32 %893, 1
  %895 = sub i32 %894, 749858526
  %896 = sub i32 %891, 1
  %897 = mul i32 %891, %895
  %898 = urem i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = icmp slt i32 %892, 10
  %901 = and i1 %899, %900
  %902 = xor i1 %899, %900
  %903 = or i1 %901, %902
  %904 = or i1 %899, %900
  br i1 %903, label %905, label %1361

; <label>:905:                                    ; preds = %890, %1361
  store i64 1152921504606846976, i64* %35, align 8
  store i64 0, i64* %2, align 8
  %906 = load i32, i32* @x.61
  %907 = load i32, i32* @y.62
  %908 = sub i32 0, 1
  %909 = add i32 %906, %908
  %910 = sub i32 %906, 1
  %911 = mul i32 %906, %909
  %912 = urem i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = icmp slt i32 %907, 10
  %915 = xor i1 %913, true
  %916 = xor i1 %914, true
  %917 = xor i1 true, true
  %918 = and i1 %915, true
  %919 = and i1 %913, %917
  %920 = and i1 %916, true
  %921 = and i1 %914, %917
  %922 = or i1 %918, %919
  %923 = or i1 %920, %921
  %924 = xor i1 %922, %923
  %925 = or i1 %915, %916
  %926 = xor i1 %925, true
  %927 = or i1 true, %917
  %928 = and i1 %926, %927
  %929 = or i1 %924, %928
  %930 = or i1 %913, %914
  br i1 %929, label %931, label %1361

; <label>:931:                                    ; preds = %905
  br label %932

; <label>:932:                                    ; preds = %1076, %931
  %933 = load i32, i32* @x.61
  %934 = load i32, i32* @y.62
  %935 = sub i32 0, 1
  %936 = add i32 %933, %935
  %937 = sub i32 %933, 1
  %938 = mul i32 %933, %936
  %939 = urem i32 %938, 2
  %940 = icmp eq i32 %939, 0
  %941 = icmp slt i32 %934, 10
  %942 = and i1 %940, %941
  %943 = xor i1 %940, %941
  %944 = or i1 %942, %943
  %945 = or i1 %940, %941
  br i1 %944, label %946, label %1362

; <label>:946:                                    ; preds = %932, %1362
  %947 = load i64, i64* %2, align 8
  %948 = icmp slt i64 %947, 2501
  %949 = load i32, i32* @x.61
  %950 = load i32, i32* @y.62
  %951 = sub i32 %949, -1879945696
  %952 = sub i32 %951, 1
  %953 = add i32 %952, -1879945696
  %954 = sub i32 %949, 1
  %955 = mul i32 %949, %953
  %956 = urem i32 %955, 2
  %957 = icmp eq i32 %956, 0
  %958 = icmp slt i32 %950, 10
  %959 = and i1 %957, %958
  %960 = xor i1 %957, %958
  %961 = or i1 %959, %960
  %962 = or i1 %957, %958
  br i1 %961, label %963, label %1362

; <label>:963:                                    ; preds = %946
  br i1 %948, label %964, label %1081

; <label>:964:                                    ; preds = %963
  %965 = load i32, i32* @x.61
  %966 = load i32, i32* @y.62
  %967 = sub i32 %965, 2000175734
  %968 = sub i32 %967, 1
  %969 = add i32 %968, 2000175734
  %970 = sub i32 %965, 1
  %971 = mul i32 %965, %969
  %972 = urem i32 %971, 2
  %973 = icmp eq i32 %972, 0
  %974 = icmp slt i32 %966, 10
  %975 = and i1 %973, %974
  %976 = xor i1 %973, %974
  %977 = or i1 %975, %976
  %978 = or i1 %973, %974
  br i1 %977, label %979, label %1365

; <label>:979:                                    ; preds = %964, %1365
  %980 = load i64, i64* %1, align 8
  %981 = mul nsw i64 %980, 2501
  %982 = load i64, i64* %2, align 8
  %983 = sub i64 0, %982
  %984 = sub i64 %981, %983
  %985 = add nsw i64 %981, %982
  %986 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %33, i64 %984) #3
  %987 = load i64, i64* %986, align 8
  %988 = icmp eq i64 %987, -1
  %989 = load i32, i32* @x.61
  %990 = load i32, i32* @y.62
  %991 = sub i32 %989, -1192279648
  %992 = sub i32 %991, 1
  %993 = add i32 %992, -1192279648
  %994 = sub i32 %989, 1
  %995 = mul i32 %989, %993
  %996 = urem i32 %995, 2
  %997 = icmp eq i32 %996, 0
  %998 = icmp slt i32 %990, 10
  %999 = xor i1 %997, true
  %1000 = xor i1 %998, true
  %1001 = xor i1 true, true
  %1002 = and i1 %999, true
  %1003 = and i1 %997, %1001
  %1004 = and i1 %1000, true
  %1005 = and i1 %998, %1001
  %1006 = or i1 %1002, %1003
  %1007 = or i1 %1004, %1005
  %1008 = xor i1 %1006, %1007
  %1009 = or i1 %999, %1000
  %1010 = xor i1 %1009, true
  %1011 = or i1 true, %1001
  %1012 = and i1 %1010, %1011
  %1013 = or i1 %1008, %1012
  %1014 = or i1 %997, %998
  br i1 %1013, label %1015, label %1365

; <label>:1015:                                   ; preds = %979
  br i1 %988, label %1016, label %1017

; <label>:1016:                                   ; preds = %1015
  br label %1030

; <label>:1017:                                   ; preds = %1015
  %1018 = load i64, i64* %1, align 8
  %1019 = mul nsw i64 %1018, 2501
  %1020 = load i64, i64* %2, align 8
  %1021 = sub i64 0, %1019
  %1022 = sub i64 0, %1020
  %1023 = add i64 %1021, %1022
  %1024 = sub i64 0, %1023
  %1025 = add nsw i64 %1019, %1020
  %1026 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %33, i64 %1024) #3
  %1027 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %35, i64* dereferenceable(8) %1026)
          to label %1028 unwind label %1077

; <label>:1028:                                   ; preds = %1017
  %1029 = load i64, i64* %1027, align 8
  store i64 %1029, i64* %35, align 8
  br label %1030

; <label>:1030:                                   ; preds = %1028, %1016
  %1031 = load i32, i32* @x.61
  %1032 = load i32, i32* @y.62
  %1033 = sub i32 %1031, -885237286
  %1034 = sub i32 %1033, 1
  %1035 = add i32 %1034, -885237286
  %1036 = sub i32 %1031, 1
  %1037 = mul i32 %1031, %1035
  %1038 = urem i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = icmp slt i32 %1032, 10
  %1041 = xor i1 %1039, true
  %1042 = xor i1 %1040, true
  %1043 = xor i1 true, true
  %1044 = and i1 %1041, true
  %1045 = and i1 %1039, %1043
  %1046 = and i1 %1042, true
  %1047 = and i1 %1040, %1043
  %1048 = or i1 %1044, %1045
  %1049 = or i1 %1046, %1047
  %1050 = xor i1 %1048, %1049
  %1051 = or i1 %1041, %1042
  %1052 = xor i1 %1051, true
  %1053 = or i1 true, %1043
  %1054 = and i1 %1052, %1053
  %1055 = or i1 %1050, %1054
  %1056 = or i1 %1039, %1040
  br i1 %1055, label %1057, label %1411

; <label>:1057:                                   ; preds = %1030, %1411
  %1058 = load i64, i64* %2, align 8
  %1059 = sub i64 0, 1
  %1060 = sub i64 %1058, %1059
  %1061 = add nsw i64 %1058, 1
  store i64 %1060, i64* %2, align 8
  %1062 = load i32, i32* @x.61
  %1063 = load i32, i32* @y.62
  %1064 = sub i32 %1062, 1277288247
  %1065 = sub i32 %1064, 1
  %1066 = add i32 %1065, 1277288247
  %1067 = sub i32 %1062, 1
  %1068 = mul i32 %1062, %1066
  %1069 = urem i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  %1071 = icmp slt i32 %1063, 10
  %1072 = and i1 %1070, %1071
  %1073 = xor i1 %1070, %1071
  %1074 = or i1 %1072, %1073
  %1075 = or i1 %1070, %1071
  br i1 %1074, label %1076, label %1411

; <label>:1076:                                   ; preds = %1057
  br label %932

; <label>:1077:                                   ; preds = %1084, %1081, %1017
  %1078 = landingpad { i8*, i32 }
          cleanup
  %1079 = extractvalue { i8*, i32 } %1078, 0
  store i8* %1079, i8** %9, align 8
  %1080 = extractvalue { i8*, i32 } %1078, 1
  store i32 %1080, i32* %10, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %33) #3
  br label %1137

; <label>:1081:                                   ; preds = %963
  %1082 = load i64, i64* %35, align 8
  %1083 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1082)
          to label %1084 unwind label %1077

; <label>:1084:                                   ; preds = %1081
  %1085 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1083, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1086 unwind label %1077

; <label>:1086:                                   ; preds = %1084
  br label %1087

; <label>:1087:                                   ; preds = %1086, %889
  %1088 = load i32, i32* @x.61
  %1089 = load i32, i32* @y.62
  %1090 = sub i32 %1088, -228789427
  %1091 = sub i32 %1090, 1
  %1092 = add i32 %1091, -228789427
  %1093 = sub i32 %1088, 1
  %1094 = mul i32 %1088, %1092
  %1095 = urem i32 %1094, 2
  %1096 = icmp eq i32 %1095, 0
  %1097 = icmp slt i32 %1089, 10
  %1098 = xor i1 %1096, true
  %1099 = xor i1 %1097, true
  %1100 = xor i1 false, true
  %1101 = and i1 %1098, false
  %1102 = and i1 %1096, %1100
  %1103 = and i1 %1099, false
  %1104 = and i1 %1097, %1100
  %1105 = or i1 %1101, %1102
  %1106 = or i1 %1103, %1104
  %1107 = xor i1 %1105, %1106
  %1108 = or i1 %1098, %1099
  %1109 = xor i1 %1108, true
  %1110 = or i1 false, %1100
  %1111 = and i1 %1109, %1110
  %1112 = or i1 %1107, %1111
  %1113 = or i1 %1096, %1097
  br i1 %1112, label %1114, label %1417

; <label>:1114:                                   ; preds = %1087, %1417
  %1115 = load i64, i64* %1, align 8
  %1116 = sub i64 0, %1115
  %1117 = sub i64 0, 1
  %1118 = add i64 %1116, %1117
  %1119 = sub i64 0, %1118
  %1120 = add nsw i64 %1115, 1
  store i64 %1119, i64* %1, align 8
  %1121 = load i32, i32* @x.61
  %1122 = load i32, i32* @y.62
  %1123 = sub i32 %1121, 1455059855
  %1124 = sub i32 %1123, 1
  %1125 = add i32 %1124, 1455059855
  %1126 = sub i32 %1121, 1
  %1127 = mul i32 %1121, %1125
  %1128 = urem i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = icmp slt i32 %1122, 10
  %1131 = and i1 %1129, %1130
  %1132 = xor i1 %1129, %1130
  %1133 = or i1 %1131, %1132
  %1134 = or i1 %1129, %1130
  br i1 %1133, label %1135, label %1417

; <label>:1135:                                   ; preds = %1114
  br label %854

; <label>:1136:                                   ; preds = %854
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %33) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %19) #3
  call void @_ZN5GraphD2Ev(%struct.Graph* %18) #3
  call void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EED2Ev(%"class.std::vector.36"* %15) #3
  call void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EED2Ev(%"class.std::vector.25"* %8) #3
  ret i32 0

; <label>:1137:                                   ; preds = %1077, %434
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %19) #3
  call void @_ZN5GraphD2Ev(%struct.Graph* %18) #3
  br label %1138

; <label>:1138:                                   ; preds = %1137, %370
  call void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EED2Ev(%"class.std::vector.36"* %15) #3
  br label %1139

; <label>:1139:                                   ; preds = %1138, %209
  call void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EED2Ev(%"class.std::vector.25"* %8) #3
  br label %1140

; <label>:1140:                                   ; preds = %1139
  %1141 = load i32, i32* @x.61
  %1142 = load i32, i32* @y.62
  %1143 = add i32 %1141, 1932362925
  %1144 = sub i32 %1143, 1
  %1145 = sub i32 %1144, 1932362925
  %1146 = sub i32 %1141, 1
  %1147 = mul i32 %1141, %1145
  %1148 = urem i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = icmp slt i32 %1142, 10
  %1151 = xor i1 %1149, true
  %1152 = xor i1 %1150, true
  %1153 = xor i1 true, true
  %1154 = and i1 %1151, true
  %1155 = and i1 %1149, %1153
  %1156 = and i1 %1152, true
  %1157 = and i1 %1150, %1153
  %1158 = or i1 %1154, %1155
  %1159 = or i1 %1156, %1157
  %1160 = xor i1 %1158, %1159
  %1161 = or i1 %1151, %1152
  %1162 = xor i1 %1161, true
  %1163 = or i1 true, %1153
  %1164 = and i1 %1162, %1163
  %1165 = or i1 %1160, %1164
  %1166 = or i1 %1149, %1150
  br i1 %1165, label %1167, label %1430

; <label>:1167:                                   ; preds = %1140, %1430
  %1168 = load i8*, i8** %9, align 8
  %1169 = load i32, i32* %10, align 4
  %1170 = insertvalue { i8*, i32 } undef, i8* %1168, 0
  %1171 = insertvalue { i8*, i32 } %1170, i32 %1169, 1
  %1172 = load i32, i32* @x.61
  %1173 = load i32, i32* @y.62
  %1174 = sub i32 %1172, 1653293026
  %1175 = sub i32 %1174, 1
  %1176 = add i32 %1175, 1653293026
  %1177 = sub i32 %1172, 1
  %1178 = mul i32 %1172, %1176
  %1179 = urem i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = icmp slt i32 %1173, 10
  %1182 = and i1 %1180, %1181
  %1183 = xor i1 %1180, %1181
  %1184 = or i1 %1182, %1183
  %1185 = or i1 %1180, %1181
  br i1 %1184, label %1186, label %1430

; <label>:1186:                                   ; preds = %1167
  resume { i8*, i32 } %1171

; <label>:1187:                                   ; preds = %69, %42
  store i64 0, i64* %1, align 8
  br label %69

; <label>:1188:                                   ; preds = %119, %105
  br label %119

; <label>:1189:                                   ; preds = %188, %161
  %1190 = load i64, i64* %1, align 8
  %1191 = add i64 0, 2959804536411967407
  %1192 = sub i64 %1191, %1190
  %1193 = sub i64 %1192, 2959804536411967407
  %1194 = sub i64 0, %1190
  %1195 = add i64 %1193, -2008932725547514419
  %1196 = add i64 %1195, 1
  %1197 = sub i64 %1196, -2008932725547514419
  %1198 = add i64 %1193, 1
  %1199 = add i64 0, -2185062649636629067
  %1200 = sub i64 %1199, %1190
  %1201 = sub i64 %1200, -2185062649636629067
  %1202 = sub i64 0, %1190
  %1203 = sub i64 0, %1201
  %1204 = sub i64 0, 1
  %1205 = add i64 %1203, %1204
  %1206 = sub i64 0, %1205
  %1207 = add i64 %1201, 1
  %1208 = add i64 %1190, 898116924876394319
  %1209 = sub i64 %1208, 1
  %1210 = sub i64 %1209, 898116924876394319
  %1211 = sub i64 %1190, 1
  %1212 = mul i64 %1210, 1
  %1213 = add i64 %1190, 6240175988145253742
  %1214 = sub i64 %1213, 1
  %1215 = sub i64 %1214, 6240175988145253742
  %1216 = sub i64 %1190, 1
  %1217 = mul i64 %1215, 1
  %1218 = add i64 %1190, 5864213592832133976
  %1219 = add i64 %1218, 1
  %1220 = sub i64 %1219, 5864213592832133976
  %1221 = add nsw i64 %1190, 1
  store i64 %1220, i64* %1, align 8
  br label %188

; <label>:1222:                                   ; preds = %235, %220
  br label %235

; <label>:1223:                                   ; preds = %294, %267
  br label %294

; <label>:1224:                                   ; preds = %341, %314
  %1225 = landingpad { i8*, i32 }
          cleanup
  %1226 = extractvalue { i8*, i32 } %1225, 0
  store i8* %1226, i8** %9, align 8
  %1227 = extractvalue { i8*, i32 } %1225, 1
  store i32 %1227, i32* %10, align 4
  br label %341

; <label>:1228:                                   ; preds = %398, %371
  %1229 = load i64, i64* %4, align 8
  %1230 = shl i64 %1229, 2501
  %1231 = shl i64 %1229, 2501
  %1232 = shl i64 %1229, 2501
  %1233 = sub i64 0, -5734241486643259822
  %1234 = sub i64 %1233, %1229
  %1235 = add i64 %1234, -5734241486643259822
  %1236 = sub i64 0, %1229
  %1237 = sub i64 %1235, 3457614285878548699
  %1238 = add i64 %1237, 2501
  %1239 = add i64 %1238, 3457614285878548699
  %1240 = add i64 %1235, 2501
  %1241 = add i64 0, 583477158715158417
  %1242 = sub i64 %1241, %1229
  %1243 = sub i64 %1242, 583477158715158417
  %1244 = sub i64 0, %1229
  %1245 = sub i64 %1243, 110296159762855389
  %1246 = add i64 %1245, 2501
  %1247 = add i64 %1246, 110296159762855389
  %1248 = add i64 %1243, 2501
  %1249 = sub i64 %1229, 7142915412127090952
  %1250 = sub i64 %1249, 2501
  %1251 = add i64 %1250, 7142915412127090952
  %1252 = sub i64 %1229, 2501
  %1253 = mul i64 %1251, 2501
  %1254 = shl i64 %1229, 2501
  %1255 = sub i64 0, 2501
  %1256 = add i64 %1229, %1255
  %1257 = sub i64 %1229, 2501
  %1258 = mul i64 %1256, 2501
  %1259 = mul nsw i64 %1229, 2501
  br label %398

; <label>:1260:                                   ; preds = %473, %458
  %1261 = load i64, i64* %12, align 8
  %1262 = sub i64 0, 2501
  %1263 = add i64 %1261, %1262
  %1264 = sub i64 %1261, 2501
  %1265 = mul i64 %1263, 2501
  %1266 = shl i64 %1261, 2501
  %1267 = mul nsw i64 %1261, 2501
  %1268 = load i64, i64* %2, align 8
  %1269 = shl i64 %1267, %1268
  %1270 = shl i64 %1267, %1268
  %1271 = shl i64 %1267, %1268
  %1272 = sub i64 %1267, -5815788644289810112
  %1273 = add i64 %1272, %1268
  %1274 = add i64 %1273, -5815788644289810112
  %1275 = add nsw i64 %1267, %1268
  store i64 %1274, i64* %25, align 8
  %1276 = load i64, i64* %11, align 8
  %1277 = shl i64 %1276, 2501
  %1278 = shl i64 %1276, 2501
  %1279 = sub i64 0, 1424547682148976048
  %1280 = sub i64 %1279, %1276
  %1281 = add i64 %1280, 1424547682148976048
  %1282 = sub i64 0, %1276
  %1283 = sub i64 %1281, 6783858382202880466
  %1284 = add i64 %1283, 2501
  %1285 = add i64 %1284, 6783858382202880466
  %1286 = add i64 %1281, 2501
  %1287 = mul nsw i64 %1276, 2501
  %1288 = load i64, i64* %2, align 8
  %1289 = sub i64 0, %1287
  %1290 = sub i64 0, %1288
  %1291 = add i64 %1289, %1290
  %1292 = sub i64 0, %1291
  %1293 = add nsw i64 %1287, %1288
  %1294 = load i64, i64* %13, align 8
  %1295 = sub i64 0, %1292
  %1296 = add i64 0, %1295
  %1297 = sub i64 0, %1292
  %1298 = add i64 %1296, -4470585756743252474
  %1299 = add i64 %1298, %1294
  %1300 = sub i64 %1299, -4470585756743252474
  %1301 = add i64 %1296, %1294
  %1302 = sub i64 %1292, 3152383135764985585
  %1303 = sub i64 %1302, %1294
  %1304 = add i64 %1303, 3152383135764985585
  %1305 = sub i64 %1292, %1294
  %1306 = mul i64 %1304, %1294
  %1307 = shl i64 %1292, %1294
  %1308 = shl i64 %1292, %1294
  %1309 = add i64 %1292, 5783437353371369817
  %1310 = sub i64 %1309, %1294
  %1311 = sub i64 %1310, 5783437353371369817
  %1312 = sub nsw i64 %1292, %1294
  store i64 %1311, i64* %26, align 8
  br label %473

; <label>:1313:                                   ; preds = %548, %522
  br label %548

; <label>:1314:                                   ; preds = %590, %563
  br label %590

; <label>:1315:                                   ; preds = %701, %674
  br label %701

; <label>:1316:                                   ; preds = %757, %730
  %1317 = load i64, i64* %2, align 8
  %1318 = sub i64 0, 7527958716881344976
  %1319 = sub i64 %1318, %1317
  %1320 = add i64 %1319, 7527958716881344976
  %1321 = sub i64 0, %1317
  %1322 = sub i64 %1320, 8291681499367889834
  %1323 = add i64 %1322, 1
  %1324 = add i64 %1323, 8291681499367889834
  %1325 = add i64 %1320, 1
  %1326 = sub i64 0, %1317
  %1327 = add i64 0, %1326
  %1328 = sub i64 0, %1317
  %1329 = sub i64 0, %1327
  %1330 = sub i64 0, 1
  %1331 = add i64 %1329, %1330
  %1332 = sub i64 0, %1331
  %1333 = add i64 %1327, 1
  %1334 = add i64 0, 1581096402044203259
  %1335 = sub i64 %1334, %1317
  %1336 = sub i64 %1335, 1581096402044203259
  %1337 = sub i64 0, %1317
  %1338 = add i64 %1336, -8044385705946467435
  %1339 = add i64 %1338, 1
  %1340 = sub i64 %1339, -8044385705946467435
  %1341 = add i64 %1336, 1
  %1342 = shl i64 %1317, 1
  %1343 = shl i64 %1317, 1
  %1344 = sub i64 0, -6938798843753363592
  %1345 = sub i64 %1344, %1317
  %1346 = add i64 %1345, -6938798843753363592
  %1347 = sub i64 0, %1317
  %1348 = sub i64 0, %1346
  %1349 = sub i64 0, 1
  %1350 = add i64 %1348, %1349
  %1351 = sub i64 0, %1350
  %1352 = add i64 %1346, 1
  %1353 = shl i64 %1317, 1
  %1354 = sub i64 0, %1317
  %1355 = sub i64 0, 1
  %1356 = add i64 %1354, %1355
  %1357 = sub i64 0, %1356
  %1358 = add nsw i64 %1317, 1
  store i64 %1357, i64* %2, align 8
  br label %757

; <label>:1359:                                   ; preds = %816, %789
  br label %816

; <label>:1360:                                   ; preds = %875, %861
  br label %875

; <label>:1361:                                   ; preds = %905, %890
  store i64 1152921504606846976, i64* %35, align 8
  store i64 0, i64* %2, align 8
  br label %905

; <label>:1362:                                   ; preds = %946, %932
  %1363 = load i64, i64* %2, align 8
  %1364 = icmp slt i64 %1363, 2501
  br label %946

; <label>:1365:                                   ; preds = %979, %964
  %1366 = load i64, i64* %1, align 8
  %1367 = sub i64 0, 5577843993675913658
  %1368 = sub i64 %1367, %1366
  %1369 = add i64 %1368, 5577843993675913658
  %1370 = sub i64 0, %1366
  %1371 = sub i64 0, 2501
  %1372 = sub i64 %1369, %1371
  %1373 = add i64 %1369, 2501
  %1374 = sub i64 %1366, 6050374079644068091
  %1375 = sub i64 %1374, 2501
  %1376 = add i64 %1375, 6050374079644068091
  %1377 = sub i64 %1366, 2501
  %1378 = mul i64 %1376, 2501
  %1379 = add i64 0, -9117021808339049012
  %1380 = sub i64 %1379, %1366
  %1381 = sub i64 %1380, -9117021808339049012
  %1382 = sub i64 0, %1366
  %1383 = sub i64 0, 2501
  %1384 = sub i64 %1381, %1383
  %1385 = add i64 %1381, 2501
  %1386 = shl i64 %1366, 2501
  %1387 = mul nsw i64 %1366, 2501
  %1388 = load i64, i64* %2, align 8
  %1389 = shl i64 %1387, %1388
  %1390 = shl i64 %1387, %1388
  %1391 = shl i64 %1387, %1388
  %1392 = shl i64 %1387, %1388
  %1393 = add i64 0, 2690110266011498797
  %1394 = sub i64 %1393, %1387
  %1395 = sub i64 %1394, 2690110266011498797
  %1396 = sub i64 0, %1387
  %1397 = sub i64 0, %1395
  %1398 = sub i64 0, %1388
  %1399 = add i64 %1397, %1398
  %1400 = sub i64 0, %1399
  %1401 = add i64 %1395, %1388
  %1402 = shl i64 %1387, %1388
  %1403 = sub i64 0, %1387
  %1404 = sub i64 0, %1388
  %1405 = add i64 %1403, %1404
  %1406 = sub i64 0, %1405
  %1407 = add nsw i64 %1387, %1388
  %1408 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %33, i64 %1406) #3
  %1409 = load i64, i64* %1408, align 8
  %1410 = icmp eq i64 %1409, -1
  br label %979

; <label>:1411:                                   ; preds = %1057, %1030
  %1412 = load i64, i64* %2, align 8
  %1413 = sub i64 %1412, 2970555335793721622
  %1414 = add i64 %1413, 1
  %1415 = add i64 %1414, 2970555335793721622
  %1416 = add nsw i64 %1412, 1
  store i64 %1415, i64* %2, align 8
  br label %1057

; <label>:1417:                                   ; preds = %1114, %1087
  %1418 = load i64, i64* %1, align 8
  %1419 = add i64 0, 2403728521261259350
  %1420 = sub i64 %1419, %1418
  %1421 = sub i64 %1420, 2403728521261259350
  %1422 = sub i64 0, %1418
  %1423 = sub i64 0, 1
  %1424 = sub i64 %1421, %1423
  %1425 = add i64 %1421, 1
  %1426 = shl i64 %1418, 1
  %1427 = sub i64 0, 1
  %1428 = sub i64 %1418, %1427
  %1429 = add nsw i64 %1418, 1
  store i64 %1428, i64* %1, align 8
  br label %1114

; <label>:1430:                                   ; preds = %1167, %1140
  %1431 = load i8*, i8** %9, align 8
  %1432 = load i32, i32* %10, align 4
  %1433 = insertvalue { i8*, i32 } undef, i8* %1431, 0
  %1434 = insertvalue { i8*, i32 } %1433, i32 %1432, 1
  br label %1167
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.63
  %10 = load i32, i32* @y.64
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1120516487, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %140
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1120516487, label %22
    i32 160138582, label %42
    i32 1162877234, label %70
    i32 961881402, label %73
    i32 1253822712, label %100
    i32 495275636, label %119
    i32 1650137189, label %120
    i32 -228272370, label %124
    i32 219612151, label %127
    i32 639650538, label %136
  ]

; <label>:21:                                     ; preds = %19
  br label %140

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 160138582, i32 219612151
  store i32 %41, i32* %18
  br label %140

; <label>:42:                                     ; preds = %19
  %43 = alloca i64*, align 8
  store i64** %43, i64*** %6
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %5
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %4
  %46 = load volatile i64**, i64*** %5
  store i64* %0, i64** %46, align 8
  %47 = load volatile i64**, i64*** %4
  store i64* %1, i64** %47, align 8
  %48 = load volatile i64**, i64*** %4
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = load volatile i64**, i64*** %5
  %52 = load i64*, i64** %51, align 8
  %53 = load i64, i64* %52, align 8
  %54 = icmp slt i64 %50, %53
  store i1 %54, i1* %3
  %55 = load i32, i32* @x.63
  %56 = load i32, i32* @y.64
  %57 = sub i32 %55, 1028964489
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 1028964489
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 1162877234, i32 219612151
  store i32 %69, i32* %18
  br label %140

; <label>:70:                                     ; preds = %19
  %71 = load volatile i1, i1* %3
  %72 = select i1 %71, i32 961881402, i32 1650137189
  store i32 %72, i32* %18
  br label %140

; <label>:73:                                     ; preds = %19
  %74 = load i32, i32* @x.63
  %75 = load i32, i32* @y.64
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 1253822712, i32 639650538
  store i32 %99, i32* %18
  br label %140

; <label>:100:                                    ; preds = %19
  %101 = load volatile i64**, i64*** %4
  %102 = load i64*, i64** %101, align 8
  %103 = load volatile i64**, i64*** %6
  store i64* %102, i64** %103, align 8
  %104 = load i32, i32* @x.63
  %105 = load i32, i32* @y.64
  %106 = sub i32 %104, 1708188733
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 1708188733
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 495275636, i32 639650538
  store i32 %118, i32* %18
  br label %140

; <label>:119:                                    ; preds = %19
  store i32 -228272370, i32* %18
  br label %140

; <label>:120:                                    ; preds = %19
  %121 = load volatile i64**, i64*** %5
  %122 = load i64*, i64** %121, align 8
  %123 = load volatile i64**, i64*** %6
  store i64* %122, i64** %123, align 8
  store i32 -228272370, i32* %18
  br label %140

; <label>:124:                                    ; preds = %19
  %125 = load volatile i64**, i64*** %6
  %126 = load i64*, i64** %125, align 8
  ret i64* %126

; <label>:127:                                    ; preds = %19
  %128 = alloca i64*, align 8
  %129 = alloca i64*, align 8
  %130 = alloca i64*, align 8
  store i64* %0, i64** %129, align 8
  store i64* %1, i64** %130, align 8
  %131 = load i64*, i64** %130, align 8
  %132 = load i64, i64* %131, align 8
  %133 = load i64*, i64** %129, align 8
  %134 = load i64, i64* %133, align 8
  %135 = icmp slt i64 %132, %134
  store i32 160138582, i32* %18
  br label %140

; <label>:136:                                    ; preds = %19
  %137 = load volatile i64**, i64*** %4
  %138 = load i64*, i64** %137, align 8
  %139 = load volatile i64**, i64*** %6
  store i64* %138, i64** %139, align 8
  store i32 1253822712, i32* %18
  br label %140

; <label>:140:                                    ; preds = %136, %127, %120, %119, %100, %73, %70, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EEC2Ev(%"class.std::vector.25"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EEC2Ev(%"struct.std::_Vector_base.26"* %4)
          to label %5 unwind label %47

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.65
  %7 = load i32, i32* @y.66
  %8 = sub i32 %6, 2111678702
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2111678702
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %50

; <label>:20:                                     ; preds = %5, %50
  %21 = load i32, i32* @x.65
  %22 = load i32, i32* @y.66
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %50

; <label>:46:                                     ; preds = %20
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #11
  unreachable

; <label>:50:                                     ; preds = %20, %5
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE7reserveEm(%"class.std::vector.25"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.25"*
  %6 = alloca %"class.std::vector.25"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::tuple.30"*, align 8
  %10 = alloca %"class.std::move_iterator.56", align 8
  %11 = alloca %"class.std::move_iterator.56", align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %6, align 8
  store i64 %1, i64* %7, align 8
  %12 = load %"class.std::vector.25"*, %"class.std::vector.25"** %6, align 8
  store %"class.std::vector.25"* %12, %"class.std::vector.25"** %5
  %13 = load i64, i64* %7, align 8
  store i64 %13, i64* %4
  %14 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %15 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %14) #3
  store i64 %15, i64* %3
  %16 = alloca i32
  store i32 41493687, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %312
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 41493687, label %20
    i32 10665012, label %25
    i32 -57753430, label %26
    i32 1384336820, label %32
    i32 -1406080641, label %60
    i32 -1470230721, label %158
    i32 1916366842, label %159
    i32 2083513302, label %174
    i32 2020076259, label %201
    i32 1171241047, label %202
    i32 -759831547, label %311
  ]

; <label>:19:                                     ; preds = %17
  br label %312

; <label>:20:                                     ; preds = %17
  %21 = load volatile i64, i64* %4
  %22 = load volatile i64, i64* %3
  %23 = icmp ugt i64 %21, %22
  %24 = select i1 %23, i32 10665012, i32 -57753430
  store i32 %24, i32* %16
  br label %312

; <label>:25:                                     ; preds = %17
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0)) #12
  unreachable

; <label>:26:                                     ; preds = %17
  %27 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %28 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8capacityEv(%"class.std::vector.25"* %27) #3
  %29 = load i64, i64* %7, align 8
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 1384336820, i32 1916366842
  store i32 %31, i32* %16
  br label %312

; <label>:32:                                     ; preds = %17
  %33 = load i32, i32* @x.67
  %34 = load i32, i32* @y.68
  %35 = add i32 %33, 499938150
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 499938150
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1406080641, i32 1171241047
  store i32 %59, i32* %16
  br label %312

; <label>:60:                                     ; preds = %17
  %61 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %62 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %61) #3
  store i64 %62, i64* %8, align 8
  %63 = load i64, i64* %7, align 8
  %64 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %65 = bitcast %"class.std::vector.25"* %64 to %"struct.std::_Vector_base.26"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %67, align 8
  %69 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %68)
  %70 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %10, i32 0, i32 0
  store %"class.std::tuple.30"* %69, %"class.std::tuple.30"** %70, align 8
  %71 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %72 = bitcast %"class.std::vector.25"* %71 to %"struct.std::_Vector_base.26"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %73, i32 0, i32 1
  %75 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %74, align 8
  %76 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %75)
  %77 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %11, i32 0, i32 0
  store %"class.std::tuple.30"* %76, %"class.std::tuple.30"** %77, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %10, i32 0, i32 0
  %79 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %78, align 8
  %80 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %11, i32 0, i32 0
  %81 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %80, align 8
  %82 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %83 = call %"class.std::tuple.30"* @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_(%"class.std::vector.25"* %82, i64 %63, %"class.std::tuple.30"* %79, %"class.std::tuple.30"* %81)
  store %"class.std::tuple.30"* %83, %"class.std::tuple.30"** %9, align 8
  %84 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %85 = bitcast %"class.std::vector.25"* %84 to %"struct.std::_Vector_base.26"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %86, i32 0, i32 0
  %88 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %87, align 8
  %89 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %90 = bitcast %"class.std::vector.25"* %89 to %"struct.std::_Vector_base.26"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %91, i32 0, i32 1
  %93 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %92, align 8
  %94 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %95 = bitcast %"class.std::vector.25"* %94 to %"struct.std::_Vector_base.26"*
  %96 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %95) #3
  call void @_ZSt8_DestroyIPSt5tupleIJxxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.30"* %88, %"class.std::tuple.30"* %93, %"class.std::allocator.27"* dereferenceable(1) %96)
  %97 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %98 = bitcast %"class.std::vector.25"* %97 to %"struct.std::_Vector_base.26"*
  %99 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %100 = bitcast %"class.std::vector.25"* %99 to %"struct.std::_Vector_base.26"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %101, i32 0, i32 0
  %103 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %102, align 8
  %104 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %105 = bitcast %"class.std::vector.25"* %104 to %"struct.std::_Vector_base.26"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %106, i32 0, i32 2
  %108 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %107, align 8
  %109 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %110 = bitcast %"class.std::vector.25"* %109 to %"struct.std::_Vector_base.26"*
  %111 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %111, i32 0, i32 0
  %113 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %112, align 8
  %114 = ptrtoint %"class.std::tuple.30"* %108 to i64
  %115 = ptrtoint %"class.std::tuple.30"* %113 to i64
  %116 = sub i64 0, %115
  %117 = add i64 %114, %116
  %118 = sub i64 %114, %115
  %119 = sdiv exact i64 %117, 32
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %98, %"class.std::tuple.30"* %103, i64 %119)
  %120 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %9, align 8
  %121 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %122 = bitcast %"class.std::vector.25"* %121 to %"struct.std::_Vector_base.26"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %123, i32 0, i32 0
  store %"class.std::tuple.30"* %120, %"class.std::tuple.30"** %124, align 8
  %125 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %9, align 8
  %126 = load i64, i64* %8, align 8
  %127 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %125, i64 %126
  %128 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %129 = bitcast %"class.std::vector.25"* %128 to %"struct.std::_Vector_base.26"*
  %130 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %129, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %130, i32 0, i32 1
  store %"class.std::tuple.30"* %127, %"class.std::tuple.30"** %131, align 8
  %132 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %133 = bitcast %"class.std::vector.25"* %132 to %"struct.std::_Vector_base.26"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %134, i32 0, i32 0
  %136 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %135, align 8
  %137 = load i64, i64* %7, align 8
  %138 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %136, i64 %137
  %139 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %140 = bitcast %"class.std::vector.25"* %139 to %"struct.std::_Vector_base.26"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %141, i32 0, i32 2
  store %"class.std::tuple.30"* %138, %"class.std::tuple.30"** %142, align 8
  %143 = load i32, i32* @x.67
  %144 = load i32, i32* @y.68
  %145 = sub i32 %143, -169428
  %146 = sub i32 %145, 1
  %147 = add i32 %146, -169428
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 -1470230721, i32 1171241047
  store i32 %157, i32* %16
  br label %312

; <label>:158:                                    ; preds = %17
  store i32 1916366842, i32* %16
  br label %312

; <label>:159:                                    ; preds = %17
  %160 = load i32, i32* @x.67
  %161 = load i32, i32* @y.68
  %162 = sub i32 0, 1
  %163 = add i32 %160, %162
  %164 = sub i32 %160, 1
  %165 = mul i32 %160, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %161, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  %173 = select i1 %171, i32 2083513302, i32 -759831547
  store i32 %173, i32* %16
  br label %312

; <label>:174:                                    ; preds = %17
  %175 = load i32, i32* @x.67
  %176 = load i32, i32* @y.68
  %177 = sub i32 0, 1
  %178 = add i32 %175, %177
  %179 = sub i32 %175, 1
  %180 = mul i32 %175, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %176, 10
  %184 = xor i1 %182, true
  %185 = xor i1 %183, true
  %186 = xor i1 true, true
  %187 = and i1 %184, true
  %188 = and i1 %182, %186
  %189 = and i1 %185, true
  %190 = and i1 %183, %186
  %191 = or i1 %187, %188
  %192 = or i1 %189, %190
  %193 = xor i1 %191, %192
  %194 = or i1 %184, %185
  %195 = xor i1 %194, true
  %196 = or i1 true, %186
  %197 = and i1 %195, %196
  %198 = or i1 %193, %197
  %199 = or i1 %182, %183
  %200 = select i1 %198, i32 2020076259, i32 -759831547
  store i32 %200, i32* %16
  br label %312

; <label>:201:                                    ; preds = %17
  ret void

; <label>:202:                                    ; preds = %17
  %203 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %204 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %203) #3
  store i64 %204, i64* %8, align 8
  %205 = load i64, i64* %7, align 8
  %206 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %207 = bitcast %"class.std::vector.25"* %206 to %"struct.std::_Vector_base.26"*
  %208 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %207, i32 0, i32 0
  %209 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %208, i32 0, i32 0
  %210 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %209, align 8
  %211 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %210)
  %212 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %10, i32 0, i32 0
  store %"class.std::tuple.30"* %211, %"class.std::tuple.30"** %212, align 8
  %213 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %214 = bitcast %"class.std::vector.25"* %213 to %"struct.std::_Vector_base.26"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %215, i32 0, i32 1
  %217 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %216, align 8
  %218 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %217)
  %219 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %11, i32 0, i32 0
  store %"class.std::tuple.30"* %218, %"class.std::tuple.30"** %219, align 8
  %220 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %10, i32 0, i32 0
  %221 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %220, align 8
  %222 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %11, i32 0, i32 0
  %223 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %222, align 8
  %224 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %225 = call %"class.std::tuple.30"* @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_(%"class.std::vector.25"* %224, i64 %205, %"class.std::tuple.30"* %221, %"class.std::tuple.30"* %223)
  store %"class.std::tuple.30"* %225, %"class.std::tuple.30"** %9, align 8
  %226 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %227 = bitcast %"class.std::vector.25"* %226 to %"struct.std::_Vector_base.26"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %228, i32 0, i32 0
  %230 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %229, align 8
  %231 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %232 = bitcast %"class.std::vector.25"* %231 to %"struct.std::_Vector_base.26"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %233, i32 0, i32 1
  %235 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %234, align 8
  %236 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %237 = bitcast %"class.std::vector.25"* %236 to %"struct.std::_Vector_base.26"*
  %238 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %237) #3
  call void @_ZSt8_DestroyIPSt5tupleIJxxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.30"* %230, %"class.std::tuple.30"* %235, %"class.std::allocator.27"* dereferenceable(1) %238)
  %239 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %240 = bitcast %"class.std::vector.25"* %239 to %"struct.std::_Vector_base.26"*
  %241 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %242 = bitcast %"class.std::vector.25"* %241 to %"struct.std::_Vector_base.26"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %243, i32 0, i32 0
  %245 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %244, align 8
  %246 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %247 = bitcast %"class.std::vector.25"* %246 to %"struct.std::_Vector_base.26"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %248, i32 0, i32 2
  %250 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %249, align 8
  %251 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %252 = bitcast %"class.std::vector.25"* %251 to %"struct.std::_Vector_base.26"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %253, i32 0, i32 0
  %255 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %254, align 8
  %256 = ptrtoint %"class.std::tuple.30"* %250 to i64
  %257 = ptrtoint %"class.std::tuple.30"* %255 to i64
  %258 = sub i64 0, %256
  %259 = add i64 0, %258
  %260 = sub i64 0, %256
  %261 = sub i64 0, %257
  %262 = sub i64 %259, %261
  %263 = add i64 %259, %257
  %264 = shl i64 %256, %257
  %265 = shl i64 %256, %257
  %266 = sub i64 %256, 2051731562221443068
  %267 = sub i64 %266, %257
  %268 = add i64 %267, 2051731562221443068
  %269 = sub i64 %256, %257
  %270 = shl i64 %268, 32
  %271 = shl i64 %268, 32
  %272 = shl i64 %268, 32
  %273 = sub i64 %268, -699097293016117268
  %274 = sub i64 %273, 32
  %275 = add i64 %274, -699097293016117268
  %276 = sub i64 %268, 32
  %277 = mul i64 %275, 32
  %278 = sub i64 0, -158307419301046999
  %279 = sub i64 %278, %268
  %280 = add i64 %279, -158307419301046999
  %281 = sub i64 0, %268
  %282 = sub i64 0, %280
  %283 = sub i64 0, 32
  %284 = add i64 %282, %283
  %285 = sub i64 0, %284
  %286 = add i64 %280, 32
  %287 = sdiv exact i64 %268, 32
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %240, %"class.std::tuple.30"* %245, i64 %287)
  %288 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %9, align 8
  %289 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %290 = bitcast %"class.std::vector.25"* %289 to %"struct.std::_Vector_base.26"*
  %291 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %291, i32 0, i32 0
  store %"class.std::tuple.30"* %288, %"class.std::tuple.30"** %292, align 8
  %293 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %9, align 8
  %294 = load i64, i64* %8, align 8
  %295 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %293, i64 %294
  %296 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %297 = bitcast %"class.std::vector.25"* %296 to %"struct.std::_Vector_base.26"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %298, i32 0, i32 1
  store %"class.std::tuple.30"* %295, %"class.std::tuple.30"** %299, align 8
  %300 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %301 = bitcast %"class.std::vector.25"* %300 to %"struct.std::_Vector_base.26"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %302, i32 0, i32 0
  %304 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %303, align 8
  %305 = load i64, i64* %7, align 8
  %306 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %304, i64 %305
  %307 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %308 = bitcast %"class.std::vector.25"* %307 to %"struct.std::_Vector_base.26"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %308, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %309, i32 0, i32 2
  store %"class.std::tuple.30"* %306, %"class.std::tuple.30"** %310, align 8
  store i32 -1406080641, i32* %16
  br label %312

; <label>:311:                                    ; preds = %17
  store i32 2083513302, i32* %16
  br label %312

; <label>:312:                                    ; preds = %311, %202, %174, %159, %158, %60, %32, %26, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE12emplace_backIJRxS5_S5_S5_EEEvDpOT_(%"class.std::vector.25"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.std::tuple.30"*
  %7 = alloca %"class.std::tuple.30"*
  %8 = alloca %"class.std::vector.25"*
  %9 = alloca %"class.std::vector.25"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %9, align 8
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %11, align 8
  store i64* %3, i64** %12, align 8
  store i64* %4, i64** %13, align 8
  %14 = load %"class.std::vector.25"*, %"class.std::vector.25"** %9, align 8
  store %"class.std::vector.25"* %14, %"class.std::vector.25"** %8
  %15 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  %16 = bitcast %"class.std::vector.25"* %15 to %"struct.std::_Vector_base.26"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %17, i32 0, i32 1
  %19 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %18, align 8
  store %"class.std::tuple.30"* %19, %"class.std::tuple.30"** %7
  %20 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  %21 = bitcast %"class.std::vector.25"* %20 to %"struct.std::_Vector_base.26"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %22, i32 0, i32 2
  %24 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %23, align 8
  store %"class.std::tuple.30"* %24, %"class.std::tuple.30"** %6
  %25 = alloca i32
  store i32 1393689154, i32* %25
  br label %26

; <label>:26:                                     ; preds = %5, %125
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 1393689154, label %29
    i32 98530071, label %34
    i32 1149822301, label %58
    i32 -140302254, label %68
    i32 511121919, label %95
    i32 1160412204, label %123
    i32 -731259704, label %124
  ]

; <label>:28:                                     ; preds = %26
  br label %125

; <label>:29:                                     ; preds = %26
  %30 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %7
  %31 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %6
  %32 = icmp ne %"class.std::tuple.30"* %30, %31
  %33 = select i1 %32, i32 98530071, i32 1149822301
  store i32 %33, i32* %25
  br label %125

; <label>:34:                                     ; preds = %26
  %35 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  %36 = bitcast %"class.std::vector.25"* %35 to %"struct.std::_Vector_base.26"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %37 to %"class.std::allocator.27"*
  %39 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  %40 = bitcast %"class.std::vector.25"* %39 to %"struct.std::_Vector_base.26"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %42, align 8
  %44 = load i64*, i64** %10, align 8
  %45 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %44) #3
  %46 = load i64*, i64** %11, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %46) #3
  %48 = load i64*, i64** %12, align 8
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i64*, i64** %13, align 8
  %51 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %50) #3
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE9constructIS1_JRxS5_S5_S5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1) %38, %"class.std::tuple.30"* %43, i64* dereferenceable(8) %45, i64* dereferenceable(8) %47, i64* dereferenceable(8) %49, i64* dereferenceable(8) %51)
  %52 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  %53 = bitcast %"class.std::vector.25"* %52 to %"struct.std::_Vector_base.26"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %54, i32 0, i32 1
  %56 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %55, align 8
  %57 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %56, i32 1
  store %"class.std::tuple.30"* %57, %"class.std::tuple.30"** %55, align 8
  store i32 -140302254, i32* %25
  br label %125

; <label>:58:                                     ; preds = %26
  %59 = load i64*, i64** %10, align 8
  %60 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %59) #3
  %61 = load i64*, i64** %11, align 8
  %62 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %61) #3
  %63 = load i64*, i64** %12, align 8
  %64 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %63) #3
  %65 = load i64*, i64** %13, align 8
  %66 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %65) #3
  %67 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %8
  call void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_S5_S5_EEEvDpOT_(%"class.std::vector.25"* %67, i64* dereferenceable(8) %60, i64* dereferenceable(8) %62, i64* dereferenceable(8) %64, i64* dereferenceable(8) %66)
  store i32 -140302254, i32* %25
  br label %125

; <label>:68:                                     ; preds = %26
  %69 = load i32, i32* @x.69
  %70 = load i32, i32* @y.70
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 511121919, i32 -731259704
  store i32 %94, i32* %25
  br label %125

; <label>:95:                                     ; preds = %26
  %96 = load i32, i32* @x.69
  %97 = load i32, i32* @y.70
  %98 = add i32 %96, 913326662
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 913326662
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 1160412204, i32 -731259704
  store i32 %122, i32* %25
  br label %125

; <label>:123:                                    ; preds = %26
  ret void

; <label>:124:                                    ; preds = %26
  store i32 511121919, i32* %25
  br label %125

; <label>:125:                                    ; preds = %124, %95, %68, %58, %34, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EEC2Ev(%"class.std::vector.36"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.71
  %3 = load i32, i32* @y.72
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %92

; <label>:15:                                     ; preds = %1, %92
  %16 = alloca %"class.std::vector.36"*, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %16, align 8
  %17 = load %"class.std::vector.36"*, %"class.std::vector.36"** %16, align 8
  %18 = bitcast %"class.std::vector.36"* %17 to %"struct.std::_Vector_base.37"*
  %19 = load i32, i32* @x.71
  %20 = load i32, i32* @y.72
  %21 = add i32 %19, -318695424
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -318695424
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %92

; <label>:45:                                     ; preds = %15
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EEC2Ev(%"struct.std::_Vector_base.37"* %18)
          to label %46 unwind label %89

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* @x.71
  %48 = load i32, i32* @y.72
  %49 = add i32 %47, 1341761065
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1341761065
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %96

; <label>:61:                                     ; preds = %46, %96
  %62 = load i32, i32* @x.71
  %63 = load i32, i32* @y.72
  %64 = add i32 %62, -1563452039
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -1563452039
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %96

; <label>:88:                                     ; preds = %61
  ret void

; <label>:89:                                     ; preds = %45
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  call void @__clang_call_terminate(i8* %91) #11
  unreachable

; <label>:92:                                     ; preds = %15, %1
  %93 = alloca %"class.std::vector.36"*, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %93, align 8
  %94 = load %"class.std::vector.36"*, %"class.std::vector.36"** %93, align 8
  %95 = bitcast %"class.std::vector.36"* %94 to %"struct.std::_Vector_base.37"*
  br label %15

; <label>:96:                                     ; preds = %61, %46
  br label %61
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE7reserveEm(%"class.std::vector.36"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.36"*
  %7 = alloca %"class.std::vector.36"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::tuple.41"*, align 8
  %11 = alloca %"class.std::move_iterator.52", align 8
  %12 = alloca %"class.std::move_iterator.52", align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %7, align 8
  store i64 %1, i64* %8, align 8
  %13 = load %"class.std::vector.36"*, %"class.std::vector.36"** %7, align 8
  store %"class.std::vector.36"* %13, %"class.std::vector.36"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %16 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8max_sizeEv(%"class.std::vector.36"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 48702741, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %166
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 48702741, label %21
    i32 -2016059859, label %26
    i32 -1806613645, label %27
    i32 1588599341, label %42
    i32 -1838445013, label %73
    i32 -713192003, label %76
    i32 184186958, label %160
    i32 1975849232, label %161
  ]

; <label>:20:                                     ; preds = %18
  br label %166

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 -2016059859, i32 -1806613645
  store i32 %25, i32* %17
  br label %166

; <label>:26:                                     ; preds = %18
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0)) #12
  unreachable

; <label>:27:                                     ; preds = %18
  %28 = load i32, i32* @x.73
  %29 = load i32, i32* @y.74
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1588599341, i32 1975849232
  store i32 %41, i32* %17
  br label %166

; <label>:42:                                     ; preds = %18
  %43 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %44 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8capacityEv(%"class.std::vector.36"* %43) #3
  %45 = load i64, i64* %8, align 8
  %46 = icmp ult i64 %44, %45
  store i1 %46, i1* %3
  %47 = load i32, i32* @x.73
  %48 = load i32, i32* @y.74
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1838445013, i32 1975849232
  store i32 %72, i32* %17
  br label %166

; <label>:73:                                     ; preds = %18
  %74 = load volatile i1, i1* %3
  %75 = select i1 %74, i32 -713192003, i32 184186958
  store i32 %75, i32* %17
  br label %166

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %78 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %77) #3
  store i64 %78, i64* %9, align 8
  %79 = load i64, i64* %8, align 8
  %80 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %81 = bitcast %"class.std::vector.36"* %80 to %"struct.std::_Vector_base.37"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %83, align 8
  %85 = call %"class.std::tuple.41"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.41"* %84)
  %86 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %11, i32 0, i32 0
  store %"class.std::tuple.41"* %85, %"class.std::tuple.41"** %86, align 8
  %87 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %88 = bitcast %"class.std::vector.36"* %87 to %"struct.std::_Vector_base.37"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %89, i32 0, i32 1
  %91 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %90, align 8
  %92 = call %"class.std::tuple.41"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.41"* %91)
  %93 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %12, i32 0, i32 0
  store %"class.std::tuple.41"* %92, %"class.std::tuple.41"** %93, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %11, i32 0, i32 0
  %95 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %94, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %12, i32 0, i32 0
  %97 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %96, align 8
  %98 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %99 = call %"class.std::tuple.41"* @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_(%"class.std::vector.36"* %98, i64 %79, %"class.std::tuple.41"* %95, %"class.std::tuple.41"* %97)
  store %"class.std::tuple.41"* %99, %"class.std::tuple.41"** %10, align 8
  %100 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %101 = bitcast %"class.std::vector.36"* %100 to %"struct.std::_Vector_base.37"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %102, i32 0, i32 0
  %104 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %103, align 8
  %105 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %106 = bitcast %"class.std::vector.36"* %105 to %"struct.std::_Vector_base.37"*
  %107 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %107, i32 0, i32 1
  %109 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %108, align 8
  %110 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %111 = bitcast %"class.std::vector.36"* %110 to %"struct.std::_Vector_base.37"*
  %112 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %111) #3
  call void @_ZSt8_DestroyIPSt5tupleIJxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.41"* %104, %"class.std::tuple.41"* %109, %"class.std::allocator.38"* dereferenceable(1) %112)
  %113 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %114 = bitcast %"class.std::vector.36"* %113 to %"struct.std::_Vector_base.37"*
  %115 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %116 = bitcast %"class.std::vector.36"* %115 to %"struct.std::_Vector_base.37"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %117, i32 0, i32 0
  %119 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %118, align 8
  %120 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %121 = bitcast %"class.std::vector.36"* %120 to %"struct.std::_Vector_base.37"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %122, i32 0, i32 2
  %124 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %123, align 8
  %125 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %126 = bitcast %"class.std::vector.36"* %125 to %"struct.std::_Vector_base.37"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %127, i32 0, i32 0
  %129 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %128, align 8
  %130 = ptrtoint %"class.std::tuple.41"* %124 to i64
  %131 = ptrtoint %"class.std::tuple.41"* %129 to i64
  %132 = add i64 %130, -4046231616973309818
  %133 = sub i64 %132, %131
  %134 = sub i64 %133, -4046231616973309818
  %135 = sub i64 %130, %131
  %136 = sdiv exact i64 %134, 16
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.37"* %114, %"class.std::tuple.41"* %119, i64 %136)
  %137 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %10, align 8
  %138 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %139 = bitcast %"class.std::vector.36"* %138 to %"struct.std::_Vector_base.37"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %140, i32 0, i32 0
  store %"class.std::tuple.41"* %137, %"class.std::tuple.41"** %141, align 8
  %142 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %10, align 8
  %143 = load i64, i64* %9, align 8
  %144 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %142, i64 %143
  %145 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %146 = bitcast %"class.std::vector.36"* %145 to %"struct.std::_Vector_base.37"*
  %147 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %146, i32 0, i32 0
  %148 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %147, i32 0, i32 1
  store %"class.std::tuple.41"* %144, %"class.std::tuple.41"** %148, align 8
  %149 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %150 = bitcast %"class.std::vector.36"* %149 to %"struct.std::_Vector_base.37"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %150, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %151, i32 0, i32 0
  %153 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %152, align 8
  %154 = load i64, i64* %8, align 8
  %155 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %153, i64 %154
  %156 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %157 = bitcast %"class.std::vector.36"* %156 to %"struct.std::_Vector_base.37"*
  %158 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %157, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %158, i32 0, i32 2
  store %"class.std::tuple.41"* %155, %"class.std::tuple.41"** %159, align 8
  store i32 184186958, i32* %17
  br label %166

; <label>:160:                                    ; preds = %18
  ret void

; <label>:161:                                    ; preds = %18
  %162 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %163 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8capacityEv(%"class.std::vector.36"* %162) #3
  %164 = load i64, i64* %8, align 8
  %165 = icmp ult i64 %163, %164
  store i32 1588599341, i32* %17
  br label %166

; <label>:166:                                    ; preds = %161, %76, %73, %42, %27, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE12emplace_backIJRxS5_EEEvDpOT_(%"class.std::vector.36"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::tuple.41"*
  %5 = alloca %"class.std::tuple.41"*
  %6 = alloca %"class.std::vector.36"*
  %7 = alloca %"class.std::vector.36"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %7, align 8
  store i64* %1, i64** %8, align 8
  store i64* %2, i64** %9, align 8
  %10 = load %"class.std::vector.36"*, %"class.std::vector.36"** %7, align 8
  store %"class.std::vector.36"* %10, %"class.std::vector.36"** %6
  %11 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %12 = bitcast %"class.std::vector.36"* %11 to %"struct.std::_Vector_base.37"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %14, align 8
  store %"class.std::tuple.41"* %15, %"class.std::tuple.41"** %5
  %16 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %17 = bitcast %"class.std::vector.36"* %16 to %"struct.std::_Vector_base.37"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %18, i32 0, i32 2
  %20 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %19, align 8
  store %"class.std::tuple.41"* %20, %"class.std::tuple.41"** %4
  %21 = alloca i32
  store i32 -2044671266, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %108
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -2044671266, label %25
    i32 1945324110, label %30
    i32 -1873794375, label %45
    i32 94588078, label %80
    i32 587762076, label %81
    i32 670509970, label %87
    i32 263852607, label %88
  ]

; <label>:24:                                     ; preds = %22
  br label %108

; <label>:25:                                     ; preds = %22
  %26 = load volatile %"class.std::tuple.41"*, %"class.std::tuple.41"** %5
  %27 = load volatile %"class.std::tuple.41"*, %"class.std::tuple.41"** %4
  %28 = icmp ne %"class.std::tuple.41"* %26, %27
  %29 = select i1 %28, i32 1945324110, i32 587762076
  store i32 %29, i32* %21
  br label %108

; <label>:30:                                     ; preds = %22
  %31 = load i32, i32* @x.75
  %32 = load i32, i32* @y.76
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1873794375, i32 263852607
  store i32 %44, i32* %21
  br label %108

; <label>:45:                                     ; preds = %22
  %46 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %47 = bitcast %"class.std::vector.36"* %46 to %"struct.std::_Vector_base.37"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %48 to %"class.std::allocator.38"*
  %50 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %51 = bitcast %"class.std::vector.36"* %50 to %"struct.std::_Vector_base.37"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %52, i32 0, i32 1
  %54 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %53, align 8
  %55 = load i64*, i64** %8, align 8
  %56 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %55) #3
  %57 = load i64*, i64** %9, align 8
  %58 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %57) #3
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.38"* dereferenceable(1) %49, %"class.std::tuple.41"* %54, i64* dereferenceable(8) %56, i64* dereferenceable(8) %58)
  %59 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %60 = bitcast %"class.std::vector.36"* %59 to %"struct.std::_Vector_base.37"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %61, i32 0, i32 1
  %63 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %62, align 8
  %64 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %63, i32 1
  store %"class.std::tuple.41"* %64, %"class.std::tuple.41"** %62, align 8
  %65 = load i32, i32* @x.75
  %66 = load i32, i32* @y.76
  %67 = add i32 %65, -1989037573
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -1989037573
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 94588078, i32 263852607
  store i32 %79, i32* %21
  br label %108

; <label>:80:                                     ; preds = %22
  store i32 670509970, i32* %21
  br label %108

; <label>:81:                                     ; preds = %22
  %82 = load i64*, i64** %8, align 8
  %83 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %82) #3
  %84 = load i64*, i64** %9, align 8
  %85 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %84) #3
  %86 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  call void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_EEEvDpOT_(%"class.std::vector.36"* %86, i64* dereferenceable(8) %83, i64* dereferenceable(8) %85)
  store i32 670509970, i32* %21
  br label %108

; <label>:87:                                     ; preds = %22
  ret void

; <label>:88:                                     ; preds = %22
  %89 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %90 = bitcast %"class.std::vector.36"* %89 to %"struct.std::_Vector_base.37"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %90, i32 0, i32 0
  %92 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %91 to %"class.std::allocator.38"*
  %93 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %94 = bitcast %"class.std::vector.36"* %93 to %"struct.std::_Vector_base.37"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %95, i32 0, i32 1
  %97 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %96, align 8
  %98 = load i64*, i64** %8, align 8
  %99 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %98) #3
  %100 = load i64*, i64** %9, align 8
  %101 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %100) #3
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.38"* dereferenceable(1) %92, %"class.std::tuple.41"* %97, i64* dereferenceable(8) %99, i64* dereferenceable(8) %101)
  %102 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %6
  %103 = bitcast %"class.std::vector.36"* %102 to %"struct.std::_Vector_base.37"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %104, i32 0, i32 1
  %106 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %105, align 8
  %107 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %106, i32 1
  store %"class.std::tuple.41"* %107, %"class.std::tuple.41"** %105, align 8
  store i32 -1873794375, i32* %21
  br label %108

; <label>:108:                                    ; preds = %88, %81, %80, %45, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphC2Ex(%struct.Graph*, i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.Graph*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %struct.Graph* %0, %struct.Graph** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %struct.Graph*, %struct.Graph** %3, align 8
  %9 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 0
  %10 = load i64, i64* %4, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 1
  call void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator"* %5) #3
  invoke void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2EmRKS2_(%"class.std::vector"* %11, i64 0, %"class.std::allocator"* dereferenceable(1) %5)
          to label %12 unwind label %13

; <label>:12:                                     ; preds = %2
  call void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator"* %5) #3
  ret void

; <label>:13:                                     ; preds = %2
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %6, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %7, align 4
  call void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator"* %5) #3
  br label %17

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* @x.77
  %19 = load i32, i32* @y.78
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %62

; <label>:43:                                     ; preds = %17, %62
  %44 = load i8*, i8** %6, align 8
  %45 = load i32, i32* %7, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  %48 = load i32, i32* @x.77
  %49 = load i32, i32* @y.78
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %43
  resume { i8*, i32 } %47

; <label>:62:                                     ; preds = %43, %17
  %63 = load i8*, i8** %6, align 8
  %64 = load i32, i32* %7, align 4
  %65 = insertvalue { i8*, i32 } undef, i8* %63, 0
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.79
  %3 = load i32, i32* @y.80
  %4 = add i32 %2, -1732622598
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1732622598
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %105

; <label>:16:                                     ; preds = %1, %105
  %17 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %17, align 8
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %19 = bitcast %"class.std::vector.0"* %18 to %"struct.std::_Vector_base.1"*
  %20 = load i32, i32* @x.79
  %21 = load i32, i32* @y.80
  %22 = add i32 %20, -1090522637
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1090522637
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %105

; <label>:46:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.1"* %19)
          to label %47 unwind label %102

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* @x.79
  %49 = load i32, i32* @y.80
  %50 = add i32 %48, 1217409083
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1217409083
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %109

; <label>:74:                                     ; preds = %47, %109
  %75 = load i32, i32* @x.79
  %76 = load i32, i32* @y.80
  %77 = sub i32 %75, 1426671090
  %78 = sub i32 %77, 1
  %79 = add i32 %78, 1426671090
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %109

; <label>:101:                                    ; preds = %74
  ret void

; <label>:102:                                    ; preds = %46
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #11
  unreachable

; <label>:105:                                    ; preds = %16, %1
  %106 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %106, align 8
  %107 = load %"class.std::vector.0"*, %"class.std::vector.0"** %106, align 8
  %108 = bitcast %"class.std::vector.0"* %107 to %"struct.std::_Vector_base.1"*
  br label %16

; <label>:109:                                    ; preds = %74, %47
  br label %74
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::tuple.30"* @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EEixEm(%"class.std::vector.25"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.30"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.81
  %7 = load i32, i32* @y.82
  %8 = add i32 %6, 64790265
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 64790265
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 929162739, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 929162739, label %20
    i32 -404140953, label %28
    i32 1783727015, label %64
    i32 -423746650, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -404140953, i32 -423746650
  store i32 %27, i32* %16
  br label %76

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.25"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.25"*, %"class.std::vector.25"** %29, align 8
  %32 = bitcast %"class.std::vector.25"* %31 to %"struct.std::_Vector_base.26"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %35, i64 %36
  store %"class.std::tuple.30"* %37, %"class.std::tuple.30"** %3
  %38 = load i32, i32* @x.81
  %39 = load i32, i32* @y.82
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1783727015, i32 -423746650
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %3
  ret %"class.std::tuple.30"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::vector.25"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::vector.25"*, %"class.std::vector.25"** %67, align 8
  %70 = bitcast %"class.std::vector.25"* %69 to %"struct.std::_Vector_base.26"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %73, i64 %74
  store i32 -404140953, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt3tieIJxxxxEESt5tupleIJDpRT_EES3_(%"class.std::tuple.44"* noalias sret, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  store i64* %4, i64** %9, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = load i64*, i64** %8, align 8
  %13 = load i64*, i64** %9, align 8
  invoke void @_ZNSt5tupleIJRxS0_S0_S0_EEC2ES0_S0_S0_S0_(%"class.std::tuple.44"* %0, i64* dereferenceable(8) %10, i64* dereferenceable(8) %11, i64* dereferenceable(8) %12, i64* dereferenceable(8) %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %5
  ret void

; <label>:15:                                     ; preds = %5
  %16 = landingpad { i8*, i32 }
          catch i8* null
  %17 = extractvalue { i8*, i32 } %16, 0
  call void @__clang_call_terminate(i8* %17) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %"class.std::tuple.44"* @_ZNSt5tupleIJRxS0_S0_S0_EEaSIJxxxxEvEERS1_RKS_IJDpT_EE(%"class.std::tuple.44"*, %"class.std::tuple.30"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.44"*, align 8
  %4 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.44"* %0, %"class.std::tuple.44"** %3, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %4, align 8
  %5 = load %"class.std::tuple.44"*, %"class.std::tuple.44"** %3, align 8
  %6 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  %7 = bitcast %"class.std::tuple.30"* %6 to %"struct.std::_Tuple_impl.31"*
  %8 = bitcast %"class.std::tuple.44"* %5 to %"struct.std::_Tuple_impl.45"*
  %9 = call dereferenceable(32) %"struct.std::_Tuple_impl.45"* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EEaSIJxxxxEEERS1_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.45"* %8, %"struct.std::_Tuple_impl.31"* dereferenceable(32) %7)
  ret %"class.std::tuple.44"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Graph8add_edgeERKSt4pairIxxE(%struct.Graph*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %struct.Graph*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %struct.Graph* %0, %struct.Graph** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %struct.Graph*, %struct.Graph** %3, align 8
  %6 = getelementptr inbounds %struct.Graph, %struct.Graph* %5, i32 0, i32 1
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRKS1_EEEvDpOT_(%"class.std::vector"* %6, %"struct.std::pair"* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IxxvEEOT_OT0_(%"struct.std::pair"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i64*, i64** %6, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE12emplace_backIJRxEEEvDpOT_(%"class.std::vector.0"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i64**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.91
  %9 = load i32, i32* @y.92
  %10 = sub i32 %8, 1772459252
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1772459252
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1856735114, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %181
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1856735114, label %22
    i32 801043020, label %42
    i32 -1305156030, label %85
    i32 -1838778479, label %88
    i32 -2119490854, label %107
    i32 -1730869312, label %112
    i32 1410842948, label %139
    i32 -1631091877, label %166
    i32 1429759993, label %167
    i32 2013072759, label %180
  ]

; <label>:21:                                     ; preds = %19
  br label %181

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 801043020, i32 1429759993
  store i32 %41, i32* %18
  br label %181

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.0"*, align 8
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %5
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %43, align 8
  %45 = load volatile i64**, i64*** %5
  store i64* %1, i64** %45, align 8
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  store %"class.std::vector.0"* %46, %"class.std::vector.0"** %4
  %47 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %48 = bitcast %"class.std::vector.0"* %47 to %"struct.std::_Vector_base.1"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %49, i32 0, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %53 = bitcast %"class.std::vector.0"* %52 to %"struct.std::_Vector_base.1"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %54, i32 0, i32 2
  %56 = load i64*, i64** %55, align 8
  %57 = icmp ne i64* %51, %56
  store i1 %57, i1* %3
  %58 = load i32, i32* @x.91
  %59 = load i32, i32* @y.92
  %60 = add i32 %58, 1158275883
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 1158275883
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1305156030, i32 1429759993
  store i32 %84, i32* %18
  br label %181

; <label>:85:                                     ; preds = %19
  %86 = load volatile i1, i1* %3
  %87 = select i1 %86, i32 -1838778479, i32 -2119490854
  store i32 %87, i32* %18
  br label %181

; <label>:88:                                     ; preds = %19
  %89 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %90 = bitcast %"class.std::vector.0"* %89 to %"struct.std::_Vector_base.1"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %90, i32 0, i32 0
  %92 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %91 to %"class.std::allocator.2"*
  %93 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %94 = bitcast %"class.std::vector.0"* %93 to %"struct.std::_Vector_base.1"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %95, i32 0, i32 1
  %97 = load i64*, i64** %96, align 8
  %98 = load volatile i64**, i64*** %5
  %99 = load i64*, i64** %98, align 8
  %100 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %99) #3
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJRxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %92, i64* %97, i64* dereferenceable(8) %100)
  %101 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %102 = bitcast %"class.std::vector.0"* %101 to %"struct.std::_Vector_base.1"*
  %103 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %103, i32 0, i32 1
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds i64, i64* %105, i32 1
  store i64* %106, i64** %104, align 8
  store i32 -1730869312, i32* %18
  br label %181

; <label>:107:                                    ; preds = %19
  %108 = load volatile i64**, i64*** %5
  %109 = load i64*, i64** %108, align 8
  %110 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %109) #3
  %111 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRxEEEvDpOT_(%"class.std::vector.0"* %111, i64* dereferenceable(8) %110)
  store i32 -1730869312, i32* %18
  br label %181

; <label>:112:                                    ; preds = %19
  %113 = load i32, i32* @x.91
  %114 = load i32, i32* @y.92
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 1410842948, i32 2013072759
  store i32 %138, i32* %18
  br label %181

; <label>:139:                                    ; preds = %19
  %140 = load i32, i32* @x.91
  %141 = load i32, i32* @y.92
  %142 = sub i32 0, 1
  %143 = add i32 %140, %142
  %144 = sub i32 %140, 1
  %145 = mul i32 %140, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %141, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 false, true
  %152 = and i1 %149, false
  %153 = and i1 %147, %151
  %154 = and i1 %150, false
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 false, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  %165 = select i1 %163, i32 -1631091877, i32 2013072759
  store i32 %165, i32* %18
  br label %181

; <label>:166:                                    ; preds = %19
  ret void

; <label>:167:                                    ; preds = %19
  %168 = alloca %"class.std::vector.0"*, align 8
  %169 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %168, align 8
  store i64* %1, i64** %169, align 8
  %170 = load %"class.std::vector.0"*, %"class.std::vector.0"** %168, align 8
  %171 = bitcast %"class.std::vector.0"* %170 to %"struct.std::_Vector_base.1"*
  %172 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %171, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %172, i32 0, i32 1
  %174 = load i64*, i64** %173, align 8
  %175 = bitcast %"class.std::vector.0"* %170 to %"struct.std::_Vector_base.1"*
  %176 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %175, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %176, i32 0, i32 2
  %178 = load i64*, i64** %177, align 8
  %179 = icmp ne i64* %174, %178
  store i32 801043020, i32* %18
  br label %181

; <label>:180:                                    ; preds = %19
  store i32 1410842948, i32* %18
  br label %181

; <label>:181:                                    ; preds = %180, %167, %139, %112, %107, %88, %85, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.41"* @_ZNSt6vectorISt5tupleIJxxEESaIS1_EEixEm(%"class.std::vector.36"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.41"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.93
  %7 = load i32, i32* @y.94
  %8 = add i32 %6, -1091657399
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1091657399
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -207611863, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -207611863, label %20
    i32 -1795691080, label %28
    i32 -2093398023, label %53
    i32 1011202697, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1795691080, i32 1011202697
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.36"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.36"*, %"class.std::vector.36"** %29, align 8
  %32 = bitcast %"class.std::vector.36"* %31 to %"struct.std::_Vector_base.37"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %35, i64 %36
  store %"class.std::tuple.41"* %37, %"class.std::tuple.41"** %3
  %38 = load i32, i32* @x.93
  %39 = load i32, i32* @y.94
  %40 = sub i32 %38, 836516771
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 836516771
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -2093398023, i32 1011202697
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile %"class.std::tuple.41"*, %"class.std::tuple.41"** %3
  ret %"class.std::tuple.41"* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.36"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.36"*, %"class.std::vector.36"** %56, align 8
  %59 = bitcast %"class.std::vector.36"* %58 to %"struct.std::_Vector_base.37"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %62, i64 %63
  store i32 -1795691080, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.20"* @_ZNSt5tupleIJRxS0_EEaSIxxEERS1_RKS_IJT_T0_EE(%"class.std::tuple.20"*, %"class.std::tuple.41"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.20"*, align 8
  %4 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.20"* %0, %"class.std::tuple.20"** %3, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %4, align 8
  %5 = load %"class.std::tuple.20"*, %"class.std::tuple.20"** %3, align 8
  %6 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  %7 = bitcast %"class.std::tuple.41"* %6 to %"struct.std::_Tuple_impl.42"*
  %8 = bitcast %"class.std::tuple.20"* %5 to %"struct.std::_Tuple_impl.21"*
  %9 = call dereferenceable(16) %"struct.std::_Tuple_impl.21"* @_ZNSt11_Tuple_implILm0EJRxS0_EEaSIJxxEEERS1_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.21"* %8, %"struct.std::_Tuple_impl.42"* dereferenceable(16) %7)
  ret %"class.std::tuple.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EOS1_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.0"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.0"* %8 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EOS1_(%"struct.std::_Vector_base.1"* %6, %"struct.std::_Vector_base.1"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt6vectorIxSaIxEES2_ED2Ev(%"struct.std::pair.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.99
  %5 = load i32, i32* @y.100
  %6 = sub i32 %4, 1573543366
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1573543366
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2052114605, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2052114605, label %18
    i32 -1149409194, label %38
    i32 -1041732117, label %58
    i32 -416096865, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1149409194, i32 -416096865
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::pair.5"*, align 8
  store %"struct.std::pair.5"* %0, %"struct.std::pair.5"** %39, align 8
  %40 = load %"struct.std::pair.5"*, %"struct.std::pair.5"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %40, i32 0, i32 1
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %41) #3
  %42 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %40, i32 0, i32 0
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %42) #3
  %43 = load i32, i32* @x.99
  %44 = load i32, i32* @y.100
  %45 = add i32 %43, -1065226574
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1065226574
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1041732117, i32 -416096865
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::pair.5"*, align 8
  store %"struct.std::pair.5"* %0, %"struct.std::pair.5"** %60, align 8
  %61 = load %"struct.std::pair.5"*, %"struct.std::pair.5"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %61, i32 0, i32 1
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %62) #3
  %63 = getelementptr inbounds %"struct.std::pair.5", %"struct.std::pair.5"* %61, i32 0, i32 0
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %63) #3
  store i32 -1149409194, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphD2Ev(%struct.Graph*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %struct.Graph*, align 8
  store %struct.Graph* %0, %struct.Graph** %2, align 8
  %3 = load %struct.Graph*, %struct.Graph** %2, align 8
  %4 = getelementptr inbounds %struct.Graph, %struct.Graph* %3, i32 0, i32 1
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EED2Ev(%"class.std::vector.36"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.36"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %2, align 8
  %5 = load %"class.std::vector.36"*, %"class.std::vector.36"** %2, align 8
  %6 = bitcast %"class.std::vector.36"* %5 to %"struct.std::_Vector_base.37"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %10 = bitcast %"class.std::vector.36"* %5 to %"struct.std::_Vector_base.37"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %12, align 8
  %14 = bitcast %"class.std::vector.36"* %5 to %"struct.std::_Vector_base.37"*
  %15 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %14) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.41"* %9, %"class.std::tuple.41"* %13, %"class.std::allocator.38"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.36"* %5 to %"struct.std::_Vector_base.37"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.37"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.36"* %5 to %"struct.std::_Vector_base.37"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.37"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EED2Ev(%"class.std::vector.25"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %8, align 8
  %10 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %14 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %15 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %14) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.30"* %9, %"class.std::tuple.30"* %13, %"class.std::allocator.27"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.26"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.26"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.105
  %25 = load i32, i32* @y.106
  %26 = add i32 %24, -1290980288
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1290980288
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %78

; <label>:50:                                     ; preds = %23, %78
  %51 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %51) #11
  %52 = load i32, i32* @x.105
  %53 = load i32, i32* @y.106
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %78

; <label>:77:                                     ; preds = %50
  unreachable

; <label>:78:                                     ; preds = %50, %23
  %79 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %79) #11
  br label %50
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %3 = getelementptr i8, i8* %2, i64 -24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %5
  %7 = bitcast i8* %6 to %"class.std::basic_ios"*
  %8 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %7, %"class.std::basic_ostream"* null)
  %9 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %10 = call i32 @_Z5solvev()
  ret i32 0
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm1ExJxEERT0_RSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.16"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  store %"struct.std::_Tuple_impl.16"* %0, %"struct.std::_Tuple_impl.16"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.16"* dereferenceable(16) %3) #3
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.16"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  store %"struct.std::_Tuple_impl.16"* %0, %"struct.std::_Tuple_impl.16"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.16"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.18"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.18"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.18"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.18"*, align 8
  store %"struct.std::_Head_base.18"* %0, %"struct.std::_Head_base.18"** %2, align 8
  %3 = load %"struct.std::_Head_base.18"*, %"struct.std::_Head_base.18"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.18", %"struct.std::_Head_base.18"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm2ExJEERT0_RSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.17"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  store %"struct.std::_Tuple_impl.17"* %0, %"struct.std::_Tuple_impl.17"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.17"* dereferenceable(8) %3) #3
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.17"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.117
  %6 = load i32, i32* @y.118
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1059840693, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1059840693, label %18
    i32 141021156, label %26
    i32 -1128848287, label %46
    i32 -1915169969, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 141021156, i32 -1915169969
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  store %"struct.std::_Tuple_impl.17"* %0, %"struct.std::_Tuple_impl.17"** %27, align 8
  %28 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %27, align 8
  %29 = bitcast %"struct.std::_Tuple_impl.17"* %28 to %"struct.std::_Head_base"*
  %30 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ExLb0EE7_M_headERS0_(%"struct.std::_Head_base"* dereferenceable(8) %29) #3
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.117
  %32 = load i32, i32* @y.118
  %33 = add i32 %31, 2087002124
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 2087002124
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1128848287, i32 -1915169969
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  store %"struct.std::_Tuple_impl.17"* %0, %"struct.std::_Tuple_impl.17"** %49, align 8
  %50 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %49, align 8
  %51 = bitcast %"struct.std::_Tuple_impl.17"* %50 to %"struct.std::_Head_base"*
  %52 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ExLb0EE7_M_headERS0_(%"struct.std::_Head_base"* dereferenceable(8) %51) #3
  store i32 141021156, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ExLb0EE7_M_headERS0_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.123
  %4 = load i32, i32* @y.124
  %5 = sub i32 %3, 126013798
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 126013798
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %233

; <label>:17:                                     ; preds = %2, %233
  %18 = alloca %"class.std::vector.0"*, align 8
  %19 = alloca %"class.std::vector.0"*, align 8
  %20 = alloca %"class.std::allocator.2", align 1
  %21 = alloca i8*
  %22 = alloca i32
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %18, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %19, align 8
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %26 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %28 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %27) #3
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %30 = bitcast %"class.std::vector.0"* %29 to %"struct.std::_Vector_base.1"*
  %31 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %30) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* sret %20, %"class.std::allocator.2"* dereferenceable(1) %31)
  %32 = load i32, i32* @x.123
  %33 = load i32, i32* @y.124
  %34 = sub i32 %32, 1177048573
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1177048573
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %233

; <label>:58:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %26, i64 %28, %"class.std::allocator.2"* dereferenceable(1) %20)
          to label %59 unwind label %81

; <label>:59:                                     ; preds = %58
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %20) #3
  %60 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %61 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %60) #3
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %23, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %64 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %63) #3
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %24, i32 0, i32 0
  store i64* %64, i64** %65, align 8
  %66 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %67, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %71 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %70) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %23, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %24, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64* %73, i64* %75, i64* %69, %"class.std::allocator.2"* dereferenceable(1) %71)
          to label %77 unwind label %139

; <label>:77:                                     ; preds = %59
  %78 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %79, i32 0, i32 1
  store i64* %76, i64** %80, align 8
  ret void

; <label>:81:                                     ; preds = %58
  %82 = load i32, i32* @x.123
  %83 = load i32, i32* @y.124
  %84 = add i32 %82, -954641252
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -954641252
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %248

; <label>:108:                                    ; preds = %81, %248
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %21, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %22, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %20) #3
  %112 = load i32, i32* @x.123
  %113 = load i32, i32* @y.124
  %114 = add i32 %112, -1248789634
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -1248789634
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %248

; <label>:138:                                    ; preds = %108
  br label %198

; <label>:139:                                    ; preds = %59
  %140 = load i32, i32* @x.123
  %141 = load i32, i32* @y.124
  %142 = add i32 %140, 1400261033
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 1400261033
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %252

; <label>:166:                                    ; preds = %139, %252
  %167 = landingpad { i8*, i32 }
          cleanup
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %21, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %22, align 4
  %170 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %170) #3
  %171 = load i32, i32* @x.123
  %172 = load i32, i32* @y.124
  %173 = sub i32 %171, -445777068
  %174 = sub i32 %173, 1
  %175 = add i32 %174, -445777068
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 false, true
  %184 = and i1 %181, false
  %185 = and i1 %179, %183
  %186 = and i1 %182, false
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 false, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  br i1 %195, label %197, label %252

; <label>:197:                                    ; preds = %166
  br label %198

; <label>:198:                                    ; preds = %197, %138
  %199 = load i32, i32* @x.123
  %200 = load i32, i32* @y.124
  %201 = sub i32 %199, -58304399
  %202 = sub i32 %201, 1
  %203 = add i32 %202, -58304399
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = and i1 %207, %208
  %210 = xor i1 %207, %208
  %211 = or i1 %209, %210
  %212 = or i1 %207, %208
  br i1 %211, label %213, label %257

; <label>:213:                                    ; preds = %198, %257
  %214 = load i8*, i8** %21, align 8
  %215 = load i32, i32* %22, align 4
  %216 = insertvalue { i8*, i32 } undef, i8* %214, 0
  %217 = insertvalue { i8*, i32 } %216, i32 %215, 1
  %218 = load i32, i32* @x.123
  %219 = load i32, i32* @y.124
  %220 = add i32 %218, -2091215102
  %221 = sub i32 %220, 1
  %222 = sub i32 %221, -2091215102
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = and i1 %226, %227
  %229 = xor i1 %226, %227
  %230 = or i1 %228, %229
  %231 = or i1 %226, %227
  br i1 %230, label %232, label %257

; <label>:232:                                    ; preds = %213
  resume { i8*, i32 } %217

; <label>:233:                                    ; preds = %17, %2
  %234 = alloca %"class.std::vector.0"*, align 8
  %235 = alloca %"class.std::vector.0"*, align 8
  %236 = alloca %"class.std::allocator.2", align 1
  %237 = alloca i8*
  %238 = alloca i32
  %239 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %240 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %234, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %235, align 8
  %241 = load %"class.std::vector.0"*, %"class.std::vector.0"** %234, align 8
  %242 = bitcast %"class.std::vector.0"* %241 to %"struct.std::_Vector_base.1"*
  %243 = load %"class.std::vector.0"*, %"class.std::vector.0"** %235, align 8
  %244 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %243) #3
  %245 = load %"class.std::vector.0"*, %"class.std::vector.0"** %235, align 8
  %246 = bitcast %"class.std::vector.0"* %245 to %"struct.std::_Vector_base.1"*
  %247 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %246) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* sret %236, %"class.std::allocator.2"* dereferenceable(1) %247)
  br label %17

; <label>:248:                                    ; preds = %108, %81
  %249 = landingpad { i8*, i32 }
          cleanup
  %250 = extractvalue { i8*, i32 } %249, 0
  store i8* %250, i8** %21, align 8
  %251 = extractvalue { i8*, i32 } %249, 1
  store i32 %251, i32* %22, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %20) #3
  br label %108

; <label>:252:                                    ; preds = %166, %139
  %253 = landingpad { i8*, i32 }
          cleanup
  %254 = extractvalue { i8*, i32 } %253, 0
  store i8* %254, i8** %21, align 8
  %255 = extractvalue { i8*, i32 } %253, 1
  store i32 %255, i32* %22, align 4
  %256 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %256) #3
  br label %166

; <label>:257:                                    ; preds = %213, %198
  %258 = load i8*, i8** %21, align 8
  %259 = load i32, i32* %22, align 4
  %260 = insertvalue { i8*, i32 } undef, i8* %258, 0
  %261 = insertvalue { i8*, i32 } %260, i32 %259, 1
  br label %213
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.129
  %5 = load i32, i32* @y.130
  %6 = add i32 %4, 869581806
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 869581806
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %161

; <label>:30:                                     ; preds = %3, %161
  %31 = alloca %"struct.std::_Vector_base.1"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.2"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %33, align 8
  %36 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %31, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %33, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37, %"class.std::allocator.2"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %32, align 8
  %40 = load i32, i32* @x.129
  %41 = load i32, i32* @y.130
  %42 = sub i32 %40, -1486829316
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1486829316
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %161

; <label>:66:                                     ; preds = %30
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %36, i64 %39)
          to label %67 unwind label %122

; <label>:67:                                     ; preds = %66
  %68 = load i32, i32* @x.129
  %69 = load i32, i32* @y.130
  %70 = sub i32 %68, -40934327
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -40934327
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %171

; <label>:94:                                     ; preds = %67, %171
  %95 = load i32, i32* @x.129
  %96 = load i32, i32* @y.130
  %97 = add i32 %95, 356816180
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 356816180
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %171

; <label>:121:                                    ; preds = %94
  ret void

; <label>:122:                                    ; preds = %66
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %34, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %35, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37) #3
  br label %126

; <label>:126:                                    ; preds = %122
  %127 = load i32, i32* @x.129
  %128 = load i32, i32* @y.130
  %129 = add i32 %127, 1000720075
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, 1000720075
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  br i1 %139, label %141, label %172

; <label>:141:                                    ; preds = %126, %172
  %142 = load i8*, i8** %34, align 8
  %143 = load i32, i32* %35, align 4
  %144 = insertvalue { i8*, i32 } undef, i8* %142, 0
  %145 = insertvalue { i8*, i32 } %144, i32 %143, 1
  %146 = load i32, i32* @x.129
  %147 = load i32, i32* @y.130
  %148 = add i32 %146, -36146956
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, -36146956
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %172

; <label>:160:                                    ; preds = %141
  resume { i8*, i32 } %145

; <label>:161:                                    ; preds = %30, %3
  %162 = alloca %"struct.std::_Vector_base.1"*, align 8
  %163 = alloca i64, align 8
  %164 = alloca %"class.std::allocator.2"*, align 8
  %165 = alloca i8*
  %166 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %162, align 8
  store i64 %1, i64* %163, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %164, align 8
  %167 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %162, align 8
  %168 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %167, i32 0, i32 0
  %169 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %164, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %168, %"class.std::allocator.2"* dereferenceable(1) %169) #3
  %170 = load i64, i64* %163, align 8
  br label %30

; <label>:171:                                    ; preds = %94, %67
  br label %94

; <label>:172:                                    ; preds = %141, %126
  %173 = load i8*, i8** %34, align 8
  %174 = load i32, i32* %35, align 4
  %175 = insertvalue { i8*, i32 } undef, i8* %173, 0
  %176 = insertvalue { i8*, i32 } %175, i32 %174, 1
  br label %141
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.131
  %9 = load i32, i32* @y.132
  %10 = add i32 %8, -1655759289
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1655759289
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -69461780, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %85
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -69461780, label %22
    i32 -318833229, label %30
    i32 383309835, label %64
    i32 421944962, label %66
  ]

; <label>:21:                                     ; preds = %19
  br label %85

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -318833229, i32 421944962
  store i32 %29, i32* %18
  br label %85

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %33 = alloca i64*, align 8
  %34 = alloca %"class.std::allocator.2"*, align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %31, i32 0, i32 0
  store i64* %0, i64** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %32, i32 0, i32 0
  store i64* %1, i64** %38, align 8
  store i64* %2, i64** %33, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %34, align 8
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %35 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %36 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load i64*, i64** %33, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %35, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %36, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %45, i64* %47, i64* %43)
  store i64* %48, i64** %5
  %49 = load i32, i32* @x.131
  %50 = load i32, i32* @y.132
  %51 = add i32 %49, 1127034652
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1127034652
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 383309835, i32 421944962
  store i32 %63, i32* %18
  br label %85

; <label>:64:                                     ; preds = %19
  %65 = load volatile i64*, i64** %5
  ret i64* %65

; <label>:66:                                     ; preds = %19
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %69 = alloca i64*, align 8
  %70 = alloca %"class.std::allocator.2"*, align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %67, i32 0, i32 0
  store i64* %0, i64** %73, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %68, i32 0, i32 0
  store i64* %1, i64** %74, align 8
  store i64* %2, i64** %69, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %70, align 8
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %71 to i8*
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %72 to i8*
  %78 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 8, i1 false)
  %79 = load i64*, i64** %69, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %71, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %72, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %81, i64* %83, i64* %79)
  store i32 -318833229, i32* %18
  br label %85

; <label>:85:                                     ; preds = %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.133
  %6 = load i32, i32* @y.134
  %7 = add i32 %5, -963191663
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -963191663
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1789822771, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1789822771, label %19
    i32 315742472, label %39
    i32 -230679176, label %76
    i32 -492666712, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 315742472, i32 -492666712
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %44 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  store i64* %47, i64** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"* %40, i64** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %40, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  store i64* %49, i64** %2
  %50 = load i32, i32* @x.133
  %51 = load i32, i32* @y.134
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -230679176, i32 -492666712
  store i32 %75, i32* %15
  br label %89

; <label>:76:                                     ; preds = %16
  %77 = load volatile i64*, i64** %2
  ret i64* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %80 = alloca %"class.std::vector.0"*, align 8
  %81 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %80, align 8
  %82 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %83 = bitcast %"class.std::vector.0"* %82 to %"struct.std::_Vector_base.1"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  store i64* %86, i64** %81, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"* %79, i64** dereferenceable(8) %81) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %79, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  store i32 315742472, i32* %15
  br label %89

; <label>:89:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.135
  %6 = load i32, i32* @y.136
  %7 = sub i32 %5, -332933216
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -332933216
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -872119514, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -872119514, label %19
    i32 -791368216, label %27
    i32 105611315, label %65
    i32 -1580487720, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -791368216, i32 -1580487720
  store i32 %26, i32* %15
  br label %78

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load i64*, i64** %34, align 8
  store i64* %35, i64** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"* %28, i64** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %28, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  store i64* %37, i64** %2
  %38 = load i32, i32* @x.135
  %39 = load i32, i32* @y.136
  %40 = add i32 %38, 1658781189
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1658781189
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 105611315, i32 -1580487720
  store i32 %64, i32* %15
  br label %78

; <label>:65:                                     ; preds = %16
  %66 = load volatile i64*, i64** %2
  ret i64* %66

; <label>:67:                                     ; preds = %16
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %69 = alloca %"class.std::vector.0"*, align 8
  %70 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %69, align 8
  %71 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %72 = bitcast %"class.std::vector.0"* %71 to %"struct.std::_Vector_base.1"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %73, i32 0, i32 1
  %75 = load i64*, i64** %74, align 8
  store i64* %75, i64** %70, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"* %68, i64** dereferenceable(8) %70) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %68, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  store i32 -791368216, i32* %15
  br label %78

; <label>:78:                                     ; preds = %67, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = sub i64 %15, 3651882748330426890
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 3651882748330426890
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %5, i64* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.139
  %31 = load i32, i32* @y.140
  %32 = sub i32 %30, 1336054152
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1336054152
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %85

; <label>:56:                                     ; preds = %29, %85
  %57 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %57) #11
  %58 = load i32, i32* @x.139
  %59 = load i32, i32* @y.140
  %60 = sub i32 %58, 423770509
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 423770509
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %85

; <label>:84:                                     ; preds = %56
  unreachable

; <label>:85:                                     ; preds = %56, %29
  %86 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %86) #11
  br label %56
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.149
  %6 = load i32, i32* @y.150
  %7 = sub i32 %5, -1629231959
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1629231959
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1636922371, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1636922371, label %19
    i32 -2112683944, label %27
    i32 -614524236, label %74
    i32 -397103831, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2112683944, i32 -397103831
  store i32 %26, i32* %15
  br label %95

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  store i64* %32, i64** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %38, i32 0, i32 1
  store i64* %37, i64** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds i64, i64* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 2
  store i64* %44, i64** %46, align 8
  %47 = load i32, i32* @x.149
  %48 = load i32, i32* @y.150
  %49 = add i32 %47, 1186861206
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1186861206
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -614524236, i32 -397103831
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base.1"*, align 8
  %77 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %78, i64 %79)
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %81, i32 0, i32 0
  store i64* %80, i64** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %86, i32 0, i32 1
  store i64* %85, i64** %87, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = load i64, i64* %77, align 8
  %92 = getelementptr inbounds i64, i64* %90, i64 %91
  %93 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %93, i32 0, i32 2
  store i64* %92, i64** %94, align 8
  store i32 -2112683944, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.153
  %10 = load i32, i32* @y.154
  %11 = sub i32 %9, 2108028834
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 2108028834
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -1327430924, i32* %19
  %20 = alloca i64*
  br label %21

; <label>:21:                                     ; preds = %2, %149
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -1327430924, label %24
    i32 1884110811, label %44
    i32 -1156639123, label %79
    i32 -742191726, label %82
    i32 1587624538, label %97
    i32 2024000548, label %131
    i32 652015535, label %133
    i32 1908026028, label %134
    i32 -1817958954, label %136
    i32 777114758, label %142
  ]

; <label>:23:                                     ; preds = %21
  br label %149

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1884110811, i32 -1817958954
  store i32 %43, i32* %19
  br label %149

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.1"*, align 8
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %45, align 8
  %47 = load volatile i64*, i64** %6
  store i64 %1, i64* %47, align 8
  %48 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %45, align 8
  store %"struct.std::_Vector_base.1"* %48, %"struct.std::_Vector_base.1"** %5
  %49 = load volatile i64*, i64** %6
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.153
  %53 = load i32, i32* @y.154
  %54 = sub i32 %52, 620693696
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 620693696
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1156639123, i32 -1817958954
  store i32 %78, i32* %19
  br label %149

; <label>:79:                                     ; preds = %21
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -742191726, i32 652015535
  store i32 %81, i32* %19
  br label %149

; <label>:82:                                     ; preds = %21
  %83 = load i32, i32* @x.153
  %84 = load i32, i32* @y.154
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 1587624538, i32 777114758
  store i32 %96, i32* %19
  br label %149

; <label>:97:                                     ; preds = %21
  %98 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %99 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %98, i32 0, i32 0
  %100 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %99 to %"class.std::allocator.2"*
  %101 = load volatile i64*, i64** %6
  %102 = load i64, i64* %101, align 8
  %103 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %100, i64 %102)
  store i64* %103, i64** %3
  %104 = load i32, i32* @x.153
  %105 = load i32, i32* @y.154
  %106 = sub i32 %104, 1888573766
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 1888573766
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 false, true
  %117 = and i1 %114, false
  %118 = and i1 %112, %116
  %119 = and i1 %115, false
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 false, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  %130 = select i1 %128, i32 2024000548, i32 777114758
  store i32 %130, i32* %19
  br label %149

; <label>:131:                                    ; preds = %21
  store i32 1908026028, i32* %19
  %132 = load volatile i64*, i64** %3
  store i64* %132, i64** %20
  br label %149

; <label>:133:                                    ; preds = %21
  store i32 1908026028, i32* %19
  store i64* null, i64** %20
  br label %149

; <label>:134:                                    ; preds = %21
  %135 = load i64*, i64** %20
  ret i64* %135

; <label>:136:                                    ; preds = %21
  %137 = alloca %"struct.std::_Vector_base.1"*, align 8
  %138 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %137, align 8
  store i64 %1, i64* %138, align 8
  %139 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %137, align 8
  %140 = load i64, i64* %138, align 8
  %141 = icmp ne i64 %140, 0
  store i32 1884110811, i32* %19
  br label %149

; <label>:142:                                    ; preds = %21
  %143 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %144 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %143, i32 0, i32 0
  %145 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %144 to %"class.std::allocator.2"*
  %146 = load volatile i64*, i64** %6
  %147 = load i64, i64* %146, align 8
  %148 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %145, i64 %147)
  store i32 1587624538, i32* %19
  br label %149

; <label>:149:                                    ; preds = %142, %136, %133, %131, %97, %82, %79, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -1495832351, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %108
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1495832351, label %17
    i32 -1168459509, label %22
    i32 362460132, label %23
    i32 -1144639978, label %51
    i32 734580227, label %71
    i32 -495432327, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %108

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1168459509, i32 362460132
  store i32 %21, i32* %13
  br label %108

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.157
  %25 = load i32, i32* @y.158
  %26 = sub i32 %24, 860432190
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 860432190
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1144639978, i32 -495432327
  store i32 %50, i32* %13
  br label %108

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 8
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to i64*
  store i64* %55, i64** %4
  %56 = load i32, i32* @x.157
  %57 = load i32, i32* @y.158
  %58 = add i32 %56, -1421680760
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1421680760
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 734580227, i32 -495432327
  store i32 %70, i32* %13
  br label %108

; <label>:71:                                     ; preds = %14
  %72 = load volatile i64*, i64** %4
  ret i64* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = add i64 0, 4079253610179474800
  %76 = sub i64 %75, %74
  %77 = sub i64 %76, 4079253610179474800
  %78 = sub i64 0, %74
  %79 = sub i64 %77, 6225221093174134432
  %80 = add i64 %79, 8
  %81 = add i64 %80, 6225221093174134432
  %82 = add i64 %77, 8
  %83 = sub i64 0, %74
  %84 = add i64 0, %83
  %85 = sub i64 0, %74
  %86 = sub i64 0, %84
  %87 = sub i64 0, 8
  %88 = add i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %84, 8
  %91 = add i64 0, -4867581084481067724
  %92 = sub i64 %91, %74
  %93 = sub i64 %92, -4867581084481067724
  %94 = sub i64 0, %74
  %95 = sub i64 %93, 2596766266306072247
  %96 = add i64 %95, 8
  %97 = add i64 %96, 2596766266306072247
  %98 = add i64 %93, 8
  %99 = sub i64 %74, -7872853432052775573
  %100 = sub i64 %99, 8
  %101 = add i64 %100, -7872853432052775573
  %102 = sub i64 %74, 8
  %103 = mul i64 %101, 8
  %104 = shl i64 %74, 8
  %105 = mul i64 %74, 8
  %106 = call i8* @_Znwm(i64 %105)
  %107 = bitcast i8* %106 to i64*
  store i32 -1144639978, i32* %13
  br label %108

; <label>:108:                                    ; preds = %73, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.159
  %5 = load i32, i32* @y.160
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2108534308, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2108534308, label %17
    i32 2139005378, label %25
    i32 1251413828, label %43
    i32 -1916171966, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 2139005378, i32 -1916171966
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  %28 = load i32, i32* @x.159
  %29 = load i32, i32* @y.160
  %30 = sub i32 %28, 1036184330
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1036184330
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1251413828, i32 -1916171966
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret i64 2305843009213693951

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %45, align 8
  store i32 2139005378, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #6

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %27, i64* %29, i64* %25)
  ret i64* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %21)
  %23 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %15, i64* %20, i64* %22)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.177
  %6 = load i32, i32* @y.178
  %7 = sub i32 %5, -763682700
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -763682700
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1640146213, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1640146213, label %19
    i32 2011990195, label %27
    i32 1434979118, label %58
    i32 1634444669, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2011990195, i32 1634444669
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %29)
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.177
  %32 = load i32, i32* @y.178
  %33 = add i32 %31, -299561632
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -299561632
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1434979118, i32 1634444669
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca i64*, align 8
  store i64* %0, i64** %61, align 8
  %62 = load i64*, i64** %61, align 8
  %63 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %62)
  store i32 2011990195, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = add i64 %11, -6080489695803699302
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -6080489695803699302
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 213429512, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %115
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 213429512, label %23
    i32 -505646336, label %27
    i32 -1712654516, label %54
    i32 -1131305903, label %88
    i32 -835646793, label %89
    i32 -1695648340, label %93
  ]

; <label>:22:                                     ; preds = %20
  br label %115

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -505646336, i32 -835646793
  store i32 %26, i32* %19
  br label %115

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.179
  %29 = load i32, i32* @y.180
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1712654516, i32 -1695648340
  store i32 %53, i32* %19
  br label %115

; <label>:54:                                     ; preds = %20
  %55 = load i64*, i64** %7, align 8
  %56 = bitcast i64* %55 to i8*
  %57 = load i64*, i64** %5, align 8
  %58 = bitcast i64* %57 to i8*
  %59 = load i64, i64* %8, align 8
  %60 = mul i64 8, %59
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %56, i8* %58, i64 %60, i32 8, i1 false)
  %61 = load i32, i32* @x.179
  %62 = load i32, i32* @y.180
  %63 = add i32 %61, -1480983792
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -1480983792
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1131305903, i32 -1695648340
  store i32 %87, i32* %19
  br label %115

; <label>:88:                                     ; preds = %20
  store i32 -835646793, i32* %19
  br label %115

; <label>:89:                                     ; preds = %20
  %90 = load i64*, i64** %7, align 8
  %91 = load i64, i64* %8, align 8
  %92 = getelementptr inbounds i64, i64* %90, i64 %91
  ret i64* %92

; <label>:93:                                     ; preds = %20
  %94 = load i64*, i64** %7, align 8
  %95 = bitcast i64* %94 to i8*
  %96 = load i64*, i64** %5, align 8
  %97 = bitcast i64* %96 to i8*
  %98 = load i64, i64* %8, align 8
  %99 = add i64 0, 394911849847481010
  %100 = sub i64 %99, 8
  %101 = sub i64 %100, 394911849847481010
  %102 = sub i64 0, 8
  %103 = sub i64 0, %98
  %104 = sub i64 %101, %103
  %105 = add i64 %101, %98
  %106 = sub i64 0, 8
  %107 = add i64 0, %106
  %108 = sub i64 0, 8
  %109 = sub i64 0, %107
  %110 = sub i64 0, %98
  %111 = add i64 %109, %110
  %112 = sub i64 0, %111
  %113 = add i64 %107, %98
  %114 = mul i64 8, %98
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %95, i8* %97, i64 %114, i32 8, i1 false)
  store i32 -1712654516, i32* %19
  br label %115

; <label>:115:                                    ; preds = %93, %88, %54, %27, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %2) #3
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"*) #4 comdat align 2 {
  %2 = alloca i64**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.183
  %6 = load i32, i32* @y.184
  %7 = add i32 %5, 380736075
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 380736075
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -457801435, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -457801435, label %19
    i32 -1358796617, label %39
    i32 411565550, label %70
    i32 1291935984, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1358796617, i32 1291935984
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %41, i32 0, i32 0
  store i64** %42, i64*** %2
  %43 = load i32, i32* @x.183
  %44 = load i32, i32* @y.184
  %45 = add i32 %43, -1524996582
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1524996582
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 411565550, i32 1291935984
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64**, i64*** %2
  ret i64** %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %74, i32 0, i32 0
  store i32 -1358796617, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %2, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.51"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.189
  %6 = load i32, i32* @y.190
  %7 = sub i32 %5, 314239416
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 314239416
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 903651409, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 903651409, label %19
    i32 -427385979, label %27
    i32 884324262, label %49
    i32 -1263070854, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -427385979, i32 -1263070854
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  %29 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %28, align 8
  store i64** %1, i64*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %30, i32 0, i32 0
  %32 = load i64**, i64*** %29, align 8
  %33 = load i64*, i64** %32, align 8
  store i64* %33, i64** %31, align 8
  %34 = load i32, i32* @x.189
  %35 = load i32, i32* @y.190
  %36 = sub i32 %34, -564534358
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -564534358
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 884324262, i32 -1263070854
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  %52 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %51, align 8
  store i64** %1, i64*** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %51, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %53, i32 0, i32 0
  %55 = load i64**, i64*** %52, align 8
  %56 = load i64*, i64** %55, align 8
  store i64* %56, i64** %54, align 8
  store i32 -427385979, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 582870609, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %75
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 582870609, label %15
    i32 -1692639774, label %19
    i32 736761719, label %34
    i32 -519403684, label %67
    i32 -1508209185, label %68
    i32 430657995, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %75

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 -1692639774, i32 -1508209185
  store i32 %18, i32* %11
  br label %75

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.191
  %21 = load i32, i32* @y.192
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 736761719, i32 430657995
  store i32 %33, i32* %11
  br label %75

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %36 to %"class.std::allocator.2"*
  %38 = load i64*, i64** %7, align 8
  %39 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.2"* dereferenceable(1) %37, i64* %38, i64 %39)
  %40 = load i32, i32* @x.191
  %41 = load i32, i32* @y.192
  %42 = add i32 %40, -2012503436
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -2012503436
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -519403684, i32 430657995
  store i32 %66, i32* %11
  br label %75

; <label>:67:                                     ; preds = %12
  store i32 -1508209185, i32* %11
  br label %75

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  %70 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %71 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %71 to %"class.std::allocator.2"*
  %73 = load i64*, i64** %7, align 8
  %74 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.2"* dereferenceable(1) %72, i64* %73, i64 %74)
  store i32 736761719, i32* %11
  br label %75

; <label>:75:                                     ; preds = %69, %67, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #9 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.2"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.195
  %7 = load i32, i32* @y.196
  %8 = sub i32 %6, -135499278
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -135499278
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1031041412, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1031041412, label %20
    i32 393690204, label %28
    i32 -1240666324, label %50
    i32 2134470226, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 393690204, i32 2134470226
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.2"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  %33 = bitcast %"class.std::allocator.2"* %32 to %"class.__gnu_cxx::new_allocator.3"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.3"* %33, i64* %34, i64 %35)
  %36 = load i32, i32* @x.195
  %37 = load i32, i32* @y.196
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1240666324, i32 2134470226
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::allocator.2"*, align 8
  %53 = alloca i64*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %52, align 8
  store i64* %1, i64** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %52, align 8
  %56 = bitcast %"class.std::allocator.2"* %55 to %"class.__gnu_cxx::new_allocator.3"*
  %57 = load i64*, i64** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.3"* %56, i64* %57, i64 %58)
  store i32 393690204, i32* %16
  br label %59

; <label>:59:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.3"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.197
  %7 = load i32, i32* @y.198
  %8 = sub i32 %6, 393287194
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 393287194
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 226473300, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 226473300, label %20
    i32 -1466988212, label %40
    i32 1538137892, label %62
    i32 1442303327, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1466988212, i32 1442303327
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = bitcast i64* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.197
  %48 = load i32, i32* @y.198
  %49 = sub i32 %47, -113509742
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -113509742
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1538137892, i32 1442303327
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %65 = alloca i64*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %64, align 8
  store i64* %1, i64** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %64, align 8
  %68 = load i64*, i64** %65, align 8
  %69 = bitcast i64* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -1466988212, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2EmRKS2_(%"class.std::vector"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base"* %10, i64 %11, %"class.std::allocator"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorISt4pairIxxESaIS1_EE21_M_default_initializeEm(%"class.std::vector"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %7, align 8
  %22 = load i32, i32* %8, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.203
  %5 = load i32, i32* @y.204
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1820155817, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1820155817, label %17
    i32 442753365, label %37
    i32 960616650, label %68
    i32 -423462446, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 442753365, i32 -423462446
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %38, align 8
  %39 = load %"class.std::allocator"*, %"class.std::allocator"** %38, align 8
  %40 = bitcast %"class.std::allocator"* %39 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev(%"class.__gnu_cxx::new_allocator"* %40) #3
  %41 = load i32, i32* @x.203
  %42 = load i32, i32* @y.204
  %43 = sub i32 %41, -1901705043
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1901705043
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 960616650, i32 -423462446
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %70, align 8
  %71 = load %"class.std::allocator"*, %"class.std::allocator"** %70, align 8
  %72 = bitcast %"class.std::allocator"* %71 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev(%"class.__gnu_cxx::new_allocator"* %72) #3
  store i32 442753365, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.205
  %5 = load i32, i32* @y.206
  %6 = add i32 %4, -349681459
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -349681459
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1654720970, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1654720970, label %18
    i32 137754179, label %38
    i32 1747238078, label %68
    i32 656284733, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 137754179, i32 656284733
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %41 = load i32, i32* @x.205
  %42 = load i32, i32* @y.206
  %43 = sub i32 %41, -916891142
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -916891142
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1747238078, i32 656284733
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %70, align 8
  store i32 137754179, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.207
  %5 = load i32, i32* @y.208
  %6 = sub i32 %4, 1524150449
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1524150449
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %52

; <label>:18:                                     ; preds = %3, %52
  %19 = alloca %"struct.std::_Vector_base"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %21, align 8
  %24 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %19, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %24, i32 0, i32 0
  %26 = load %"class.std::allocator"*, %"class.std::allocator"** %21, align 8
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %25, %"class.std::allocator"* dereferenceable(1) %26) #3
  %27 = load i64, i64* %20, align 8
  %28 = load i32, i32* @x.207
  %29 = load i32, i32* @y.208
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %52

; <label>:41:                                     ; preds = %18
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %24, i64 %27)
          to label %42 unwind label %43

; <label>:42:                                     ; preds = %41
  ret void

; <label>:43:                                     ; preds = %41
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %22, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %23, align 4
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %25) #3
  br label %47

; <label>:47:                                     ; preds = %43
  %48 = load i8*, i8** %22, align 8
  %49 = load i32, i32* %23, align 4
  %50 = insertvalue { i8*, i32 } undef, i8* %48, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

; <label>:52:                                     ; preds = %18, %3
  %53 = alloca %"struct.std::_Vector_base"*, align 8
  %54 = alloca i64, align 8
  %55 = alloca %"class.std::allocator"*, align 8
  %56 = alloca i8*
  %57 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %53, align 8
  store i64 %1, i64* %54, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %55, align 8
  %58 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %53, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %58, i32 0, i32 0
  %60 = load %"class.std::allocator"*, %"class.std::allocator"** %55, align 8
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %59, %"class.std::allocator"* dereferenceable(1) %60) #3
  %61 = load i64, i64* %54, align 8
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE21_M_default_initializeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.209
  %6 = load i32, i32* @y.210
  %7 = sub i32 %5, -2110969601
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2110969601
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1646486377, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1646486377, label %19
    i32 1519452396, label %27
    i32 2045016522, label %57
    i32 1280738924, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1519452396, i32 1280738924
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %37 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %36) #3
  %38 = call %"struct.std::pair"* @_ZSt27__uninitialized_default_n_aIPSt4pairIxxEmS1_ET_S3_T0_RSaIT1_E(%"struct.std::pair"* %34, i64 %35, %"class.std::allocator"* dereferenceable(1) %37)
  %39 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 1
  store %"struct.std::pair"* %38, %"struct.std::pair"** %41, align 8
  %42 = load i32, i32* @x.209
  %43 = load i32, i32* @y.210
  %44 = sub i32 %42, -1109973588
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1109973588
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 2045016522, i32 1280738924
  store i32 %56, i32* %15
  br label %73

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::vector"*, align 8
  %60 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %59, align 8
  store i64 %1, i64* %60, align 8
  %61 = load %"class.std::vector"*, %"class.std::vector"** %59, align 8
  %62 = bitcast %"class.std::vector"* %61 to %"struct.std::_Vector_base"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %63, i32 0, i32 0
  %65 = load %"struct.std::pair"*, %"struct.std::pair"** %64, align 8
  %66 = load i64, i64* %60, align 8
  %67 = bitcast %"class.std::vector"* %61 to %"struct.std::_Vector_base"*
  %68 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %67) #3
  %69 = call %"struct.std::pair"* @_ZSt27__uninitialized_default_n_aIPSt4pairIxxEmS1_ET_S3_T0_RSaIT1_E(%"struct.std::pair"* %65, i64 %66, %"class.std::allocator"* dereferenceable(1) %68)
  %70 = bitcast %"class.std::vector"* %61 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %71, i32 0, i32 1
  store %"struct.std::pair"* %69, %"struct.std::pair"** %72, align 8
  store i32 1519452396, i32* %15
  br label %73

; <label>:73:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8
  %15 = ptrtoint %"struct.std::pair"* %11 to i64
  %16 = ptrtoint %"struct.std::pair"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 16
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %5, %"struct.std::pair"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.211
  %25 = load i32, i32* @y.212
  %26 = add i32 %24, 1850700952
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 1850700952
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %112

; <label>:50:                                     ; preds = %23, %112
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %54) #3
  %55 = load i32, i32* @x.211
  %56 = load i32, i32* @y.212
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %112

; <label>:80:                                     ; preds = %50
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i32, i32* @x.211
  %83 = load i32, i32* @y.212
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %117

; <label>:95:                                     ; preds = %81, %117
  %96 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %96) #11
  %97 = load i32, i32* @x.211
  %98 = load i32, i32* @y.212
  %99 = sub i32 %97, -1404583459
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -1404583459
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %117

; <label>:111:                                    ; preds = %95
  unreachable

; <label>:112:                                    ; preds = %50, %23
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %3, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %4, align 4
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %116) #3
  br label %50

; <label>:117:                                    ; preds = %95, %81
  %118 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %118) #11
  br label %95
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaISt4pairIxxEEC2ERKS1_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.std::pair"* %7, %"struct.std::pair"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.std::pair"* %12, %"struct.std::pair"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.std::pair"* %19, %"struct.std::pair"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.217
  %5 = load i32, i32* @y.218
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1559234357, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1559234357, label %17
    i32 -402685580, label %25
    i32 -658759665, label %44
    i32 973603368, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -402685580, i32 973603368
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %27 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator"* %28) #3
  %29 = load i32, i32* @x.217
  %30 = load i32, i32* @y.218
  %31 = add i32 %29, -1819127073
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1819127073
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -658759665, i32 973603368
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %46, align 8
  %47 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %47 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator"* %48) #3
  store i32 -402685580, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEEC2ERKS1_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 828862364, i32* %9
  %10 = alloca %"struct.std::pair"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 828862364, label %14
    i32 2045302772, label %18
    i32 1670857720, label %24
    i32 -1331951031, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 2045302772, i32 1670857720
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 -1331951031, i32* %9
  store %"struct.std::pair"* %23, %"struct.std::pair"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -1331951031, i32* %9
  store %"struct.std::pair"* null, %"struct.std::pair"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"struct.std::pair"*, %"struct.std::pair"** %10
  ret %"struct.std::pair"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"struct.std::pair"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.227
  %9 = load i32, i32* @y.228
  %10 = sub i32 %8, 973671320
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 973671320
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1997352561, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %141
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1997352561, label %22
    i32 1859930823, label %30
    i32 -177208439, label %67
    i32 -1167188358, label %70
    i32 -631677996, label %98
    i32 340141415, label %125
    i32 -1605875570, label %126
    i32 -543505776, label %132
    i32 168163476, label %140
  ]

; <label>:21:                                     ; preds = %19
  br label %141

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1859930823, i32 -543505776
  store i32 %29, i32* %18
  br label %141

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.227
  %41 = load i32, i32* @y.228
  %42 = add i32 %40, -1591281619
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1591281619
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -177208439, i32 -543505776
  store i32 %66, i32* %18
  br label %141

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -1167188358, i32 -1605875570
  store i32 %69, i32* %18
  br label %141

; <label>:70:                                     ; preds = %19
  %71 = load i32, i32* @x.227
  %72 = load i32, i32* @y.228
  %73 = add i32 %71, 1940055265
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 1940055265
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -631677996, i32 168163476
  store i32 %97, i32* %18
  br label %141

; <label>:98:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %99 = load i32, i32* @x.227
  %100 = load i32, i32* @y.228
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 340141415, i32 168163476
  store i32 %124, i32* %18
  br label %141

; <label>:125:                                    ; preds = %19
  unreachable

; <label>:126:                                    ; preds = %19
  %127 = load volatile i64*, i64** %5
  %128 = load i64, i64* %127, align 8
  %129 = mul i64 %128, 16
  %130 = call i8* @_Znwm(i64 %129)
  %131 = bitcast i8* %130 to %"struct.std::pair"*
  ret %"struct.std::pair"* %131

; <label>:132:                                    ; preds = %19
  %133 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %134 = alloca i64, align 8
  %135 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %133, align 8
  store i64 %1, i64* %134, align 8
  store i8* %2, i8** %135, align 8
  %136 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %133, align 8
  %137 = load i64, i64* %134, align 8
  %138 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %136) #3
  %139 = icmp ugt i64 %137, %138
  store i32 1859930823, i32* %18
  br label %141

; <label>:140:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -631677996, i32* %18
  br label %141

; <label>:141:                                    ; preds = %140, %132, %98, %70, %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt27__uninitialized_default_n_aIPSt4pairIxxEmS1_ET_S3_T0_RSaIT1_E(%"struct.std::pair"*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"struct.std::pair"* @_ZSt25__uninitialized_default_nIPSt4pairIxxEmET_S3_T0_(%"struct.std::pair"* %7, i64 %8)
  ret %"struct.std::pair"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt25__uninitialized_default_nIPSt4pairIxxEmET_S3_T0_(%"struct.std::pair"*, i64) #0 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt4pairIxxEmEET_S5_T0_(%"struct.std::pair"* %6, i64 %7)
  ret %"struct.std::pair"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt4pairIxxEmEET_S5_T0_(%"struct.std::pair"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.239
  %4 = load i32, i32* @y.240
  %5 = sub i32 %3, 628523963
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 628523963
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %230

; <label>:29:                                     ; preds = %2, %230
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"struct.std::pair"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"struct.std::pair"* %0, %"struct.std::pair"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  store %"struct.std::pair"* %35, %"struct.std::pair"** %32, align 8
  %36 = load i32, i32* @x.239
  %37 = load i32, i32* @y.240
  %38 = sub i32 %36, -477790680
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -477790680
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %230

; <label>:62:                                     ; preds = %29
  br label %63

; <label>:63:                                     ; preds = %100, %62
  %64 = load i64, i64* %31, align 8
  %65 = icmp ugt i64 %64, 0
  br i1 %65, label %66, label %213

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* @x.239
  %68 = load i32, i32* @y.240
  %69 = add i32 %67, 1243343572
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 1243343572
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %237

; <label>:81:                                     ; preds = %66, %237
  %82 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %83 = call %"struct.std::pair"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair"* dereferenceable(16) %82) #3
  %84 = load i32, i32* @x.239
  %85 = load i32, i32* @y.240
  %86 = sub i32 %84, -1559340111
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -1559340111
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %237

; <label>:98:                                     ; preds = %81
  invoke void @_ZSt10_ConstructISt4pairIxxEJEEvPT_DpOT0_(%"struct.std::pair"* %83)
          to label %99 unwind label %108

; <label>:99:                                     ; preds = %98
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i64, i64* %31, align 8
  %102 = sub i64 %101, -5790717937534812187
  %103 = add i64 %102, -1
  %104 = add i64 %103, -5790717937534812187
  %105 = add i64 %101, -1
  store i64 %104, i64* %31, align 8
  %106 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %107 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %106, i32 1
  store %"struct.std::pair"* %107, %"struct.std::pair"** %32, align 8
  br label %63

; <label>:108:                                    ; preds = %98
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %33, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %34, align 4
  br label %112

; <label>:112:                                    ; preds = %108
  %113 = load i32, i32* @x.239
  %114 = load i32, i32* @y.240
  %115 = sub i32 %113, -1898287391
  %116 = sub i32 %115, 1
  %117 = add i32 %116, -1898287391
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %240

; <label>:139:                                    ; preds = %112, %240
  %140 = load i8*, i8** %33, align 8
  %141 = call i8* @__cxa_begin_catch(i8* %140) #3
  %142 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %143 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %144 = load i32, i32* @x.239
  %145 = load i32, i32* @y.240
  %146 = sub i32 %144, 153558062
  %147 = sub i32 %146, 1
  %148 = add i32 %147, 153558062
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 true, true
  %157 = and i1 %154, true
  %158 = and i1 %152, %156
  %159 = and i1 %155, true
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 true, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %240

; <label>:170:                                    ; preds = %139
  invoke void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"* %142, %"struct.std::pair"* %143)
          to label %171 unwind label %215

; <label>:171:                                    ; preds = %170
  %172 = load i32, i32* @x.239
  %173 = load i32, i32* @y.240
  %174 = add i32 %172, -1798639864
  %175 = sub i32 %174, 1
  %176 = sub i32 %175, -1798639864
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 true, true
  %185 = and i1 %182, true
  %186 = and i1 %180, %184
  %187 = and i1 %183, true
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 true, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %245

; <label>:198:                                    ; preds = %171, %245
  %199 = load i32, i32* @x.239
  %200 = load i32, i32* @y.240
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %245

; <label>:212:                                    ; preds = %198
  invoke void @__cxa_rethrow() #12
          to label %229 unwind label %215

; <label>:213:                                    ; preds = %63
  %214 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  ret %"struct.std::pair"* %214

; <label>:215:                                    ; preds = %212, %170
  %216 = landingpad { i8*, i32 }
          cleanup
  %217 = extractvalue { i8*, i32 } %216, 0
  store i8* %217, i8** %33, align 8
  %218 = extractvalue { i8*, i32 } %216, 1
  store i32 %218, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %219 unwind label %226

; <label>:219:                                    ; preds = %215
  br label %221
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:221:                                    ; preds = %219
  %222 = load i8*, i8** %33, align 8
  %223 = load i32, i32* %34, align 4
  %224 = insertvalue { i8*, i32 } undef, i8* %222, 0
  %225 = insertvalue { i8*, i32 } %224, i32 %223, 1
  resume { i8*, i32 } %225

; <label>:226:                                    ; preds = %215
  %227 = landingpad { i8*, i32 }
          catch i8* null
  %228 = extractvalue { i8*, i32 } %227, 0
  call void @__clang_call_terminate(i8* %228) #11
  unreachable

; <label>:229:                                    ; preds = %212
  unreachable

; <label>:230:                                    ; preds = %29, %2
  %231 = alloca %"struct.std::pair"*, align 8
  %232 = alloca i64, align 8
  %233 = alloca %"struct.std::pair"*, align 8
  %234 = alloca i8*
  %235 = alloca i32
  store %"struct.std::pair"* %0, %"struct.std::pair"** %231, align 8
  store i64 %1, i64* %232, align 8
  %236 = load %"struct.std::pair"*, %"struct.std::pair"** %231, align 8
  store %"struct.std::pair"* %236, %"struct.std::pair"** %233, align 8
  br label %29

; <label>:237:                                    ; preds = %81, %66
  %238 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %239 = call %"struct.std::pair"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair"* dereferenceable(16) %238) #3
  br label %81

; <label>:240:                                    ; preds = %139, %112
  %241 = load i8*, i8** %33, align 8
  %242 = call i8* @__cxa_begin_catch(i8* %241) #3
  %243 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %244 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  br label %139

; <label>:245:                                    ; preds = %198, %171
  br label %198
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt4pairIxxEJEEvPT_DpOT0_(%"struct.std::pair"*) #0 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = bitcast %"struct.std::pair"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  call void @_ZNSt4pairIxxEC2Ev(%"struct.std::pair"* %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.243
  %6 = load i32, i32* @y.244
  %7 = sub i32 %5, 919421133
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 919421133
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -974451617, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -974451617, label %19
    i32 1385599212, label %27
    i32 -177221505, label %58
    i32 1675475640, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1385599212, i32 1675475640
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  %30 = bitcast %"struct.std::pair"* %29 to i8*
  %31 = bitcast i8* %30 to %"struct.std::pair"*
  store %"struct.std::pair"* %31, %"struct.std::pair"** %2
  %32 = load i32, i32* @x.243
  %33 = load i32, i32* @y.244
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -177221505, i32 1675475640
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %61, align 8
  %62 = load %"struct.std::pair"*, %"struct.std::pair"** %61, align 8
  %63 = bitcast %"struct.std::pair"* %62 to i8*
  %64 = bitcast i8* %63 to %"struct.std::pair"*
  store i32 1385599212, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_(%"struct.std::pair"* %5, %"struct.std::pair"* %6)
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2Ev(%"struct.std::pair"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_(%"struct.std::pair"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"*, %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"struct.std::pair"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.251
  %11 = load i32, i32* @y.252
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1870044816, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %142
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1870044816, label %23
    i32 -1339836651, label %43
    i32 -1459672187, label %79
    i32 1421711109, label %82
    i32 -1412683406, label %90
    i32 -2035151814, label %117
    i32 -484713869, label %133
    i32 -1034747763, label %134
    i32 343286432, label %141
  ]

; <label>:22:                                     ; preds = %20
  br label %142

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1339836651, i32 -1034747763
  store i32 %42, i32* %19
  br label %142

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base"*, align 8
  %45 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %45, %"struct.std::pair"*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %44, align 8
  %47 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %7
  store %"struct.std::pair"* %1, %"struct.std::pair"** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %44, align 8
  store %"struct.std::_Vector_base"* %49, %"struct.std::_Vector_base"** %5
  %50 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %7
  %51 = load %"struct.std::pair"*, %"struct.std::pair"** %50, align 8
  %52 = icmp ne %"struct.std::pair"* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.251
  %54 = load i32, i32* @y.252
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1459672187, i32 -1034747763
  store i32 %78, i32* %19
  br label %142

; <label>:79:                                     ; preds = %20
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 1421711109, i32 -1412683406
  store i32 %81, i32* %19
  br label %142

; <label>:82:                                     ; preds = %20
  %83 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %84 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %84 to %"class.std::allocator"*
  %86 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %7
  %87 = load %"struct.std::pair"*, %"struct.std::pair"** %86, align 8
  %88 = load volatile i64*, i64** %6
  %89 = load i64, i64* %88, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %85, %"struct.std::pair"* %87, i64 %89)
  store i32 -1412683406, i32* %19
  br label %142

; <label>:90:                                     ; preds = %20
  %91 = load i32, i32* @x.251
  %92 = load i32, i32* @y.252
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -2035151814, i32 343286432
  store i32 %116, i32* %19
  br label %142

; <label>:117:                                    ; preds = %20
  %118 = load i32, i32* @x.251
  %119 = load i32, i32* @y.252
  %120 = add i32 %118, 1805434153
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 1805434153
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 -484713869, i32 343286432
  store i32 %132, i32* %19
  br label %142

; <label>:133:                                    ; preds = %20
  ret void

; <label>:134:                                    ; preds = %20
  %135 = alloca %"struct.std::_Vector_base"*, align 8
  %136 = alloca %"struct.std::pair"*, align 8
  %137 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %135, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %136, align 8
  store i64 %2, i64* %137, align 8
  %138 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %135, align 8
  %139 = load %"struct.std::pair"*, %"struct.std::pair"** %136, align 8
  %140 = icmp ne %"struct.std::pair"* %139, null
  store i32 -1339836651, i32* %19
  br label %142

; <label>:141:                                    ; preds = %20
  store i32 -2035151814, i32* %19
  br label %142

; <label>:142:                                    ; preds = %141, %134, %117, %90, %82, %79, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %8, %"struct.std::pair"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = bitcast %"struct.std::pair"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRKS1_EEEvDpOT_(%"class.std::vector"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair"*
  %4 = alloca %"struct.std::pair"*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  store %"struct.std::pair"* %13, %"struct.std::pair"** %4
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %17, align 8
  store %"struct.std::pair"* %18, %"struct.std::pair"** %3
  %19 = alloca i32
  store i32 -932385202, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %86
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -932385202, label %23
    i32 1317990536, label %28
    i32 167919631, label %46
    i32 405823912, label %62
    i32 -1780078539, label %80
    i32 1568657979, label %81
    i32 -125034032, label %82
  ]

; <label>:22:                                     ; preds = %20
  br label %86

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %4
  %25 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %3
  %26 = icmp ne %"struct.std::pair"* %24, %25
  %27 = select i1 %26, i32 1317990536, i32 167919631
  store i32 %27, i32* %19
  br label %86

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %31 to %"class.std::allocator"*
  %33 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %34 = bitcast %"class.std::vector"* %33 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %36, align 8
  %38 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %39 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %38) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %32, %"struct.std::pair"* %37, %"struct.std::pair"* dereferenceable(16) %39)
  %40 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %44, i32 1
  store %"struct.std::pair"* %45, %"struct.std::pair"** %43, align 8
  store i32 1568657979, i32* %19
  br label %86

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.257
  %48 = load i32, i32* @y.258
  %49 = sub i32 %47, 1273910301
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1273910301
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 405823912, i32 -125034032
  store i32 %61, i32* %19
  br label %86

; <label>:62:                                     ; preds = %20
  %63 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %64 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %63) #3
  %65 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector"* %65, %"struct.std::pair"* dereferenceable(16) %64)
  %66 = load i32, i32* @x.257
  %67 = load i32, i32* @y.258
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 -1780078539, i32 -125034032
  store i32 %79, i32* %19
  br label %86

; <label>:80:                                     ; preds = %20
  store i32 1568657979, i32* %19
  br label %86

; <label>:81:                                     ; preds = %20
  ret void

; <label>:82:                                     ; preds = %20
  %83 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %84 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %83) #3
  %85 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector"* %85, %"struct.std::pair"* dereferenceable(16) %84)
  store i32 405823912, i32* %19
  br label %86

; <label>:86:                                     ; preds = %82, %80, %62, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.259
  %7 = load i32, i32* @y.260
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -979609026, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -979609026, label %19
    i32 -1539061246, label %27
    i32 -547776867, label %62
    i32 -1097047520, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1539061246, i32 -1097047520
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca %"struct.std::pair"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %29, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %30, align 8
  %31 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %32 = bitcast %"class.std::allocator"* %31 to %"class.__gnu_cxx::new_allocator"*
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %29, align 8
  %34 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %35 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %34) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %32, %"struct.std::pair"* %33, %"struct.std::pair"* dereferenceable(16) %35)
  %36 = load i32, i32* @x.259
  %37 = load i32, i32* @y.260
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -547776867, i32 -1097047520
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator"*, align 8
  %65 = alloca %"struct.std::pair"*, align 8
  %66 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %64, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %65, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %66, align 8
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  %69 = load %"struct.std::pair"*, %"struct.std::pair"** %65, align 8
  %70 = load %"struct.std::pair"*, %"struct.std::pair"** %66, align 8
  %71 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %70) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %68, %"struct.std::pair"* %69, %"struct.std::pair"* dereferenceable(16) %71)
  store i32 -1539061246, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.261
  %6 = load i32, i32* @y.262
  %7 = sub i32 %5, -409632980
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -409632980
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 272462433, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 272462433, label %19
    i32 1045834336, label %27
    i32 1389484228, label %57
    i32 -1536262100, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1045834336, i32 -1536262100
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  store %"struct.std::pair"* %29, %"struct.std::pair"** %2
  %30 = load i32, i32* @x.261
  %31 = load i32, i32* @y.262
  %32 = add i32 %30, 161026888
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 161026888
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1389484228, i32 -1536262100
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %60, align 8
  %61 = load %"struct.std::pair"*, %"struct.std::pair"** %60, align 8
  store i32 1045834336, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.263
  %4 = load i32, i32* @y.264
  %5 = sub i32 %3, 361643460
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 361643460
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %400

; <label>:29:                                     ; preds = %2, %400
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"struct.std::pair"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"struct.std::pair"*, align 8
  %34 = alloca %"struct.std::pair"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %31, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %38 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %37, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %38, i64* %32, align 8
  %39 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %40 = load i64, i64* %32, align 8
  %41 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %39, i64 %40)
  store %"struct.std::pair"* %41, %"struct.std::pair"** %33, align 8
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  store %"struct.std::pair"* %42, %"struct.std::pair"** %34, align 8
  %43 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %44 to %"class.std::allocator"*
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %47 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %37) #3
  %48 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %46, i64 %47
  %49 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %50 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %49) #3
  %51 = load i32, i32* @x.263
  %52 = load i32, i32* @y.264
  %53 = add i32 %51, -354408232
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -354408232
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %400

; <label>:65:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %45, %"struct.std::pair"* %48, %"struct.std::pair"* dereferenceable(16) %50)
          to label %66 unwind label %82

; <label>:66:                                     ; preds = %65
  store %"struct.std::pair"* null, %"struct.std::pair"** %34, align 8
  %67 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %68, i32 0, i32 0
  %70 = load %"struct.std::pair"*, %"struct.std::pair"** %69, align 8
  %71 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %72, i32 0, i32 1
  %74 = load %"struct.std::pair"*, %"struct.std::pair"** %73, align 8
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %76 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %77 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %76) #3
  %78 = invoke %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"* %70, %"struct.std::pair"* %74, %"struct.std::pair"* %75, %"class.std::allocator"* dereferenceable(1) %77)
          to label %79 unwind label %82

; <label>:79:                                     ; preds = %66
  store %"struct.std::pair"* %78, %"struct.std::pair"** %34, align 8
  %80 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  %81 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %80, i32 1
  store %"struct.std::pair"* %81, %"struct.std::pair"** %34, align 8
  br label %317

; <label>:82:                                     ; preds = %66, %65
  %83 = landingpad { i8*, i32 }
          catch i8* null
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %35, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %36, align 4
  br label %86

; <label>:86:                                     ; preds = %82
  %87 = load i32, i32* @x.263
  %88 = load i32, i32* @y.264
  %89 = sub i32 %87, -391542717
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -391542717
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %422

; <label>:113:                                    ; preds = %86, %422
  %114 = load i8*, i8** %35, align 8
  %115 = call i8* @__cxa_begin_catch(i8* %114) #3
  %116 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  %117 = icmp ne %"struct.std::pair"* %116, null
  %118 = load i32, i32* @x.263
  %119 = load i32, i32* @y.264
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %422

; <label>:143:                                    ; preds = %113
  br i1 %117, label %209, label %144

; <label>:144:                                    ; preds = %143
  %145 = load i32, i32* @x.263
  %146 = load i32, i32* @y.264
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 false, true
  %157 = and i1 %154, false
  %158 = and i1 %152, %156
  %159 = and i1 %155, false
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 false, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %427

; <label>:170:                                    ; preds = %144, %427
  %171 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %172 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %171, i32 0, i32 0
  %173 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %172 to %"class.std::allocator"*
  %174 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %175 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %37) #3
  %176 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %174, i64 %175
  %177 = load i32, i32* @x.263
  %178 = load i32, i32* @y.264
  %179 = sub i32 %177, 1679870253
  %180 = sub i32 %179, 1
  %181 = add i32 %180, 1679870253
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 true, true
  %190 = and i1 %187, true
  %191 = and i1 %185, %189
  %192 = and i1 %188, true
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 true, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  br i1 %201, label %203, label %427

; <label>:203:                                    ; preds = %170
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1) %173, %"struct.std::pair"* %176)
          to label %204 unwind label %205

; <label>:204:                                    ; preds = %203
  br label %215

; <label>:205:                                    ; preds = %261, %215, %209, %203
  %206 = landingpad { i8*, i32 }
          cleanup
  %207 = extractvalue { i8*, i32 } %206, 0
  store i8* %207, i8** %35, align 8
  %208 = extractvalue { i8*, i32 } %206, 1
  store i32 %208, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %262 unwind label %396

; <label>:209:                                    ; preds = %143
  %210 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %211 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  %212 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %213 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %212) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %210, %"struct.std::pair"* %211, %"class.std::allocator"* dereferenceable(1) %213)
          to label %214 unwind label %205

; <label>:214:                                    ; preds = %209
  br label %215

; <label>:215:                                    ; preds = %214, %204
  %216 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %217 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %218 = load i64, i64* %32, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %216, %"struct.std::pair"* %217, i64 %218)
          to label %219 unwind label %205

; <label>:219:                                    ; preds = %215
  %220 = load i32, i32* @x.263
  %221 = load i32, i32* @y.264
  %222 = add i32 %220, -1378816913
  %223 = sub i32 %222, 1
  %224 = sub i32 %223, -1378816913
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = and i1 %228, %229
  %231 = xor i1 %228, %229
  %232 = or i1 %230, %231
  %233 = or i1 %228, %229
  br i1 %232, label %234, label %434

; <label>:234:                                    ; preds = %219, %434
  %235 = load i32, i32* @x.263
  %236 = load i32, i32* @y.264
  %237 = add i32 %235, 448038381
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, 448038381
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 false, true
  %248 = and i1 %245, false
  %249 = and i1 %243, %247
  %250 = and i1 %246, false
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 false, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  br i1 %259, label %261, label %434

; <label>:261:                                    ; preds = %234
  invoke void @__cxa_rethrow() #12
          to label %399 unwind label %205

; <label>:262:                                    ; preds = %205
  %263 = load i32, i32* @x.263
  %264 = load i32, i32* @y.264
  %265 = sub i32 %263, -1287545432
  %266 = sub i32 %265, 1
  %267 = add i32 %266, -1287545432
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = xor i1 %271, true
  %274 = xor i1 %272, true
  %275 = xor i1 false, true
  %276 = and i1 %273, false
  %277 = and i1 %271, %275
  %278 = and i1 %274, false
  %279 = and i1 %272, %275
  %280 = or i1 %276, %277
  %281 = or i1 %278, %279
  %282 = xor i1 %280, %281
  %283 = or i1 %273, %274
  %284 = xor i1 %283, true
  %285 = or i1 false, %275
  %286 = and i1 %284, %285
  %287 = or i1 %282, %286
  %288 = or i1 %271, %272
  br i1 %287, label %289, label %435

; <label>:289:                                    ; preds = %262, %435
  %290 = load i32, i32* @x.263
  %291 = load i32, i32* @y.264
  %292 = sub i32 %290, -1571882207
  %293 = sub i32 %292, 1
  %294 = add i32 %293, -1571882207
  %295 = sub i32 %290, 1
  %296 = mul i32 %290, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %291, 10
  %300 = xor i1 %298, true
  %301 = xor i1 %299, true
  %302 = xor i1 true, true
  %303 = and i1 %300, true
  %304 = and i1 %298, %302
  %305 = and i1 %301, true
  %306 = and i1 %299, %302
  %307 = or i1 %303, %304
  %308 = or i1 %305, %306
  %309 = xor i1 %307, %308
  %310 = or i1 %300, %301
  %311 = xor i1 %310, true
  %312 = or i1 true, %302
  %313 = and i1 %311, %312
  %314 = or i1 %309, %313
  %315 = or i1 %298, %299
  br i1 %314, label %316, label %435

; <label>:316:                                    ; preds = %289
  br label %362

; <label>:317:                                    ; preds = %79
  %318 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %319 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %318, i32 0, i32 0
  %320 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %319, i32 0, i32 0
  %321 = load %"struct.std::pair"*, %"struct.std::pair"** %320, align 8
  %322 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %323 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %323, i32 0, i32 1
  %325 = load %"struct.std::pair"*, %"struct.std::pair"** %324, align 8
  %326 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %327 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %326) #3
  call void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %321, %"struct.std::pair"* %325, %"class.std::allocator"* dereferenceable(1) %327)
  %328 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %329 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %330 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %329, i32 0, i32 0
  %331 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %330, i32 0, i32 0
  %332 = load %"struct.std::pair"*, %"struct.std::pair"** %331, align 8
  %333 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %334 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %333, i32 0, i32 0
  %335 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %334, i32 0, i32 2
  %336 = load %"struct.std::pair"*, %"struct.std::pair"** %335, align 8
  %337 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %338 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %337, i32 0, i32 0
  %339 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %338, i32 0, i32 0
  %340 = load %"struct.std::pair"*, %"struct.std::pair"** %339, align 8
  %341 = ptrtoint %"struct.std::pair"* %336 to i64
  %342 = ptrtoint %"struct.std::pair"* %340 to i64
  %343 = add i64 %341, 6014846056020643933
  %344 = sub i64 %343, %342
  %345 = sub i64 %344, 6014846056020643933
  %346 = sub i64 %341, %342
  %347 = sdiv exact i64 %345, 16
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %328, %"struct.std::pair"* %332, i64 %347)
  %348 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %349 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %350 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %349, i32 0, i32 0
  %351 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %350, i32 0, i32 0
  store %"struct.std::pair"* %348, %"struct.std::pair"** %351, align 8
  %352 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  %353 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %354 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %353, i32 0, i32 0
  %355 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %354, i32 0, i32 1
  store %"struct.std::pair"* %352, %"struct.std::pair"** %355, align 8
  %356 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %357 = load i64, i64* %32, align 8
  %358 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %356, i64 %357
  %359 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %360 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %359, i32 0, i32 0
  %361 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %360, i32 0, i32 2
  store %"struct.std::pair"* %358, %"struct.std::pair"** %361, align 8
  ret void

; <label>:362:                                    ; preds = %316
  %363 = load i32, i32* @x.263
  %364 = load i32, i32* @y.264
  %365 = add i32 %363, -1522331382
  %366 = sub i32 %365, 1
  %367 = sub i32 %366, -1522331382
  %368 = sub i32 %363, 1
  %369 = mul i32 %363, %367
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %364, 10
  %373 = and i1 %371, %372
  %374 = xor i1 %371, %372
  %375 = or i1 %373, %374
  %376 = or i1 %371, %372
  br i1 %375, label %377, label %436

; <label>:377:                                    ; preds = %362, %436
  %378 = load i8*, i8** %35, align 8
  %379 = load i32, i32* %36, align 4
  %380 = insertvalue { i8*, i32 } undef, i8* %378, 0
  %381 = insertvalue { i8*, i32 } %380, i32 %379, 1
  %382 = load i32, i32* @x.263
  %383 = load i32, i32* @y.264
  %384 = sub i32 0, 1
  %385 = add i32 %382, %384
  %386 = sub i32 %382, 1
  %387 = mul i32 %382, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %383, 10
  %391 = and i1 %389, %390
  %392 = xor i1 %389, %390
  %393 = or i1 %391, %392
  %394 = or i1 %389, %390
  br i1 %393, label %395, label %436

; <label>:395:                                    ; preds = %377
  resume { i8*, i32 } %381

; <label>:396:                                    ; preds = %205
  %397 = landingpad { i8*, i32 }
          catch i8* null
  %398 = extractvalue { i8*, i32 } %397, 0
  call void @__clang_call_terminate(i8* %398) #11
  unreachable

; <label>:399:                                    ; preds = %261
  unreachable

; <label>:400:                                    ; preds = %29, %2
  %401 = alloca %"class.std::vector"*, align 8
  %402 = alloca %"struct.std::pair"*, align 8
  %403 = alloca i64, align 8
  %404 = alloca %"struct.std::pair"*, align 8
  %405 = alloca %"struct.std::pair"*, align 8
  %406 = alloca i8*
  %407 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %401, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %402, align 8
  %408 = load %"class.std::vector"*, %"class.std::vector"** %401, align 8
  %409 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %408, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %409, i64* %403, align 8
  %410 = bitcast %"class.std::vector"* %408 to %"struct.std::_Vector_base"*
  %411 = load i64, i64* %403, align 8
  %412 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %410, i64 %411)
  store %"struct.std::pair"* %412, %"struct.std::pair"** %404, align 8
  %413 = load %"struct.std::pair"*, %"struct.std::pair"** %404, align 8
  store %"struct.std::pair"* %413, %"struct.std::pair"** %405, align 8
  %414 = bitcast %"class.std::vector"* %408 to %"struct.std::_Vector_base"*
  %415 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %414, i32 0, i32 0
  %416 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %415 to %"class.std::allocator"*
  %417 = load %"struct.std::pair"*, %"struct.std::pair"** %404, align 8
  %418 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %408) #3
  %419 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %417, i64 %418
  %420 = load %"struct.std::pair"*, %"struct.std::pair"** %402, align 8
  %421 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %420) #3
  br label %29

; <label>:422:                                    ; preds = %113, %86
  %423 = load i8*, i8** %35, align 8
  %424 = call i8* @__cxa_begin_catch(i8* %423) #3
  %425 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  %426 = icmp ne %"struct.std::pair"* %425, null
  br label %113

; <label>:427:                                    ; preds = %170, %144
  %428 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %429 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %428, i32 0, i32 0
  %430 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %429 to %"class.std::allocator"*
  %431 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %432 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %37) #3
  %433 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %431, i64 %432
  br label %170

; <label>:434:                                    ; preds = %234, %219
  br label %234

; <label>:435:                                    ; preds = %289, %262
  br label %289

; <label>:436:                                    ; preds = %377, %362
  %437 = load i8*, i8** %35, align 8
  %438 = load i32, i32* %36, align 4
  %439 = insertvalue { i8*, i32 } undef, i8* %437, 0
  %440 = insertvalue { i8*, i32 } %439, i32 %438, 1
  br label %377
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = bitcast %"struct.std::pair"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.std::pair"* %10 to i8*
  %14 = bitcast %"struct.std::pair"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  store %"class.std::vector"* %14, %"class.std::vector"** %8
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %16 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector"* %15) #3
  %17 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %18 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %17) #3
  %19 = sub i64 0, %18
  %20 = add i64 %16, %19
  %21 = sub i64 %16, %18
  store i64 %20, i64* %7
  %22 = load i64, i64* %10, align 8
  store i64 %22, i64* %6
  %23 = alloca i32
  store i32 1758868897, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %198
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1758868897, label %28
    i32 1095139953, label %33
    i32 -2058448348, label %48
    i32 -399995673, label %65
    i32 49824359, label %66
    i32 811024444, label %82
    i32 -1490752911, label %113
    i32 703456483, label %116
    i32 -1357750616, label %122
    i32 -990500185, label %125
    i32 1414022434, label %141
    i32 1872850182, label %157
    i32 422777493, label %159
    i32 -40461814, label %161
    i32 1548597694, label %163
    i32 1391002090, label %196
  ]

; <label>:27:                                     ; preds = %25
  br label %198

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %7
  %30 = load volatile i64, i64* %6
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 1095139953, i32 49824359
  store i32 %32, i32* %23
  br label %198

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.267
  %35 = load i32, i32* @y.268
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -2058448348, i32 -40461814
  store i32 %47, i32* %23
  br label %198

; <label>:48:                                     ; preds = %25
  %49 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %49) #12
  %50 = load i32, i32* @x.267
  %51 = load i32, i32* @y.268
  %52 = add i32 %50, 1655339440
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1655339440
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -399995673, i32 -40461814
  store i32 %64, i32* %23
  br label %198

; <label>:65:                                     ; preds = %25
  unreachable

; <label>:66:                                     ; preds = %25
  %67 = load i32, i32* @x.267
  %68 = load i32, i32* @y.268
  %69 = add i32 %67, 577328904
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 577328904
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 811024444, i32 1548597694
  store i32 %81, i32* %23
  br label %198

; <label>:82:                                     ; preds = %25
  %83 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %84 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %83) #3
  %85 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %86 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %85) #3
  store i64 %86, i64* %13, align 8
  %87 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 0, %84
  %90 = sub i64 0, %88
  %91 = add i64 %89, %90
  %92 = sub i64 0, %91
  %93 = add i64 %84, %88
  store i64 %92, i64* %12, align 8
  %94 = load i64, i64* %12, align 8
  %95 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %96 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %95) #3
  %97 = icmp ult i64 %94, %96
  store i1 %97, i1* %5
  %98 = load i32, i32* @x.267
  %99 = load i32, i32* @y.268
  %100 = add i32 %98, 1072802710
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 1072802710
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 -1490752911, i32 1548597694
  store i32 %112, i32* %23
  br label %198

; <label>:113:                                    ; preds = %25
  %114 = load volatile i1, i1* %5
  %115 = select i1 %114, i32 -1357750616, i32 703456483
  store i32 %115, i32* %23
  br label %198

; <label>:116:                                    ; preds = %25
  %117 = load i64, i64* %12, align 8
  %118 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %119 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector"* %118) #3
  %120 = icmp ugt i64 %117, %119
  %121 = select i1 %120, i32 -1357750616, i32 -990500185
  store i32 %121, i32* %23
  br label %198

; <label>:122:                                    ; preds = %25
  %123 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %124 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector"* %123) #3
  store i32 422777493, i32* %23
  store i64 %124, i64* %24
  br label %198

; <label>:125:                                    ; preds = %25
  %126 = load i32, i32* @x.267
  %127 = load i32, i32* @y.268
  %128 = sub i32 %126, -1171964543
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -1171964543
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  %140 = select i1 %138, i32 1414022434, i32 1391002090
  store i32 %140, i32* %23
  br label %198

; <label>:141:                                    ; preds = %25
  %142 = load i64, i64* %12, align 8
  store i64 %142, i64* %4
  %143 = load i32, i32* @x.267
  %144 = load i32, i32* @y.268
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  %156 = select i1 %154, i32 1872850182, i32 1391002090
  store i32 %156, i32* %23
  br label %198

; <label>:157:                                    ; preds = %25
  store i32 422777493, i32* %23
  %158 = load volatile i64, i64* %4
  store i64 %158, i64* %24
  br label %198

; <label>:159:                                    ; preds = %25
  %160 = load i64, i64* %24
  ret i64 %160

; <label>:161:                                    ; preds = %25
  %162 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %162) #12
  store i32 -2058448348, i32* %23
  br label %198

; <label>:163:                                    ; preds = %25
  %164 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %165 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %164) #3
  %166 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %167 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %166) #3
  store i64 %167, i64* %13, align 8
  %168 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %169 = load i64, i64* %168, align 8
  %170 = shl i64 %165, %169
  %171 = add i64 0, -4690821835255793783
  %172 = sub i64 %171, %165
  %173 = sub i64 %172, -4690821835255793783
  %174 = sub i64 0, %165
  %175 = sub i64 %173, -5014297894704805227
  %176 = add i64 %175, %169
  %177 = add i64 %176, -5014297894704805227
  %178 = add i64 %173, %169
  %179 = add i64 %165, -26109704476038991
  %180 = sub i64 %179, %169
  %181 = sub i64 %180, -26109704476038991
  %182 = sub i64 %165, %169
  %183 = mul i64 %181, %169
  %184 = sub i64 0, %169
  %185 = add i64 %165, %184
  %186 = sub i64 %165, %169
  %187 = mul i64 %185, %169
  %188 = add i64 %165, 8336876623846793144
  %189 = add i64 %188, %169
  %190 = sub i64 %189, 8336876623846793144
  %191 = add i64 %165, %169
  store i64 %190, i64* %12, align 8
  %192 = load i64, i64* %12, align 8
  %193 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %194 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %193) #3
  %195 = icmp ult i64 %192, %194
  store i32 811024444, i32* %23
  br label %198

; <label>:196:                                    ; preds = %25
  %197 = load i64, i64* %12, align 8
  store i32 1414022434, i32* %23
  br label %198

; <label>:198:                                    ; preds = %196, %163, %161, %157, %141, %125, %122, %116, %113, %82, %66, %48, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %6, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %12 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"struct.std::pair"* %12, %"struct.std::pair"** %13, align 8
  %14 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %15 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"struct.std::pair"* %15, %"struct.std::pair"** %16, align 8
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"struct.std::pair"*, %"struct.std::pair"** %21, align 8
  %23 = call %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"* %20, %"struct.std::pair"* %22, %"struct.std::pair"* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret %"struct.std::pair"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* %6, %"struct.std::pair"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  call void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"* %7, %"struct.std::pair"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -1550693539, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1550693539, label %17
    i32 -690340729, label %22
    i32 645448913, label %50
    i32 -99479053, label %78
    i32 -250718638, label %79
    i32 -173141051, label %81
    i32 612857297, label %97
    i32 1012160625, label %114
    i32 -1962608456, label %116
    i32 -1365878647, label %118
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 -690340729, i32 -250718638
  store i32 %21, i32* %13
  br label %120

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.277
  %24 = load i32, i32* @y.278
  %25 = sub i32 %23, -258961515
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -258961515
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 645448913, i32 -1962608456
  store i32 %49, i32* %13
  br label %120

; <label>:50:                                     ; preds = %14
  %51 = load i64*, i64** %8, align 8
  store i64* %51, i64** %6, align 8
  %52 = load i32, i32* @x.277
  %53 = load i32, i32* @y.278
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -99479053, i32 -1962608456
  store i32 %77, i32* %13
  br label %120

; <label>:78:                                     ; preds = %14
  store i32 -173141051, i32* %13
  br label %120

; <label>:79:                                     ; preds = %14
  %80 = load i64*, i64** %7, align 8
  store i64* %80, i64** %6, align 8
  store i32 -173141051, i32* %13
  br label %120

; <label>:81:                                     ; preds = %14
  %82 = load i32, i32* @x.277
  %83 = load i32, i32* @y.278
  %84 = sub i32 %82, -2118916958
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -2118916958
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 612857297, i32 -1365878647
  store i32 %96, i32* %13
  br label %120

; <label>:97:                                     ; preds = %14
  %98 = load i64*, i64** %6, align 8
  store i64* %98, i64** %3
  %99 = load i32, i32* @x.277
  %100 = load i32, i32* @y.278
  %101 = sub i32 %99, -692348554
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -692348554
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 1012160625, i32 -1365878647
  store i32 %113, i32* %13
  br label %120

; <label>:114:                                    ; preds = %14
  %115 = load volatile i64*, i64** %3
  ret i64* %115

; <label>:116:                                    ; preds = %14
  %117 = load i64*, i64** %8, align 8
  store i64* %117, i64** %6, align 8
  store i32 645448913, i32* %13
  br label %120

; <label>:118:                                    ; preds = %14
  %119 = load i64*, i64** %6, align 8
  store i32 612857297, i32* %13
  br label %120

; <label>:120:                                    ; preds = %118, %116, %97, %81, %79, %78, %50, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.281
  %6 = load i32, i32* @y.282
  %7 = add i32 %5, 296732436
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 296732436
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2087687156, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2087687156, label %19
    i32 1736403678, label %27
    i32 -569727677, label %46
    i32 251422687, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1736403678, i32 251422687
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %29 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %30 to %"class.std::allocator"*
  store %"class.std::allocator"* %31, %"class.std::allocator"** %2
  %32 = load i32, i32* @x.281
  %33 = load i32, i32* @y.282
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -569727677, i32 251422687
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %49, align 8
  %50 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %51 to %"class.std::allocator"*
  store i32 1736403678, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %12, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.std::pair"*, %"struct.std::pair"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.std::pair"*, %"struct.std::pair"** %20, align 8
  %22 = call %"struct.std::pair"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_(%"struct.std::pair"* %19, %"struct.std::pair"* %21, %"struct.std::pair"* %17)
  ret %"struct.std::pair"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  %4 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.std::pair"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  ret %"struct.std::pair"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %21 = call %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_(%"struct.std::pair"* %18, %"struct.std::pair"* %20, %"struct.std::pair"* %16)
  ret %"struct.std::pair"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.289
  %5 = load i32, i32* @y.290
  %6 = sub i32 %4, 1115865125
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1115865125
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %324

; <label>:30:                                     ; preds = %3, %324
  %31 = alloca %"class.std::move_iterator", align 8
  %32 = alloca %"class.std::move_iterator", align 8
  %33 = alloca %"struct.std::pair"*, align 8
  %34 = alloca %"struct.std::pair"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %31, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %32, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %38, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %33, align 8
  %39 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  store %"struct.std::pair"* %39, %"struct.std::pair"** %34, align 8
  %40 = load i32, i32* @x.289
  %41 = load i32, i32* @y.290
  %42 = add i32 %40, -321021555
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -321021555
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %324

; <label>:66:                                     ; preds = %30
  br label %67

; <label>:67:                                     ; preds = %119, %66
  %68 = invoke zeroext i1 @_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %31, %"class.std::move_iterator"* dereferenceable(8) %32)
          to label %69 unwind label %122

; <label>:69:                                     ; preds = %67
  br i1 %68, label %70, label %173

; <label>:70:                                     ; preds = %69
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  %72 = call %"struct.std::pair"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair"* dereferenceable(16) %71) #3
  %73 = invoke dereferenceable(16) %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv(%"class.std::move_iterator"* %31)
          to label %74 unwind label %122

; <label>:74:                                     ; preds = %70
  invoke void @_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_(%"struct.std::pair"* %72, %"struct.std::pair"* dereferenceable(16) %73)
          to label %75 unwind label %122

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.289
  %77 = load i32, i32* @y.290
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %334

; <label>:101:                                    ; preds = %75, %334
  %102 = load i32, i32* @x.289
  %103 = load i32, i32* @y.290
  %104 = add i32 %102, -663149249
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -663149249
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  br i1 %114, label %116, label %334

; <label>:116:                                    ; preds = %101
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIxxEEppEv(%"class.std::move_iterator"* %31)
          to label %119 unwind label %122

; <label>:119:                                    ; preds = %117
  %120 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  %121 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %120, i32 1
  store %"struct.std::pair"* %121, %"struct.std::pair"** %34, align 8
  br label %67

; <label>:122:                                    ; preds = %117, %74, %70, %67
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %35, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %36, align 4
  br label %126

; <label>:126:                                    ; preds = %122
  %127 = load i8*, i8** %35, align 8
  %128 = call i8* @__cxa_begin_catch(i8* %127) #3
  %129 = load %"struct.std::pair"*, %"struct.std::pair"** %33, align 8
  %130 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"* %129, %"struct.std::pair"* %130)
          to label %131 unwind label %175

; <label>:131:                                    ; preds = %126
  %132 = load i32, i32* @x.289
  %133 = load i32, i32* @y.290
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %335

; <label>:145:                                    ; preds = %131, %335
  %146 = load i32, i32* @x.289
  %147 = load i32, i32* @y.290
  %148 = sub i32 %146, 1323188458
  %149 = sub i32 %148, 1
  %150 = add i32 %149, 1323188458
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 false, true
  %159 = and i1 %156, false
  %160 = and i1 %154, %158
  %161 = and i1 %157, false
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 false, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %335

; <label>:172:                                    ; preds = %145
  invoke void @__cxa_rethrow() #12
          to label %271 unwind label %175

; <label>:173:                                    ; preds = %69
  %174 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  ret %"struct.std::pair"* %174

; <label>:175:                                    ; preds = %172, %126
  %176 = landingpad { i8*, i32 }
          cleanup
  %177 = extractvalue { i8*, i32 } %176, 0
  store i8* %177, i8** %35, align 8
  %178 = extractvalue { i8*, i32 } %176, 1
  store i32 %178, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %179 unwind label %268

; <label>:179:                                    ; preds = %175
  %180 = load i32, i32* @x.289
  %181 = load i32, i32* @y.290
  %182 = sub i32 %180, -402796197
  %183 = sub i32 %182, 1
  %184 = add i32 %183, -402796197
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 true, true
  %193 = and i1 %190, true
  %194 = and i1 %188, %192
  %195 = and i1 %191, true
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 true, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %336

; <label>:206:                                    ; preds = %179, %336
  %207 = load i32, i32* @x.289
  %208 = load i32, i32* @y.290
  %209 = sub i32 %207, 1232937595
  %210 = sub i32 %209, 1
  %211 = add i32 %210, 1232937595
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 false, true
  %220 = and i1 %217, false
  %221 = and i1 %215, %219
  %222 = and i1 %218, false
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 false, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  br i1 %231, label %233, label %336

; <label>:233:                                    ; preds = %206
  br label %235
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:235:                                    ; preds = %233
  %236 = load i32, i32* @x.289
  %237 = load i32, i32* @y.290
  %238 = sub i32 0, 1
  %239 = add i32 %236, %238
  %240 = sub i32 %236, 1
  %241 = mul i32 %236, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %237, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  br i1 %247, label %249, label %337

; <label>:249:                                    ; preds = %235, %337
  %250 = load i8*, i8** %35, align 8
  %251 = load i32, i32* %36, align 4
  %252 = insertvalue { i8*, i32 } undef, i8* %250, 0
  %253 = insertvalue { i8*, i32 } %252, i32 %251, 1
  %254 = load i32, i32* @x.289
  %255 = load i32, i32* @y.290
  %256 = sub i32 0, 1
  %257 = add i32 %254, %256
  %258 = sub i32 %254, 1
  %259 = mul i32 %254, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %255, 10
  %263 = and i1 %261, %262
  %264 = xor i1 %261, %262
  %265 = or i1 %263, %264
  %266 = or i1 %261, %262
  br i1 %265, label %267, label %337

; <label>:267:                                    ; preds = %249
  resume { i8*, i32 } %253

; <label>:268:                                    ; preds = %175
  %269 = landingpad { i8*, i32 }
          catch i8* null
  %270 = extractvalue { i8*, i32 } %269, 0
  call void @__clang_call_terminate(i8* %270) #11
  unreachable

; <label>:271:                                    ; preds = %172
  %272 = load i32, i32* @x.289
  %273 = load i32, i32* @y.290
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 false, true
  %284 = and i1 %281, false
  %285 = and i1 %279, %283
  %286 = and i1 %282, false
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 false, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %342

; <label>:297:                                    ; preds = %271, %342
  %298 = load i32, i32* @x.289
  %299 = load i32, i32* @y.290
  %300 = sub i32 0, 1
  %301 = add i32 %298, %300
  %302 = sub i32 %298, 1
  %303 = mul i32 %298, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %299, 10
  %307 = xor i1 %305, true
  %308 = xor i1 %306, true
  %309 = xor i1 false, true
  %310 = and i1 %307, false
  %311 = and i1 %305, %309
  %312 = and i1 %308, false
  %313 = and i1 %306, %309
  %314 = or i1 %310, %311
  %315 = or i1 %312, %313
  %316 = xor i1 %314, %315
  %317 = or i1 %307, %308
  %318 = xor i1 %317, true
  %319 = or i1 false, %309
  %320 = and i1 %318, %319
  %321 = or i1 %316, %320
  %322 = or i1 %305, %306
  br i1 %321, label %323, label %342

; <label>:323:                                    ; preds = %297
  unreachable

; <label>:324:                                    ; preds = %30, %3
  %325 = alloca %"class.std::move_iterator", align 8
  %326 = alloca %"class.std::move_iterator", align 8
  %327 = alloca %"struct.std::pair"*, align 8
  %328 = alloca %"struct.std::pair"*, align 8
  %329 = alloca i8*
  %330 = alloca i32
  %331 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %325, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %331, align 8
  %332 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %326, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %332, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %327, align 8
  %333 = load %"struct.std::pair"*, %"struct.std::pair"** %327, align 8
  store %"struct.std::pair"* %333, %"struct.std::pair"** %328, align 8
  br label %30

; <label>:334:                                    ; preds = %101, %75
  br label %101

; <label>:335:                                    ; preds = %145, %131
  br label %145

; <label>:336:                                    ; preds = %206, %179
  br label %206

; <label>:337:                                    ; preds = %249, %235
  %338 = load i8*, i8** %35, align 8
  %339 = load i32, i32* %36, align 4
  %340 = insertvalue { i8*, i32 } undef, i8* %338, 0
  %341 = insertvalue { i8*, i32 } %340, i32 %339, 1
  br label %249

; <label>:342:                                    ; preds = %297, %271
  br label %297
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_(%"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.293
  %6 = load i32, i32* @y.294
  %7 = sub i32 %5, 33542171
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 33542171
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2041259620, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2041259620, label %19
    i32 1296948162, label %39
    i32 610712525, label %64
    i32 -1124594096, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1296948162, i32 -1124594096
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair"*, align 8
  %41 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %40, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %41, align 8
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %43 = bitcast %"struct.std::pair"* %42 to i8*
  %44 = bitcast i8* %43 to %"struct.std::pair"*
  %45 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  %46 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(16) %45) #3
  %47 = bitcast %"struct.std::pair"* %44 to i8*
  %48 = bitcast %"struct.std::pair"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  %49 = load i32, i32* @x.293
  %50 = load i32, i32* @y.294
  %51 = sub i32 %49, -752314037
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -752314037
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 610712525, i32 -1124594096
  store i32 %63, i32* %15
  br label %75

; <label>:64:                                     ; preds = %16
  ret void

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::pair"*, align 8
  %67 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %66, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %67, align 8
  %68 = load %"struct.std::pair"*, %"struct.std::pair"** %66, align 8
  %69 = bitcast %"struct.std::pair"* %68 to i8*
  %70 = bitcast i8* %69 to %"struct.std::pair"*
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %67, align 8
  %72 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(16) %71) #3
  %73 = bitcast %"struct.std::pair"* %70 to i8*
  %74 = bitcast %"struct.std::pair"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false)
  store i32 1296948162, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.295
  %6 = load i32, i32* @y.296
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 49333548, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 49333548, label %18
    i32 -2098740329, label %38
    i32 377813645, label %69
    i32 -986199411, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2098740329, i32 -986199411
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %39, align 8
  %40 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %39, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  store %"struct.std::pair"* %42, %"struct.std::pair"** %2
  %43 = load i32, i32* @x.295
  %44 = load i32, i32* @y.296
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 377813645, i32 -986199411
  store i32 %68, i32* %14
  br label %76

; <label>:69:                                     ; preds = %15
  %70 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %72, align 8
  %73 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %72, align 8
  %74 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %73, i32 0, i32 0
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %74, align 8
  store i32 -2098740329, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIxxEEppEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.297
  %6 = load i32, i32* @y.298
  %7 = sub i32 %5, -1677334727
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1677334727
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1009094742, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1009094742, label %19
    i32 -2135347757, label %39
    i32 825704014, label %61
    i32 -1238174936, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2135347757, i32 -1238174936
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  store %"class.std::move_iterator"* %41, %"class.std::move_iterator"** %2
  %42 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %44, i32 1
  store %"struct.std::pair"* %45, %"struct.std::pair"** %43, align 8
  %46 = load i32, i32* @x.297
  %47 = load i32, i32* @y.298
  %48 = sub i32 %46, 1390651745
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1390651745
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 825704014, i32 -1238174936
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %64, align 8
  %65 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %64, align 8
  %66 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %65, i32 0, i32 0
  %67 = load %"struct.std::pair"*, %"struct.std::pair"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i32 1
  store %"struct.std::pair"* %68, %"struct.std::pair"** %66, align 8
  store i32 -2135347757, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.std::pair"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  ret %"struct.std::pair"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_(%"class.std::move_iterator"*, %"struct.std::pair"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  store %"struct.std::pair"* %7, %"struct.std::pair"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRxS0_EEC2ES0_S0_(%"class.std::tuple.20"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::tuple.20"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::tuple.20"* %0, %"class.std::tuple.20"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::tuple.20"*, %"class.std::tuple.20"** %4, align 8
  %8 = bitcast %"class.std::tuple.20"* %7 to %"struct.std::_Tuple_impl.21"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  call void @_ZNSt11_Tuple_implILm0EJRxS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl.21"* %8, i64* dereferenceable(8) %9, i64* dereferenceable(8) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRxS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl.21"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.313
  %7 = load i32, i32* @y.314
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1614655442, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1614655442, label %19
    i32 -952553205, label %39
    i32 -1590966797, label %77
    i32 -1709003092, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -952553205, i32 -1709003092
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.21"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.21"* %0, %"struct.std::_Tuple_impl.21"** %40, align 8
  store i64* %1, i64** %41, align 8
  store i64* %2, i64** %42, align 8
  %43 = load %"struct.std::_Tuple_impl.21"*, %"struct.std::_Tuple_impl.21"** %40, align 8
  %44 = bitcast %"struct.std::_Tuple_impl.21"* %43 to %"struct.std::_Tuple_impl.22"*
  %45 = load i64*, i64** %42, align 8
  call void @_ZNSt11_Tuple_implILm1EJRxEEC2ES0_(%"struct.std::_Tuple_impl.22"* %44, i64* dereferenceable(8) %45)
  %46 = bitcast %"struct.std::_Tuple_impl.21"* %43 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  %48 = bitcast i8* %47 to %"struct.std::_Head_base.24"*
  %49 = load i64*, i64** %41, align 8
  call void @_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_(%"struct.std::_Head_base.24"* %48, i64* dereferenceable(8) %49)
  %50 = load i32, i32* @x.313
  %51 = load i32, i32* @y.314
  %52 = sub i32 %50, -1492677712
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1492677712
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1590966797, i32 -1709003092
  store i32 %76, i32* %15
  br label %89

; <label>:77:                                     ; preds = %16
  ret void

; <label>:78:                                     ; preds = %16
  %79 = alloca %"struct.std::_Tuple_impl.21"*, align 8
  %80 = alloca i64*, align 8
  %81 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.21"* %0, %"struct.std::_Tuple_impl.21"** %79, align 8
  store i64* %1, i64** %80, align 8
  store i64* %2, i64** %81, align 8
  %82 = load %"struct.std::_Tuple_impl.21"*, %"struct.std::_Tuple_impl.21"** %79, align 8
  %83 = bitcast %"struct.std::_Tuple_impl.21"* %82 to %"struct.std::_Tuple_impl.22"*
  %84 = load i64*, i64** %81, align 8
  call void @_ZNSt11_Tuple_implILm1EJRxEEC2ES0_(%"struct.std::_Tuple_impl.22"* %83, i64* dereferenceable(8) %84)
  %85 = bitcast %"struct.std::_Tuple_impl.21"* %82 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 8
  %87 = bitcast i8* %86 to %"struct.std::_Head_base.24"*
  %88 = load i64*, i64** %80, align 8
  call void @_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_(%"struct.std::_Head_base.24"* %87, i64* dereferenceable(8) %88)
  store i32 -952553205, i32* %15
  br label %89

; <label>:89:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJRxEEC2ES0_(%"struct.std::_Tuple_impl.22"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.22"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.22"* %0, %"struct.std::_Tuple_impl.22"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.22"* %5 to %"struct.std::_Head_base.23"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt10_Head_baseILm1ERxLb0EEC2ES0_(%"struct.std::_Head_base.23"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_(%"struct.std::_Head_base.24"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.24"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.24"* %0, %"struct.std::_Head_base.24"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.24"*, %"struct.std::_Head_base.24"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.24", %"struct.std::_Head_base.24"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ERxLb0EEC2ES0_(%"struct.std::_Head_base.23"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.23"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.23"* %0, %"struct.std::_Head_base.23"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.23"*, %"struct.std::_Head_base.23"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.23", %"struct.std::_Head_base.23"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.21"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.21"*, align 8
  store %"struct.std::_Tuple_impl.21"* %0, %"struct.std::_Tuple_impl.21"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.21"*, %"struct.std::_Tuple_impl.21"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.21"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.24"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.24"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.22"* @_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.21"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.21"*, align 8
  store %"struct.std::_Tuple_impl.21"* %0, %"struct.std::_Tuple_impl.21"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.21"*, %"struct.std::_Tuple_impl.21"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.21"* %3 to %"struct.std::_Tuple_impl.22"*
  ret %"struct.std::_Tuple_impl.22"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJRxEE7_M_headERS1_(%"struct.std::_Tuple_impl.22"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.325
  %6 = load i32, i32* @y.326
  %7 = sub i32 %5, -1692602958
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1692602958
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -421911155, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -421911155, label %19
    i32 -2068828655, label %39
    i32 -1549259075, label %59
    i32 1124141117, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2068828655, i32 1124141117
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.22"*, align 8
  store %"struct.std::_Tuple_impl.22"* %0, %"struct.std::_Tuple_impl.22"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.22"* %41 to %"struct.std::_Head_base.23"*
  %43 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.23"* dereferenceable(8) %42) #3
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.325
  %45 = load i32, i32* @y.326
  %46 = add i32 %44, 355162263
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 355162263
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1549259075, i32 1124141117
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Tuple_impl.22"*, align 8
  store %"struct.std::_Tuple_impl.22"* %0, %"struct.std::_Tuple_impl.22"** %62, align 8
  %63 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %62, align 8
  %64 = bitcast %"struct.std::_Tuple_impl.22"* %63 to %"struct.std::_Head_base.23"*
  %65 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.23"* dereferenceable(8) %64) #3
  store i32 -2068828655, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.24"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.327
  %6 = load i32, i32* @y.328
  %7 = add i32 %5, 337300718
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 337300718
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1017749560, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1017749560, label %19
    i32 1581900604, label %27
    i32 -1246217509, label %59
    i32 -251287344, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1581900604, i32 -251287344
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base.24"*, align 8
  store %"struct.std::_Head_base.24"* %0, %"struct.std::_Head_base.24"** %28, align 8
  %29 = load %"struct.std::_Head_base.24"*, %"struct.std::_Head_base.24"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Head_base.24", %"struct.std::_Head_base.24"* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.327
  %33 = load i32, i32* @y.328
  %34 = add i32 %32, -1536758197
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1536758197
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1246217509, i32 -251287344
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Head_base.24"*, align 8
  store %"struct.std::_Head_base.24"* %0, %"struct.std::_Head_base.24"** %62, align 8
  %63 = load %"struct.std::_Head_base.24"*, %"struct.std::_Head_base.24"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Head_base.24", %"struct.std::_Head_base.24"* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  store i32 1581900604, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.23"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.329
  %6 = load i32, i32* @y.330
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2031488285, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2031488285, label %18
    i32 732344892, label %26
    i32 -213084656, label %58
    i32 -1663941919, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 732344892, i32 -1663941919
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Head_base.23"*, align 8
  store %"struct.std::_Head_base.23"* %0, %"struct.std::_Head_base.23"** %27, align 8
  %28 = load %"struct.std::_Head_base.23"*, %"struct.std::_Head_base.23"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Head_base.23", %"struct.std::_Head_base.23"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.329
  %32 = load i32, i32* @y.330
  %33 = add i32 %31, -1561523162
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1561523162
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -213084656, i32 -1663941919
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Head_base.23"*, align 8
  store %"struct.std::_Head_base.23"* %0, %"struct.std::_Head_base.23"** %61, align 8
  %62 = load %"struct.std::_Head_base.23"*, %"struct.std::_Head_base.23"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Head_base.23", %"struct.std::_Head_base.23"* %62, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  store i32 732344892, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.38"* dereferenceable(1), %"class.std::tuple.41"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.331
  %8 = load i32, i32* @y.332
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1984145444, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %92
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1984145444, label %20
    i32 -1486035541, label %40
    i32 1777168631, label %79
    i32 142029316, label %80
  ]

; <label>:19:                                     ; preds = %17
  br label %92

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1486035541, i32 142029316
  store i32 %39, i32* %16
  br label %92

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.38"*, align 8
  %42 = alloca %"class.std::tuple.41"*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %41, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %42, align 8
  store i64* %2, i64** %43, align 8
  store i64* %3, i64** %44, align 8
  %45 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %41, align 8
  %46 = bitcast %"class.std::allocator.38"* %45 to %"class.__gnu_cxx::new_allocator.39"*
  %47 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %42, align 8
  %48 = load i64*, i64** %43, align 8
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i64*, i64** %44, align 8
  %51 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %50) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE9constructIS2_JRxS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.39"* %46, %"class.std::tuple.41"* %47, i64* dereferenceable(8) %49, i64* dereferenceable(8) %51)
  %52 = load i32, i32* @x.331
  %53 = load i32, i32* @y.332
  %54 = sub i32 %52, 569234590
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 569234590
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1777168631, i32 142029316
  store i32 %78, i32* %16
  br label %92

; <label>:79:                                     ; preds = %17
  ret void

; <label>:80:                                     ; preds = %17
  %81 = alloca %"class.std::allocator.38"*, align 8
  %82 = alloca %"class.std::tuple.41"*, align 8
  %83 = alloca i64*, align 8
  %84 = alloca i64*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %81, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %82, align 8
  store i64* %2, i64** %83, align 8
  store i64* %3, i64** %84, align 8
  %85 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %81, align 8
  %86 = bitcast %"class.std::allocator.38"* %85 to %"class.__gnu_cxx::new_allocator.39"*
  %87 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %82, align 8
  %88 = load i64*, i64** %83, align 8
  %89 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %88) #3
  %90 = load i64*, i64** %84, align 8
  %91 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %90) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE9constructIS2_JRxS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.39"* %86, %"class.std::tuple.41"* %87, i64* dereferenceable(8) %89, i64* dereferenceable(8) %91)
  store i32 -1486035541, i32* %16
  br label %92

; <label>:92:                                     ; preds = %80, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_EEEvDpOT_(%"class.std::vector.36"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.36"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::tuple.41"*, align 8
  %9 = alloca %"class.std::tuple.41"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %12 = load %"class.std::vector.36"*, %"class.std::vector.36"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.36"* %12, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %13, i64* %7, align 8
  %14 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %15 = load i64, i64* %7, align 8
  %16 = call %"class.std::tuple.41"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.37"* %14, i64 %15)
  store %"class.std::tuple.41"* %16, %"class.std::tuple.41"** %8, align 8
  %17 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  store %"class.std::tuple.41"* %17, %"class.std::tuple.41"** %9, align 8
  %18 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %19 to %"class.std::allocator.38"*
  %21 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %22 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %12) #3
  %23 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %21, i64 %22
  %24 = load i64*, i64** %5, align 8
  %25 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %24) #3
  %26 = load i64*, i64** %6, align 8
  %27 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %26) #3
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.38"* dereferenceable(1) %20, %"class.std::tuple.41"* %23, i64* dereferenceable(8) %25, i64* dereferenceable(8) %27)
          to label %28 unwind label %86

; <label>:28:                                     ; preds = %3
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %9, align 8
  %29 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %30, i32 0, i32 0
  %32 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %31, align 8
  %33 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %34, i32 0, i32 1
  %36 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %35, align 8
  %37 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %38 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %39 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %38) #3
  %40 = invoke %"class.std::tuple.41"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple.41"* %32, %"class.std::tuple.41"* %36, %"class.std::tuple.41"* %37, %"class.std::allocator.38"* dereferenceable(1) %39)
          to label %41 unwind label %86

; <label>:41:                                     ; preds = %28
  %42 = load i32, i32* @x.335
  %43 = load i32, i32* @y.336
  %44 = sub i32 %42, -1418571372
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1418571372
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %285

; <label>:68:                                     ; preds = %41, %285
  store %"class.std::tuple.41"* %40, %"class.std::tuple.41"** %9, align 8
  %69 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  %70 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %69, i32 1
  store %"class.std::tuple.41"* %70, %"class.std::tuple.41"** %9, align 8
  %71 = load i32, i32* @x.335
  %72 = load i32, i32* @y.336
  %73 = add i32 %71, 646614664
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 646614664
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %285

; <label>:85:                                     ; preds = %68
  br label %191

; <label>:86:                                     ; preds = %28, %3
  %87 = landingpad { i8*, i32 }
          catch i8* null
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %10, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %11, align 4
  br label %90

; <label>:90:                                     ; preds = %86
  %91 = load i8*, i8** %10, align 8
  %92 = call i8* @__cxa_begin_catch(i8* %91) #3
  %93 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  %94 = icmp ne %"class.std::tuple.41"* %93, null
  br i1 %94, label %149, label %95

; <label>:95:                                     ; preds = %90
  %96 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %96, i32 0, i32 0
  %98 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %97 to %"class.std::allocator.38"*
  %99 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %100 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %12) #3
  %101 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %99, i64 %100
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.38"* dereferenceable(1) %98, %"class.std::tuple.41"* %101)
          to label %102 unwind label %145

; <label>:102:                                    ; preds = %95
  %103 = load i32, i32* @x.335
  %104 = load i32, i32* @y.336
  %105 = sub i32 %103, 2109589722
  %106 = sub i32 %105, 1
  %107 = add i32 %106, 2109589722
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %288

; <label>:117:                                    ; preds = %102, %288
  %118 = load i32, i32* @x.335
  %119 = load i32, i32* @y.336
  %120 = sub i32 %118, 175583438
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 175583438
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %288

; <label>:144:                                    ; preds = %117
  br label %155

; <label>:145:                                    ; preds = %159, %155, %149, %95
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = extractvalue { i8*, i32 } %146, 0
  store i8* %147, i8** %10, align 8
  %148 = extractvalue { i8*, i32 } %146, 1
  store i32 %148, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %160 unwind label %240

; <label>:149:                                    ; preds = %90
  %150 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %151 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  %152 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %153 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %152) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.41"* %150, %"class.std::tuple.41"* %151, %"class.std::allocator.38"* dereferenceable(1) %153)
          to label %154 unwind label %145

; <label>:154:                                    ; preds = %149
  br label %155

; <label>:155:                                    ; preds = %154, %144
  %156 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %157 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %158 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.37"* %156, %"class.std::tuple.41"* %157, i64 %158)
          to label %159 unwind label %145

; <label>:159:                                    ; preds = %155
  invoke void @__cxa_rethrow() #12
          to label %243 unwind label %145

; <label>:160:                                    ; preds = %145
  %161 = load i32, i32* @x.335
  %162 = load i32, i32* @y.336
  %163 = sub i32 %161, -1641457122
  %164 = sub i32 %163, 1
  %165 = add i32 %164, -1641457122
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %289

; <label>:175:                                    ; preds = %160, %289
  %176 = load i32, i32* @x.335
  %177 = load i32, i32* @y.336
  %178 = sub i32 %176, -1166597541
  %179 = sub i32 %178, 1
  %180 = add i32 %179, -1166597541
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %289

; <label>:190:                                    ; preds = %175
  br label %235

; <label>:191:                                    ; preds = %85
  %192 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %193, i32 0, i32 0
  %195 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %194, align 8
  %196 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %197, i32 0, i32 1
  %199 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %198, align 8
  %200 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %201 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %200) #3
  call void @_ZSt8_DestroyIPSt5tupleIJxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.41"* %195, %"class.std::tuple.41"* %199, %"class.std::allocator.38"* dereferenceable(1) %201)
  %202 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %203 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %203, i32 0, i32 0
  %205 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %204, i32 0, i32 0
  %206 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %205, align 8
  %207 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %208 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %207, i32 0, i32 0
  %209 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %208, i32 0, i32 2
  %210 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %209, align 8
  %211 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %211, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %212, i32 0, i32 0
  %214 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %213, align 8
  %215 = ptrtoint %"class.std::tuple.41"* %210 to i64
  %216 = ptrtoint %"class.std::tuple.41"* %214 to i64
  %217 = sub i64 0, %216
  %218 = add i64 %215, %217
  %219 = sub i64 %215, %216
  %220 = sdiv exact i64 %218, 16
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.37"* %202, %"class.std::tuple.41"* %206, i64 %220)
  %221 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %222 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %223, i32 0, i32 0
  store %"class.std::tuple.41"* %221, %"class.std::tuple.41"** %224, align 8
  %225 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  %226 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %227 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %227, i32 0, i32 1
  store %"class.std::tuple.41"* %225, %"class.std::tuple.41"** %228, align 8
  %229 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %8, align 8
  %230 = load i64, i64* %7, align 8
  %231 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %229, i64 %230
  %232 = bitcast %"class.std::vector.36"* %12 to %"struct.std::_Vector_base.37"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %233, i32 0, i32 2
  store %"class.std::tuple.41"* %231, %"class.std::tuple.41"** %234, align 8
  ret void

; <label>:235:                                    ; preds = %190
  %236 = load i8*, i8** %10, align 8
  %237 = load i32, i32* %11, align 4
  %238 = insertvalue { i8*, i32 } undef, i8* %236, 0
  %239 = insertvalue { i8*, i32 } %238, i32 %237, 1
  resume { i8*, i32 } %239

; <label>:240:                                    ; preds = %145
  %241 = landingpad { i8*, i32 }
          catch i8* null
  %242 = extractvalue { i8*, i32 } %241, 0
  call void @__clang_call_terminate(i8* %242) #11
  unreachable

; <label>:243:                                    ; preds = %159
  %244 = load i32, i32* @x.335
  %245 = load i32, i32* @y.336
  %246 = sub i32 0, 1
  %247 = add i32 %244, %246
  %248 = sub i32 %244, 1
  %249 = mul i32 %244, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %245, 10
  %253 = xor i1 %251, true
  %254 = xor i1 %252, true
  %255 = xor i1 false, true
  %256 = and i1 %253, false
  %257 = and i1 %251, %255
  %258 = and i1 %254, false
  %259 = and i1 %252, %255
  %260 = or i1 %256, %257
  %261 = or i1 %258, %259
  %262 = xor i1 %260, %261
  %263 = or i1 %253, %254
  %264 = xor i1 %263, true
  %265 = or i1 false, %255
  %266 = and i1 %264, %265
  %267 = or i1 %262, %266
  %268 = or i1 %251, %252
  br i1 %267, label %269, label %290

; <label>:269:                                    ; preds = %243, %290
  %270 = load i32, i32* @x.335
  %271 = load i32, i32* @y.336
  %272 = add i32 %270, 515018416
  %273 = sub i32 %272, 1
  %274 = sub i32 %273, 515018416
  %275 = sub i32 %270, 1
  %276 = mul i32 %270, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %271, 10
  %280 = and i1 %278, %279
  %281 = xor i1 %278, %279
  %282 = or i1 %280, %281
  %283 = or i1 %278, %279
  br i1 %282, label %284, label %290

; <label>:284:                                    ; preds = %269
  unreachable

; <label>:285:                                    ; preds = %68, %41
  store %"class.std::tuple.41"* %40, %"class.std::tuple.41"** %9, align 8
  %286 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  %287 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %286, i32 1
  store %"class.std::tuple.41"* %287, %"class.std::tuple.41"** %9, align 8
  br label %68

; <label>:288:                                    ; preds = %117, %102
  br label %117

; <label>:289:                                    ; preds = %175, %160
  br label %175

; <label>:290:                                    ; preds = %269, %243
  br label %269
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE9constructIS2_JRxS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.39"*, %"class.std::tuple.41"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  %6 = alloca %"class.std::tuple.41"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %5, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %5, align 8
  %10 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %6, align 8
  %11 = bitcast %"class.std::tuple.41"* %10 to i8*
  %12 = bitcast i8* %11 to %"class.std::tuple.41"*
  %13 = load i64*, i64** %7, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64*, i64** %8, align 8
  %16 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %15) #3
  call void @_ZNSt5tupleIJxxEEC2IRxS2_vEEOT_OT0_(%"class.std::tuple.41"* %12, i64* dereferenceable(8) %14, i64* dereferenceable(8) %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJxxEEC2IRxS2_vEEOT_OT0_(%"class.std::tuple.41"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::tuple.41"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  %8 = bitcast %"class.std::tuple.41"* %7 to %"struct.std::_Tuple_impl.42"*
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %11) #3
  call void @_ZNSt11_Tuple_implILm0EJxxEEC2IRxJS2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.42"* %8, i64* dereferenceable(8) %10, i64* dereferenceable(8) %12)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxxEEC2IRxJS2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.42"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %4, align 8
  %8 = bitcast %"struct.std::_Tuple_impl.42"* %7 to %"struct.std::_Tuple_impl.43"*
  %9 = load i64*, i64** %6, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  call void @_ZNSt11_Tuple_implILm1EJxEEC2IRxEEOT_(%"struct.std::_Tuple_impl.43"* %8, i64* dereferenceable(8) %10)
  %11 = bitcast %"struct.std::_Tuple_impl.42"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to %"struct.std::_Head_base.19"*
  %14 = load i64*, i64** %5, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %14) #3
  call void @_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.19"* %13, i64* dereferenceable(8) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJxEEC2IRxEEOT_(%"struct.std::_Tuple_impl.43"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.43"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.43"* %0, %"struct.std::_Tuple_impl.43"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.43"* %5 to %"struct.std::_Head_base.18"*
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %7) #3
  call void @_ZNSt10_Head_baseILm1ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.18"* %6, i64* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.19"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.345
  %6 = load i32, i32* @y.346
  %7 = sub i32 %5, -1142550080
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1142550080
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 480261686, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 480261686, label %19
    i32 -91105959, label %27
    i32 538818104, label %62
    i32 2109876864, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -91105959, i32 2109876864
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base.19"*, align 8
  %29 = alloca i64*, align 8
  store %"struct.std::_Head_base.19"* %0, %"struct.std::_Head_base.19"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %30, i32 0, i32 0
  %32 = load i64*, i64** %29, align 8
  %33 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %32) #3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %31, align 8
  %35 = load i32, i32* @x.345
  %36 = load i32, i32* @y.346
  %37 = add i32 %35, -879152342
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -879152342
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 538818104, i32 2109876864
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Head_base.19"*, align 8
  %65 = alloca i64*, align 8
  store %"struct.std::_Head_base.19"* %0, %"struct.std::_Head_base.19"** %64, align 8
  store i64* %1, i64** %65, align 8
  %66 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %64, align 8
  %67 = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %66, i32 0, i32 0
  %68 = load i64*, i64** %65, align 8
  %69 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %68) #3
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %67, align 8
  store i32 -91105959, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.18"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.18"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.18"* %0, %"struct.std::_Head_base.18"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.18"*, %"struct.std::_Head_base.18"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.18", %"struct.std::_Head_base.18"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.36"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.36"*
  %10 = alloca %"class.std::vector.36"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.36"*, %"class.std::vector.36"** %10, align 8
  store %"class.std::vector.36"* %15, %"class.std::vector.36"** %9
  %16 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %17 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8max_sizeEv(%"class.std::vector.36"* %16) #3
  %18 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %19 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %18) #3
  %20 = sub i64 0, %19
  %21 = add i64 %17, %20
  %22 = sub i64 %17, %19
  store i64 %21, i64* %8
  %23 = load i64, i64* %11, align 8
  store i64 %23, i64* %7
  %24 = alloca i32
  store i32 1065915090, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %263
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1065915090, label %29
    i32 146063794, label %34
    i32 -295369073, label %36
    i32 1170761087, label %64
    i32 -403672546, label %94
    i32 286288210, label %97
    i32 -798545627, label %112
    i32 -1034582408, label %144
    i32 -1469484900, label %147
    i32 -1201233506, label %150
    i32 -1785690927, label %177
    i32 1711669370, label %205
    i32 1263111783, label %207
    i32 1480587296, label %209
    i32 -796536423, label %256
    i32 -640453529, label %261
  ]

; <label>:28:                                     ; preds = %26
  br label %263

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %8
  %31 = load volatile i64, i64* %7
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 146063794, i32 -295369073
  store i32 %33, i32* %24
  br label %263

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.349
  %38 = load i32, i32* @y.350
  %39 = add i32 %37, -55527948
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -55527948
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1170761087, i32 1480587296
  store i32 %63, i32* %24
  br label %263

; <label>:64:                                     ; preds = %26
  %65 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %66 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %65) #3
  %67 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %68 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %67) #3
  store i64 %68, i64* %14, align 8
  %69 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %66, -4417172122150373650
  %72 = add i64 %71, %70
  %73 = sub i64 %72, -4417172122150373650
  %74 = add i64 %66, %70
  store i64 %73, i64* %13, align 8
  %75 = load i64, i64* %13, align 8
  %76 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %77 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %76) #3
  %78 = icmp ult i64 %75, %77
  store i1 %78, i1* %6
  %79 = load i32, i32* @x.349
  %80 = load i32, i32* @y.350
  %81 = sub i32 %79, -1681919189
  %82 = sub i32 %81, 1
  %83 = add i32 %82, -1681919189
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 -403672546, i32 1480587296
  store i32 %93, i32* %24
  br label %263

; <label>:94:                                     ; preds = %26
  %95 = load volatile i1, i1* %6
  %96 = select i1 %95, i32 -1469484900, i32 286288210
  store i32 %96, i32* %24
  br label %263

; <label>:97:                                     ; preds = %26
  %98 = load i32, i32* @x.349
  %99 = load i32, i32* @y.350
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -798545627, i32 -796536423
  store i32 %111, i32* %24
  br label %263

; <label>:112:                                    ; preds = %26
  %113 = load i64, i64* %13, align 8
  %114 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %115 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8max_sizeEv(%"class.std::vector.36"* %114) #3
  %116 = icmp ugt i64 %113, %115
  store i1 %116, i1* %5
  %117 = load i32, i32* @x.349
  %118 = load i32, i32* @y.350
  %119 = add i32 %117, 231216468
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, 231216468
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  %143 = select i1 %141, i32 -1034582408, i32 -796536423
  store i32 %143, i32* %24
  br label %263

; <label>:144:                                    ; preds = %26
  %145 = load volatile i1, i1* %5
  %146 = select i1 %145, i32 -1469484900, i32 -1201233506
  store i32 %146, i32* %24
  br label %263

; <label>:147:                                    ; preds = %26
  %148 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %149 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8max_sizeEv(%"class.std::vector.36"* %148) #3
  store i32 1263111783, i32* %24
  store i64 %149, i64* %25
  br label %263

; <label>:150:                                    ; preds = %26
  %151 = load i32, i32* @x.349
  %152 = load i32, i32* @y.350
  %153 = sub i32 0, 1
  %154 = add i32 %151, %153
  %155 = sub i32 %151, 1
  %156 = mul i32 %151, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %152, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 false, true
  %163 = and i1 %160, false
  %164 = and i1 %158, %162
  %165 = and i1 %161, false
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 false, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  %176 = select i1 %174, i32 -1785690927, i32 -640453529
  store i32 %176, i32* %24
  br label %263

; <label>:177:                                    ; preds = %26
  %178 = load i64, i64* %13, align 8
  store i64 %178, i64* %4
  %179 = load i32, i32* @x.349
  %180 = load i32, i32* @y.350
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 true, true
  %191 = and i1 %188, true
  %192 = and i1 %186, %190
  %193 = and i1 %189, true
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 true, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  %204 = select i1 %202, i32 1711669370, i32 -640453529
  store i32 %204, i32* %24
  br label %263

; <label>:205:                                    ; preds = %26
  store i32 1263111783, i32* %24
  %206 = load volatile i64, i64* %4
  store i64 %206, i64* %25
  br label %263

; <label>:207:                                    ; preds = %26
  %208 = load i64, i64* %25
  ret i64 %208

; <label>:209:                                    ; preds = %26
  %210 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %211 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %210) #3
  %212 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %213 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %212) #3
  store i64 %213, i64* %14, align 8
  %214 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 0, %211
  %217 = add i64 0, %216
  %218 = sub i64 0, %211
  %219 = sub i64 %217, 5614531742810600042
  %220 = add i64 %219, %215
  %221 = add i64 %220, 5614531742810600042
  %222 = add i64 %217, %215
  %223 = sub i64 %211, -440286394875860022
  %224 = sub i64 %223, %215
  %225 = add i64 %224, -440286394875860022
  %226 = sub i64 %211, %215
  %227 = mul i64 %225, %215
  %228 = add i64 0, -2696066093696796211
  %229 = sub i64 %228, %211
  %230 = sub i64 %229, -2696066093696796211
  %231 = sub i64 0, %211
  %232 = sub i64 %230, 5402845956105743856
  %233 = add i64 %232, %215
  %234 = add i64 %233, 5402845956105743856
  %235 = add i64 %230, %215
  %236 = sub i64 0, 5706308032712041508
  %237 = sub i64 %236, %211
  %238 = add i64 %237, 5706308032712041508
  %239 = sub i64 0, %211
  %240 = add i64 %238, 5373219731625770265
  %241 = add i64 %240, %215
  %242 = sub i64 %241, 5373219731625770265
  %243 = add i64 %238, %215
  %244 = add i64 %211, 1096762747259119163
  %245 = sub i64 %244, %215
  %246 = sub i64 %245, 1096762747259119163
  %247 = sub i64 %211, %215
  %248 = mul i64 %246, %215
  %249 = sub i64 0, %215
  %250 = sub i64 %211, %249
  %251 = add i64 %211, %215
  store i64 %250, i64* %13, align 8
  %252 = load i64, i64* %13, align 8
  %253 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %254 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"* %253) #3
  %255 = icmp ult i64 %252, %254
  store i32 1170761087, i32* %24
  br label %263

; <label>:256:                                    ; preds = %26
  %257 = load i64, i64* %13, align 8
  %258 = load volatile %"class.std::vector.36"*, %"class.std::vector.36"** %9
  %259 = call i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8max_sizeEv(%"class.std::vector.36"* %258) #3
  %260 = icmp ugt i64 %257, %259
  store i32 -798545627, i32* %24
  br label %263

; <label>:261:                                    ; preds = %26
  %262 = load i64, i64* %13, align 8
  store i32 -1785690927, i32* %24
  br label %263

; <label>:263:                                    ; preds = %261, %256, %209, %205, %177, %150, %147, %144, %112, %97, %94, %64, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.37"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.41"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.37"*
  %6 = alloca %"struct.std::_Vector_base.37"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %6, align 8
  store %"struct.std::_Vector_base.37"* %8, %"struct.std::_Vector_base.37"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1672737289, i32* %10
  %11 = alloca %"class.std::tuple.41"*
  br label %12

; <label>:12:                                     ; preds = %2, %67
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1672737289, label %15
    i32 -1945148623, label %19
    i32 -227258761, label %35
    i32 83929520, label %56
    i32 542035187, label %58
    i32 -716332662, label %59
    i32 -1354998372, label %61
  ]

; <label>:14:                                     ; preds = %12
  br label %67

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -1945148623, i32 542035187
  store i32 %18, i32* %10
  br label %67

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.351
  %21 = load i32, i32* @y.352
  %22 = sub i32 %20, -1714454964
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1714454964
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -227258761, i32 -1354998372
  store i32 %34, i32* %10
  br label %67

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %37 to %"class.std::allocator.38"*
  %39 = load i64, i64* %7, align 8
  %40 = call %"class.std::tuple.41"* @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8allocateERS2_m(%"class.std::allocator.38"* dereferenceable(1) %38, i64 %39)
  store %"class.std::tuple.41"* %40, %"class.std::tuple.41"** %3
  %41 = load i32, i32* @x.351
  %42 = load i32, i32* @y.352
  %43 = add i32 %41, -598125423
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -598125423
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 83929520, i32 -1354998372
  store i32 %55, i32* %10
  br label %67

; <label>:56:                                     ; preds = %12
  store i32 -716332662, i32* %10
  %57 = load volatile %"class.std::tuple.41"*, %"class.std::tuple.41"** %3
  store %"class.std::tuple.41"* %57, %"class.std::tuple.41"** %11
  br label %67

; <label>:58:                                     ; preds = %12
  store i32 -716332662, i32* %10
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %11
  br label %67

; <label>:59:                                     ; preds = %12
  %60 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %11
  ret %"class.std::tuple.41"* %60

; <label>:61:                                     ; preds = %12
  %62 = load volatile %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %5
  %63 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %63 to %"class.std::allocator.38"*
  %65 = load i64, i64* %7, align 8
  %66 = call %"class.std::tuple.41"* @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8allocateERS2_m(%"class.std::allocator.38"* dereferenceable(1) %64, i64 %65)
  store i32 -227258761, i32* %10
  br label %67

; <label>:67:                                     ; preds = %61, %58, %56, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE4sizeEv(%"class.std::vector.36"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.36"*, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %2, align 8
  %3 = load %"class.std::vector.36"*, %"class.std::vector.36"** %2, align 8
  %4 = bitcast %"class.std::vector.36"* %3 to %"struct.std::_Vector_base.37"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %6, align 8
  %8 = bitcast %"class.std::vector.36"* %3 to %"struct.std::_Vector_base.37"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %10, align 8
  %12 = ptrtoint %"class.std::tuple.41"* %7 to i64
  %13 = ptrtoint %"class.std::tuple.41"* %11 to i64
  %14 = add i64 %12, -1218908515390195454
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -1218908515390195454
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::allocator.38"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::tuple.41"*, align 8
  %6 = alloca %"class.std::tuple.41"*, align 8
  %7 = alloca %"class.std::tuple.41"*, align 8
  %8 = alloca %"class.std::allocator.38"*, align 8
  %9 = alloca %"class.std::move_iterator.52", align 8
  %10 = alloca %"class.std::move_iterator.52", align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %5, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %6, align 8
  store %"class.std::tuple.41"* %2, %"class.std::tuple.41"** %7, align 8
  store %"class.std::allocator.38"* %3, %"class.std::allocator.38"** %8, align 8
  %11 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %5, align 8
  %12 = call %"class.std::tuple.41"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.41"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %9, i32 0, i32 0
  store %"class.std::tuple.41"* %12, %"class.std::tuple.41"** %13, align 8
  %14 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %6, align 8
  %15 = call %"class.std::tuple.41"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.41"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %10, i32 0, i32 0
  store %"class.std::tuple.41"* %15, %"class.std::tuple.41"** %16, align 8
  %17 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %7, align 8
  %18 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %9, i32 0, i32 0
  %20 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %10, i32 0, i32 0
  %22 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %21, align 8
  %23 = call %"class.std::tuple.41"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.41"* %20, %"class.std::tuple.41"* %22, %"class.std::tuple.41"* %17, %"class.std::allocator.38"* dereferenceable(1) %18)
  ret %"class.std::tuple.41"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.38"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.37"*, align 8
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %2, align 8
  %3 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.38"*
  ret %"class.std::allocator.38"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.38"* dereferenceable(1), %"class.std::tuple.41"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.359
  %6 = load i32, i32* @y.360
  %7 = add i32 %5, 1520639424
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1520639424
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1305060470, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1305060470, label %19
    i32 351613892, label %39
    i32 539233050, label %71
    i32 1844300722, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 351613892, i32 1844300722
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.38"*, align 8
  %41 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %40, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %41, align 8
  %42 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %40, align 8
  %43 = bitcast %"class.std::allocator.38"* %42 to %"class.__gnu_cxx::new_allocator.39"*
  %44 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.39"* %43, %"class.std::tuple.41"* %44)
  %45 = load i32, i32* @x.359
  %46 = load i32, i32* @y.360
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 539233050, i32 1844300722
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator.38"*, align 8
  %74 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %73, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %74, align 8
  %75 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %73, align 8
  %76 = bitcast %"class.std::allocator.38"* %75 to %"class.__gnu_cxx::new_allocator.39"*
  %77 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %74, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.39"* %76, %"class.std::tuple.41"* %77)
  store i32 351613892, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::allocator.38"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::tuple.41"*, align 8
  %5 = alloca %"class.std::tuple.41"*, align 8
  %6 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %4, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %5, align 8
  store %"class.std::allocator.38"* %2, %"class.std::allocator.38"** %6, align 8
  %7 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  %8 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %5, align 8
  call void @_ZSt8_DestroyIPSt5tupleIJxxEEEvT_S3_(%"class.std::tuple.41"* %7, %"class.std::tuple.41"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.37"*, %"class.std::tuple.41"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.37"*
  %6 = alloca i64*
  %7 = alloca %"class.std::tuple.41"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.363
  %11 = load i32, i32* @y.364
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1639398475, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %150
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1639398475, label %23
    i32 1839317294, label %43
    i32 -633601082, label %80
    i32 877392672, label %83
    i32 1308627135, label %110
    i32 -597093079, label %133
    i32 622860016, label %134
    i32 -1181406254, label %135
    i32 1678646902, label %142
  ]

; <label>:22:                                     ; preds = %20
  br label %150

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1839317294, i32 -1181406254
  store i32 %42, i32* %19
  br label %150

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.37"*, align 8
  %45 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"** %45, %"class.std::tuple.41"*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %44, align 8
  %47 = load volatile %"class.std::tuple.41"**, %"class.std::tuple.41"*** %7
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %44, align 8
  store %"struct.std::_Vector_base.37"* %49, %"struct.std::_Vector_base.37"** %5
  %50 = load volatile %"class.std::tuple.41"**, %"class.std::tuple.41"*** %7
  %51 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %50, align 8
  %52 = icmp ne %"class.std::tuple.41"* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.363
  %54 = load i32, i32* @y.364
  %55 = add i32 %53, 607819764
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 607819764
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -633601082, i32 -1181406254
  store i32 %79, i32* %19
  br label %150

; <label>:80:                                     ; preds = %20
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 877392672, i32 622860016
  store i32 %82, i32* %19
  br label %150

; <label>:83:                                     ; preds = %20
  %84 = load i32, i32* @x.363
  %85 = load i32, i32* @y.364
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 1308627135, i32 1678646902
  store i32 %109, i32* %19
  br label %150

; <label>:110:                                    ; preds = %20
  %111 = load volatile %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %5
  %112 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %111, i32 0, i32 0
  %113 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %112 to %"class.std::allocator.38"*
  %114 = load volatile %"class.std::tuple.41"**, %"class.std::tuple.41"*** %7
  %115 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %114, align 8
  %116 = load volatile i64*, i64** %6
  %117 = load i64, i64* %116, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.38"* dereferenceable(1) %113, %"class.std::tuple.41"* %115, i64 %117)
  %118 = load i32, i32* @x.363
  %119 = load i32, i32* @y.364
  %120 = add i32 %118, -2117878409
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, -2117878409
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 -597093079, i32 1678646902
  store i32 %132, i32* %19
  br label %150

; <label>:133:                                    ; preds = %20
  store i32 622860016, i32* %19
  br label %150

; <label>:134:                                    ; preds = %20
  ret void

; <label>:135:                                    ; preds = %20
  %136 = alloca %"struct.std::_Vector_base.37"*, align 8
  %137 = alloca %"class.std::tuple.41"*, align 8
  %138 = alloca i64, align 8
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %136, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %137, align 8
  store i64 %2, i64* %138, align 8
  %139 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %136, align 8
  %140 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %137, align 8
  %141 = icmp ne %"class.std::tuple.41"* %140, null
  store i32 1839317294, i32* %19
  br label %150

; <label>:142:                                    ; preds = %20
  %143 = load volatile %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %5
  %144 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %143, i32 0, i32 0
  %145 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %144 to %"class.std::allocator.38"*
  %146 = load volatile %"class.std::tuple.41"**, %"class.std::tuple.41"*** %7
  %147 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %146, align 8
  %148 = load volatile i64*, i64** %6
  %149 = load i64, i64* %148, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.38"* dereferenceable(1) %145, %"class.std::tuple.41"* %147, i64 %149)
  store i32 1308627135, i32* %19
  br label %150

; <label>:150:                                    ; preds = %142, %135, %133, %110, %83, %80, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8max_sizeEv(%"class.std::vector.36"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.365
  %6 = load i32, i32* @y.366
  %7 = add i32 %5, -1443523972
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1443523972
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1198091198, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1198091198, label %19
    i32 2015789605, label %39
    i32 729814032, label %72
    i32 1558080091, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2015789605, i32 1558080091
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.36"*, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %40, align 8
  %41 = load %"class.std::vector.36"*, %"class.std::vector.36"** %40, align 8
  %42 = bitcast %"class.std::vector.36"* %41 to %"struct.std::_Vector_base.37"*
  %43 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNKSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8max_sizeERKS2_(%"class.std::allocator.38"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.365
  %46 = load i32, i32* @y.366
  %47 = sub i32 %45, -137988622
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -137988622
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 729814032, i32 1558080091
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64, i64* %2
  ret i64 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::vector.36"*, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %75, align 8
  %76 = load %"class.std::vector.36"*, %"class.std::vector.36"** %75, align 8
  %77 = bitcast %"class.std::vector.36"* %76 to %"struct.std::_Vector_base.37"*
  %78 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNKSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %77) #3
  %79 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8max_sizeERKS2_(%"class.std::allocator.38"* dereferenceable(1) %78) #3
  store i32 2015789605, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8max_sizeERKS2_(%"class.std::allocator.38"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.367
  %6 = load i32, i32* @y.368
  %7 = sub i32 %5, 1784342966
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1784342966
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -585112949, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -585112949, label %19
    i32 -1341319778, label %39
    i32 -1140909083, label %59
    i32 108925212, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1341319778, i32 108925212
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %40, align 8
  %41 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %40, align 8
  %42 = bitcast %"class.std::allocator.38"* %41 to %"class.__gnu_cxx::new_allocator.39"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.39"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.367
  %45 = load i32, i32* @y.368
  %46 = sub i32 %44, -2010346515
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -2010346515
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1140909083, i32 108925212
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %62, align 8
  %63 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %62, align 8
  %64 = bitcast %"class.std::allocator.38"* %63 to %"class.__gnu_cxx::new_allocator.39"*
  %65 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.39"* %64) #3
  store i32 -1341319778, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.38"* @_ZNKSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.37"*, align 8
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %2, align 8
  %3 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.38"*
  ret %"class.std::allocator.38"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.39"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE8allocateERS2_m(%"class.std::allocator.38"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.38"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %3, align 8
  %6 = bitcast %"class.std::allocator.38"* %5 to %"class.__gnu_cxx::new_allocator.39"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::tuple.41"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.39"* %6, i64 %7, i8* null)
  ret %"class.std::tuple.41"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.39"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.39"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -2086900118, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -2086900118, label %16
    i32 -427388213, label %21
    i32 248302194, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -427388213, i32 248302194
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 16
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::tuple.41"*
  ret %"class.std::tuple.41"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::allocator.38"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::tuple.41"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.377
  %9 = load i32, i32* @y.378
  %10 = sub i32 %8, -1952521773
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1952521773
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1833812351, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1833812351, label %22
    i32 -1109117741, label %42
    i32 1004103669, label %76
    i32 -1966341579, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1109117741, i32 -1966341579
  store i32 %41, i32* %18
  br label %97

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::move_iterator.52", align 8
  %44 = alloca %"class.std::move_iterator.52", align 8
  %45 = alloca %"class.std::tuple.41"*, align 8
  %46 = alloca %"class.std::allocator.38"*, align 8
  %47 = alloca %"class.std::move_iterator.52", align 8
  %48 = alloca %"class.std::move_iterator.52", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %43, i32 0, i32 0
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %49, align 8
  %50 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %44, i32 0, i32 0
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %50, align 8
  store %"class.std::tuple.41"* %2, %"class.std::tuple.41"** %45, align 8
  store %"class.std::allocator.38"* %3, %"class.std::allocator.38"** %46, align 8
  %51 = bitcast %"class.std::move_iterator.52"* %47 to i8*
  %52 = bitcast %"class.std::move_iterator.52"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.std::move_iterator.52"* %48 to i8*
  %54 = bitcast %"class.std::move_iterator.52"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %47, i32 0, i32 0
  %57 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %48, i32 0, i32 0
  %59 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %58, align 8
  %60 = call %"class.std::tuple.41"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxEEES3_ET0_T_S6_S5_(%"class.std::tuple.41"* %57, %"class.std::tuple.41"* %59, %"class.std::tuple.41"* %55)
  store %"class.std::tuple.41"* %60, %"class.std::tuple.41"** %5
  %61 = load i32, i32* @x.377
  %62 = load i32, i32* @y.378
  %63 = add i32 %61, -1153218305
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -1153218305
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 1004103669, i32 -1966341579
  store i32 %75, i32* %18
  br label %97

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"class.std::tuple.41"*, %"class.std::tuple.41"** %5
  ret %"class.std::tuple.41"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"class.std::move_iterator.52", align 8
  %80 = alloca %"class.std::move_iterator.52", align 8
  %81 = alloca %"class.std::tuple.41"*, align 8
  %82 = alloca %"class.std::allocator.38"*, align 8
  %83 = alloca %"class.std::move_iterator.52", align 8
  %84 = alloca %"class.std::move_iterator.52", align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %79, i32 0, i32 0
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %85, align 8
  %86 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %80, i32 0, i32 0
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %86, align 8
  store %"class.std::tuple.41"* %2, %"class.std::tuple.41"** %81, align 8
  store %"class.std::allocator.38"* %3, %"class.std::allocator.38"** %82, align 8
  %87 = bitcast %"class.std::move_iterator.52"* %83 to i8*
  %88 = bitcast %"class.std::move_iterator.52"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = bitcast %"class.std::move_iterator.52"* %84 to i8*
  %90 = bitcast %"class.std::move_iterator.52"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  %91 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %81, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %83, i32 0, i32 0
  %93 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %92, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %84, i32 0, i32 0
  %95 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %94, align 8
  %96 = call %"class.std::tuple.41"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxEEES3_ET0_T_S6_S5_(%"class.std::tuple.41"* %93, %"class.std::tuple.41"* %95, %"class.std::tuple.41"* %91)
  store i32 -1109117741, i32* %18
  br label %97

; <label>:97:                                     ; preds = %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.41"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.52", align 8
  %3 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %3, align 8
  %4 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt5tupleIJxxEEEC2ES2_(%"class.std::move_iterator.52"* %2, %"class.std::tuple.41"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %2, i32 0, i32 0
  %6 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %5, align 8
  ret %"class.std::tuple.41"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxEEES3_ET0_T_S6_S5_(%"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::tuple.41"*) #0 comdat {
  %4 = alloca %"class.std::tuple.41"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.381
  %8 = load i32, i32* @y.382
  %9 = sub i32 %7, 1212138478
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1212138478
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1436280663, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1436280663, label %21
    i32 -683669056, label %29
    i32 1611276806, label %74
    i32 -1991430489, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -683669056, i32 -1991430489
  store i32 %28, i32* %17
  br label %95

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.52", align 8
  %31 = alloca %"class.std::move_iterator.52", align 8
  %32 = alloca %"class.std::tuple.41"*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator.52", align 8
  %35 = alloca %"class.std::move_iterator.52", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %30, i32 0, i32 0
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %31, i32 0, i32 0
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %37, align 8
  store %"class.std::tuple.41"* %2, %"class.std::tuple.41"** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator.52"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator.52"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator.52"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator.52"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %34, i32 0, i32 0
  %44 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %35, i32 0, i32 0
  %46 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %45, align 8
  %47 = call %"class.std::tuple.41"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxEEES5_EET0_T_S8_S7_(%"class.std::tuple.41"* %44, %"class.std::tuple.41"* %46, %"class.std::tuple.41"* %42)
  store %"class.std::tuple.41"* %47, %"class.std::tuple.41"** %4
  %48 = load i32, i32* @x.381
  %49 = load i32, i32* @y.382
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1611276806, i32 -1991430489
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"class.std::tuple.41"*, %"class.std::tuple.41"** %4
  ret %"class.std::tuple.41"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.52", align 8
  %78 = alloca %"class.std::move_iterator.52", align 8
  %79 = alloca %"class.std::tuple.41"*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.std::move_iterator.52", align 8
  %82 = alloca %"class.std::move_iterator.52", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %77, i32 0, i32 0
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %78, i32 0, i32 0
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %84, align 8
  store %"class.std::tuple.41"* %2, %"class.std::tuple.41"** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.std::move_iterator.52"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.52"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.52"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.52"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %81, i32 0, i32 0
  %91 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %82, i32 0, i32 0
  %93 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %92, align 8
  %94 = call %"class.std::tuple.41"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxEEES5_EET0_T_S8_S7_(%"class.std::tuple.41"* %91, %"class.std::tuple.41"* %93, %"class.std::tuple.41"* %89)
  store i32 -683669056, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxEEES5_EET0_T_S8_S7_(%"class.std::tuple.41"*, %"class.std::tuple.41"*, %"class.std::tuple.41"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.52", align 8
  %5 = alloca %"class.std::move_iterator.52", align 8
  %6 = alloca %"class.std::tuple.41"*, align 8
  %7 = alloca %"class.std::tuple.41"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %4, i32 0, i32 0
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %5, i32 0, i32 0
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %11, align 8
  store %"class.std::tuple.41"* %2, %"class.std::tuple.41"** %6, align 8
  %12 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %6, align 8
  store %"class.std::tuple.41"* %12, %"class.std::tuple.41"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %137, %3
  %14 = load i32, i32* @x.383
  %15 = load i32, i32* @y.384
  %16 = add i32 %14, -1081216388
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1081216388
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %237

; <label>:40:                                     ; preds = %13, %237
  %41 = load i32, i32* @x.383
  %42 = load i32, i32* @y.384
  %43 = add i32 %41, 66189431
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 66189431
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %237

; <label>:55:                                     ; preds = %40
  %56 = invoke zeroext i1 @_ZStneIPSt5tupleIJxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.52"* dereferenceable(8) %4, %"class.std::move_iterator.52"* dereferenceable(8) %5)
          to label %57 unwind label %140

; <label>:57:                                     ; preds = %55
  br i1 %56, label %58, label %150

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.383
  %60 = load i32, i32* @y.384
  %61 = sub i32 %59, 1390623510
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 1390623510
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %238

; <label>:85:                                     ; preds = %58, %238
  %86 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %7, align 8
  %87 = call %"class.std::tuple.41"* @_ZSt11__addressofISt5tupleIJxxEEEPT_RS2_(%"class.std::tuple.41"* dereferenceable(16) %86) #3
  %88 = load i32, i32* @x.383
  %89 = load i32, i32* @y.384
  %90 = sub i32 %88, 703168104
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 703168104
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %238

; <label>:102:                                    ; preds = %85
  %103 = invoke dereferenceable(16) %"class.std::tuple.41"* @_ZNKSt13move_iteratorIPSt5tupleIJxxEEEdeEv(%"class.std::move_iterator.52"* %4)
          to label %104 unwind label %140

; <label>:104:                                    ; preds = %102
  invoke void @_ZSt10_ConstructISt5tupleIJxxEEJS1_EEvPT_DpOT0_(%"class.std::tuple.41"* %87, %"class.std::tuple.41"* dereferenceable(16) %103)
          to label %105 unwind label %140

; <label>:105:                                    ; preds = %104
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.383
  %108 = load i32, i32* @y.384
  %109 = add i32 %107, 1207166176
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 1207166176
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %241

; <label>:121:                                    ; preds = %106, %241
  %122 = load i32, i32* @x.383
  %123 = load i32, i32* @y.384
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %241

; <label>:135:                                    ; preds = %121
  %136 = invoke dereferenceable(8) %"class.std::move_iterator.52"* @_ZNSt13move_iteratorIPSt5tupleIJxxEEEppEv(%"class.std::move_iterator.52"* %4)
          to label %137 unwind label %140

; <label>:137:                                    ; preds = %135
  %138 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %7, align 8
  %139 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %138, i32 1
  store %"class.std::tuple.41"* %139, %"class.std::tuple.41"** %7, align 8
  br label %13

; <label>:140:                                    ; preds = %135, %104, %102, %55
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %8, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %9, align 4
  br label %144

; <label>:144:                                    ; preds = %140
  %145 = load i8*, i8** %8, align 8
  %146 = call i8* @__cxa_begin_catch(i8* %145) #3
  %147 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %6, align 8
  %148 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxEEEvT_S3_(%"class.std::tuple.41"* %147, %"class.std::tuple.41"* %148)
          to label %149 unwind label %152

; <label>:149:                                    ; preds = %144
  invoke void @__cxa_rethrow() #12
          to label %236 unwind label %152

; <label>:150:                                    ; preds = %57
  %151 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %7, align 8
  ret %"class.std::tuple.41"* %151

; <label>:152:                                    ; preds = %149, %144
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %8, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %156 unwind label %205

; <label>:156:                                    ; preds = %152
  %157 = load i32, i32* @x.383
  %158 = load i32, i32* @y.384
  %159 = add i32 %157, -1605235939
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -1605235939
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 true, true
  %170 = and i1 %167, true
  %171 = and i1 %165, %169
  %172 = and i1 %168, true
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 true, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  br i1 %181, label %183, label %242

; <label>:183:                                    ; preds = %156, %242
  %184 = load i32, i32* @x.383
  %185 = load i32, i32* @y.384
  %186 = add i32 %184, -1014264921
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, -1014264921
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %242

; <label>:198:                                    ; preds = %183
  br label %200
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:200:                                    ; preds = %198
  %201 = load i8*, i8** %8, align 8
  %202 = load i32, i32* %9, align 4
  %203 = insertvalue { i8*, i32 } undef, i8* %201, 0
  %204 = insertvalue { i8*, i32 } %203, i32 %202, 1
  resume { i8*, i32 } %204

; <label>:205:                                    ; preds = %152
  %206 = load i32, i32* @x.383
  %207 = load i32, i32* @y.384
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %243

; <label>:219:                                    ; preds = %205, %243
  %220 = landingpad { i8*, i32 }
          catch i8* null
  %221 = extractvalue { i8*, i32 } %220, 0
  call void @__clang_call_terminate(i8* %221) #11
  %222 = load i32, i32* @x.383
  %223 = load i32, i32* @y.384
  %224 = sub i32 0, 1
  %225 = add i32 %222, %224
  %226 = sub i32 %222, 1
  %227 = mul i32 %222, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %223, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  br i1 %233, label %235, label %243

; <label>:235:                                    ; preds = %219
  unreachable

; <label>:236:                                    ; preds = %149
  unreachable

; <label>:237:                                    ; preds = %40, %13
  br label %40

; <label>:238:                                    ; preds = %85, %58
  %239 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %7, align 8
  %240 = call %"class.std::tuple.41"* @_ZSt11__addressofISt5tupleIJxxEEEPT_RS2_(%"class.std::tuple.41"* dereferenceable(16) %239) #3
  br label %85

; <label>:241:                                    ; preds = %121, %106
  br label %121

; <label>:242:                                    ; preds = %183, %156
  br label %183

; <label>:243:                                    ; preds = %219, %205
  %244 = landingpad { i8*, i32 }
          catch i8* null
  %245 = extractvalue { i8*, i32 } %244, 0
  call void @__clang_call_terminate(i8* %245) #11
  br label %219
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt5tupleIJxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.52"* dereferenceable(8), %"class.std::move_iterator.52"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.52"*, align 8
  %4 = alloca %"class.std::move_iterator.52"*, align 8
  store %"class.std::move_iterator.52"* %0, %"class.std::move_iterator.52"** %3, align 8
  store %"class.std::move_iterator.52"* %1, %"class.std::move_iterator.52"** %4, align 8
  %5 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %3, align 8
  %6 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt5tupleIJxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.52"* dereferenceable(8) %5, %"class.std::move_iterator.52"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt5tupleIJxxEEJS1_EEvPT_DpOT0_(%"class.std::tuple.41"*, %"class.std::tuple.41"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"class.std::tuple.41"*, align 8
  %4 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %3, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %4, align 8
  %5 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %3, align 8
  %6 = bitcast %"class.std::tuple.41"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::tuple.41"*
  %8 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  %9 = call dereferenceable(16) %"class.std::tuple.41"* @_ZSt7forwardISt5tupleIJxxEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.41"* dereferenceable(16) %8) #3
  call void @_ZNSt5tupleIJxxEEC2EOS0_(%"class.std::tuple.41"* %7, %"class.std::tuple.41"* dereferenceable(16) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZSt11__addressofISt5tupleIJxxEEEPT_RS2_(%"class.std::tuple.41"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"class.std::tuple.41"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.389
  %6 = load i32, i32* @y.390
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1828972309, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1828972309, label %18
    i32 1404113837, label %38
    i32 -1938395489, label %58
    i32 1007205424, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1404113837, i32 1007205424
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %39, align 8
  %40 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %39, align 8
  %41 = bitcast %"class.std::tuple.41"* %40 to i8*
  %42 = bitcast i8* %41 to %"class.std::tuple.41"*
  store %"class.std::tuple.41"* %42, %"class.std::tuple.41"** %2
  %43 = load i32, i32* @x.389
  %44 = load i32, i32* @y.390
  %45 = sub i32 %43, 1144556313
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1144556313
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1938395489, i32 1007205424
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::tuple.41"*, %"class.std::tuple.41"** %2
  ret %"class.std::tuple.41"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %61, align 8
  %62 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %61, align 8
  %63 = bitcast %"class.std::tuple.41"* %62 to i8*
  %64 = bitcast i8* %63 to %"class.std::tuple.41"*
  store i32 1404113837, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.41"* @_ZNKSt13move_iteratorIPSt5tupleIJxxEEEdeEv(%"class.std::move_iterator.52"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.52"*, align 8
  store %"class.std::move_iterator.52"* %0, %"class.std::move_iterator.52"** %2, align 8
  %3 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  ret %"class.std::tuple.41"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.52"* @_ZNSt13move_iteratorIPSt5tupleIJxxEEEppEv(%"class.std::move_iterator.52"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.52"*, align 8
  store %"class.std::move_iterator.52"* %0, %"class.std::move_iterator.52"** %2, align 8
  %3 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  %6 = getelementptr inbounds %"class.std::tuple.41", %"class.std::tuple.41"* %5, i32 1
  store %"class.std::tuple.41"* %6, %"class.std::tuple.41"** %4, align 8
  ret %"class.std::move_iterator.52"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxxEEEvT_S3_(%"class.std::tuple.41"*, %"class.std::tuple.41"*) #0 comdat {
  %3 = alloca %"class.std::tuple.41"*, align 8
  %4 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %3, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %4, align 8
  %5 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %3, align 8
  %6 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxEEEEvT_S5_(%"class.std::tuple.41"* %5, %"class.std::tuple.41"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt5tupleIJxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.52"* dereferenceable(8), %"class.std::move_iterator.52"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.52"*, align 8
  %4 = alloca %"class.std::move_iterator.52"*, align 8
  store %"class.std::move_iterator.52"* %0, %"class.std::move_iterator.52"** %3, align 8
  store %"class.std::move_iterator.52"* %1, %"class.std::move_iterator.52"** %4, align 8
  %5 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %3, align 8
  %6 = call %"class.std::tuple.41"* @_ZNKSt13move_iteratorIPSt5tupleIJxxEEE4baseEv(%"class.std::move_iterator.52"* %5)
  %7 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %4, align 8
  %8 = call %"class.std::tuple.41"* @_ZNKSt13move_iteratorIPSt5tupleIJxxEEE4baseEv(%"class.std::move_iterator.52"* %7)
  %9 = icmp eq %"class.std::tuple.41"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZNKSt13move_iteratorIPSt5tupleIJxxEEE4baseEv(%"class.std::move_iterator.52"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.52"*, align 8
  store %"class.std::move_iterator.52"* %0, %"class.std::move_iterator.52"** %2, align 8
  %3 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  ret %"class.std::tuple.41"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.41"* @_ZSt7forwardISt5tupleIJxxEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.41"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %2, align 8
  %3 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %2, align 8
  ret %"class.std::tuple.41"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJxxEEC2EOS0_(%"class.std::tuple.41"*, %"class.std::tuple.41"* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.41"*, align 8
  %4 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %3, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %4, align 8
  %5 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %3, align 8
  %6 = bitcast %"class.std::tuple.41"* %5 to %"struct.std::_Tuple_impl.42"*
  %7 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  %8 = bitcast %"class.std::tuple.41"* %7 to %"struct.std::_Tuple_impl.42"*
  call void @_ZNSt11_Tuple_implILm0EJxxEEC2EOS0_(%"struct.std::_Tuple_impl.42"* %6, %"struct.std::_Tuple_impl.42"* dereferenceable(16) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxxEEC2EOS0_(%"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"* dereferenceable(16)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %3, align 8
  store %"struct.std::_Tuple_impl.42"* %1, %"struct.std::_Tuple_impl.42"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.42"* %5 to %"struct.std::_Tuple_impl.43"*
  %7 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %4, align 8
  %8 = call dereferenceable(8) %"struct.std::_Tuple_impl.43"* @_ZNSt11_Tuple_implILm0EJxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16) %7) #3
  %9 = call dereferenceable(8) %"struct.std::_Tuple_impl.43"* @_ZSt4moveIRSt11_Tuple_implILm1EJxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.43"* dereferenceable(8) %8) #3
  call void @_ZNSt11_Tuple_implILm1EJxEEC2EOS0_(%"struct.std::_Tuple_impl.43"* %6, %"struct.std::_Tuple_impl.43"* dereferenceable(8) %9) #3
  %10 = bitcast %"struct.std::_Tuple_impl.42"* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.19"*
  %13 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %4, align 8
  %14 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16) %13) #3
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %14) #3
  invoke void @_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.19"* %12, i64* dereferenceable(8) %15)
          to label %16 unwind label %58

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* @x.405
  %18 = load i32, i32* @y.406
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %61

; <label>:30:                                     ; preds = %16, %61
  %31 = load i32, i32* @x.405
  %32 = load i32, i32* @y.406
  %33 = sub i32 %31, 377787836
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 377787836
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %61

; <label>:57:                                     ; preds = %30
  ret void

; <label>:58:                                     ; preds = %2
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #11
  unreachable

; <label>:61:                                     ; preds = %30, %16
  br label %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.43"* @_ZSt4moveIRSt11_Tuple_implILm1EJxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.43"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.43"*, align 8
  store %"struct.std::_Tuple_impl.43"* %0, %"struct.std::_Tuple_impl.43"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %2, align 8
  ret %"struct.std::_Tuple_impl.43"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.43"* @_ZNSt11_Tuple_implILm0EJxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.43"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.409
  %6 = load i32, i32* @y.410
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1398769435, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1398769435, label %18
    i32 -494601974, label %26
    i32 312562764, label %57
    i32 -1942686942, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -494601974, i32 -1942686942
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %27, align 8
  %28 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %27, align 8
  %29 = bitcast %"struct.std::_Tuple_impl.42"* %28 to %"struct.std::_Tuple_impl.43"*
  store %"struct.std::_Tuple_impl.43"* %29, %"struct.std::_Tuple_impl.43"** %2
  %30 = load i32, i32* @x.409
  %31 = load i32, i32* @y.410
  %32 = sub i32 %30, -863854551
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -863854551
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 312562764, i32 -1942686942
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %2
  ret %"struct.std::_Tuple_impl.43"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %60, align 8
  %61 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %60, align 8
  %62 = bitcast %"struct.std::_Tuple_impl.42"* %61 to %"struct.std::_Tuple_impl.43"*
  store i32 -494601974, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJxEEC2EOS0_(%"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.43"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.43"*, align 8
  store %"struct.std::_Tuple_impl.43"* %0, %"struct.std::_Tuple_impl.43"** %3, align 8
  store %"struct.std::_Tuple_impl.43"* %1, %"struct.std::_Tuple_impl.43"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.43"* %5 to %"struct.std::_Head_base.18"*
  %7 = load %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.43"* dereferenceable(8) %7) #3
  %9 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %8) #3
  invoke void @_ZNSt10_Head_baseILm1ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.18"* %6, i64* dereferenceable(8) %9)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.413
  %6 = load i32, i32* @y.414
  %7 = sub i32 %5, 739930929
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 739930929
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1194449799, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1194449799, label %19
    i32 84380358, label %39
    i32 1746628793, label %73
    i32 21510401, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 84380358, i32 21510401
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.42"* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to %"struct.std::_Head_base.19"*
  %45 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.19"* dereferenceable(8) %44) #3
  store i64* %45, i64** %2
  %46 = load i32, i32* @x.413
  %47 = load i32, i32* @y.414
  %48 = add i32 %46, 2131018850
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 2131018850
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1746628793, i32 21510401
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile i64*, i64** %2
  ret i64* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %76, align 8
  %77 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %76, align 8
  %78 = bitcast %"struct.std::_Tuple_impl.42"* %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = bitcast i8* %79 to %"struct.std::_Head_base.19"*
  %81 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.19"* dereferenceable(8) %80) #3
  store i32 84380358, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.19"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.19"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.19"* %0, %"struct.std::_Head_base.19"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.43"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.43"*, align 8
  store %"struct.std::_Tuple_impl.43"* %0, %"struct.std::_Tuple_impl.43"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.43"* %3 to %"struct.std::_Head_base.18"*
  %5 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.18"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.18"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.419
  %6 = load i32, i32* @y.420
  %7 = sub i32 %5, 1539360179
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1539360179
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1716081688, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1716081688, label %19
    i32 -1510084518, label %39
    i32 250993117, label %61
    i32 -1468986648, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1510084518, i32 -1468986648
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Head_base.18"*, align 8
  %41 = alloca i64*, align 8
  store %"struct.std::_Head_base.18"* %0, %"struct.std::_Head_base.18"** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load %"struct.std::_Head_base.18"*, %"struct.std::_Head_base.18"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Head_base.18", %"struct.std::_Head_base.18"* %42, i32 0, i32 0
  %44 = load i64*, i64** %41, align 8
  %45 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %44) #3
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  %47 = load i32, i32* @x.419
  %48 = load i32, i32* @y.420
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 250993117, i32 -1468986648
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Head_base.18"*, align 8
  %64 = alloca i64*, align 8
  store %"struct.std::_Head_base.18"* %0, %"struct.std::_Head_base.18"** %63, align 8
  store i64* %1, i64** %64, align 8
  %65 = load %"struct.std::_Head_base.18"*, %"struct.std::_Head_base.18"** %63, align 8
  %66 = getelementptr inbounds %"struct.std::_Head_base.18", %"struct.std::_Head_base.18"* %65, i32 0, i32 0
  %67 = load i64*, i64** %64, align 8
  %68 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %67) #3
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %66, align 8
  store i32 -1510084518, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.19"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.19"*, align 8
  store %"struct.std::_Head_base.19"* %0, %"struct.std::_Head_base.19"** %2, align 8
  %3 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxEEEEvT_S5_(%"class.std::tuple.41"*, %"class.std::tuple.41"*) #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.41"*, align 8
  %4 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::tuple.41"* %0, %"class.std::tuple.41"** %3, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt5tupleIJxxEEEC2ES2_(%"class.std::move_iterator.52"*, %"class.std::tuple.41"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.52"*, align 8
  %4 = alloca %"class.std::tuple.41"*, align 8
  store %"class.std::move_iterator.52"* %0, %"class.std::move_iterator.52"** %3, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %4, align 8
  %5 = load %"class.std::move_iterator.52"*, %"class.std::move_iterator.52"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  store %"class.std::tuple.41"* %7, %"class.std::tuple.41"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.39"*, %"class.std::tuple.41"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  %4 = alloca %"class.std::tuple.41"*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %3, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %3, align 8
  %6 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.38"* dereferenceable(1), %"class.std::tuple.41"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.429
  %7 = load i32, i32* @y.430
  %8 = sub i32 %6, -1723676666
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1723676666
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2089181069, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2089181069, label %20
    i32 501955438, label %28
    i32 -1771392221, label %51
    i32 1586832357, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 501955438, i32 1586832357
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.38"*, align 8
  %30 = alloca %"class.std::tuple.41"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %29, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %29, align 8
  %33 = bitcast %"class.std::allocator.38"* %32 to %"class.__gnu_cxx::new_allocator.39"*
  %34 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.39"* %33, %"class.std::tuple.41"* %34, i64 %35)
  %36 = load i32, i32* @x.429
  %37 = load i32, i32* @y.430
  %38 = sub i32 %36, 527570162
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 527570162
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1771392221, i32 1586832357
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.38"*, align 8
  %54 = alloca %"class.std::tuple.41"*, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %53, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %53, align 8
  %57 = bitcast %"class.std::allocator.38"* %56 to %"class.__gnu_cxx::new_allocator.39"*
  %58 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.39"* %57, %"class.std::tuple.41"* %58, i64 %59)
  store i32 501955438, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.39"*, %"class.std::tuple.41"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.431
  %7 = load i32, i32* @y.432
  %8 = add i32 %6, -1748144253
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1748144253
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -806022088, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -806022088, label %20
    i32 -2068582505, label %28
    i32 -1804251019, label %62
    i32 -553438619, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2068582505, i32 -553438619
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  %30 = alloca %"class.std::tuple.41"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %29, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %29, align 8
  %33 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %30, align 8
  %34 = bitcast %"class.std::tuple.41"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.431
  %36 = load i32, i32* @y.432
  %37 = add i32 %35, -644443111
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -644443111
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1804251019, i32 -553438619
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  %65 = alloca %"class.std::tuple.41"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %64, align 8
  store %"class.std::tuple.41"* %1, %"class.std::tuple.41"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %64, align 8
  %68 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %65, align 8
  %69 = bitcast %"class.std::tuple.41"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -2068582505, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2Ev(%"class.std::allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEC2EmRKS4_(%"class.std::vector.6"*, i64, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %9 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %10 = bitcast %"class.std::vector.6"* %9 to %"struct.std::_Vector_base.7"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.7"* %10, i64 %11, %"class.std::allocator.8"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EE21_M_default_initializeEm(%"class.std::vector.6"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.6"* %9 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.7"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i32, i32* @x.435
  %22 = load i32, i32* @y.436
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %65

; <label>:34:                                     ; preds = %20, %65
  %35 = load i8*, i8** %7, align 8
  %36 = load i32, i32* %8, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  %39 = load i32, i32* @x.435
  %40 = load i32, i32* @y.436
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %65

; <label>:64:                                     ; preds = %34
  resume { i8*, i32 } %38

; <label>:65:                                     ; preds = %34, %20
  %66 = load i8*, i8** %7, align 8
  %67 = load i32, i32* %8, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  br label %34
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEED2Ev(%"class.std::allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i64 %10
  ret %"struct.std::pair"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE12emplace_backIJRxS5_RKxEEEvDpOT_(%"class.std::vector.11"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.std::tuple"*
  %6 = alloca %"class.std::tuple"*
  %7 = alloca %"class.std::vector.11"*
  %8 = alloca %"class.std::vector.11"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %8, align 8
  store i64* %1, i64** %9, align 8
  store i64* %2, i64** %10, align 8
  store i64* %3, i64** %11, align 8
  %12 = load %"class.std::vector.11"*, %"class.std::vector.11"** %8, align 8
  store %"class.std::vector.11"* %12, %"class.std::vector.11"** %7
  %13 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %14 = bitcast %"class.std::vector.11"* %13 to %"struct.std::_Vector_base.12"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %15, i32 0, i32 1
  %17 = load %"class.std::tuple"*, %"class.std::tuple"** %16, align 8
  store %"class.std::tuple"* %17, %"class.std::tuple"** %6
  %18 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %19 = bitcast %"class.std::vector.11"* %18 to %"struct.std::_Vector_base.12"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %20, i32 0, i32 2
  %22 = load %"class.std::tuple"*, %"class.std::tuple"** %21, align 8
  store %"class.std::tuple"* %22, %"class.std::tuple"** %5
  %23 = alloca i32
  store i32 1711957120, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %63
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 1711957120, label %27
    i32 -1842156604, label %32
    i32 -1565401354, label %54
    i32 -694163118, label %62
  ]

; <label>:26:                                     ; preds = %24
  br label %63

; <label>:27:                                     ; preds = %24
  %28 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %6
  %29 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %5
  %30 = icmp ne %"class.std::tuple"* %28, %29
  %31 = select i1 %30, i32 -1842156604, i32 -1565401354
  store i32 %31, i32* %23
  br label %63

; <label>:32:                                     ; preds = %24
  %33 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %34 = bitcast %"class.std::vector.11"* %33 to %"struct.std::_Vector_base.12"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %35 to %"class.std::allocator.13"*
  %37 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %38 = bitcast %"class.std::vector.11"* %37 to %"struct.std::_Vector_base.12"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %39, i32 0, i32 1
  %41 = load %"class.std::tuple"*, %"class.std::tuple"** %40, align 8
  %42 = load i64*, i64** %9, align 8
  %43 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %42) #3
  %44 = load i64*, i64** %10, align 8
  %45 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %44) #3
  %46 = load i64*, i64** %11, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %46) #3
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE9constructIS1_JRxS5_RKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.13"* dereferenceable(1) %36, %"class.std::tuple"* %41, i64* dereferenceable(8) %43, i64* dereferenceable(8) %45, i64* dereferenceable(8) %47)
  %48 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %49 = bitcast %"class.std::vector.11"* %48 to %"struct.std::_Vector_base.12"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %50, i32 0, i32 1
  %52 = load %"class.std::tuple"*, %"class.std::tuple"** %51, align 8
  %53 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %52, i32 1
  store %"class.std::tuple"* %53, %"class.std::tuple"** %51, align 8
  store i32 -694163118, i32* %23
  br label %63

; <label>:54:                                     ; preds = %24
  %55 = load i64*, i64** %9, align 8
  %56 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %55) #3
  %57 = load i64*, i64** %10, align 8
  %58 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %57) #3
  %59 = load i64*, i64** %11, align 8
  %60 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %59) #3
  %61 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  call void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_RKxEEEvDpOT_(%"class.std::vector.11"* %61, i64* dereferenceable(8) %56, i64* dereferenceable(8) %58, i64* dereferenceable(8) %60)
  store i32 -694163118, i32* %23
  br label %63

; <label>:62:                                     ; preds = %24
  ret void

; <label>:63:                                     ; preds = %54, %32, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.6"* @_ZSt4moveIRSt6vectorIS0_ISt5tupleIJxxxEESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.6"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  ret %"class.std::vector.6"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EEC2EOS5_(%"class.std::vector.6"*, %"class.std::vector.6"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.6"* @_ZSt4moveIRSt6vectorIS0_ISt5tupleIJxxxEESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::vector.6"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.6"* %8 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EEC2EOS6_(%"struct.std::_Vector_base.7"* %6, %"struct.std::_Vector_base.7"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base.7"*, i64, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %9 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %10, %"class.std::allocator.8"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base.7"* %9, i64 %12)
          to label %13 unwind label %56

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.451
  %15 = load i32, i32* @y.452
  %16 = sub i32 %14, -472968846
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -472968846
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %123

; <label>:28:                                     ; preds = %13, %123
  %29 = load i32, i32* @x.451
  %30 = load i32, i32* @y.452
  %31 = add i32 %29, 1376308801
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1376308801
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %123

; <label>:55:                                     ; preds = %28
  ret void

; <label>:56:                                     ; preds = %3
  %57 = load i32, i32* @x.451
  %58 = load i32, i32* @y.452
  %59 = add i32 %57, -583399064
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -583399064
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %124

; <label>:71:                                     ; preds = %56, %124
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %7, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %10) #3
  %75 = load i32, i32* @x.451
  %76 = load i32, i32* @y.452
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %124

; <label>:88:                                     ; preds = %71
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i32, i32* @x.451
  %91 = load i32, i32* @y.452
  %92 = add i32 %90, -173555478
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -173555478
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %128

; <label>:104:                                    ; preds = %89, %128
  %105 = load i8*, i8** %7, align 8
  %106 = load i32, i32* %8, align 4
  %107 = insertvalue { i8*, i32 } undef, i8* %105, 0
  %108 = insertvalue { i8*, i32 } %107, i32 %106, 1
  %109 = load i32, i32* @x.451
  %110 = load i32, i32* @y.452
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %128

; <label>:122:                                    ; preds = %104
  resume { i8*, i32 } %108

; <label>:123:                                    ; preds = %28, %13
  br label %28

; <label>:124:                                    ; preds = %71, %56
  %125 = landingpad { i8*, i32 }
          cleanup
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %7, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %10) #3
  br label %71

; <label>:128:                                    ; preds = %104, %89
  %129 = load i8*, i8** %7, align 8
  %130 = load i32, i32* %8, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  br label %104
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt5tupleIJxxxEESaIS1_EESaIS3_EE21_M_default_initializeEm(%"class.std::vector.6"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %12 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %11) #3
  %13 = call %"class.std::vector.11"* @_ZSt27__uninitialized_default_n_aIPSt6vectorISt5tupleIJxxxEESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.11"* %9, i64 %10, %"class.std::allocator.8"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::vector.11"* %13, %"class.std::vector.11"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.455
  %3 = load i32, i32* @y.456
  %4 = add i32 %2, -164546896
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -164546896
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %101

; <label>:16:                                     ; preds = %1, %101
  %17 = alloca %"struct.std::_Vector_base.7"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %17, align 8
  %20 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.11"*, %"class.std::vector.11"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::vector.11"*, %"class.std::vector.11"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.11"*, %"class.std::vector.11"** %28, align 8
  %30 = ptrtoint %"class.std::vector.11"* %26 to i64
  %31 = ptrtoint %"class.std::vector.11"* %29 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %30, %32
  %34 = sub i64 %30, %31
  %35 = sdiv exact i64 %33, 24
  %36 = load i32, i32* @x.455
  %37 = load i32, i32* @y.456
  %38 = add i32 %36, -387018869
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -387018869
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %101

; <label>:50:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.7"* %20, %"class.std::vector.11"* %23, i64 %35)
          to label %51 unwind label %94

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* @x.455
  %53 = load i32, i32* @y.456
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %164

; <label>:77:                                     ; preds = %51, %164
  %78 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %78) #3
  %79 = load i32, i32* @x.455
  %80 = load i32, i32* @y.456
  %81 = add i32 %79, 1982746388
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, 1982746388
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %164

; <label>:93:                                     ; preds = %77
  ret void

; <label>:94:                                     ; preds = %50
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %18, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %19, align 4
  %98 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %98) #3
  br label %99

; <label>:99:                                     ; preds = %94
  %100 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %100) #11
  unreachable

; <label>:101:                                    ; preds = %16, %1
  %102 = alloca %"struct.std::_Vector_base.7"*, align 8
  %103 = alloca i8*
  %104 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %102, align 8
  %105 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %102, align 8
  %106 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %106, i32 0, i32 0
  %108 = load %"class.std::vector.11"*, %"class.std::vector.11"** %107, align 8
  %109 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %105, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %109, i32 0, i32 2
  %111 = load %"class.std::vector.11"*, %"class.std::vector.11"** %110, align 8
  %112 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %105, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %112, i32 0, i32 0
  %114 = load %"class.std::vector.11"*, %"class.std::vector.11"** %113, align 8
  %115 = ptrtoint %"class.std::vector.11"* %111 to i64
  %116 = ptrtoint %"class.std::vector.11"* %114 to i64
  %117 = shl i64 %115, %116
  %118 = sub i64 0, -5172951594463258512
  %119 = sub i64 %118, %115
  %120 = add i64 %119, -5172951594463258512
  %121 = sub i64 0, %115
  %122 = add i64 %120, -8722057834077528410
  %123 = add i64 %122, %116
  %124 = sub i64 %123, -8722057834077528410
  %125 = add i64 %120, %116
  %126 = sub i64 %115, 814199159722508064
  %127 = sub i64 %126, %116
  %128 = add i64 %127, 814199159722508064
  %129 = sub i64 %115, %116
  %130 = mul i64 %128, %116
  %131 = shl i64 %115, %116
  %132 = add i64 %115, -1734660876995576828
  %133 = sub i64 %132, %116
  %134 = sub i64 %133, -1734660876995576828
  %135 = sub i64 %115, %116
  %136 = mul i64 %134, %116
  %137 = shl i64 %115, %116
  %138 = add i64 %115, 326153070887487928
  %139 = sub i64 %138, %116
  %140 = sub i64 %139, 326153070887487928
  %141 = sub i64 %115, %116
  %142 = shl i64 %140, 24
  %143 = shl i64 %140, 24
  %144 = sub i64 0, -1457587645174901803
  %145 = sub i64 %144, %140
  %146 = add i64 %145, -1457587645174901803
  %147 = sub i64 0, %140
  %148 = sub i64 0, %146
  %149 = sub i64 0, 24
  %150 = add i64 %148, %149
  %151 = sub i64 0, %150
  %152 = add i64 %146, 24
  %153 = shl i64 %140, 24
  %154 = shl i64 %140, 24
  %155 = add i64 0, -526660440136294958
  %156 = sub i64 %155, %140
  %157 = sub i64 %156, -526660440136294958
  %158 = sub i64 0, %140
  %159 = add i64 %157, 6917313492971068275
  %160 = add i64 %159, 24
  %161 = sub i64 %160, 6917313492971068275
  %162 = add i64 %157, 24
  %163 = sdiv exact i64 %140, 24
  br label %16

; <label>:164:                                    ; preds = %77, %51
  %165 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %165) #3
  br label %77
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.457
  %6 = load i32, i32* @y.458
  %7 = sub i32 %5, 505977065
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 505977065
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 344469236, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 344469236, label %19
    i32 1208033934, label %27
    i32 -1299472078, label %51
    i32 420937965, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1208033934, i32 420937965
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.8"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %30 to %"class.std::allocator.8"*
  %32 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %29, align 8
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2ERKS4_(%"class.std::allocator.8"* %31, %"class.std::allocator.8"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %30, i32 0, i32 0
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %30, i32 0, i32 1
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %30, i32 0, i32 2
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %35, align 8
  %36 = load i32, i32* @x.457
  %37 = load i32, i32* @y.458
  %38 = sub i32 %36, -1409337748
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1409337748
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1299472078, i32 420937965
  store i32 %50, i32* %15
  br label %61

; <label>:51:                                     ; preds = %16
  ret void

; <label>:52:                                     ; preds = %16
  %53 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  %54 = alloca %"class.std::allocator.8"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %53, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %54, align 8
  %55 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %53, align 8
  %56 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %55 to %"class.std::allocator.8"*
  %57 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %54, align 8
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2ERKS4_(%"class.std::allocator.8"* %56, %"class.std::allocator.8"* dereferenceable(1) %57) #3
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %55, i32 0, i32 0
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %55, i32 0, i32 1
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %55, i32 0, i32 2
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %60, align 8
  store i32 1208033934, i32* %15
  br label %61

; <label>:61:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.7"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.11"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.7"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.11"* %7, %"class.std::vector.11"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.11"*, %"class.std::vector.11"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.11"* %12, %"class.std::vector.11"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.11"*, %"class.std::vector.11"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.11"* %19, %"class.std::vector.11"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.461
  %5 = load i32, i32* @y.462
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -956317934, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -956317934, label %17
    i32 -111902503, label %25
    i32 -1670143590, label %43
    i32 1668455319, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -111902503, i32 1668455319
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %27 to %"class.std::allocator.8"*
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEED2Ev(%"class.std::allocator.8"* %28) #3
  %29 = load i32, i32* @x.461
  %30 = load i32, i32* @y.462
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1670143590, i32 1668455319
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %45, align 8
  %46 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %45, align 8
  %47 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %46 to %"class.std::allocator.8"*
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEED2Ev(%"class.std::allocator.8"* %47) #3
  store i32 -111902503, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2ERKS4_(%"class.std::allocator.8"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.9"* %6, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.465
  %6 = load i32, i32* @y.466
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -648417224, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -648417224, label %18
    i32 -645232451, label %38
    i32 1267618746, label %57
    i32 -1554996288, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -645232451, i32 -1554996288
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %40 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %1, %"class.__gnu_cxx::new_allocator.9"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %42 = load i32, i32* @x.465
  %43 = load i32, i32* @y.466
  %44 = add i32 %42, -201672899
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -201672899
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1267618746, i32 -1554996288
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %60 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %59, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %1, %"class.__gnu_cxx::new_allocator.9"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %59, align 8
  store i32 -645232451, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*
  %4 = alloca %"class.std::vector.11"*
  %5 = alloca i1
  %6 = alloca %"struct.std::_Vector_base.7"*
  %7 = alloca i64*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.467
  %11 = load i32, i32* @y.468
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -693702542, i32* %19
  %20 = alloca %"class.std::vector.11"*
  br label %21

; <label>:21:                                     ; preds = %2, %224
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -693702542, label %24
    i32 -1481135958, label %32
    i32 132317314, label %66
    i32 260736196, label %69
    i32 1646756894, label %97
    i32 1220674251, label %130
    i32 -1286892019, label %132
    i32 -1163521085, label %148
    i32 2016031547, label %163
    i32 -1612132297, label %164
    i32 -694556283, label %180
    i32 1801842361, label %207
    i32 267437228, label %209
    i32 -819027895, label %215
    i32 493387472, label %222
    i32 -212952659, label %223
  ]

; <label>:23:                                     ; preds = %21
  br label %224

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1481135958, i32 267437228
  store i32 %31, i32* %19
  br label %224

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.7"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %7
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %33, align 8
  %35 = load volatile i64*, i64** %7
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %33, align 8
  store %"struct.std::_Vector_base.7"* %36, %"struct.std::_Vector_base.7"** %6
  %37 = load volatile i64*, i64** %7
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %5
  %40 = load i32, i32* @x.467
  %41 = load i32, i32* @y.468
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 132317314, i32 267437228
  store i32 %65, i32* %19
  br label %224

; <label>:66:                                     ; preds = %21
  %67 = load volatile i1, i1* %5
  %68 = select i1 %67, i32 260736196, i32 -1286892019
  store i32 %68, i32* %19
  br label %224

; <label>:69:                                     ; preds = %21
  %70 = load i32, i32* @x.467
  %71 = load i32, i32* @y.468
  %72 = add i32 %70, -708426964
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -708426964
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 1646756894, i32 -819027895
  store i32 %96, i32* %19
  br label %224

; <label>:97:                                     ; preds = %21
  %98 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %6
  %99 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %98, i32 0, i32 0
  %100 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %99 to %"class.std::allocator.8"*
  %101 = load volatile i64*, i64** %7
  %102 = load i64, i64* %101, align 8
  %103 = call %"class.std::vector.11"* @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJxxxEESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.8"* dereferenceable(1) %100, i64 %102)
  store %"class.std::vector.11"* %103, %"class.std::vector.11"** %4
  %104 = load i32, i32* @x.467
  %105 = load i32, i32* @y.468
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 1220674251, i32 -819027895
  store i32 %129, i32* %19
  br label %224

; <label>:130:                                    ; preds = %21
  store i32 -1612132297, i32* %19
  %131 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %4
  store %"class.std::vector.11"* %131, %"class.std::vector.11"** %20
  br label %224

; <label>:132:                                    ; preds = %21
  %133 = load i32, i32* @x.467
  %134 = load i32, i32* @y.468
  %135 = sub i32 %133, -941919658
  %136 = sub i32 %135, 1
  %137 = add i32 %136, -941919658
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  %147 = select i1 %145, i32 -1163521085, i32 493387472
  store i32 %147, i32* %19
  br label %224

; <label>:148:                                    ; preds = %21
  %149 = load i32, i32* @x.467
  %150 = load i32, i32* @y.468
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 2016031547, i32 493387472
  store i32 %162, i32* %19
  br label %224

; <label>:163:                                    ; preds = %21
  store i32 -1612132297, i32* %19
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %20
  br label %224

; <label>:164:                                    ; preds = %21
  %165 = load %"class.std::vector.11"*, %"class.std::vector.11"** %20
  store %"class.std::vector.11"* %165, %"class.std::vector.11"** %3
  %166 = load i32, i32* @x.467
  %167 = load i32, i32* @y.468
  %168 = sub i32 0, 1
  %169 = add i32 %166, %168
  %170 = sub i32 %166, 1
  %171 = mul i32 %166, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %167, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  %179 = select i1 %177, i32 -694556283, i32 -212952659
  store i32 %179, i32* %19
  br label %224

; <label>:180:                                    ; preds = %21
  %181 = load i32, i32* @x.467
  %182 = load i32, i32* @y.468
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  %206 = select i1 %204, i32 1801842361, i32 -212952659
  store i32 %206, i32* %19
  br label %224

; <label>:207:                                    ; preds = %21
  %208 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %3
  ret %"class.std::vector.11"* %208

; <label>:209:                                    ; preds = %21
  %210 = alloca %"struct.std::_Vector_base.7"*, align 8
  %211 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %210, align 8
  store i64 %1, i64* %211, align 8
  %212 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %210, align 8
  %213 = load i64, i64* %211, align 8
  %214 = icmp ne i64 %213, 0
  store i32 -1481135958, i32* %19
  br label %224

; <label>:215:                                    ; preds = %21
  %216 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %6
  %217 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %216, i32 0, i32 0
  %218 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %217 to %"class.std::allocator.8"*
  %219 = load volatile i64*, i64** %7
  %220 = load i64, i64* %219, align 8
  %221 = call %"class.std::vector.11"* @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJxxxEESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.8"* dereferenceable(1) %218, i64 %220)
  store i32 1646756894, i32* %19
  br label %224

; <label>:222:                                    ; preds = %21
  store i32 -1163521085, i32* %19
  br label %224

; <label>:223:                                    ; preds = %21
  store i32 -694556283, i32* %19
  br label %224

; <label>:224:                                    ; preds = %223, %222, %215, %209, %180, %164, %163, %148, %132, %130, %97, %69, %66, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJxxxEESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.8"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.469
  %7 = load i32, i32* @y.470
  %8 = add i32 %6, 670150650
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 670150650
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1072017414, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1072017414, label %20
    i32 -924166336, label %28
    i32 786202785, label %62
    i32 -1918125793, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -924166336, i32 -1918125793
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.8"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %29, align 8
  %32 = bitcast %"class.std::allocator.8"* %31 to %"class.__gnu_cxx::new_allocator.9"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::vector.11"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %32, i64 %33, i8* null)
  store %"class.std::vector.11"* %34, %"class.std::vector.11"** %3
  %35 = load i32, i32* @x.469
  %36 = load i32, i32* @y.470
  %37 = add i32 %35, -1084751691
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1084751691
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 786202785, i32 -1918125793
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %3
  ret %"class.std::vector.11"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.8"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %65, align 8
  %68 = bitcast %"class.std::allocator.8"* %67 to %"class.__gnu_cxx::new_allocator.9"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::vector.11"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %68, i64 %69, i8* null)
  store i32 -924166336, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 902223803, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 902223803, label %16
    i32 1907646251, label %21
    i32 210009281, label %49
    i32 232992848, label %65
    i32 107827916, label %66
    i32 1982669893, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1907646251, i32 107827916
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.471
  %23 = load i32, i32* @y.472
  %24 = add i32 %22, 2094212772
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 2094212772
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 210009281, i32 1982669893
  store i32 %48, i32* %12
  br label %72

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %50 = load i32, i32* @x.471
  %51 = load i32, i32* @y.472
  %52 = add i32 %50, -46774509
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -46774509
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 232992848, i32 1982669893
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 24
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to %"class.std::vector.11"*
  ret %"class.std::vector.11"* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 210009281, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.475
  %5 = load i32, i32* @y.476
  %6 = add i32 %4, 961147102
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 961147102
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1829704725, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1829704725, label %18
    i32 1104532343, label %38
    i32 594172116, label %56
    i32 814179580, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1104532343, i32 814179580
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %41 = load i32, i32* @x.475
  %42 = load i32, i32* @y.476
  %43 = add i32 %41, 2005460976
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 2005460976
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 594172116, i32 814179580
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %58, align 8
  store i32 1104532343, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt27__uninitialized_default_n_aIPSt6vectorISt5tupleIJxxxEESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.11"*, i64, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.11"* @_ZSt25__uninitialized_default_nIPSt6vectorISt5tupleIJxxxEESaIS2_EEmET_S6_T0_(%"class.std::vector.11"* %7, i64 %8)
  ret %"class.std::vector.11"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %4 to %"class.std::allocator.8"*
  ret %"class.std::allocator.8"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt25__uninitialized_default_nIPSt6vectorISt5tupleIJxxxEESaIS2_EEmET_S6_T0_(%"class.std::vector.11"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.11"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.481
  %7 = load i32, i32* @y.482
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 855338297, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 855338297, label %19
    i32 -166954102, label %39
    i32 317978769, label %60
    i32 959029624, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -166954102, i32 959029624
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.11"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load %"class.std::vector.11"*, %"class.std::vector.11"** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.11"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorISt5tupleIJxxxEESaIS4_EEmEET_S8_T0_(%"class.std::vector.11"* %43, i64 %44)
  store %"class.std::vector.11"* %45, %"class.std::vector.11"** %3
  %46 = load i32, i32* @x.481
  %47 = load i32, i32* @y.482
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 317978769, i32 959029624
  store i32 %59, i32* %15
  br label %69

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %3
  ret %"class.std::vector.11"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.11"*, align 8
  %64 = alloca i64, align 8
  %65 = alloca i8, align 1
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %63, align 8
  store i64 %1, i64* %64, align 8
  store i8 1, i8* %65, align 1
  %66 = load %"class.std::vector.11"*, %"class.std::vector.11"** %63, align 8
  %67 = load i64, i64* %64, align 8
  %68 = call %"class.std::vector.11"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorISt5tupleIJxxxEESaIS4_EEmEET_S8_T0_(%"class.std::vector.11"* %66, i64 %67)
  store i32 -166954102, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorISt5tupleIJxxxEESaIS4_EEmEET_S8_T0_(%"class.std::vector.11"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  store %"class.std::vector.11"* %8, %"class.std::vector.11"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %123, %2
  %10 = load i32, i32* @x.483
  %11 = load i32, i32* @y.484
  %12 = add i32 %10, -1092745523
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1092745523
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  br i1 %34, label %36, label %271

; <label>:36:                                     ; preds = %9, %271
  %37 = load i64, i64* %4, align 8
  %38 = icmp ugt i64 %37, 0
  %39 = load i32, i32* @x.483
  %40 = load i32, i32* @y.484
  %41 = sub i32 %39, 1225518997
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1225518997
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %271

; <label>:65:                                     ; preds = %36
  br i1 %38, label %66, label %200

; <label>:66:                                     ; preds = %65
  %67 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %68 = call %"class.std::vector.11"* @_ZSt11__addressofISt6vectorISt5tupleIJxxxEESaIS2_EEEPT_RS5_(%"class.std::vector.11"* dereferenceable(24) %67) #3
  invoke void @_ZSt10_ConstructISt6vectorISt5tupleIJxxxEESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.11"* %68)
          to label %69 unwind label %132

; <label>:69:                                     ; preds = %66
  %70 = load i32, i32* @x.483
  %71 = load i32, i32* @y.484
  %72 = add i32 %70, 537375615
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 537375615
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %274

; <label>:96:                                     ; preds = %69, %274
  %97 = load i32, i32* @x.483
  %98 = load i32, i32* @y.484
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %274

; <label>:122:                                    ; preds = %96
  br label %123

; <label>:123:                                    ; preds = %122
  %124 = load i64, i64* %4, align 8
  %125 = sub i64 0, %124
  %126 = sub i64 0, -1
  %127 = add i64 %125, %126
  %128 = sub i64 0, %127
  %129 = add i64 %124, -1
  store i64 %128, i64* %4, align 8
  %130 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %131 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %130, i32 1
  store %"class.std::vector.11"* %131, %"class.std::vector.11"** %5, align 8
  br label %9

; <label>:132:                                    ; preds = %66
  %133 = load i32, i32* @x.483
  %134 = load i32, i32* @y.484
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %275

; <label>:146:                                    ; preds = %132, %275
  %147 = landingpad { i8*, i32 }
          catch i8* null
  %148 = extractvalue { i8*, i32 } %147, 0
  store i8* %148, i8** %6, align 8
  %149 = extractvalue { i8*, i32 } %147, 1
  store i32 %149, i32* %7, align 4
  %150 = load i32, i32* @x.483
  %151 = load i32, i32* @y.484
  %152 = sub i32 %150, -656511756
  %153 = sub i32 %152, 1
  %154 = add i32 %153, -656511756
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %275

; <label>:164:                                    ; preds = %146
  br label %165

; <label>:165:                                    ; preds = %164
  %166 = load i8*, i8** %6, align 8
  %167 = call i8* @__cxa_begin_catch(i8* %166) #3
  %168 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %169 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvT_S6_(%"class.std::vector.11"* %168, %"class.std::vector.11"* %169)
          to label %170 unwind label %202

; <label>:170:                                    ; preds = %165
  %171 = load i32, i32* @x.483
  %172 = load i32, i32* @y.484
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %279

; <label>:184:                                    ; preds = %170, %279
  %185 = load i32, i32* @x.483
  %186 = load i32, i32* @y.484
  %187 = sub i32 %185, -931949659
  %188 = sub i32 %187, 1
  %189 = add i32 %188, -931949659
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %279

; <label>:199:                                    ; preds = %184
  invoke void @__cxa_rethrow() #12
          to label %270 unwind label %202

; <label>:200:                                    ; preds = %65
  %201 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  ret %"class.std::vector.11"* %201

; <label>:202:                                    ; preds = %199, %165
  %203 = load i32, i32* @x.483
  %204 = load i32, i32* @y.484
  %205 = sub i32 %203, -2048980170
  %206 = sub i32 %205, 1
  %207 = add i32 %206, -2048980170
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 true, true
  %216 = and i1 %213, true
  %217 = and i1 %211, %215
  %218 = and i1 %214, true
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 true, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %280

; <label>:229:                                    ; preds = %202, %280
  %230 = landingpad { i8*, i32 }
          cleanup
  %231 = extractvalue { i8*, i32 } %230, 0
  store i8* %231, i8** %6, align 8
  %232 = extractvalue { i8*, i32 } %230, 1
  store i32 %232, i32* %7, align 4
  %233 = load i32, i32* @x.483
  %234 = load i32, i32* @y.484
  %235 = sub i32 %233, 161006252
  %236 = sub i32 %235, 1
  %237 = add i32 %236, 161006252
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 false, true
  %246 = and i1 %243, false
  %247 = and i1 %241, %245
  %248 = and i1 %244, false
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 false, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %280

; <label>:259:                                    ; preds = %229
  invoke void @__cxa_end_catch()
          to label %260 unwind label %267

; <label>:260:                                    ; preds = %259
  br label %262
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:262:                                    ; preds = %260
  %263 = load i8*, i8** %6, align 8
  %264 = load i32, i32* %7, align 4
  %265 = insertvalue { i8*, i32 } undef, i8* %263, 0
  %266 = insertvalue { i8*, i32 } %265, i32 %264, 1
  resume { i8*, i32 } %266

; <label>:267:                                    ; preds = %259
  %268 = landingpad { i8*, i32 }
          catch i8* null
  %269 = extractvalue { i8*, i32 } %268, 0
  call void @__clang_call_terminate(i8* %269) #11
  unreachable

; <label>:270:                                    ; preds = %199
  unreachable

; <label>:271:                                    ; preds = %36, %9
  %272 = load i64, i64* %4, align 8
  %273 = icmp ugt i64 %272, 0
  br label %36

; <label>:274:                                    ; preds = %96, %69
  br label %96

; <label>:275:                                    ; preds = %146, %132
  %276 = landingpad { i8*, i32 }
          catch i8* null
  %277 = extractvalue { i8*, i32 } %276, 0
  store i8* %277, i8** %6, align 8
  %278 = extractvalue { i8*, i32 } %276, 1
  store i32 %278, i32* %7, align 4
  br label %146

; <label>:279:                                    ; preds = %184, %170
  br label %184

; <label>:280:                                    ; preds = %229, %202
  %281 = landingpad { i8*, i32 }
          cleanup
  %282 = extractvalue { i8*, i32 } %281, 0
  store i8* %282, i8** %6, align 8
  %283 = extractvalue { i8*, i32 } %281, 1
  store i32 %283, i32* %7, align 4
  br label %229
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorISt5tupleIJxxxEESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.11"*) #4 comdat {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.11"*
  call void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EEC2Ev(%"class.std::vector.11"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt11__addressofISt6vectorISt5tupleIJxxxEESaIS2_EEEPT_RS5_(%"class.std::vector.11"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.11"*
  ret %"class.std::vector.11"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvT_S6_(%"class.std::vector.11"*, %"class.std::vector.11"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.489
  %6 = load i32, i32* @y.490
  %7 = sub i32 %5, 1106587407
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1106587407
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 447150407, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 447150407, label %19
    i32 -2142521751, label %39
    i32 -1159819481, label %71
    i32 682045480, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2142521751, i32 682045480
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.11"*, align 8
  %41 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %40, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %41, align 8
  %42 = load %"class.std::vector.11"*, %"class.std::vector.11"** %40, align 8
  %43 = load %"class.std::vector.11"*, %"class.std::vector.11"** %41, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJxxxEESaIS4_EEEEvT_S8_(%"class.std::vector.11"* %42, %"class.std::vector.11"* %43)
  %44 = load i32, i32* @x.489
  %45 = load i32, i32* @y.490
  %46 = sub i32 %44, 1314066985
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1314066985
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1159819481, i32 682045480
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector.11"*, align 8
  %74 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %73, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %74, align 8
  %75 = load %"class.std::vector.11"*, %"class.std::vector.11"** %73, align 8
  %76 = load %"class.std::vector.11"*, %"class.std::vector.11"** %74, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJxxxEESaIS4_EEEEvT_S8_(%"class.std::vector.11"* %75, %"class.std::vector.11"* %76)
  store i32 -2142521751, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EEC2Ev(%"class.std::vector.11"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.491
  %3 = load i32, i32* @y.492
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %144

; <label>:27:                                     ; preds = %1, %144
  %28 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %28, align 8
  %29 = load %"class.std::vector.11"*, %"class.std::vector.11"** %28, align 8
  %30 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.12"*
  %31 = load i32, i32* @x.491
  %32 = load i32, i32* @y.492
  %33 = add i32 %31, 1481008614
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1481008614
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %144

; <label>:57:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EEC2Ev(%"struct.std::_Vector_base.12"* %30)
          to label %58 unwind label %99

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.491
  %60 = load i32, i32* @y.492
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %148

; <label>:84:                                     ; preds = %58, %148
  %85 = load i32, i32* @x.491
  %86 = load i32, i32* @y.492
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %148

; <label>:98:                                     ; preds = %84
  ret void

; <label>:99:                                     ; preds = %57
  %100 = load i32, i32* @x.491
  %101 = load i32, i32* @y.492
  %102 = add i32 %100, 1982110534
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, 1982110534
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %149

; <label>:114:                                    ; preds = %99, %149
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  call void @__clang_call_terminate(i8* %116) #11
  %117 = load i32, i32* @x.491
  %118 = load i32, i32* @y.492
  %119 = sub i32 %117, -1303409647
  %120 = sub i32 %119, 1
  %121 = add i32 %120, -1303409647
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %149

; <label>:143:                                    ; preds = %114
  unreachable

; <label>:144:                                    ; preds = %27, %1
  %145 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %145, align 8
  %146 = load %"class.std::vector.11"*, %"class.std::vector.11"** %145, align 8
  %147 = bitcast %"class.std::vector.11"* %146 to %"struct.std::_Vector_base.12"*
  br label %27

; <label>:148:                                    ; preds = %84, %58
  br label %84

; <label>:149:                                    ; preds = %114, %99
  %150 = landingpad { i8*, i32 }
          catch i8* null
  %151 = extractvalue { i8*, i32 } %150, 0
  call void @__clang_call_terminate(i8* %151) #11
  br label %114
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EEC2Ev(%"struct.std::_Vector_base.12"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %3 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %3 to %"class.std::allocator.13"*
  call void @_ZNSaISt5tupleIJxxxEEEC2Ev(%"class.std::allocator.13"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::tuple"* null, %"class.std::tuple"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::tuple"* null, %"class.std::tuple"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::tuple"* null, %"class.std::tuple"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxxxEEEC2Ev(%"class.std::allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.497
  %5 = load i32, i32* @y.498
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1188057687, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1188057687, label %17
    i32 973862832, label %25
    i32 2095019829, label %43
    i32 892418883, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 973862832, i32 892418883
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %26, align 8
  %27 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %26, align 8
  %28 = bitcast %"class.std::allocator.13"* %27 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %28) #3
  %29 = load i32, i32* @x.497
  %30 = load i32, i32* @y.498
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 2095019829, i32 892418883
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %45, align 8
  %46 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %45, align 8
  %47 = bitcast %"class.std::allocator.13"* %46 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %47) #3
  store i32 973862832, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.499
  %5 = load i32, i32* @y.500
  %6 = sub i32 %4, 177155264
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 177155264
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1613536133, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1613536133, label %18
    i32 525837089, label %38
    i32 -1183279729, label %68
    i32 2032634992, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 525837089, i32 2032634992
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %39, align 8
  %41 = load i32, i32* @x.499
  %42 = load i32, i32* @y.500
  %43 = sub i32 %41, 81843901
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 81843901
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1183279729, i32 2032634992
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %70, align 8
  store i32 525837089, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJxxxEESaIS4_EEEEvT_S8_(%"class.std::vector.11"*, %"class.std::vector.11"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %4, align 8
  %5 = alloca i32
  store i32 800406798, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 800406798, label %9
    i32 -1809946780, label %14
    i32 -419627209, label %17
    i32 1643444088, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %11 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %12 = icmp ne %"class.std::vector.11"* %10, %11
  %13 = select i1 %12, i32 -1809946780, i32 1643444088
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %16 = call %"class.std::vector.11"* @_ZSt11__addressofISt6vectorISt5tupleIJxxxEESaIS2_EEEPT_RS5_(%"class.std::vector.11"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorISt5tupleIJxxxEESaIS2_EEEvPT_(%"class.std::vector.11"* %16)
  store i32 -419627209, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %19 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %18, i32 1
  store %"class.std::vector.11"* %19, %"class.std::vector.11"** %3, align 8
  store i32 800406798, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorISt5tupleIJxxxEESaIS2_EEEvPT_(%"class.std::vector.11"*) #4 comdat {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  call void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EED2Ev(%"class.std::vector.11"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EED2Ev(%"class.std::vector.11"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::tuple"*, %"class.std::tuple"** %8, align 8
  %10 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::tuple"*, %"class.std::tuple"** %12, align 8
  %14 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %15 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %14) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"* %9, %"class.std::tuple"* %13, %"class.std::allocator.13"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.505
  %18 = load i32, i32* @y.506
  %19 = add i32 %17, -180078159
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -180078159
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %151

; <label>:43:                                     ; preds = %16, %151
  %44 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.12"* %44) #3
  %45 = load i32, i32* @x.505
  %46 = load i32, i32* @y.506
  %47 = sub i32 %45, 1181053055
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1181053055
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %151

; <label>:59:                                     ; preds = %43
  ret void

; <label>:60:                                     ; preds = %1
  %61 = load i32, i32* @x.505
  %62 = load i32, i32* @y.506
  %63 = sub i32 %61, -1808023595
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -1808023595
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %153

; <label>:87:                                     ; preds = %60, %153
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %3, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %4, align 4
  %91 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.12"* %91) #3
  %92 = load i32, i32* @x.505
  %93 = load i32, i32* @y.506
  %94 = add i32 %92, -118476072
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -118476072
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %153

; <label>:106:                                    ; preds = %87
  br label %107

; <label>:107:                                    ; preds = %106
  %108 = load i32, i32* @x.505
  %109 = load i32, i32* @y.506
  %110 = add i32 %108, -1940689500
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -1940689500
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %158

; <label>:122:                                    ; preds = %107, %158
  %123 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %123) #11
  %124 = load i32, i32* @x.505
  %125 = load i32, i32* @y.506
  %126 = sub i32 %124, 1549330766
  %127 = sub i32 %126, 1
  %128 = add i32 %127, 1549330766
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %158

; <label>:150:                                    ; preds = %122
  unreachable

; <label>:151:                                    ; preds = %43, %16
  %152 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.12"* %152) #3
  br label %43

; <label>:153:                                    ; preds = %87, %60
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  store i8* %155, i8** %3, align 8
  %156 = extractvalue { i8*, i32 } %154, 1
  store i32 %156, i32* %4, align 4
  %157 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.12"* %157) #3
  br label %87

; <label>:158:                                    ; preds = %122, %107
  %159 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %159) #11
  br label %122
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::tuple"*, align 8
  %5 = alloca %"class.std::tuple"*, align 8
  %6 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %4, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %5, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %6, align 8
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %5, align 8
  call void @_ZSt8_DestroyIPSt5tupleIJxxxEEEvT_S3_(%"class.std::tuple"* %7, %"class.std::tuple"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.509
  %6 = load i32, i32* @y.510
  %7 = add i32 %5, -1824534186
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1824534186
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1057822341, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1057822341, label %19
    i32 -2034813507, label %39
    i32 -1628243256, label %59
    i32 -1312658271, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2034813507, i32 -1312658271
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %40, align 8
  %41 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %42 to %"class.std::allocator.13"*
  store %"class.std::allocator.13"* %43, %"class.std::allocator.13"** %2
  %44 = load i32, i32* @x.509
  %45 = load i32, i32* @y.510
  %46 = add i32 %44, -2011438260
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -2011438260
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1628243256, i32 -1312658271
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.13"*, %"class.std::allocator.13"** %2
  ret %"class.std::allocator.13"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %62, align 8
  %63 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %64 to %"class.std::allocator.13"*
  store i32 -2034813507, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.12"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %5 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::tuple"*, %"class.std::tuple"** %13, align 8
  %15 = ptrtoint %"class.std::tuple"* %11 to i64
  %16 = ptrtoint %"class.std::tuple"* %14 to i64
  %17 = add i64 %15, -1557848795314956298
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -1557848795314956298
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"* %5, %"class.std::tuple"* %8, i64 %21)
          to label %22 unwind label %65

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.511
  %24 = load i32, i32* @y.512
  %25 = sub i32 %23, -1992167064
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1992167064
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %72

; <label>:37:                                     ; preds = %22, %72
  %38 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %38) #3
  %39 = load i32, i32* @x.511
  %40 = load i32, i32* @y.512
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %72

; <label>:64:                                     ; preds = %37
  ret void

; <label>:65:                                     ; preds = %1
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %3, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %4, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %71) #11
  unreachable

; <label>:72:                                     ; preds = %37, %22
  %73 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %73) #3
  br label %37
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxxxEEEvT_S3_(%"class.std::tuple"*, %"class.std::tuple"*) #0 comdat {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxxEEEEvT_S5_(%"class.std::tuple"* %5, %"class.std::tuple"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxxEEEEvT_S5_(%"class.std::tuple"*, %"class.std::tuple"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.515
  %6 = load i32, i32* @y.516
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1656519763, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1656519763, label %18
    i32 -498356846, label %38
    i32 45088986, label %56
    i32 1984150492, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -498356846, i32 1984150492
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::tuple"*, align 8
  %40 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %39, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %40, align 8
  %41 = load i32, i32* @x.515
  %42 = load i32, i32* @y.516
  %43 = add i32 %41, -1187204208
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1187204208
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 45088986, i32 1984150492
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::tuple"*, align 8
  %59 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %58, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %59, align 8
  store i32 -498356846, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"*, %"class.std::tuple"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::tuple"*
  %5 = alloca %"struct.std::_Vector_base.12"*
  %6 = alloca %"struct.std::_Vector_base.12"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %6, align 8
  store %"struct.std::_Vector_base.12"* %9, %"struct.std::_Vector_base.12"** %5
  %10 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple"* %10, %"class.std::tuple"** %4
  %11 = alloca i32
  store i32 245825752, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %76
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 245825752, label %15
    i32 -1694693596, label %19
    i32 -1678589822, label %47
    i32 -714580079, label %68
    i32 -1679891717, label %69
    i32 260183930, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %76

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %4
  %17 = icmp ne %"class.std::tuple"* %16, null
  %18 = select i1 %17, i32 -1694693596, i32 -1679891717
  store i32 %18, i32* %11
  br label %76

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.517
  %21 = load i32, i32* @y.518
  %22 = add i32 %20, -997903729
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -997903729
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1678589822, i32 260183930
  store i32 %46, i32* %11
  br label %76

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %49 to %"class.std::allocator.13"*
  %51 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.13"* dereferenceable(1) %50, %"class.std::tuple"* %51, i64 %52)
  %53 = load i32, i32* @x.517
  %54 = load i32, i32* @y.518
  %55 = add i32 %53, -1867413045
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1867413045
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -714580079, i32 260183930
  store i32 %67, i32* %11
  br label %76

; <label>:68:                                     ; preds = %12
  store i32 -1679891717, i32* %11
  br label %76

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  %71 = load volatile %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %5
  %72 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %72 to %"class.std::allocator.13"*
  %74 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %75 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.13"* dereferenceable(1) %73, %"class.std::tuple"* %74, i64 %75)
  store i32 -1678589822, i32* %11
  br label %76

; <label>:76:                                     ; preds = %70, %68, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %3 to %"class.std::allocator.13"*
  call void @_ZNSaISt5tupleIJxxxEEED2Ev(%"class.std::allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.13"* dereferenceable(1), %"class.std::tuple"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.13"*, align 8
  %5 = alloca %"class.std::tuple"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %4, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  %9 = load %"class.std::tuple"*, %"class.std::tuple"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.14"* %8, %"class.std::tuple"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.14"*, %"class.std::tuple"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.523
  %7 = load i32, i32* @y.524
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 39265265, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 39265265, label %19
    i32 1236511733, label %27
    i32 -562541721, label %61
    i32 -235050598, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1236511733, i32 -235050598
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %29 = alloca %"class.std::tuple"*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %28, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %28, align 8
  %32 = load %"class.std::tuple"*, %"class.std::tuple"** %29, align 8
  %33 = bitcast %"class.std::tuple"* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.523
  %35 = load i32, i32* @y.524
  %36 = sub i32 %34, -65170694
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -65170694
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -562541721, i32 -235050598
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %64 = alloca %"class.std::tuple"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %63, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %63, align 8
  %67 = load %"class.std::tuple"*, %"class.std::tuple"** %64, align 8
  %68 = bitcast %"class.std::tuple"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 1236511733, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxxxEEED2Ev(%"class.std::allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  %3 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %4 = bitcast %"class.std::allocator.13"* %3 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEED2Ev(%"class.__gnu_cxx::new_allocator.14"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEED2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.7"*, %"class.std::vector.11"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.11"*
  %5 = alloca %"struct.std::_Vector_base.7"*
  %6 = alloca %"struct.std::_Vector_base.7"*, align 8
  %7 = alloca %"class.std::vector.11"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %6, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %6, align 8
  store %"struct.std::_Vector_base.7"* %9, %"struct.std::_Vector_base.7"** %5
  %10 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  store %"class.std::vector.11"* %10, %"class.std::vector.11"** %4
  %11 = alloca i32
  store i32 960091809, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 960091809, label %15
    i32 -521750153, label %19
    i32 952442401, label %25
    i32 1924808741, label %53
    i32 -469019617, label %68
    i32 1935953014, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %4
  %17 = icmp ne %"class.std::vector.11"* %16, null
  %18 = select i1 %17, i32 -521750153, i32 952442401
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %21 to %"class.std::allocator.8"*
  %23 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJxxxEESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.8"* dereferenceable(1) %22, %"class.std::vector.11"* %23, i64 %24)
  store i32 952442401, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.529
  %27 = load i32, i32* @y.530
  %28 = add i32 %26, 1462188899
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 1462188899
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 1924808741, i32 1935953014
  store i32 %52, i32* %11
  br label %70

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.529
  %55 = load i32, i32* @y.530
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -469019617, i32 1935953014
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 1924808741, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %53, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJxxxEESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.8"* dereferenceable(1), %"class.std::vector.11"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %4, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.9"* %8, %"class.std::vector.11"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJxxxEESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.9"*, %"class.std::vector.11"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %8 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %9 = bitcast %"class.std::vector.11"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE9constructIS1_JRxS5_RKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.13"* dereferenceable(1), %"class.std::tuple"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.13"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %6, align 8
  %12 = bitcast %"class.std::allocator.13"* %11 to %"class.__gnu_cxx::new_allocator.14"*
  %13 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %14 = load i64*, i64** %8, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %14) #3
  %16 = load i64*, i64** %9, align 8
  %17 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %16) #3
  %18 = load i64*, i64** %10, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE9constructIS2_JRxS5_RKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.14"* %12, %"class.std::tuple"* %13, i64* dereferenceable(8) %15, i64* dereferenceable(8) %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.537
  %6 = load i32, i32* @y.538
  %7 = add i32 %5, 1931833759
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1931833759
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1627873392, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1627873392, label %19
    i32 1076454405, label %27
    i32 747948319, label %56
    i32 1489802396, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1076454405, i32 1489802396
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.537
  %31 = load i32, i32* @y.538
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 747948319, i32 1489802396
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile i64*, i64** %2
  ret i64* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca i64*, align 8
  store i64* %0, i64** %59, align 8
  %60 = load i64*, i64** %59, align 8
  store i32 1076454405, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_RKxEEEvDpOT_(%"class.std::vector.11"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::tuple"*, align 8
  %11 = alloca %"class.std::tuple"*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %14 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %15 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.11"* %14, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %15, i64* %9, align 8
  %16 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %17 = load i64, i64* %9, align 8
  %18 = call %"class.std::tuple"* @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.12"* %16, i64 %17)
  store %"class.std::tuple"* %18, %"class.std::tuple"** %10, align 8
  %19 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  store %"class.std::tuple"* %19, %"class.std::tuple"** %11, align 8
  %20 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %21 to %"class.std::allocator.13"*
  %23 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %24 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv(%"class.std::vector.11"* %14) #3
  %25 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %23, i64 %24
  %26 = load i64*, i64** %6, align 8
  %27 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %26) #3
  %28 = load i64*, i64** %7, align 8
  %29 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %28) #3
  %30 = load i64*, i64** %8, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %30) #3
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE9constructIS1_JRxS5_RKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.13"* dereferenceable(1) %22, %"class.std::tuple"* %25, i64* dereferenceable(8) %27, i64* dereferenceable(8) %29, i64* dereferenceable(8) %31)
          to label %32 unwind label %48

; <label>:32:                                     ; preds = %4
  store %"class.std::tuple"* null, %"class.std::tuple"** %11, align 8
  %33 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::tuple"*, %"class.std::tuple"** %35, align 8
  %37 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"class.std::tuple"*, %"class.std::tuple"** %39, align 8
  %41 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %42 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %43 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %42) #3
  %44 = invoke %"class.std::tuple"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxxEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple"* %36, %"class.std::tuple"* %40, %"class.std::tuple"* %41, %"class.std::allocator.13"* dereferenceable(1) %43)
          to label %45 unwind label %48

; <label>:45:                                     ; preds = %32
  store %"class.std::tuple"* %44, %"class.std::tuple"** %11, align 8
  %46 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %47 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %46, i32 1
  store %"class.std::tuple"* %47, %"class.std::tuple"** %11, align 8
  br label %122

; <label>:48:                                     ; preds = %32, %4
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %12, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %13, align 4
  br label %52

; <label>:52:                                     ; preds = %48
  %53 = load i8*, i8** %12, align 8
  %54 = call i8* @__cxa_begin_catch(i8* %53) #3
  %55 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %56 = icmp ne %"class.std::tuple"* %55, null
  br i1 %56, label %69, label %57

; <label>:57:                                     ; preds = %52
  %58 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %59 to %"class.std::allocator.13"*
  %61 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %62 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv(%"class.std::vector.11"* %14) #3
  %63 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %61, i64 %62
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.13"* dereferenceable(1) %60, %"class.std::tuple"* %63)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %57
  br label %75

; <label>:65:                                     ; preds = %79, %75, %69, %57
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %12, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %80 unwind label %213

; <label>:69:                                     ; preds = %52
  %70 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %71 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %72 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %73 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %72) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"* %70, %"class.std::tuple"* %71, %"class.std::allocator.13"* dereferenceable(1) %73)
          to label %74 unwind label %65

; <label>:74:                                     ; preds = %69
  br label %75

; <label>:75:                                     ; preds = %74, %64
  %76 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %77 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %78 = load i64, i64* %9, align 8
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"* %76, %"class.std::tuple"* %77, i64 %78)
          to label %79 unwind label %65

; <label>:79:                                     ; preds = %75
  invoke void @__cxa_rethrow() #12
          to label %216 unwind label %65

; <label>:80:                                     ; preds = %65
  %81 = load i32, i32* @x.539
  %82 = load i32, i32* @y.540
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %217

; <label>:94:                                     ; preds = %80, %217
  %95 = load i32, i32* @x.539
  %96 = load i32, i32* @y.540
  %97 = sub i32 %95, 1135897609
  %98 = sub i32 %97, 1
  %99 = add i32 %98, 1135897609
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %217

; <label>:121:                                    ; preds = %94
  br label %167

; <label>:122:                                    ; preds = %45
  %123 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %124 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %123, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %124, i32 0, i32 0
  %126 = load %"class.std::tuple"*, %"class.std::tuple"** %125, align 8
  %127 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %127, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %128, i32 0, i32 1
  %130 = load %"class.std::tuple"*, %"class.std::tuple"** %129, align 8
  %131 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %132 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %131) #3
  call void @_ZSt8_DestroyIPSt5tupleIJxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"* %126, %"class.std::tuple"* %130, %"class.std::allocator.13"* dereferenceable(1) %132)
  %133 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %134 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %135, i32 0, i32 0
  %137 = load %"class.std::tuple"*, %"class.std::tuple"** %136, align 8
  %138 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %139 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %138, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %139, i32 0, i32 2
  %141 = load %"class.std::tuple"*, %"class.std::tuple"** %140, align 8
  %142 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %143, i32 0, i32 0
  %145 = load %"class.std::tuple"*, %"class.std::tuple"** %144, align 8
  %146 = ptrtoint %"class.std::tuple"* %141 to i64
  %147 = ptrtoint %"class.std::tuple"* %145 to i64
  %148 = sub i64 %146, -1842855175641371403
  %149 = sub i64 %148, %147
  %150 = add i64 %149, -1842855175641371403
  %151 = sub i64 %146, %147
  %152 = sdiv exact i64 %150, 24
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.12"* %133, %"class.std::tuple"* %137, i64 %152)
  %153 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %154 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %155 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %155, i32 0, i32 0
  store %"class.std::tuple"* %153, %"class.std::tuple"** %156, align 8
  %157 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %158 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %159 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %159, i32 0, i32 1
  store %"class.std::tuple"* %157, %"class.std::tuple"** %160, align 8
  %161 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %162 = load i64, i64* %9, align 8
  %163 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %161, i64 %162
  %164 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.12"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %165, i32 0, i32 2
  store %"class.std::tuple"* %163, %"class.std::tuple"** %166, align 8
  ret void

; <label>:167:                                    ; preds = %121
  %168 = load i32, i32* @x.539
  %169 = load i32, i32* @y.540
  %170 = sub i32 %168, 574993455
  %171 = sub i32 %170, 1
  %172 = add i32 %171, 574993455
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %218

; <label>:194:                                    ; preds = %167, %218
  %195 = load i8*, i8** %12, align 8
  %196 = load i32, i32* %13, align 4
  %197 = insertvalue { i8*, i32 } undef, i8* %195, 0
  %198 = insertvalue { i8*, i32 } %197, i32 %196, 1
  %199 = load i32, i32* @x.539
  %200 = load i32, i32* @y.540
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %218

; <label>:212:                                    ; preds = %194
  resume { i8*, i32 } %198

; <label>:213:                                    ; preds = %65
  %214 = landingpad { i8*, i32 }
          catch i8* null
  %215 = extractvalue { i8*, i32 } %214, 0
  call void @__clang_call_terminate(i8* %215) #11
  unreachable

; <label>:216:                                    ; preds = %79
  unreachable

; <label>:217:                                    ; preds = %94, %80
  br label %94

; <label>:218:                                    ; preds = %194, %167
  %219 = load i8*, i8** %12, align 8
  %220 = load i32, i32* %13, align 4
  %221 = insertvalue { i8*, i32 } undef, i8* %219, 0
  %222 = insertvalue { i8*, i32 } %221, i32 %220, 1
  br label %194
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE9constructIS2_JRxS5_RKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.14"*, %"class.std::tuple"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  %12 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %13 = bitcast %"class.std::tuple"* %12 to i8*
  %14 = bitcast i8* %13 to %"class.std::tuple"*
  %15 = load i64*, i64** %8, align 8
  %16 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %15) #3
  %17 = load i64*, i64** %9, align 8
  %18 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %17) #3
  %19 = load i64*, i64** %10, align 8
  %20 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %19) #3
  call void @_ZNSt5tupleIJxxxEEC2IJRxS2_RKxEvEEDpOT_(%"class.std::tuple"* %14, i64* dereferenceable(8) %16, i64* dereferenceable(8) %18, i64* dereferenceable(8) %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJxxxEEC2IJRxS2_RKxEvEEDpOT_(%"class.std::tuple"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.543
  %8 = load i32, i32* @y.544
  %9 = sub i32 %7, -2051795
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -2051795
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1531771563, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1531771563, label %21
    i32 530828822, label %29
    i32 -1023654266, label %69
    i32 891737190, label %70
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 530828822, i32 891737190
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::tuple"*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i64*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64* %2, i64** %32, align 8
  store i64* %3, i64** %33, align 8
  %34 = load %"class.std::tuple"*, %"class.std::tuple"** %30, align 8
  %35 = bitcast %"class.std::tuple"* %34 to %"struct.std::_Tuple_impl"*
  %36 = load i64*, i64** %31, align 8
  %37 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %36) #3
  %38 = load i64*, i64** %32, align 8
  %39 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %38) #3
  %40 = load i64*, i64** %33, align 8
  %41 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %40) #3
  call void @_ZNSt11_Tuple_implILm0EJxxxEEC2IRxJS2_RKxEvEEOT_DpOT0_(%"struct.std::_Tuple_impl"* %35, i64* dereferenceable(8) %37, i64* dereferenceable(8) %39, i64* dereferenceable(8) %41)
  %42 = load i32, i32* @x.543
  %43 = load i32, i32* @y.544
  %44 = sub i32 %42, 1197402433
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1197402433
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1023654266, i32 891737190
  store i32 %68, i32* %17
  br label %83

; <label>:69:                                     ; preds = %18
  ret void

; <label>:70:                                     ; preds = %18
  %71 = alloca %"class.std::tuple"*, align 8
  %72 = alloca i64*, align 8
  %73 = alloca i64*, align 8
  %74 = alloca i64*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %71, align 8
  store i64* %1, i64** %72, align 8
  store i64* %2, i64** %73, align 8
  store i64* %3, i64** %74, align 8
  %75 = load %"class.std::tuple"*, %"class.std::tuple"** %71, align 8
  %76 = bitcast %"class.std::tuple"* %75 to %"struct.std::_Tuple_impl"*
  %77 = load i64*, i64** %72, align 8
  %78 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %77) #3
  %79 = load i64*, i64** %73, align 8
  %80 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %79) #3
  %81 = load i64*, i64** %74, align 8
  %82 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %81) #3
  call void @_ZNSt11_Tuple_implILm0EJxxxEEC2IRxJS2_RKxEvEEOT_DpOT0_(%"struct.std::_Tuple_impl"* %76, i64* dereferenceable(8) %78, i64* dereferenceable(8) %80, i64* dereferenceable(8) %82)
  store i32 530828822, i32* %17
  br label %83

; <label>:83:                                     ; preds = %70, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxxxEEC2IRxJS2_RKxEvEEOT_DpOT0_(%"struct.std::_Tuple_impl"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl"* %9 to %"struct.std::_Tuple_impl.16"*
  %11 = load i64*, i64** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64*, i64** %8, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %13) #3
  call void @_ZNSt11_Tuple_implILm1EJxxEEC2IRxJRKxEvEEOT_DpOT0_(%"struct.std::_Tuple_impl.16"* %10, i64* dereferenceable(8) %12, i64* dereferenceable(8) %14)
  %15 = bitcast %"struct.std::_Tuple_impl"* %9 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %"struct.std::_Head_base.19"*
  %18 = load i64*, i64** %6, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.19"* %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJxxEEC2IRxJRKxEvEEOT_DpOT0_(%"struct.std::_Tuple_impl.16"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.547
  %7 = load i32, i32* @y.548
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 217765982, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %93
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 217765982, label %19
    i32 -1261522496, label %39
    i32 -1145306234, label %79
    i32 -212089995, label %80
  ]

; <label>:18:                                     ; preds = %16
  br label %93

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1261522496, i32 -212089995
  store i32 %38, i32* %15
  br label %93

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.16"* %0, %"struct.std::_Tuple_impl.16"** %40, align 8
  store i64* %1, i64** %41, align 8
  store i64* %2, i64** %42, align 8
  %43 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %40, align 8
  %44 = bitcast %"struct.std::_Tuple_impl.16"* %43 to %"struct.std::_Tuple_impl.17"*
  %45 = load i64*, i64** %42, align 8
  %46 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %45) #3
  call void @_ZNSt11_Tuple_implILm2EJxEEC2ERKx(%"struct.std::_Tuple_impl.17"* %44, i64* dereferenceable(8) %46)
  %47 = bitcast %"struct.std::_Tuple_impl.16"* %43 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to %"struct.std::_Head_base.18"*
  %50 = load i64*, i64** %41, align 8
  %51 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %50) #3
  call void @_ZNSt10_Head_baseILm1ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.18"* %49, i64* dereferenceable(8) %51)
  %52 = load i32, i32* @x.547
  %53 = load i32, i32* @y.548
  %54 = add i32 %52, 1321110105
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1321110105
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1145306234, i32 -212089995
  store i32 %78, i32* %15
  br label %93

; <label>:79:                                     ; preds = %16
  ret void

; <label>:80:                                     ; preds = %16
  %81 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  %82 = alloca i64*, align 8
  %83 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.16"* %0, %"struct.std::_Tuple_impl.16"** %81, align 8
  store i64* %1, i64** %82, align 8
  store i64* %2, i64** %83, align 8
  %84 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %81, align 8
  %85 = bitcast %"struct.std::_Tuple_impl.16"* %84 to %"struct.std::_Tuple_impl.17"*
  %86 = load i64*, i64** %83, align 8
  %87 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %86) #3
  call void @_ZNSt11_Tuple_implILm2EJxEEC2ERKx(%"struct.std::_Tuple_impl.17"* %85, i64* dereferenceable(8) %87)
  %88 = bitcast %"struct.std::_Tuple_impl.16"* %84 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = bitcast i8* %89 to %"struct.std::_Head_base.18"*
  %91 = load i64*, i64** %82, align 8
  %92 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %91) #3
  call void @_ZNSt10_Head_baseILm1ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.18"* %90, i64* dereferenceable(8) %92)
  store i32 -1261522496, i32* %15
  br label %93

; <label>:93:                                     ; preds = %80, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJxEEC2ERKx(%"struct.std::_Tuple_impl.17"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.17"* %0, %"struct.std::_Tuple_impl.17"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.17"* %5 to %"struct.std::_Head_base"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt10_Head_baseILm2ExLb0EEC2ERKx(%"struct.std::_Head_base"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm2ExLb0EEC2ERKx(%"struct.std::_Head_base"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.11"*
  %8 = alloca %"class.std::vector.11"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.11"*, %"class.std::vector.11"** %8, align 8
  store %"class.std::vector.11"* %13, %"class.std::vector.11"** %7
  %14 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %15 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %14) #3
  %16 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %17 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv(%"class.std::vector.11"* %16) #3
  %18 = sub i64 %15, -204085705386639996
  %19 = sub i64 %18, %17
  %20 = add i64 %19, -204085705386639996
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 1704532035, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %167
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1704532035, label %28
    i32 -712151578, label %33
    i32 -1711712781, label %61
    i32 1311583900, label %77
    i32 1128668620, label %78
    i32 555698768, label %93
    i32 1850845313, label %99
    i32 689711004, label %102
    i32 -1152184795, label %130
    i32 1174672318, label %159
    i32 1552379147, label %161
    i32 -1705880987, label %163
    i32 975885791, label %165
  ]

; <label>:27:                                     ; preds = %25
  br label %167

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -712151578, i32 1128668620
  store i32 %32, i32* %23
  br label %167

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.553
  %35 = load i32, i32* @y.554
  %36 = sub i32 %34, 1359567488
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1359567488
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1711712781, i32 -1705880987
  store i32 %60, i32* %23
  br label %167

; <label>:61:                                     ; preds = %25
  %62 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %62) #12
  %63 = load i32, i32* @x.553
  %64 = load i32, i32* @y.554
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 1311583900, i32 -1705880987
  store i32 %76, i32* %23
  br label %167

; <label>:77:                                     ; preds = %25
  unreachable

; <label>:78:                                     ; preds = %25
  %79 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %80 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv(%"class.std::vector.11"* %79) #3
  %81 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %82 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv(%"class.std::vector.11"* %81) #3
  store i64 %82, i64* %12, align 8
  %83 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 0, %84
  %86 = sub i64 %80, %85
  %87 = add i64 %80, %84
  store i64 %86, i64* %11, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %90 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv(%"class.std::vector.11"* %89) #3
  %91 = icmp ult i64 %88, %90
  %92 = select i1 %91, i32 1850845313, i32 555698768
  store i32 %92, i32* %23
  br label %167

; <label>:93:                                     ; preds = %25
  %94 = load i64, i64* %11, align 8
  %95 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %96 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %95) #3
  %97 = icmp ugt i64 %94, %96
  %98 = select i1 %97, i32 1850845313, i32 689711004
  store i32 %98, i32* %23
  br label %167

; <label>:99:                                     ; preds = %25
  %100 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %101 = call i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.11"* %100) #3
  store i32 1552379147, i32* %23
  store i64 %101, i64* %24
  br label %167

; <label>:102:                                    ; preds = %25
  %103 = load i32, i32* @x.553
  %104 = load i32, i32* @y.554
  %105 = sub i32 %103, -1097012811
  %106 = sub i32 %105, 1
  %107 = add i32 %106, -1097012811
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 -1152184795, i32 975885791
  store i32 %129, i32* %23
  br label %167

; <label>:130:                                    ; preds = %25
  %131 = load i64, i64* %11, align 8
  store i64 %131, i64* %4
  %132 = load i32, i32* @x.553
  %133 = load i32, i32* @y.554
  %134 = add i32 %132, -55608453
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -55608453
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 false, true
  %145 = and i1 %142, false
  %146 = and i1 %140, %144
  %147 = and i1 %143, false
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 false, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  %158 = select i1 %156, i32 1174672318, i32 975885791
  store i32 %158, i32* %23
  br label %167

; <label>:159:                                    ; preds = %25
  store i32 1552379147, i32* %23
  %160 = load volatile i64, i64* %4
  store i64 %160, i64* %24
  br label %167

; <label>:161:                                    ; preds = %25
  %162 = load i64, i64* %24
  ret i64 %162

; <label>:163:                                    ; preds = %25
  %164 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %164) #12
  store i32 -1711712781, i32* %23
  br label %167

; <label>:165:                                    ; preds = %25
  %166 = load i64, i64* %11, align 8
  store i32 -1152184795, i32* %23
  br label %167

; <label>:167:                                    ; preds = %165, %163, %159, %130, %102, %99, %93, %78, %61, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.12"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.12"*
  %5 = alloca %"struct.std::_Vector_base.12"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %5, align 8
  store %"struct.std::_Vector_base.12"* %7, %"struct.std::_Vector_base.12"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 423778733, i32* %9
  %10 = alloca %"class.std::tuple"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 423778733, label %14
    i32 -1244105185, label %18
    i32 562702587, label %24
    i32 -1117197469, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1244105185, i32 562702587
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %20 to %"class.std::allocator.13"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::tuple"* @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE8allocateERS2_m(%"class.std::allocator.13"* dereferenceable(1) %21, i64 %22)
  store i32 -1117197469, i32* %9
  store %"class.std::tuple"* %23, %"class.std::tuple"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -1117197469, i32* %9
  store %"class.std::tuple"* null, %"class.std::tuple"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::tuple"*, %"class.std::tuple"** %10
  ret %"class.std::tuple"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE4sizeEv(%"class.std::vector.11"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.557
  %6 = load i32, i32* @y.558
  %7 = add i32 %5, -127183689
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -127183689
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2110274197, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %130
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2110274197, label %19
    i32 1472600957, label %39
    i32 880717504, label %71
    i32 1077441762, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %130

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1472600957, i32 1077441762
  store i32 %38, i32* %15
  br label %130

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %40, align 8
  %41 = load %"class.std::vector.11"*, %"class.std::vector.11"** %40, align 8
  %42 = bitcast %"class.std::vector.11"* %41 to %"struct.std::_Vector_base.12"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load %"class.std::tuple"*, %"class.std::tuple"** %44, align 8
  %46 = bitcast %"class.std::vector.11"* %41 to %"struct.std::_Vector_base.12"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::tuple"*, %"class.std::tuple"** %48, align 8
  %50 = ptrtoint %"class.std::tuple"* %45 to i64
  %51 = ptrtoint %"class.std::tuple"* %49 to i64
  %52 = sub i64 0, %51
  %53 = add i64 %50, %52
  %54 = sub i64 %50, %51
  %55 = sdiv exact i64 %53, 24
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.557
  %57 = load i32, i32* @y.558
  %58 = sub i32 %56, 516566219
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 516566219
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 880717504, i32 1077441762
  store i32 %70, i32* %15
  br label %130

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %74, align 8
  %75 = load %"class.std::vector.11"*, %"class.std::vector.11"** %74, align 8
  %76 = bitcast %"class.std::vector.11"* %75 to %"struct.std::_Vector_base.12"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load %"class.std::tuple"*, %"class.std::tuple"** %78, align 8
  %80 = bitcast %"class.std::vector.11"* %75 to %"struct.std::_Vector_base.12"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load %"class.std::tuple"*, %"class.std::tuple"** %82, align 8
  %84 = ptrtoint %"class.std::tuple"* %79 to i64
  %85 = ptrtoint %"class.std::tuple"* %83 to i64
  %86 = sub i64 0, 4372522026142420913
  %87 = sub i64 %86, %84
  %88 = add i64 %87, 4372522026142420913
  %89 = sub i64 0, %84
  %90 = sub i64 0, %88
  %91 = sub i64 0, %85
  %92 = add i64 %90, %91
  %93 = sub i64 0, %92
  %94 = add i64 %88, %85
  %95 = add i64 %84, 1039667136638979073
  %96 = sub i64 %95, %85
  %97 = sub i64 %96, 1039667136638979073
  %98 = sub i64 %84, %85
  %99 = mul i64 %97, %85
  %100 = sub i64 %84, 1680000328004778402
  %101 = sub i64 %100, %85
  %102 = add i64 %101, 1680000328004778402
  %103 = sub i64 %84, %85
  %104 = mul i64 %102, %85
  %105 = add i64 %84, 6960437229694880516
  %106 = sub i64 %105, %85
  %107 = sub i64 %106, 6960437229694880516
  %108 = sub i64 %84, %85
  %109 = mul i64 %107, %85
  %110 = shl i64 %84, %85
  %111 = add i64 0, 2872135151227278748
  %112 = sub i64 %111, %84
  %113 = sub i64 %112, 2872135151227278748
  %114 = sub i64 0, %84
  %115 = sub i64 0, %113
  %116 = sub i64 0, %85
  %117 = add i64 %115, %116
  %118 = sub i64 0, %117
  %119 = add i64 %113, %85
  %120 = add i64 %84, -1604880494604799409
  %121 = sub i64 %120, %85
  %122 = sub i64 %121, -1604880494604799409
  %123 = sub i64 %84, %85
  %124 = add i64 %122, -4824228134057683507
  %125 = sub i64 %124, 24
  %126 = sub i64 %125, -4824228134057683507
  %127 = sub i64 %122, 24
  %128 = mul i64 %126, 24
  %129 = sdiv exact i64 %122, 24
  store i32 1472600957, i32* %15
  br label %130

; <label>:130:                                    ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxxEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::tuple"*, align 8
  %6 = alloca %"class.std::tuple"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  %9 = alloca %"class.std::move_iterator.53", align 8
  %10 = alloca %"class.std::move_iterator.53", align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %5, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %6, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %5, align 8
  %12 = call %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %9, i32 0, i32 0
  store %"class.std::tuple"* %12, %"class.std::tuple"** %13, align 8
  %14 = load %"class.std::tuple"*, %"class.std::tuple"** %6, align 8
  %15 = call %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %10, i32 0, i32 0
  store %"class.std::tuple"* %15, %"class.std::tuple"** %16, align 8
  %17 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %18 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %9, i32 0, i32 0
  %20 = load %"class.std::tuple"*, %"class.std::tuple"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %10, i32 0, i32 0
  %22 = load %"class.std::tuple"*, %"class.std::tuple"** %21, align 8
  %23 = call %"class.std::tuple"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple"* %20, %"class.std::tuple"* %22, %"class.std::tuple"* %17, %"class.std::allocator.13"* dereferenceable(1) %18)
  ret %"class.std::tuple"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.13"* dereferenceable(1), %"class.std::tuple"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.14"* %6, %"class.std::tuple"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.11"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to %"struct.std::_Vector_base.12"*
  %5 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE8max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE8max_sizeERKS2_(%"class.std::allocator.13"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.565
  %6 = load i32, i32* @y.566
  %7 = sub i32 %5, -659066158
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -659066158
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -778293437, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -778293437, label %19
    i32 538067592, label %39
    i32 662871666, label %59
    i32 1627369266, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 538067592, i32 1627369266
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %40, align 8
  %41 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %40, align 8
  %42 = bitcast %"class.std::allocator.13"* %41 to %"class.__gnu_cxx::new_allocator.14"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.565
  %45 = load i32, i32* @y.566
  %46 = add i32 %44, -1336395928
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1336395928
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 662871666, i32 1627369266
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %62, align 8
  %63 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %62, align 8
  %64 = bitcast %"class.std::allocator.13"* %63 to %"class.__gnu_cxx::new_allocator.14"*
  %65 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %64) #3
  store i32 538067592, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNKSt12_Vector_baseISt5tupleIJxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %3 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.569
  %5 = load i32, i32* @y.570
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 969446996, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 969446996, label %17
    i32 -1079657679, label %37
    i32 332476411, label %54
    i32 -1117528696, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1079657679, i32 -1117528696
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %38, align 8
  %40 = load i32, i32* @x.569
  %41 = load i32, i32* @y.570
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 332476411, i32 -1117528696
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret i64 768614336404564650

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %56, align 8
  store i32 -1079657679, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt16allocator_traitsISaISt5tupleIJxxxEEEE8allocateERS2_m(%"class.std::allocator.13"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::tuple"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %6, i64 %7, i8* null)
  ret %"class.std::tuple"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1152916142, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %83
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1152916142, label %16
    i32 1951667448, label %21
    i32 -2100650883, label %49
    i32 -1517944563, label %76
    i32 1902014415, label %77
    i32 -1027161768, label %82
  ]

; <label>:15:                                     ; preds = %13
  br label %83

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1951667448, i32 1902014415
  store i32 %20, i32* %12
  br label %83

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.573
  %23 = load i32, i32* @y.574
  %24 = add i32 %22, 2124966538
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 2124966538
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -2100650883, i32 -1027161768
  store i32 %48, i32* %12
  br label %83

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %50 = load i32, i32* @x.573
  %51 = load i32, i32* @y.574
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1517944563, i32 -1027161768
  store i32 %75, i32* %12
  br label %83

; <label>:76:                                     ; preds = %13
  unreachable

; <label>:77:                                     ; preds = %13
  %78 = load i64, i64* %7, align 8
  %79 = mul i64 %78, 24
  %80 = call i8* @_Znwm(i64 %79)
  %81 = bitcast i8* %80 to %"class.std::tuple"*
  ret %"class.std::tuple"* %81

; <label>:82:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -2100650883, i32* %12
  br label %83

; <label>:83:                                     ; preds = %82, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.53", align 8
  %6 = alloca %"class.std::move_iterator.53", align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  %9 = alloca %"class.std::move_iterator.53", align 8
  %10 = alloca %"class.std::move_iterator.53", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %5, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %6, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %12, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.53"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.53"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.53"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.53"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %9, i32 0, i32 0
  %19 = load %"class.std::tuple"*, %"class.std::tuple"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %10, i32 0, i32 0
  %21 = load %"class.std::tuple"*, %"class.std::tuple"** %20, align 8
  %22 = call %"class.std::tuple"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxxEEES3_ET0_T_S6_S5_(%"class.std::tuple"* %19, %"class.std::tuple"* %21, %"class.std::tuple"* %17)
  ret %"class.std::tuple"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.53", align 8
  %3 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  %4 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt5tupleIJxxxEEEC2ES2_(%"class.std::move_iterator.53"* %2, %"class.std::tuple"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %2, i32 0, i32 0
  %6 = load %"class.std::tuple"*, %"class.std::tuple"** %5, align 8
  ret %"class.std::tuple"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxxEEES3_ET0_T_S6_S5_(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*) #0 comdat {
  %4 = alloca %"class.std::tuple"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.579
  %8 = load i32, i32* @y.580
  %9 = sub i32 %7, 150094130
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 150094130
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1711536619, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1711536619, label %21
    i32 -334452703, label %29
    i32 -534233431, label %63
    i32 1368418497, label %65
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -334452703, i32 1368418497
  store i32 %28, i32* %17
  br label %84

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.53", align 8
  %31 = alloca %"class.std::move_iterator.53", align 8
  %32 = alloca %"class.std::tuple"*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator.53", align 8
  %35 = alloca %"class.std::move_iterator.53", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %30, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %31, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %37, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator.53"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator.53"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator.53"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator.53"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"class.std::tuple"*, %"class.std::tuple"** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %34, i32 0, i32 0
  %44 = load %"class.std::tuple"*, %"class.std::tuple"** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %35, i32 0, i32 0
  %46 = load %"class.std::tuple"*, %"class.std::tuple"** %45, align 8
  %47 = call %"class.std::tuple"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxEEES5_EET0_T_S8_S7_(%"class.std::tuple"* %44, %"class.std::tuple"* %46, %"class.std::tuple"* %42)
  store %"class.std::tuple"* %47, %"class.std::tuple"** %4
  %48 = load i32, i32* @x.579
  %49 = load i32, i32* @y.580
  %50 = add i32 %48, 1582833592
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1582833592
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -534233431, i32 1368418497
  store i32 %62, i32* %17
  br label %84

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %4
  ret %"class.std::tuple"* %64

; <label>:65:                                     ; preds = %18
  %66 = alloca %"class.std::move_iterator.53", align 8
  %67 = alloca %"class.std::move_iterator.53", align 8
  %68 = alloca %"class.std::tuple"*, align 8
  %69 = alloca i8, align 1
  %70 = alloca %"class.std::move_iterator.53", align 8
  %71 = alloca %"class.std::move_iterator.53", align 8
  %72 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %66, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %72, align 8
  %73 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %67, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %73, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %68, align 8
  store i8 1, i8* %69, align 1
  %74 = bitcast %"class.std::move_iterator.53"* %70 to i8*
  %75 = bitcast %"class.std::move_iterator.53"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = bitcast %"class.std::move_iterator.53"* %71 to i8*
  %77 = bitcast %"class.std::move_iterator.53"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 8, i1 false)
  %78 = load %"class.std::tuple"*, %"class.std::tuple"** %68, align 8
  %79 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %70, i32 0, i32 0
  %80 = load %"class.std::tuple"*, %"class.std::tuple"** %79, align 8
  %81 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %71, i32 0, i32 0
  %82 = load %"class.std::tuple"*, %"class.std::tuple"** %81, align 8
  %83 = call %"class.std::tuple"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxEEES5_EET0_T_S8_S7_(%"class.std::tuple"* %80, %"class.std::tuple"* %82, %"class.std::tuple"* %78)
  store i32 -334452703, i32* %17
  br label %84

; <label>:84:                                     ; preds = %65, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxEEES5_EET0_T_S8_S7_(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.581
  %5 = load i32, i32* @y.582
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %137

; <label>:17:                                     ; preds = %3, %137
  %18 = alloca %"class.std::move_iterator.53", align 8
  %19 = alloca %"class.std::move_iterator.53", align 8
  %20 = alloca %"class.std::tuple"*, align 8
  %21 = alloca %"class.std::tuple"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  %24 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %18, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %24, align 8
  %25 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %19, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %25, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %20, align 8
  %26 = load %"class.std::tuple"*, %"class.std::tuple"** %20, align 8
  store %"class.std::tuple"* %26, %"class.std::tuple"** %21, align 8
  %27 = load i32, i32* @x.581
  %28 = load i32, i32* @y.582
  %29 = sub i32 %27, -2122729970
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -2122729970
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %137

; <label>:53:                                     ; preds = %17
  br label %54

; <label>:54:                                     ; preds = %107, %53
  %55 = invoke zeroext i1 @_ZStneIPSt5tupleIJxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.53"* dereferenceable(8) %18, %"class.std::move_iterator.53"* dereferenceable(8) %19)
          to label %56 unwind label %110

; <label>:56:                                     ; preds = %54
  %57 = load i32, i32* @x.581
  %58 = load i32, i32* @y.582
  %59 = sub i32 %57, -1468089017
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -1468089017
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %147

; <label>:71:                                     ; preds = %56, %147
  %72 = load i32, i32* @x.581
  %73 = load i32, i32* @y.582
  %74 = sub i32 %72, -2099138835
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -2099138835
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %147

; <label>:98:                                     ; preds = %71
  br i1 %55, label %99, label %120

; <label>:99:                                     ; preds = %98
  %100 = load %"class.std::tuple"*, %"class.std::tuple"** %21, align 8
  %101 = call %"class.std::tuple"* @_ZSt11__addressofISt5tupleIJxxxEEEPT_RS2_(%"class.std::tuple"* dereferenceable(24) %100) #3
  %102 = invoke dereferenceable(24) %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxEEEdeEv(%"class.std::move_iterator.53"* %18)
          to label %103 unwind label %110

; <label>:103:                                    ; preds = %99
  invoke void @_ZSt10_ConstructISt5tupleIJxxxEEJS1_EEvPT_DpOT0_(%"class.std::tuple"* %101, %"class.std::tuple"* dereferenceable(24) %102)
          to label %104 unwind label %110

; <label>:104:                                    ; preds = %103
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = invoke dereferenceable(8) %"class.std::move_iterator.53"* @_ZNSt13move_iteratorIPSt5tupleIJxxxEEEppEv(%"class.std::move_iterator.53"* %18)
          to label %107 unwind label %110

; <label>:107:                                    ; preds = %105
  %108 = load %"class.std::tuple"*, %"class.std::tuple"** %21, align 8
  %109 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %108, i32 1
  store %"class.std::tuple"* %109, %"class.std::tuple"** %21, align 8
  br label %54

; <label>:110:                                    ; preds = %105, %103, %99, %54
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %22, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %23, align 4
  br label %114

; <label>:114:                                    ; preds = %110
  %115 = load i8*, i8** %22, align 8
  %116 = call i8* @__cxa_begin_catch(i8* %115) #3
  %117 = load %"class.std::tuple"*, %"class.std::tuple"** %20, align 8
  %118 = load %"class.std::tuple"*, %"class.std::tuple"** %21, align 8
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxxEEEvT_S3_(%"class.std::tuple"* %117, %"class.std::tuple"* %118)
          to label %119 unwind label %122

; <label>:119:                                    ; preds = %114
  invoke void @__cxa_rethrow() #12
          to label %136 unwind label %122

; <label>:120:                                    ; preds = %98
  %121 = load %"class.std::tuple"*, %"class.std::tuple"** %21, align 8
  ret %"class.std::tuple"* %121

; <label>:122:                                    ; preds = %119, %114
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %22, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %23, align 4
  invoke void @__cxa_end_catch()
          to label %126 unwind label %133

; <label>:126:                                    ; preds = %122
  br label %128
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:128:                                    ; preds = %126
  %129 = load i8*, i8** %22, align 8
  %130 = load i32, i32* %23, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  resume { i8*, i32 } %132

; <label>:133:                                    ; preds = %122
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  call void @__clang_call_terminate(i8* %135) #11
  unreachable

; <label>:136:                                    ; preds = %119
  unreachable

; <label>:137:                                    ; preds = %17, %3
  %138 = alloca %"class.std::move_iterator.53", align 8
  %139 = alloca %"class.std::move_iterator.53", align 8
  %140 = alloca %"class.std::tuple"*, align 8
  %141 = alloca %"class.std::tuple"*, align 8
  %142 = alloca i8*
  %143 = alloca i32
  %144 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %138, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %144, align 8
  %145 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %139, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %145, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %140, align 8
  %146 = load %"class.std::tuple"*, %"class.std::tuple"** %140, align 8
  store %"class.std::tuple"* %146, %"class.std::tuple"** %141, align 8
  br label %17

; <label>:147:                                    ; preds = %71, %56
  br label %71
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt5tupleIJxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.53"* dereferenceable(8), %"class.std::move_iterator.53"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.53"*, align 8
  %4 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %3, align 8
  store %"class.std::move_iterator.53"* %1, %"class.std::move_iterator.53"** %4, align 8
  %5 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %3, align 8
  %6 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt5tupleIJxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.53"* dereferenceable(8) %5, %"class.std::move_iterator.53"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt5tupleIJxxxEEJS1_EEvPT_DpOT0_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(24)) #4 comdat {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::tuple"*
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJxxxEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple"* dereferenceable(24) %8) #3
  call void @_ZNSt5tupleIJxxxEEC2EOS0_(%"class.std::tuple"* %7, %"class.std::tuple"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt11__addressofISt5tupleIJxxxEEEPT_RS2_(%"class.std::tuple"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::tuple"*
  ret %"class.std::tuple"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxEEEdeEv(%"class.std::move_iterator.53"*) #4 comdat align 2 {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.589
  %6 = load i32, i32* @y.590
  %7 = add i32 %5, -549233973
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -549233973
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -363692554, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -363692554, label %19
    i32 1404139876, label %27
    i32 330573200, label %59
    i32 -665230221, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1404139876, i32 -665230221
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %28, align 8
  %29 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %29, i32 0, i32 0
  %31 = load %"class.std::tuple"*, %"class.std::tuple"** %30, align 8
  store %"class.std::tuple"* %31, %"class.std::tuple"** %2
  %32 = load i32, i32* @x.589
  %33 = load i32, i32* @y.590
  %34 = add i32 %32, -1527784134
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1527784134
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 330573200, i32 -665230221
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %62, align 8
  %63 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %63, i32 0, i32 0
  %65 = load %"class.std::tuple"*, %"class.std::tuple"** %64, align 8
  store i32 1404139876, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.53"* @_ZNSt13move_iteratorIPSt5tupleIJxxxEEEppEv(%"class.std::move_iterator.53"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.53"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.591
  %6 = load i32, i32* @y.592
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2104292870, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2104292870, label %18
    i32 310635238, label %26
    i32 -536505929, label %48
    i32 2077121317, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 310635238, i32 2077121317
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %27, align 8
  %28 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %27, align 8
  store %"class.std::move_iterator.53"* %28, %"class.std::move_iterator.53"** %2
  %29 = load volatile %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %2
  %30 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %29, i32 0, i32 0
  %31 = load %"class.std::tuple"*, %"class.std::tuple"** %30, align 8
  %32 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %31, i32 1
  store %"class.std::tuple"* %32, %"class.std::tuple"** %30, align 8
  %33 = load i32, i32* @x.591
  %34 = load i32, i32* @y.592
  %35 = add i32 %33, -1321457435
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1321457435
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -536505929, i32 2077121317
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  %49 = load volatile %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %2
  ret %"class.std::move_iterator.53"* %49

; <label>:50:                                     ; preds = %15
  %51 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %51, align 8
  %52 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %51, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %52, i32 0, i32 0
  %54 = load %"class.std::tuple"*, %"class.std::tuple"** %53, align 8
  %55 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %54, i32 1
  store %"class.std::tuple"* %55, %"class.std::tuple"** %53, align 8
  store i32 310635238, i32* %14
  br label %56

; <label>:56:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt5tupleIJxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.53"* dereferenceable(8), %"class.std::move_iterator.53"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.53"*, align 8
  %4 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %3, align 8
  store %"class.std::move_iterator.53"* %1, %"class.std::move_iterator.53"** %4, align 8
  %5 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %3, align 8
  %6 = call %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxEEE4baseEv(%"class.std::move_iterator.53"* %5)
  %7 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %4, align 8
  %8 = call %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxEEE4baseEv(%"class.std::move_iterator.53"* %7)
  %9 = icmp eq %"class.std::tuple"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxEEE4baseEv(%"class.std::move_iterator.53"*) #4 comdat align 2 {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.595
  %6 = load i32, i32* @y.596
  %7 = add i32 %5, -1398958886
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1398958886
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1953856871, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1953856871, label %19
    i32 1175844978, label %27
    i32 1867576281, label %58
    i32 -831774601, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1175844978, i32 -831774601
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %28, align 8
  %29 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %29, i32 0, i32 0
  %31 = load %"class.std::tuple"*, %"class.std::tuple"** %30, align 8
  store %"class.std::tuple"* %31, %"class.std::tuple"** %2
  %32 = load i32, i32* @x.595
  %33 = load i32, i32* @y.596
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1867576281, i32 -831774601
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator.53"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %61, align 8
  %62 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %62, i32 0, i32 0
  %64 = load %"class.std::tuple"*, %"class.std::tuple"** %63, align 8
  store i32 1175844978, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJxxxEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  ret %"class.std::tuple"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJxxxEEC2EOS0_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.599
  %6 = load i32, i32* @y.600
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 349299832, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 349299832, label %18
    i32 1855634147, label %38
    i32 -18833596, label %60
    i32 281162378, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1855634147, i32 281162378
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::tuple"*, align 8
  %40 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %39, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %40, align 8
  %41 = load %"class.std::tuple"*, %"class.std::tuple"** %39, align 8
  %42 = bitcast %"class.std::tuple"* %41 to %"struct.std::_Tuple_impl"*
  %43 = load %"class.std::tuple"*, %"class.std::tuple"** %40, align 8
  %44 = bitcast %"class.std::tuple"* %43 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJxxxEEC2EOS0_(%"struct.std::_Tuple_impl"* %42, %"struct.std::_Tuple_impl"* dereferenceable(24) %44) #3
  %45 = load i32, i32* @x.599
  %46 = load i32, i32* @y.600
  %47 = add i32 %45, -774555404
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -774555404
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -18833596, i32 281162378
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::tuple"*, align 8
  %63 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %62, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %63, align 8
  %64 = load %"class.std::tuple"*, %"class.std::tuple"** %62, align 8
  %65 = bitcast %"class.std::tuple"* %64 to %"struct.std::_Tuple_impl"*
  %66 = load %"class.std::tuple"*, %"class.std::tuple"** %63, align 8
  %67 = bitcast %"class.std::tuple"* %66 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJxxxEEC2EOS0_(%"struct.std::_Tuple_impl"* %65, %"struct.std::_Tuple_impl"* dereferenceable(24) %67) #3
  store i32 1855634147, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxxxEEC2EOS0_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(24)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Tuple_impl.16"*
  %7 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %8 = call dereferenceable(16) %"struct.std::_Tuple_impl.16"* @_ZNSt11_Tuple_implILm0EJxxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl"* dereferenceable(24) %7) #3
  %9 = call dereferenceable(16) %"struct.std::_Tuple_impl.16"* @_ZSt4moveIRSt11_Tuple_implILm1EJxxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.16"* dereferenceable(16) %8) #3
  call void @_ZNSt11_Tuple_implILm1EJxxEEC2EOS0_(%"struct.std::_Tuple_impl.16"* %6, %"struct.std::_Tuple_impl.16"* dereferenceable(16) %9) #3
  %10 = bitcast %"struct.std::_Tuple_impl"* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.19"*
  %13 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %14 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxxEE7_M_headERS0_(%"struct.std::_Tuple_impl"* dereferenceable(24) %13) #3
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %14) #3
  invoke void @_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.19"* %12, i64* dereferenceable(8) %15)
          to label %16 unwind label %47

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* @x.601
  %18 = load i32, i32* @y.602
  %19 = sub i32 %17, 1659713602
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 1659713602
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %91

; <label>:31:                                     ; preds = %16, %91
  %32 = load i32, i32* @x.601
  %33 = load i32, i32* @y.602
  %34 = add i32 %32, 422015178
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 422015178
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %91

; <label>:46:                                     ; preds = %31
  ret void

; <label>:47:                                     ; preds = %2
  %48 = load i32, i32* @x.601
  %49 = load i32, i32* @y.602
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %92

; <label>:73:                                     ; preds = %47, %92
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #11
  %76 = load i32, i32* @x.601
  %77 = load i32, i32* @y.602
  %78 = sub i32 %76, -1431611844
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -1431611844
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %92

; <label>:90:                                     ; preds = %73
  unreachable

; <label>:91:                                     ; preds = %31, %16
  br label %31

; <label>:92:                                     ; preds = %73, %47
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  call void @__clang_call_terminate(i8* %94) #11
  br label %73
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.16"* @_ZSt4moveIRSt11_Tuple_implILm1EJxxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.16"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  store %"struct.std::_Tuple_impl.16"* %0, %"struct.std::_Tuple_impl.16"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %2, align 8
  ret %"struct.std::_Tuple_impl.16"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.16"* @_ZNSt11_Tuple_implILm0EJxxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Tuple_impl.16"*
  ret %"struct.std::_Tuple_impl.16"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJxxEEC2EOS0_(%"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"* dereferenceable(16)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  store %"struct.std::_Tuple_impl.16"* %0, %"struct.std::_Tuple_impl.16"** %3, align 8
  store %"struct.std::_Tuple_impl.16"* %1, %"struct.std::_Tuple_impl.16"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.16"* %5 to %"struct.std::_Tuple_impl.17"*
  %7 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %4, align 8
  %8 = call dereferenceable(8) %"struct.std::_Tuple_impl.17"* @_ZNSt11_Tuple_implILm1EJxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.16"* dereferenceable(16) %7) #3
  %9 = call dereferenceable(8) %"struct.std::_Tuple_impl.17"* @_ZSt4moveIRSt11_Tuple_implILm2EJxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.17"* dereferenceable(8) %8) #3
  call void @_ZNSt11_Tuple_implILm2EJxEEC2EOS0_(%"struct.std::_Tuple_impl.17"* %6, %"struct.std::_Tuple_impl.17"* dereferenceable(8) %9) #3
  %10 = bitcast %"struct.std::_Tuple_impl.16"* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.18"*
  %13 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %4, align 8
  %14 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.16"* dereferenceable(16) %13) #3
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %14) #3
  invoke void @_ZNSt10_Head_baseILm1ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.18"* %12, i64* dereferenceable(8) %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %2
  ret void

; <label>:17:                                     ; preds = %2
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxxEE7_M_headERS0_(%"struct.std::_Tuple_impl"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.19"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.19"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.17"* @_ZSt4moveIRSt11_Tuple_implILm2EJxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.17"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  store %"struct.std::_Tuple_impl.17"* %0, %"struct.std::_Tuple_impl.17"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %2, align 8
  ret %"struct.std::_Tuple_impl.17"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.17"* @_ZNSt11_Tuple_implILm1EJxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.16"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.16"*, align 8
  store %"struct.std::_Tuple_impl.16"* %0, %"struct.std::_Tuple_impl.16"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.16"*, %"struct.std::_Tuple_impl.16"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.16"* %3 to %"struct.std::_Tuple_impl.17"*
  ret %"struct.std::_Tuple_impl.17"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJxEEC2EOS0_(%"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.615
  %4 = load i32, i32* @y.616
  %5 = sub i32 %3, -617098224
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -617098224
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %56

; <label>:17:                                     ; preds = %2, %56
  %18 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  %19 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  store %"struct.std::_Tuple_impl.17"* %0, %"struct.std::_Tuple_impl.17"** %18, align 8
  store %"struct.std::_Tuple_impl.17"* %1, %"struct.std::_Tuple_impl.17"** %19, align 8
  %20 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %18, align 8
  %21 = bitcast %"struct.std::_Tuple_impl.17"* %20 to %"struct.std::_Head_base"*
  %22 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %19, align 8
  %23 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.17"* dereferenceable(8) %22) #3
  %24 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %23) #3
  %25 = load i32, i32* @x.615
  %26 = load i32, i32* @y.616
  %27 = sub i32 %25, -1892663725
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -1892663725
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %56

; <label>:51:                                     ; preds = %17
  invoke void @_ZNSt10_Head_baseILm2ExLb0EEC2IxEEOT_(%"struct.std::_Head_base"* %21, i64* dereferenceable(8) %24)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %51
  ret void

; <label>:53:                                     ; preds = %51
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #11
  unreachable

; <label>:56:                                     ; preds = %17, %2
  %57 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  %58 = alloca %"struct.std::_Tuple_impl.17"*, align 8
  store %"struct.std::_Tuple_impl.17"* %0, %"struct.std::_Tuple_impl.17"** %57, align 8
  store %"struct.std::_Tuple_impl.17"* %1, %"struct.std::_Tuple_impl.17"** %58, align 8
  %59 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %57, align 8
  %60 = bitcast %"struct.std::_Tuple_impl.17"* %59 to %"struct.std::_Head_base"*
  %61 = load %"struct.std::_Tuple_impl.17"*, %"struct.std::_Tuple_impl.17"** %58, align 8
  %62 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.17"* dereferenceable(8) %61) #3
  %63 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %62) #3
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm2ExLb0EEC2IxEEOT_(%"struct.std::_Head_base"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt5tupleIJxxxEEEC2ES2_(%"class.std::move_iterator.53"*, %"class.std::tuple"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.53"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::move_iterator.53"* %0, %"class.std::move_iterator.53"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::move_iterator.53"*, %"class.std::move_iterator.53"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.53", %"class.std::move_iterator.53"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  store %"class.std::tuple"* %7, %"class.std::tuple"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.14"*, %"class.std::tuple"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.621
  %6 = load i32, i32* @y.622
  %7 = add i32 %5, 2042603825
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2042603825
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -248153820, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -248153820, label %19
    i32 1683943681, label %27
    i32 263777901, label %47
    i32 -1085585349, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1683943681, i32 -1085585349
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %29 = alloca %"class.std::tuple"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %28, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %28, align 8
  %31 = load %"class.std::tuple"*, %"class.std::tuple"** %29, align 8
  %32 = load i32, i32* @x.621
  %33 = load i32, i32* @y.622
  %34 = add i32 %32, 10389961
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 10389961
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 263777901, i32 -1085585349
  store i32 %46, i32* %15
  br label %53

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %50 = alloca %"class.std::tuple"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %49, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %50, align 8
  %51 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %49, align 8
  %52 = load %"class.std::tuple"*, %"class.std::tuple"** %50, align 8
  store i32 1683943681, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EEC2EOS6_(%"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.623
  %6 = load i32, i32* @y.624
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 14512105, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 14512105, label %18
    i32 1431862743, label %38
    i32 2049844014, label %64
    i32 -1635942600, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1431862743, i32 -1635942600
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.7"*, align 8
  %40 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %39, align 8
  store %"struct.std::_Vector_base.7"* %1, %"struct.std::_Vector_base.7"** %40, align 8
  %41 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %40, align 8
  %44 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %43) #3
  %45 = call dereferenceable(1) %"class.std::allocator.8"* @_ZSt4moveIRSaISt6vectorISt5tupleIJxxxEESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.8"* dereferenceable(1) %44) #3
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implC2EOS5_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %42, %"class.std::allocator.8"* dereferenceable(1) %45) #3
  %46 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %47 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %40, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %47, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %46, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* dereferenceable(24) %48) #3
  %49 = load i32, i32* @x.623
  %50 = load i32, i32* @y.624
  %51 = sub i32 %49, 1708806179
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1708806179
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 2049844014, i32 -1635942600
  store i32 %63, i32* %14
  br label %76

; <label>:64:                                     ; preds = %15
  ret void

; <label>:65:                                     ; preds = %15
  %66 = alloca %"struct.std::_Vector_base.7"*, align 8
  %67 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %66, align 8
  store %"struct.std::_Vector_base.7"* %1, %"struct.std::_Vector_base.7"** %67, align 8
  %68 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %66, align 8
  %69 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %68, i32 0, i32 0
  %70 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %67, align 8
  %71 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %70) #3
  %72 = call dereferenceable(1) %"class.std::allocator.8"* @_ZSt4moveIRSaISt6vectorISt5tupleIJxxxEESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.8"* dereferenceable(1) %71) #3
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implC2EOS5_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %69, %"class.std::allocator.8"* dereferenceable(1) %72) #3
  %73 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %68, i32 0, i32 0
  %74 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %67, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %74, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %73, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* dereferenceable(24) %75) #3
  store i32 1431862743, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZSt4moveIRSaISt6vectorISt5tupleIJxxxEESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.8"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.625
  %6 = load i32, i32* @y.626
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1742656355, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1742656355, label %18
    i32 1935415684, label %26
    i32 503221456, label %56
    i32 1036784605, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1935415684, i32 1036784605
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %27, align 8
  %28 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %27, align 8
  store %"class.std::allocator.8"* %28, %"class.std::allocator.8"** %2
  %29 = load i32, i32* @x.625
  %30 = load i32, i32* @y.626
  %31 = add i32 %29, -1306435184
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1306435184
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 503221456, i32 1036784605
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::allocator.8"*, %"class.std::allocator.8"** %2
  ret %"class.std::allocator.8"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %59, align 8
  %60 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %59, align 8
  store i32 1935415684, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_implC2EOS5_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %5 to %"class.std::allocator.8"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.8"* @_ZSt4moveIRSaISt6vectorISt5tupleIJxxxEESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::allocator.8"* dereferenceable(1) %7) #3
  call void @_ZNSaISt6vectorISt5tupleIJxxxEESaIS1_EEEC2ERKS4_(%"class.std::allocator.8"* %6, %"class.std::allocator.8"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJxxxEESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.629
  %6 = load i32, i32* @y.630
  %7 = sub i32 %5, 1109926480
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1109926480
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 705139227, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 705139227, label %19
    i32 1799536986, label %27
    i32 -1506651735, label %55
    i32 2042773926, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1799536986, i32 2042773926
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  %29 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %28, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %32, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_(%"class.std::vector.11"** dereferenceable(8) %31, %"class.std::vector.11"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %30, i32 0, i32 1
  %35 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %29, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %35, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_(%"class.std::vector.11"** dereferenceable(8) %34, %"class.std::vector.11"** dereferenceable(8) %36) #3
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %30, i32 0, i32 2
  %38 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %29, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %38, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_(%"class.std::vector.11"** dereferenceable(8) %37, %"class.std::vector.11"** dereferenceable(8) %39) #3
  %40 = load i32, i32* @x.629
  %41 = load i32, i32* @y.630
  %42 = add i32 %40, -1391714825
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1391714825
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1506651735, i32 2042773926
  store i32 %54, i32* %15
  br label %69

; <label>:55:                                     ; preds = %16
  ret void

; <label>:56:                                     ; preds = %16
  %57 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  %58 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %57, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %57, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %59, i32 0, i32 0
  %61 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %58, align 8
  %62 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %61, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_(%"class.std::vector.11"** dereferenceable(8) %60, %"class.std::vector.11"** dereferenceable(8) %62) #3
  %63 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %59, i32 0, i32 1
  %64 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %58, align 8
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %64, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_(%"class.std::vector.11"** dereferenceable(8) %63, %"class.std::vector.11"** dereferenceable(8) %65) #3
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %59, i32 0, i32 2
  %67 = load %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"** %58, align 8
  %68 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > >, std::allocator<std::vector<std::tuple<long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long> > > > >::_Vector_impl"* %67, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_(%"class.std::vector.11"** dereferenceable(8) %66, %"class.std::vector.11"** dereferenceable(8) %68) #3
  store i32 1799536986, i32* %15
  br label %69

; <label>:69:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvRT_S7_(%"class.std::vector.11"** dereferenceable(8), %"class.std::vector.11"** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.631
  %6 = load i32, i32* @y.632
  %7 = sub i32 %5, 2071524693
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2071524693
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1340503258, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1340503258, label %19
    i32 -1477002589, label %27
    i32 -1611818418, label %68
    i32 2037150487, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1477002589, i32 2037150487
  store i32 %26, i32* %15
  br label %83

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.11"**, align 8
  %29 = alloca %"class.std::vector.11"**, align 8
  %30 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"** %0, %"class.std::vector.11"*** %28, align 8
  store %"class.std::vector.11"** %1, %"class.std::vector.11"*** %29, align 8
  %31 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %28, align 8
  %32 = call dereferenceable(8) %"class.std::vector.11"** @_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"** dereferenceable(8) %31) #3
  %33 = load %"class.std::vector.11"*, %"class.std::vector.11"** %32, align 8
  store %"class.std::vector.11"* %33, %"class.std::vector.11"** %30, align 8
  %34 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %29, align 8
  %35 = call dereferenceable(8) %"class.std::vector.11"** @_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"** dereferenceable(8) %34) #3
  %36 = load %"class.std::vector.11"*, %"class.std::vector.11"** %35, align 8
  %37 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %28, align 8
  store %"class.std::vector.11"* %36, %"class.std::vector.11"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::vector.11"** @_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"** dereferenceable(8) %30) #3
  %39 = load %"class.std::vector.11"*, %"class.std::vector.11"** %38, align 8
  %40 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %29, align 8
  store %"class.std::vector.11"* %39, %"class.std::vector.11"** %40, align 8
  %41 = load i32, i32* @x.631
  %42 = load i32, i32* @y.632
  %43 = sub i32 %41, -1479050859
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1479050859
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1611818418, i32 2037150487
  store i32 %67, i32* %15
  br label %83

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"class.std::vector.11"**, align 8
  %71 = alloca %"class.std::vector.11"**, align 8
  %72 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"** %0, %"class.std::vector.11"*** %70, align 8
  store %"class.std::vector.11"** %1, %"class.std::vector.11"*** %71, align 8
  %73 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %70, align 8
  %74 = call dereferenceable(8) %"class.std::vector.11"** @_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"** dereferenceable(8) %73) #3
  %75 = load %"class.std::vector.11"*, %"class.std::vector.11"** %74, align 8
  store %"class.std::vector.11"* %75, %"class.std::vector.11"** %72, align 8
  %76 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %71, align 8
  %77 = call dereferenceable(8) %"class.std::vector.11"** @_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"** dereferenceable(8) %76) #3
  %78 = load %"class.std::vector.11"*, %"class.std::vector.11"** %77, align 8
  %79 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %70, align 8
  store %"class.std::vector.11"* %78, %"class.std::vector.11"** %79, align 8
  %80 = call dereferenceable(8) %"class.std::vector.11"** @_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"** dereferenceable(8) %72) #3
  %81 = load %"class.std::vector.11"*, %"class.std::vector.11"** %80, align 8
  %82 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %71, align 8
  store %"class.std::vector.11"* %81, %"class.std::vector.11"** %82, align 8
  store i32 -1477002589, i32* %15
  br label %83

; <label>:83:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.11"** @_ZSt4moveIRPSt6vectorISt5tupleIJxxxEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::vector.11"**, align 8
  store %"class.std::vector.11"** %0, %"class.std::vector.11"*** %2, align 8
  %3 = load %"class.std::vector.11"**, %"class.std::vector.11"*** %2, align 8
  ret %"class.std::vector.11"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt5tupleIJxxxEESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %8 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorISt5tupleIJxxxEESaIS2_EEEvT_S6_(%"class.std::vector.11"* %7, %"class.std::vector.11"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.637
  %5 = load i32, i32* @y.638
  %6 = add i32 %4, -2047027324
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -2047027324
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1685442807, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1685442807, label %18
    i32 1566210948, label %38
    i32 1616281571, label %69
    i32 -2080628749, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1566210948, i32 -2080628749
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %39, align 8
  %40 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.637
  %43 = load i32, i32* @y.638
  %44 = add i32 %42, -1201353819
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1201353819
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1616281571, i32 -2080628749
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %71, align 8
  %72 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %72, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %73)
  store i32 1566210948, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.639
  %5 = load i32, i32* @y.640
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -441045577, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %79
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -441045577, label %17
    i32 413746440, label %37
    i32 1228376146, label %71
    i32 1920754730, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %79

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 413746440, i32 1920754730
  store i32 %36, i32* %13
  br label %79

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %39 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator"* %40) #3
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %39, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %39, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %39, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %43, align 8
  %44 = load i32, i32* @x.639
  %45 = load i32, i32* @y.640
  %46 = sub i32 %44, -1199126313
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1199126313
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1228376146, i32 1920754730
  store i32 %70, i32* %13
  br label %79

; <label>:71:                                     ; preds = %14
  ret void

; <label>:72:                                     ; preds = %14
  %73 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %73, align 8
  %74 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %73, align 8
  %75 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %74 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator"* %75) #3
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %74, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %74, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %74, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %78, align 8
  store i32 413746440, i32* %13
  br label %79

; <label>:79:                                     ; preds = %72, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.641
  %6 = load i32, i32* @y.642
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1187453825, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1187453825, label %18
    i32 1455478699, label %26
    i32 1411626617, label %43
    i32 210891029, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1455478699, i32 210891029
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %27, align 8
  %28 = load %"class.std::vector"*, %"class.std::vector"** %27, align 8
  store %"class.std::vector"* %28, %"class.std::vector"** %2
  %29 = load i32, i32* @x.641
  %30 = load i32, i32* @y.642
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1411626617, i32 210891029
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %44

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %46, align 8
  %47 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8
  store i32 1455478699, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2EOS3_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EOS3_(%"struct.std::_Vector_base"* %6, %"struct.std::_Vector_base"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %5 = alloca %"struct.std::greater", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %"struct.std::greater", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %3, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %6, i32 0, i32 0
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_(%"struct.std::pair"* %18, %"struct.std::pair"* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.54"* %2, %"struct.std::pair"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %2, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  ret %"struct.std::pair"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.54"* %2, %"struct.std::pair"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %2, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  ret %"struct.std::pair"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EOS3_(%"struct.std::_Vector_base"*, %"struct.std::_Vector_base"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store %"struct.std::_Vector_base"* %1, %"struct.std::_Vector_base"** %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, %"class.std::allocator"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %10, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  ret %"class.std::allocator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator"* dereferenceable(1) %7) #3
  call void @_ZNSaISt4pairIxxEEC2ERKS1_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.657
  %6 = load i32, i32* @y.658
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1827743246, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1827743246, label %18
    i32 -469692455, label %26
    i32 1840007739, label %54
    i32 -611118197, label %55
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -469692455, i32 -611118197
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  %28 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %27, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %28, align 8
  %29 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %29, i32 0, i32 0
  %31 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %31, i32 0, i32 0
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair"** dereferenceable(8) %30, %"struct.std::pair"** dereferenceable(8) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %29, i32 0, i32 1
  %34 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %28, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %34, i32 0, i32 1
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair"** dereferenceable(8) %33, %"struct.std::pair"** dereferenceable(8) %35) #3
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %29, i32 0, i32 2
  %37 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %28, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %37, i32 0, i32 2
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair"** dereferenceable(8) %36, %"struct.std::pair"** dereferenceable(8) %38) #3
  %39 = load i32, i32* @x.657
  %40 = load i32, i32* @y.658
  %41 = sub i32 %39, 1835039678
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1835039678
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1840007739, i32 -611118197
  store i32 %53, i32* %14
  br label %68

; <label>:54:                                     ; preds = %15
  ret void

; <label>:55:                                     ; preds = %15
  %56 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  %57 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %56, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %57, align 8
  %58 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %56, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %58, i32 0, i32 0
  %60 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %57, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %60, i32 0, i32 0
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair"** dereferenceable(8) %59, %"struct.std::pair"** dereferenceable(8) %61) #3
  %62 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %58, i32 0, i32 1
  %63 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %57, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %63, i32 0, i32 1
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair"** dereferenceable(8) %62, %"struct.std::pair"** dereferenceable(8) %64) #3
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %58, i32 0, i32 2
  %66 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %57, align 8
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %66, i32 0, i32 2
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair"** dereferenceable(8) %65, %"struct.std::pair"** dereferenceable(8) %67) #3
  store i32 -469692455, i32* %14
  br label %68

; <label>:68:                                     ; preds = %55, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair"** dereferenceable(8), %"struct.std::pair"** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.659
  %6 = load i32, i32* @y.660
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -531321664, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -531321664, label %18
    i32 2037952281, label %38
    i32 -406490365, label %67
    i32 -227212791, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2037952281, i32 -227212791
  store i32 %37, i32* %14
  br label %82

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::pair"**, align 8
  %40 = alloca %"struct.std::pair"**, align 8
  %41 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %39, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %40, align 8
  %42 = load %"struct.std::pair"**, %"struct.std::pair"*** %39, align 8
  %43 = call dereferenceable(8) %"struct.std::pair"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair"** dereferenceable(8) %42) #3
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  store %"struct.std::pair"* %44, %"struct.std::pair"** %41, align 8
  %45 = load %"struct.std::pair"**, %"struct.std::pair"*** %40, align 8
  %46 = call dereferenceable(8) %"struct.std::pair"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair"** dereferenceable(8) %45) #3
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %46, align 8
  %48 = load %"struct.std::pair"**, %"struct.std::pair"*** %39, align 8
  store %"struct.std::pair"* %47, %"struct.std::pair"** %48, align 8
  %49 = call dereferenceable(8) %"struct.std::pair"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair"** dereferenceable(8) %41) #3
  %50 = load %"struct.std::pair"*, %"struct.std::pair"** %49, align 8
  %51 = load %"struct.std::pair"**, %"struct.std::pair"*** %40, align 8
  store %"struct.std::pair"* %50, %"struct.std::pair"** %51, align 8
  %52 = load i32, i32* @x.659
  %53 = load i32, i32* @y.660
  %54 = add i32 %52, -356954944
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -356954944
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -406490365, i32 -227212791
  store i32 %66, i32* %14
  br label %82

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"struct.std::pair"**, align 8
  %70 = alloca %"struct.std::pair"**, align 8
  %71 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %69, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %70, align 8
  %72 = load %"struct.std::pair"**, %"struct.std::pair"*** %69, align 8
  %73 = call dereferenceable(8) %"struct.std::pair"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair"** dereferenceable(8) %72) #3
  %74 = load %"struct.std::pair"*, %"struct.std::pair"** %73, align 8
  store %"struct.std::pair"* %74, %"struct.std::pair"** %71, align 8
  %75 = load %"struct.std::pair"**, %"struct.std::pair"*** %70, align 8
  %76 = call dereferenceable(8) %"struct.std::pair"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair"** dereferenceable(8) %75) #3
  %77 = load %"struct.std::pair"*, %"struct.std::pair"** %76, align 8
  %78 = load %"struct.std::pair"**, %"struct.std::pair"*** %69, align 8
  store %"struct.std::pair"* %77, %"struct.std::pair"** %78, align 8
  %79 = call dereferenceable(8) %"struct.std::pair"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair"** dereferenceable(8) %71) #3
  %80 = load %"struct.std::pair"*, %"struct.std::pair"** %79, align 8
  %81 = load %"struct.std::pair"**, %"struct.std::pair"*** %70, align 8
  store %"struct.std::pair"* %80, %"struct.std::pair"** %81, align 8
  store i32 2037952281, i32* %14
  br label %82

; <label>:82:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::pair"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.661
  %6 = load i32, i32* @y.662
  %7 = sub i32 %5, 1853616836
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1853616836
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1990857584, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1990857584, label %19
    i32 -646520884, label %39
    i32 -302696637, label %68
    i32 75151752, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -646520884, i32 75151752
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %40, align 8
  %41 = load %"struct.std::pair"**, %"struct.std::pair"*** %40, align 8
  store %"struct.std::pair"** %41, %"struct.std::pair"*** %2
  %42 = load i32, i32* @x.661
  %43 = load i32, i32* @y.662
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -302696637, i32 75151752
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %2
  ret %"struct.std::pair"** %69

; <label>:70:                                     ; preds = %16
  %71 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %71, align 8
  %72 = load %"struct.std::pair"**, %"struct.std::pair"*** %71, align 8
  store i32 -646520884, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::pair", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %12 = alloca %"struct.std::pair", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %4) #3
  store i64 %16, i64* %3
  %17 = alloca i32
  store i32 1955906209, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %169
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1955906209, label %21
    i32 158635054, label %25
    i32 -931810454, label %41
    i32 1749593031, label %68
    i32 1369184464, label %69
    i32 1889117760, label %77
    i32 -1193734675, label %104
    i32 45107487, label %105
    i32 -1135551874, label %111
    i32 1792083681, label %139
    i32 -1126103209, label %166
    i32 -917658326, label %167
    i32 951470694, label %168
  ]

; <label>:20:                                     ; preds = %18
  br label %169

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %3
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 158635054, i32 1369184464
  store i32 %24, i32* %17
  br label %169

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* @x.663
  %27 = load i32, i32* @y.664
  %28 = sub i32 %26, 1530173336
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 1530173336
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -931810454, i32 -917658326
  store i32 %40, i32* %17
  br label %169

; <label>:41:                                     ; preds = %18
  %42 = load i32, i32* @x.663
  %43 = load i32, i32* @y.664
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1749593031, i32 -917658326
  store i32 %67, i32* %17
  br label %169

; <label>:68:                                     ; preds = %18
  store i32 -1135551874, i32* %17
  br label %169

; <label>:69:                                     ; preds = %18
  %70 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %4) #3
  store i64 %70, i64* %7, align 8
  %71 = load i64, i64* %7, align 8
  %72 = sub i64 %71, -4749424026693575277
  %73 = sub i64 %72, 2
  %74 = add i64 %73, -4749424026693575277
  %75 = sub nsw i64 %71, 2
  %76 = sdiv i64 %74, 2
  store i64 %76, i64* %8, align 8
  store i32 1889117760, i32* %17
  br label %169

; <label>:77:                                     ; preds = %18
  %78 = load i64, i64* %8, align 8
  %79 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %4, i64 %78) #3
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %10, i32 0, i32 0
  store %"struct.std::pair"* %79, %"struct.std::pair"** %80, align 8
  %81 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %10) #3
  %82 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %81) #3
  %83 = bitcast %"struct.std::pair"* %9 to i8*
  %84 = bitcast %"struct.std::pair"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 16, i32 8, i1 false)
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %11 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = load i64, i64* %8, align 8
  %88 = load i64, i64* %7, align 8
  %89 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %9) #3
  %90 = bitcast %"struct.std::pair"* %12 to i8*
  %91 = bitcast %"struct.std::pair"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 16, i32 8, i1 false)
  %92 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %13 to i8*
  %93 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 1, i32 1, i1 false)
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %11, i32 0, i32 0
  %95 = load %"struct.std::pair"*, %"struct.std::pair"** %94, align 8
  %96 = bitcast %"struct.std::pair"* %12 to { i64, i64 }*
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %96, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %96, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair"* %95, i64 %87, i64 %88, i64 %98, i64 %100)
  %101 = load i64, i64* %8, align 8
  %102 = icmp eq i64 %101, 0
  %103 = select i1 %102, i32 -1193734675, i32 45107487
  store i32 %103, i32* %17
  br label %169

; <label>:104:                                    ; preds = %18
  store i32 -1135551874, i32* %17
  br label %169

; <label>:105:                                    ; preds = %18
  %106 = load i64, i64* %8, align 8
  %107 = add i64 %106, 3653664476811544951
  %108 = add i64 %107, -1
  %109 = sub i64 %108, 3653664476811544951
  %110 = add nsw i64 %106, -1
  store i64 %109, i64* %8, align 8
  store i32 1889117760, i32* %17
  br label %169

; <label>:111:                                    ; preds = %18
  %112 = load i32, i32* @x.663
  %113 = load i32, i32* @y.664
  %114 = add i32 %112, -1716129138
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -1716129138
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 1792083681, i32 951470694
  store i32 %138, i32* %17
  br label %169

; <label>:139:                                    ; preds = %18
  %140 = load i32, i32* @x.663
  %141 = load i32, i32* @y.664
  %142 = sub i32 0, 1
  %143 = add i32 %140, %142
  %144 = sub i32 %140, 1
  %145 = mul i32 %140, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %141, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 true, true
  %152 = and i1 %149, true
  %153 = and i1 %147, %151
  %154 = and i1 %150, true
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 true, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  %165 = select i1 %163, i32 -1126103209, i32 951470694
  store i32 %165, i32* %17
  br label %169

; <label>:166:                                    ; preds = %18
  ret void

; <label>:167:                                    ; preds = %18
  store i32 -931810454, i32* %17
  br label %169

; <label>:168:                                    ; preds = %18
  store i32 1792083681, i32* %17
  br label %169

; <label>:169:                                    ; preds = %168, %167, %139, %111, %105, %104, %77, %69, %68, %41, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %2 = alloca %"struct.std::greater", align 1
  %3 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %1, %"class.__gnu_cxx::__normal_iterator.54"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %3, align 8
  %6 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.54"* %5) #3
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %4, align 8
  %9 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.54"* %8) #3
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %11 = ptrtoint %"struct.std::pair"* %7 to i64
  %12 = ptrtoint %"struct.std::pair"* %10 to i64
  %13 = sub i64 %11, 7882146822107270378
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 7882146822107270378
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 16
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.669
  %6 = load i32, i32* @y.670
  %7 = add i32 %5, 1020347009
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1020347009
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1706120026, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1706120026, label %19
    i32 -383187963, label %27
    i32 1999979136, label %56
    i32 -396350425, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -383187963, i32 -396350425
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  store %"struct.std::pair"* %29, %"struct.std::pair"** %2
  %30 = load i32, i32* @x.669
  %31 = load i32, i32* @y.670
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1999979136, i32 -396350425
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %59, align 8
  %60 = load %"struct.std::pair"*, %"struct.std::pair"** %59, align 8
  store i32 -383187963, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i64 %10
  store %"struct.std::pair"* %11, %"struct.std::pair"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.54"* %3, %"struct.std::pair"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %3, i32 0, i32 0
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  ret %"struct.std::pair"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.673
  %6 = load i32, i32* @y.674
  %7 = sub i32 %5, 1166201002
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1166201002
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1830853889, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1830853889, label %19
    i32 1924624220, label %39
    i32 1710362206, label %59
    i32 -1987806462, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1924624220, i32 -1987806462
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %41, i32 0, i32 0
  %43 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  store %"struct.std::pair"* %43, %"struct.std::pair"** %2
  %44 = load i32, i32* @x.673
  %45 = load i32, i32* @y.674
  %46 = sub i32 %44, -1735933142
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1735933142
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1710362206, i32 -1987806462
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %62, align 8
  %63 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %62, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %63, i32 0, i32 0
  %65 = load %"struct.std::pair"*, %"struct.std::pair"** %64, align 8
  store i32 1924624220, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %7 = alloca %"struct.std::pair"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %15 = alloca i64*
  %16 = alloca i64*
  %17 = alloca i64*
  %18 = alloca i64*
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %20 = alloca %"struct.std::pair"*
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.54"*
  %22 = alloca i1
  %23 = alloca i1
  %24 = load i32, i32* @x.675
  %25 = load i32, i32* @y.676
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  store i1 %31, i1* %23
  %32 = icmp slt i32 %25, 10
  store i1 %32, i1* %22
  %33 = alloca i32
  store i32 1965673504, i32* %33
  br label %34

; <label>:34:                                     ; preds = %5, %484
  %35 = load i32, i32* %33
  switch i32 %35, label %36 [
    i32 1965673504, label %37
    i32 929542690, label %45
    i32 1204456928, label %105
    i32 1298386860, label %106
    i32 -851778154, label %118
    i32 -933567976, label %153
    i32 1731172426, label %169
    i32 -89163535, label %203
    i32 -1702310468, label %204
    i32 713933248, label %220
    i32 -1880011408, label %269
    i32 -1159966865, label %270
    i32 1382076316, label %279
    i32 -504423358, label %291
    i32 -2098228884, label %329
    i32 -1015202403, label %344
    i32 252359721, label %386
    i32 177634149, label %387
    i32 -1650991822, label %412
    i32 1066888396, label %435
    i32 -909015165, label %457
  ]

; <label>:36:                                     ; preds = %34
  br label %484

; <label>:37:                                     ; preds = %34
  %38 = load volatile i1, i1* %23
  %39 = load volatile i1, i1* %22
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 929542690, i32 177634149
  store i32 %44, i32* %33
  br label %484

; <label>:45:                                     ; preds = %34
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %46, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %47 = alloca %"struct.std::pair", align 8
  store %"struct.std::pair"* %47, %"struct.std::pair"** %20
  %48 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %48, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %19
  %49 = alloca i64, align 8
  store i64* %49, i64** %18
  %50 = alloca i64, align 8
  store i64* %50, i64** %17
  %51 = alloca i64, align 8
  store i64* %51, i64** %16
  %52 = alloca i64, align 8
  store i64* %52, i64** %15
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %53, %"class.__gnu_cxx::__normal_iterator.54"** %14
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %54, %"class.__gnu_cxx::__normal_iterator.54"** %13
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %55, %"class.__gnu_cxx::__normal_iterator.54"** %12
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %56, %"class.__gnu_cxx::__normal_iterator.54"** %11
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %57, %"class.__gnu_cxx::__normal_iterator.54"** %10
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %58, %"class.__gnu_cxx::__normal_iterator.54"** %9
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %59, %"class.__gnu_cxx::__normal_iterator.54"** %8
  %60 = alloca %"struct.std::pair", align 8
  store %"struct.std::pair"* %60, %"struct.std::pair"** %7
  %61 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %62 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %62, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6
  %63 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %64 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %64, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %65, align 8
  %66 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %20
  %67 = bitcast %"struct.std::pair"* %66 to { i64, i64 }*
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %67, i32 0, i32 0
  store i64 %3, i64* %68, align 8
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %67, i32 0, i32 1
  store i64 %4, i64* %69, align 8
  %70 = load volatile i64*, i64** %18
  store i64 %1, i64* %70, align 8
  %71 = load volatile i64*, i64** %17
  store i64 %2, i64* %71, align 8
  %72 = load volatile i64*, i64** %18
  %73 = load i64, i64* %72, align 8
  %74 = load volatile i64*, i64** %16
  store i64 %73, i64* %74, align 8
  %75 = load volatile i64*, i64** %18
  %76 = load i64, i64* %75, align 8
  %77 = load volatile i64*, i64** %15
  store i64 %76, i64* %77, align 8
  %78 = load i32, i32* @x.675
  %79 = load i32, i32* @y.676
  %80 = sub i32 %78, 1402586948
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 1402586948
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 1204456928, i32 177634149
  store i32 %104, i32* %33
  br label %484

; <label>:105:                                    ; preds = %34
  store i32 1298386860, i32* %33
  br label %484

; <label>:106:                                    ; preds = %34
  %107 = load volatile i64*, i64** %15
  %108 = load i64, i64* %107, align 8
  %109 = load volatile i64*, i64** %17
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, -6710220754490612424
  %112 = sub i64 %111, 1
  %113 = sub i64 %112, -6710220754490612424
  %114 = sub nsw i64 %110, 1
  %115 = sdiv i64 %113, 2
  %116 = icmp slt i64 %108, %115
  %117 = select i1 %116, i32 -851778154, i32 -1159966865
  store i32 %117, i32* %33
  br label %484

; <label>:118:                                    ; preds = %34
  %119 = load volatile i64*, i64** %15
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 0, %120
  %122 = sub i64 0, 1
  %123 = add i64 %121, %122
  %124 = sub i64 0, %123
  %125 = add nsw i64 %120, 1
  %126 = mul nsw i64 2, %124
  %127 = load volatile i64*, i64** %15
  store i64 %126, i64* %127, align 8
  %128 = load volatile i64*, i64** %15
  %129 = load i64, i64* %128, align 8
  %130 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %131 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %130, i64 %129) #3
  %132 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %14
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %132, i32 0, i32 0
  store %"struct.std::pair"* %131, %"struct.std::pair"** %133, align 8
  %134 = load volatile i64*, i64** %15
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, -1703993640272432068
  %137 = sub i64 %136, 1
  %138 = sub i64 %137, -1703993640272432068
  %139 = sub nsw i64 %135, 1
  %140 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %141 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %140, i64 %138) #3
  %142 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %13
  %143 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %142, i32 0, i32 0
  store %"struct.std::pair"* %141, %"struct.std::pair"** %143, align 8
  %144 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %14
  %145 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %144, i32 0, i32 0
  %146 = load %"struct.std::pair"*, %"struct.std::pair"** %145, align 8
  %147 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %13
  %148 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %147, i32 0, i32 0
  %149 = load %"struct.std::pair"*, %"struct.std::pair"** %148, align 8
  %150 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %19
  %151 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %150, %"struct.std::pair"* %146, %"struct.std::pair"* %149)
  %152 = select i1 %151, i32 -933567976, i32 -1702310468
  store i32 %152, i32* %33
  br label %484

; <label>:153:                                    ; preds = %34
  %154 = load i32, i32* @x.675
  %155 = load i32, i32* @y.676
  %156 = add i32 %154, -180757075
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, -180757075
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  %168 = select i1 %166, i32 1731172426, i32 -1650991822
  store i32 %168, i32* %33
  br label %484

; <label>:169:                                    ; preds = %34
  %170 = load volatile i64*, i64** %15
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 0, -1
  %173 = sub i64 %171, %172
  %174 = add nsw i64 %171, -1
  %175 = load volatile i64*, i64** %15
  store i64 %173, i64* %175, align 8
  %176 = load i32, i32* @x.675
  %177 = load i32, i32* @y.676
  %178 = sub i32 %176, -2051304184
  %179 = sub i32 %178, 1
  %180 = add i32 %179, -2051304184
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 false, true
  %189 = and i1 %186, false
  %190 = and i1 %184, %188
  %191 = and i1 %187, false
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 false, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  %202 = select i1 %200, i32 -89163535, i32 -1650991822
  store i32 %202, i32* %33
  br label %484

; <label>:203:                                    ; preds = %34
  store i32 -1702310468, i32* %33
  br label %484

; <label>:204:                                    ; preds = %34
  %205 = load i32, i32* @x.675
  %206 = load i32, i32* @y.676
  %207 = add i32 %205, -2066205057
  %208 = sub i32 %207, 1
  %209 = sub i32 %208, -2066205057
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  %219 = select i1 %217, i32 713933248, i32 1066888396
  store i32 %219, i32* %33
  br label %484

; <label>:220:                                    ; preds = %34
  %221 = load volatile i64*, i64** %15
  %222 = load i64, i64* %221, align 8
  %223 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %224 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %223, i64 %222) #3
  %225 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %12
  %226 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %225, i32 0, i32 0
  store %"struct.std::pair"* %224, %"struct.std::pair"** %226, align 8
  %227 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %12
  %228 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %227) #3
  %229 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %228) #3
  %230 = load volatile i64*, i64** %18
  %231 = load i64, i64* %230, align 8
  %232 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %233 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %232, i64 %231) #3
  %234 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %11
  %235 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %234, i32 0, i32 0
  store %"struct.std::pair"* %233, %"struct.std::pair"** %235, align 8
  %236 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %11
  %237 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %236) #3
  %238 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair"* %237, %"struct.std::pair"* dereferenceable(16) %229) #3
  %239 = load volatile i64*, i64** %15
  %240 = load i64, i64* %239, align 8
  %241 = load volatile i64*, i64** %18
  store i64 %240, i64* %241, align 8
  %242 = load i32, i32* @x.675
  %243 = load i32, i32* @y.676
  %244 = sub i32 %242, 1544716267
  %245 = sub i32 %244, 1
  %246 = add i32 %245, 1544716267
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 true, true
  %255 = and i1 %252, true
  %256 = and i1 %250, %254
  %257 = and i1 %253, true
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 true, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  %268 = select i1 %266, i32 -1880011408, i32 1066888396
  store i32 %268, i32* %33
  br label %484

; <label>:269:                                    ; preds = %34
  store i32 1298386860, i32* %33
  br label %484

; <label>:270:                                    ; preds = %34
  %271 = load volatile i64*, i64** %17
  %272 = load i64, i64* %271, align 8
  %273 = xor i64 1, -1
  %274 = xor i64 %272, %273
  %275 = and i64 %274, %272
  %276 = and i64 %272, 1
  %277 = icmp eq i64 %275, 0
  %278 = select i1 %277, i32 1382076316, i32 -2098228884
  store i32 %278, i32* %33
  br label %484

; <label>:279:                                    ; preds = %34
  %280 = load volatile i64*, i64** %15
  %281 = load i64, i64* %280, align 8
  %282 = load volatile i64*, i64** %17
  %283 = load i64, i64* %282, align 8
  %284 = sub i64 %283, 6491578699309071860
  %285 = sub i64 %284, 2
  %286 = add i64 %285, 6491578699309071860
  %287 = sub nsw i64 %283, 2
  %288 = sdiv i64 %286, 2
  %289 = icmp eq i64 %281, %288
  %290 = select i1 %289, i32 -504423358, i32 -2098228884
  store i32 %290, i32* %33
  br label %484

; <label>:291:                                    ; preds = %34
  %292 = load volatile i64*, i64** %15
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %293, 7882868102666772952
  %295 = add i64 %294, 1
  %296 = sub i64 %295, 7882868102666772952
  %297 = add nsw i64 %293, 1
  %298 = mul nsw i64 2, %296
  %299 = load volatile i64*, i64** %15
  store i64 %298, i64* %299, align 8
  %300 = load volatile i64*, i64** %15
  %301 = load i64, i64* %300, align 8
  %302 = sub i64 %301, 1041754560601621911
  %303 = sub i64 %302, 1
  %304 = add i64 %303, 1041754560601621911
  %305 = sub nsw i64 %301, 1
  %306 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %307 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %306, i64 %304) #3
  %308 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %10
  %309 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %308, i32 0, i32 0
  store %"struct.std::pair"* %307, %"struct.std::pair"** %309, align 8
  %310 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %10
  %311 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %310) #3
  %312 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %311) #3
  %313 = load volatile i64*, i64** %18
  %314 = load i64, i64* %313, align 8
  %315 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %316 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %315, i64 %314) #3
  %317 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %9
  %318 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %317, i32 0, i32 0
  store %"struct.std::pair"* %316, %"struct.std::pair"** %318, align 8
  %319 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %9
  %320 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %319) #3
  %321 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair"* %320, %"struct.std::pair"* dereferenceable(16) %312) #3
  %322 = load volatile i64*, i64** %15
  %323 = load i64, i64* %322, align 8
  %324 = add i64 %323, -6827884005027368938
  %325 = sub i64 %324, 1
  %326 = sub i64 %325, -6827884005027368938
  %327 = sub nsw i64 %323, 1
  %328 = load volatile i64*, i64** %18
  store i64 %326, i64* %328, align 8
  store i32 -2098228884, i32* %33
  br label %484

; <label>:329:                                    ; preds = %34
  %330 = load i32, i32* @x.675
  %331 = load i32, i32* @y.676
  %332 = sub i32 0, 1
  %333 = add i32 %330, %332
  %334 = sub i32 %330, 1
  %335 = mul i32 %330, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %331, 10
  %339 = and i1 %337, %338
  %340 = xor i1 %337, %338
  %341 = or i1 %339, %340
  %342 = or i1 %337, %338
  %343 = select i1 %341, i32 -1015202403, i32 -909015165
  store i32 %343, i32* %33
  br label %484

; <label>:344:                                    ; preds = %34
  %345 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %8
  %346 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %345 to i8*
  %347 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %348 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %347 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %346, i8* %348, i64 8, i32 8, i1 false)
  %349 = load volatile i64*, i64** %18
  %350 = load i64, i64* %349, align 8
  %351 = load volatile i64*, i64** %16
  %352 = load i64, i64* %351, align 8
  %353 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %20
  %354 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %353) #3
  %355 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %7
  %356 = bitcast %"struct.std::pair"* %355 to i8*
  %357 = bitcast %"struct.std::pair"* %354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %356, i8* %357, i64 16, i32 8, i1 false)
  %358 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6
  %359 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %358 to i8*
  %360 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %19
  %361 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %359, i8* %361, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %362 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %8
  %363 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %362, i32 0, i32 0
  %364 = load %"struct.std::pair"*, %"struct.std::pair"** %363, align 8
  %365 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %7
  %366 = bitcast %"struct.std::pair"* %365 to { i64, i64 }*
  %367 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %366, i32 0, i32 0
  %368 = load i64, i64* %367, align 8
  %369 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %366, i32 0, i32 1
  %370 = load i64, i64* %369, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair"* %364, i64 %350, i64 %352, i64 %368, i64 %370)
  %371 = load i32, i32* @x.675
  %372 = load i32, i32* @y.676
  %373 = sub i32 %371, -2038618748
  %374 = sub i32 %373, 1
  %375 = add i32 %374, -2038618748
  %376 = sub i32 %371, 1
  %377 = mul i32 %371, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %372, 10
  %381 = and i1 %379, %380
  %382 = xor i1 %379, %380
  %383 = or i1 %381, %382
  %384 = or i1 %379, %380
  %385 = select i1 %383, i32 252359721, i32 -909015165
  store i32 %385, i32* %33
  br label %484

; <label>:386:                                    ; preds = %34
  ret void

; <label>:387:                                    ; preds = %34
  %388 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %389 = alloca %"struct.std::pair", align 8
  %390 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %391 = alloca i64, align 8
  %392 = alloca i64, align 8
  %393 = alloca i64, align 8
  %394 = alloca i64, align 8
  %395 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %396 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %397 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %398 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %399 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %400 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %401 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %402 = alloca %"struct.std::pair", align 8
  %403 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %404 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %405 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %406 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %388, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %406, align 8
  %407 = bitcast %"struct.std::pair"* %389 to { i64, i64 }*
  %408 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %407, i32 0, i32 0
  store i64 %3, i64* %408, align 8
  %409 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %407, i32 0, i32 1
  store i64 %4, i64* %409, align 8
  store i64 %1, i64* %391, align 8
  store i64 %2, i64* %392, align 8
  %410 = load i64, i64* %391, align 8
  store i64 %410, i64* %393, align 8
  %411 = load i64, i64* %391, align 8
  store i64 %411, i64* %394, align 8
  store i32 929542690, i32* %33
  br label %484

; <label>:412:                                    ; preds = %34
  %413 = load volatile i64*, i64** %15
  %414 = load i64, i64* %413, align 8
  %415 = add i64 %414, -93199913702016244
  %416 = sub i64 %415, -1
  %417 = sub i64 %416, -93199913702016244
  %418 = sub i64 %414, -1
  %419 = mul i64 %417, -1
  %420 = sub i64 0, 4169658216497730545
  %421 = sub i64 %420, %414
  %422 = add i64 %421, 4169658216497730545
  %423 = sub i64 0, %414
  %424 = sub i64 %422, 5155209094622711428
  %425 = add i64 %424, -1
  %426 = add i64 %425, 5155209094622711428
  %427 = add i64 %422, -1
  %428 = shl i64 %414, -1
  %429 = sub i64 0, %414
  %430 = sub i64 0, -1
  %431 = add i64 %429, %430
  %432 = sub i64 0, %431
  %433 = add nsw i64 %414, -1
  %434 = load volatile i64*, i64** %15
  store i64 %432, i64* %434, align 8
  store i32 1731172426, i32* %33
  br label %484

; <label>:435:                                    ; preds = %34
  %436 = load volatile i64*, i64** %15
  %437 = load i64, i64* %436, align 8
  %438 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %439 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %438, i64 %437) #3
  %440 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %12
  %441 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %440, i32 0, i32 0
  store %"struct.std::pair"* %439, %"struct.std::pair"** %441, align 8
  %442 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %12
  %443 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %442) #3
  %444 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %443) #3
  %445 = load volatile i64*, i64** %18
  %446 = load i64, i64* %445, align 8
  %447 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %448 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %447, i64 %446) #3
  %449 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %11
  %450 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %449, i32 0, i32 0
  store %"struct.std::pair"* %448, %"struct.std::pair"** %450, align 8
  %451 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %11
  %452 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %451) #3
  %453 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair"* %452, %"struct.std::pair"* dereferenceable(16) %444) #3
  %454 = load volatile i64*, i64** %15
  %455 = load i64, i64* %454, align 8
  %456 = load volatile i64*, i64** %18
  store i64 %455, i64* %456, align 8
  store i32 713933248, i32* %33
  br label %484

; <label>:457:                                    ; preds = %34
  %458 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %8
  %459 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %458 to i8*
  %460 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %21
  %461 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %460 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %459, i8* %461, i64 8, i32 8, i1 false)
  %462 = load volatile i64*, i64** %18
  %463 = load i64, i64* %462, align 8
  %464 = load volatile i64*, i64** %16
  %465 = load i64, i64* %464, align 8
  %466 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %20
  %467 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %466) #3
  %468 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %7
  %469 = bitcast %"struct.std::pair"* %468 to i8*
  %470 = bitcast %"struct.std::pair"* %467 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %469, i8* %470, i64 16, i32 8, i1 false)
  %471 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6
  %472 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %471 to i8*
  %473 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %19
  %474 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %473 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %472, i8* %474, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %475 = load volatile %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %8
  %476 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %475, i32 0, i32 0
  %477 = load %"struct.std::pair"*, %"struct.std::pair"** %476, align 8
  %478 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %7
  %479 = bitcast %"struct.std::pair"* %478 to { i64, i64 }*
  %480 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %479, i32 0, i32 0
  %481 = load i64, i64* %480, align 8
  %482 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %479, i32 0, i32 1
  %483 = load i64, i64* %482, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair"* %477, i64 %463, i64 %465, i64 %481, i64 %483)
  store i32 -1015202403, i32* %33
  br label %484

; <label>:484:                                    ; preds = %457, %435, %412, %387, %344, %329, %291, %279, %270, %269, %220, %204, %203, %169, %153, %118, %106, %105, %45, %37, %36
  br label %34
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.54"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.677
  %6 = load i32, i32* @y.678
  %7 = sub i32 %5, 811407493
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 811407493
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -117376902, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -117376902, label %19
    i32 -391125313, label %27
    i32 1126574841, label %46
    i32 1500530142, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -391125313, i32 1500530142
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %29, i32 0, i32 0
  store %"struct.std::pair"** %30, %"struct.std::pair"*** %2
  %31 = load i32, i32* @x.677
  %32 = load i32, i32* @y.678
  %33 = add i32 %31, -1847183134
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1847183134
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1126574841, i32 1500530142
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %2
  ret %"struct.std::pair"** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %50, i32 0, i32 0
  store i32 -391125313, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.54"*, %"struct.std::pair"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  %4 = alloca %"struct.std::pair"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %3, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"**, %"struct.std::pair"*** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  store %"struct.std::pair"* %8, %"struct.std::pair"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.681
  %8 = load i32, i32* @y.682
  %9 = sub i32 %7, 201285270
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 201285270
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1264433220, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1264433220, label %21
    i32 905766527, label %41
    i32 1635662258, label %67
    i32 311825932, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 905766527, i32 311825932
  store i32 %40, i32* %17
  br label %80

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %44 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %42, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %43, i32 0, i32 0
  store %"struct.std::pair"* %2, %"struct.std::pair"** %46, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %44, align 8
  %47 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %44, align 8
  %48 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %47, i32 0, i32 0
  %49 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %42) #3
  %50 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %43) #3
  %51 = call zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"* %48, %"struct.std::pair"* dereferenceable(16) %49, %"struct.std::pair"* dereferenceable(16) %50)
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.681
  %53 = load i32, i32* @y.682
  %54 = add i32 %52, -82589139
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -82589139
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1635662258, i32 311825932
  store i32 %66, i32* %17
  br label %80

; <label>:67:                                     ; preds = %18
  %68 = load volatile i1, i1* %4
  ret i1 %68

; <label>:69:                                     ; preds = %18
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %72 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %70, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %73, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %71, i32 0, i32 0
  store %"struct.std::pair"* %2, %"struct.std::pair"** %74, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %72, align 8
  %75 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %72, align 8
  %76 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %75, i32 0, i32 0
  %77 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %70) #3
  %78 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %71) #3
  %79 = call zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"* %76, %"struct.std::pair"* dereferenceable(16) %77, %"struct.std::pair"* dereferenceable(16) %78)
  store i32 905766527, i32* %17
  br label %80

; <label>:80:                                     ; preds = %69, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.683
  %7 = load i32, i32* @y.684
  %8 = add i32 %6, 1659876796
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1659876796
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 598649682, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 598649682, label %20
    i32 1817542297, label %40
    i32 -1830975404, label %71
    i32 1337866913, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1817542297, i32 1337866913
  store i32 %39, i32* %16
  br label %87

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair"*, align 8
  %42 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %41, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %42, align 8
  %43 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  store %"struct.std::pair"* %43, %"struct.std::pair"** %3
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %44, i32 0, i32 0
  %46 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %45) #3
  %47 = load i64, i64* %46, align 8
  %48 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %3
  %49 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i32 0, i32 0
  store i64 %47, i64* %49, align 8
  %50 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  %51 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i32 0, i32 1
  %52 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %51) #3
  %53 = load i64, i64* %52, align 8
  %54 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %3
  %55 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %54, i32 0, i32 1
  store i64 %53, i64* %55, align 8
  %56 = load i32, i32* @x.683
  %57 = load i32, i32* @y.684
  %58 = add i32 %56, 1231671919
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1231671919
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -1830975404, i32 1337866913
  store i32 %70, i32* %16
  br label %87

; <label>:71:                                     ; preds = %17
  %72 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %3
  ret %"struct.std::pair"* %72

; <label>:73:                                     ; preds = %17
  %74 = alloca %"struct.std::pair"*, align 8
  %75 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %74, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %75, align 8
  %76 = load %"struct.std::pair"*, %"struct.std::pair"** %74, align 8
  %77 = load %"struct.std::pair"*, %"struct.std::pair"** %75, align 8
  %78 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %77, i32 0, i32 0
  %79 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %78) #3
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i32 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = load %"struct.std::pair"*, %"struct.std::pair"** %75, align 8
  %83 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %82, i32 0, i32 1
  %84 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %83) #3
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i32 0, i32 1
  store i64 %85, i64* %86, align 8
  store i32 1817542297, i32* %16
  br label %87

; <label>:87:                                     ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %7 = alloca %"struct.std::pair", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %6, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %16, align 8
  %17 = bitcast %"struct.std::pair"* %7 to { i64, i64 }*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %3, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %4, i64* %19, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  %20 = load i64, i64* %9, align 8
  %21 = sub i64 %20, 10440023622894885
  %22 = sub i64 %21, 1
  %23 = add i64 %22, 10440023622894885
  %24 = sub nsw i64 %20, 1
  %25 = sdiv i64 %23, 2
  store i64 %25, i64* %11, align 8
  %26 = alloca i32
  store i32 772996441, i32* %26
  %27 = alloca i1
  br label %28

; <label>:28:                                     ; preds = %5, %70
  %29 = load i32, i32* %26
  switch i32 %29, label %30 [
    i32 772996441, label %31
    i32 -1191521627, label %36
    i32 1463130593, label %43
    i32 302776060, label %46
    i32 353210962, label %63
  ]

; <label>:30:                                     ; preds = %28
  br label %70

; <label>:31:                                     ; preds = %28
  %32 = load i64, i64* %9, align 8
  %33 = load i64, i64* %10, align 8
  %34 = icmp sgt i64 %32, %33
  %35 = select i1 %34, i32 -1191521627, i32 1463130593
  store i32 %35, i32* %26
  store i1 false, i1* %27
  br label %70

; <label>:36:                                     ; preds = %28
  %37 = load i64, i64* %11, align 8
  %38 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %6, i64 %37) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %12, i32 0, i32 0
  store %"struct.std::pair"* %38, %"struct.std::pair"** %39, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %12, i32 0, i32 0
  %41 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %42 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, %"struct.std::pair"* %41, %"struct.std::pair"* dereferenceable(16) %7)
  store i32 1463130593, i32* %26
  store i1 %42, i1* %27
  br label %70

; <label>:43:                                     ; preds = %28
  %44 = load i1, i1* %27
  %45 = select i1 %44, i32 302776060, i32 353210962
  store i32 %45, i32* %26
  br label %70

; <label>:46:                                     ; preds = %28
  %47 = load i64, i64* %11, align 8
  %48 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %6, i64 %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %13, i32 0, i32 0
  store %"struct.std::pair"* %48, %"struct.std::pair"** %49, align 8
  %50 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %13) #3
  %51 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %50) #3
  %52 = load i64, i64* %9, align 8
  %53 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %6, i64 %52) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %14, i32 0, i32 0
  store %"struct.std::pair"* %53, %"struct.std::pair"** %54, align 8
  %55 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %14) #3
  %56 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair"* %55, %"struct.std::pair"* dereferenceable(16) %51) #3
  %57 = load i64, i64* %11, align 8
  store i64 %57, i64* %9, align 8
  %58 = load i64, i64* %9, align 8
  %59 = sub i64 0, 1
  %60 = add i64 %58, %59
  %61 = sub nsw i64 %58, 1
  %62 = sdiv i64 %60, 2
  store i64 %62, i64* %11, align 8
  store i32 772996441, i32* %26
  br label %70

; <label>:63:                                     ; preds = %28
  %64 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %7) #3
  %65 = load i64, i64* %9, align 8
  %66 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.54"* %6, i64 %65) #3
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %15, i32 0, i32 0
  store %"struct.std::pair"* %66, %"struct.std::pair"** %67, align 8
  %68 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %15) #3
  %69 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair"* %68, %"struct.std::pair"* dereferenceable(16) %64) #3
  ret void

; <label>:70:                                     ; preds = %46, %43, %36, %31, %30
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %"struct.std::greater", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"*, %"struct.std::pair"* dereferenceable(16), %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.689
  %8 = load i32, i32* @y.690
  %9 = sub i32 %7, 706321508
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 706321508
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 368113941, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %74
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 368113941, label %21
    i32 -1838506817, label %41
    i32 -1499892684, label %64
    i32 2071943105, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %74

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1838506817, i32 2071943105
  store i32 %40, i32* %17
  br label %74

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::greater"*, align 8
  %43 = alloca %"struct.std::pair"*, align 8
  %44 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::greater"* %0, %"struct.std::greater"** %42, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %43, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %44, align 8
  %45 = load %"struct.std::greater"*, %"struct.std::greater"** %42, align 8
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %44, align 8
  %48 = call zeroext i1 @_ZStgtIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16) %46, %"struct.std::pair"* dereferenceable(16) %47)
  store i1 %48, i1* %4
  %49 = load i32, i32* @x.689
  %50 = load i32, i32* @y.690
  %51 = sub i32 %49, 345200053
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 345200053
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1499892684, i32 2071943105
  store i32 %63, i32* %17
  br label %74

; <label>:64:                                     ; preds = %18
  %65 = load volatile i1, i1* %4
  ret i1 %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.std::greater"*, align 8
  %68 = alloca %"struct.std::pair"*, align 8
  %69 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::greater"* %0, %"struct.std::greater"** %67, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %68, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %69, align 8
  %70 = load %"struct.std::greater"*, %"struct.std::greater"** %67, align 8
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %68, align 8
  %72 = load %"struct.std::pair"*, %"struct.std::pair"** %69, align 8
  %73 = call zeroext i1 @_ZStgtIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16) %71, %"struct.std::pair"* dereferenceable(16) %72)
  store i32 -1838506817, i32* %17
  br label %74

; <label>:74:                                     ; preds = %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStgtIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16), %"struct.std::pair"* dereferenceable(16)) #0 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %7 = call zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16) %5, %"struct.std::pair"* dereferenceable(16) %6)
  ret i1 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16), %"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %7, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %8, align 8
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %6
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %5
  %15 = alloca i32
  store i32 -1198762029, i32* %15
  %16 = alloca i1
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %2, %156
  %19 = load i32, i32* %15
  switch i32 %19, label %20 [
    i32 -1198762029, label %21
    i32 -801920839, label %26
    i32 2034921990, label %35
    i32 19263956, label %50
    i32 -160100865, label %84
    i32 550852274, label %86
    i32 -255860937, label %115
    i32 1413458671, label %143
    i32 -1955403338, label %145
    i32 515277023, label %147
    i32 1483146404, label %155
  ]

; <label>:20:                                     ; preds = %18
  br label %156

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %6
  %23 = load volatile i64, i64* %5
  %24 = icmp slt i64 %22, %23
  %25 = select i1 %24, i32 -1955403338, i32 -801920839
  store i32 %25, i32* %15
  store i1 true, i1* %17
  br label %156

; <label>:26:                                     ; preds = %18
  %27 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %28 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %27, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %31 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %30, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %29, %32
  %34 = select i1 %33, i32 550852274, i32 2034921990
  store i32 %34, i32* %15
  store i1 false, i1* %16
  br label %156

; <label>:35:                                     ; preds = %18
  %36 = load i32, i32* @x.693
  %37 = load i32, i32* @y.694
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 19263956, i32 515277023
  store i32 %49, i32* %15
  br label %156

; <label>:50:                                     ; preds = %18
  %51 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %52 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %55 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp slt i64 %53, %56
  store i1 %57, i1* %4
  %58 = load i32, i32* @x.693
  %59 = load i32, i32* @y.694
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -160100865, i32 515277023
  store i32 %83, i32* %15
  br label %156

; <label>:84:                                     ; preds = %18
  store i32 550852274, i32* %15
  %85 = load volatile i1, i1* %4
  store i1 %85, i1* %16
  br label %156

; <label>:86:                                     ; preds = %18
  %87 = load i1, i1* %16
  store i1 %87, i1* %3
  %88 = load i32, i32* @x.693
  %89 = load i32, i32* @y.694
  %90 = add i32 %88, -2138399664
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -2138399664
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 -255860937, i32 1483146404
  store i32 %114, i32* %15
  br label %156

; <label>:115:                                    ; preds = %18
  %116 = load i32, i32* @x.693
  %117 = load i32, i32* @y.694
  %118 = add i32 %116, 681982710
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 681982710
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 1413458671, i32 1483146404
  store i32 %142, i32* %15
  br label %156

; <label>:143:                                    ; preds = %18
  store i32 -1955403338, i32* %15
  %144 = load volatile i1, i1* %3
  store i1 %144, i1* %17
  br label %156

; <label>:145:                                    ; preds = %18
  %146 = load i1, i1* %17
  ret i1 %146

; <label>:147:                                    ; preds = %18
  %148 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %149 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %148, i32 0, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %152 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %151, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = icmp slt i64 %150, %153
  store i32 19263956, i32* %15
  br label %156

; <label>:155:                                    ; preds = %18
  store i32 -255860937, i32* %15
  br label %156

; <label>:156:                                    ; preds = %155, %147, %143, %115, %86, %84, %50, %35, %26, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, i32 0, i32 0
  %10 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %4) #3
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = call zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"* %9, %"struct.std::pair"* dereferenceable(16) %10, %"struct.std::pair"* dereferenceable(16) %11)
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.697
  %5 = load i32, i32* @y.698
  %6 = sub i32 %4, 1447160497
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1447160497
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -897477526, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -897477526, label %18
    i32 1163268909, label %26
    i32 -16092380, label %57
    i32 -615950474, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1163268909, i32 -615950474
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::greater", align 1
  %28 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %28, align 8
  %29 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %28, align 8
  %30 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %29, i32 0, i32 0
  %31 = load i32, i32* @x.697
  %32 = load i32, i32* @y.698
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -16092380, i32 -615950474
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::greater", align 1
  %60 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %60, align 8
  %61 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %60, align 8
  %62 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %61, i32 0, i32 0
  store i32 1163268909, i32* %14
  br label %63

; <label>:63:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::greater", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.0"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.703
  %7 = load i32, i32* @y.704
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1337689856, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1337689856, label %19
    i32 922020713, label %27
    i32 -1180369391, label %59
    i32 -2045961207, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 922020713, i32 -2045961207
  store i32 %26, i32* %15
  br label %77

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store i64 %1, i64* %29, align 8
  store i64* %2, i64** %30, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %29, align 8
  %37 = load i64*, i64** %30, align 8
  %38 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %39 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %38) #3
  %40 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %35, i64 %36, i64* dereferenceable(8) %37, %"class.std::allocator.2"* dereferenceable(1) %39)
  %41 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 1
  store i64* %40, i64** %43, align 8
  %44 = load i32, i32* @x.703
  %45 = load i32, i32* @y.704
  %46 = add i32 %44, 2130650479
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 2130650479
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1180369391, i32 -2045961207
  store i32 %58, i32* %15
  br label %77

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector.0"*, align 8
  %62 = alloca i64, align 8
  %63 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %61, align 8
  store i64 %1, i64* %62, align 8
  store i64* %2, i64** %63, align 8
  %64 = load %"class.std::vector.0"*, %"class.std::vector.0"** %61, align 8
  %65 = bitcast %"class.std::vector.0"* %64 to %"struct.std::_Vector_base.1"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = load i64, i64* %62, align 8
  %70 = load i64*, i64** %63, align 8
  %71 = bitcast %"class.std::vector.0"* %64 to %"struct.std::_Vector_base.1"*
  %72 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %71) #3
  %73 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %68, i64 %69, i64* dereferenceable(8) %70, %"class.std::allocator.2"* dereferenceable(1) %72)
  %74 = bitcast %"class.std::vector.0"* %64 to %"struct.std::_Vector_base.1"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %75, i32 0, i32 1
  store i64* %73, i64** %76, align 8
  store i32 922020713, i32* %15
  br label %77

; <label>:77:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.707
  %8 = load i32, i32* @y.708
  %9 = sub i32 %7, -1293915569
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1293915569
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1129233334, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1129233334, label %21
    i32 2033513824, label %29
    i32 -1472810938, label %65
    i32 -1562430515, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 2033513824, i32 -1562430515
  store i32 %28, i32* %17
  br label %76

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8, align 1
  store i64* %0, i64** %30, align 8
  store i64 %1, i64* %31, align 8
  store i64* %2, i64** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load i64*, i64** %30, align 8
  %35 = load i64, i64* %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %34, i64 %35, i64* dereferenceable(8) %36)
  store i64* %37, i64** %4
  %38 = load i32, i32* @x.707
  %39 = load i32, i32* @y.708
  %40 = add i32 %38, 1328829445
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1328829445
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1472810938, i32 -1562430515
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i64*, i64** %4
  ret i64* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i64*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i8, align 1
  store i64* %0, i64** %68, align 8
  store i64 %1, i64* %69, align 8
  store i64* %2, i64** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i64*, i64** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %72, i64 %73, i64* dereferenceable(8) %74)
  store i32 2033513824, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.709
  %8 = load i32, i32* @y.710
  %9 = add i32 %7, -1079899271
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1079899271
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 66790400, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %62
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 66790400, label %21
    i32 -314144562, label %29
    i32 -1854047187, label %52
    i32 960027781, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %62

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -314144562, i32 960027781
  store i32 %28, i32* %17
  br label %62

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64*, align 8
  store i64* %0, i64** %30, align 8
  store i64 %1, i64* %31, align 8
  store i64* %2, i64** %32, align 8
  %33 = load i64*, i64** %30, align 8
  %34 = load i64, i64* %31, align 8
  %35 = load i64*, i64** %32, align 8
  %36 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %33, i64 %34, i64* dereferenceable(8) %35)
  store i64* %36, i64** %4
  %37 = load i32, i32* @x.709
  %38 = load i32, i32* @y.710
  %39 = sub i32 %37, 964162796
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 964162796
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1854047187, i32 960027781
  store i32 %51, i32* %17
  br label %62

; <label>:52:                                     ; preds = %18
  %53 = load volatile i64*, i64** %4
  ret i64* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i64*, align 8
  %56 = alloca i64, align 8
  %57 = alloca i64*, align 8
  store i64* %0, i64** %55, align 8
  store i64 %1, i64* %56, align 8
  store i64* %2, i64** %57, align 8
  %58 = load i64*, i64** %55, align 8
  %59 = load i64, i64* %56, align 8
  %60 = load i64*, i64** %57, align 8
  %61 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %58, i64 %59, i64* dereferenceable(8) %60)
  store i32 -314144562, i32* %17
  br label %62

; <label>:62:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -367309313, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %32
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -367309313, label %16
    i32 -1964548434, label %20
    i32 -1689494952, label %23
    i32 -1550662972, label %30
  ]

; <label>:15:                                     ; preds = %13
  br label %32

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -1964548434, i32 -1550662972
  store i32 %19, i32* %12
  br label %32

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %7, align 8
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -1689494952, i32* %12
  br label %32

; <label>:23:                                     ; preds = %13
  %24 = load i64, i64* %8, align 8
  %25 = sub i64 0, -1
  %26 = sub i64 %24, %25
  %27 = add i64 %24, -1
  store i64 %26, i64* %8, align 8
  %28 = load i64*, i64** %4, align 8
  %29 = getelementptr inbounds i64, i64* %28, i32 1
  store i64* %29, i64** %4, align 8
  store i32 -367309313, i32* %12
  br label %32

; <label>:30:                                     ; preds = %13
  %31 = load i64*, i64** %4, align 8
  ret i64* %31

; <label>:32:                                     ; preds = %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.715
  %7 = load i32, i32* @y.716
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -183774567, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -183774567, label %19
    i32 329297448, label %27
    i32 -691263719, label %47
    i32 -182288960, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 329297448, i32 -182288960
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64*, align 8
  %30 = alloca %"class.std::allocator.2"*, align 8
  store i64* %0, i64** %28, align 8
  store i64* %1, i64** %29, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %30, align 8
  %31 = load i64*, i64** %28, align 8
  %32 = load i64*, i64** %29, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %31, i64* %32)
  %33 = load i32, i32* @x.715
  %34 = load i32, i32* @y.716
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -691263719, i32 -182288960
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca i64*, align 8
  %50 = alloca i64*, align 8
  %51 = alloca %"class.std::allocator.2"*, align 8
  store i64* %0, i64** %49, align 8
  store i64* %1, i64** %50, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %51, align 8
  %52 = load i64*, i64** %49, align 8
  %53 = load i64*, i64** %50, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %52, i64* %53)
  store i32 329297448, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxS5_EEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector"*
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.721
  %11 = load i32, i32* @y.722
  %12 = sub i32 %10, -486981811
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -486981811
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1411788938, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %182
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1411788938, label %24
    i32 1488856213, label %44
    i32 1639979736, label %89
    i32 -897705573, label %92
    i32 1465474664, label %114
    i32 -1107569953, label %122
    i32 -1477446246, label %138
    i32 -1806783431, label %166
    i32 1687162813, label %167
    i32 -1134289286, label %181
  ]

; <label>:23:                                     ; preds = %21
  br label %182

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1488856213, i32 1687162813
  store i32 %43, i32* %20
  br label %182

; <label>:44:                                     ; preds = %21
  %45 = alloca %"class.std::vector"*, align 8
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %7
  %47 = alloca i64*, align 8
  store i64** %47, i64*** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %45, align 8
  %48 = load volatile i64**, i64*** %7
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64**, i64*** %6
  store i64* %2, i64** %49, align 8
  %50 = load %"class.std::vector"*, %"class.std::vector"** %45, align 8
  store %"class.std::vector"* %50, %"class.std::vector"** %5
  %51 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %52 = bitcast %"class.std::vector"* %51 to %"struct.std::_Vector_base"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %53, i32 0, i32 1
  %55 = load %"struct.std::pair"*, %"struct.std::pair"** %54, align 8
  %56 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %57 = bitcast %"class.std::vector"* %56 to %"struct.std::_Vector_base"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %58, i32 0, i32 2
  %60 = load %"struct.std::pair"*, %"struct.std::pair"** %59, align 8
  %61 = icmp ne %"struct.std::pair"* %55, %60
  store i1 %61, i1* %4
  %62 = load i32, i32* @x.721
  %63 = load i32, i32* @y.722
  %64 = add i32 %62, -37625790
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -37625790
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 1639979736, i32 1687162813
  store i32 %88, i32* %20
  br label %182

; <label>:89:                                     ; preds = %21
  %90 = load volatile i1, i1* %4
  %91 = select i1 %90, i32 -897705573, i32 1465474664
  store i32 %91, i32* %20
  br label %182

; <label>:92:                                     ; preds = %21
  %93 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %94 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %94, i32 0, i32 0
  %96 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %95 to %"class.std::allocator"*
  %97 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %98 = bitcast %"class.std::vector"* %97 to %"struct.std::_Vector_base"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %99, i32 0, i32 1
  %101 = load %"struct.std::pair"*, %"struct.std::pair"** %100, align 8
  %102 = load volatile i64**, i64*** %7
  %103 = load i64*, i64** %102, align 8
  %104 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %103) #3
  %105 = load volatile i64**, i64*** %6
  %106 = load i64*, i64** %105, align 8
  %107 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %106) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %96, %"struct.std::pair"* %101, i64* dereferenceable(8) %104, i64* dereferenceable(8) %107)
  %108 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %109 = bitcast %"class.std::vector"* %108 to %"struct.std::_Vector_base"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %110, i32 0, i32 1
  %112 = load %"struct.std::pair"*, %"struct.std::pair"** %111, align 8
  %113 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %112, i32 1
  store %"struct.std::pair"* %113, %"struct.std::pair"** %111, align 8
  store i32 -1107569953, i32* %20
  br label %182

; <label>:114:                                    ; preds = %21
  %115 = load volatile i64**, i64*** %7
  %116 = load i64*, i64** %115, align 8
  %117 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %116) #3
  %118 = load volatile i64**, i64*** %6
  %119 = load i64*, i64** %118, align 8
  %120 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %119) #3
  %121 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxS5_EEEvDpOT_(%"class.std::vector"* %121, i64* dereferenceable(8) %117, i64* dereferenceable(8) %120)
  store i32 -1107569953, i32* %20
  br label %182

; <label>:122:                                    ; preds = %21
  %123 = load i32, i32* @x.721
  %124 = load i32, i32* @y.722
  %125 = add i32 %123, 310804667
  %126 = sub i32 %125, 1
  %127 = sub i32 %126, 310804667
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 -1477446246, i32 -1134289286
  store i32 %137, i32* %20
  br label %182

; <label>:138:                                    ; preds = %21
  %139 = load i32, i32* @x.721
  %140 = load i32, i32* @y.722
  %141 = sub i32 %139, 781496847
  %142 = sub i32 %141, 1
  %143 = add i32 %142, 781496847
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 false, true
  %152 = and i1 %149, false
  %153 = and i1 %147, %151
  %154 = and i1 %150, false
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 false, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  %165 = select i1 %163, i32 -1806783431, i32 -1134289286
  store i32 %165, i32* %20
  br label %182

; <label>:166:                                    ; preds = %21
  ret void

; <label>:167:                                    ; preds = %21
  %168 = alloca %"class.std::vector"*, align 8
  %169 = alloca i64*, align 8
  %170 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %168, align 8
  store i64* %1, i64** %169, align 8
  store i64* %2, i64** %170, align 8
  %171 = load %"class.std::vector"*, %"class.std::vector"** %168, align 8
  %172 = bitcast %"class.std::vector"* %171 to %"struct.std::_Vector_base"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %173, i32 0, i32 1
  %175 = load %"struct.std::pair"*, %"struct.std::pair"** %174, align 8
  %176 = bitcast %"class.std::vector"* %171 to %"struct.std::_Vector_base"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %177, i32 0, i32 2
  %179 = load %"struct.std::pair"*, %"struct.std::pair"** %178, align 8
  %180 = icmp ne %"struct.std::pair"* %175, %179
  store i32 1488856213, i32* %20
  br label %182

; <label>:181:                                    ; preds = %21
  store i32 -1477446246, i32* %20
  br label %182

; <label>:182:                                    ; preds = %181, %167, %138, %122, %114, %92, %89, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %5 = alloca %"struct.std::greater", align 1
  %6 = alloca %"struct.std::pair", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %9 = alloca %"struct.std::pair", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %11 = alloca %"struct.std::greater", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %3, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %14, align 8
  %15 = call %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.54"* %4, i64 1) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  store %"struct.std::pair"* %15, %"struct.std::pair"** %16, align 8
  %17 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %7) #3
  %18 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %17) #3
  %19 = bitcast %"struct.std::pair"* %6 to i8*
  %20 = bitcast %"struct.std::pair"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %3) #3
  %24 = sub i64 %23, -81756027505856511
  %25 = sub i64 %24, 1
  %26 = add i64 %25, -81756027505856511
  %27 = sub nsw i64 %23, 1
  %28 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %6) #3
  %29 = bitcast %"struct.std::pair"* %9 to i8*
  %30 = bitcast %"struct.std::pair"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EES7_()
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %8, i32 0, i32 0
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %33 = bitcast %"struct.std::pair"* %9 to { i64, i64 }*
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair"* %32, i64 %26, i64 0, i64 %35, i64 %37)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.std::allocator"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %5, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"class.std::allocator"*, %"class.std::allocator"** %5, align 8
  %10 = bitcast %"class.std::allocator"* %9 to %"class.__gnu_cxx::new_allocator"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = load i64*, i64** %7, align 8
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64*, i64** %8, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %14) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %10, %"struct.std::pair"* %11, i64* dereferenceable(8) %13, i64* dereferenceable(8) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxS5_EEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.727
  %5 = load i32, i32* @y.728
  %6 = sub i32 %4, -638804237
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -638804237
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %445

; <label>:18:                                     ; preds = %3, %445
  %19 = alloca %"class.std::vector"*, align 8
  %20 = alloca i64*, align 8
  %21 = alloca i64*, align 8
  %22 = alloca i64, align 8
  %23 = alloca %"struct.std::pair"*, align 8
  %24 = alloca %"struct.std::pair"*, align 8
  %25 = alloca i8*
  %26 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %19, align 8
  store i64* %1, i64** %20, align 8
  store i64* %2, i64** %21, align 8
  %27 = load %"class.std::vector"*, %"class.std::vector"** %19, align 8
  %28 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %27, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %28, i64* %22, align 8
  %29 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %30 = load i64, i64* %22, align 8
  %31 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %29, i64 %30)
  store %"struct.std::pair"* %31, %"struct.std::pair"** %23, align 8
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  store %"struct.std::pair"* %32, %"struct.std::pair"** %24, align 8
  %33 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %34 to %"class.std::allocator"*
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %37 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %27) #3
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %36, i64 %37
  %39 = load i64*, i64** %20, align 8
  %40 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %39) #3
  %41 = load i64*, i64** %21, align 8
  %42 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %41) #3
  %43 = load i32, i32* @x.727
  %44 = load i32, i32* @y.728
  %45 = sub i32 %43, -974365484
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -974365484
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %445

; <label>:69:                                     ; preds = %18
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxS5_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %35, %"struct.std::pair"* %38, i64* dereferenceable(8) %40, i64* dereferenceable(8) %42)
          to label %70 unwind label %127

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* @x.727
  %72 = load i32, i32* @y.728
  %73 = sub i32 %71, -2095571736
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -2095571736
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %470

; <label>:85:                                     ; preds = %70, %470
  store %"struct.std::pair"* null, %"struct.std::pair"** %24, align 8
  %86 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load %"struct.std::pair"*, %"struct.std::pair"** %88, align 8
  %90 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %91, i32 0, i32 1
  %93 = load %"struct.std::pair"*, %"struct.std::pair"** %92, align 8
  %94 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %95 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %96 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %95) #3
  %97 = load i32, i32* @x.727
  %98 = load i32, i32* @y.728
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %470

; <label>:122:                                    ; preds = %85
  %123 = invoke %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"* %89, %"struct.std::pair"* %93, %"struct.std::pair"* %94, %"class.std::allocator"* dereferenceable(1) %96)
          to label %124 unwind label %127

; <label>:124:                                    ; preds = %122
  store %"struct.std::pair"* %123, %"struct.std::pair"** %24, align 8
  %125 = load %"struct.std::pair"*, %"struct.std::pair"** %24, align 8
  %126 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %125, i32 1
  store %"struct.std::pair"* %126, %"struct.std::pair"** %24, align 8
  br label %392

; <label>:127:                                    ; preds = %122, %69
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %25, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %26, align 4
  br label %131

; <label>:131:                                    ; preds = %127
  %132 = load i8*, i8** %25, align 8
  %133 = call i8* @__cxa_begin_catch(i8* %132) #3
  %134 = load %"struct.std::pair"*, %"struct.std::pair"** %24, align 8
  %135 = icmp ne %"struct.std::pair"* %134, null
  br i1 %135, label %285, label %136

; <label>:136:                                    ; preds = %131
  %137 = load i32, i32* @x.727
  %138 = load i32, i32* @y.728
  %139 = sub i32 %137, -593088766
  %140 = sub i32 %139, 1
  %141 = add i32 %140, -593088766
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %482

; <label>:163:                                    ; preds = %136, %482
  %164 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %164, i32 0, i32 0
  %166 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %165 to %"class.std::allocator"*
  %167 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %168 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %27) #3
  %169 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %167, i64 %168
  %170 = load i32, i32* @x.727
  %171 = load i32, i32* @y.728
  %172 = sub i32 %170, 424127542
  %173 = sub i32 %172, 1
  %174 = add i32 %173, 424127542
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 true, true
  %183 = and i1 %180, true
  %184 = and i1 %178, %182
  %185 = and i1 %181, true
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 true, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %482

; <label>:196:                                    ; preds = %163
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1) %166, %"struct.std::pair"* %169)
          to label %197 unwind label %252

; <label>:197:                                    ; preds = %196
  %198 = load i32, i32* @x.727
  %199 = load i32, i32* @y.728
  %200 = sub i32 %198, -1755709146
  %201 = sub i32 %200, 1
  %202 = add i32 %201, -1755709146
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 false, true
  %211 = and i1 %208, false
  %212 = and i1 %206, %210
  %213 = and i1 %209, false
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 false, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  br i1 %222, label %224, label %489

; <label>:224:                                    ; preds = %197, %489
  %225 = load i32, i32* @x.727
  %226 = load i32, i32* @y.728
  %227 = add i32 %225, -98696817
  %228 = sub i32 %227, 1
  %229 = sub i32 %228, -98696817
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 true, true
  %238 = and i1 %235, true
  %239 = and i1 %233, %237
  %240 = and i1 %236, true
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 true, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  br i1 %249, label %251, label %489

; <label>:251:                                    ; preds = %224
  br label %291

; <label>:252:                                    ; preds = %337, %291, %285, %196
  %253 = load i32, i32* @x.727
  %254 = load i32, i32* @y.728
  %255 = add i32 %253, 455560913
  %256 = sub i32 %255, 1
  %257 = sub i32 %256, 455560913
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = and i1 %261, %262
  %264 = xor i1 %261, %262
  %265 = or i1 %263, %264
  %266 = or i1 %261, %262
  br i1 %265, label %267, label %490

; <label>:267:                                    ; preds = %252, %490
  %268 = landingpad { i8*, i32 }
          cleanup
  %269 = extractvalue { i8*, i32 } %268, 0
  store i8* %269, i8** %25, align 8
  %270 = extractvalue { i8*, i32 } %268, 1
  store i32 %270, i32* %26, align 4
  %271 = load i32, i32* @x.727
  %272 = load i32, i32* @y.728
  %273 = sub i32 0, 1
  %274 = add i32 %271, %273
  %275 = sub i32 %271, 1
  %276 = mul i32 %271, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %272, 10
  %280 = and i1 %278, %279
  %281 = xor i1 %278, %279
  %282 = or i1 %280, %281
  %283 = or i1 %278, %279
  br i1 %282, label %284, label %490

; <label>:284:                                    ; preds = %267
  invoke void @__cxa_end_catch()
          to label %338 unwind label %441

; <label>:285:                                    ; preds = %131
  %286 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %287 = load %"struct.std::pair"*, %"struct.std::pair"** %24, align 8
  %288 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %289 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %288) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %286, %"struct.std::pair"* %287, %"class.std::allocator"* dereferenceable(1) %289)
          to label %290 unwind label %252

; <label>:290:                                    ; preds = %285
  br label %291

; <label>:291:                                    ; preds = %290, %251
  %292 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %293 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %294 = load i64, i64* %22, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %292, %"struct.std::pair"* %293, i64 %294)
          to label %295 unwind label %252

; <label>:295:                                    ; preds = %291
  %296 = load i32, i32* @x.727
  %297 = load i32, i32* @y.728
  %298 = add i32 %296, 1071037446
  %299 = sub i32 %298, 1
  %300 = sub i32 %299, 1071037446
  %301 = sub i32 %296, 1
  %302 = mul i32 %296, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %297, 10
  %306 = and i1 %304, %305
  %307 = xor i1 %304, %305
  %308 = or i1 %306, %307
  %309 = or i1 %304, %305
  br i1 %308, label %310, label %494

; <label>:310:                                    ; preds = %295, %494
  %311 = load i32, i32* @x.727
  %312 = load i32, i32* @y.728
  %313 = sub i32 %311, -319785148
  %314 = sub i32 %313, 1
  %315 = add i32 %314, -319785148
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = xor i1 %319, true
  %322 = xor i1 %320, true
  %323 = xor i1 true, true
  %324 = and i1 %321, true
  %325 = and i1 %319, %323
  %326 = and i1 %322, true
  %327 = and i1 %320, %323
  %328 = or i1 %324, %325
  %329 = or i1 %326, %327
  %330 = xor i1 %328, %329
  %331 = or i1 %321, %322
  %332 = xor i1 %331, true
  %333 = or i1 true, %323
  %334 = and i1 %332, %333
  %335 = or i1 %330, %334
  %336 = or i1 %319, %320
  br i1 %335, label %337, label %494

; <label>:337:                                    ; preds = %310
  invoke void @__cxa_rethrow() #12
          to label %444 unwind label %252

; <label>:338:                                    ; preds = %284
  %339 = load i32, i32* @x.727
  %340 = load i32, i32* @y.728
  %341 = sub i32 %339, -1794124781
  %342 = sub i32 %341, 1
  %343 = add i32 %342, -1794124781
  %344 = sub i32 %339, 1
  %345 = mul i32 %339, %343
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %340, 10
  %349 = xor i1 %347, true
  %350 = xor i1 %348, true
  %351 = xor i1 true, true
  %352 = and i1 %349, true
  %353 = and i1 %347, %351
  %354 = and i1 %350, true
  %355 = and i1 %348, %351
  %356 = or i1 %352, %353
  %357 = or i1 %354, %355
  %358 = xor i1 %356, %357
  %359 = or i1 %349, %350
  %360 = xor i1 %359, true
  %361 = or i1 true, %351
  %362 = and i1 %360, %361
  %363 = or i1 %358, %362
  %364 = or i1 %347, %348
  br i1 %363, label %365, label %495

; <label>:365:                                    ; preds = %338, %495
  %366 = load i32, i32* @x.727
  %367 = load i32, i32* @y.728
  %368 = sub i32 0, 1
  %369 = add i32 %366, %368
  %370 = sub i32 %366, 1
  %371 = mul i32 %366, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %367, 10
  %375 = xor i1 %373, true
  %376 = xor i1 %374, true
  %377 = xor i1 true, true
  %378 = and i1 %375, true
  %379 = and i1 %373, %377
  %380 = and i1 %376, true
  %381 = and i1 %374, %377
  %382 = or i1 %378, %379
  %383 = or i1 %380, %381
  %384 = xor i1 %382, %383
  %385 = or i1 %375, %376
  %386 = xor i1 %385, true
  %387 = or i1 true, %377
  %388 = and i1 %386, %387
  %389 = or i1 %384, %388
  %390 = or i1 %373, %374
  br i1 %389, label %391, label %495

; <label>:391:                                    ; preds = %365
  br label %436

; <label>:392:                                    ; preds = %124
  %393 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %393, i32 0, i32 0
  %395 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %394, i32 0, i32 0
  %396 = load %"struct.std::pair"*, %"struct.std::pair"** %395, align 8
  %397 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %398 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %397, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %398, i32 0, i32 1
  %400 = load %"struct.std::pair"*, %"struct.std::pair"** %399, align 8
  %401 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %402 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %401) #3
  call void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %396, %"struct.std::pair"* %400, %"class.std::allocator"* dereferenceable(1) %402)
  %403 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %404 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %405 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %404, i32 0, i32 0
  %406 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %405, i32 0, i32 0
  %407 = load %"struct.std::pair"*, %"struct.std::pair"** %406, align 8
  %408 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %409 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %408, i32 0, i32 0
  %410 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %409, i32 0, i32 2
  %411 = load %"struct.std::pair"*, %"struct.std::pair"** %410, align 8
  %412 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %413 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %412, i32 0, i32 0
  %414 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %413, i32 0, i32 0
  %415 = load %"struct.std::pair"*, %"struct.std::pair"** %414, align 8
  %416 = ptrtoint %"struct.std::pair"* %411 to i64
  %417 = ptrtoint %"struct.std::pair"* %415 to i64
  %418 = sub i64 0, %417
  %419 = add i64 %416, %418
  %420 = sub i64 %416, %417
  %421 = sdiv exact i64 %419, 16
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %403, %"struct.std::pair"* %407, i64 %421)
  %422 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %423 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %424 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %423, i32 0, i32 0
  %425 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %424, i32 0, i32 0
  store %"struct.std::pair"* %422, %"struct.std::pair"** %425, align 8
  %426 = load %"struct.std::pair"*, %"struct.std::pair"** %24, align 8
  %427 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %428 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %427, i32 0, i32 0
  %429 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %428, i32 0, i32 1
  store %"struct.std::pair"* %426, %"struct.std::pair"** %429, align 8
  %430 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %431 = load i64, i64* %22, align 8
  %432 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %430, i64 %431
  %433 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %434 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %433, i32 0, i32 0
  %435 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %434, i32 0, i32 2
  store %"struct.std::pair"* %432, %"struct.std::pair"** %435, align 8
  ret void

; <label>:436:                                    ; preds = %391
  %437 = load i8*, i8** %25, align 8
  %438 = load i32, i32* %26, align 4
  %439 = insertvalue { i8*, i32 } undef, i8* %437, 0
  %440 = insertvalue { i8*, i32 } %439, i32 %438, 1
  resume { i8*, i32 } %440

; <label>:441:                                    ; preds = %284
  %442 = landingpad { i8*, i32 }
          catch i8* null
  %443 = extractvalue { i8*, i32 } %442, 0
  call void @__clang_call_terminate(i8* %443) #11
  unreachable

; <label>:444:                                    ; preds = %337
  unreachable

; <label>:445:                                    ; preds = %18, %3
  %446 = alloca %"class.std::vector"*, align 8
  %447 = alloca i64*, align 8
  %448 = alloca i64*, align 8
  %449 = alloca i64, align 8
  %450 = alloca %"struct.std::pair"*, align 8
  %451 = alloca %"struct.std::pair"*, align 8
  %452 = alloca i8*
  %453 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %446, align 8
  store i64* %1, i64** %447, align 8
  store i64* %2, i64** %448, align 8
  %454 = load %"class.std::vector"*, %"class.std::vector"** %446, align 8
  %455 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %454, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %455, i64* %449, align 8
  %456 = bitcast %"class.std::vector"* %454 to %"struct.std::_Vector_base"*
  %457 = load i64, i64* %449, align 8
  %458 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %456, i64 %457)
  store %"struct.std::pair"* %458, %"struct.std::pair"** %450, align 8
  %459 = load %"struct.std::pair"*, %"struct.std::pair"** %450, align 8
  store %"struct.std::pair"* %459, %"struct.std::pair"** %451, align 8
  %460 = bitcast %"class.std::vector"* %454 to %"struct.std::_Vector_base"*
  %461 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %460, i32 0, i32 0
  %462 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %461 to %"class.std::allocator"*
  %463 = load %"struct.std::pair"*, %"struct.std::pair"** %450, align 8
  %464 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %454) #3
  %465 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %463, i64 %464
  %466 = load i64*, i64** %447, align 8
  %467 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %466) #3
  %468 = load i64*, i64** %448, align 8
  %469 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %468) #3
  br label %18

; <label>:470:                                    ; preds = %85, %70
  store %"struct.std::pair"* null, %"struct.std::pair"** %24, align 8
  %471 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %472 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %471, i32 0, i32 0
  %473 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %472, i32 0, i32 0
  %474 = load %"struct.std::pair"*, %"struct.std::pair"** %473, align 8
  %475 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %476 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %475, i32 0, i32 0
  %477 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %476, i32 0, i32 1
  %478 = load %"struct.std::pair"*, %"struct.std::pair"** %477, align 8
  %479 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %480 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %481 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %480) #3
  br label %85

; <label>:482:                                    ; preds = %163, %136
  %483 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %484 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %483, i32 0, i32 0
  %485 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %484 to %"class.std::allocator"*
  %486 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %487 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector"* %27) #3
  %488 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %486, i64 %487
  br label %163

; <label>:489:                                    ; preds = %224, %197
  br label %224

; <label>:490:                                    ; preds = %267, %252
  %491 = landingpad { i8*, i32 }
          cleanup
  %492 = extractvalue { i8*, i32 } %491, 0
  store i8* %492, i8** %25, align 8
  %493 = extractvalue { i8*, i32 } %491, 1
  store i32 %493, i32* %26, align 4
  br label %267

; <label>:494:                                    ; preds = %310, %295
  br label %310

; <label>:495:                                    ; preds = %365, %338
  br label %365
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.729
  %8 = load i32, i32* @y.730
  %9 = add i32 %7, 1015891037
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1015891037
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1392537759, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1392537759, label %21
    i32 -1035646, label %41
    i32 -575196679, label %81
    i32 -1736019436, label %82
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1035646, i32 -1736019436
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %43 = alloca %"struct.std::pair"*, align 8
  %44 = alloca i64*, align 8
  %45 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %42, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %43, align 8
  store i64* %2, i64** %44, align 8
  store i64* %3, i64** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %42, align 8
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %48 = bitcast %"struct.std::pair"* %47 to i8*
  %49 = bitcast i8* %48 to %"struct.std::pair"*
  %50 = load i64*, i64** %44, align 8
  %51 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %50) #3
  %52 = load i64*, i64** %45, align 8
  %53 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %52) #3
  call void @_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_(%"struct.std::pair"* %49, i64* dereferenceable(8) %51, i64* dereferenceable(8) %53)
  %54 = load i32, i32* @x.729
  %55 = load i32, i32* @y.730
  %56 = add i32 %54, -1467518472
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1467518472
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -575196679, i32 -1736019436
  store i32 %80, i32* %17
  br label %95

; <label>:81:                                     ; preds = %18
  ret void

; <label>:82:                                     ; preds = %18
  %83 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %84 = alloca %"struct.std::pair"*, align 8
  %85 = alloca i64*, align 8
  %86 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %83, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %84, align 8
  store i64* %2, i64** %85, align 8
  store i64* %3, i64** %86, align 8
  %87 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %83, align 8
  %88 = load %"struct.std::pair"*, %"struct.std::pair"** %84, align 8
  %89 = bitcast %"struct.std::pair"* %88 to i8*
  %90 = bitcast i8* %89 to %"struct.std::pair"*
  %91 = load i64*, i64** %85, align 8
  %92 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %91) #3
  %93 = load i64*, i64** %86, align 8
  %94 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %93) #3
  call void @_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_(%"struct.std::pair"* %90, i64* dereferenceable(8) %92, i64* dereferenceable(8) %94)
  store i32 -1035646, i32* %17
  br label %95

; <label>:95:                                     ; preds = %82, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_(%"struct.std::pair"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i64*, i64** %6, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.54"*, i64) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.733
  %7 = load i32, i32* @y.734
  %8 = sub i32 %6, -243788096
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -243788096
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 28932258, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %109
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 28932258, label %20
    i32 -1359323337, label %40
    i32 233681811, label %83
    i32 -600272702, label %85
  ]

; <label>:19:                                     ; preds = %17
  br label %109

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1359323337, i32 -600272702
  store i32 %39, i32* %16
  br label %109

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %42, align 8
  store i64 %1, i64* %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %42, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %45, i32 0, i32 0
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %46, align 8
  %48 = load i64, i64* %43, align 8
  %49 = sub i64 0, -3388246478048467500
  %50 = sub i64 %49, %48
  %51 = add i64 %50, -3388246478048467500
  %52 = sub i64 0, %48
  %53 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %47, i64 %51
  store %"struct.std::pair"* %53, %"struct.std::pair"** %44, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.54"* %41, %"struct.std::pair"** dereferenceable(8) %44) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %41, i32 0, i32 0
  %55 = load %"struct.std::pair"*, %"struct.std::pair"** %54, align 8
  store %"struct.std::pair"* %55, %"struct.std::pair"** %3
  %56 = load i32, i32* @x.733
  %57 = load i32, i32* @y.734
  %58 = add i32 %56, 967550563
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 967550563
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 233681811, i32 -600272702
  store i32 %82, i32* %16
  br label %109

; <label>:83:                                     ; preds = %17
  %84 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %3
  ret %"struct.std::pair"* %84

; <label>:85:                                     ; preds = %17
  %86 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  %88 = alloca i64, align 8
  %89 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %87, align 8
  store i64 %1, i64* %88, align 8
  %90 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %87, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %90, i32 0, i32 0
  %92 = load %"struct.std::pair"*, %"struct.std::pair"** %91, align 8
  %93 = load i64, i64* %88, align 8
  %94 = shl i64 0, %93
  %95 = sub i64 0, 0
  %96 = add i64 0, %95
  %97 = sub i64 0, 0
  %98 = add i64 %96, -2914505815684811818
  %99 = add i64 %98, %93
  %100 = sub i64 %99, -2914505815684811818
  %101 = add i64 %96, %93
  %102 = add i64 0, 5878299506918602623
  %103 = sub i64 %102, %93
  %104 = sub i64 %103, 5878299506918602623
  %105 = sub i64 0, %93
  %106 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %92, i64 %104
  store %"struct.std::pair"* %106, %"struct.std::pair"** %89, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.54"* %86, %"struct.std::pair"** dereferenceable(8) %89) #3
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %86, i32 0, i32 0
  %108 = load %"struct.std::pair"*, %"struct.std::pair"** %107, align 8
  store i32 -1359323337, i32* %16
  br label %109

; <label>:109:                                    ; preds = %85, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EES7_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.735
  %4 = load i32, i32* @y.736
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -2034037035, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -2034037035, label %16
    i32 1665183967, label %24
    i32 -1767131073, label %55
    i32 -1162485151, label %56
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 1665183967, i32 -1162485151
  store i32 %23, i32* %12
  br label %60

; <label>:24:                                     ; preds = %13
  %25 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %26 = alloca %"struct.std::greater", align 1
  %27 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %25)
  %28 = load i32, i32* @x.735
  %29 = load i32, i32* @y.736
  %30 = sub i32 %28, -847574526
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -847574526
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1767131073, i32 -1162485151
  store i32 %54, i32* %12
  br label %60

; <label>:55:                                     ; preds = %13
  ret void

; <label>:56:                                     ; preds = %13
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %58 = alloca %"struct.std::greater", align 1
  %59 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %57)
  store i32 1665183967, i32* %12
  br label %60

; <label>:60:                                     ; preds = %56, %24, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorISt4pairIxxESaIS1_EE5emptyEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = call %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  store %"struct.std::pair"* %6, %"struct.std::pair"** %7, align 8
  %8 = call %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector"* %5) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %4, i32 0, i32 0
  store %"struct.std::pair"* %8, %"struct.std::pair"** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8) %4) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %1, %"class.__gnu_cxx::__normal_iterator.55"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %3, align 8
  %6 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"* %5) #3
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %4, align 8
  %9 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"* %8) #3
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %11 = icmp eq %"struct.std::pair"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.741
  %6 = load i32, i32* @y.742
  %7 = sub i32 %5, -1282360054
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1282360054
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 14536024, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 14536024, label %19
    i32 390867898, label %27
    i32 531697232, label %65
    i32 1686226791, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 390867898, i32 1686226791
  store i32 %26, i32* %15
  br label %78

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.std::pair"*, %"struct.std::pair"** %34, align 8
  store %"struct.std::pair"* %35, %"struct.std::pair"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.55"* %28, %"struct.std::pair"** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %28, i32 0, i32 0
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %36, align 8
  store %"struct.std::pair"* %37, %"struct.std::pair"** %2
  %38 = load i32, i32* @x.741
  %39 = load i32, i32* @y.742
  %40 = sub i32 %38, -200913435
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -200913435
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 531697232, i32 1686226791
  store i32 %64, i32* %15
  br label %78

; <label>:65:                                     ; preds = %16
  %66 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %66

; <label>:67:                                     ; preds = %16
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  %69 = alloca %"class.std::vector"*, align 8
  %70 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %69, align 8
  %71 = load %"class.std::vector"*, %"class.std::vector"** %69, align 8
  %72 = bitcast %"class.std::vector"* %71 to %"struct.std::_Vector_base"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %73, i32 0, i32 0
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %74, align 8
  store %"struct.std::pair"* %75, %"struct.std::pair"** %70, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.55"* %68, %"struct.std::pair"** dereferenceable(8) %70) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %68, i32 0, i32 0
  %77 = load %"struct.std::pair"*, %"struct.std::pair"** %76, align 8
  store i32 390867898, i32* %15
  br label %78

; <label>:78:                                     ; preds = %67, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  store %"struct.std::pair"* %9, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.55"* %2, %"struct.std::pair"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %2, i32 0, i32 0
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8
  ret %"struct.std::pair"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  ret %"struct.std::pair"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.55"*, %"struct.std::pair"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.747
  %6 = load i32, i32* @y.748
  %7 = add i32 %5, -2047163906
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2047163906
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -364300098, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -364300098, label %19
    i32 439690515, label %27
    i32 2138203656, label %61
    i32 -2143059240, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 439690515, i32 -2143059240
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  %29 = alloca %"struct.std::pair"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %28, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %30, i32 0, i32 0
  %32 = load %"struct.std::pair"**, %"struct.std::pair"*** %29, align 8
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  store %"struct.std::pair"* %33, %"struct.std::pair"** %31, align 8
  %34 = load i32, i32* @x.747
  %35 = load i32, i32* @y.748
  %36 = add i32 %34, -1966960198
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1966960198
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 2138203656, i32 -2143059240
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  %64 = alloca %"struct.std::pair"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %63, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %65, i32 0, i32 0
  %67 = load %"struct.std::pair"**, %"struct.std::pair"*** %64, align 8
  %68 = load %"struct.std::pair"*, %"struct.std::pair"** %67, align 8
  store %"struct.std::pair"* %68, %"struct.std::pair"** %66, align 8
  store i32 439690515, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5frontEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %5 = call %"struct.std::pair"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  store %"struct.std::pair"* %5, %"struct.std::pair"** %6, align 8
  %7 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.55"* %3) #3
  ret %"struct.std::pair"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.55"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %6 = alloca %"struct.std::greater", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = alloca %"struct.std::greater", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %14, align 8
  %15 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %4) #3
  store i64 %15, i64* %3
  %16 = alloca i32
  store i32 1148079516, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %96
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1148079516, label %20
    i32 789613951, label %24
    i32 1095326287, label %39
    i32 -2099162539, label %80
    i32 -1446977575, label %81
    i32 -706168124, label %82
  ]

; <label>:19:                                     ; preds = %17
  br label %96

; <label>:20:                                     ; preds = %17
  %21 = load volatile i64, i64* %3
  %22 = icmp sgt i64 %21, 1
  %23 = select i1 %22, i32 789613951, i32 -1446977575
  store i32 %23, i32* %16
  br label %96

; <label>:24:                                     ; preds = %17
  %25 = load i32, i32* @x.753
  %26 = load i32, i32* @y.754
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 1095326287, i32 -706168124
  store i32 %38, i32* %16
  br label %96

; <label>:39:                                     ; preds = %17
  %40 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.54"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.54"* %5) #3
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %7 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %8 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %9 to i8*
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_()
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  %48 = load %"struct.std::pair"*, %"struct.std::pair"** %47, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %8, i32 0, i32 0
  %50 = load %"struct.std::pair"*, %"struct.std::pair"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %9, i32 0, i32 0
  %52 = load %"struct.std::pair"*, %"struct.std::pair"** %51, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_(%"struct.std::pair"* %48, %"struct.std::pair"* %50, %"struct.std::pair"* %52)
  %53 = load i32, i32* @x.753
  %54 = load i32, i32* @y.754
  %55 = add i32 %53, 1488988130
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1488988130
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -2099162539, i32 -706168124
  store i32 %79, i32* %16
  br label %96

; <label>:80:                                     ; preds = %17
  store i32 -1446977575, i32* %16
  br label %96

; <label>:81:                                     ; preds = %17
  ret void

; <label>:82:                                     ; preds = %17
  %83 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.54"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.54"* %5) #3
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %7 to i8*
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %8 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %9 to i8*
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_()
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %7, i32 0, i32 0
  %91 = load %"struct.std::pair"*, %"struct.std::pair"** %90, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %8, i32 0, i32 0
  %93 = load %"struct.std::pair"*, %"struct.std::pair"** %92, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %9, i32 0, i32 0
  %95 = load %"struct.std::pair"*, %"struct.std::pair"** %94, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_(%"struct.std::pair"* %91, %"struct.std::pair"* %93, %"struct.std::pair"* %95)
  store i32 1095326287, i32* %16
  br label %96

; <label>:96:                                     ; preds = %82, %80, %39, %24, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE8pop_backEv(%"class.std::vector"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 -1
  store %"struct.std::pair"* %8, %"struct.std::pair"** %6, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %10 to %"class.std::allocator"*
  %12 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1) %11, %"struct.std::pair"* %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %1
  ret void

; <label>:17:                                     ; preds = %1
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.54"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.54"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.54"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.54"* %0, %"class.__gnu_cxx::__normal_iterator.54"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.54"*, %"class.__gnu_cxx::__normal_iterator.54"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 -1
  store %"struct.std::pair"* %6, %"struct.std::pair"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.54"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"struct.std::pair", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.54", align 8
  %10 = alloca %"struct.std::pair", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %6, i32 0, i32 0
  store %"struct.std::pair"* %2, %"struct.std::pair"** %14, align 8
  %15 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %6) #3
  %16 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %15) #3
  %17 = bitcast %"struct.std::pair"* %8 to i8*
  %18 = bitcast %"struct.std::pair"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false)
  %19 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %4) #3
  %20 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %19) #3
  %21 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.54"* %6) #3
  %22 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair"* %21, %"struct.std::pair"* dereferenceable(16) %20) #3
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %9 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.54"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.54"* dereferenceable(8) %4) #3
  %26 = call dereferenceable(16) %"struct.std::pair"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(16) %8) #3
  %27 = bitcast %"struct.std::pair"* %10 to i8*
  %28 = bitcast %"struct.std::pair"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 16, i32 8, i1 false)
  %29 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 1, i32 1, i1 false)
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.54", %"class.__gnu_cxx::__normal_iterator.54"* %9, i32 0, i32 0
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %33 = bitcast %"struct.std::pair"* %10 to { i64, i64 }*
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair"* %32, i64 0, i64 %25, i64 %35, i64 %37)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::tuple"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::tuple"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::tuple"** %1, %"class.std::tuple"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple"**, %"class.std::tuple"*** %4, align 8
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple"* %8, %"class.std::tuple"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxxxEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::tuple"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EEC2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %3 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %3 to %"class.std::allocator.27"*
  call void @_ZNSaISt5tupleIJxxxxEEEC2Ev(%"class.std::allocator.27"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::tuple.30"* null, %"class.std::tuple.30"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::tuple.30"* null, %"class.std::tuple.30"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::tuple.30"* null, %"class.std::tuple.30"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxxxxEEEC2Ev(%"class.std::allocator.27"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.771
  %5 = load i32, i32* @y.772
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -505426012, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -505426012, label %17
    i32 -1675801771, label %37
    i32 -218875215, label %55
    i32 -148463718, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1675801771, i32 -148463718
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %38, align 8
  %40 = load i32, i32* @x.771
  %41 = load i32, i32* @y.772
  %42 = add i32 %40, 1344496526
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1344496526
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -218875215, i32 -148463718
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %57, align 8
  store i32 -1675801771, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::tuple.30"*, align 8
  %5 = alloca %"class.std::tuple.30"*, align 8
  %6 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %4, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %5, align 8
  store %"class.std::allocator.27"* %2, %"class.std::allocator.27"** %6, align 8
  %7 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  %8 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %5, align 8
  call void @_ZSt8_DestroyIPSt5tupleIJxxxxEEEvT_S3_(%"class.std::tuple.30"* %7, %"class.std::tuple.30"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.775
  %6 = load i32, i32* @y.776
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1724686323, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1724686323, label %18
    i32 1200116394, label %26
    i32 1266069150, label %45
    i32 -392310553, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1200116394, i32 -392310553
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %27, align 8
  %28 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %29 to %"class.std::allocator.27"*
  store %"class.std::allocator.27"* %30, %"class.std::allocator.27"** %2
  %31 = load i32, i32* @x.775
  %32 = load i32, i32* @y.776
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1266069150, i32 -392310553
  store i32 %44, i32* %14
  br label %52

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"class.std::allocator.27"*, %"class.std::allocator.27"** %2
  ret %"class.std::allocator.27"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %48, align 8
  %49 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %50 to %"class.std::allocator.27"*
  store i32 1200116394, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %5 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %13, align 8
  %15 = ptrtoint %"class.std::tuple.30"* %11 to i64
  %16 = ptrtoint %"class.std::tuple.30"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 32
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %5, %"class.std::tuple.30"* %8, i64 %20)
          to label %21 unwind label %52

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.777
  %23 = load i32, i32* @y.778
  %24 = add i32 %22, 1299244756
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1299244756
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %59

; <label>:36:                                     ; preds = %21, %59
  %37 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %37) #3
  %38 = load i32, i32* @x.777
  %39 = load i32, i32* @y.778
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %59

; <label>:51:                                     ; preds = %36
  ret void

; <label>:52:                                     ; preds = %1
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %3, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %4, align 4
  %56 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %56) #3
  br label %57

; <label>:57:                                     ; preds = %52
  %58 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %58) #11
  unreachable

; <label>:59:                                     ; preds = %36, %21
  %60 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %60) #3
  br label %36
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxxxxEEEvT_S3_(%"class.std::tuple.30"*, %"class.std::tuple.30"*) #0 comdat {
  %3 = alloca %"class.std::tuple.30"*, align 8
  %4 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %3, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %4, align 8
  %5 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %3, align 8
  %6 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxxxEEEEvT_S5_(%"class.std::tuple.30"* %5, %"class.std::tuple.30"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxxxxEEEEvT_S5_(%"class.std::tuple.30"*, %"class.std::tuple.30"*) #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.30"*, align 8
  %4 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %3, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"*, %"class.std::tuple.30"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::tuple.30"*
  %5 = alloca %"struct.std::_Vector_base.26"*
  %6 = alloca %"struct.std::_Vector_base.26"*, align 8
  %7 = alloca %"class.std::tuple.30"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %6, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %6, align 8
  store %"struct.std::_Vector_base.26"* %9, %"struct.std::_Vector_base.26"** %5
  %10 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %7, align 8
  store %"class.std::tuple.30"* %10, %"class.std::tuple.30"** %4
  %11 = alloca i32
  store i32 -1625608383, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1625608383, label %15
    i32 665748895, label %19
    i32 767736758, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %4
  %17 = icmp ne %"class.std::tuple.30"* %16, null
  %18 = select i1 %17, i32 665748895, i32 767736758
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %21 to %"class.std::allocator.27"*
  %23 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1) %22, %"class.std::tuple.30"* %23, i64 %24)
  store i32 767736758, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %3 to %"class.std::allocator.27"*
  call void @_ZNSaISt5tupleIJxxxxEEED2Ev(%"class.std::allocator.27"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1), %"class.std::tuple.30"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.787
  %7 = load i32, i32* @y.788
  %8 = sub i32 %6, 1412234553
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1412234553
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -22053015, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -22053015, label %20
    i32 -466473228, label %40
    i32 1197527630, label %75
    i32 -206445935, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -466473228, i32 -206445935
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.27"*, align 8
  %42 = alloca %"class.std::tuple.30"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %41, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %41, align 8
  %45 = bitcast %"class.std::allocator.27"* %44 to %"class.__gnu_cxx::new_allocator.28"*
  %46 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"* %45, %"class.std::tuple.30"* %46, i64 %47)
  %48 = load i32, i32* @x.787
  %49 = load i32, i32* @y.788
  %50 = sub i32 %48, -1177845875
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1177845875
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1197527630, i32 -206445935
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.27"*, align 8
  %78 = alloca %"class.std::tuple.30"*, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %77, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %77, align 8
  %81 = bitcast %"class.std::allocator.27"* %80 to %"class.__gnu_cxx::new_allocator.28"*
  %82 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"* %81, %"class.std::tuple.30"* %82, i64 %83)
  store i32 -466473228, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"*, %"class.std::tuple.30"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.789
  %7 = load i32, i32* @y.790
  %8 = add i32 %6, 422110494
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 422110494
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1124484887, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1124484887, label %20
    i32 1546023571, label %40
    i32 1392791867, label %61
    i32 -382566653, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1546023571, i32 -382566653
  store i32 %39, i32* %16
  br label %69

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %42 = alloca %"class.std::tuple.30"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %41, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %41, align 8
  %45 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %42, align 8
  %46 = bitcast %"class.std::tuple.30"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.789
  %48 = load i32, i32* @y.790
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1392791867, i32 -382566653
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %64 = alloca %"class.std::tuple.30"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %63, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %63, align 8
  %67 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %64, align 8
  %68 = bitcast %"class.std::tuple.30"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 1546023571, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxxxxEEED2Ev(%"class.std::allocator.27"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.791
  %5 = load i32, i32* @y.792
  %6 = sub i32 %4, 1309708135
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1309708135
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 504418265, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 504418265, label %18
    i32 -1661821296, label %38
    i32 1078780651, label %69
    i32 -1518288520, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1661821296, i32 -1518288520
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %39, align 8
  %40 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %39, align 8
  %41 = bitcast %"class.std::allocator.27"* %40 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEED2Ev(%"class.__gnu_cxx::new_allocator.28"* %41) #3
  %42 = load i32, i32* @x.791
  %43 = load i32, i32* @y.792
  %44 = sub i32 %42, -848997792
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -848997792
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1078780651, i32 -1518288520
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %71, align 8
  %72 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %71, align 8
  %73 = bitcast %"class.std::allocator.27"* %72 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEED2Ev(%"class.__gnu_cxx::new_allocator.28"* %73) #3
  store i32 -1661821296, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEED2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.25"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.795
  %6 = load i32, i32* @y.796
  %7 = sub i32 %5, 1843089697
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1843089697
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -47589055, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -47589055, label %19
    i32 1861533092, label %39
    i32 -1253463593, label %72
    i32 1350254097, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1861533092, i32 1350254097
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %40, align 8
  %41 = load %"class.std::vector.25"*, %"class.std::vector.25"** %40, align 8
  %42 = bitcast %"class.std::vector.25"* %41 to %"struct.std::_Vector_base.26"*
  %43 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNKSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE8max_sizeERKS2_(%"class.std::allocator.27"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.795
  %46 = load i32, i32* @y.796
  %47 = add i32 %45, 1531279456
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1531279456
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1253463593, i32 1350254097
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64, i64* %2
  ret i64 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %75, align 8
  %76 = load %"class.std::vector.25"*, %"class.std::vector.25"** %75, align 8
  %77 = bitcast %"class.std::vector.25"* %76 to %"struct.std::_Vector_base.26"*
  %78 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNKSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %77) #3
  %79 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE8max_sizeERKS2_(%"class.std::allocator.27"* dereferenceable(1) %78) #3
  store i32 1861533092, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8capacityEv(%"class.std::vector.25"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %6, align 8
  %8 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %10, align 8
  %12 = ptrtoint %"class.std::tuple.30"* %7 to i64
  %13 = ptrtoint %"class.std::tuple.30"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 32
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %6, align 8
  %8 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %10, align 8
  %12 = ptrtoint %"class.std::tuple.30"* %7 to i64
  %13 = ptrtoint %"class.std::tuple.30"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 32
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_(%"class.std::vector.25"*, i64, %"class.std::tuple.30"*, %"class.std::tuple.30"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.801
  %6 = load i32, i32* @y.802
  %7 = add i32 %5, -498194105
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -498194105
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %267

; <label>:19:                                     ; preds = %4, %267
  %20 = alloca %"class.std::move_iterator.56", align 8
  %21 = alloca %"class.std::move_iterator.56", align 8
  %22 = alloca %"class.std::vector.25"*, align 8
  %23 = alloca i64, align 8
  %24 = alloca %"class.std::tuple.30"*, align 8
  %25 = alloca %"class.std::move_iterator.56", align 8
  %26 = alloca %"class.std::move_iterator.56", align 8
  %27 = alloca i8*
  %28 = alloca i32
  %29 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %20, i32 0, i32 0
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %29, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %21, i32 0, i32 0
  store %"class.std::tuple.30"* %3, %"class.std::tuple.30"** %30, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %22, align 8
  store i64 %1, i64* %23, align 8
  %31 = load %"class.std::vector.25"*, %"class.std::vector.25"** %22, align 8
  %32 = bitcast %"class.std::vector.25"* %31 to %"struct.std::_Vector_base.26"*
  %33 = load i64, i64* %23, align 8
  %34 = call %"class.std::tuple.30"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"* %32, i64 %33)
  store %"class.std::tuple.30"* %34, %"class.std::tuple.30"** %24, align 8
  %35 = bitcast %"class.std::move_iterator.56"* %25 to i8*
  %36 = bitcast %"class.std::move_iterator.56"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = bitcast %"class.std::move_iterator.56"* %26 to i8*
  %38 = bitcast %"class.std::move_iterator.56"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %24, align 8
  %40 = bitcast %"class.std::vector.25"* %31 to %"struct.std::_Vector_base.26"*
  %41 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %40) #3
  %42 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %25, i32 0, i32 0
  %43 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %26, i32 0, i32 0
  %45 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %44, align 8
  %46 = load i32, i32* @x.801
  %47 = load i32, i32* @y.802
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %267

; <label>:59:                                     ; preds = %19
  %60 = invoke %"class.std::tuple.30"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.30"* %43, %"class.std::tuple.30"* %45, %"class.std::tuple.30"* %39, %"class.std::allocator.27"* dereferenceable(1) %41)
          to label %61 unwind label %63

; <label>:61:                                     ; preds = %59
  %62 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %24, align 8
  ret %"class.std::tuple.30"* %62

; <label>:63:                                     ; preds = %59
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %27, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %28, align 4
  br label %67

; <label>:67:                                     ; preds = %63
  %68 = load i8*, i8** %27, align 8
  %69 = call i8* @__cxa_begin_catch(i8* %68) #3
  %70 = bitcast %"class.std::vector.25"* %31 to %"struct.std::_Vector_base.26"*
  %71 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %24, align 8
  %72 = load i64, i64* %23, align 8
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %70, %"class.std::tuple.30"* %71, i64 %72)
          to label %73 unwind label %74

; <label>:73:                                     ; preds = %67
  invoke void @__cxa_rethrow() #12
          to label %266 unwind label %74

; <label>:74:                                     ; preds = %73, %67
  %75 = load i32, i32* @x.801
  %76 = load i32, i32* @y.802
  %77 = sub i32 %75, -542886483
  %78 = sub i32 %77, 1
  %79 = add i32 %78, -542886483
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %294

; <label>:89:                                     ; preds = %74, %294
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %27, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %28, align 4
  %93 = load i32, i32* @x.801
  %94 = load i32, i32* @y.802
  %95 = add i32 %93, 951422957
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, 951422957
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  br i1 %117, label %119, label %294

; <label>:119:                                    ; preds = %89
  invoke void @__cxa_end_catch()
          to label %120 unwind label %263

; <label>:120:                                    ; preds = %119
  %121 = load i32, i32* @x.801
  %122 = load i32, i32* @y.802
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %298

; <label>:146:                                    ; preds = %120, %298
  %147 = load i32, i32* @x.801
  %148 = load i32, i32* @y.802
  %149 = sub i32 %147, -1235980205
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -1235980205
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 true, true
  %160 = and i1 %157, true
  %161 = and i1 %155, %159
  %162 = and i1 %158, true
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 true, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  br i1 %171, label %173, label %298

; <label>:173:                                    ; preds = %146
  br label %205
                                                  ; No predecessors!
  %175 = load i32, i32* @x.801
  %176 = load i32, i32* @y.802
  %177 = sub i32 %175, 1797776863
  %178 = sub i32 %177, 1
  %179 = add i32 %178, 1797776863
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %299

; <label>:189:                                    ; preds = %174, %299
  call void @llvm.trap()
  %190 = load i32, i32* @x.801
  %191 = load i32, i32* @y.802
  %192 = add i32 %190, -1154189508
  %193 = sub i32 %192, 1
  %194 = sub i32 %193, -1154189508
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  br i1 %202, label %204, label %299

; <label>:204:                                    ; preds = %189
  unreachable

; <label>:205:                                    ; preds = %173
  %206 = load i32, i32* @x.801
  %207 = load i32, i32* @y.802
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 true, true
  %218 = and i1 %215, true
  %219 = and i1 %213, %217
  %220 = and i1 %216, true
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 true, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %300

; <label>:231:                                    ; preds = %205, %300
  %232 = load i8*, i8** %27, align 8
  %233 = load i32, i32* %28, align 4
  %234 = insertvalue { i8*, i32 } undef, i8* %232, 0
  %235 = insertvalue { i8*, i32 } %234, i32 %233, 1
  %236 = load i32, i32* @x.801
  %237 = load i32, i32* @y.802
  %238 = sub i32 %236, -317136365
  %239 = sub i32 %238, 1
  %240 = add i32 %239, -317136365
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 true, true
  %249 = and i1 %246, true
  %250 = and i1 %244, %248
  %251 = and i1 %247, true
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 true, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %300

; <label>:262:                                    ; preds = %231
  resume { i8*, i32 } %235

; <label>:263:                                    ; preds = %119
  %264 = landingpad { i8*, i32 }
          catch i8* null
  %265 = extractvalue { i8*, i32 } %264, 0
  call void @__clang_call_terminate(i8* %265) #11
  unreachable

; <label>:266:                                    ; preds = %73
  unreachable

; <label>:267:                                    ; preds = %19, %4
  %268 = alloca %"class.std::move_iterator.56", align 8
  %269 = alloca %"class.std::move_iterator.56", align 8
  %270 = alloca %"class.std::vector.25"*, align 8
  %271 = alloca i64, align 8
  %272 = alloca %"class.std::tuple.30"*, align 8
  %273 = alloca %"class.std::move_iterator.56", align 8
  %274 = alloca %"class.std::move_iterator.56", align 8
  %275 = alloca i8*
  %276 = alloca i32
  %277 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %268, i32 0, i32 0
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %277, align 8
  %278 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %269, i32 0, i32 0
  store %"class.std::tuple.30"* %3, %"class.std::tuple.30"** %278, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %270, align 8
  store i64 %1, i64* %271, align 8
  %279 = load %"class.std::vector.25"*, %"class.std::vector.25"** %270, align 8
  %280 = bitcast %"class.std::vector.25"* %279 to %"struct.std::_Vector_base.26"*
  %281 = load i64, i64* %271, align 8
  %282 = call %"class.std::tuple.30"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"* %280, i64 %281)
  store %"class.std::tuple.30"* %282, %"class.std::tuple.30"** %272, align 8
  %283 = bitcast %"class.std::move_iterator.56"* %273 to i8*
  %284 = bitcast %"class.std::move_iterator.56"* %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %283, i8* %284, i64 8, i32 8, i1 false)
  %285 = bitcast %"class.std::move_iterator.56"* %274 to i8*
  %286 = bitcast %"class.std::move_iterator.56"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %285, i8* %286, i64 8, i32 8, i1 false)
  %287 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %272, align 8
  %288 = bitcast %"class.std::vector.25"* %279 to %"struct.std::_Vector_base.26"*
  %289 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %288) #3
  %290 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %273, i32 0, i32 0
  %291 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %290, align 8
  %292 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %274, i32 0, i32 0
  %293 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %292, align 8
  br label %19

; <label>:294:                                    ; preds = %89, %74
  %295 = landingpad { i8*, i32 }
          cleanup
  %296 = extractvalue { i8*, i32 } %295, 0
  store i8* %296, i8** %27, align 8
  %297 = extractvalue { i8*, i32 } %295, 1
  store i32 %297, i32* %28, align 4
  br label %89

; <label>:298:                                    ; preds = %146, %120
  br label %146

; <label>:299:                                    ; preds = %189, %174
  call void @llvm.trap()
  br label %189

; <label>:300:                                    ; preds = %231, %205
  %301 = load i8*, i8** %27, align 8
  %302 = load i32, i32* %28, align 4
  %303 = insertvalue { i8*, i32 } undef, i8* %301, 0
  %304 = insertvalue { i8*, i32 } %303, i32 %302, 1
  br label %231
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.56", align 8
  %3 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %3, align 8
  %4 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt5tupleIJxxxxEEEC2ES2_(%"class.std::move_iterator.56"* %2, %"class.std::tuple.30"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %2, i32 0, i32 0
  %6 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %5, align 8
  ret %"class.std::tuple.30"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE8max_sizeERKS2_(%"class.std::allocator.27"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZNKSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %3 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.27"*
  ret %"class.std::allocator.27"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret i64 576460752303423487
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.30"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.26"*
  %6 = alloca %"struct.std::_Vector_base.26"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %6, align 8
  store %"struct.std::_Vector_base.26"* %8, %"struct.std::_Vector_base.26"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1982638104, i32* %10
  %11 = alloca %"class.std::tuple.30"*
  br label %12

; <label>:12:                                     ; preds = %2, %73
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1982638104, label %15
    i32 -1711308486, label %19
    i32 -659581598, label %25
    i32 1234697257, label %26
    i32 -282248235, label %43
    i32 -1629178386, label %70
    i32 -104450381, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %73

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -1711308486, i32 -659581598
  store i32 %18, i32* %10
  br label %73

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %21 to %"class.std::allocator.27"*
  %23 = load i64, i64* %7, align 8
  %24 = call %"class.std::tuple.30"* @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1) %22, i64 %23)
  store i32 1234697257, i32* %10
  store %"class.std::tuple.30"* %24, %"class.std::tuple.30"** %11
  br label %73

; <label>:25:                                     ; preds = %12
  store i32 1234697257, i32* %10
  store %"class.std::tuple.30"* null, %"class.std::tuple.30"** %11
  br label %73

; <label>:26:                                     ; preds = %12
  %27 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %11
  store %"class.std::tuple.30"* %27, %"class.std::tuple.30"** %3
  %28 = load i32, i32* @x.811
  %29 = load i32, i32* @y.812
  %30 = add i32 %28, -305045680
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -305045680
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -282248235, i32 -104450381
  store i32 %42, i32* %10
  br label %73

; <label>:43:                                     ; preds = %12
  %44 = load i32, i32* @x.811
  %45 = load i32, i32* @y.812
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1629178386, i32 -104450381
  store i32 %69, i32* %10
  br label %73

; <label>:70:                                     ; preds = %12
  %71 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %3
  ret %"class.std::tuple.30"* %71

; <label>:72:                                     ; preds = %12
  store i32 -282248235, i32* %10
  br label %73

; <label>:73:                                     ; preds = %72, %43, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::tuple.30"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.813
  %9 = load i32, i32* @y.814
  %10 = sub i32 %8, -1643118134
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1643118134
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 41502063, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %96
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 41502063, label %22
    i32 -99037405, label %42
    i32 1783070662, label %75
    i32 -1988469862, label %77
  ]

; <label>:21:                                     ; preds = %19
  br label %96

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -99037405, i32 -1988469862
  store i32 %41, i32* %18
  br label %96

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::move_iterator.56", align 8
  %44 = alloca %"class.std::move_iterator.56", align 8
  %45 = alloca %"class.std::tuple.30"*, align 8
  %46 = alloca %"class.std::allocator.27"*, align 8
  %47 = alloca %"class.std::move_iterator.56", align 8
  %48 = alloca %"class.std::move_iterator.56", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %43, i32 0, i32 0
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %49, align 8
  %50 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %44, i32 0, i32 0
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %50, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %45, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %46, align 8
  %51 = bitcast %"class.std::move_iterator.56"* %47 to i8*
  %52 = bitcast %"class.std::move_iterator.56"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.std::move_iterator.56"* %48 to i8*
  %54 = bitcast %"class.std::move_iterator.56"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %47, i32 0, i32 0
  %57 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %48, i32 0, i32 0
  %59 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %58, align 8
  %60 = call %"class.std::tuple.30"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxxxEEES3_ET0_T_S6_S5_(%"class.std::tuple.30"* %57, %"class.std::tuple.30"* %59, %"class.std::tuple.30"* %55)
  store %"class.std::tuple.30"* %60, %"class.std::tuple.30"** %5
  %61 = load i32, i32* @x.813
  %62 = load i32, i32* @y.814
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 1783070662, i32 -1988469862
  store i32 %74, i32* %18
  br label %96

; <label>:75:                                     ; preds = %19
  %76 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %5
  ret %"class.std::tuple.30"* %76

; <label>:77:                                     ; preds = %19
  %78 = alloca %"class.std::move_iterator.56", align 8
  %79 = alloca %"class.std::move_iterator.56", align 8
  %80 = alloca %"class.std::tuple.30"*, align 8
  %81 = alloca %"class.std::allocator.27"*, align 8
  %82 = alloca %"class.std::move_iterator.56", align 8
  %83 = alloca %"class.std::move_iterator.56", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %78, i32 0, i32 0
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %79, i32 0, i32 0
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %85, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %80, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %81, align 8
  %86 = bitcast %"class.std::move_iterator.56"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.56"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator.56"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator.56"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %82, i32 0, i32 0
  %92 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %83, i32 0, i32 0
  %94 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %93, align 8
  %95 = call %"class.std::tuple.30"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxxxEEES3_ET0_T_S6_S5_(%"class.std::tuple.30"* %92, %"class.std::tuple.30"* %94, %"class.std::tuple.30"* %90)
  store i32 -99037405, i32* %18
  br label %96

; <label>:96:                                     ; preds = %77, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.30"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.815
  %7 = load i32, i32* @y.816
  %8 = sub i32 %6, -401147538
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -401147538
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 207572566, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 207572566, label %20
    i32 59054028, label %40
    i32 -503339714, label %74
    i32 -1847918726, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 59054028, i32 -1847918726
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.27"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %41, align 8
  %44 = bitcast %"class.std::allocator.27"* %43 to %"class.__gnu_cxx::new_allocator.28"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::tuple.30"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %44, i64 %45, i8* null)
  store %"class.std::tuple.30"* %46, %"class.std::tuple.30"** %3
  %47 = load i32, i32* @x.815
  %48 = load i32, i32* @y.816
  %49 = add i32 %47, -136833248
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -136833248
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -503339714, i32 -1847918726
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %3
  ret %"class.std::tuple.30"* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.27"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %77, align 8
  %80 = bitcast %"class.std::allocator.27"* %79 to %"class.__gnu_cxx::new_allocator.28"*
  %81 = load i64, i64* %78, align 8
  %82 = call %"class.std::tuple.30"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %80, i64 %81, i8* null)
  store i32 59054028, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1017209018, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1017209018, label %16
    i32 -618947103, label %21
    i32 386547582, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -618947103, i32 386547582
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 32
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::tuple.30"*
  ret %"class.std::tuple.30"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxxxxEEES3_ET0_T_S6_S5_(%"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::tuple.30"*) #0 comdat {
  %4 = alloca %"class.std::tuple.30"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.819
  %8 = load i32, i32* @y.820
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1303611110, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %94
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1303611110, label %20
    i32 -1057625216, label %28
    i32 -726840034, label %73
    i32 -1839456304, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %94

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1057625216, i32 -1839456304
  store i32 %27, i32* %16
  br label %94

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.56", align 8
  %30 = alloca %"class.std::move_iterator.56", align 8
  %31 = alloca %"class.std::tuple.30"*, align 8
  %32 = alloca i8, align 1
  %33 = alloca %"class.std::move_iterator.56", align 8
  %34 = alloca %"class.std::move_iterator.56", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %29, i32 0, i32 0
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %30, i32 0, i32 0
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %36, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %31, align 8
  store i8 1, i8* %32, align 1
  %37 = bitcast %"class.std::move_iterator.56"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.56"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.std::move_iterator.56"* %34 to i8*
  %40 = bitcast %"class.std::move_iterator.56"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %31, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %33, i32 0, i32 0
  %43 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %34, i32 0, i32 0
  %45 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %44, align 8
  %46 = call %"class.std::tuple.30"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxxEEES5_EET0_T_S8_S7_(%"class.std::tuple.30"* %43, %"class.std::tuple.30"* %45, %"class.std::tuple.30"* %41)
  store %"class.std::tuple.30"* %46, %"class.std::tuple.30"** %4
  %47 = load i32, i32* @x.819
  %48 = load i32, i32* @y.820
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -726840034, i32 -1839456304
  store i32 %72, i32* %16
  br label %94

; <label>:73:                                     ; preds = %17
  %74 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %4
  ret %"class.std::tuple.30"* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::move_iterator.56", align 8
  %77 = alloca %"class.std::move_iterator.56", align 8
  %78 = alloca %"class.std::tuple.30"*, align 8
  %79 = alloca i8, align 1
  %80 = alloca %"class.std::move_iterator.56", align 8
  %81 = alloca %"class.std::move_iterator.56", align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %76, i32 0, i32 0
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %82, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %77, i32 0, i32 0
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %83, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %78, align 8
  store i8 1, i8* %79, align 1
  %84 = bitcast %"class.std::move_iterator.56"* %80 to i8*
  %85 = bitcast %"class.std::move_iterator.56"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = bitcast %"class.std::move_iterator.56"* %81 to i8*
  %87 = bitcast %"class.std::move_iterator.56"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %78, align 8
  %89 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %80, i32 0, i32 0
  %90 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %89, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %81, i32 0, i32 0
  %92 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %91, align 8
  %93 = call %"class.std::tuple.30"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxxEEES5_EET0_T_S8_S7_(%"class.std::tuple.30"* %90, %"class.std::tuple.30"* %92, %"class.std::tuple.30"* %88)
  store i32 -1057625216, i32* %16
  br label %94

; <label>:94:                                     ; preds = %75, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxxxxEEES5_EET0_T_S8_S7_(%"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::tuple.30"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.821
  %5 = load i32, i32* @y.822
  %6 = add i32 %4, 1943406914
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1943406914
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %331

; <label>:30:                                     ; preds = %3, %331
  %31 = alloca %"class.std::move_iterator.56", align 8
  %32 = alloca %"class.std::move_iterator.56", align 8
  %33 = alloca %"class.std::tuple.30"*, align 8
  %34 = alloca %"class.std::tuple.30"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %31, i32 0, i32 0
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %32, i32 0, i32 0
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %38, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %33, align 8
  %39 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %33, align 8
  store %"class.std::tuple.30"* %39, %"class.std::tuple.30"** %34, align 8
  %40 = load i32, i32* @x.821
  %41 = load i32, i32* @y.822
  %42 = add i32 %40, 4882770
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 4882770
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %331

; <label>:66:                                     ; preds = %30
  br label %67

; <label>:67:                                     ; preds = %189, %66
  %68 = load i32, i32* @x.821
  %69 = load i32, i32* @y.822
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %341

; <label>:81:                                     ; preds = %67, %341
  %82 = load i32, i32* @x.821
  %83 = load i32, i32* @y.822
  %84 = add i32 %82, -584611546
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -584611546
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %341

; <label>:96:                                     ; preds = %81
  %97 = invoke zeroext i1 @_ZStneIPSt5tupleIJxxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.56"* dereferenceable(8) %31, %"class.std::move_iterator.56"* dereferenceable(8) %32)
          to label %98 unwind label %192

; <label>:98:                                     ; preds = %96
  br i1 %97, label %99, label %202

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* @x.821
  %101 = load i32, i32* @y.822
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %342

; <label>:113:                                    ; preds = %99, %342
  %114 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %34, align 8
  %115 = call %"class.std::tuple.30"* @_ZSt11__addressofISt5tupleIJxxxxEEEPT_RS2_(%"class.std::tuple.30"* dereferenceable(32) %114) #3
  %116 = load i32, i32* @x.821
  %117 = load i32, i32* @y.822
  %118 = sub i32 %116, 919708794
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 919708794
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %342

; <label>:142:                                    ; preds = %113
  %143 = invoke dereferenceable(32) %"class.std::tuple.30"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxxEEEdeEv(%"class.std::move_iterator.56"* %31)
          to label %144 unwind label %192

; <label>:144:                                    ; preds = %142
  %145 = load i32, i32* @x.821
  %146 = load i32, i32* @y.822
  %147 = add i32 %145, 1797906186
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 1797906186
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 true, true
  %158 = and i1 %155, true
  %159 = and i1 %153, %157
  %160 = and i1 %156, true
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 true, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %345

; <label>:171:                                    ; preds = %144, %345
  %172 = load i32, i32* @x.821
  %173 = load i32, i32* @y.822
  %174 = sub i32 0, 1
  %175 = add i32 %172, %174
  %176 = sub i32 %172, 1
  %177 = mul i32 %172, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %173, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %345

; <label>:185:                                    ; preds = %171
  invoke void @_ZSt10_ConstructISt5tupleIJxxxxEEJS1_EEvPT_DpOT0_(%"class.std::tuple.30"* %115, %"class.std::tuple.30"* dereferenceable(32) %143)
          to label %186 unwind label %192

; <label>:186:                                    ; preds = %185
  br label %187

; <label>:187:                                    ; preds = %186
  %188 = invoke dereferenceable(8) %"class.std::move_iterator.56"* @_ZNSt13move_iteratorIPSt5tupleIJxxxxEEEppEv(%"class.std::move_iterator.56"* %31)
          to label %189 unwind label %192

; <label>:189:                                    ; preds = %187
  %190 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %34, align 8
  %191 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %190, i32 1
  store %"class.std::tuple.30"* %191, %"class.std::tuple.30"** %34, align 8
  br label %67

; <label>:192:                                    ; preds = %187, %185, %142, %96
  %193 = landingpad { i8*, i32 }
          catch i8* null
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %35, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %36, align 4
  br label %196

; <label>:196:                                    ; preds = %192
  %197 = load i8*, i8** %35, align 8
  %198 = call i8* @__cxa_begin_catch(i8* %197) #3
  %199 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %33, align 8
  %200 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxxxEEEvT_S3_(%"class.std::tuple.30"* %199, %"class.std::tuple.30"* %200)
          to label %201 unwind label %204

; <label>:201:                                    ; preds = %196
  invoke void @__cxa_rethrow() #12
          to label %300 unwind label %204

; <label>:202:                                    ; preds = %98
  %203 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %34, align 8
  ret %"class.std::tuple.30"* %203

; <label>:204:                                    ; preds = %201, %196
  %205 = landingpad { i8*, i32 }
          cleanup
  %206 = extractvalue { i8*, i32 } %205, 0
  store i8* %206, i8** %35, align 8
  %207 = extractvalue { i8*, i32 } %205, 1
  store i32 %207, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %208 unwind label %256

; <label>:208:                                    ; preds = %204
  br label %251
                                                  ; No predecessors!
  %210 = load i32, i32* @x.821
  %211 = load i32, i32* @y.822
  %212 = sub i32 0, 1
  %213 = add i32 %210, %212
  %214 = sub i32 %210, 1
  %215 = mul i32 %210, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %211, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 true, true
  %222 = and i1 %219, true
  %223 = and i1 %217, %221
  %224 = and i1 %220, true
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 true, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  br i1 %233, label %235, label %346

; <label>:235:                                    ; preds = %209, %346
  call void @llvm.trap()
  %236 = load i32, i32* @x.821
  %237 = load i32, i32* @y.822
  %238 = add i32 %236, -630828403
  %239 = sub i32 %238, 1
  %240 = sub i32 %239, -630828403
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = and i1 %244, %245
  %247 = xor i1 %244, %245
  %248 = or i1 %246, %247
  %249 = or i1 %244, %245
  br i1 %248, label %250, label %346

; <label>:250:                                    ; preds = %235
  unreachable

; <label>:251:                                    ; preds = %208
  %252 = load i8*, i8** %35, align 8
  %253 = load i32, i32* %36, align 4
  %254 = insertvalue { i8*, i32 } undef, i8* %252, 0
  %255 = insertvalue { i8*, i32 } %254, i32 %253, 1
  resume { i8*, i32 } %255

; <label>:256:                                    ; preds = %204
  %257 = load i32, i32* @x.821
  %258 = load i32, i32* @y.822
  %259 = sub i32 0, 1
  %260 = add i32 %257, %259
  %261 = sub i32 %257, 1
  %262 = mul i32 %257, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %258, 10
  %266 = xor i1 %264, true
  %267 = xor i1 %265, true
  %268 = xor i1 true, true
  %269 = and i1 %266, true
  %270 = and i1 %264, %268
  %271 = and i1 %267, true
  %272 = and i1 %265, %268
  %273 = or i1 %269, %270
  %274 = or i1 %271, %272
  %275 = xor i1 %273, %274
  %276 = or i1 %266, %267
  %277 = xor i1 %276, true
  %278 = or i1 true, %268
  %279 = and i1 %277, %278
  %280 = or i1 %275, %279
  %281 = or i1 %264, %265
  br i1 %280, label %282, label %347

; <label>:282:                                    ; preds = %256, %347
  %283 = landingpad { i8*, i32 }
          catch i8* null
  %284 = extractvalue { i8*, i32 } %283, 0
  call void @__clang_call_terminate(i8* %284) #11
  %285 = load i32, i32* @x.821
  %286 = load i32, i32* @y.822
  %287 = sub i32 %285, 1943465049
  %288 = sub i32 %287, 1
  %289 = add i32 %288, 1943465049
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = and i1 %293, %294
  %296 = xor i1 %293, %294
  %297 = or i1 %295, %296
  %298 = or i1 %293, %294
  br i1 %297, label %299, label %347

; <label>:299:                                    ; preds = %282
  unreachable

; <label>:300:                                    ; preds = %201
  %301 = load i32, i32* @x.821
  %302 = load i32, i32* @y.822
  %303 = sub i32 %301, 258516399
  %304 = sub i32 %303, 1
  %305 = add i32 %304, 258516399
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = and i1 %309, %310
  %312 = xor i1 %309, %310
  %313 = or i1 %311, %312
  %314 = or i1 %309, %310
  br i1 %313, label %315, label %350

; <label>:315:                                    ; preds = %300, %350
  %316 = load i32, i32* @x.821
  %317 = load i32, i32* @y.822
  %318 = sub i32 %316, 346621632
  %319 = sub i32 %318, 1
  %320 = add i32 %319, 346621632
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  br i1 %328, label %330, label %350

; <label>:330:                                    ; preds = %315
  unreachable

; <label>:331:                                    ; preds = %30, %3
  %332 = alloca %"class.std::move_iterator.56", align 8
  %333 = alloca %"class.std::move_iterator.56", align 8
  %334 = alloca %"class.std::tuple.30"*, align 8
  %335 = alloca %"class.std::tuple.30"*, align 8
  %336 = alloca i8*
  %337 = alloca i32
  %338 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %332, i32 0, i32 0
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %338, align 8
  %339 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %333, i32 0, i32 0
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %339, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %334, align 8
  %340 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %334, align 8
  store %"class.std::tuple.30"* %340, %"class.std::tuple.30"** %335, align 8
  br label %30

; <label>:341:                                    ; preds = %81, %67
  br label %81

; <label>:342:                                    ; preds = %113, %99
  %343 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %34, align 8
  %344 = call %"class.std::tuple.30"* @_ZSt11__addressofISt5tupleIJxxxxEEEPT_RS2_(%"class.std::tuple.30"* dereferenceable(32) %343) #3
  br label %113

; <label>:345:                                    ; preds = %171, %144
  br label %171

; <label>:346:                                    ; preds = %235, %209
  call void @llvm.trap()
  br label %235

; <label>:347:                                    ; preds = %282, %256
  %348 = landingpad { i8*, i32 }
          catch i8* null
  %349 = extractvalue { i8*, i32 } %348, 0
  call void @__clang_call_terminate(i8* %349) #11
  br label %282

; <label>:350:                                    ; preds = %315, %300
  br label %315
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt5tupleIJxxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.56"* dereferenceable(8), %"class.std::move_iterator.56"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.56"*, align 8
  %4 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %3, align 8
  store %"class.std::move_iterator.56"* %1, %"class.std::move_iterator.56"** %4, align 8
  %5 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %3, align 8
  %6 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt5tupleIJxxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.56"* dereferenceable(8) %5, %"class.std::move_iterator.56"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt5tupleIJxxxxEEJS1_EEvPT_DpOT0_(%"class.std::tuple.30"*, %"class.std::tuple.30"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"class.std::tuple.30"*, align 8
  %4 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %3, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %4, align 8
  %5 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %3, align 8
  %6 = bitcast %"class.std::tuple.30"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::tuple.30"*
  %8 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  %9 = call dereferenceable(32) %"class.std::tuple.30"* @_ZSt7forwardISt5tupleIJxxxxEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.30"* dereferenceable(32) %8) #3
  call void @_ZNSt5tupleIJxxxxEEC2EOS0_(%"class.std::tuple.30"* %7, %"class.std::tuple.30"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZSt11__addressofISt5tupleIJxxxxEEEPT_RS2_(%"class.std::tuple.30"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %2, align 8
  %3 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %2, align 8
  %4 = bitcast %"class.std::tuple.30"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::tuple.30"*
  ret %"class.std::tuple.30"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::tuple.30"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxxEEEdeEv(%"class.std::move_iterator.56"*) #4 comdat align 2 {
  %2 = alloca %"class.std::tuple.30"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.829
  %6 = load i32, i32* @y.830
  %7 = add i32 %5, -2088350708
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2088350708
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1606940259, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1606940259, label %19
    i32 -1492349771, label %27
    i32 1064549303, label %47
    i32 1922792672, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1492349771, i32 1922792672
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %28, align 8
  %29 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %29, i32 0, i32 0
  %31 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %30, align 8
  store %"class.std::tuple.30"* %31, %"class.std::tuple.30"** %2
  %32 = load i32, i32* @x.829
  %33 = load i32, i32* @y.830
  %34 = sub i32 %32, 429638968
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 429638968
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1064549303, i32 1922792672
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %2
  ret %"class.std::tuple.30"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %50, align 8
  %51 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %50, align 8
  %52 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %51, i32 0, i32 0
  %53 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %52, align 8
  store i32 -1492349771, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.56"* @_ZNSt13move_iteratorIPSt5tupleIJxxxxEEEppEv(%"class.std::move_iterator.56"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %2, align 8
  %3 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  %6 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %5, i32 1
  store %"class.std::tuple.30"* %6, %"class.std::tuple.30"** %4, align 8
  ret %"class.std::move_iterator.56"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt5tupleIJxxxxEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.56"* dereferenceable(8), %"class.std::move_iterator.56"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.56"*, align 8
  %4 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %3, align 8
  store %"class.std::move_iterator.56"* %1, %"class.std::move_iterator.56"** %4, align 8
  %5 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %3, align 8
  %6 = call %"class.std::tuple.30"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxxEEE4baseEv(%"class.std::move_iterator.56"* %5)
  %7 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %4, align 8
  %8 = call %"class.std::tuple.30"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxxEEE4baseEv(%"class.std::move_iterator.56"* %7)
  %9 = icmp eq %"class.std::tuple.30"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZNKSt13move_iteratorIPSt5tupleIJxxxxEEE4baseEv(%"class.std::move_iterator.56"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %2, align 8
  %3 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  ret %"class.std::tuple.30"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::tuple.30"* @_ZSt7forwardISt5tupleIJxxxxEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.30"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %2, align 8
  %3 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %2, align 8
  ret %"class.std::tuple.30"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJxxxxEEC2EOS0_(%"class.std::tuple.30"*, %"class.std::tuple.30"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.30"*, align 8
  %4 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %3, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %4, align 8
  %5 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %3, align 8
  %6 = bitcast %"class.std::tuple.30"* %5 to %"struct.std::_Tuple_impl.31"*
  %7 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  %8 = bitcast %"class.std::tuple.30"* %7 to %"struct.std::_Tuple_impl.31"*
  call void @_ZNSt11_Tuple_implILm0EJxxxxEEC2EOS0_(%"struct.std::_Tuple_impl.31"* %6, %"struct.std::_Tuple_impl.31"* dereferenceable(32) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxxxxEEC2EOS0_(%"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"* dereferenceable(32)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.31"* %0, %"struct.std::_Tuple_impl.31"** %3, align 8
  store %"struct.std::_Tuple_impl.31"* %1, %"struct.std::_Tuple_impl.31"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.31"* %5 to %"struct.std::_Tuple_impl.32"*
  %7 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %4, align 8
  %8 = call dereferenceable(24) %"struct.std::_Tuple_impl.32"* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32) %7) #3
  %9 = call dereferenceable(24) %"struct.std::_Tuple_impl.32"* @_ZSt4moveIRSt11_Tuple_implILm1EJxxxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.32"* dereferenceable(24) %8) #3
  call void @_ZNSt11_Tuple_implILm1EJxxxEEC2EOS0_(%"struct.std::_Tuple_impl.32"* %6, %"struct.std::_Tuple_impl.32"* dereferenceable(24) %9) #3
  %10 = bitcast %"struct.std::_Tuple_impl.31"* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 24
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.19"*
  %13 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %4, align 8
  %14 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32) %13) #3
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %14) #3
  invoke void @_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.19"* %12, i64* dereferenceable(8) %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %2
  ret void

; <label>:17:                                     ; preds = %2
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::_Tuple_impl.32"* @_ZSt4moveIRSt11_Tuple_implILm1EJxxxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.32"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.32"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.843
  %6 = load i32, i32* @y.844
  %7 = add i32 %5, 1824634026
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1824634026
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1823838121, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1823838121, label %19
    i32 -1150269860, label %39
    i32 -560730250, label %69
    i32 -1839526661, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1150269860, i32 -1839526661
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %40, align 8
  store %"struct.std::_Tuple_impl.32"* %41, %"struct.std::_Tuple_impl.32"** %2
  %42 = load i32, i32* @x.843
  %43 = load i32, i32* @y.844
  %44 = sub i32 %42, 193389581
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 193389581
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -560730250, i32 -1839526661
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %2
  ret %"struct.std::_Tuple_impl.32"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %72, align 8
  %73 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %72, align 8
  store i32 -1150269860, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::_Tuple_impl.32"* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.31"* %0, %"struct.std::_Tuple_impl.31"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.31"* %3 to %"struct.std::_Tuple_impl.32"*
  ret %"struct.std::_Tuple_impl.32"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJxxxEEC2EOS0_(%"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"* dereferenceable(24)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %3, align 8
  store %"struct.std::_Tuple_impl.32"* %1, %"struct.std::_Tuple_impl.32"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.32"* %5 to %"struct.std::_Tuple_impl.33"*
  %7 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %4, align 8
  %8 = call dereferenceable(16) %"struct.std::_Tuple_impl.33"* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24) %7) #3
  %9 = call dereferenceable(16) %"struct.std::_Tuple_impl.33"* @_ZSt4moveIRSt11_Tuple_implILm2EJxxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.33"* dereferenceable(16) %8) #3
  call void @_ZNSt11_Tuple_implILm2EJxxEEC2EOS0_(%"struct.std::_Tuple_impl.33"* %6, %"struct.std::_Tuple_impl.33"* dereferenceable(16) %9) #3
  %10 = bitcast %"struct.std::_Tuple_impl.32"* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.18"*
  %13 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %4, align 8
  %14 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24) %13) #3
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %14) #3
  invoke void @_ZNSt10_Head_baseILm1ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.18"* %12, i64* dereferenceable(8) %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %2
  ret void

; <label>:17:                                     ; preds = %2
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.31"* %0, %"struct.std::_Tuple_impl.31"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.31"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.19"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.19"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.33"* @_ZSt4moveIRSt11_Tuple_implILm2EJxxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.33"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %2, align 8
  ret %"struct.std::_Tuple_impl.33"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.33"* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.32"* %3 to %"struct.std::_Tuple_impl.33"*
  ret %"struct.std::_Tuple_impl.33"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJxxEEC2EOS0_(%"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"* dereferenceable(16)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %3, align 8
  store %"struct.std::_Tuple_impl.33"* %1, %"struct.std::_Tuple_impl.33"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.33"* %5 to %"struct.std::_Tuple_impl.34"*
  %7 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %4, align 8
  %8 = call dereferenceable(8) %"struct.std::_Tuple_impl.34"* @_ZNSt11_Tuple_implILm2EJxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16) %7) #3
  %9 = call dereferenceable(8) %"struct.std::_Tuple_impl.34"* @_ZSt4moveIRSt11_Tuple_implILm3EJxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.34"* dereferenceable(8) %8) #3
  call void @_ZNSt11_Tuple_implILm3EJxEEC2EOS0_(%"struct.std::_Tuple_impl.34"* %6, %"struct.std::_Tuple_impl.34"* dereferenceable(8) %9) #3
  %10 = bitcast %"struct.std::_Tuple_impl.33"* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to %"struct.std::_Head_base"*
  %13 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %4, align 8
  %14 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16) %13) #3
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %14) #3
  invoke void @_ZNSt10_Head_baseILm2ExLb0EEC2IxEEOT_(%"struct.std::_Head_base"* %12, i64* dereferenceable(8) %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %2
  ret void

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.855
  %19 = load i32, i32* @y.856
  %20 = sub i32 %18, -636560601
  %21 = sub i32 %20, 1
  %22 = add i32 %21, -636560601
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %62

; <label>:32:                                     ; preds = %17, %62
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #11
  %35 = load i32, i32* @x.855
  %36 = load i32, i32* @y.856
  %37 = add i32 %35, 375989942
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 375989942
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %32
  unreachable

; <label>:62:                                     ; preds = %32, %17
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #11
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.32"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.18"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.18"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.34"* @_ZSt4moveIRSt11_Tuple_implILm3EJxEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.34"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %0, %"struct.std::_Tuple_impl.34"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %2, align 8
  ret %"struct.std::_Tuple_impl.34"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.34"* @_ZNSt11_Tuple_implILm2EJxxEE7_M_tailERS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.33"* %3 to %"struct.std::_Tuple_impl.34"*
  ret %"struct.std::_Tuple_impl.34"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm3EJxEEC2EOS0_(%"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.863
  %4 = load i32, i32* @y.864
  %5 = add i32 %3, -1774166784
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1774166784
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %68

; <label>:29:                                     ; preds = %2, %68
  %30 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  %31 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %0, %"struct.std::_Tuple_impl.34"** %30, align 8
  store %"struct.std::_Tuple_impl.34"* %1, %"struct.std::_Tuple_impl.34"** %31, align 8
  %32 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %30, align 8
  %33 = bitcast %"struct.std::_Tuple_impl.34"* %32 to %"struct.std::_Head_base.35"*
  %34 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %31, align 8
  %35 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm3EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.34"* dereferenceable(8) %34) #3
  %36 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %35) #3
  %37 = load i32, i32* @x.863
  %38 = load i32, i32* @y.864
  %39 = sub i32 %37, -472417992
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -472417992
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %68

; <label>:63:                                     ; preds = %29
  invoke void @_ZNSt10_Head_baseILm3ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.35"* %33, i64* dereferenceable(8) %36)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %63
  ret void

; <label>:65:                                     ; preds = %63
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #11
  unreachable

; <label>:68:                                     ; preds = %29, %2
  %69 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  %70 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %0, %"struct.std::_Tuple_impl.34"** %69, align 8
  store %"struct.std::_Tuple_impl.34"* %1, %"struct.std::_Tuple_impl.34"** %70, align 8
  %71 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %69, align 8
  %72 = bitcast %"struct.std::_Tuple_impl.34"* %71 to %"struct.std::_Head_base.35"*
  %73 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %70, align 8
  %74 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm3EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.34"* dereferenceable(8) %73) #3
  %75 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %74) #3
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxxEE7_M_headERS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.865
  %6 = load i32, i32* @y.866
  %7 = add i32 %5, -2055631937
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2055631937
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -472727254, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -472727254, label %19
    i32 -669200999, label %39
    i32 619880, label %73
    i32 -1768865142, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -669200999, i32 -1768865142
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.33"* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to %"struct.std::_Head_base"*
  %45 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ExLb0EE7_M_headERS0_(%"struct.std::_Head_base"* dereferenceable(8) %44) #3
  store i64* %45, i64** %2
  %46 = load i32, i32* @x.865
  %47 = load i32, i32* @y.866
  %48 = sub i32 %46, 527894158
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 527894158
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 619880, i32 -1768865142
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile i64*, i64** %2
  ret i64* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %76, align 8
  %77 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %76, align 8
  %78 = bitcast %"struct.std::_Tuple_impl.33"* %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = bitcast i8* %79 to %"struct.std::_Head_base"*
  %81 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ExLb0EE7_M_headERS0_(%"struct.std::_Head_base"* dereferenceable(8) %80) #3
  store i32 -669200999, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm3EJxEE7_M_headERS0_(%"struct.std::_Tuple_impl.34"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %0, %"struct.std::_Tuple_impl.34"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.34"* %3 to %"struct.std::_Head_base.35"*
  %5 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm3ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.35"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm3ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.35"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.35"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.35"* %0, %"struct.std::_Head_base.35"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.35", %"struct.std::_Head_base.35"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm3ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.35"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.35"*, align 8
  store %"struct.std::_Head_base.35"* %0, %"struct.std::_Head_base.35"** %2, align 8
  %3 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.35", %"struct.std::_Head_base.35"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt5tupleIJxxxxEEEC2ES2_(%"class.std::move_iterator.56"*, %"class.std::tuple.30"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.56"*, align 8
  %4 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %3, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %4, align 8
  %5 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %4, align 8
  store %"class.std::tuple.30"* %7, %"class.std::tuple.30"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE9constructIS1_JRxS5_S5_S5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1), %"class.std::tuple.30"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %7 = alloca %"class.std::allocator.27"*, align 8
  %8 = alloca %"class.std::tuple.30"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %7, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %8, align 8
  store i64* %2, i64** %9, align 8
  store i64* %3, i64** %10, align 8
  store i64* %4, i64** %11, align 8
  store i64* %5, i64** %12, align 8
  %13 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %7, align 8
  %14 = bitcast %"class.std::allocator.27"* %13 to %"class.__gnu_cxx::new_allocator.28"*
  %15 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %8, align 8
  %16 = load i64*, i64** %9, align 8
  %17 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %16) #3
  %18 = load i64*, i64** %10, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %18) #3
  %20 = load i64*, i64** %11, align 8
  %21 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %20) #3
  %22 = load i64*, i64** %12, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %22) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE9constructIS2_JRxS5_S5_S5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.28"* %14, %"class.std::tuple.30"* %15, i64* dereferenceable(8) %17, i64* dereferenceable(8) %19, i64* dereferenceable(8) %21, i64* dereferenceable(8) %23)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxxxxEESaIS1_EE19_M_emplace_back_auxIJRxS5_S5_S5_EEEvDpOT_(%"class.std::vector.25"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::vector.25"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::tuple.30"*, align 8
  %13 = alloca %"class.std::tuple.30"*, align 8
  %14 = alloca i8*
  %15 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %16 = load %"class.std::vector.25"*, %"class.std::vector.25"** %6, align 8
  %17 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.25"* %16, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %17, i64* %11, align 8
  %18 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %19 = load i64, i64* %11, align 8
  %20 = call %"class.std::tuple.30"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"* %18, i64 %19)
  store %"class.std::tuple.30"* %20, %"class.std::tuple.30"** %12, align 8
  %21 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  store %"class.std::tuple.30"* %21, %"class.std::tuple.30"** %13, align 8
  %22 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %23 to %"class.std::allocator.27"*
  %25 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %26 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %16) #3
  %27 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %25, i64 %26
  %28 = load i64*, i64** %7, align 8
  %29 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %28) #3
  %30 = load i64*, i64** %8, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %30) #3
  %32 = load i64*, i64** %9, align 8
  %33 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %32) #3
  %34 = load i64*, i64** %10, align 8
  %35 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %34) #3
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE9constructIS1_JRxS5_S5_S5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1) %24, %"class.std::tuple.30"* %27, i64* dereferenceable(8) %29, i64* dereferenceable(8) %31, i64* dereferenceable(8) %33, i64* dereferenceable(8) %35)
          to label %36 unwind label %94

; <label>:36:                                     ; preds = %5
  store %"class.std::tuple.30"* null, %"class.std::tuple.30"** %13, align 8
  %37 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %39, align 8
  %41 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %43, align 8
  %45 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %46 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %47 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %46) #3
  %48 = invoke %"class.std::tuple.30"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxxxEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple.30"* %40, %"class.std::tuple.30"* %44, %"class.std::tuple.30"* %45, %"class.std::allocator.27"* dereferenceable(1) %47)
          to label %49 unwind label %94

; <label>:49:                                     ; preds = %36
  %50 = load i32, i32* @x.877
  %51 = load i32, i32* @y.878
  %52 = add i32 %50, -565032593
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -565032593
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %291

; <label>:64:                                     ; preds = %49, %291
  store %"class.std::tuple.30"* %48, %"class.std::tuple.30"** %13, align 8
  %65 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %13, align 8
  %66 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %65, i32 1
  store %"class.std::tuple.30"* %66, %"class.std::tuple.30"** %13, align 8
  %67 = load i32, i32* @x.877
  %68 = load i32, i32* @y.878
  %69 = sub i32 %67, -558977380
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -558977380
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %291

; <label>:93:                                     ; preds = %64
  br label %209

; <label>:94:                                     ; preds = %36, %5
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %14, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %15, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i8*, i8** %14, align 8
  %100 = call i8* @__cxa_begin_catch(i8* %99) #3
  %101 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %13, align 8
  %102 = icmp ne %"class.std::tuple.30"* %101, null
  br i1 %102, label %156, label %103

; <label>:103:                                    ; preds = %98
  %104 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %104, i32 0, i32 0
  %106 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %105 to %"class.std::allocator.27"*
  %107 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %108 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %16) #3
  %109 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %107, i64 %108
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1) %106, %"class.std::tuple.30"* %109)
          to label %110 unwind label %152

; <label>:110:                                    ; preds = %103
  %111 = load i32, i32* @x.877
  %112 = load i32, i32* @y.878
  %113 = add i32 %111, -1252550028
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, -1252550028
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %294

; <label>:137:                                    ; preds = %110, %294
  %138 = load i32, i32* @x.877
  %139 = load i32, i32* @y.878
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %294

; <label>:151:                                    ; preds = %137
  br label %162

; <label>:152:                                    ; preds = %166, %162, %156, %103
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %14, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %167 unwind label %258

; <label>:156:                                    ; preds = %98
  %157 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %158 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %13, align 8
  %159 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %160 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %159) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJxxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.30"* %157, %"class.std::tuple.30"* %158, %"class.std::allocator.27"* dereferenceable(1) %160)
          to label %161 unwind label %152

; <label>:161:                                    ; preds = %156
  br label %162

; <label>:162:                                    ; preds = %161, %151
  %163 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %164 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %165 = load i64, i64* %11, align 8
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %163, %"class.std::tuple.30"* %164, i64 %165)
          to label %166 unwind label %152

; <label>:166:                                    ; preds = %162
  invoke void @__cxa_rethrow() #12
          to label %290 unwind label %152

; <label>:167:                                    ; preds = %152
  %168 = load i32, i32* @x.877
  %169 = load i32, i32* @y.878
  %170 = sub i32 %168, 1523891925
  %171 = sub i32 %170, 1
  %172 = add i32 %171, 1523891925
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %295

; <label>:182:                                    ; preds = %167, %295
  %183 = load i32, i32* @x.877
  %184 = load i32, i32* @y.878
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %295

; <label>:208:                                    ; preds = %182
  br label %253

; <label>:209:                                    ; preds = %93
  %210 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %211, i32 0, i32 0
  %213 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %212, align 8
  %214 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %215, i32 0, i32 1
  %217 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %216, align 8
  %218 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %219 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %218) #3
  call void @_ZSt8_DestroyIPSt5tupleIJxxxxEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.30"* %213, %"class.std::tuple.30"* %217, %"class.std::allocator.27"* dereferenceable(1) %219)
  %220 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %221 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %222, i32 0, i32 0
  %224 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %223, align 8
  %225 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %226 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %225, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %226, i32 0, i32 2
  %228 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %227, align 8
  %229 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %230, i32 0, i32 0
  %232 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %231, align 8
  %233 = ptrtoint %"class.std::tuple.30"* %228 to i64
  %234 = ptrtoint %"class.std::tuple.30"* %232 to i64
  %235 = sub i64 0, %234
  %236 = add i64 %233, %235
  %237 = sub i64 %233, %234
  %238 = sdiv exact i64 %236, 32
  call void @_ZNSt12_Vector_baseISt5tupleIJxxxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %220, %"class.std::tuple.30"* %224, i64 %238)
  %239 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %240 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %241, i32 0, i32 0
  store %"class.std::tuple.30"* %239, %"class.std::tuple.30"** %242, align 8
  %243 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %13, align 8
  %244 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %245, i32 0, i32 1
  store %"class.std::tuple.30"* %243, %"class.std::tuple.30"** %246, align 8
  %247 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %12, align 8
  %248 = load i64, i64* %11, align 8
  %249 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %247, i64 %248
  %250 = bitcast %"class.std::vector.25"* %16 to %"struct.std::_Vector_base.26"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long, long long, long long>, std::allocator<std::tuple<long long, long long, long long, long long> > >::_Vector_impl"* %251, i32 0, i32 2
  store %"class.std::tuple.30"* %249, %"class.std::tuple.30"** %252, align 8
  ret void

; <label>:253:                                    ; preds = %208
  %254 = load i8*, i8** %14, align 8
  %255 = load i32, i32* %15, align 4
  %256 = insertvalue { i8*, i32 } undef, i8* %254, 0
  %257 = insertvalue { i8*, i32 } %256, i32 %255, 1
  resume { i8*, i32 } %257

; <label>:258:                                    ; preds = %152
  %259 = load i32, i32* @x.877
  %260 = load i32, i32* @y.878
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = and i1 %266, %267
  %269 = xor i1 %266, %267
  %270 = or i1 %268, %269
  %271 = or i1 %266, %267
  br i1 %270, label %272, label %296

; <label>:272:                                    ; preds = %258, %296
  %273 = landingpad { i8*, i32 }
          catch i8* null
  %274 = extractvalue { i8*, i32 } %273, 0
  call void @__clang_call_terminate(i8* %274) #11
  %275 = load i32, i32* @x.877
  %276 = load i32, i32* @y.878
  %277 = add i32 %275, 383374663
  %278 = sub i32 %277, 1
  %279 = sub i32 %278, 383374663
  %280 = sub i32 %275, 1
  %281 = mul i32 %275, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %276, 10
  %285 = and i1 %283, %284
  %286 = xor i1 %283, %284
  %287 = or i1 %285, %286
  %288 = or i1 %283, %284
  br i1 %287, label %289, label %296

; <label>:289:                                    ; preds = %272
  unreachable

; <label>:290:                                    ; preds = %166
  unreachable

; <label>:291:                                    ; preds = %64, %49
  store %"class.std::tuple.30"* %48, %"class.std::tuple.30"** %13, align 8
  %292 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %13, align 8
  %293 = getelementptr inbounds %"class.std::tuple.30", %"class.std::tuple.30"* %292, i32 1
  store %"class.std::tuple.30"* %293, %"class.std::tuple.30"** %13, align 8
  br label %64

; <label>:294:                                    ; preds = %137, %110
  br label %137

; <label>:295:                                    ; preds = %182, %167
  br label %182

; <label>:296:                                    ; preds = %272, %258
  %297 = landingpad { i8*, i32 }
          catch i8* null
  %298 = extractvalue { i8*, i32 } %297, 0
  call void @__clang_call_terminate(i8* %298) #11
  br label %272
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE9constructIS2_JRxS5_S5_S5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.28"*, %"class.std::tuple.30"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %7 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %8 = alloca %"class.std::tuple.30"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %7, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %8, align 8
  store i64* %2, i64** %9, align 8
  store i64* %3, i64** %10, align 8
  store i64* %4, i64** %11, align 8
  store i64* %5, i64** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %7, align 8
  %14 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %8, align 8
  %15 = bitcast %"class.std::tuple.30"* %14 to i8*
  %16 = bitcast i8* %15 to %"class.std::tuple.30"*
  %17 = load i64*, i64** %9, align 8
  %18 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %17) #3
  %19 = load i64*, i64** %10, align 8
  %20 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %19) #3
  %21 = load i64*, i64** %11, align 8
  %22 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %21) #3
  %23 = load i64*, i64** %12, align 8
  %24 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %23) #3
  call void @_ZNSt5tupleIJxxxxEEC2IJRxS2_S2_S2_EvEEDpOT_(%"class.std::tuple.30"* %16, i64* dereferenceable(8) %18, i64* dereferenceable(8) %20, i64* dereferenceable(8) %22, i64* dereferenceable(8) %24)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJxxxxEEC2IJRxS2_S2_S2_EvEEDpOT_(%"class.std::tuple.30"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::tuple.30"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %6, align 8
  %12 = bitcast %"class.std::tuple.30"* %11 to %"struct.std::_Tuple_impl.31"*
  %13 = load i64*, i64** %7, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64*, i64** %8, align 8
  %16 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %15) #3
  %17 = load i64*, i64** %9, align 8
  %18 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %17) #3
  %19 = load i64*, i64** %10, align 8
  %20 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %19) #3
  call void @_ZNSt11_Tuple_implILm0EJxxxxEEC2IRxJS2_S2_S2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.31"* %12, i64* dereferenceable(8) %14, i64* dereferenceable(8) %16, i64* dereferenceable(8) %18, i64* dereferenceable(8) %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxxxxEEC2IRxJS2_S2_S2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.31"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.31"* %0, %"struct.std::_Tuple_impl.31"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %6, align 8
  %12 = bitcast %"struct.std::_Tuple_impl.31"* %11 to %"struct.std::_Tuple_impl.32"*
  %13 = load i64*, i64** %8, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64*, i64** %9, align 8
  %16 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %15) #3
  %17 = load i64*, i64** %10, align 8
  %18 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %17) #3
  call void @_ZNSt11_Tuple_implILm1EJxxxEEC2IRxJS2_S2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.32"* %12, i64* dereferenceable(8) %14, i64* dereferenceable(8) %16, i64* dereferenceable(8) %18)
  %19 = bitcast %"struct.std::_Tuple_impl.31"* %11 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 24
  %21 = bitcast i8* %20 to %"struct.std::_Head_base.19"*
  %22 = load i64*, i64** %7, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %22) #3
  call void @_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.19"* %21, i64* dereferenceable(8) %23)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJxxxEEC2IRxJS2_S2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.32"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl.32"* %9 to %"struct.std::_Tuple_impl.33"*
  %11 = load i64*, i64** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64*, i64** %8, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  call void @_ZNSt11_Tuple_implILm2EJxxEEC2IRxJS2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.33"* %10, i64* dereferenceable(8) %12, i64* dereferenceable(8) %14)
  %15 = bitcast %"struct.std::_Tuple_impl.32"* %9 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %"struct.std::_Head_base.18"*
  %18 = load i64*, i64** %6, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZNSt10_Head_baseILm1ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.18"* %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJxxEEC2IRxJS2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.33"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %4, align 8
  %8 = bitcast %"struct.std::_Tuple_impl.33"* %7 to %"struct.std::_Tuple_impl.34"*
  %9 = load i64*, i64** %6, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  call void @_ZNSt11_Tuple_implILm3EJxEEC2IRxEEOT_(%"struct.std::_Tuple_impl.34"* %8, i64* dereferenceable(8) %10)
  %11 = bitcast %"struct.std::_Tuple_impl.33"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to %"struct.std::_Head_base"*
  %14 = load i64*, i64** %5, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %14) #3
  call void @_ZNSt10_Head_baseILm2ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base"* %13, i64* dereferenceable(8) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm3EJxEEC2IRxEEOT_(%"struct.std::_Tuple_impl.34"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.34"* %0, %"struct.std::_Tuple_impl.34"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.34"* %5 to %"struct.std::_Head_base.35"*
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %7) #3
  call void @_ZNSt10_Head_baseILm3ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.35"* %6, i64* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm2ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.891
  %6 = load i32, i32* @y.892
  %7 = sub i32 %5, -488255343
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -488255343
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2002577877, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2002577877, label %19
    i32 241531793, label %27
    i32 1098833883, label %61
    i32 830298697, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 241531793, i32 830298697
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base"*, align 8
  %29 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %30, i32 0, i32 0
  %32 = load i64*, i64** %29, align 8
  %33 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %32) #3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %31, align 8
  %35 = load i32, i32* @x.891
  %36 = load i32, i32* @y.892
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1098833883, i32 830298697
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Head_base"*, align 8
  %64 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %63, align 8
  store i64* %1, i64** %64, align 8
  %65 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %63, align 8
  %66 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %65, i32 0, i32 0
  %67 = load i64*, i64** %64, align 8
  %68 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %67) #3
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %66, align 8
  store i32 241531793, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm3ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.35"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.893
  %6 = load i32, i32* @y.894
  %7 = add i32 %5, 1733049980
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1733049980
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -516577001, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -516577001, label %19
    i32 337117678, label %39
    i32 -211344875, label %74
    i32 -2024906721, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 337117678, i32 -2024906721
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Head_base.35"*, align 8
  %41 = alloca i64*, align 8
  store %"struct.std::_Head_base.35"* %0, %"struct.std::_Head_base.35"** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Head_base.35", %"struct.std::_Head_base.35"* %42, i32 0, i32 0
  %44 = load i64*, i64** %41, align 8
  %45 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %44) #3
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  %47 = load i32, i32* @x.893
  %48 = load i32, i32* @y.894
  %49 = sub i32 %47, 1483539634
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1483539634
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -211344875, i32 -2024906721
  store i32 %73, i32* %15
  br label %83

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Head_base.35"*, align 8
  %77 = alloca i64*, align 8
  store %"struct.std::_Head_base.35"* %0, %"struct.std::_Head_base.35"** %76, align 8
  store i64* %1, i64** %77, align 8
  %78 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %76, align 8
  %79 = getelementptr inbounds %"struct.std::_Head_base.35", %"struct.std::_Head_base.35"* %78, i32 0, i32 0
  %80 = load i64*, i64** %77, align 8
  %81 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %80) #3
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %79, align 8
  store i32 337117678, i32* %15
  br label %83

; <label>:83:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.25"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca %"class.std::vector.25"*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i8**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.895
  %14 = load i32, i32* @y.896
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 284289035, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %202
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 284289035, label %27
    i32 1031334844, label %35
    i32 -1009337156, label %81
    i32 -206227329, label %84
    i32 -1546383875, label %87
    i32 58608883, label %107
    i32 1463308202, label %114
    i32 480405110, label %117
    i32 -1563684745, label %145
    i32 -1084579587, label %174
    i32 -1041822777, label %176
    i32 -1126366933, label %178
    i32 2027936711, label %199
  ]

; <label>:26:                                     ; preds = %24
  br label %202

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1031334844, i32 -1126366933
  store i32 %34, i32* %22
  br label %202

; <label>:35:                                     ; preds = %24
  %36 = alloca %"class.std::vector.25"*, align 8
  %37 = alloca i64, align 8
  store i64* %37, i64** %10
  %38 = alloca i8*, align 8
  store i8** %38, i8*** %9
  %39 = alloca i64, align 8
  store i64* %39, i64** %8
  %40 = alloca i64, align 8
  store i64* %40, i64** %7
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %36, align 8
  %41 = load volatile i64*, i64** %10
  store i64 %1, i64* %41, align 8
  %42 = load volatile i8**, i8*** %9
  store i8* %2, i8** %42, align 8
  %43 = load %"class.std::vector.25"*, %"class.std::vector.25"** %36, align 8
  store %"class.std::vector.25"* %43, %"class.std::vector.25"** %6
  %44 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %6
  %45 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %44) #3
  %46 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %6
  %47 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %46) #3
  %48 = add i64 %45, 6929203016911917104
  %49 = sub i64 %48, %47
  %50 = sub i64 %49, 6929203016911917104
  %51 = sub i64 %45, %47
  %52 = load volatile i64*, i64** %10
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %50, %53
  store i1 %54, i1* %5
  %55 = load i32, i32* @x.895
  %56 = load i32, i32* @y.896
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1009337156, i32 -1126366933
  store i32 %80, i32* %22
  br label %202

; <label>:81:                                     ; preds = %24
  %82 = load volatile i1, i1* %5
  %83 = select i1 %82, i32 -206227329, i32 -1546383875
  store i32 %83, i32* %22
  br label %202

; <label>:84:                                     ; preds = %24
  %85 = load volatile i8**, i8*** %9
  %86 = load i8*, i8** %85, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %86) #12
  unreachable

; <label>:87:                                     ; preds = %24
  %88 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %6
  %89 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %88) #3
  %90 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %6
  %91 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %90) #3
  %92 = load volatile i64*, i64** %7
  store i64 %91, i64* %92, align 8
  %93 = load volatile i64*, i64** %10
  %94 = load volatile i64*, i64** %7
  %95 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %94, i64* dereferenceable(8) %93)
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 0, %96
  %98 = sub i64 %89, %97
  %99 = add i64 %89, %96
  %100 = load volatile i64*, i64** %8
  store i64 %98, i64* %100, align 8
  %101 = load volatile i64*, i64** %8
  %102 = load i64, i64* %101, align 8
  %103 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %6
  %104 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %103) #3
  %105 = icmp ult i64 %102, %104
  %106 = select i1 %105, i32 1463308202, i32 58608883
  store i32 %106, i32* %22
  br label %202

; <label>:107:                                    ; preds = %24
  %108 = load volatile i64*, i64** %8
  %109 = load i64, i64* %108, align 8
  %110 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %6
  %111 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %110) #3
  %112 = icmp ugt i64 %109, %111
  %113 = select i1 %112, i32 1463308202, i32 480405110
  store i32 %113, i32* %22
  br label %202

; <label>:114:                                    ; preds = %24
  %115 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %6
  %116 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %115) #3
  store i32 -1041822777, i32* %22
  store i64 %116, i64* %23
  br label %202

; <label>:117:                                    ; preds = %24
  %118 = load i32, i32* @x.895
  %119 = load i32, i32* @y.896
  %120 = sub i32 %118, -1830323256
  %121 = sub i32 %120, 1
  %122 = add i32 %121, -1830323256
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -1563684745, i32 2027936711
  store i32 %144, i32* %22
  br label %202

; <label>:145:                                    ; preds = %24
  %146 = load volatile i64*, i64** %8
  %147 = load i64, i64* %146, align 8
  store i64 %147, i64* %4
  %148 = load i32, i32* @x.895
  %149 = load i32, i32* @y.896
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 true, true
  %160 = and i1 %157, true
  %161 = and i1 %155, %159
  %162 = and i1 %158, true
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 true, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 -1084579587, i32 2027936711
  store i32 %173, i32* %22
  br label %202

; <label>:174:                                    ; preds = %24
  store i32 -1041822777, i32* %22
  %175 = load volatile i64, i64* %4
  store i64 %175, i64* %23
  br label %202

; <label>:176:                                    ; preds = %24
  %177 = load i64, i64* %23
  ret i64 %177

; <label>:178:                                    ; preds = %24
  %179 = alloca %"class.std::vector.25"*, align 8
  %180 = alloca i64, align 8
  %181 = alloca i8*, align 8
  %182 = alloca i64, align 8
  %183 = alloca i64, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %179, align 8
  store i64 %1, i64* %180, align 8
  store i8* %2, i8** %181, align 8
  %184 = load %"class.std::vector.25"*, %"class.std::vector.25"** %179, align 8
  %185 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %184) #3
  %186 = call i64 @_ZNKSt6vectorISt5tupleIJxxxxEESaIS1_EE4sizeEv(%"class.std::vector.25"* %184) #3
  %187 = sub i64 %185, -2486190256787873192
  %188 = sub i64 %187, %186
  %189 = add i64 %188, -2486190256787873192
  %190 = sub i64 %185, %186
  %191 = mul i64 %189, %186
  %192 = shl i64 %185, %186
  %193 = add i64 %185, 8589015229905557148
  %194 = sub i64 %193, %186
  %195 = sub i64 %194, 8589015229905557148
  %196 = sub i64 %185, %186
  %197 = load i64, i64* %180, align 8
  %198 = icmp ult i64 %195, %197
  store i32 1031334844, i32* %22
  br label %202

; <label>:199:                                    ; preds = %24
  %200 = load volatile i64*, i64** %8
  %201 = load i64, i64* %200, align 8
  store i32 -1563684745, i32* %22
  br label %202

; <label>:202:                                    ; preds = %199, %178, %174, %145, %117, %114, %107, %87, %81, %35, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.30"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxxxxEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::tuple.30"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::tuple.30"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.897
  %9 = load i32, i32* @y.898
  %10 = add i32 %8, -1049029815
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1049029815
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1876814955, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %111
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1876814955, label %22
    i32 323952029, label %42
    i32 210008147, label %89
    i32 257144538, label %91
  ]

; <label>:21:                                     ; preds = %19
  br label %111

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 323952029, i32 257144538
  store i32 %41, i32* %18
  br label %111

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::tuple.30"*, align 8
  %44 = alloca %"class.std::tuple.30"*, align 8
  %45 = alloca %"class.std::tuple.30"*, align 8
  %46 = alloca %"class.std::allocator.27"*, align 8
  %47 = alloca %"class.std::move_iterator.56", align 8
  %48 = alloca %"class.std::move_iterator.56", align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %43, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %44, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %45, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %46, align 8
  %49 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %43, align 8
  %50 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %47, i32 0, i32 0
  store %"class.std::tuple.30"* %50, %"class.std::tuple.30"** %51, align 8
  %52 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %44, align 8
  %53 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %48, i32 0, i32 0
  store %"class.std::tuple.30"* %53, %"class.std::tuple.30"** %54, align 8
  %55 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %45, align 8
  %56 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %47, i32 0, i32 0
  %58 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %48, i32 0, i32 0
  %60 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %59, align 8
  %61 = call %"class.std::tuple.30"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.30"* %58, %"class.std::tuple.30"* %60, %"class.std::tuple.30"* %55, %"class.std::allocator.27"* dereferenceable(1) %56)
  store %"class.std::tuple.30"* %61, %"class.std::tuple.30"** %5
  %62 = load i32, i32* @x.897
  %63 = load i32, i32* @y.898
  %64 = add i32 %62, 1425101547
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 1425101547
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 210008147, i32 257144538
  store i32 %88, i32* %18
  br label %111

; <label>:89:                                     ; preds = %19
  %90 = load volatile %"class.std::tuple.30"*, %"class.std::tuple.30"** %5
  ret %"class.std::tuple.30"* %90

; <label>:91:                                     ; preds = %19
  %92 = alloca %"class.std::tuple.30"*, align 8
  %93 = alloca %"class.std::tuple.30"*, align 8
  %94 = alloca %"class.std::tuple.30"*, align 8
  %95 = alloca %"class.std::allocator.27"*, align 8
  %96 = alloca %"class.std::move_iterator.56", align 8
  %97 = alloca %"class.std::move_iterator.56", align 8
  store %"class.std::tuple.30"* %0, %"class.std::tuple.30"** %92, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %93, align 8
  store %"class.std::tuple.30"* %2, %"class.std::tuple.30"** %94, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %95, align 8
  %98 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %92, align 8
  %99 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %98)
  %100 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %96, i32 0, i32 0
  store %"class.std::tuple.30"* %99, %"class.std::tuple.30"** %100, align 8
  %101 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %93, align 8
  %102 = call %"class.std::tuple.30"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxxxxEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.30"* %101)
  %103 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %97, i32 0, i32 0
  store %"class.std::tuple.30"* %102, %"class.std::tuple.30"** %103, align 8
  %104 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %94, align 8
  %105 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %95, align 8
  %106 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %96, i32 0, i32 0
  %107 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %106, align 8
  %108 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %97, i32 0, i32 0
  %109 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %108, align 8
  %110 = call %"class.std::tuple.30"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.30"* %107, %"class.std::tuple.30"* %109, %"class.std::tuple.30"* %104, %"class.std::allocator.27"* dereferenceable(1) %105)
  store i32 323952029, i32* %18
  br label %111

; <label>:111:                                    ; preds = %91, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxxxxEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1), %"class.std::tuple.30"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.899
  %6 = load i32, i32* @y.900
  %7 = sub i32 %5, 771010694
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 771010694
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 27115823, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 27115823, label %19
    i32 1621837096, label %39
    i32 1030553643, label %60
    i32 369819951, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1621837096, i32 369819951
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.27"*, align 8
  %41 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %40, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %41, align 8
  %42 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %40, align 8
  %43 = bitcast %"class.std::allocator.27"* %42 to %"class.__gnu_cxx::new_allocator.28"*
  %44 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.28"* %43, %"class.std::tuple.30"* %44)
  %45 = load i32, i32* @x.899
  %46 = load i32, i32* @y.900
  %47 = add i32 %45, 1410266361
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1410266361
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1030553643, i32 369819951
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.27"*, align 8
  %63 = alloca %"class.std::tuple.30"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %62, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %63, align 8
  %64 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %62, align 8
  %65 = bitcast %"class.std::allocator.27"* %64 to %"class.__gnu_cxx::new_allocator.28"*
  %66 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.28"* %65, %"class.std::tuple.30"* %66)
  store i32 1621837096, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxxxEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.28"*, %"class.std::tuple.30"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.901
  %6 = load i32, i32* @y.902
  %7 = sub i32 %5, 95175611
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 95175611
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2131853566, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2131853566, label %19
    i32 -131791180, label %27
    i32 -1052159250, label %59
    i32 1442189897, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -131791180, i32 1442189897
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %29 = alloca %"class.std::tuple.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %28, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %28, align 8
  %31 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %29, align 8
  %32 = load i32, i32* @x.901
  %33 = load i32, i32* @y.902
  %34 = add i32 %32, 447082407
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 447082407
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1052159250, i32 1442189897
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %62 = alloca %"class.std::tuple.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %61, align 8
  store %"class.std::tuple.30"* %1, %"class.std::tuple.30"** %62, align 8
  %63 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %61, align 8
  %64 = load %"class.std::tuple.30"*, %"class.std::tuple.30"** %62, align 8
  store i32 -131791180, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EEC2Ev(%"struct.std::_Vector_base.37"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.903
  %5 = load i32, i32* @y.904
  %6 = sub i32 %4, 1610195402
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1610195402
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1961186394, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1961186394, label %18
    i32 143075957, label %26
    i32 -1780457657, label %57
    i32 1009211886, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 143075957, i32 1009211886
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.37"*, align 8
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %27, align 8
  %28 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.903
  %31 = load i32, i32* @y.904
  %32 = sub i32 %30, 847717368
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 847717368
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1780457657, i32 1009211886
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.37"*, align 8
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %59, align 8
  %60 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %61)
  store i32 143075957, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.905
  %5 = load i32, i32* @y.906
  %6 = sub i32 %4, -1028756282
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1028756282
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 139768038, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 139768038, label %18
    i32 -1695924634, label %38
    i32 1359432418, label %72
    i32 2061359694, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1695924634, i32 2061359694
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %40 to %"class.std::allocator.38"*
  call void @_ZNSaISt5tupleIJxxEEEC2Ev(%"class.std::allocator.38"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 0
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 1
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 2
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %44, align 8
  %45 = load i32, i32* @x.905
  %46 = load i32, i32* @y.906
  %47 = add i32 %45, -1938568175
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1938568175
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1359432418, i32 2061359694
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"** %74, align 8
  %75 = load %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"** %74, align 8
  %76 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %75 to %"class.std::allocator.38"*
  call void @_ZNSaISt5tupleIJxxEEEC2Ev(%"class.std::allocator.38"* %76) #3
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %75, i32 0, i32 0
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %75, i32 0, i32 1
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %75, i32 0, i32 2
  store %"class.std::tuple.41"* null, %"class.std::tuple.41"** %79, align 8
  store i32 -1695924634, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxxEEEC2Ev(%"class.std::allocator.38"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %2, align 8
  %3 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %2, align 8
  %4 = bitcast %"class.std::allocator.38"* %3 to %"class.__gnu_cxx::new_allocator.39"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.39"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.39"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EED2Ev(%"struct.std::_Vector_base.37"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.37"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.37"* %0, %"struct.std::_Vector_base.37"** %2, align 8
  %5 = load %"struct.std::_Vector_base.37"*, %"struct.std::_Vector_base.37"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %13, align 8
  %15 = ptrtoint %"class.std::tuple.41"* %11 to i64
  %16 = ptrtoint %"class.std::tuple.41"* %14 to i64
  %17 = sub i64 %15, -1560474467426742151
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -1560474467426742151
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.37"* %5, %"class.std::tuple.41"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.911
  %26 = load i32, i32* @y.912
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %59

; <label>:38:                                     ; preds = %24, %59
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  %42 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %42) #3
  %43 = load i32, i32* @x.911
  %44 = load i32, i32* @y.912
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %59

; <label>:56:                                     ; preds = %38
  br label %57

; <label>:57:                                     ; preds = %56
  %58 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %58) #11
  unreachable

; <label>:59:                                     ; preds = %38, %24
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %3, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %4, align 4
  %63 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %63) #3
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %3 to %"class.std::allocator.38"*
  call void @_ZNSaISt5tupleIJxxEEED2Ev(%"class.std::allocator.38"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxxEEED2Ev(%"class.std::allocator.38"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.915
  %5 = load i32, i32* @y.916
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1225810602, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1225810602, label %17
    i32 -1710034507, label %37
    i32 -990226989, label %68
    i32 -1773306016, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1710034507, i32 -1773306016
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %38, align 8
  %39 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %38, align 8
  %40 = bitcast %"class.std::allocator.38"* %39 to %"class.__gnu_cxx::new_allocator.39"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEED2Ev(%"class.__gnu_cxx::new_allocator.39"* %40) #3
  %41 = load i32, i32* @x.915
  %42 = load i32, i32* @y.916
  %43 = sub i32 %41, -1654366175
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1654366175
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -990226989, i32 -1773306016
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %70, align 8
  %71 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %70, align 8
  %72 = bitcast %"class.std::allocator.38"* %71 to %"class.__gnu_cxx::new_allocator.39"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEED2Ev(%"class.__gnu_cxx::new_allocator.39"* %72) #3
  store i32 -1710034507, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxxEEED2Ev(%"class.__gnu_cxx::new_allocator.39"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxxEESaIS1_EE8capacityEv(%"class.std::vector.36"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.36"*, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %2, align 8
  %3 = load %"class.std::vector.36"*, %"class.std::vector.36"** %2, align 8
  %4 = bitcast %"class.std::vector.36"* %3 to %"struct.std::_Vector_base.37"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %6, align 8
  %8 = bitcast %"class.std::vector.36"* %3 to %"struct.std::_Vector_base.37"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.37", %"struct.std::_Vector_base.37"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, long long>, std::allocator<std::tuple<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %10, align 8
  %12 = ptrtoint %"class.std::tuple.41"* %7 to i64
  %13 = ptrtoint %"class.std::tuple.41"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 16
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.41"* @_ZNSt6vectorISt5tupleIJxxEESaIS1_EE20_M_allocate_and_copyISt13move_iteratorIPS1_EEES6_mT_S8_(%"class.std::vector.36"*, i64, %"class.std::tuple.41"*, %"class.std::tuple.41"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::move_iterator.52", align 8
  %6 = alloca %"class.std::move_iterator.52", align 8
  %7 = alloca %"class.std::vector.36"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::tuple.41"*, align 8
  %10 = alloca %"class.std::move_iterator.52", align 8
  %11 = alloca %"class.std::move_iterator.52", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %5, i32 0, i32 0
  store %"class.std::tuple.41"* %2, %"class.std::tuple.41"** %14, align 8
  %15 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %6, i32 0, i32 0
  store %"class.std::tuple.41"* %3, %"class.std::tuple.41"** %15, align 8
  store %"class.std::vector.36"* %0, %"class.std::vector.36"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.36"*, %"class.std::vector.36"** %7, align 8
  %17 = bitcast %"class.std::vector.36"* %16 to %"struct.std::_Vector_base.37"*
  %18 = load i64, i64* %8, align 8
  %19 = call %"class.std::tuple.41"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.37"* %17, i64 %18)
  store %"class.std::tuple.41"* %19, %"class.std::tuple.41"** %9, align 8
  %20 = bitcast %"class.std::move_iterator.52"* %10 to i8*
  %21 = bitcast %"class.std::move_iterator.52"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.std::move_iterator.52"* %11 to i8*
  %23 = bitcast %"class.std::move_iterator.52"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  %25 = bitcast %"class.std::vector.36"* %16 to %"struct.std::_Vector_base.37"*
  %26 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.37"* %25) #3
  %27 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %10, i32 0, i32 0
  %28 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator.52", %"class.std::move_iterator.52"* %11, i32 0, i32 0
  %30 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %29, align 8
  %31 = invoke %"class.std::tuple.41"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxxEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.41"* %28, %"class.std::tuple.41"* %30, %"class.std::tuple.41"* %24, %"class.std::allocator.38"* dereferenceable(1) %26)
          to label %32 unwind label %34

; <label>:32:                                     ; preds = %4
  %33 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  ret %"class.std::tuple.41"* %33

; <label>:34:                                     ; preds = %4
  %35 = landingpad { i8*, i32 }
          catch i8* null
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %12, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %13, align 4
  br label %38

; <label>:38:                                     ; preds = %34
  %39 = load i8*, i8** %12, align 8
  %40 = call i8* @__cxa_begin_catch(i8* %39) #3
  %41 = bitcast %"class.std::vector.36"* %16 to %"struct.std::_Vector_base.37"*
  %42 = load %"class.std::tuple.41"*, %"class.std::tuple.41"** %9, align 8
  %43 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxxEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.37"* %41, %"class.std::tuple.41"* %42, i64 %43)
          to label %44 unwind label %45

; <label>:44:                                     ; preds = %38
  invoke void @__cxa_rethrow() #12
          to label %142 unwind label %45

; <label>:45:                                     ; preds = %44, %38
  %46 = load i32, i32* @x.921
  %47 = load i32, i32* @y.922
  %48 = add i32 %46, 1714093035
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1714093035
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %143

; <label>:60:                                     ; preds = %45, %143
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %12, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %13, align 4
  %64 = load i32, i32* @x.921
  %65 = load i32, i32* @y.922
  %66 = sub i32 %64, -1077747892
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -1077747892
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  br i1 %76, label %78, label %143

; <label>:78:                                     ; preds = %60
  invoke void @__cxa_end_catch()
          to label %79 unwind label %139

; <label>:79:                                     ; preds = %78
  %80 = load i32, i32* @x.921
  %81 = load i32, i32* @y.922
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %147

; <label>:105:                                    ; preds = %79, %147
  %106 = load i32, i32* @x.921
  %107 = load i32, i32* @y.922
  %108 = add i32 %106, -616892424
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, -616892424
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %147

; <label>:132:                                    ; preds = %105
  br label %134
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:134:                                    ; preds = %132
  %135 = load i8*, i8** %12, align 8
  %136 = load i32, i32* %13, align 4
  %137 = insertvalue { i8*, i32 } undef, i8* %135, 0
  %138 = insertvalue { i8*, i32 } %137, i32 %136, 1
  resume { i8*, i32 } %138

; <label>:139:                                    ; preds = %78
  %140 = landingpad { i8*, i32 }
          catch i8* null
  %141 = extractvalue { i8*, i32 } %140, 0
  call void @__clang_call_terminate(i8* %141) #11
  unreachable

; <label>:142:                                    ; preds = %44
  unreachable

; <label>:143:                                    ; preds = %60, %45
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %12, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %13, align 4
  br label %60

; <label>:147:                                    ; preds = %105, %79
  br label %105
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.923
  %5 = load i32, i32* @y.924
  %6 = add i32 %4, 1166463718
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1166463718
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2089005939, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2089005939, label %18
    i32 576958565, label %38
    i32 -2132981468, label %57
    i32 628106671, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 576958565, i32 628106671
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %39, align 8
  %40 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.923
  %43 = load i32, i32* @y.924
  %44 = add i32 %42, 952150014
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 952150014
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -2132981468, i32 628106671
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %59, align 8
  %60 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %61)
  store i32 576958565, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 1
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 2
  store i64* null, i64** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRxS0_S0_S0_EEC2ES0_S0_S0_S0_(%"class.std::tuple.44"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::tuple.44"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::tuple.44"* %0, %"class.std::tuple.44"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.std::tuple.44"*, %"class.std::tuple.44"** %6, align 8
  %12 = bitcast %"class.std::tuple.44"* %11 to %"struct.std::_Tuple_impl.45"*
  %13 = load i64*, i64** %7, align 8
  %14 = load i64*, i64** %8, align 8
  %15 = load i64*, i64** %9, align 8
  %16 = load i64*, i64** %10, align 8
  call void @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EEC2ES0_S0_S0_S0_(%"struct.std::_Tuple_impl.45"* %12, i64* dereferenceable(8) %13, i64* dereferenceable(8) %14, i64* dereferenceable(8) %15, i64* dereferenceable(8) %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EEC2ES0_S0_S0_S0_(%"struct.std::_Tuple_impl.45"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::_Tuple_impl.45"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.45"* %0, %"struct.std::_Tuple_impl.45"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %6, align 8
  %12 = bitcast %"struct.std::_Tuple_impl.45"* %11 to %"struct.std::_Tuple_impl.46"*
  %13 = load i64*, i64** %8, align 8
  %14 = load i64*, i64** %9, align 8
  %15 = load i64*, i64** %10, align 8
  call void @_ZNSt11_Tuple_implILm1EJRxS0_S0_EEC2ES0_S0_S0_(%"struct.std::_Tuple_impl.46"* %12, i64* dereferenceable(8) %13, i64* dereferenceable(8) %14, i64* dereferenceable(8) %15)
  %16 = bitcast %"struct.std::_Tuple_impl.45"* %11 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 24
  %18 = bitcast i8* %17 to %"struct.std::_Head_base.24"*
  %19 = load i64*, i64** %7, align 8
  call void @_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_(%"struct.std::_Head_base.24"* %18, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJRxS0_S0_EEC2ES0_S0_S0_(%"struct.std::_Tuple_impl.46"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl.46"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.46"* %0, %"struct.std::_Tuple_impl.46"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"struct.std::_Tuple_impl.46"*, %"struct.std::_Tuple_impl.46"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl.46"* %9 to %"struct.std::_Tuple_impl.47"*
  %11 = load i64*, i64** %7, align 8
  %12 = load i64*, i64** %8, align 8
  call void @_ZNSt11_Tuple_implILm2EJRxS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl.47"* %10, i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %13 = bitcast %"struct.std::_Tuple_impl.46"* %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %"struct.std::_Head_base.23"*
  %16 = load i64*, i64** %6, align 8
  call void @_ZNSt10_Head_baseILm1ERxLb0EEC2ES0_(%"struct.std::_Head_base.23"* %15, i64* dereferenceable(8) %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJRxS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl.47"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.933
  %7 = load i32, i32* @y.934
  %8 = add i32 %6, 1501694292
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1501694292
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1778133321, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1778133321, label %20
    i32 382818656, label %40
    i32 -118887582, label %65
    i32 1760010793, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 382818656, i32 1760010793
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Tuple_impl.47"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.47"* %0, %"struct.std::_Tuple_impl.47"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64* %2, i64** %43, align 8
  %44 = load %"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.47"** %41, align 8
  %45 = bitcast %"struct.std::_Tuple_impl.47"* %44 to %"struct.std::_Tuple_impl.48"*
  %46 = load i64*, i64** %43, align 8
  call void @_ZNSt11_Tuple_implILm3EJRxEEC2ES0_(%"struct.std::_Tuple_impl.48"* %45, i64* dereferenceable(8) %46)
  %47 = bitcast %"struct.std::_Tuple_impl.47"* %44 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to %"struct.std::_Head_base.50"*
  %50 = load i64*, i64** %42, align 8
  call void @_ZNSt10_Head_baseILm2ERxLb0EEC2ES0_(%"struct.std::_Head_base.50"* %49, i64* dereferenceable(8) %50)
  %51 = load i32, i32* @x.933
  %52 = load i32, i32* @y.934
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -118887582, i32 1760010793
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  ret void

; <label>:66:                                     ; preds = %17
  %67 = alloca %"struct.std::_Tuple_impl.47"*, align 8
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.47"* %0, %"struct.std::_Tuple_impl.47"** %67, align 8
  store i64* %1, i64** %68, align 8
  store i64* %2, i64** %69, align 8
  %70 = load %"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.47"** %67, align 8
  %71 = bitcast %"struct.std::_Tuple_impl.47"* %70 to %"struct.std::_Tuple_impl.48"*
  %72 = load i64*, i64** %69, align 8
  call void @_ZNSt11_Tuple_implILm3EJRxEEC2ES0_(%"struct.std::_Tuple_impl.48"* %71, i64* dereferenceable(8) %72)
  %73 = bitcast %"struct.std::_Tuple_impl.47"* %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 8
  %75 = bitcast i8* %74 to %"struct.std::_Head_base.50"*
  %76 = load i64*, i64** %68, align 8
  call void @_ZNSt10_Head_baseILm2ERxLb0EEC2ES0_(%"struct.std::_Head_base.50"* %75, i64* dereferenceable(8) %76)
  store i32 382818656, i32* %16
  br label %77

; <label>:77:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm3EJRxEEC2ES0_(%"struct.std::_Tuple_impl.48"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.935
  %6 = load i32, i32* @y.936
  %7 = sub i32 %5, -1142177053
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1142177053
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1398796498, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1398796498, label %19
    i32 84551926, label %27
    i32 2091111967, label %60
    i32 -1975535144, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 84551926, i32 -1975535144
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl.48"*, align 8
  %29 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.48"* %0, %"struct.std::_Tuple_impl.48"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"struct.std::_Tuple_impl.48"*, %"struct.std::_Tuple_impl.48"** %28, align 8
  %31 = bitcast %"struct.std::_Tuple_impl.48"* %30 to %"struct.std::_Head_base.49"*
  %32 = load i64*, i64** %29, align 8
  call void @_ZNSt10_Head_baseILm3ERxLb0EEC2ES0_(%"struct.std::_Head_base.49"* %31, i64* dereferenceable(8) %32)
  %33 = load i32, i32* @x.935
  %34 = load i32, i32* @y.936
  %35 = sub i32 %33, -1860778434
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1860778434
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 2091111967, i32 -1975535144
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Tuple_impl.48"*, align 8
  %63 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.48"* %0, %"struct.std::_Tuple_impl.48"** %62, align 8
  store i64* %1, i64** %63, align 8
  %64 = load %"struct.std::_Tuple_impl.48"*, %"struct.std::_Tuple_impl.48"** %62, align 8
  %65 = bitcast %"struct.std::_Tuple_impl.48"* %64 to %"struct.std::_Head_base.49"*
  %66 = load i64*, i64** %63, align 8
  call void @_ZNSt10_Head_baseILm3ERxLb0EEC2ES0_(%"struct.std::_Head_base.49"* %65, i64* dereferenceable(8) %66)
  store i32 84551926, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm2ERxLb0EEC2ES0_(%"struct.std::_Head_base.50"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.50"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.50"* %0, %"struct.std::_Head_base.50"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.50"*, %"struct.std::_Head_base.50"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.50", %"struct.std::_Head_base.50"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm3ERxLb0EEC2ES0_(%"struct.std::_Head_base.49"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.49"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.49"* %0, %"struct.std::_Head_base.49"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.49"*, %"struct.std::_Head_base.49"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.49", %"struct.std::_Head_base.49"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Tuple_impl.45"* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EEaSIJxxxxEEERS1_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.31"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.45"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.941
  %7 = load i32, i32* @y.942
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1809306571, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %93
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1809306571, label %19
    i32 565600108, label %39
    i32 709502713, label %79
    i32 959082736, label %81
  ]

; <label>:18:                                     ; preds = %16
  br label %93

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 565600108, i32 959082736
  store i32 %38, i32* %15
  br label %93

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.45"*, align 8
  %41 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.45"* %0, %"struct.std::_Tuple_impl.45"** %40, align 8
  store %"struct.std::_Tuple_impl.31"* %1, %"struct.std::_Tuple_impl.31"** %41, align 8
  %42 = load %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %40, align 8
  store %"struct.std::_Tuple_impl.45"* %42, %"struct.std::_Tuple_impl.45"** %3
  %43 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %41, align 8
  %44 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32) %43) #3
  %45 = load i64, i64* %44, align 8
  %46 = load volatile %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %3
  %47 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.45"* dereferenceable(32) %46) #3
  store i64 %45, i64* %47, align 8
  %48 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %41, align 8
  %49 = call dereferenceable(24) %"struct.std::_Tuple_impl.32"* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32) %48) #3
  %50 = load volatile %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %3
  %51 = call dereferenceable(24) %"struct.std::_Tuple_impl.46"* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.45"* dereferenceable(32) %50) #3
  %52 = call dereferenceable(24) %"struct.std::_Tuple_impl.46"* @_ZNSt11_Tuple_implILm1EJRxS0_S0_EEaSIJxxxEEERS1_RKS_ILm1EJDpT_EE(%"struct.std::_Tuple_impl.46"* %51, %"struct.std::_Tuple_impl.32"* dereferenceable(24) %49)
  %53 = load i32, i32* @x.941
  %54 = load i32, i32* @y.942
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 709502713, i32 959082736
  store i32 %78, i32* %15
  br label %93

; <label>:79:                                     ; preds = %16
  %80 = load volatile %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %3
  ret %"struct.std::_Tuple_impl.45"* %80

; <label>:81:                                     ; preds = %16
  %82 = alloca %"struct.std::_Tuple_impl.45"*, align 8
  %83 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.45"* %0, %"struct.std::_Tuple_impl.45"** %82, align 8
  store %"struct.std::_Tuple_impl.31"* %1, %"struct.std::_Tuple_impl.31"** %83, align 8
  %84 = load %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %82, align 8
  %85 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %83, align 8
  %86 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32) %85) #3
  %87 = load i64, i64* %86, align 8
  %88 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.45"* dereferenceable(32) %84) #3
  store i64 %87, i64* %88, align 8
  %89 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %83, align 8
  %90 = call dereferenceable(24) %"struct.std::_Tuple_impl.32"* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32) %89) #3
  %91 = call dereferenceable(24) %"struct.std::_Tuple_impl.46"* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.45"* dereferenceable(32) %84) #3
  %92 = call dereferenceable(24) %"struct.std::_Tuple_impl.46"* @_ZNSt11_Tuple_implILm1EJRxS0_S0_EEaSIJxxxEEERS1_RKS_ILm1EJDpT_EE(%"struct.std::_Tuple_impl.46"* %91, %"struct.std::_Tuple_impl.32"* dereferenceable(24) %90)
  store i32 565600108, i32* %15
  br label %93

; <label>:93:                                     ; preds = %81, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.943
  %6 = load i32, i32* @y.944
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -43661348, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -43661348, label %18
    i32 -1554052132, label %38
    i32 -1570555838, label %59
    i32 1896719238, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1554052132, i32 1896719238
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.31"* %0, %"struct.std::_Tuple_impl.31"** %39, align 8
  %40 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %39, align 8
  %41 = bitcast %"struct.std::_Tuple_impl.31"* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 24
  %43 = bitcast i8* %42 to %"struct.std::_Head_base.19"*
  %44 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.19"* dereferenceable(8) %43) #3
  store i64* %44, i64** %2
  %45 = load i32, i32* @x.943
  %46 = load i32, i32* @y.944
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1570555838, i32 1896719238
  store i32 %58, i32* %14
  br label %68

; <label>:59:                                     ; preds = %15
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.31"* %0, %"struct.std::_Tuple_impl.31"** %62, align 8
  %63 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %62, align 8
  %64 = bitcast %"struct.std::_Tuple_impl.31"* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 24
  %66 = bitcast i8* %65 to %"struct.std::_Head_base.19"*
  %67 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.19"* dereferenceable(8) %66) #3
  store i32 -1554052132, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.45"* dereferenceable(32)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.45"*, align 8
  store %"struct.std::_Tuple_impl.45"* %0, %"struct.std::_Tuple_impl.45"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.45"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.24"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.24"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::_Tuple_impl.32"* @_ZNSt11_Tuple_implILm0EJxxxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.31"* dereferenceable(32)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.31"*, align 8
  store %"struct.std::_Tuple_impl.31"* %0, %"struct.std::_Tuple_impl.31"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.31"*, %"struct.std::_Tuple_impl.31"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.31"* %3 to %"struct.std::_Tuple_impl.32"*
  ret %"struct.std::_Tuple_impl.32"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::_Tuple_impl.46"* @_ZNSt11_Tuple_implILm0EJRxS0_S0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.45"* dereferenceable(32)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.46"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.949
  %6 = load i32, i32* @y.950
  %7 = sub i32 %5, -1110327418
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1110327418
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 219295882, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 219295882, label %19
    i32 -425854547, label %39
    i32 -1092017978, label %69
    i32 -666264168, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -425854547, i32 -666264168
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.45"*, align 8
  store %"struct.std::_Tuple_impl.45"* %0, %"struct.std::_Tuple_impl.45"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.45"* %41 to %"struct.std::_Tuple_impl.46"*
  store %"struct.std::_Tuple_impl.46"* %42, %"struct.std::_Tuple_impl.46"** %2
  %43 = load i32, i32* @x.949
  %44 = load i32, i32* @y.950
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1092017978, i32 -666264168
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::_Tuple_impl.46"*, %"struct.std::_Tuple_impl.46"** %2
  ret %"struct.std::_Tuple_impl.46"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::_Tuple_impl.45"*, align 8
  store %"struct.std::_Tuple_impl.45"* %0, %"struct.std::_Tuple_impl.45"** %72, align 8
  %73 = load %"struct.std::_Tuple_impl.45"*, %"struct.std::_Tuple_impl.45"** %72, align 8
  %74 = bitcast %"struct.std::_Tuple_impl.45"* %73 to %"struct.std::_Tuple_impl.46"*
  store i32 -425854547, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"struct.std::_Tuple_impl.46"* @_ZNSt11_Tuple_implILm1EJRxS0_S0_EEaSIJxxxEEERS1_RKS_ILm1EJDpT_EE(%"struct.std::_Tuple_impl.46"*, %"struct.std::_Tuple_impl.32"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.46"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.46"* %0, %"struct.std::_Tuple_impl.46"** %3, align 8
  store %"struct.std::_Tuple_impl.32"* %1, %"struct.std::_Tuple_impl.32"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.46"*, %"struct.std::_Tuple_impl.46"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24) %6) #3
  %8 = load i64, i64* %7, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJRxS0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.46"* dereferenceable(24) %5) #3
  store i64 %8, i64* %9, align 8
  %10 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %4, align 8
  %11 = call dereferenceable(16) %"struct.std::_Tuple_impl.33"* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24) %10) #3
  %12 = call dereferenceable(16) %"struct.std::_Tuple_impl.47"* @_ZNSt11_Tuple_implILm1EJRxS0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.46"* dereferenceable(24) %5) #3
  %13 = call dereferenceable(16) %"struct.std::_Tuple_impl.47"* @_ZNSt11_Tuple_implILm2EJRxS0_EEaSIJxxEEERS1_RKS_ILm2EJDpT_EE(%"struct.std::_Tuple_impl.47"* %12, %"struct.std::_Tuple_impl.33"* dereferenceable(16) %11)
  ret %"struct.std::_Tuple_impl.46"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.19"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.19"*, align 8
  store %"struct.std::_Head_base.19"* %0, %"struct.std::_Head_base.19"** %2, align 8
  %3 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.955
  %6 = load i32, i32* @y.956
  %7 = sub i32 %5, -1330053453
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1330053453
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -149588071, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -149588071, label %19
    i32 -953178027, label %27
    i32 110939339, label %61
    i32 2145270801, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -953178027, i32 2145270801
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %28, align 8
  %30 = bitcast %"struct.std::_Tuple_impl.32"* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 16
  %32 = bitcast i8* %31 to %"struct.std::_Head_base.18"*
  %33 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.18"* dereferenceable(8) %32) #3
  store i64* %33, i64** %2
  %34 = load i32, i32* @x.955
  %35 = load i32, i32* @y.956
  %36 = sub i32 %34, 89256036
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 89256036
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 110939339, i32 2145270801
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile i64*, i64** %2
  ret i64* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %64, align 8
  %65 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %64, align 8
  %66 = bitcast %"struct.std::_Tuple_impl.32"* %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 16
  %68 = bitcast i8* %67 to %"struct.std::_Head_base.18"*
  %69 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.18"* dereferenceable(8) %68) #3
  store i32 -953178027, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJRxS0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.46"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.957
  %6 = load i32, i32* @y.958
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 469488127, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 469488127, label %18
    i32 -1007350256, label %38
    i32 1523885953, label %60
    i32 1383814467, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1007350256, i32 1383814467
  store i32 %37, i32* %14
  br label %69

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Tuple_impl.46"*, align 8
  store %"struct.std::_Tuple_impl.46"* %0, %"struct.std::_Tuple_impl.46"** %39, align 8
  %40 = load %"struct.std::_Tuple_impl.46"*, %"struct.std::_Tuple_impl.46"** %39, align 8
  %41 = bitcast %"struct.std::_Tuple_impl.46"* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to %"struct.std::_Head_base.23"*
  %44 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.23"* dereferenceable(8) %43) #3
  store i64* %44, i64** %2
  %45 = load i32, i32* @x.957
  %46 = load i32, i32* @y.958
  %47 = add i32 %45, 691322077
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 691322077
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1523885953, i32 1383814467
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  %61 = load volatile i64*, i64** %2
  ret i64* %61

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::_Tuple_impl.46"*, align 8
  store %"struct.std::_Tuple_impl.46"* %0, %"struct.std::_Tuple_impl.46"** %63, align 8
  %64 = load %"struct.std::_Tuple_impl.46"*, %"struct.std::_Tuple_impl.46"** %63, align 8
  %65 = bitcast %"struct.std::_Tuple_impl.46"* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 16
  %67 = bitcast i8* %66 to %"struct.std::_Head_base.23"*
  %68 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.23"* dereferenceable(8) %67) #3
  store i32 -1007350256, i32* %14
  br label %69

; <label>:69:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.33"* @_ZNSt11_Tuple_implILm1EJxxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.32"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.32"*, align 8
  store %"struct.std::_Tuple_impl.32"* %0, %"struct.std::_Tuple_impl.32"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.32"*, %"struct.std::_Tuple_impl.32"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.32"* %3 to %"struct.std::_Tuple_impl.33"*
  ret %"struct.std::_Tuple_impl.33"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.47"* @_ZNSt11_Tuple_implILm1EJRxS0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.46"* dereferenceable(24)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.46"*, align 8
  store %"struct.std::_Tuple_impl.46"* %0, %"struct.std::_Tuple_impl.46"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.46"*, %"struct.std::_Tuple_impl.46"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.46"* %3 to %"struct.std::_Tuple_impl.47"*
  ret %"struct.std::_Tuple_impl.47"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.47"* @_ZNSt11_Tuple_implILm2EJRxS0_EEaSIJxxEEERS1_RKS_ILm2EJDpT_EE(%"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.33"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.47"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.47"* %0, %"struct.std::_Tuple_impl.47"** %3, align 8
  store %"struct.std::_Tuple_impl.33"* %1, %"struct.std::_Tuple_impl.33"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.47"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16) %6) #3
  %8 = load i64, i64* %7, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJRxS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.47"* dereferenceable(16) %5) #3
  store i64 %8, i64* %9, align 8
  %10 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %4, align 8
  %11 = call dereferenceable(8) %"struct.std::_Tuple_impl.34"* @_ZNSt11_Tuple_implILm2EJxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16) %10) #3
  %12 = call dereferenceable(8) %"struct.std::_Tuple_impl.48"* @_ZNSt11_Tuple_implILm2EJRxS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.47"* dereferenceable(16) %5) #3
  %13 = call dereferenceable(8) %"struct.std::_Tuple_impl.48"* @_ZNSt11_Tuple_implILm3EJRxEEaSIxEERS1_RKS_ILm3EJT_EE(%"struct.std::_Tuple_impl.48"* %12, %"struct.std::_Tuple_impl.34"* dereferenceable(8) %11)
  ret %"struct.std::_Tuple_impl.47"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.18"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.965
  %6 = load i32, i32* @y.966
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -146037857, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -146037857, label %18
    i32 1784149339, label %38
    i32 -1745526948, label %57
    i32 620954203, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1784149339, i32 620954203
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Head_base.18"*, align 8
  store %"struct.std::_Head_base.18"* %0, %"struct.std::_Head_base.18"** %39, align 8
  %40 = load %"struct.std::_Head_base.18"*, %"struct.std::_Head_base.18"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Head_base.18", %"struct.std::_Head_base.18"* %40, i32 0, i32 0
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.965
  %43 = load i32, i32* @y.966
  %44 = add i32 %42, 539417146
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 539417146
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1745526948, i32 620954203
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Head_base.18"*, align 8
  store %"struct.std::_Head_base.18"* %0, %"struct.std::_Head_base.18"** %60, align 8
  %61 = load %"struct.std::_Head_base.18"*, %"struct.std::_Head_base.18"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Head_base.18", %"struct.std::_Head_base.18"* %61, i32 0, i32 0
  store i32 1784149339, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.33"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Head_base"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm2EJRxS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.47"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.969
  %6 = load i32, i32* @y.970
  %7 = sub i32 %5, 367339490
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 367339490
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1596071135, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1596071135, label %19
    i32 259210796, label %39
    i32 723717216, label %61
    i32 -1567987473, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 259210796, i32 -1567987473
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.47"*, align 8
  store %"struct.std::_Tuple_impl.47"* %0, %"struct.std::_Tuple_impl.47"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.47"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.47"* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to %"struct.std::_Head_base.50"*
  %45 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.50"* dereferenceable(8) %44) #3
  store i64* %45, i64** %2
  %46 = load i32, i32* @x.969
  %47 = load i32, i32* @y.970
  %48 = sub i32 %46, 946073334
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 946073334
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 723717216, i32 -1567987473
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile i64*, i64** %2
  ret i64* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Tuple_impl.47"*, align 8
  store %"struct.std::_Tuple_impl.47"* %0, %"struct.std::_Tuple_impl.47"** %64, align 8
  %65 = load %"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.47"** %64, align 8
  %66 = bitcast %"struct.std::_Tuple_impl.47"* %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to %"struct.std::_Head_base.50"*
  %69 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.50"* dereferenceable(8) %68) #3
  store i32 259210796, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.34"* @_ZNSt11_Tuple_implILm2EJxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.33"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %0, %"struct.std::_Tuple_impl.33"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.33"* %3 to %"struct.std::_Tuple_impl.34"*
  ret %"struct.std::_Tuple_impl.34"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.48"* @_ZNSt11_Tuple_implILm2EJRxS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.47"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.48"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.973
  %6 = load i32, i32* @y.974
  %7 = add i32 %5, 413896360
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 413896360
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1802254098, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1802254098, label %19
    i32 -1204182074, label %39
    i32 -1770011008, label %57
    i32 -1849148695, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1204182074, i32 -1849148695
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.47"*, align 8
  store %"struct.std::_Tuple_impl.47"* %0, %"struct.std::_Tuple_impl.47"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.47"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.47"* %41 to %"struct.std::_Tuple_impl.48"*
  store %"struct.std::_Tuple_impl.48"* %42, %"struct.std::_Tuple_impl.48"** %2
  %43 = load i32, i32* @x.973
  %44 = load i32, i32* @y.974
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1770011008, i32 -1849148695
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::_Tuple_impl.48"*, %"struct.std::_Tuple_impl.48"** %2
  ret %"struct.std::_Tuple_impl.48"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Tuple_impl.47"*, align 8
  store %"struct.std::_Tuple_impl.47"* %0, %"struct.std::_Tuple_impl.47"** %60, align 8
  %61 = load %"struct.std::_Tuple_impl.47"*, %"struct.std::_Tuple_impl.47"** %60, align 8
  %62 = bitcast %"struct.std::_Tuple_impl.47"* %61 to %"struct.std::_Tuple_impl.48"*
  store i32 -1204182074, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.48"* @_ZNSt11_Tuple_implILm3EJRxEEaSIxEERS1_RKS_ILm3EJT_EE(%"struct.std::_Tuple_impl.48"*, %"struct.std::_Tuple_impl.34"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.48"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.48"* %0, %"struct.std::_Tuple_impl.48"** %3, align 8
  store %"struct.std::_Tuple_impl.34"* %1, %"struct.std::_Tuple_impl.34"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.48"*, %"struct.std::_Tuple_impl.48"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm3EJxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.34"* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm3EJRxEE7_M_headERS1_(%"struct.std::_Tuple_impl.48"* dereferenceable(8) %5) #3
  store i64 %8, i64* %9, align 8
  ret %"struct.std::_Tuple_impl.48"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm2ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.50"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.50"*, align 8
  store %"struct.std::_Head_base.50"* %0, %"struct.std::_Head_base.50"** %2, align 8
  %3 = load %"struct.std::_Head_base.50"*, %"struct.std::_Head_base.50"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.50", %"struct.std::_Head_base.50"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm3EJxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.34"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %0, %"struct.std::_Tuple_impl.34"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.34"* %3 to %"struct.std::_Head_base.35"*
  %5 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm3ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.35"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm3EJRxEE7_M_headERS1_(%"struct.std::_Tuple_impl.48"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.48"*, align 8
  store %"struct.std::_Tuple_impl.48"* %0, %"struct.std::_Tuple_impl.48"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.48"*, %"struct.std::_Tuple_impl.48"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.48"* %3 to %"struct.std::_Head_base.49"*
  %5 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm3ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.49"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm3ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.35"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.35"*, align 8
  store %"struct.std::_Head_base.35"* %0, %"struct.std::_Head_base.35"** %2, align 8
  %3 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.35", %"struct.std::_Head_base.35"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm3ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.49"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.987
  %6 = load i32, i32* @y.988
  %7 = add i32 %5, -213905334
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -213905334
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -379681090, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -379681090, label %19
    i32 -544927011, label %27
    i32 606861225, label %47
    i32 580489927, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -544927011, i32 580489927
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base.49"*, align 8
  store %"struct.std::_Head_base.49"* %0, %"struct.std::_Head_base.49"** %28, align 8
  %29 = load %"struct.std::_Head_base.49"*, %"struct.std::_Head_base.49"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Head_base.49", %"struct.std::_Head_base.49"* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.987
  %33 = load i32, i32* @y.988
  %34 = add i32 %32, -1089739878
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1089739878
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 606861225, i32 580489927
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64*, i64** %2
  ret i64* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Head_base.49"*, align 8
  store %"struct.std::_Head_base.49"* %0, %"struct.std::_Head_base.49"** %50, align 8
  %51 = load %"struct.std::_Head_base.49"*, %"struct.std::_Head_base.49"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Head_base.49", %"struct.std::_Head_base.49"* %51, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  store i32 -544927011, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE9constructIxJRxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRxEEEvDpOT_(%"class.std::vector.0"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.0"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %5, align 8
  %14 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %12, i64 %13)
  store i64* %14, i64** %6, align 8
  %15 = load i64*, i64** %6, align 8
  store i64* %15, i64** %7, align 8
  %16 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %17 to %"class.std::allocator.2"*
  %19 = load i64*, i64** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %10) #3
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = load i64*, i64** %4, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIxEE9constructIxJRxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %18, i64* %21, i64* dereferenceable(8) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store i64* null, i64** %7, align 8
  %25 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = load i64*, i64** %6, align 8
  %34 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %35 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %34) #3
  %36 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %28, i64* %32, i64* %33, %"class.std::allocator.2"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store i64* %36, i64** %7, align 8
  %38 = load i64*, i64** %7, align 8
  %39 = getelementptr inbounds i64, i64* %38, i32 1
  store i64* %39, i64** %7, align 8
  br label %211

; <label>:40:                                     ; preds = %24, %2
  %41 = load i32, i32* @x.991
  %42 = load i32, i32* @y.992
  %43 = add i32 %41, -1838309124
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1838309124
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %307

; <label>:67:                                     ; preds = %40, %307
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %8, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %9, align 4
  %71 = load i32, i32* @x.991
  %72 = load i32, i32* @y.992
  %73 = sub i32 %71, 1123742822
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 1123742822
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %307

; <label>:97:                                     ; preds = %67
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i8*, i8** %8, align 8
  %100 = call i8* @__cxa_begin_catch(i8* %99) #3
  %101 = load i64*, i64** %7, align 8
  %102 = icmp ne i64* %101, null
  br i1 %102, label %157, label %103

; <label>:103:                                    ; preds = %98
  %104 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %104, i32 0, i32 0
  %106 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %105 to %"class.std::allocator.2"*
  %107 = load i64*, i64** %6, align 8
  %108 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %10) #3
  %109 = getelementptr inbounds i64, i64* %107, i64 %108
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1) %106, i64* %109)
          to label %110 unwind label %153

; <label>:110:                                    ; preds = %103
  %111 = load i32, i32* @x.991
  %112 = load i32, i32* @y.992
  %113 = sub i32 %111, -500407271
  %114 = sub i32 %113, 1
  %115 = add i32 %114, -500407271
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 true, true
  %124 = and i1 %121, true
  %125 = and i1 %119, %123
  %126 = and i1 %122, true
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 true, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %311

; <label>:137:                                    ; preds = %110, %311
  %138 = load i32, i32* @x.991
  %139 = load i32, i32* @y.992
  %140 = sub i32 %138, 1315809526
  %141 = sub i32 %140, 1
  %142 = add i32 %141, 1315809526
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %311

; <label>:152:                                    ; preds = %137
  br label %163

; <label>:153:                                    ; preds = %209, %163, %157, %103
  %154 = landingpad { i8*, i32 }
          cleanup
  %155 = extractvalue { i8*, i32 } %154, 0
  store i8* %155, i8** %8, align 8
  %156 = extractvalue { i8*, i32 } %154, 1
  store i32 %156, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %210 unwind label %303

; <label>:157:                                    ; preds = %98
  %158 = load i64*, i64** %6, align 8
  %159 = load i64*, i64** %7, align 8
  %160 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %161 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %160) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %158, i64* %159, %"class.std::allocator.2"* dereferenceable(1) %161)
          to label %162 unwind label %153

; <label>:162:                                    ; preds = %157
  br label %163

; <label>:163:                                    ; preds = %162, %152
  %164 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %165 = load i64*, i64** %6, align 8
  %166 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %164, i64* %165, i64 %166)
          to label %167 unwind label %153

; <label>:167:                                    ; preds = %163
  %168 = load i32, i32* @x.991
  %169 = load i32, i32* @y.992
  %170 = add i32 %168, -1943219741
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, -1943219741
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %312

; <label>:194:                                    ; preds = %167, %312
  %195 = load i32, i32* @x.991
  %196 = load i32, i32* @y.992
  %197 = add i32 %195, 1951354381
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, 1951354381
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %312

; <label>:209:                                    ; preds = %194
  invoke void @__cxa_rethrow() #12
          to label %306 unwind label %153

; <label>:210:                                    ; preds = %153
  br label %298

; <label>:211:                                    ; preds = %37
  %212 = load i32, i32* @x.991
  %213 = load i32, i32* @y.992
  %214 = sub i32 %212, 1625529423
  %215 = sub i32 %214, 1
  %216 = add i32 %215, 1625529423
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  br i1 %236, label %238, label %313

; <label>:238:                                    ; preds = %211, %313
  %239 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %239, i32 0, i32 0
  %241 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %240, i32 0, i32 0
  %242 = load i64*, i64** %241, align 8
  %243 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %244 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %244, i32 0, i32 1
  %246 = load i64*, i64** %245, align 8
  %247 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %248 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %247) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %242, i64* %246, %"class.std::allocator.2"* dereferenceable(1) %248)
  %249 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %250 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %251, i32 0, i32 0
  %253 = load i64*, i64** %252, align 8
  %254 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %255 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %255, i32 0, i32 2
  %257 = load i64*, i64** %256, align 8
  %258 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %259, i32 0, i32 0
  %261 = load i64*, i64** %260, align 8
  %262 = ptrtoint i64* %257 to i64
  %263 = ptrtoint i64* %261 to i64
  %264 = add i64 %262, -8723560931110601452
  %265 = sub i64 %264, %263
  %266 = sub i64 %265, -8723560931110601452
  %267 = sub i64 %262, %263
  %268 = sdiv exact i64 %266, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %249, i64* %253, i64 %268)
  %269 = load i64*, i64** %6, align 8
  %270 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %271 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %271, i32 0, i32 0
  store i64* %269, i64** %272, align 8
  %273 = load i64*, i64** %7, align 8
  %274 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %275 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %275, i32 0, i32 1
  store i64* %273, i64** %276, align 8
  %277 = load i64*, i64** %6, align 8
  %278 = load i64, i64* %5, align 8
  %279 = getelementptr inbounds i64, i64* %277, i64 %278
  %280 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %281 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %280, i32 0, i32 0
  %282 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %281, i32 0, i32 2
  store i64* %279, i64** %282, align 8
  %283 = load i32, i32* @x.991
  %284 = load i32, i32* @y.992
  %285 = add i32 %283, -564636782
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, -564636782
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  br i1 %295, label %297, label %313

; <label>:297:                                    ; preds = %238
  ret void

; <label>:298:                                    ; preds = %210
  %299 = load i8*, i8** %8, align 8
  %300 = load i32, i32* %9, align 4
  %301 = insertvalue { i8*, i32 } undef, i8* %299, 0
  %302 = insertvalue { i8*, i32 } %301, i32 %300, 1
  resume { i8*, i32 } %302

; <label>:303:                                    ; preds = %153
  %304 = landingpad { i8*, i32 }
          catch i8* null
  %305 = extractvalue { i8*, i32 } %304, 0
  call void @__clang_call_terminate(i8* %305) #11
  unreachable

; <label>:306:                                    ; preds = %209
  unreachable

; <label>:307:                                    ; preds = %67, %40
  %308 = landingpad { i8*, i32 }
          catch i8* null
  %309 = extractvalue { i8*, i32 } %308, 0
  store i8* %309, i8** %8, align 8
  %310 = extractvalue { i8*, i32 } %308, 1
  store i32 %310, i32* %9, align 4
  br label %67

; <label>:311:                                    ; preds = %137, %110
  br label %137

; <label>:312:                                    ; preds = %194, %167
  br label %194

; <label>:313:                                    ; preds = %238, %211
  %314 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %315, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %319 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %318, i32 0, i32 0
  %320 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %319, i32 0, i32 1
  %321 = load i64*, i64** %320, align 8
  %322 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %323 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %322) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %317, i64* %321, %"class.std::allocator.2"* dereferenceable(1) %323)
  %324 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %325 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %326, i32 0, i32 0
  %328 = load i64*, i64** %327, align 8
  %329 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %330 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %329, i32 0, i32 0
  %331 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %330, i32 0, i32 2
  %332 = load i64*, i64** %331, align 8
  %333 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %334 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %333, i32 0, i32 0
  %335 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %334, i32 0, i32 0
  %336 = load i64*, i64** %335, align 8
  %337 = ptrtoint i64* %332 to i64
  %338 = ptrtoint i64* %336 to i64
  %339 = sub i64 %337, -8465017103030110017
  %340 = sub i64 %339, %338
  %341 = add i64 %340, -8465017103030110017
  %342 = sub i64 %337, %338
  %343 = mul i64 %341, %338
  %344 = shl i64 %337, %338
  %345 = shl i64 %337, %338
  %346 = sub i64 0, %338
  %347 = add i64 %337, %346
  %348 = sub i64 %337, %338
  %349 = sdiv exact i64 %347, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %324, i64* %328, i64 %349)
  %350 = load i64*, i64** %6, align 8
  %351 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %352 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %351, i32 0, i32 0
  %353 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %352, i32 0, i32 0
  store i64* %350, i64** %353, align 8
  %354 = load i64*, i64** %7, align 8
  %355 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %356 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %355, i32 0, i32 0
  %357 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %356, i32 0, i32 1
  store i64* %354, i64** %357, align 8
  %358 = load i64*, i64** %6, align 8
  %359 = load i64, i64* %5, align 8
  %360 = getelementptr inbounds i64, i64* %358, i64 %359
  %361 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %361, i32 0, i32 0
  %363 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %362, i32 0, i32 2
  store i64* %360, i64** %363, align 8
  br label %238
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, i64*, i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.0"*
  %9 = alloca %"class.std::vector.0"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %8
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %16 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %15) #3
  %17 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %18 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %17) #3
  %19 = sub i64 %16, 3582596807278422844
  %20 = sub i64 %19, %18
  %21 = add i64 %20, 3582596807278422844
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -2092850973, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %221
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -2092850973, label %29
    i32 297043474, label %34
    i32 -489352785, label %50
    i32 -148899814, label %79
    i32 -1796841611, label %80
    i32 -1148724005, label %97
    i32 951057453, label %125
    i32 2119329159, label %157
    i32 -872771082, label %160
    i32 1121175954, label %188
    i32 1383457489, label %205
    i32 1098760532, label %207
    i32 -316949310, label %209
    i32 -1394129266, label %211
    i32 829920557, label %213
    i32 -316543171, label %218
  ]

; <label>:28:                                     ; preds = %26
  br label %221

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 297043474, i32 -1796841611
  store i32 %33, i32* %24
  br label %221

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.995
  %36 = load i32, i32* @y.996
  %37 = add i32 %35, -8412072
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -8412072
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -489352785, i32 -1394129266
  store i32 %49, i32* %24
  br label %221

; <label>:50:                                     ; preds = %26
  %51 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %51) #12
  %52 = load i32, i32* @x.995
  %53 = load i32, i32* @y.996
  %54 = sub i32 %52, -251506999
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -251506999
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -148899814, i32 -1394129266
  store i32 %78, i32* %24
  br label %221

; <label>:79:                                     ; preds = %26
  unreachable

; <label>:80:                                     ; preds = %26
  %81 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %82 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %81) #3
  %83 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %84 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %83) #3
  store i64 %84, i64* %13, align 8
  %85 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 0, %82
  %88 = sub i64 0, %86
  %89 = add i64 %87, %88
  %90 = sub i64 0, %89
  %91 = add i64 %82, %86
  store i64 %90, i64* %12, align 8
  %92 = load i64, i64* %12, align 8
  %93 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %94 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %93) #3
  %95 = icmp ult i64 %92, %94
  %96 = select i1 %95, i32 -872771082, i32 -1148724005
  store i32 %96, i32* %24
  br label %221

; <label>:97:                                     ; preds = %26
  %98 = load i32, i32* @x.995
  %99 = load i32, i32* @y.996
  %100 = sub i32 %98, 714986454
  %101 = sub i32 %100, 1
  %102 = add i32 %101, 714986454
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 951057453, i32 829920557
  store i32 %124, i32* %24
  br label %221

; <label>:125:                                    ; preds = %26
  %126 = load i64, i64* %12, align 8
  %127 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %128 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %127) #3
  %129 = icmp ugt i64 %126, %128
  store i1 %129, i1* %5
  %130 = load i32, i32* @x.995
  %131 = load i32, i32* @y.996
  %132 = add i32 %130, 461931500
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, 461931500
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 2119329159, i32 829920557
  store i32 %156, i32* %24
  br label %221

; <label>:157:                                    ; preds = %26
  %158 = load volatile i1, i1* %5
  %159 = select i1 %158, i32 -872771082, i32 1098760532
  store i32 %159, i32* %24
  br label %221

; <label>:160:                                    ; preds = %26
  %161 = load i32, i32* @x.995
  %162 = load i32, i32* @y.996
  %163 = sub i32 %161, -953508766
  %164 = sub i32 %163, 1
  %165 = add i32 %164, -953508766
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 true, true
  %174 = and i1 %171, true
  %175 = and i1 %169, %173
  %176 = and i1 %172, true
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 true, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 1121175954, i32 -316543171
  store i32 %187, i32* %24
  br label %221

; <label>:188:                                    ; preds = %26
  %189 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %190 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %189) #3
  store i64 %190, i64* %4
  %191 = load i32, i32* @x.995
  %192 = load i32, i32* @y.996
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  %204 = select i1 %202, i32 1383457489, i32 -316543171
  store i32 %204, i32* %24
  br label %221

; <label>:205:                                    ; preds = %26
  store i32 -316949310, i32* %24
  %206 = load volatile i64, i64* %4
  store i64 %206, i64* %25
  br label %221

; <label>:207:                                    ; preds = %26
  %208 = load i64, i64* %12, align 8
  store i32 -316949310, i32* %24
  store i64 %208, i64* %25
  br label %221

; <label>:209:                                    ; preds = %26
  %210 = load i64, i64* %25
  ret i64 %210

; <label>:211:                                    ; preds = %26
  %212 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %212) #12
  store i32 -489352785, i32* %24
  br label %221

; <label>:213:                                    ; preds = %26
  %214 = load i64, i64* %12, align 8
  %215 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %216 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %215) #3
  %217 = icmp ugt i64 %214, %216
  store i32 951057453, i32* %24
  br label %221

; <label>:218:                                    ; preds = %26
  %219 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %220 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %219) #3
  store i32 1121175954, i32* %24
  br label %221

; <label>:221:                                    ; preds = %218, %213, %211, %207, %205, %188, %160, %157, %125, %97, %80, %50, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.57", align 8
  %10 = alloca %"class.std::move_iterator.57", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.2"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.57", align 8
  %6 = alloca %"class.std::move_iterator.57", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.57", align 8
  %10 = alloca %"class.std::move_iterator.57", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.57"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.57"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.57"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.57"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.57", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.57"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1009
  %8 = load i32, i32* @y.1010
  %9 = sub i32 %7, 1353575327
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1353575327
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1121583174, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1121583174, label %21
    i32 1523659500, label %41
    i32 1165068857, label %75
    i32 -772197244, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1523659500, i32 -772197244
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.57", align 8
  %43 = alloca %"class.std::move_iterator.57", align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::move_iterator.57", align 8
  %47 = alloca %"class.std::move_iterator.57", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %42, i32 0, i32 0
  store i64* %0, i64** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %43, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.std::move_iterator.57"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.57"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.57"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.57"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i64*, i64** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %56, i64* %58, i64* %54)
  store i64* %59, i64** %4
  %60 = load i32, i32* @x.1009
  %61 = load i32, i32* @y.1010
  %62 = add i32 %60, 241489639
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 241489639
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 1165068857, i32 -772197244
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile i64*, i64** %4
  ret i64* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator.57", align 8
  %79 = alloca %"class.std::move_iterator.57", align 8
  %80 = alloca i64*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.std::move_iterator.57", align 8
  %83 = alloca %"class.std::move_iterator.57", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %78, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %79, i32 0, i32 0
  store i64* %1, i64** %85, align 8
  store i64* %2, i64** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.std::move_iterator.57"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.57"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator.57"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator.57"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load i64*, i64** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %82, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %83, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %92, i64* %94, i64* %90)
  store i32 1523659500, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1011
  %8 = load i32, i32* @y.1012
  %9 = sub i32 %7, 450669559
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 450669559
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1112296107, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %93
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1112296107, label %21
    i32 -1553474004, label %29
    i32 -1063218724, label %73
    i32 -274798840, label %75
  ]

; <label>:20:                                     ; preds = %18
  br label %93

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1553474004, i32 -274798840
  store i32 %28, i32* %17
  br label %93

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.57", align 8
  %31 = alloca %"class.std::move_iterator.57", align 8
  %32 = alloca i64*, align 8
  %33 = alloca %"class.std::move_iterator.57", align 8
  %34 = alloca %"class.std::move_iterator.57", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %30, i32 0, i32 0
  store i64* %0, i64** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %31, i32 0, i32 0
  store i64* %1, i64** %36, align 8
  store i64* %2, i64** %32, align 8
  %37 = bitcast %"class.std::move_iterator.57"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.57"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.std::move_iterator.57"* %34 to i8*
  %40 = bitcast %"class.std::move_iterator.57"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load i64*, i64** %32, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %33, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %34, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %43, i64* %45, i64* %41)
  store i64* %46, i64** %4
  %47 = load i32, i32* @x.1011
  %48 = load i32, i32* @y.1012
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1063218724, i32 -274798840
  store i32 %72, i32* %17
  br label %93

; <label>:73:                                     ; preds = %18
  %74 = load volatile i64*, i64** %4
  ret i64* %74

; <label>:75:                                     ; preds = %18
  %76 = alloca %"class.std::move_iterator.57", align 8
  %77 = alloca %"class.std::move_iterator.57", align 8
  %78 = alloca i64*, align 8
  %79 = alloca %"class.std::move_iterator.57", align 8
  %80 = alloca %"class.std::move_iterator.57", align 8
  %81 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %76, i32 0, i32 0
  store i64* %0, i64** %81, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %77, i32 0, i32 0
  store i64* %1, i64** %82, align 8
  store i64* %2, i64** %78, align 8
  %83 = bitcast %"class.std::move_iterator.57"* %79 to i8*
  %84 = bitcast %"class.std::move_iterator.57"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = bitcast %"class.std::move_iterator.57"* %80 to i8*
  %86 = bitcast %"class.std::move_iterator.57"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = load i64*, i64** %78, align 8
  %88 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %79, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %80, i32 0, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %89, i64* %91, i64* %87)
  store i32 -1553474004, i32* %17
  br label %93

; <label>:93:                                     ; preds = %75, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.57", align 8
  %5 = alloca %"class.std::move_iterator.57", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.57", align 8
  %8 = alloca %"class.std::move_iterator.57", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.57"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.57"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator.57"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.57"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.57", align 8
  %3 = alloca %"class.std::move_iterator.57", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.std::move_iterator.57"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.57"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = add i64 %12, -117547945322503050
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -117547945322503050
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 1685883140, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %75
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1685883140, label %24
    i32 42088557, label %28
    i32 1971029694, label %35
    i32 466632720, label %50
    i32 111047807, label %69
    i32 -312929738, label %71
  ]

; <label>:23:                                     ; preds = %21
  br label %75

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 42088557, i32 1971029694
  store i32 %27, i32* %20
  br label %75

; <label>:28:                                     ; preds = %21
  %29 = load i64*, i64** %8, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = load i64*, i64** %6, align 8
  %32 = bitcast i64* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 8, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 1971029694, i32* %20
  br label %75

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.1021
  %37 = load i32, i32* @y.1022
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 466632720, i32 -312929738
  store i32 %49, i32* %20
  br label %75

; <label>:50:                                     ; preds = %21
  %51 = load i64*, i64** %8, align 8
  %52 = load i64, i64* %9, align 8
  %53 = getelementptr inbounds i64, i64* %51, i64 %52
  store i64* %53, i64** %4
  %54 = load i32, i32* @x.1021
  %55 = load i32, i32* @y.1022
  %56 = add i32 %54, 1919094361
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1919094361
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 111047807, i32 -312929738
  store i32 %68, i32* %20
  br label %75

; <label>:69:                                     ; preds = %21
  %70 = load volatile i64*, i64** %4
  ret i64* %70

; <label>:71:                                     ; preds = %21
  %72 = load i64*, i64** %8, align 8
  %73 = load i64, i64* %9, align 8
  %74 = getelementptr inbounds i64, i64* %72, i64 %73
  store i32 466632720, i32* %20
  br label %75

; <label>:75:                                     ; preds = %71, %50, %35, %28, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1023
  %6 = load i32, i32* @y.1024
  %7 = sub i32 %5, 1725840823
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1725840823
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -179231455, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -179231455, label %19
    i32 243862763, label %27
    i32 217944645, label %45
    i32 -887118947, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 243862763, i32 -887118947
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.57", align 8
  %29 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %28, i32 0, i32 0
  store i64* %0, i64** %29, align 8
  %30 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.57"* %28)
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.1023
  %32 = load i32, i32* @y.1024
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 217944645, i32 -887118947
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile i64*, i64** %2
  ret i64* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::move_iterator.57", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %48, i32 0, i32 0
  store i64* %0, i64** %49, align 8
  %50 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.57"* %48)
  store i32 243862763, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.57"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.57"*, align 8
  store %"class.std::move_iterator.57"* %0, %"class.std::move_iterator.57"** %2, align 8
  %3 = load %"class.std::move_iterator.57"*, %"class.std::move_iterator.57"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.57"*, i64*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1027
  %6 = load i32, i32* @y.1028
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1203862294, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1203862294, label %18
    i32 -1077766060, label %26
    i32 -48884767, label %58
    i32 -1934398203, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1077766060, i32 -1934398203
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.57"*, align 8
  %28 = alloca i64*, align 8
  store %"class.std::move_iterator.57"* %0, %"class.std::move_iterator.57"** %27, align 8
  store i64* %1, i64** %28, align 8
  %29 = load %"class.std::move_iterator.57"*, %"class.std::move_iterator.57"** %27, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %29, i32 0, i32 0
  %31 = load i64*, i64** %28, align 8
  store i64* %31, i64** %30, align 8
  %32 = load i32, i32* @x.1027
  %33 = load i32, i32* @y.1028
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -48884767, i32 -1934398203
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::move_iterator.57"*, align 8
  %61 = alloca i64*, align 8
  store %"class.std::move_iterator.57"* %0, %"class.std::move_iterator.57"** %60, align 8
  store i64* %1, i64** %61, align 8
  %62 = load %"class.std::move_iterator.57"*, %"class.std::move_iterator.57"** %60, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %62, i32 0, i32 0
  %64 = load i64*, i64** %61, align 8
  store i64* %64, i64** %63, align 8
  store i32 -1077766060, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.3"*, i64*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1029
  %6 = load i32, i32* @y.1030
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1888098458, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1888098458, label %18
    i32 -1375125296, label %38
    i32 -1756652457, label %69
    i32 253526618, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1375125296, i32 253526618
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %40 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  store i64* %1, i64** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %42 = load i32, i32* @x.1029
  %43 = load i32, i32* @y.1030
  %44 = sub i32 %42, 273803894
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 273803894
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1756652457, i32 253526618
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %72 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %71, align 8
  store i64* %1, i64** %72, align 8
  %73 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %71, align 8
  store i32 -1375125296, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.21"* @_ZNSt11_Tuple_implILm0EJRxS0_EEaSIJxxEEERS1_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.21"*, %"struct.std::_Tuple_impl.42"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.21"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.21"* %0, %"struct.std::_Tuple_impl.21"** %3, align 8
  store %"struct.std::_Tuple_impl.42"* %1, %"struct.std::_Tuple_impl.42"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.21"*, %"struct.std::_Tuple_impl.21"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16) %6) #3
  %8 = load i64, i64* %7, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.21"* dereferenceable(16) %5) #3
  store i64 %8, i64* %9, align 8
  %10 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %4, align 8
  %11 = call dereferenceable(8) %"struct.std::_Tuple_impl.43"* @_ZNSt11_Tuple_implILm0EJxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16) %10) #3
  %12 = call dereferenceable(8) %"struct.std::_Tuple_impl.22"* @_ZNSt11_Tuple_implILm0EJRxS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.21"* dereferenceable(16) %5) #3
  %13 = call dereferenceable(8) %"struct.std::_Tuple_impl.22"* @_ZNSt11_Tuple_implILm1EJRxEEaSIxEERS1_RKS_ILm1EJT_EE(%"struct.std::_Tuple_impl.22"* %12, %"struct.std::_Tuple_impl.43"* dereferenceable(8) %11)
  ret %"struct.std::_Tuple_impl.21"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.42"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.19"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.19"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.43"* @_ZNSt11_Tuple_implILm0EJxxEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.42"* dereferenceable(16)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.42"*, align 8
  store %"struct.std::_Tuple_impl.42"* %0, %"struct.std::_Tuple_impl.42"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.42"*, %"struct.std::_Tuple_impl.42"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.42"* %3 to %"struct.std::_Tuple_impl.43"*
  ret %"struct.std::_Tuple_impl.43"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.22"* @_ZNSt11_Tuple_implILm1EJRxEEaSIxEERS1_RKS_ILm1EJT_EE(%"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.43"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.22"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.43"*, align 8
  store %"struct.std::_Tuple_impl.22"* %0, %"struct.std::_Tuple_impl.22"** %3, align 8
  store %"struct.std::_Tuple_impl.43"* %1, %"struct.std::_Tuple_impl.43"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.43"* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJRxEE7_M_headERS1_(%"struct.std::_Tuple_impl.22"* dereferenceable(8) %5) #3
  store i64 %8, i64* %9, align 8
  ret %"struct.std::_Tuple_impl.22"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm1EJxEE7_M_headERKS0_(%"struct.std::_Tuple_impl.43"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.43"*, align 8
  store %"struct.std::_Tuple_impl.43"* %0, %"struct.std::_Tuple_impl.43"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.43"*, %"struct.std::_Tuple_impl.43"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.43"* %3 to %"struct.std::_Head_base.18"*
  %5 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm1ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.18"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1041
  %6 = load i32, i32* @y.1042
  %7 = sub i32 %5, -1107429170
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1107429170
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 790606221, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 790606221, label %19
    i32 -1982179051, label %39
    i32 426425499, label %69
    i32 -1348736756, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1982179051, i32 -1348736756
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  store %"class.std::vector.0"* %41, %"class.std::vector.0"** %2
  %42 = load i32, i32* @x.1041
  %43 = load i32, i32* @y.1042
  %44 = sub i32 %42, 1935389349
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1935389349
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 426425499, i32 -1348736756
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %72, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  store i32 -1982179051, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EOS1_(%"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1043
  %6 = load i32, i32* @y.1044
  %7 = add i32 %5, -2058343745
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2058343745
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1100227543, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1100227543, label %19
    i32 1879768317, label %27
    i32 -448474863, label %53
    i32 -546359092, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1879768317, i32 -546359092
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  store %"struct.std::_Vector_base.1"* %1, %"struct.std::_Vector_base.1"** %29, align 8
  %30 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %29, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %32) #3
  %34 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1) %33) #3
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %31, %"class.std::allocator.2"* dereferenceable(1) %34) #3
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %36 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %29, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %35, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24) %37) #3
  %38 = load i32, i32* @x.1043
  %39 = load i32, i32* @y.1044
  %40 = add i32 %38, 1936386409
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1936386409
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -448474863, i32 -546359092
  store i32 %52, i32* %15
  br label %65

; <label>:53:                                     ; preds = %16
  ret void

; <label>:54:                                     ; preds = %16
  %55 = alloca %"struct.std::_Vector_base.1"*, align 8
  %56 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %55, align 8
  store %"struct.std::_Vector_base.1"* %1, %"struct.std::_Vector_base.1"** %56, align 8
  %57 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %55, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %57, i32 0, i32 0
  %59 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %56, align 8
  %60 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %59) #3
  %61 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1) %60) #3
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %58, %"class.std::allocator.2"* dereferenceable(1) %61) #3
  %62 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %57, i32 0, i32 0
  %63 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %56, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %62, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24) %64) #3
  store i32 1879768317, i32* %15
  br label %65

; <label>:65:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  ret %"class.std::allocator.2"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1047
  %6 = load i32, i32* @y.1048
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -767652901, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -767652901, label %18
    i32 -95615875, label %38
    i32 -1567847056, label %62
    i32 1807445006, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -95615875, i32 1807445006
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %40 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %39, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %40, align 8
  %41 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %39, align 8
  %42 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %41 to %"class.std::allocator.2"*
  %43 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %40, align 8
  %44 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1) %43) #3
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %42, %"class.std::allocator.2"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %41, i32 0, i32 0
  store i64* null, i64** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %41, i32 0, i32 1
  store i64* null, i64** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %41, i32 0, i32 2
  store i64* null, i64** %47, align 8
  %48 = load i32, i32* @x.1047
  %49 = load i32, i32* @y.1048
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1567847056, i32 1807445006
  store i32 %61, i32* %14
  br label %73

; <label>:62:                                     ; preds = %15
  ret void

; <label>:63:                                     ; preds = %15
  %64 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %65, align 8
  %66 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66 to %"class.std::allocator.2"*
  %68 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %65, align 8
  %69 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1) %68) #3
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %67, %"class.std::allocator.2"* dereferenceable(1) %69) #3
  %70 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 0
  store i64* null, i64** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 1
  store i64* null, i64** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 2
  store i64* null, i64** %72, align 8
  store i32 -95615875, i32* %14
  br label %73

; <label>:73:                                     ; preds = %63, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %6, i64** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %9, i64** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %12, i64** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8), i64** dereferenceable(8)) #4 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64**, align 8
  %5 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64** %1, i64*** %4, align 8
  %6 = load i64**, i64*** %3, align 8
  %7 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %6) #3
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %5, align 8
  %9 = load i64**, i64*** %4, align 8
  %10 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %9) #3
  %11 = load i64*, i64** %10, align 8
  %12 = load i64**, i64*** %3, align 8
  store i64* %11, i64** %12, align 8
  %13 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %5) #3
  %14 = load i64*, i64** %13, align 8
  %15 = load i64**, i64*** %4, align 8
  store i64* %14, i64** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8)) #4 comdat {
  %2 = alloca i64**, align 8
  store i64** %0, i64*** %2, align 8
  %3 = load i64**, i64*** %2, align 8
  ret i64** %3
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s342357335.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noinline noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
